
class ZCL_ZSUI5_CM_GESTION_T_DPC definition
  public
  inheriting from /IWBEP/CL_MGW_PUSH_ABS_DATA
  abstract
  create public .

public section.

  interfaces /IWBEP/IF_SB_DPC_COMM_SERVICES .
  interfaces /IWBEP/IF_SB_GENDPC_SHLP_DATA .
  interfaces /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY
    redefinition .
protected section.

  data mo_injection type ref to /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods MATERIALESDEVSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_MATERIALESDEV
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESDEVSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MATERIALESDEV
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESDEVSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESDEVSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MATERIALESDEV
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods IMPRESIONDOCUMEN_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_IMPRESIONDOCUMENTOS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods IMPRESIONDOCUMEN_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_IMPRESIONDOCUMENTOS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods IMPRESIONDOCUMEN_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_IMPRESIONDOCUMENTOS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods IMPRESIONDOCUMEN_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods IMPRESIONDOCUMEN_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_IMPRESIONDOCUMENTOS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_ENTREGASTRANSPORTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_ENTREGASTRANSPORTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_ENTREGASTRANSPORTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_ENTREGASTRANSPORTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORTES_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATRANSPORTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORTES_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDATRANSPORTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORTES_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATRANSPORTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORTES_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORTES_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATRANSPORTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORT01_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATRANSPORTISTA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORT01_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDATRANSPORTISTA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORT01_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATRANSPORTISTA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORT01_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATRANSPORT01_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATRANSPORTISTA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATIPOPALLET
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDATIPOPALLET
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_TRANSPORTES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_TRANSPORTES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_TRANSPORTES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_TRANSPORTES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TIPOMENSAJESIMPR_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_TIPOMENSAJESIMPRESION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TIPOMENSAJESIMPR_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_TIPOMENSAJESIMPRESION
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TIPOMENSAJESIMPR_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_TIPOMENSAJESIMPRESION
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TIPOMENSAJESIMPR_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TIPOMENSAJESIMPR_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_TIPOMENSAJESIMPRESION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_POSICIONESENTREGA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_POSICIONESENTREGA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_POSICIONESENTREGA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_POSICIONESENTREGA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MENSAJES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_MENSAJES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MENSAJES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MENSAJES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MATERIALES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_MATERIALES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MATERIALES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MATERIALES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MATERIALESDEVSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_MATERIALESDEV
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATIPOPALLET
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAINCOTERMSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAINCOTERM
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDADESTINATARI_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDADESTINATARIO
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDADESTINATARI_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDADESTINATARIO
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDADESTINATARI_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDADESTINATARIO
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDADESTINATARI_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDADESTINATARI_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDADESTINATARIO
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACONDUCTORSE_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACONDUCTOR
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACONDUCTORSE_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDACONDUCTOR
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACONDUCTORSE_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACONDUCTOR
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACONDUCTORSE_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACONDUCTORSE_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACONDUCTOR
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACLIENTESDES_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACLIENTESDEST
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACLIENTESDES_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDACLIENTESDEST
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACLIENTESDES_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACLIENTESDEST
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACLIENTESDES_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACLIENTESDES_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACLIENTESDEST
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACENTROSSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACENTROS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACENTROSSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDACENTROS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACENTROSSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACENTROS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACENTROSSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDACENTROSSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDACENTROS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAALMACENESSE_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAALMACENES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAALMACENESSE_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDAALMACENES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAALMACENESSE_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAALMACENES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAALMACENESSE_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAALMACENESSE_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAALMACENES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDATIPOPALLET
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDARUTASET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDARUTA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDARUTASET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDARUTA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDARUTASET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDARUTA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDARUTASET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDARUTASET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDARUTA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPUESTOEXPED_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAPUESTOEXPEDICION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPUESTOEXPED_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDAPUESTOEXPEDICION
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPUESTOEXPED_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAPUESTOEXPEDICION
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPUESTOEXPED_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPUESTOEXPED_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAPUESTOEXPEDICION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAMOTIVOPEDID_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAMOTIVOPEDIDO
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAMOTIVOPEDID_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDAMOTIVOPEDIDO
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAMOTIVOPEDID_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAMOTIVOPEDIDO
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAMOTIVOPEDID_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAMOTIVOPEDID_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAMOTIVOPEDIDO
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDALOTESET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDALOTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDALOTESET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDALOTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDALOTESET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDALOTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDALOTESET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDALOTESET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDALOTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAINCOTERMSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAINCOTERM
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAINCOTERMSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_GESTION_T_MPC=>TT_AYUDAINCOTERM
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAINCOTERMSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_GESTION_T_MPC=>TS_AYUDAINCOTERM
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAINCOTERMSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .

  methods CHECK_SUBSCRIPTION_AUTHORITY
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_GESTION_T_DPC definition
class ZCL_ZSUI5_CM_GESTION_T_DPC implementation.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_CRT_ENTITY_BASE
*&* This class has been generated on 27.06.2024 16:44:35 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_GESTION_T_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA ayudaalmacenesse_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaalmacenes.
 DATA ayudatipopallets_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatipopallet.
 DATA ayudacentrosset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudacentros.
 DATA ayudaclientesdes_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaclientesdest.
 DATA ayudaloteset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudalote.
 DATA transportesset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_transportes.
 DATA mensajesset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_mensajes.
 DATA impresiondocumen_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_impresiondocumentos.
 DATA materialesdevset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_materialesdev.
 DATA entregastranspor_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_entregastransporte.
 DATA posicionesentreg_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_posicionesentrega.
 DATA materialesset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_materiales.
 DATA ayudapuestoexped_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudapuestoexpedicion.
 DATA tipomensajesimpr_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_tipomensajesimpresion.
 DATA ayudaincotermset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaincoterm.
 DATA ayudarutaset_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaruta.
 DATA ayudaconductorse_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaconductor.
 DATA ayudamotivopedid_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudamotivopedido.
 DATA ayudatransportes_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatransporte.
 DATA ayudatransport01_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatransportista.
 DATA ayudadestinatari_create_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudadestinatario.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaAlmacenesSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaAlmacenesSet'.
*     Call the entity set generated method
    ayudaalmacenesse_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudaalmacenesse_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudaalmacenesse_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
    ayudatipopallets_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudatipopallets_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudatipopallets_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaCentrosSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaCentrosSet'.
*     Call the entity set generated method
    ayudacentrosset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudacentrosset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudacentrosset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaClientesDestSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaClientesDestSet'.
*     Call the entity set generated method
    ayudaclientesdes_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudaclientesdes_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudaclientesdes_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaLoteSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaLoteSet'.
*     Call the entity set generated method
    ayudaloteset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudaloteset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudaloteset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
     WHEN 'TransportesSet'.
*     Call the entity set generated method
    transportesset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = transportesset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = transportesset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
     WHEN 'MensajesSet'.
*     Call the entity set generated method
    mensajesset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = mensajesset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = mensajesset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  ImpresionDocumentosSet
*-------------------------------------------------------------------------*
     WHEN 'ImpresionDocumentosSet'.
*     Call the entity set generated method
    impresiondocumen_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = impresiondocumen_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = impresiondocumen_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesDevSet
*-------------------------------------------------------------------------*
     WHEN 'MaterialesDevSet'.
*     Call the entity set generated method
    materialesdevset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = materialesdevset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = materialesdevset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
     WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
    entregastranspor_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = entregastranspor_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = entregastranspor_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
     WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
    posicionesentreg_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = posicionesentreg_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = posicionesentreg_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesSet
*-------------------------------------------------------------------------*
     WHEN 'MaterialesSet'.
*     Call the entity set generated method
    materialesset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = materialesset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = materialesset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaPuestoExpedicionSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaPuestoExpedicionSet'.
*     Call the entity set generated method
    ayudapuestoexped_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudapuestoexped_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudapuestoexped_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  TipoMensajesImpresionSet
*-------------------------------------------------------------------------*
     WHEN 'TipoMensajesImpresionSet'.
*     Call the entity set generated method
    tipomensajesimpr_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = tipomensajesimpr_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = tipomensajesimpr_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaIncotermSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaIncotermSet'.
*     Call the entity set generated method
    ayudaincotermset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudaincotermset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudaincotermset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaRutaSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaRutaSet'.
*     Call the entity set generated method
    ayudarutaset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudarutaset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudarutaset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaConductorSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaConductorSet'.
*     Call the entity set generated method
    ayudaconductorse_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudaconductorse_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudaconductorse_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMotivoPedidoSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaMotivoPedidoSet'.
*     Call the entity set generated method
    ayudamotivopedid_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudamotivopedid_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudamotivopedid_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransporteSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaTransporteSet'.
*     Call the entity set generated method
    ayudatransportes_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudatransportes_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudatransportes_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransportistaSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaTransportistaSet'.
*     Call the entity set generated method
    ayudatransport01_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudatransport01_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudatransport01_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaDestinatarioSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaDestinatarioSet'.
*     Call the entity set generated method
    ayudadestinatari_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudadestinatari_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudadestinatari_create_entity
      CHANGING
        cr_data = er_entity
   ).

  when others.
    super->/iwbep/if_mgw_appl_srv_runtime~create_entity(
       EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         io_data_provider   = io_data_provider
         it_key_tab = it_key_tab
         it_navigation_path = it_navigation_path
      IMPORTING
        er_entity = er_entity
  ).
ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_DEL_ENTITY_BASE
*&* This class has been generated on 27.06.2024 16:44:35 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_GESTION_T_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
      when 'MensajesSet'.
*     Call the entity set generated method
     mensajesset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesDevSet
*-------------------------------------------------------------------------*
      when 'MaterialesDevSet'.
*     Call the entity set generated method
     materialesdevset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  ImpresionDocumentosSet
*-------------------------------------------------------------------------*
      when 'ImpresionDocumentosSet'.
*     Call the entity set generated method
     impresiondocumen_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaClientesDestSet
*-------------------------------------------------------------------------*
      when 'AyudaClientesDestSet'.
*     Call the entity set generated method
     ayudaclientesdes_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
      when 'EntregasTransporteSet'.
*     Call the entity set generated method
     entregastranspor_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransportistaSet
*-------------------------------------------------------------------------*
      when 'AyudaTransportistaSet'.
*     Call the entity set generated method
     ayudatransport01_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
      when 'PosicionesEntregaSet'.
*     Call the entity set generated method
     posicionesentreg_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
      when 'TransportesSet'.
*     Call the entity set generated method
     transportesset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
      when 'AyudaTipoPalletSet'.
*     Call the entity set generated method
     ayudatipopallets_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesSet
*-------------------------------------------------------------------------*
      when 'MaterialesSet'.
*     Call the entity set generated method
     materialesset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMotivoPedidoSet
*-------------------------------------------------------------------------*
      when 'AyudaMotivoPedidoSet'.
*     Call the entity set generated method
     ayudamotivopedid_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaCentrosSet
*-------------------------------------------------------------------------*
      when 'AyudaCentrosSet'.
*     Call the entity set generated method
     ayudacentrosset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaPuestoExpedicionSet
*-------------------------------------------------------------------------*
      when 'AyudaPuestoExpedicionSet'.
*     Call the entity set generated method
     ayudapuestoexped_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaLoteSet
*-------------------------------------------------------------------------*
      when 'AyudaLoteSet'.
*     Call the entity set generated method
     ayudaloteset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransporteSet
*-------------------------------------------------------------------------*
      when 'AyudaTransporteSet'.
*     Call the entity set generated method
     ayudatransportes_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaIncotermSet
*-------------------------------------------------------------------------*
      when 'AyudaIncotermSet'.
*     Call the entity set generated method
     ayudaincotermset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaDestinatarioSet
*-------------------------------------------------------------------------*
      when 'AyudaDestinatarioSet'.
*     Call the entity set generated method
     ayudadestinatari_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  TipoMensajesImpresionSet
*-------------------------------------------------------------------------*
      when 'TipoMensajesImpresionSet'.
*     Call the entity set generated method
     tipomensajesimpr_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaConductorSet
*-------------------------------------------------------------------------*
      when 'AyudaConductorSet'.
*     Call the entity set generated method
     ayudaconductorse_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaAlmacenesSet
*-------------------------------------------------------------------------*
      when 'AyudaAlmacenesSet'.
*     Call the entity set generated method
     ayudaalmacenesse_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaRutaSet
*-------------------------------------------------------------------------*
      when 'AyudaRutaSet'.
*     Call the entity set generated method
     ayudarutaset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

   when others.
     super->/iwbep/if_mgw_appl_srv_runtime~delete_entity(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_key_tab = it_key_tab
          it_navigation_path = it_navigation_path
 ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY.
*&-----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_GETENTITY_BASE
*&* This class has been generated  on 27.06.2024 16:44:35 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_GESTION_T_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA ayudaclientesdes_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaclientesdest.
 DATA ayudacentrosset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudacentros.
 DATA ayudaalmacenesse_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaalmacenes.
 DATA ayudatransportes_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatransporte.
 DATA ayudatipopallets_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatipopallet.
 DATA impresiondocumen_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_impresiondocumentos.
 DATA ayudaloteset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudalote.
 DATA transportesset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_transportes.
 DATA ayudatransport01_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatransportista.
 DATA mensajesset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_mensajes.
 DATA materialesdevset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_materialesdev.
 DATA entregastranspor_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_entregastransporte.
 DATA tipomensajesimpr_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_tipomensajesimpresion.
 DATA posicionesentreg_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_posicionesentrega.
 DATA ayudadestinatari_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudadestinatario.
 DATA materialesset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_materiales.
 DATA ayudapuestoexped_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudapuestoexpedicion.
 DATA ayudaincotermset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaincoterm.
 DATA ayudarutaset_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaruta.
 DATA ayudaconductorse_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaconductor.
 DATA ayudamotivopedid_get_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudamotivopedido.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data.       "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaClientesDestSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaClientesDestSet'.
*     Call the entity set generated method
          ayudaclientesdes_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaclientesdes_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudaclientesdes_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaclientesdes_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaCentrosSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaCentrosSet'.
*     Call the entity set generated method
          ayudacentrosset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudacentrosset_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudacentrosset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudacentrosset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaAlmacenesSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaAlmacenesSet'.
*     Call the entity set generated method
          ayudaalmacenesse_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaalmacenesse_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudaalmacenesse_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaalmacenesse_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransporteSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTransporteSet'.
*     Call the entity set generated method
          ayudatransportes_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatransportes_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudatransportes_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatransportes_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
          ayudatipopallets_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipopallets_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudatipopallets_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipopallets_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  ImpresionDocumentosSet
*-------------------------------------------------------------------------*
      WHEN 'ImpresionDocumentosSet'.
*     Call the entity set generated method
          impresiondocumen_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = impresiondocumen_get_entity
                         es_response_context = es_response_context
          ).

        IF impresiondocumen_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = impresiondocumen_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaLoteSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaLoteSet'.
*     Call the entity set generated method
          ayudaloteset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaloteset_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudaloteset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaloteset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
      WHEN 'TransportesSet'.
*     Call the entity set generated method
          transportesset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = transportesset_get_entity
                         es_response_context = es_response_context
          ).

        IF transportesset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = transportesset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransportistaSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTransportistaSet'.
*     Call the entity set generated method
          ayudatransport01_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatransport01_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudatransport01_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatransport01_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
      WHEN 'MensajesSet'.
*     Call the entity set generated method
          mensajesset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = mensajesset_get_entity
                         es_response_context = es_response_context
          ).

        IF mensajesset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = mensajesset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesDevSet
*-------------------------------------------------------------------------*
      WHEN 'MaterialesDevSet'.
*     Call the entity set generated method
          materialesdevset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = materialesdevset_get_entity
                         es_response_context = es_response_context
          ).

        IF materialesdevset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = materialesdevset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
      WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
          entregastranspor_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregastranspor_get_entity
                         es_response_context = es_response_context
          ).

        IF entregastranspor_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregastranspor_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  TipoMensajesImpresionSet
*-------------------------------------------------------------------------*
      WHEN 'TipoMensajesImpresionSet'.
*     Call the entity set generated method
          tipomensajesimpr_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = tipomensajesimpr_get_entity
                         es_response_context = es_response_context
          ).

        IF tipomensajesimpr_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = tipomensajesimpr_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
      WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
          posicionesentreg_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = posicionesentreg_get_entity
                         es_response_context = es_response_context
          ).

        IF posicionesentreg_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = posicionesentreg_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaDestinatarioSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaDestinatarioSet'.
*     Call the entity set generated method
          ayudadestinatari_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudadestinatari_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudadestinatari_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudadestinatari_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesSet
*-------------------------------------------------------------------------*
      WHEN 'MaterialesSet'.
*     Call the entity set generated method
          materialesset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = materialesset_get_entity
                         es_response_context = es_response_context
          ).

        IF materialesset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = materialesset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaPuestoExpedicionSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaPuestoExpedicionSet'.
*     Call the entity set generated method
          ayudapuestoexped_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudapuestoexped_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudapuestoexped_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudapuestoexped_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaIncotermSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaIncotermSet'.
*     Call the entity set generated method
          ayudaincotermset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaincotermset_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudaincotermset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaincotermset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaRutaSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaRutaSet'.
*     Call the entity set generated method
          ayudarutaset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudarutaset_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudarutaset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudarutaset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaConductorSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaConductorSet'.
*     Call the entity set generated method
          ayudaconductorse_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaconductorse_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudaconductorse_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaconductorse_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMotivoPedidoSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaMotivoPedidoSet'.
*     Call the entity set generated method
          ayudamotivopedid_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudamotivopedid_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudamotivopedid_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudamotivopedid_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.

      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~get_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TMP_ENTITYSET_BASE
*&* This class has been generated on 27.06.2024 16:44:35 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_GESTION_T_DPC_EXT
*&-----------------------------------------------------------------------------------------------*
 DATA ayudaclientesdes_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudaclientesdest.
 DATA ayudatransport01_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudatransportista.
 DATA transportesset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_transportes.
 DATA impresiondocumen_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_impresiondocumentos.
 DATA ayudatipopallets_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudatipopallet.
 DATA mensajesset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_mensajes.
 DATA ayudarutaset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudaruta.
 DATA ayudamotivopedid_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudamotivopedido.
 DATA ayudaconductorse_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudaconductor.
 DATA materialesdevset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_materialesdev.
 DATA ayudaincotermset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudaincoterm.
 DATA tipomensajesimpr_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_tipomensajesimpresion.
 DATA ayudacentrosset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudacentros.
 DATA entregastranspor_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_entregastransporte.
 DATA ayudatransportes_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudatransporte.
 DATA ayudadestinatari_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudadestinatario.
 DATA posicionesentreg_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_posicionesentrega.
 DATA ayudapuestoexped_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudapuestoexpedicion.
 DATA ayudaalmacenesse_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudaalmacenes.
 DATA materialesset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_materiales.
 DATA ayudaloteset_get_entityset TYPE zcl_zsui5_cm_gestion_t_mpc=>tt_ayudalote.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaClientesDestSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaClientesDestSet'.
*     Call the entity set generated method
      ayudaclientesdes_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudaclientesdes_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudaclientesdes_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransportistaSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaTransportistaSet'.
*     Call the entity set generated method
      ayudatransport01_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudatransport01_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudatransport01_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
   WHEN 'TransportesSet'.
*     Call the entity set generated method
      transportesset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = transportesset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = transportesset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  ImpresionDocumentosSet
*-------------------------------------------------------------------------*
   WHEN 'ImpresionDocumentosSet'.
*     Call the entity set generated method
      impresiondocumen_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = impresiondocumen_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = impresiondocumen_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
      ayudatipopallets_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudatipopallets_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudatipopallets_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
   WHEN 'MensajesSet'.
*     Call the entity set generated method
      mensajesset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = mensajesset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = mensajesset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaRutaSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaRutaSet'.
*     Call the entity set generated method
      ayudarutaset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudarutaset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudarutaset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMotivoPedidoSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaMotivoPedidoSet'.
*     Call the entity set generated method
      ayudamotivopedid_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudamotivopedid_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudamotivopedid_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaConductorSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaConductorSet'.
*     Call the entity set generated method
      ayudaconductorse_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudaconductorse_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudaconductorse_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesDevSet
*-------------------------------------------------------------------------*
   WHEN 'MaterialesDevSet'.
*     Call the entity set generated method
      materialesdevset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = materialesdevset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = materialesdevset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaIncotermSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaIncotermSet'.
*     Call the entity set generated method
      ayudaincotermset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudaincotermset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudaincotermset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  TipoMensajesImpresionSet
*-------------------------------------------------------------------------*
   WHEN 'TipoMensajesImpresionSet'.
*     Call the entity set generated method
      tipomensajesimpr_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = tipomensajesimpr_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = tipomensajesimpr_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaCentrosSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaCentrosSet'.
*     Call the entity set generated method
      ayudacentrosset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudacentrosset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudacentrosset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
   WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
      entregastranspor_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = entregastranspor_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = entregastranspor_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransporteSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaTransporteSet'.
*     Call the entity set generated method
      ayudatransportes_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudatransportes_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudatransportes_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaDestinatarioSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaDestinatarioSet'.
*     Call the entity set generated method
      ayudadestinatari_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudadestinatari_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudadestinatari_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
   WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
      posicionesentreg_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = posicionesentreg_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = posicionesentreg_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaPuestoExpedicionSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaPuestoExpedicionSet'.
*     Call the entity set generated method
      ayudapuestoexped_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudapuestoexped_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudapuestoexped_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaAlmacenesSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaAlmacenesSet'.
*     Call the entity set generated method
      ayudaalmacenesse_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudaalmacenesse_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudaalmacenesse_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesSet
*-------------------------------------------------------------------------*
   WHEN 'MaterialesSet'.
*     Call the entity set generated method
      materialesset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = materialesset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = materialesset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaLoteSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaLoteSet'.
*     Call the entity set generated method
      ayudaloteset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudaloteset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudaloteset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

    WHEN OTHERS.
      super->/iwbep/if_mgw_appl_srv_runtime~get_entityset(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_filter_select_options = it_filter_select_options
          it_order = it_order
          is_paging = is_paging
          it_navigation_path = it_navigation_path
          it_key_tab = it_key_tab
          iv_filter_string = iv_filter_string
          iv_search_string = iv_search_string
          io_tech_request_context = io_tech_request_context
       IMPORTING
         er_entityset = er_entityset ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_UPD_ENTITY_BASE
*&* This class has been generated on 27.06.2024 16:44:35 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_GESTION_T_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA impresiondocumen_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_impresiondocumentos.
 DATA tipomensajesimpr_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_tipomensajesimpresion.
 DATA ayudamotivopedid_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudamotivopedido.
 DATA ayudatipopallets_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatipopallet.
 DATA ayudaalmacenesse_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaalmacenes.
 DATA ayudacentrosset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudacentros.
 DATA ayudaclientesdes_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaclientesdest.
 DATA ayudaloteset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudalote.
 DATA transportesset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_transportes.
 DATA mensajesset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_mensajes.
 DATA materialesdevset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_materialesdev.
 DATA entregastranspor_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_entregastransporte.
 DATA posicionesentreg_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_posicionesentrega.
 DATA materialesset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_materiales.
 DATA ayudapuestoexped_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudapuestoexpedicion.
 DATA ayudaincotermset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaincoterm.
 DATA ayudarutaset_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaruta.
 DATA ayudaconductorse_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudaconductor.
 DATA ayudadestinatari_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudadestinatario.
 DATA ayudatransport01_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatransportista.
 DATA ayudatransportes_update_entity TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_ayudatransporte.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data. "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  ImpresionDocumentosSet
*-------------------------------------------------------------------------*
      WHEN 'ImpresionDocumentosSet'.
*     Call the entity set generated method
          impresiondocumen_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = impresiondocumen_update_entity
          ).
       IF impresiondocumen_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = impresiondocumen_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  TipoMensajesImpresionSet
*-------------------------------------------------------------------------*
      WHEN 'TipoMensajesImpresionSet'.
*     Call the entity set generated method
          tipomensajesimpr_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = tipomensajesimpr_update_entity
          ).
       IF tipomensajesimpr_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = tipomensajesimpr_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMotivoPedidoSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaMotivoPedidoSet'.
*     Call the entity set generated method
          ayudamotivopedid_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudamotivopedid_update_entity
          ).
       IF ayudamotivopedid_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudamotivopedid_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
          ayudatipopallets_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipopallets_update_entity
          ).
       IF ayudatipopallets_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipopallets_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaAlmacenesSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaAlmacenesSet'.
*     Call the entity set generated method
          ayudaalmacenesse_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaalmacenesse_update_entity
          ).
       IF ayudaalmacenesse_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaalmacenesse_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaCentrosSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaCentrosSet'.
*     Call the entity set generated method
          ayudacentrosset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudacentrosset_update_entity
          ).
       IF ayudacentrosset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudacentrosset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaClientesDestSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaClientesDestSet'.
*     Call the entity set generated method
          ayudaclientesdes_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaclientesdes_update_entity
          ).
       IF ayudaclientesdes_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaclientesdes_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaLoteSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaLoteSet'.
*     Call the entity set generated method
          ayudaloteset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaloteset_update_entity
          ).
       IF ayudaloteset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaloteset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
      WHEN 'TransportesSet'.
*     Call the entity set generated method
          transportesset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = transportesset_update_entity
          ).
       IF transportesset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = transportesset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
      WHEN 'MensajesSet'.
*     Call the entity set generated method
          mensajesset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = mensajesset_update_entity
          ).
       IF mensajesset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = mensajesset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesDevSet
*-------------------------------------------------------------------------*
      WHEN 'MaterialesDevSet'.
*     Call the entity set generated method
          materialesdevset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = materialesdevset_update_entity
          ).
       IF materialesdevset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = materialesdevset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
      WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
          entregastranspor_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregastranspor_update_entity
          ).
       IF entregastranspor_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregastranspor_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
      WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
          posicionesentreg_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = posicionesentreg_update_entity
          ).
       IF posicionesentreg_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = posicionesentreg_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MaterialesSet
*-------------------------------------------------------------------------*
      WHEN 'MaterialesSet'.
*     Call the entity set generated method
          materialesset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = materialesset_update_entity
          ).
       IF materialesset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = materialesset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaPuestoExpedicionSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaPuestoExpedicionSet'.
*     Call the entity set generated method
          ayudapuestoexped_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudapuestoexped_update_entity
          ).
       IF ayudapuestoexped_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudapuestoexped_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaIncotermSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaIncotermSet'.
*     Call the entity set generated method
          ayudaincotermset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaincotermset_update_entity
          ).
       IF ayudaincotermset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaincotermset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaRutaSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaRutaSet'.
*     Call the entity set generated method
          ayudarutaset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudarutaset_update_entity
          ).
       IF ayudarutaset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudarutaset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaConductorSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaConductorSet'.
*     Call the entity set generated method
          ayudaconductorse_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaconductorse_update_entity
          ).
       IF ayudaconductorse_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaconductorse_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaDestinatarioSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaDestinatarioSet'.
*     Call the entity set generated method
          ayudadestinatari_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudadestinatari_update_entity
          ).
       IF ayudadestinatari_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudadestinatari_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransportistaSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTransportistaSet'.
*     Call the entity set generated method
          ayudatransport01_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatransport01_update_entity
          ).
       IF ayudatransport01_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatransport01_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTransporteSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTransporteSet'.
*     Call the entity set generated method
          ayudatransportes_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatransportes_update_entity
          ).
       IF ayudatransportes_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatransportes_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~update_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             io_data_provider   = io_data_provider
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~COMMIT_WORK.
* Call RFC commit work functionality
DATA lt_message      TYPE bapiret2. "#EC NEEDED
DATA lv_message_text TYPE BAPI_MSG.
DATA lo_logger       TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_subrc        TYPE syst-subrc.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

  IF iv_rfc_dest IS INITIAL OR iv_rfc_dest EQ 'NONE'.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
      wait   = abap_true
    IMPORTING
      return = lt_message.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      DESTINATION iv_rfc_dest
    EXPORTING
      wait                  = abap_true
    IMPORTING
      return                = lt_message
    EXCEPTIONS
      communication_failure = 1000 MESSAGE lv_message_text
      system_failure        = 1001 MESSAGE lv_message_text
      OTHERS                = 1002.

  IF sy-subrc <> 0.
    lv_subrc = sy-subrc.
    /iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
        EXPORTING
          iv_subrc            = lv_subrc
          iv_exp_message_text = lv_message_text
          io_logger           = lo_logger ).
  ENDIF.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~GET_GENERATION_STRATEGY.
* Get generation strategy
  rv_generation_strategy = '1'.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~LOG_MESSAGE.
* Log message in the application log
DATA lo_logger TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_text TYPE /iwbep/sup_msg_longtext.

  MESSAGE ID iv_msg_id TYPE iv_msg_type NUMBER iv_msg_number
    WITH iv_msg_v1 iv_msg_v2 iv_msg_v3 iv_msg_v4 INTO lv_text.

  lo_logger = mo_context->get_logger( ).
  lo_logger->log_message(
    EXPORTING
     iv_msg_type   = iv_msg_type
     iv_msg_id     = iv_msg_id
     iv_msg_number = iv_msg_number
     iv_msg_text   = lv_text
     iv_msg_v1     = iv_msg_v1
     iv_msg_v2     = iv_msg_v2
     iv_msg_v3     = iv_msg_v3
     iv_msg_v4     = iv_msg_v4
     iv_agent      = 'DPC' ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_EXCEPTION_HANDLING.
* RFC call exception handling
DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

/iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
  EXPORTING
    iv_subrc            = iv_subrc
    iv_exp_message_text = iv_exp_message_text
    io_logger           = lo_logger ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_SAVE_LOG.
  DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.
  DATA lo_message_container TYPE REF TO /iwbep/if_message_container.

  lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
  lo_message_container = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).

  " Save the RFC call log in the application log
  /iwbep/cl_sb_gen_dpc_rt_util=>rfc_save_log(
    EXPORTING
      is_return            = is_return
      iv_entity_type       = iv_entity_type
      it_return            = it_return
      it_key_tab           = it_key_tab
      io_logger            = lo_logger
      io_message_container = lo_message_container ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~SET_INJECTION.
* Unit test injection
  IF io_unit IS BOUND.
    mo_injection = io_unit.
  ELSE.
    mo_injection = me.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_GENDPC_SHLP_DATA~GET_SEARCH_HELP_VALUES.
* Call to Search Help run time mechanism to get values
  DATA lo_sh_data TYPE REF TO /iwbep/if_sb_shlp_data.

  CLEAR: et_return_list, es_message.
  lo_sh_data = /iwbep/cl_sb_shlp_data_factory=>get_sh_data_obj( ).

  lo_sh_data->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
    EXPORTING
      iv_shlp_name  = iv_shlp_name
      iv_maxrows  = iv_maxrows
      iv_sort = iv_sort
      iv_call_shlt_exit = iv_call_shlt_exit
      it_selopt = it_selopt
    IMPORTING
      et_return_list = et_return_list
      es_message = es_message ).
  endmethod.
  method AYUDAALMACENESSE_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAALMACENESSE_CREATE_ENTITY'.
  endmethod.
  method AYUDAALMACENESSE_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAALMACENESSE_DELETE_ENTITY'.
  endmethod.
  method AYUDAALMACENESSE_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_lgort TYPE zif_zui5_cm_get_almacenes=>lgort_d.
 DATA i_werks TYPE zif_zui5_cm_get_almacenes=>werks_d.
 DATA e_data  TYPE zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
 DATA e_return  TYPE zif_zui5_cm_get_almacenes=>bapiret2_t.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_almacenes=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'AyudaAlmacenesSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_werks = ls_converted_keys-werks.
 i_lgort = ls_converted_keys-lgort.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ALMACENES'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_werks        = i_werks
           i_lgort        = i_lgort
         IMPORTING
           e_return       = e_return
           e_data         = e_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_werks               = i_werks
       i_lgort               = i_lgort
     IMPORTING
       e_return              = e_return
       e_data                = e_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE e_data INTO ls_e_data INDEX 1.
 er_entity-lgobe = ls_e_data-lgobe.
 er_entity-werks = ls_e_data-werks.
 er_entity-lgort = ls_e_data-lgort.
  endmethod.
  method AYUDAALMACENESSE_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA e_data  TYPE zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
 DATA e_return  TYPE zif_zui5_cm_get_almacenes=>bapiret2_t.
 DATA ir_lgort  TYPE zif_zui5_cm_get_almacenes=>range_t_lgort_d.
 DATA ir_logbe  TYPE zif_zui5_cm_get_almacenes=>rseloption.
 DATA ir_werks  TYPE zif_zui5_cm_get_almacenes=>range_t_werks_d.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_almacenes=>bapiret2_t.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_almacenes=>range_t_lgort_d.
 DATA ls_ir_logbe  TYPE LINE OF zif_zui5_cm_get_almacenes=>rseloption.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_almacenes=>range_t_werks_d.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lv_source_entity_set_name TYPE string.
 DATA ayudacentrosset_get_entityset TYPE LINE OF zcl_zsui5_cm_gestion_t_mpc=>tt_ayudacentros.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_lgobe LIKE RANGE OF ls_converted_keys-lgobe.
 DATA ls_lgobe LIKE LINE OF lr_lgobe.
 DATA lr_lgort_multiple LIKE RANGE OF ls_converted_keys-lgort_multiple.
 DATA ls_lgort_multiple LIKE LINE OF lr_lgort_multiple.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_e_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps key fields to function module parameters
 IF it_key_tab IS NOT INITIAL.

   lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

   IF  lv_source_entity_set_name = 'AyudaCentrosSet'.
     " Convert keys to appropriate entity set structure
     io_tech_request_context->get_converted_source_keys(
       IMPORTING
         es_key_values  = ayudacentrosset_get_entityset ).
     ls_ir_werks-low = ayudacentrosset_get_entityset-werks. " Equivalent to 'Werks' property in the service
     ls_ir_werks-option = 'EQ'.
     ls_ir_werks-sign = 'I'.
     APPEND ls_ir_werks TO ir_werks.

   ENDIF.

 ENDIF.

 IF it_filter_select_options IS NOT INITIAL.

* Maps filter table lines to function module parameters
   LOOP AT lt_filter_select_options INTO ls_filter.

     CASE ls_filter-property.
       WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_werks ).

         LOOP AT lr_werks INTO ls_werks.
           ls_ir_werks-high = ls_werks-high.
           ls_ir_werks-low = ls_werks-low.
           ls_ir_werks-option = ls_werks-option.
           ls_ir_werks-sign = ls_werks-sign.
           APPEND ls_ir_werks TO ir_werks.
         ENDLOOP.
         CLEAR lr_werks.
       WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_lgort ).

         LOOP AT lr_lgort INTO ls_lgort.
           ls_ir_lgort-high = ls_lgort-high.
           ls_ir_lgort-low = ls_lgort-low.
           ls_ir_lgort-option = ls_lgort-option.
           ls_ir_lgort-sign = ls_lgort-sign.
           APPEND ls_ir_lgort TO ir_lgort.
         ENDLOOP.
         CLEAR lr_lgort.
       WHEN 'LGOBE'.              " Equivalent to 'Lgobe' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_lgobe ).

         LOOP AT lr_lgobe INTO ls_lgobe.
           ls_ir_logbe-high = ls_lgobe-high.
           ls_ir_logbe-low = ls_lgobe-low.
           ls_ir_logbe-option = ls_lgobe-option.
           ls_ir_logbe-sign = ls_lgobe-sign.
           APPEND ls_ir_logbe TO ir_logbe.
         ENDLOOP.
         CLEAR lr_lgobe.
       WHEN 'LGORT_MULTIPLE'.              " Equivalent to 'LgortMultiple' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_lgort_multiple ).

         LOOP AT lr_lgort_multiple INTO ls_lgort_multiple.
           ls_ir_lgort-sign = ls_lgort_multiple-sign.
           ls_ir_lgort-option = ls_lgort_multiple-option.
           ls_ir_lgort-low = ls_lgort_multiple-low.
           ls_ir_lgort-high = ls_lgort_multiple-high.
           APPEND ls_ir_lgort TO ir_lgort.
         ENDLOOP.
         CLEAR lr_lgort_multiple.

       WHEN OTHERS.
         " Log message in the application log
         me->/iwbep/if_sb_dpc_comm_services~log_message(
           EXPORTING
             iv_msg_type   = 'E'
             iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
             iv_msg_number = 020
             iv_msg_v1     = ls_filter-property ).
         " Raise Exception
         RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
           EXPORTING
             textid = /iwbep/cx_mgw_tech_exception=>internal_error.
     ENDCASE.

   ENDLOOP.

 ENDIF.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ALMACENES'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_werks       = ir_werks
           ir_lgort       = ir_lgort
           ir_logbe       = ir_logbe
         IMPORTING
           e_return       = e_return
           e_data         = e_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_werks              = ir_werks
       ir_lgort              = ir_lgort
       ir_logbe              = ir_logbe
     IMPORTING
       e_return              = e_return
       e_data                = e_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( e_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT e_data INTO ls_e_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_e_data-werks = ls_e_data-werks.
   ls_gw_e_data-lgort = ls_e_data-lgort.
   ls_gw_e_data-lgobe = ls_e_data-lgobe.
   APPEND ls_gw_e_data TO et_entityset.
   CLEAR ls_gw_e_data.
 ENDLOOP.

  endmethod.
  method AYUDAALMACENESSE_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAALMACENESSE_UPDATE_ENTITY'.
  endmethod.
  method AYUDACENTROSSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACENTROSSET_CREATE_ENTITY'.
  endmethod.
  method AYUDACENTROSSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACENTROSSET_DELETE_ENTITY'.
  endmethod.
  method AYUDACENTROSSET_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lv_max_hits TYPE i VALUE 1.
DATA ls_converted_keys LIKE er_entity.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA lv_source_entity_set_name TYPE string.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
io_tech_request_context->get_converted_keys(
  IMPORTING
    es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

ls_selopt-sign = 'I'.
ls_selopt-option = 'EQ'.
ls_selopt-low = ls_converted_keys-werks.
ls_selopt-shlpfield = 'WERKS'.
ls_selopt-shlpname = 'H_T001W'.
APPEND ls_selopt TO lt_selopt.
CLEAR ls_selopt.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'H_T001W'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR er_entity.
LOOP AT lt_result_list INTO ls_result_list.

  " Move SH results to GW request responce table
  CASE ls_result_list-field_name.
    WHEN 'CITY1'.
      er_entity-city1 = ls_result_list-field_value.
    WHEN 'NAME1'.
      er_entity-name1 = ls_result_list-field_value.
    WHEN 'NAME2'.
      er_entity-name2 = ls_result_list-field_value.
    WHEN 'NATION'.
      er_entity-nation = ls_result_list-field_value.
    WHEN 'POST_CODE1'.
      er_entity-post_code1 = ls_result_list-field_value.
    WHEN 'SORT1'.
      er_entity-sort1 = ls_result_list-field_value.
    WHEN 'SORT2'.
      er_entity-sort2 = ls_result_list-field_value.
    WHEN 'WERKS'.
      er_entity-werks = ls_result_list-field_value.
  ENDCASE.

ENDLOOP.

  endmethod.
  method AYUDACENTROSSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
DATA ls_werks LIKE LINE OF lr_werks.
DATA lr_sort2 LIKE RANGE OF ls_converted_keys-sort2.
DATA ls_sort2 LIKE LINE OF lr_sort2.
DATA lr_sort1 LIKE RANGE OF ls_converted_keys-sort1.
DATA ls_sort1 LIKE LINE OF lr_sort1.
DATA lr_post_code1 LIKE RANGE OF ls_converted_keys-post_code1.
DATA ls_post_code1 LIKE LINE OF lr_post_code1.
DATA lr_mc_city1 LIKE RANGE OF ls_converted_keys-mc_city1.
DATA ls_mc_city1 LIKE LINE OF lr_mc_city1.
DATA lr_name2 LIKE RANGE OF ls_converted_keys-name2.
DATA ls_name2 LIKE LINE OF lr_name2.
DATA lr_mc_name1 LIKE RANGE OF ls_converted_keys-mc_name1.
DATA ls_mc_name1 LIKE LINE OF lr_mc_name1.
DATA lr_nation LIKE RANGE OF ls_converted_keys-nation.
DATA ls_nation LIKE LINE OF lr_nation.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_werks ).

      LOOP AT lr_werks INTO ls_werks.
        ls_selopt-high = ls_werks-high.
        ls_selopt-low = ls_werks-low.
        ls_selopt-option = ls_werks-option.
        ls_selopt-sign = ls_werks-sign.
        ls_selopt-shlpfield = 'WERKS'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'SORT2'.              " Equivalent to 'Sort2' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_sort2 ).

      LOOP AT lr_sort2 INTO ls_sort2.
        ls_selopt-high = ls_sort2-high.
        ls_selopt-low = ls_sort2-low.
        ls_selopt-option = ls_sort2-option.
        ls_selopt-sign = ls_sort2-sign.
        ls_selopt-shlpfield = 'SORT2'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'SORT1'.              " Equivalent to 'Sort1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_sort1 ).

      LOOP AT lr_sort1 INTO ls_sort1.
        ls_selopt-high = ls_sort1-high.
        ls_selopt-low = ls_sort1-low.
        ls_selopt-option = ls_sort1-option.
        ls_selopt-sign = ls_sort1-sign.
        ls_selopt-shlpfield = 'SORT1'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'POST_CODE1'.              " Equivalent to 'PostCode1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_post_code1 ).

      LOOP AT lr_post_code1 INTO ls_post_code1.
        ls_selopt-high = ls_post_code1-high.
        ls_selopt-low = ls_post_code1-low.
        ls_selopt-option = ls_post_code1-option.
        ls_selopt-sign = ls_post_code1-sign.
        ls_selopt-shlpfield = 'POST_CODE1'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MC_CITY1'.              " Equivalent to 'McCity1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mc_city1 ).

      LOOP AT lr_mc_city1 INTO ls_mc_city1.
        ls_selopt-high = ls_mc_city1-high.
        ls_selopt-low = ls_mc_city1-low.
        ls_selopt-option = ls_mc_city1-option.
        ls_selopt-sign = ls_mc_city1-sign.
        ls_selopt-shlpfield = 'MC_CITY1'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'NAME2'.              " Equivalent to 'Name2' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_name2 ).

      LOOP AT lr_name2 INTO ls_name2.
        ls_selopt-high = ls_name2-high.
        ls_selopt-low = ls_name2-low.
        ls_selopt-option = ls_name2-option.
        ls_selopt-sign = ls_name2-sign.
        ls_selopt-shlpfield = 'NAME2'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MC_NAME1'.              " Equivalent to 'McName1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mc_name1 ).

      LOOP AT lr_mc_name1 INTO ls_mc_name1.
        ls_selopt-high = ls_mc_name1-high.
        ls_selopt-low = ls_mc_name1-low.
        ls_selopt-option = ls_mc_name1-option.
        ls_selopt-sign = ls_mc_name1-sign.
        ls_selopt-shlpfield = 'MC_NAME1'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'NATION'.              " Equivalent to 'Nation' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_nation ).

      LOOP AT lr_nation INTO ls_nation.
        ls_selopt-high = ls_nation-high.
        ls_selopt-low = ls_nation-low.
        ls_selopt-option = ls_nation-option.
        ls_selopt-sign = ls_nation-sign.
        ls_selopt-shlpfield = 'NATION'.
        ls_selopt-shlpname = 'H_T001W'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'H_T001W'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'CITY1'.
      ls_entityset-city1 = ls_result_list-field_value.
      ls_entityset-mc_city1 = ls_result_list-field_value.
    WHEN 'NAME1'.
      ls_entityset-name1 = ls_result_list-field_value.
      ls_entityset-mc_name1 = ls_result_list-field_value.
    WHEN 'NAME2'.
      ls_entityset-name2 = ls_result_list-field_value.
    WHEN 'NATION'.
      ls_entityset-nation = ls_result_list-field_value.
    WHEN 'POST_CODE1'.
      ls_entityset-post_code1 = ls_result_list-field_value.
    WHEN 'SORT1'.
      ls_entityset-sort1 = ls_result_list-field_value.
    WHEN 'SORT2'.
      ls_entityset-sort2 = ls_result_list-field_value.
    WHEN 'WERKS'.
      ls_entityset-werks = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDACENTROSSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACENTROSSET_UPDATE_ENTITY'.
  endmethod.
  method AYUDACLIENTESDES_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACLIENTESDES_CREATE_ENTITY'.
  endmethod.
  method AYUDACLIENTESDES_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACLIENTESDES_DELETE_ENTITY'.
  endmethod.
  method AYUDACLIENTESDES_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACLIENTESDES_GET_ENTITY'.
  endmethod.
  method AYUDACLIENTESDES_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_city  TYPE zif_zui5_cm_get_clientes_desti=>rseloption.
 DATA ir_kunnr  TYPE zif_zui5_cm_get_clientes_desti=>range_kunnr_tab.
 DATA ir_kunnr_name  TYPE zif_zui5_cm_get_clientes_desti=>zsuis_cm_nombres_rang.
 DATA ir_kunwe  TYPE zif_zui5_cm_get_clientes_desti=>range_kunnr_tab.
 DATA ir_kunwe_name  TYPE zif_zui5_cm_get_clientes_desti=>zsuis_cm_nombres_rang.
 DATA ir_street  TYPE zif_zui5_cm_get_clientes_desti=>rseloption.
 DATA ir_werks  TYPE zif_zui5_cm_get_clientes_desti=>range_t_werks_d.
 DATA o_data  TYPE zif_zui5_cm_get_clientes_desti=>zscmtt_destinatarios_cliente.
 DATA o_return  TYPE zif_zui5_cm_get_clientes_desti=>bapiret2_t.
 DATA ls_ir_city  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>rseloption.
 DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>range_kunnr_tab.
 DATA ls_ir_kunnr_name  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>zsuis_cm_nombres_rang.
 DATA ls_ir_kunwe  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>range_kunnr_tab.
 DATA ls_ir_kunwe_name  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>zsuis_cm_nombres_rang.
 DATA ls_ir_street  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>rseloption.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>range_t_werks_d.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>zscmtt_destinatarios_cliente.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_clientes_desti=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_name1_kunn2 LIKE RANGE OF ls_converted_keys-name1_kunn2.
 DATA ls_name1_kunn2 LIKE LINE OF lr_name1_kunn2.
 DATA lr_kunn2 LIKE RANGE OF ls_converted_keys-kunn2.
 DATA ls_kunn2 LIKE LINE OF lr_kunn2.
 DATA lr_name_kunnr LIKE RANGE OF ls_converted_keys-name_kunnr.
 DATA ls_name_kunnr LIKE LINE OF lr_name_kunnr.
 DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
 DATA ls_kunnr LIKE LINE OF lr_kunnr.
 DATA lr_city LIKE RANGE OF ls_converted_keys-city.
 DATA ls_city LIKE LINE OF lr_city.
 DATA lr_street LIKE RANGE OF ls_converted_keys-street.
 DATA ls_street LIKE LINE OF lr_street.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.
     WHEN 'NAME1_KUNN2'.              " Equivalent to 'NombreDestinatario' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_name1_kunn2 ).

       LOOP AT lr_name1_kunn2 INTO ls_name1_kunn2.
         ls_ir_kunwe_name-high = ls_name1_kunn2-high.
         ls_ir_kunwe_name-low = ls_name1_kunn2-low.
         ls_ir_kunwe_name-option = ls_name1_kunn2-option.
         ls_ir_kunwe_name-sign = ls_name1_kunn2-sign.
         APPEND ls_ir_kunwe_name TO ir_kunwe_name.
       ENDLOOP.
       CLEAR lr_name1_kunn2.
     WHEN 'KUNN2'.              " Equivalent to 'Destinatario' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunn2 ).

       LOOP AT lr_kunn2 INTO ls_kunn2.
         ls_ir_kunwe-high = ls_kunn2-high.
         ls_ir_kunwe-low = ls_kunn2-low.
         ls_ir_kunwe-option = ls_kunn2-option.
         ls_ir_kunwe-sign = ls_kunn2-sign.
         APPEND ls_ir_kunwe TO ir_kunwe.
       ENDLOOP.
       CLEAR lr_kunn2.
     WHEN 'NAME_KUNNR'.              " Equivalent to 'NombreCliente' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_name_kunnr ).

       LOOP AT lr_name_kunnr INTO ls_name_kunnr.
         ls_ir_kunnr_name-high = ls_name_kunnr-high.
         ls_ir_kunnr_name-low = ls_name_kunnr-low.
         ls_ir_kunnr_name-option = ls_name_kunnr-option.
         ls_ir_kunnr_name-sign = ls_name_kunnr-sign.
         APPEND ls_ir_kunnr_name TO ir_kunnr_name.
       ENDLOOP.
       CLEAR lr_name_kunnr.
     WHEN 'KUNNR'.              " Equivalent to 'Cliente' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr ).

       LOOP AT lr_kunnr INTO ls_kunnr.
         ls_ir_kunnr-high = ls_kunnr-high.
         ls_ir_kunnr-low = ls_kunnr-low.
         ls_ir_kunnr-option = ls_kunnr-option.
         ls_ir_kunnr-sign = ls_kunnr-sign.
         APPEND ls_ir_kunnr TO ir_kunnr.
       ENDLOOP.
       CLEAR lr_kunnr.
     WHEN 'CITY'.              " Equivalent to 'Poblacion' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_city ).

       LOOP AT lr_city INTO ls_city.
         ls_ir_city-high = ls_city-high.
         ls_ir_city-low = ls_city-low.
         ls_ir_city-option = ls_city-option.
         ls_ir_city-sign = ls_city-sign.
         APPEND ls_ir_city TO ir_city.
       ENDLOOP.
       CLEAR lr_city.
     WHEN 'STREET'.              " Equivalent to 'Direccion' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_street ).

       LOOP AT lr_street INTO ls_street.
         ls_ir_street-high = ls_street-high.
         ls_ir_street-low = ls_street-low.
         ls_ir_street-option = ls_street-option.
         ls_ir_street-sign = ls_street-sign.
         APPEND ls_ir_street TO ir_street.
       ENDLOOP.
       CLEAR lr_street.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_CLIENTES_DESTINA'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_werks       = ir_werks
           ir_kunwe_name  = ir_kunwe_name
           ir_kunwe       = ir_kunwe
           ir_kunnr_name  = ir_kunnr_name
           ir_kunnr       = ir_kunnr
           ir_city        = ir_city
           ir_street      = ir_street
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_werks              = ir_werks
       ir_kunwe_name         = ir_kunwe_name
       ir_kunwe              = ir_kunwe
       ir_kunnr_name         = ir_kunnr_name
       ir_kunnr              = ir_kunnr
       ir_city               = ir_city
       ir_street             = ir_street
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-name1_kunn2 = ls_o_data-name1_kunn2.
   ls_gw_o_data-kunn2 = ls_o_data-kunn2.
   ls_gw_o_data-name_kunnr = ls_o_data-name_kunnr.
   ls_gw_o_data-kunnr = ls_o_data-kunnr.
   ls_gw_o_data-city = ls_o_data-city.
   ls_gw_o_data-street = ls_o_data-street.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method AYUDACLIENTESDES_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACLIENTESDES_UPDATE_ENTITY'.
  endmethod.
  method AYUDACONDUCTORSE_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACONDUCTORSE_CREATE_ENTITY'.
  endmethod.
  method AYUDACONDUCTORSE_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACONDUCTORSE_DELETE_ENTITY'.
  endmethod.
  method AYUDACONDUCTORSE_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACONDUCTORSE_GET_ENTITY'.
  endmethod.
  method AYUDACONDUCTORSE_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
DATA ls_werks LIKE LINE OF lr_werks.
DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
DATA ls_lgort LIKE LINE OF lr_lgort.
DATA lr_conductor LIKE RANGE OF ls_converted_keys-conductor.
DATA ls_conductor LIKE LINE OF lr_conductor.
DATA lr_dni LIKE RANGE OF ls_converted_keys-dni.
DATA ls_dni LIKE LINE OF lr_dni.
DATA lr_matricula LIKE RANGE OF ls_converted_keys-matricula.
DATA ls_matricula LIKE LINE OF lr_matricula.
DATA lr_remolque LIKE RANGE OF ls_converted_keys-remolque.
DATA ls_remolque LIKE LINE OF lr_remolque.
DATA lr_telefono LIKE RANGE OF ls_converted_keys-telefono.
DATA ls_telefono LIKE LINE OF lr_telefono.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_werks ).

      LOOP AT lr_werks INTO ls_werks.
        ls_selopt-high = ls_werks-high.
        ls_selopt-low = ls_werks-low.
        ls_selopt-option = ls_werks-option.
        ls_selopt-sign = ls_werks-sign.
        ls_selopt-shlpfield = 'WERKS'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_lgort ).

      LOOP AT lr_lgort INTO ls_lgort.
        ls_selopt-high = ls_lgort-high.
        ls_selopt-low = ls_lgort-low.
        ls_selopt-option = ls_lgort-option.
        ls_selopt-sign = ls_lgort-sign.
        ls_selopt-shlpfield = 'LGORT'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'CONDUCTOR'.              " Equivalent to 'Conductor' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_conductor ).

      LOOP AT lr_conductor INTO ls_conductor.
        ls_selopt-high = ls_conductor-high.
        ls_selopt-low = ls_conductor-low.
        ls_selopt-option = ls_conductor-option.
        ls_selopt-sign = ls_conductor-sign.
        ls_selopt-shlpfield = 'CONDUCTOR'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'DNI'.              " Equivalent to 'Dni' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_dni ).

      LOOP AT lr_dni INTO ls_dni.
        ls_selopt-high = ls_dni-high.
        ls_selopt-low = ls_dni-low.
        ls_selopt-option = ls_dni-option.
        ls_selopt-sign = ls_dni-sign.
        ls_selopt-shlpfield = 'DNI'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MATRICULA'.              " Equivalent to 'Matricula' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_matricula ).

      LOOP AT lr_matricula INTO ls_matricula.
        ls_selopt-high = ls_matricula-high.
        ls_selopt-low = ls_matricula-low.
        ls_selopt-option = ls_matricula-option.
        ls_selopt-sign = ls_matricula-sign.
        ls_selopt-shlpfield = 'MATRICULA'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'REMOLQUE'.              " Equivalent to 'Remolque' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_remolque ).

      LOOP AT lr_remolque INTO ls_remolque.
        ls_selopt-high = ls_remolque-high.
        ls_selopt-low = ls_remolque-low.
        ls_selopt-option = ls_remolque-option.
        ls_selopt-sign = ls_remolque-sign.
        ls_selopt-shlpfield = 'REMOLQUE'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'TELEFONO'.              " Equivalent to 'Telefono' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_telefono ).

      LOOP AT lr_telefono INTO ls_telefono.
        ls_selopt-high = ls_telefono-high.
        ls_selopt-low = ls_telefono-low.
        ls_selopt-option = ls_telefono-option.
        ls_selopt-sign = ls_telefono-sign.
        ls_selopt-shlpfield = 'TELEFONO'.
        ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'ZCMH_CONDUCTORES'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'CONDUCTOR'.
      ls_entityset-conductor = ls_result_list-field_value.
    WHEN 'DNI'.
      ls_entityset-dni = ls_result_list-field_value.
    WHEN 'LGORT'.
      ls_entityset-lgort = ls_result_list-field_value.
    WHEN 'MATRICULA'.
      ls_entityset-matricula = ls_result_list-field_value.
    WHEN 'REMOLQUE'.
      ls_entityset-remolque = ls_result_list-field_value.
    WHEN 'TELEFONO'.
      ls_entityset-telefono = ls_result_list-field_value.
    WHEN 'WERKS'.
      ls_entityset-werks = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDACONDUCTORSE_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDACONDUCTORSE_UPDATE_ENTITY'.
  endmethod.
  method AYUDADESTINATARI_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDADESTINATARI_CREATE_ENTITY'.
  endmethod.
  method AYUDADESTINATARI_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDADESTINATARI_DELETE_ENTITY'.
  endmethod.
  method AYUDADESTINATARI_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDADESTINATARI_GET_ENTITY'.
  endmethod.
  method AYUDADESTINATARI_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
DATA ls_kunnr LIKE LINE OF lr_kunnr.
DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
DATA ls_mcod1 LIKE LINE OF lr_mcod1.
DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
DATA ls_mcod3 LIKE LINE OF lr_mcod3.
DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
DATA ls_pstlz LIKE LINE OF lr_pstlz.
DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
DATA ls_land1 LIKE LINE OF lr_land1.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_kunnr ).

      LOOP AT lr_kunnr INTO ls_kunnr.
        ls_selopt-high = ls_kunnr-high.
        ls_selopt-low = ls_kunnr-low.
        ls_selopt-option = ls_kunnr-option.
        ls_selopt-sign = ls_kunnr-sign.
        ls_selopt-shlpfield = 'KUNNR'.
        ls_selopt-shlpname = 'DEBIA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MCOD1'.              " Equivalent to 'Mcod1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mcod1 ).

      LOOP AT lr_mcod1 INTO ls_mcod1.
        ls_selopt-high = ls_mcod1-high.
        ls_selopt-low = ls_mcod1-low.
        ls_selopt-option = ls_mcod1-option.
        ls_selopt-sign = ls_mcod1-sign.
        ls_selopt-shlpfield = 'MCOD1'.
        ls_selopt-shlpname = 'DEBIA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MCOD3'.              " Equivalent to 'Mcod3' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mcod3 ).

      LOOP AT lr_mcod3 INTO ls_mcod3.
        ls_selopt-high = ls_mcod3-high.
        ls_selopt-low = ls_mcod3-low.
        ls_selopt-option = ls_mcod3-option.
        ls_selopt-sign = ls_mcod3-sign.
        ls_selopt-shlpfield = 'MCOD3'.
        ls_selopt-shlpname = 'DEBIA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'PSTLZ'.              " Equivalent to 'Pstlz' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_pstlz ).

      LOOP AT lr_pstlz INTO ls_pstlz.
        ls_selopt-high = ls_pstlz-high.
        ls_selopt-low = ls_pstlz-low.
        ls_selopt-option = ls_pstlz-option.
        ls_selopt-sign = ls_pstlz-sign.
        ls_selopt-shlpfield = 'PSTLZ'.
        ls_selopt-shlpname = 'DEBIA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'LAND1'.              " Equivalent to 'Land1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_land1 ).

      LOOP AT lr_land1 INTO ls_land1.
        ls_selopt-high = ls_land1-high.
        ls_selopt-low = ls_land1-low.
        ls_selopt-option = ls_land1-option.
        ls_selopt-sign = ls_land1-sign.
        ls_selopt-shlpfield = 'LAND1'.
        ls_selopt-shlpname = 'DEBIA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'DEBIA'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'KUNNR'.
      ls_entityset-kunnr = ls_result_list-field_value.
    WHEN 'LAND1'.
      ls_entityset-land1 = ls_result_list-field_value.
    WHEN 'MCOD1'.
      ls_entityset-mcod1 = ls_result_list-field_value.
    WHEN 'MCOD3'.
      ls_entityset-mcod3 = ls_result_list-field_value.
    WHEN 'PSTLZ'.
      ls_entityset-pstlz = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDADESTINATARI_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDADESTINATARI_UPDATE_ENTITY'.
  endmethod.
  method AYUDAINCOTERMSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAINCOTERMSET_CREATE_ENTITY'.
  endmethod.
  method AYUDAINCOTERMSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAINCOTERMSET_DELETE_ENTITY'.
  endmethod.
  method AYUDAINCOTERMSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAINCOTERMSET_GET_ENTITY'.
  endmethod.
  method AYUDAINCOTERMSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_bezei LIKE RANGE OF ls_converted_keys-bezei.
DATA ls_bezei LIKE LINE OF lr_bezei.
DATA lr_inco1 LIKE RANGE OF ls_converted_keys-inco1.
DATA ls_inco1 LIKE LINE OF lr_inco1.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'BEZEI'.              " Equivalent to 'Bezei' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_bezei ).

      LOOP AT lr_bezei INTO ls_bezei.
        ls_selopt-high = ls_bezei-high.
        ls_selopt-low = ls_bezei-low.
        ls_selopt-option = ls_bezei-option.
        ls_selopt-sign = ls_bezei-sign.
        ls_selopt-shlpfield = 'BEZEI'.
        ls_selopt-shlpname = 'H_TINC'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'INCO1'.              " Equivalent to 'Inco1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_inco1 ).

      LOOP AT lr_inco1 INTO ls_inco1.
        ls_selopt-high = ls_inco1-high.
        ls_selopt-low = ls_inco1-low.
        ls_selopt-option = ls_inco1-option.
        ls_selopt-sign = ls_inco1-sign.
        ls_selopt-shlpfield = 'INCO1'.
        ls_selopt-shlpname = 'H_TINC'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'H_TINC'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'BEZEI'.
      ls_entityset-bezei = ls_result_list-field_value.
    WHEN 'INCO1'.
      ls_entityset-inco1 = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDAINCOTERMSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAINCOTERMSET_UPDATE_ENTITY'.
  endmethod.
  method AYUDALOTESET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDALOTESET_CREATE_ENTITY'.
  endmethod.
  method AYUDALOTESET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDALOTESET_DELETE_ENTITY'.
  endmethod.
  method AYUDALOTESET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDALOTESET_GET_ENTITY'.
  endmethod.
  method AYUDALOTESET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
DATA ls_matnr LIKE LINE OF lr_matnr.
DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
DATA ls_werks LIKE LINE OF lr_werks.
DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
DATA ls_charg LIKE LINE OF lr_charg.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_matnr ).

      LOOP AT lr_matnr INTO ls_matnr.
        ls_selopt-high = ls_matnr-high.
        ls_selopt-low = ls_matnr-low.
        ls_selopt-option = ls_matnr-option.
        ls_selopt-sign = ls_matnr-sign.
        ls_selopt-shlpfield = 'MATNR'.
        ls_selopt-shlpname = 'H_MCHA_E'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_werks ).

      LOOP AT lr_werks INTO ls_werks.
        ls_selopt-high = ls_werks-high.
        ls_selopt-low = ls_werks-low.
        ls_selopt-option = ls_werks-option.
        ls_selopt-sign = ls_werks-sign.
        ls_selopt-shlpfield = 'WERKS'.
        ls_selopt-shlpname = 'H_MCHA_E'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_charg ).

      LOOP AT lr_charg INTO ls_charg.
        ls_selopt-high = ls_charg-high.
        ls_selopt-low = ls_charg-low.
        ls_selopt-option = ls_charg-option.
        ls_selopt-sign = ls_charg-sign.
        ls_selopt-shlpfield = 'CHARG'.
        ls_selopt-shlpname = 'H_MCHA_E'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'H_MCHA_E'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'CHARG'.
      ls_entityset-charg = ls_result_list-field_value.
    WHEN 'MATNR'.
      ls_entityset-matnr = ls_result_list-field_value.
    WHEN 'WERKS'.
      ls_entityset-werks = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDALOTESET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDALOTESET_UPDATE_ENTITY'.
  endmethod.
  method AYUDAMOTIVOPEDID_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAMOTIVOPEDID_CREATE_ENTITY'.
  endmethod.
  method AYUDAMOTIVOPEDID_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAMOTIVOPEDID_DELETE_ENTITY'.
  endmethod.
  method AYUDAMOTIVOPEDID_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAMOTIVOPEDID_GET_ENTITY'.
  endmethod.
  method AYUDAMOTIVOPEDID_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_augru LIKE RANGE OF ls_converted_keys-augru.
DATA ls_augru LIKE LINE OF lr_augru.
DATA lr_bezei LIKE RANGE OF ls_converted_keys-bezei.
DATA ls_bezei LIKE LINE OF lr_bezei.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'AUGRU'.              " Equivalent to 'Augru' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_augru ).

      LOOP AT lr_augru INTO ls_augru.
        ls_selopt-high = ls_augru-high.
        ls_selopt-low = ls_augru-low.
        ls_selopt-option = ls_augru-option.
        ls_selopt-sign = ls_augru-sign.
        ls_selopt-shlpfield = 'AUGRU'.
        ls_selopt-shlpname = 'H_TVAU'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'BEZEI'.              " Equivalent to 'Bezei' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_bezei ).

      LOOP AT lr_bezei INTO ls_bezei.
        ls_selopt-high = ls_bezei-high.
        ls_selopt-low = ls_bezei-low.
        ls_selopt-option = ls_bezei-option.
        ls_selopt-sign = ls_bezei-sign.
        ls_selopt-shlpfield = 'BEZEI'.
        ls_selopt-shlpname = 'H_TVAU'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'H_TVAU'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'AUGRU'.
      ls_entityset-augru = ls_result_list-field_value.
    WHEN 'BEZEI'.
      ls_entityset-bezei = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDAMOTIVOPEDID_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAMOTIVOPEDID_UPDATE_ENTITY'.
  endmethod.
  method AYUDAPUESTOEXPED_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPUESTOEXPED_CREATE_ENTITY'.
  endmethod.
  method AYUDAPUESTOEXPED_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPUESTOEXPED_DELETE_ENTITY'.
  endmethod.
  method AYUDAPUESTOEXPED_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPUESTOEXPED_GET_ENTITY'.
  endmethod.
  method AYUDAPUESTOEXPED_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_vstel  TYPE zif_zui5_cm_get_puesto_expedic=>rjksd_vstel_range_tab.
 DATA ir_vstel_name  TYPE zif_zui5_cm_get_puesto_expedic=>ris_t_select_option.
 DATA ir_werks  TYPE zif_zui5_cm_get_puesto_expedic=>range_t_werks_d.
 DATA o_data  TYPE zif_zui5_cm_get_puesto_expedic=>zsuitt_cm_puestos_expedicion.
 DATA o_return  TYPE zif_zui5_cm_get_puesto_expedic=>bapiret2_t.
 DATA ls_ir_vstel  TYPE LINE OF zif_zui5_cm_get_puesto_expedic=>rjksd_vstel_range_tab.
 DATA ls_ir_vstel_name  TYPE LINE OF zif_zui5_cm_get_puesto_expedic=>ris_t_select_option.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_puesto_expedic=>range_t_werks_d.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_puesto_expedic=>zsuitt_cm_puestos_expedicion.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_puesto_expedic=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_vstel LIKE RANGE OF ls_converted_keys-vstel.
 DATA ls_vstel LIKE LINE OF lr_vstel.
 DATA lr_vtext LIKE RANGE OF ls_converted_keys-vtext.
 DATA ls_vtext LIKE LINE OF lr_vtext.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'VSTEL'.              " Equivalent to 'Vstel' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_vstel ).

       LOOP AT lr_vstel INTO ls_vstel.
         ls_ir_vstel-high = ls_vstel-high.
         ls_ir_vstel-low = ls_vstel-low.
         ls_ir_vstel-option = ls_vstel-option.
         ls_ir_vstel-sign = ls_vstel-sign.
         APPEND ls_ir_vstel TO ir_vstel.
       ENDLOOP.
       CLEAR lr_vstel.
     WHEN 'VTEXT'.              " Equivalent to 'Vtext' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_vtext ).

       LOOP AT lr_vtext INTO ls_vtext.
         ls_ir_vstel_name-high = ls_vtext-high.
         ls_ir_vstel_name-low = ls_vtext-low.
         ls_ir_vstel_name-option = ls_vtext-option.
         ls_ir_vstel_name-sign = ls_vtext-sign.
         APPEND ls_ir_vstel_name TO ir_vstel_name.
       ENDLOOP.
       CLEAR lr_vtext.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_PUESTO_EXPEDICION'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_vstel       = ir_vstel
           ir_vstel_name  = ir_vstel_name
           ir_werks       = ir_werks
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_vstel              = ir_vstel
       ir_vstel_name         = ir_vstel_name
       ir_werks              = ir_werks
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-vstel = ls_o_data-vstel.
   ls_gw_o_data-vtext = ls_o_data-vtext.
   ls_gw_o_data-werks = ls_o_data-werks.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method AYUDAPUESTOEXPED_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPUESTOEXPED_UPDATE_ENTITY'.
  endmethod.
  method AYUDARUTASET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDARUTASET_CREATE_ENTITY'.
  endmethod.
  method AYUDARUTASET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDARUTASET_DELETE_ENTITY'.
  endmethod.
  method AYUDARUTASET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDARUTASET_GET_ENTITY'.
  endmethod.
  method AYUDARUTASET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_bezei LIKE RANGE OF ls_converted_keys-bezei.
DATA ls_bezei LIKE LINE OF lr_bezei.
DATA lr_route LIKE RANGE OF ls_converted_keys-route.
DATA ls_route LIKE LINE OF lr_route.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'BEZEI'.              " Equivalent to 'Bezei' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_bezei ).

      LOOP AT lr_bezei INTO ls_bezei.
        ls_selopt-high = ls_bezei-high.
        ls_selopt-low = ls_bezei-low.
        ls_selopt-option = ls_bezei-option.
        ls_selopt-sign = ls_bezei-sign.
        ls_selopt-shlpfield = 'BEZEI'.
        ls_selopt-shlpname = 'H_TVRO'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'ROUTE'.              " Equivalent to 'Route' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_route ).

      LOOP AT lr_route INTO ls_route.
        ls_selopt-high = ls_route-high.
        ls_selopt-low = ls_route-low.
        ls_selopt-option = ls_route-option.
        ls_selopt-sign = ls_route-sign.
        ls_selopt-shlpfield = 'ROUTE'.
        ls_selopt-shlpname = 'H_TVRO'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'H_TVRO'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'BEZEI'.
      ls_entityset-bezei = ls_result_list-field_value.
    WHEN 'ROUTE'.
      ls_entityset-route = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDARUTASET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDARUTASET_UPDATE_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_CREATE_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_DELETE_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_GET_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA e_data  TYPE zif_zui5_cm_get_tipo_pallets=>zscmtt_material_palets_centro.
 DATA e_return  TYPE zif_zui5_cm_get_tipo_pallets=>bapiret2_t.
 DATA ir_lgort  TYPE zif_zui5_cm_get_tipo_pallets=>range_t_lgort_d.
 DATA ir_matnr  TYPE zif_zui5_cm_get_tipo_pallets=>range_t_matnr.
 DATA ir_werks  TYPE zif_zui5_cm_get_tipo_pallets=>range_t_werks_d.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_tipo_pallets=>zscmtt_material_palets_centro.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_tipo_pallets=>bapiret2_t.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_tipo_pallets=>range_t_lgort_d.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_tipo_pallets=>range_t_matnr.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_tipo_pallets=>range_t_werks_d.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_e_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.
     WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       LOOP AT lr_lgort INTO ls_lgort.
         ls_ir_lgort-high = ls_lgort-high.
         ls_ir_lgort-low = ls_lgort-low.
         ls_ir_lgort-option = ls_lgort-option.
         ls_ir_lgort-sign = ls_lgort-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort.
     WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_matnr ).

       LOOP AT lr_matnr INTO ls_matnr.
         ls_ir_matnr-high = ls_matnr-high.
         ls_ir_matnr-low = ls_matnr-low.
         ls_ir_matnr-option = ls_matnr-option.
         ls_ir_matnr-sign = ls_matnr-sign.
         APPEND ls_ir_matnr TO ir_matnr.
       ENDLOOP.
       CLEAR lr_matnr.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_TIPO_PALLETS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_werks       = ir_werks
           ir_lgort       = ir_lgort
           ir_matnr       = ir_matnr
         IMPORTING
           e_return       = e_return
           e_data         = e_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_werks              = ir_werks
       ir_lgort              = ir_lgort
       ir_matnr              = ir_matnr
     IMPORTING
       e_return              = e_return
       e_data                = e_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( e_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT e_data INTO ls_e_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_e_data-maktx = ls_e_data-maktx.
   ls_gw_e_data-werks = ls_e_data-werks.
   ls_gw_e_data-lgort = ls_e_data-lgort.
   ls_gw_e_data-matnr = ls_e_data-matnr.
   APPEND ls_gw_e_data TO et_entityset.
   CLEAR ls_gw_e_data.
 ENDLOOP.

  endmethod.
  method AYUDATIPOPALLETS_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_UPDATE_ENTITY'.
  endmethod.
  method AYUDATRANSPORT01_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORT01_CREATE_ENTITY'.
  endmethod.
  method AYUDATRANSPORT01_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORT01_DELETE_ENTITY'.
  endmethod.
  method AYUDATRANSPORT01_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORT01_GET_ENTITY'.
  endmethod.
  method AYUDATRANSPORT01_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
DATA ls_lifnr LIKE LINE OF lr_lifnr.
DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
DATA ls_mcod1 LIKE LINE OF lr_mcod1.
DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
DATA ls_mcod3 LIKE LINE OF lr_mcod3.
DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
DATA ls_pstlz LIKE LINE OF lr_pstlz.
DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
DATA ls_land1 LIKE LINE OF lr_land1.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_lifnr ).

      LOOP AT lr_lifnr INTO ls_lifnr.
        ls_selopt-high = ls_lifnr-high.
        ls_selopt-low = ls_lifnr-low.
        ls_selopt-option = ls_lifnr-option.
        ls_selopt-sign = ls_lifnr-sign.
        ls_selopt-shlpfield = 'LIFNR'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MCOD1'.              " Equivalent to 'Mcod1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mcod1 ).

      LOOP AT lr_mcod1 INTO ls_mcod1.
        ls_selopt-high = ls_mcod1-high.
        ls_selopt-low = ls_mcod1-low.
        ls_selopt-option = ls_mcod1-option.
        ls_selopt-sign = ls_mcod1-sign.
        ls_selopt-shlpfield = 'MCOD1'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MCOD3'.              " Equivalent to 'Mcod3' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mcod3 ).

      LOOP AT lr_mcod3 INTO ls_mcod3.
        ls_selopt-high = ls_mcod3-high.
        ls_selopt-low = ls_mcod3-low.
        ls_selopt-option = ls_mcod3-option.
        ls_selopt-sign = ls_mcod3-sign.
        ls_selopt-shlpfield = 'MCOD3'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'PSTLZ'.              " Equivalent to 'Pstlz' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_pstlz ).

      LOOP AT lr_pstlz INTO ls_pstlz.
        ls_selopt-high = ls_pstlz-high.
        ls_selopt-low = ls_pstlz-low.
        ls_selopt-option = ls_pstlz-option.
        ls_selopt-sign = ls_pstlz-sign.
        ls_selopt-shlpfield = 'PSTLZ'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'LAND1'.              " Equivalent to 'Land1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_land1 ).

      LOOP AT lr_land1 INTO ls_land1.
        ls_selopt-high = ls_land1-high.
        ls_selopt-low = ls_land1-low.
        ls_selopt-option = ls_land1-option.
        ls_selopt-sign = ls_land1-sign.
        ls_selopt-shlpfield = 'LAND1'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'KREDA'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'LAND1'.
      ls_entityset-land1 = ls_result_list-field_value.
    WHEN 'LIFNR'.
      ls_entityset-lifnr = ls_result_list-field_value.
    WHEN 'MCOD1'.
      ls_entityset-mcod1 = ls_result_list-field_value.
    WHEN 'MCOD3'.
      ls_entityset-mcod3 = ls_result_list-field_value.
    WHEN 'PSTLZ'.
      ls_entityset-pstlz = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDATRANSPORT01_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORT01_UPDATE_ENTITY'.
  endmethod.
  method AYUDATRANSPORTES_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORTES_CREATE_ENTITY'.
  endmethod.
  method AYUDATRANSPORTES_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORTES_DELETE_ENTITY'.
  endmethod.
  method AYUDATRANSPORTES_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORTES_GET_ENTITY'.
  endmethod.
  method AYUDATRANSPORTES_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_tplst LIKE RANGE OF ls_converted_keys-tplst.
DATA ls_tplst LIKE LINE OF lr_tplst.
DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
DATA ls_tknum LIKE LINE OF lr_tknum.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'TPLST'.              " Equivalent to 'Tplst' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_tplst ).

      LOOP AT lr_tplst INTO ls_tplst.
        ls_selopt-high = ls_tplst-high.
        ls_selopt-low = ls_tplst-low.
        ls_selopt-option = ls_tplst-option.
        ls_selopt-sign = ls_tplst-sign.
        ls_selopt-shlpfield = 'TDLNR'.
        ls_selopt-shlpname = 'SD_F4_SHP_ID'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_tknum ).

      LOOP AT lr_tknum INTO ls_tknum.
        ls_selopt-high = ls_tknum-high.
        ls_selopt-low = ls_tknum-low.
        ls_selopt-option = ls_tknum-option.
        ls_selopt-sign = ls_tknum-sign.
        ls_selopt-shlpfield = 'TKNUM'.
        ls_selopt-shlpname = 'SD_F4_SHP_ID'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'SD_F4_SHP_ID'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'TDLNR'.
      ls_entityset-tplst = ls_result_list-field_value.
    WHEN 'TKNUM'.
      ls_entityset-tknum = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDATRANSPORTES_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATRANSPORTES_UPDATE_ENTITY'.
  endmethod.
  method CHECK_SUBSCRIPTION_AUTHORITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'CHECK_SUBSCRIPTION_AUTHORITY'.
  endmethod.
  method ENTREGASTRANSPOR_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGASTRANSPOR_CREATE_ENTITY'.
  endmethod.
  method ENTREGASTRANSPOR_DELETE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_entrega TYPE zif_zui5_cm_eliminar_ent_trans=>vbeln_vl.
 DATA i_transporte TYPE zif_zui5_cm_eliminar_ent_trans=>tknum.
 DATA o_return  TYPE zif_zui5_cm_eliminar_ent_trans=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_eliminar_ent_trans=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_entregastransporte.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

* Maps key fields to function module parameters

 i_transporte = ls_converted_keys-tknum.
 i_entrega = ls_converted_keys-vbeln.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_ELIMINAR_ENT_TRANS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_transporte   = i_transporte
           i_entrega      = i_entrega
         IMPORTING
           o_return       = o_return
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_transporte          = i_transporte
       i_entrega             = i_entrega
     IMPORTING
       o_return              = o_return
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
  endmethod.
  method ENTREGASTRANSPOR_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_tknum TYPE zif_zui5_cm_get_entregas_trans=>tknum.
 DATA i_vbeln TYPE zif_zui5_cm_get_entregas_trans=>vbeln_vl.
 DATA o_data  TYPE zif_zui5_cm_get_entregas_trans=>zsuitt_cm_entregas.
 DATA o_return  TYPE zif_zui5_cm_get_entregas_trans=>bapiret2_t.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>zsuitt_cm_entregas.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'EntregasTransporteSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_vbeln = ls_converted_keys-vbeln.
 i_tknum = ls_converted_keys-tknum.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ENTREGAS_TRANS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_vbeln        = i_vbeln
           i_tknum        = i_tknum
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_vbeln               = i_vbeln
       i_tknum               = i_tknum
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE o_data INTO ls_o_data INDEX 1.
 er_entity-devolucion = ls_o_data-devolucion.
 er_entity-vstel_name = ls_o_data-vstel_name.
 er_entity-vstel = ls_o_data-vstel.
 er_entity-vbeln = ls_o_data-vbeln.
 er_entity-tknum = ls_o_data-tknum.
 er_entity-kunag_name = ls_o_data-kunag_name.
 er_entity-kunag = ls_o_data-kunag.
 er_entity-inco1 = ls_o_data-inco1.
 er_entity-route = ls_o_data-route.
 er_entity-wadat = ls_o_data-wadat.
 er_entity-kunwe_name = ls_o_data-kunwe_name.
 er_entity-kunwe = ls_o_data-kunwe.
 er_entity-bstkd = ls_o_data-bstkd.
  endmethod.
  method ENTREGASTRANSPOR_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_cliente  TYPE zif_zui5_cm_get_entregas_trans=>shp_kunwe_range_t.
 DATA ir_cliente_nombre  TYPE zif_zui5_cm_get_entregas_trans=>zsuis_cm_nombres_rang.
 DATA ir_destinatario  TYPE zif_zui5_cm_get_entregas_trans=>shp_kunwe_range_t.
 DATA ir_destinatario_nombre  TYPE zif_zui5_cm_get_entregas_trans=>zsuis_cm_nombres_rang.
 DATA ir_fecha  TYPE zif_zui5_cm_get_entregas_trans=>date_t_range.
 DATA ir_incoterm  TYPE zif_zui5_cm_get_entregas_trans=>shp_inco1_range_t.
 DATA ir_ruta  TYPE zif_zui5_cm_get_entregas_trans=>shp_route_range_t.
 DATA ir_tknum  TYPE zif_zui5_cm_get_entregas_trans=>shp_tknum_range_t.
 DATA ir_vbeln  TYPE zif_zui5_cm_get_entregas_trans=>/eby/_lbapidlv_range_vbeln.
 DATA o_data  TYPE zif_zui5_cm_get_entregas_trans=>zsuitt_cm_entregas.
 DATA o_return  TYPE zif_zui5_cm_get_entregas_trans=>bapiret2_t.
 DATA ls_ir_cliente  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>shp_kunwe_range_t.
 DATA ls_ir_cliente_nombre  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>zsuis_cm_nombres_rang.
 DATA ls_ir_destinatario  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>shp_kunwe_range_t.
 DATA ls_ir_destinatario_nombre  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>zsuis_cm_nombres_rang.
 DATA ls_ir_fecha  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>date_t_range.
 DATA ls_ir_incoterm  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>shp_inco1_range_t.
 DATA ls_ir_ruta  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>shp_route_range_t.
 DATA ls_ir_tknum  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>shp_tknum_range_t.
 DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>/eby/_lbapidlv_range_vbeln.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>zsuitt_cm_entregas.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entregas_trans=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lv_source_entity_set_name TYPE string.
 DATA transportesset_get_entityset TYPE LINE OF zcl_zsui5_cm_gestion_t_mpc=>tt_transportes.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lr_kunag_name LIKE RANGE OF ls_converted_keys-kunag_name.
 DATA ls_kunag_name LIKE LINE OF lr_kunag_name.
 DATA lr_kunag LIKE RANGE OF ls_converted_keys-kunag.
 DATA ls_kunag LIKE LINE OF lr_kunag.
 DATA lr_inco1 LIKE RANGE OF ls_converted_keys-inco1.
 DATA ls_inco1 LIKE LINE OF lr_inco1.
 DATA lr_route LIKE RANGE OF ls_converted_keys-route.
 DATA ls_route LIKE LINE OF lr_route.
 DATA lr_wadat LIKE RANGE OF ls_converted_keys-wadat.
 DATA ls_wadat LIKE LINE OF lr_wadat.
 DATA lr_kunwe_name LIKE RANGE OF ls_converted_keys-kunwe_name.
 DATA ls_kunwe_name LIKE LINE OF lr_kunwe_name.
 DATA lr_kunwe LIKE RANGE OF ls_converted_keys-kunwe.
 DATA ls_kunwe LIKE LINE OF lr_kunwe.
 DATA lr_vbeln LIKE RANGE OF ls_converted_keys-vbeln.
 DATA ls_vbeln LIKE LINE OF lr_vbeln.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps key fields to function module parameters
 IF it_key_tab IS NOT INITIAL.

   lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

   IF  lv_source_entity_set_name = 'TransportesSet'.
     " Convert keys to appropriate entity set structure
     io_tech_request_context->get_converted_source_keys(
       IMPORTING
         es_key_values  = transportesset_get_entityset ).
     ls_ir_tknum-low = transportesset_get_entityset-tknum. " Equivalent to 'Tknum' property in the service
     ls_ir_tknum-option = 'EQ'.
     ls_ir_tknum-sign = 'I'.
     APPEND ls_ir_tknum TO ir_tknum.

   ENDIF.

 ENDIF.

 IF it_filter_select_options IS NOT INITIAL.

* Maps filter table lines to function module parameters
   LOOP AT lt_filter_select_options INTO ls_filter.

     CASE ls_filter-property.
       WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_tknum ).

         LOOP AT lr_tknum INTO ls_tknum.
           ls_ir_tknum-high = ls_tknum-high.
           ls_ir_tknum-low = ls_tknum-low.
           ls_ir_tknum-option = ls_tknum-option.
           ls_ir_tknum-sign = ls_tknum-sign.
           APPEND ls_ir_tknum TO ir_tknum.
         ENDLOOP.
         CLEAR lr_tknum.
       WHEN 'KUNAG_NAME'.              " Equivalent to 'KunagName' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_kunag_name ).

         LOOP AT lr_kunag_name INTO ls_kunag_name.
           ls_ir_cliente_nombre-high = ls_kunag_name-high.
           ls_ir_cliente_nombre-low = ls_kunag_name-low.
           ls_ir_cliente_nombre-option = ls_kunag_name-option.
           ls_ir_cliente_nombre-sign = ls_kunag_name-sign.
           APPEND ls_ir_cliente_nombre TO ir_cliente_nombre.
         ENDLOOP.
         CLEAR lr_kunag_name.
       WHEN 'KUNAG'.              " Equivalent to 'Kunag' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_kunag ).

         LOOP AT lr_kunag INTO ls_kunag.
           ls_ir_cliente-high = ls_kunag-high.
           ls_ir_cliente-low = ls_kunag-low.
           ls_ir_cliente-option = ls_kunag-option.
           ls_ir_cliente-sign = ls_kunag-sign.
           APPEND ls_ir_cliente TO ir_cliente.
         ENDLOOP.
         CLEAR lr_kunag.
       WHEN 'INCO1'.              " Equivalent to 'Inco1' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_inco1 ).

         LOOP AT lr_inco1 INTO ls_inco1.
           ls_ir_incoterm-high = ls_inco1-high.
           ls_ir_incoterm-low = ls_inco1-low.
           ls_ir_incoterm-option = ls_inco1-option.
           ls_ir_incoterm-sign = ls_inco1-sign.
           APPEND ls_ir_incoterm TO ir_incoterm.
         ENDLOOP.
         CLEAR lr_inco1.
       WHEN 'ROUTE'.              " Equivalent to 'Route' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_route ).

         LOOP AT lr_route INTO ls_route.
           ls_ir_ruta-high = ls_route-high.
           ls_ir_ruta-low = ls_route-low.
           ls_ir_ruta-option = ls_route-option.
           ls_ir_ruta-sign = ls_route-sign.
           APPEND ls_ir_ruta TO ir_ruta.
         ENDLOOP.
         CLEAR lr_route.
       WHEN 'WADAT'.              " Equivalent to 'Wadat' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_wadat ).

         LOOP AT lr_wadat INTO ls_wadat.
           ls_ir_fecha-high = ls_wadat-high.
           ls_ir_fecha-low = ls_wadat-low.
           ls_ir_fecha-option = ls_wadat-option.
           ls_ir_fecha-sign = ls_wadat-sign.
           APPEND ls_ir_fecha TO ir_fecha.
         ENDLOOP.
         CLEAR lr_wadat.
       WHEN 'KUNWE_NAME'.              " Equivalent to 'KunweName' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_kunwe_name ).

         LOOP AT lr_kunwe_name INTO ls_kunwe_name.
           ls_ir_destinatario_nombre-high = ls_kunwe_name-high.
           ls_ir_destinatario_nombre-low = ls_kunwe_name-low.
           ls_ir_destinatario_nombre-option = ls_kunwe_name-option.
           ls_ir_destinatario_nombre-sign = ls_kunwe_name-sign.
           APPEND ls_ir_destinatario_nombre TO ir_destinatario_nombre.
         ENDLOOP.
         CLEAR lr_kunwe_name.
       WHEN 'KUNWE'.              " Equivalent to 'Kunwe' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_kunwe ).

         LOOP AT lr_kunwe INTO ls_kunwe.
           ls_ir_destinatario-high = ls_kunwe-high.
           ls_ir_destinatario-low = ls_kunwe-low.
           ls_ir_destinatario-option = ls_kunwe-option.
           ls_ir_destinatario-sign = ls_kunwe-sign.
           APPEND ls_ir_destinatario TO ir_destinatario.
         ENDLOOP.
         CLEAR lr_kunwe.
       WHEN 'VBELN'.              " Equivalent to 'Vbeln' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_vbeln ).

         LOOP AT lr_vbeln INTO ls_vbeln.
           ls_ir_vbeln-deliv_numb_high = ls_vbeln-high.
           ls_ir_vbeln-deliv_numb_low = ls_vbeln-low.
           ls_ir_vbeln-option = ls_vbeln-option.
           ls_ir_vbeln-sign = ls_vbeln-sign.
           APPEND ls_ir_vbeln TO ir_vbeln.
         ENDLOOP.
         CLEAR lr_vbeln.

       WHEN OTHERS.
         " Log message in the application log
         me->/iwbep/if_sb_dpc_comm_services~log_message(
           EXPORTING
             iv_msg_type   = 'E'
             iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
             iv_msg_number = 020
             iv_msg_v1     = ls_filter-property ).
         " Raise Exception
         RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
           EXPORTING
             textid = /iwbep/cx_mgw_tech_exception=>internal_error.
     ENDCASE.

   ENDLOOP.

 ENDIF.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ENTREGAS_TRANS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_tknum               = ir_tknum
           ir_cliente_nombre      = ir_cliente_nombre
           ir_cliente             = ir_cliente
           ir_incoterm            = ir_incoterm
           ir_ruta                = ir_ruta
           ir_fecha               = ir_fecha
           ir_destinatario_nombre = ir_destinatario_nombre
           ir_destinatario        = ir_destinatario
           ir_vbeln               = ir_vbeln
         IMPORTING
           o_return               = o_return
           o_data                 = o_data
         EXCEPTIONS
           system_failure         = 1000 message lv_exc_msg
           OTHERS                 = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_tknum               = ir_tknum
       ir_cliente_nombre      = ir_cliente_nombre
       ir_cliente             = ir_cliente
       ir_incoterm            = ir_incoterm
       ir_ruta                = ir_ruta
       ir_fecha               = ir_fecha
       ir_destinatario_nombre = ir_destinatario_nombre
       ir_destinatario        = ir_destinatario
       ir_vbeln               = ir_vbeln
     IMPORTING
       o_return               = o_return
       o_data                 = o_data
     EXCEPTIONS
       system_failure         = 1000 MESSAGE lv_exc_msg
       communication_failure  = 1001 MESSAGE lv_exc_msg
       OTHERS                 = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-vstel_name = ls_o_data-vstel_name.
   ls_gw_o_data-vstel = ls_o_data-vstel.
   ls_gw_o_data-kunag_name = ls_o_data-kunag_name.
   ls_gw_o_data-kunag = ls_o_data-kunag.
   ls_gw_o_data-inco1 = ls_o_data-inco1.
   ls_gw_o_data-route = ls_o_data-route.
   ls_gw_o_data-wadat = ls_o_data-wadat.
   ls_gw_o_data-kunwe_name = ls_o_data-kunwe_name.
   ls_gw_o_data-kunwe = ls_o_data-kunwe.
   ls_gw_o_data-vbeln = ls_o_data-vbeln.
   ls_gw_o_data-tknum = ls_o_data-tknum.
   ls_gw_o_data-bstkd = ls_o_data-bstkd.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method ENTREGASTRANSPOR_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGASTRANSPOR_UPDATE_ENTITY'.
  endmethod.
  method IMPRESIONDOCUMEN_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'IMPRESIONDOCUMEN_CREATE_ENTITY'.
  endmethod.
  method IMPRESIONDOCUMEN_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'IMPRESIONDOCUMEN_DELETE_ENTITY'.
  endmethod.
  method IMPRESIONDOCUMEN_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'IMPRESIONDOCUMEN_GET_ENTITY'.
  endmethod.
  method IMPRESIONDOCUMEN_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_lgort TYPE zif_zui5_cm_imprimir_documento=>lgort_d.
 DATA i_mensajes TYPE zif_zui5_cm_imprimir_documento=>char100.
 DATA i_transporte TYPE zif_zui5_cm_imprimir_documento=>tknum.
 DATA i_werks TYPE zif_zui5_cm_imprimir_documento=>werks_d.
 DATA o_documentos  TYPE zif_zui5_cm_imprimir_documento=>zscmtt_binario_impresion.
 DATA o_return  TYPE zif_zui5_cm_imprimir_documento=>bapiret2_t.
 DATA ls_o_documentos  TYPE LINE OF zif_zui5_cm_imprimir_documento=>zscmtt_binario_impresion.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_imprimir_documento=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lr_mensaje LIKE RANGE OF ls_converted_keys-mensaje.
 DATA ls_mensaje LIKE LINE OF lr_mensaje.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_documentos LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'WERKS'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       READ TABLE lr_werks INTO ls_werks INDEX 1.
       IF sy-subrc = 0.
         i_werks = ls_werks-low.
       ENDIF.
     WHEN 'LGORT'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       READ TABLE lr_lgort INTO ls_lgort INDEX 1.
       IF sy-subrc = 0.
         i_lgort = ls_lgort-low.
       ENDIF.
     WHEN 'TKNUM'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_tknum ).

       READ TABLE lr_tknum INTO ls_tknum INDEX 1.
       IF sy-subrc = 0.
         i_transporte = ls_tknum-low.
       ENDIF.
     WHEN 'MENSAJE'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_mensaje ).

       READ TABLE lr_mensaje INTO ls_mensaje INDEX 1.
       IF sy-subrc = 0.
         i_mensajes = ls_mensaje-low.
       ENDIF.
     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_IMPRIMIR_DOCUMENTOS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_werks        = i_werks
           i_lgort        = i_lgort
           i_transporte   = i_transporte
           i_mensajes     = i_mensajes
         IMPORTING
           o_return       = o_return
           o_documentos   = o_documentos
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_werks               = i_werks
       i_lgort               = i_lgort
       i_transporte          = i_transporte
       i_mensajes            = i_mensajes
     IMPORTING
       o_return              = o_return
       o_documentos          = o_documentos
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_documentos ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_documentos INTO ls_o_documentos
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_documentos-mime_type = ls_o_documentos-mime_type.
   ls_gw_o_documentos-binario_base64 = ls_o_documentos-binario_base64.
   ls_gw_o_documentos-werks = ls_o_documentos-werks.
   ls_gw_o_documentos-lgort = ls_o_documentos-lgort.
   ls_gw_o_documentos-tknum = ls_o_documentos-tknum.
   ls_gw_o_documentos-mensaje = ls_o_documentos-mensaje.
   APPEND ls_gw_o_documentos TO et_entityset.
   CLEAR ls_gw_o_documentos.
 ENDLOOP.

  endmethod.
  method IMPRESIONDOCUMEN_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'IMPRESIONDOCUMEN_UPDATE_ENTITY'.
  endmethod.
  method MATERIALESDEVSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESDEVSET_CREATE_ENTITY'.
  endmethod.
  method MATERIALESDEVSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESDEVSET_DELETE_ENTITY'.
  endmethod.
  method MATERIALESDEVSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESDEVSET_GET_ENTITY'.
  endmethod.
  method MATERIALESDEVSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_get_materiales_dev=>lgort_d.
 DATA i_centro_montaje TYPE zif_zui5_cm_get_materiales_dev=>werks_d.
 DATA ir_alto  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_dimensiones_range.
 DATA ir_ancho  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_dimensiones_range.
 DATA ir_kunnr  TYPE zif_zui5_cm_get_materiales_dev=>zsui_cm_kunnr_range_t.
 DATA ir_largo  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_dimensiones_range.
 DATA ir_lote  TYPE zif_zui5_cm_get_materiales_dev=>ranges_charg_tt.
 DATA ir_maktx  TYPE zif_zui5_cm_get_materiales_dev=>fip_t_maktx_range.
 DATA ir_matnr  TYPE zif_zui5_cm_get_materiales_dev=>ranges_matnr_tt.
 DATA ir_status  TYPE zif_zui5_cm_get_materiales_dev=>zui5r_cm_status.
 DATA ir_stock_libre  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_cantidad_range.
 DATA ir_stock_pedido  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_cantidad_range.
 DATA ir_stock_total  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_cantidad_range.
 DATA ir_vbeln  TYPE zif_zui5_cm_get_materiales_dev=>sd_vbeln_ranges.
 DATA o_data  TYPE zif_zui5_cm_get_materiales_dev=>zsuitt_cm_materiales_dev.
 DATA o_return  TYPE zif_zui5_cm_get_materiales_dev=>bapiret2_t.
 DATA ls_ir_alto  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_ancho  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsui_cm_kunnr_range_t.
 DATA ls_ir_largo  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_lote  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>ranges_charg_tt.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>fip_t_maktx_range.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>ranges_matnr_tt.
 DATA ls_ir_status  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zui5r_cm_status.
 DATA ls_ir_stock_libre  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_cantidad_range.
 DATA ls_ir_stock_pedido  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_cantidad_range.
 DATA ls_ir_stock_total  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_cantidad_range.
 DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>sd_vbeln_ranges.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>zsuitt_cm_materiales_dev.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_materiales_dev=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_refdoc LIKE RANGE OF ls_converted_keys-refdoc.
 DATA ls_refdoc LIKE LINE OF lr_refdoc.
 DATA lr_stock_total LIKE RANGE OF ls_converted_keys-stock_total.
 DATA ls_stock_total LIKE LINE OF lr_stock_total.
 DATA lr_stock_pedido LIKE RANGE OF ls_converted_keys-stock_pedido.
 DATA ls_stock_pedido LIKE LINE OF lr_stock_pedido.
 DATA lr_stock_libre LIKE RANGE OF ls_converted_keys-stock_libre.
 DATA ls_stock_libre LIKE LINE OF lr_stock_libre.
 DATA lr_status_lote LIKE RANGE OF ls_converted_keys-status_lote.
 DATA ls_status_lote LIKE LINE OF lr_status_lote.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
 DATA ls_charg LIKE LINE OF lr_charg.
 DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
 DATA ls_largo LIKE LINE OF lr_largo.
 DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
 DATA ls_kunnr LIKE LINE OF lr_kunnr.
 DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
 DATA ls_alto LIKE LINE OF lr_alto.
 DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
 DATA ls_ancho LIKE LINE OF lr_ancho.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'LGORT'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       READ TABLE lr_lgort INTO ls_lgort INDEX 1.
       IF sy-subrc = 0.
         i_almacen_montaje = ls_lgort-low.
       ENDIF.
     WHEN 'WERKS'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       READ TABLE lr_werks INTO ls_werks INDEX 1.
       IF sy-subrc = 0.
         i_centro_montaje = ls_werks-low.
       ENDIF.
     WHEN 'REFDOC'.              " Equivalent to 'Refdoc' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_refdoc ).

       LOOP AT lr_refdoc INTO ls_refdoc.
         ls_ir_vbeln-high = ls_refdoc-high.
         ls_ir_vbeln-low = ls_refdoc-low.
         ls_ir_vbeln-option = ls_refdoc-option.
         ls_ir_vbeln-sign = ls_refdoc-sign.
         APPEND ls_ir_vbeln TO ir_vbeln.
       ENDLOOP.
       CLEAR lr_refdoc.
     WHEN 'STOCK_TOTAL'.              " Equivalent to 'StockTotal' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_stock_total ).

       LOOP AT lr_stock_total INTO ls_stock_total.
         ls_ir_stock_total-high = ls_stock_total-high.
         ls_ir_stock_total-low = ls_stock_total-low.
         ls_ir_stock_total-option = ls_stock_total-option.
         ls_ir_stock_total-sign = ls_stock_total-sign.
         APPEND ls_ir_stock_total TO ir_stock_total.
       ENDLOOP.
       CLEAR lr_stock_total.
     WHEN 'STOCK_PEDIDO'.              " Equivalent to 'StockPedido' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_stock_pedido ).

       LOOP AT lr_stock_pedido INTO ls_stock_pedido.
         ls_ir_stock_pedido-high = ls_stock_pedido-high.
         ls_ir_stock_pedido-low = ls_stock_pedido-low.
         ls_ir_stock_pedido-option = ls_stock_pedido-option.
         ls_ir_stock_pedido-sign = ls_stock_pedido-sign.
         APPEND ls_ir_stock_pedido TO ir_stock_pedido.
       ENDLOOP.
       CLEAR lr_stock_pedido.
     WHEN 'STOCK_LIBRE'.              " Equivalent to 'StockLibre' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_stock_libre ).

       LOOP AT lr_stock_libre INTO ls_stock_libre.
         ls_ir_stock_libre-high = ls_stock_libre-high.
         ls_ir_stock_libre-low = ls_stock_libre-low.
         ls_ir_stock_libre-option = ls_stock_libre-option.
         ls_ir_stock_libre-sign = ls_stock_libre-sign.
         APPEND ls_ir_stock_libre TO ir_stock_libre.
       ENDLOOP.
       CLEAR lr_stock_libre.
     WHEN 'STATUS_LOTE'.              " Equivalent to 'StatusLote' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_status_lote ).

       LOOP AT lr_status_lote INTO ls_status_lote.
         ls_ir_status-high = ls_status_lote-high.
         ls_ir_status-low = ls_status_lote-low.
         ls_ir_status-option = ls_status_lote-option.
         ls_ir_status-sign = ls_status_lote-sign.
         APPEND ls_ir_status TO ir_status.
       ENDLOOP.
       CLEAR lr_status_lote.
     WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_matnr ).

       LOOP AT lr_matnr INTO ls_matnr.
         ls_ir_matnr-high = ls_matnr-high.
         ls_ir_matnr-low = ls_matnr-low.
         ls_ir_matnr-option = ls_matnr-option.
         ls_ir_matnr-sign = ls_matnr-sign.
         APPEND ls_ir_matnr TO ir_matnr.
       ENDLOOP.
       CLEAR lr_matnr.
     WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_maktx ).

       LOOP AT lr_maktx INTO ls_maktx.
         ls_ir_maktx-high = ls_maktx-high.
         ls_ir_maktx-low = ls_maktx-low.
         ls_ir_maktx-option = ls_maktx-option.
         ls_ir_maktx-sign = ls_maktx-sign.
         APPEND ls_ir_maktx TO ir_maktx.
       ENDLOOP.
       CLEAR lr_maktx.
     WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_charg ).

       LOOP AT lr_charg INTO ls_charg.
         ls_ir_lote-high = ls_charg-high.
         ls_ir_lote-low = ls_charg-low.
         ls_ir_lote-option = ls_charg-option.
         ls_ir_lote-sign = ls_charg-sign.
         APPEND ls_ir_lote TO ir_lote.
       ENDLOOP.
       CLEAR lr_charg.
     WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_largo ).

       LOOP AT lr_largo INTO ls_largo.
         ls_ir_largo-high = ls_largo-high.
         ls_ir_largo-low = ls_largo-low.
         ls_ir_largo-option = ls_largo-option.
         ls_ir_largo-sign = ls_largo-sign.
         APPEND ls_ir_largo TO ir_largo.
       ENDLOOP.
       CLEAR lr_largo.
     WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr ).

       LOOP AT lr_kunnr INTO ls_kunnr.
         ls_ir_kunnr-high = ls_kunnr-high.
         ls_ir_kunnr-low = ls_kunnr-low.
         ls_ir_kunnr-option = ls_kunnr-option.
         ls_ir_kunnr-sign = ls_kunnr-sign.
         APPEND ls_ir_kunnr TO ir_kunnr.
       ENDLOOP.
       CLEAR lr_kunnr.
     WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_alto ).

       LOOP AT lr_alto INTO ls_alto.
         ls_ir_alto-high = ls_alto-high.
         ls_ir_alto-low = ls_alto-low.
         ls_ir_alto-option = ls_alto-option.
         ls_ir_alto-sign = ls_alto-sign.
         APPEND ls_ir_alto TO ir_alto.
       ENDLOOP.
       CLEAR lr_alto.
     WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_ancho ).

       LOOP AT lr_ancho INTO ls_ancho.
         ls_ir_ancho-high = ls_ancho-high.
         ls_ir_ancho-low = ls_ancho-low.
         ls_ir_ancho-option = ls_ancho-option.
         ls_ir_ancho-sign = ls_ancho-sign.
         APPEND ls_ir_ancho TO ir_ancho.
       ENDLOOP.
       CLEAR lr_ancho.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_MATERIALES_DEV'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_vbeln          = ir_vbeln
           i_almacen_montaje = i_almacen_montaje
           i_centro_montaje  = i_centro_montaje
           ir_stock_total    = ir_stock_total
           ir_stock_pedido   = ir_stock_pedido
           ir_stock_libre    = ir_stock_libre
           ir_status         = ir_status
           ir_matnr          = ir_matnr
           ir_maktx          = ir_maktx
           ir_lote           = ir_lote
           ir_largo          = ir_largo
           ir_kunnr          = ir_kunnr
           ir_alto           = ir_alto
           ir_ancho          = ir_ancho
         IMPORTING
           o_return          = o_return
           o_data            = o_data
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_vbeln              = ir_vbeln
       i_almacen_montaje     = i_almacen_montaje
       i_centro_montaje      = i_centro_montaje
       ir_stock_total        = ir_stock_total
       ir_stock_pedido       = ir_stock_pedido
       ir_stock_libre        = ir_stock_libre
       ir_status             = ir_status
       ir_matnr              = ir_matnr
       ir_maktx              = ir_maktx
       ir_lote               = ir_lote
       ir_largo              = ir_largo
       ir_kunnr              = ir_kunnr
       ir_alto               = ir_alto
       ir_ancho              = ir_ancho
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-num_pallets = ls_o_data-num_pallets.
   ls_gw_o_data-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
   ls_gw_o_data-dimensiones = ls_o_data-dimensiones.
   ls_gw_o_data-cajas_pallets = ls_o_data-cajas_pallets.
   ls_gw_o_data-tipo_pallet = ls_o_data-tipo_pallet.
   ls_gw_o_data-estado = ls_o_data-estado.
   ls_gw_o_data-meins = ls_o_data-meins.
   ls_gw_o_data-charg = ls_o_data-charg.
   ls_gw_o_data-stock_total = ls_o_data-stock_total.
   ls_gw_o_data-stock_pedido = ls_o_data-stock_pedido.
   ls_gw_o_data-stock_libre = ls_o_data-stock_libre.
   ls_gw_o_data-gualdera = ls_o_data-gualdera.
   ls_gw_o_data-kunnr_name = ls_o_data-kunnr_name.
   ls_gw_o_data-kunnr = ls_o_data-kunnr.
   ls_gw_o_data-status_text = ls_o_data-status_text.
   ls_gw_o_data-status_lote = ls_o_data-status_lote.
   ls_gw_o_data-alto_uom = ls_o_data-alto_uom.
   ls_gw_o_data-alto = ls_o_data-alto.
   ls_gw_o_data-ancho_uom = ls_o_data-ancho_uom.
   ls_gw_o_data-ancho = ls_o_data-ancho.
   ls_gw_o_data-largo_uom = ls_o_data-largo_uom.
   ls_gw_o_data-largo = ls_o_data-largo.
   ls_gw_o_data-lgort = ls_o_data-lgort.
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-maktx = ls_o_data-maktx.
   ls_gw_o_data-matnr = ls_o_data-matnr.
   ls_gw_o_data-refdocitem = ls_o_data-refdocitem.
   ls_gw_o_data-refdoc = ls_o_data-refdoc.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method MATERIALESDEVSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESDEVSET_UPDATE_ENTITY'.
  endmethod.
  method MATERIALESSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESSET_CREATE_ENTITY'.
  endmethod.
  method MATERIALESSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESSET_DELETE_ENTITY'.
  endmethod.
  method MATERIALESSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESSET_GET_ENTITY'.
  endmethod.
  method MATERIALESSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_get_materiales=>lgort_d.
 DATA i_centro_montaje TYPE zif_zui5_cm_get_materiales=>werks_d.
 DATA i_tknum TYPE zif_zui5_cm_get_materiales=>tknum.
 DATA ir_alto  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_dimensiones_range.
 DATA ir_ancho  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_dimensiones_range.
 DATA ir_kunnr  TYPE zif_zui5_cm_get_materiales=>zsui_cm_kunnr_range_t.
 DATA ir_largo  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_dimensiones_range.
 DATA ir_lote  TYPE zif_zui5_cm_get_materiales=>ranges_charg_tt.
 DATA ir_maktx  TYPE zif_zui5_cm_get_materiales=>fip_t_maktx_range.
 DATA ir_matnr  TYPE zif_zui5_cm_get_materiales=>ranges_matnr_tt.
 DATA ir_status  TYPE zif_zui5_cm_get_materiales=>zui5r_cm_status.
 DATA ir_stock_libre  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_cantidad_range.
 DATA ir_stock_pedido  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_cantidad_range.
 DATA ir_stock_total  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_cantidad_range.
 DATA o_data  TYPE zif_zui5_cm_get_materiales=>zsuitt_cm_materiales.
 DATA o_return  TYPE zif_zui5_cm_get_materiales=>bapiret2_t.
 DATA ls_ir_alto  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_ancho  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_get_materiales=>zsui_cm_kunnr_range_t.
 DATA ls_ir_largo  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_lote  TYPE LINE OF zif_zui5_cm_get_materiales=>ranges_charg_tt.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_materiales=>fip_t_maktx_range.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_materiales=>ranges_matnr_tt.
 DATA ls_ir_status  TYPE LINE OF zif_zui5_cm_get_materiales=>zui5r_cm_status.
 DATA ls_ir_stock_libre  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_cantidad_range.
 DATA ls_ir_stock_pedido  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_cantidad_range.
 DATA ls_ir_stock_total  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_cantidad_range.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_materiales=>zsuitt_cm_materiales.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_materiales=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
 DATA ls_charg LIKE LINE OF lr_charg.
 DATA lr_stock_total LIKE RANGE OF ls_converted_keys-stock_total.
 DATA ls_stock_total LIKE LINE OF lr_stock_total.
 DATA lr_stock_pedido LIKE RANGE OF ls_converted_keys-stock_pedido.
 DATA ls_stock_pedido LIKE LINE OF lr_stock_pedido.
 DATA lr_stock_libre LIKE RANGE OF ls_converted_keys-stock_libre.
 DATA ls_stock_libre LIKE LINE OF lr_stock_libre.
 DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
 DATA ls_kunnr LIKE LINE OF lr_kunnr.
 DATA lr_status_lote LIKE RANGE OF ls_converted_keys-status_lote.
 DATA ls_status_lote LIKE LINE OF lr_status_lote.
 DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
 DATA ls_alto LIKE LINE OF lr_alto.
 DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
 DATA ls_ancho LIKE LINE OF lr_ancho.
 DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
 DATA ls_largo LIKE LINE OF lr_largo.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'LGORT'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       READ TABLE lr_lgort INTO ls_lgort INDEX 1.
       IF sy-subrc = 0.
         i_almacen_montaje = ls_lgort-low.
       ENDIF.
     WHEN 'WERKS'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       READ TABLE lr_werks INTO ls_werks INDEX 1.
       IF sy-subrc = 0.
         i_centro_montaje = ls_werks-low.
       ENDIF.
     WHEN 'TKNUM'.
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_tknum ).

       READ TABLE lr_tknum INTO ls_tknum INDEX 1.
       IF sy-subrc = 0.
         i_tknum = ls_tknum-low.
       ENDIF.
     WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_charg ).

       LOOP AT lr_charg INTO ls_charg.
         ls_ir_lote-high = ls_charg-high.
         ls_ir_lote-low = ls_charg-low.
         ls_ir_lote-option = ls_charg-option.
         ls_ir_lote-sign = ls_charg-sign.
         APPEND ls_ir_lote TO ir_lote.
       ENDLOOP.
       CLEAR lr_charg.
     WHEN 'STOCK_TOTAL'.              " Equivalent to 'StockTotal' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_stock_total ).

       LOOP AT lr_stock_total INTO ls_stock_total.
         ls_ir_stock_total-high = ls_stock_total-high.
         ls_ir_stock_total-low = ls_stock_total-low.
         ls_ir_stock_total-option = ls_stock_total-option.
         ls_ir_stock_total-sign = ls_stock_total-sign.
         APPEND ls_ir_stock_total TO ir_stock_total.
       ENDLOOP.
       CLEAR lr_stock_total.
     WHEN 'STOCK_PEDIDO'.              " Equivalent to 'StockPedido' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_stock_pedido ).

       LOOP AT lr_stock_pedido INTO ls_stock_pedido.
         ls_ir_stock_pedido-high = ls_stock_pedido-high.
         ls_ir_stock_pedido-low = ls_stock_pedido-low.
         ls_ir_stock_pedido-option = ls_stock_pedido-option.
         ls_ir_stock_pedido-sign = ls_stock_pedido-sign.
         APPEND ls_ir_stock_pedido TO ir_stock_pedido.
       ENDLOOP.
       CLEAR lr_stock_pedido.
     WHEN 'STOCK_LIBRE'.              " Equivalent to 'StockLibre' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_stock_libre ).

       LOOP AT lr_stock_libre INTO ls_stock_libre.
         ls_ir_stock_libre-high = ls_stock_libre-high.
         ls_ir_stock_libre-low = ls_stock_libre-low.
         ls_ir_stock_libre-option = ls_stock_libre-option.
         ls_ir_stock_libre-sign = ls_stock_libre-sign.
         APPEND ls_ir_stock_libre TO ir_stock_libre.
       ENDLOOP.
       CLEAR lr_stock_libre.
     WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr ).

       LOOP AT lr_kunnr INTO ls_kunnr.
         ls_ir_kunnr-high = ls_kunnr-high.
         ls_ir_kunnr-low = ls_kunnr-low.
         ls_ir_kunnr-option = ls_kunnr-option.
         ls_ir_kunnr-sign = ls_kunnr-sign.
         APPEND ls_ir_kunnr TO ir_kunnr.
       ENDLOOP.
       CLEAR lr_kunnr.
     WHEN 'STATUS_LOTE'.              " Equivalent to 'StatusLote' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_status_lote ).

       LOOP AT lr_status_lote INTO ls_status_lote.
         ls_ir_status-high = ls_status_lote-high.
         ls_ir_status-low = ls_status_lote-low.
         ls_ir_status-option = ls_status_lote-option.
         ls_ir_status-sign = ls_status_lote-sign.
         APPEND ls_ir_status TO ir_status.
       ENDLOOP.
       CLEAR lr_status_lote.
     WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_alto ).

       LOOP AT lr_alto INTO ls_alto.
         ls_ir_alto-high = ls_alto-high.
         ls_ir_alto-low = ls_alto-low.
         ls_ir_alto-option = ls_alto-option.
         ls_ir_alto-sign = ls_alto-sign.
         APPEND ls_ir_alto TO ir_alto.
       ENDLOOP.
       CLEAR lr_alto.
     WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_ancho ).

       LOOP AT lr_ancho INTO ls_ancho.
         ls_ir_ancho-high = ls_ancho-high.
         ls_ir_ancho-low = ls_ancho-low.
         ls_ir_ancho-option = ls_ancho-option.
         ls_ir_ancho-sign = ls_ancho-sign.
         APPEND ls_ir_ancho TO ir_ancho.
       ENDLOOP.
       CLEAR lr_ancho.
     WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_largo ).

       LOOP AT lr_largo INTO ls_largo.
         ls_ir_largo-high = ls_largo-high.
         ls_ir_largo-low = ls_largo-low.
         ls_ir_largo-option = ls_largo-option.
         ls_ir_largo-sign = ls_largo-sign.
         APPEND ls_ir_largo TO ir_largo.
       ENDLOOP.
       CLEAR lr_largo.
     WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_maktx ).

       LOOP AT lr_maktx INTO ls_maktx.
         ls_ir_maktx-high = ls_maktx-high.
         ls_ir_maktx-low = ls_maktx-low.
         ls_ir_maktx-option = ls_maktx-option.
         ls_ir_maktx-sign = ls_maktx-sign.
         APPEND ls_ir_maktx TO ir_maktx.
       ENDLOOP.
       CLEAR lr_maktx.
     WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_matnr ).

       LOOP AT lr_matnr INTO ls_matnr.
         ls_ir_matnr-high = ls_matnr-high.
         ls_ir_matnr-low = ls_matnr-low.
         ls_ir_matnr-option = ls_matnr-option.
         ls_ir_matnr-sign = ls_matnr-sign.
         APPEND ls_ir_matnr TO ir_matnr.
       ENDLOOP.
       CLEAR lr_matnr.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_MATERIALES'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_lote           = ir_lote
           ir_stock_total    = ir_stock_total
           ir_stock_pedido   = ir_stock_pedido
           ir_stock_libre    = ir_stock_libre
           ir_kunnr          = ir_kunnr
           ir_status         = ir_status
           ir_alto           = ir_alto
           ir_ancho          = ir_ancho
           ir_largo          = ir_largo
           i_almacen_montaje = i_almacen_montaje
           i_centro_montaje  = i_centro_montaje
           ir_maktx          = ir_maktx
           ir_matnr          = ir_matnr
           i_tknum           = i_tknum
         IMPORTING
           o_return          = o_return
           o_data            = o_data
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_lote               = ir_lote
       ir_stock_total        = ir_stock_total
       ir_stock_pedido       = ir_stock_pedido
       ir_stock_libre        = ir_stock_libre
       ir_kunnr              = ir_kunnr
       ir_status             = ir_status
       ir_alto               = ir_alto
       ir_ancho              = ir_ancho
       ir_largo              = ir_largo
       i_almacen_montaje     = i_almacen_montaje
       i_centro_montaje      = i_centro_montaje
       ir_maktx              = ir_maktx
       ir_matnr              = ir_matnr
       i_tknum               = i_tknum
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
   ls_gw_o_data-cajas_pallets = ls_o_data-cajas_pallets.
   ls_gw_o_data-tipo_pallet = ls_o_data-tipo_pallet.
   ls_gw_o_data-dimensiones = ls_o_data-dimensiones.
   ls_gw_o_data-charg = ls_o_data-charg.
   ls_gw_o_data-stock_total = ls_o_data-stock_total.
   ls_gw_o_data-stock_pedido = ls_o_data-stock_pedido.
   ls_gw_o_data-stock_libre = ls_o_data-stock_libre.
   ls_gw_o_data-kunnr = ls_o_data-kunnr.
   ls_gw_o_data-status_lote = ls_o_data-status_lote.
   ls_gw_o_data-alto = ls_o_data-alto.
   ls_gw_o_data-ancho = ls_o_data-ancho.
   ls_gw_o_data-largo = ls_o_data-largo.
   ls_gw_o_data-lgort = ls_o_data-lgort.
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-maktx = ls_o_data-maktx.
   ls_gw_o_data-matnr = ls_o_data-matnr.
   ls_gw_o_data-estado = ls_o_data-estado.
   ls_gw_o_data-meins = ls_o_data-meins.
   ls_gw_o_data-gualdera = ls_o_data-gualdera.
   ls_gw_o_data-kunnr_name = ls_o_data-kunnr_name.
   ls_gw_o_data-status_text = ls_o_data-status_text.
   ls_gw_o_data-alto_uom = ls_o_data-alto_uom.
   ls_gw_o_data-ancho_uom = ls_o_data-ancho_uom.
   ls_gw_o_data-largo_uom = ls_o_data-largo_uom.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method MATERIALESSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MATERIALESSET_UPDATE_ENTITY'.
  endmethod.
  method MENSAJESSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_CREATE_ENTITY'.
  endmethod.
  method MENSAJESSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_DELETE_ENTITY'.
  endmethod.
  method MENSAJESSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_GET_ENTITY'.
  endmethod.
  method MENSAJESSET_GET_ENTITYSET.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_GET_ENTITYSET'.
  endmethod.
  method MENSAJESSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_UPDATE_ENTITY'.
  endmethod.
  method POSICIONESENTREG_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'POSICIONESENTREG_CREATE_ENTITY'.
  endmethod.
  method POSICIONESENTREG_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'POSICIONESENTREG_DELETE_ENTITY'.
  endmethod.
  method POSICIONESENTREG_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_posnr TYPE zif_zui5_cm_get_pos_entregas=>posnr_vl.
 DATA i_tknum TYPE zif_zui5_cm_get_pos_entregas=>tknum.
 DATA i_vbeln TYPE zif_zui5_cm_get_pos_entregas=>vbeln_vl.
 DATA o_data  TYPE zif_zui5_cm_get_pos_entregas=>zsuitt_cm_posiciones_entrega.
 DATA o_return  TYPE zif_zui5_cm_get_pos_entregas=>bapiret2_t.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsuitt_cm_posiciones_entrega.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'PosicionesEntregaSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_tknum = ls_converted_keys-tknum.
 i_vbeln = ls_converted_keys-vbeln.
 i_posnr = ls_converted_keys-posnr.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_POS_ENTREGAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_tknum        = i_tknum
           i_vbeln        = i_vbeln
           i_posnr        = i_posnr
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_tknum               = i_tknum
       i_vbeln               = i_vbeln
       i_posnr               = i_posnr
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE o_data INTO ls_o_data INDEX 1.
 er_entity-stock_pedido = ls_o_data-stock_pedido.
 er_entity-stock_libre = ls_o_data-stock_libre.
 er_entity-refdocitem = ls_o_data-refdocitem.
 er_entity-flagmontado = ls_o_data-flagmontado.
 er_entity-refdoc = ls_o_data-refdoc.
 er_entity-dimensiones = ls_o_data-dimensiones.
 er_entity-cajas_pallets = ls_o_data-cajas_pallets.
 er_entity-num_pallets = ls_o_data-num_pallets.
 er_entity-tipo_pallet = ls_o_data-tipo_pallet.
 er_entity-kunnr_name = ls_o_data-kunnr_name.
 er_entity-kunnr = ls_o_data-meins.
 er_entity-meins = ls_o_data-meins.
 er_entity-lfimg = ls_o_data-lfimg.
 er_entity-charg = ls_o_data-charg.
 er_entity-status_text = ls_o_data-status_text.
 er_entity-status_lote = ls_o_data-status_lote.
 er_entity-alto_uom = ls_o_data-alto_uom.
 er_entity-alto = ls_o_data-alto.
 er_entity-ancho_uom = ls_o_data-ancho_uom.
 er_entity-ancho = ls_o_data-ancho.
 er_entity-largo_uom = ls_o_data-largo_uom.
 er_entity-largo = ls_o_data-largo.
 er_entity-lgort = ls_o_data-lgort.
 er_entity-werks = ls_o_data-werks.
 er_entity-maktx = ls_o_data-maktx.
 er_entity-matnr = ls_o_data-matnr.
 er_entity-posnr = ls_o_data-posnr.
 er_entity-tknum = ls_o_data-tknum.
 er_entity-vbeln = ls_o_data-vbeln.
 er_entity-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
  endmethod.
  method POSICIONESENTREG_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_alto  TYPE zif_zui5_cm_get_pos_entregas=>zsuitt_cm_dimensiones_range.
 DATA ir_ancho  TYPE zif_zui5_cm_get_pos_entregas=>zsuitt_cm_dimensiones_range.
 DATA ir_kunnr  TYPE zif_zui5_cm_get_pos_entregas=>zsui_cm_kunnr_range_t.
 DATA ir_largo  TYPE zif_zui5_cm_get_pos_entregas=>zsuitt_cm_dimensiones_range.
 DATA ir_lote  TYPE zif_zui5_cm_get_pos_entregas=>ranges_charg_tt.
 DATA ir_maktx  TYPE zif_zui5_cm_get_pos_entregas=>fip_t_maktx_range.
 DATA ir_matnr  TYPE zif_zui5_cm_get_pos_entregas=>ranges_matnr_tt.
 DATA ir_status  TYPE zif_zui5_cm_get_pos_entregas=>zui5r_cm_status.
 DATA ir_tknum  TYPE zif_zui5_cm_get_pos_entregas=>shp_tknum_range_t.
 DATA ir_tplst  TYPE zif_zui5_cm_get_pos_entregas=>zsuitt_cm_tplst_range.
 DATA ir_vbeln  TYPE zif_zui5_cm_get_pos_entregas=>/eby/_lbapidlv_range_vbeln.
 DATA o_data  TYPE zif_zui5_cm_get_pos_entregas=>zsuitt_cm_posiciones_entrega.
 DATA o_return  TYPE zif_zui5_cm_get_pos_entregas=>bapiret2_t.
 DATA ls_ir_alto  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_ancho  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsui_cm_kunnr_range_t.
 DATA ls_ir_largo  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_lote  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>ranges_charg_tt.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>fip_t_maktx_range.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>ranges_matnr_tt.
 DATA ls_ir_status  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zui5r_cm_status.
 DATA ls_ir_tknum  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>shp_tknum_range_t.
 DATA ls_ir_tplst  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsuitt_cm_tplst_range.
 DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>/eby/_lbapidlv_range_vbeln.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>zsuitt_cm_posiciones_entrega.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_pos_entregas=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lv_source_entity_set_name TYPE string.
 DATA entregastranspor_get_entityset TYPE LINE OF zcl_zsui5_cm_gestion_t_mpc=>tt_entregastransporte.
 DATA transportesset_get_entityset TYPE LINE OF zcl_zsui5_cm_gestion_t_mpc=>tt_transportes.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
 DATA ls_kunnr LIKE LINE OF lr_kunnr.
 DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
 DATA ls_charg LIKE LINE OF lr_charg.
 DATA lr_status_lote LIKE RANGE OF ls_converted_keys-status_lote.
 DATA ls_status_lote LIKE LINE OF lr_status_lote.
 DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
 DATA ls_alto LIKE LINE OF lr_alto.
 DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
 DATA ls_ancho LIKE LINE OF lr_ancho.
 DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
 DATA ls_largo LIKE LINE OF lr_largo.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lr_vbeln LIKE RANGE OF ls_converted_keys-vbeln.
 DATA ls_vbeln LIKE LINE OF lr_vbeln.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps key fields to function module parameters
 IF it_key_tab IS NOT INITIAL.

   lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

   IF  lv_source_entity_set_name = 'EntregasTransporteSet'.
     " Convert keys to appropriate entity set structure
     io_tech_request_context->get_converted_source_keys(
       IMPORTING
         es_key_values  = entregastranspor_get_entityset ).
     ls_ir_tknum-low = entregastranspor_get_entityset-tknum. " Equivalent to 'Tknum' property in the service
     ls_ir_tknum-option = 'EQ'.
     ls_ir_tknum-sign = 'I'.
     APPEND ls_ir_tknum TO ir_tknum.

     ls_ir_vbeln-deliv_numb_low = entregastranspor_get_entityset-vbeln. " Equivalent to 'Vbeln' property in the service
     ls_ir_vbeln-option = 'EQ'.
     ls_ir_vbeln-sign = 'I'.
     APPEND ls_ir_vbeln TO ir_vbeln.

   ENDIF.

   IF  lv_source_entity_set_name = 'TransportesSet'.
     " Convert keys to appropriate entity set structure
     io_tech_request_context->get_converted_source_keys(
       IMPORTING
         es_key_values  = transportesset_get_entityset ).
     ls_ir_tplst-tplst_low = transportesset_get_entityset-lgort. " Equivalent to 'Lgort' property in the service
     ls_ir_tplst-tplst_option = 'EQ'.
     ls_ir_tplst-tplst_sign = 'I'.
     APPEND ls_ir_tplst TO ir_tplst.

     ls_ir_tknum-low = transportesset_get_entityset-tknum. " Equivalent to 'Tknum' property in the service
     ls_ir_tknum-option = 'EQ'.
     ls_ir_tknum-sign = 'I'.
     APPEND ls_ir_tknum TO ir_tknum.

   ENDIF.

 ENDIF.

 IF it_filter_select_options IS NOT INITIAL.

* Maps filter table lines to function module parameters
   LOOP AT lt_filter_select_options INTO ls_filter.

     CASE ls_filter-property.
       WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_tknum ).

         LOOP AT lr_tknum INTO ls_tknum.
           ls_ir_tknum-high = ls_tknum-high.
           ls_ir_tknum-low = ls_tknum-low.
           ls_ir_tknum-option = ls_tknum-option.
           ls_ir_tknum-sign = ls_tknum-sign.
           APPEND ls_ir_tknum TO ir_tknum.
         ENDLOOP.
         CLEAR lr_tknum.
       WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_kunnr ).

         LOOP AT lr_kunnr INTO ls_kunnr.
           ls_ir_kunnr-high = ls_kunnr-high.
           ls_ir_kunnr-low = ls_kunnr-low.
           ls_ir_kunnr-option = ls_kunnr-option.
           ls_ir_kunnr-sign = ls_kunnr-sign.
           APPEND ls_ir_kunnr TO ir_kunnr.
         ENDLOOP.
         CLEAR lr_kunnr.
       WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_charg ).

         LOOP AT lr_charg INTO ls_charg.
           ls_ir_lote-high = ls_charg-high.
           ls_ir_lote-low = ls_charg-low.
           ls_ir_lote-option = ls_charg-option.
           ls_ir_lote-sign = ls_charg-sign.
           APPEND ls_ir_lote TO ir_lote.
         ENDLOOP.
         CLEAR lr_charg.
       WHEN 'STATUS_LOTE'.              " Equivalent to 'StatusLote' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_status_lote ).

         LOOP AT lr_status_lote INTO ls_status_lote.
           ls_ir_status-high = ls_status_lote-high.
           ls_ir_status-low = ls_status_lote-low.
           ls_ir_status-option = ls_status_lote-option.
           ls_ir_status-sign = ls_status_lote-sign.
           APPEND ls_ir_status TO ir_status.
         ENDLOOP.
         CLEAR lr_status_lote.
       WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_alto ).

         LOOP AT lr_alto INTO ls_alto.
           ls_ir_alto-high = ls_alto-high.
           ls_ir_alto-low = ls_alto-low.
           ls_ir_alto-option = ls_alto-option.
           ls_ir_alto-sign = ls_alto-sign.
           APPEND ls_ir_alto TO ir_alto.
         ENDLOOP.
         CLEAR lr_alto.
       WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_ancho ).

         LOOP AT lr_ancho INTO ls_ancho.
           ls_ir_ancho-high = ls_ancho-high.
           ls_ir_ancho-low = ls_ancho-low.
           ls_ir_ancho-option = ls_ancho-option.
           ls_ir_ancho-sign = ls_ancho-sign.
           APPEND ls_ir_ancho TO ir_ancho.
         ENDLOOP.
         CLEAR lr_ancho.
       WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_largo ).

         LOOP AT lr_largo INTO ls_largo.
           ls_ir_largo-high = ls_largo-high.
           ls_ir_largo-low = ls_largo-low.
           ls_ir_largo-option = ls_largo-option.
           ls_ir_largo-sign = ls_largo-sign.
           APPEND ls_ir_largo TO ir_largo.
         ENDLOOP.
         CLEAR lr_largo.
       WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_lgort ).

         LOOP AT lr_lgort INTO ls_lgort.
           ls_ir_tplst-tplst_high = ls_lgort-high.
           ls_ir_tplst-tplst_low = ls_lgort-low.
           ls_ir_tplst-tplst_option = ls_lgort-option.
           ls_ir_tplst-tplst_sign = ls_lgort-sign.
           APPEND ls_ir_tplst TO ir_tplst.
         ENDLOOP.
         CLEAR lr_lgort.
       WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_werks ).

         LOOP AT lr_werks INTO ls_werks.
           ls_ir_tplst-tplst_high = ls_werks-high.
           ls_ir_tplst-tplst_low = ls_werks-low.
           ls_ir_tplst-tplst_option = ls_werks-option.
           ls_ir_tplst-tplst_sign = ls_werks-sign.
           APPEND ls_ir_tplst TO ir_tplst.
         ENDLOOP.
         CLEAR lr_werks.
       WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_maktx ).

         LOOP AT lr_maktx INTO ls_maktx.
           ls_ir_maktx-high = ls_maktx-high.
           ls_ir_maktx-low = ls_maktx-low.
           ls_ir_maktx-option = ls_maktx-option.
           ls_ir_maktx-sign = ls_maktx-sign.
           APPEND ls_ir_maktx TO ir_maktx.
         ENDLOOP.
         CLEAR lr_maktx.
       WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_matnr ).

         LOOP AT lr_matnr INTO ls_matnr.
           ls_ir_matnr-high = ls_matnr-high.
           ls_ir_matnr-low = ls_matnr-low.
           ls_ir_matnr-option = ls_matnr-option.
           ls_ir_matnr-sign = ls_matnr-sign.
           APPEND ls_ir_matnr TO ir_matnr.
         ENDLOOP.
         CLEAR lr_matnr.
       WHEN 'VBELN'.              " Equivalent to 'Vbeln' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_vbeln ).

         LOOP AT lr_vbeln INTO ls_vbeln.
           ls_ir_vbeln-deliv_numb_high = ls_vbeln-high.
           ls_ir_vbeln-deliv_numb_low = ls_vbeln-low.
           ls_ir_vbeln-option = ls_vbeln-option.
           ls_ir_vbeln-sign = ls_vbeln-sign.
           APPEND ls_ir_vbeln TO ir_vbeln.
         ENDLOOP.
         CLEAR lr_vbeln.

       WHEN OTHERS.
         " Log message in the application log
         me->/iwbep/if_sb_dpc_comm_services~log_message(
           EXPORTING
             iv_msg_type   = 'E'
             iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
             iv_msg_number = 020
             iv_msg_v1     = ls_filter-property ).
         " Raise Exception
         RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
           EXPORTING
             textid = /iwbep/cx_mgw_tech_exception=>internal_error.
     ENDCASE.

   ENDLOOP.

 ENDIF.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_POS_ENTREGAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_tknum       = ir_tknum
           ir_kunnr       = ir_kunnr
           ir_lote        = ir_lote
           ir_status      = ir_status
           ir_alto        = ir_alto
           ir_ancho       = ir_ancho
           ir_largo       = ir_largo
           ir_tplst       = ir_tplst
           ir_maktx       = ir_maktx
           ir_matnr       = ir_matnr
           ir_vbeln       = ir_vbeln
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_tknum              = ir_tknum
       ir_kunnr              = ir_kunnr
       ir_lote               = ir_lote
       ir_status             = ir_status
       ir_alto               = ir_alto
       ir_ancho              = ir_ancho
       ir_largo              = ir_largo
       ir_tplst              = ir_tplst
       ir_maktx              = ir_maktx
       ir_matnr              = ir_matnr
       ir_vbeln              = ir_vbeln
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-dimensiones = ls_o_data-dimensiones.
   ls_gw_o_data-tknum = ls_o_data-tknum.
   ls_gw_o_data-kunnr_name = ls_o_data-kunnr_name.
   ls_gw_o_data-charg = ls_o_data-charg.
   ls_gw_o_data-status_lote = ls_o_data-status_lote.
   ls_gw_o_data-alto = ls_o_data-alto.
   ls_gw_o_data-ancho = ls_o_data-ancho.
   ls_gw_o_data-largo = ls_o_data-largo.
   ls_gw_o_data-lgort = ls_o_data-lgort.
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-maktx = ls_o_data-maktx.
   ls_gw_o_data-matnr = ls_o_data-matnr.
   ls_gw_o_data-vbeln = ls_o_data-vbeln.
   ls_gw_o_data-cajas_pallets = ls_o_data-cajas_pallets.
   ls_gw_o_data-num_pallets = ls_o_data-num_pallets.
   ls_gw_o_data-tipo_pallet = ls_o_data-tipo_pallet.
   ls_gw_o_data-kunnr = ls_o_data-kunnr.
   ls_gw_o_data-meins = ls_o_data-meins.
   ls_gw_o_data-lfimg = ls_o_data-lfimg.
   ls_gw_o_data-status_text = ls_o_data-status_text.
   ls_gw_o_data-alto_uom = ls_o_data-alto_uom.
   ls_gw_o_data-ancho_uom = ls_o_data-ancho_uom.
   ls_gw_o_data-largo_uom = ls_o_data-largo_uom.
   ls_gw_o_data-posnr = ls_o_data-posnr.
   ls_gw_o_data-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method POSICIONESENTREG_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'POSICIONESENTREG_UPDATE_ENTITY'.
  endmethod.
  method TIPOMENSAJESIMPR_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TIPOMENSAJESIMPR_CREATE_ENTITY'.
  endmethod.
  method TIPOMENSAJESIMPR_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TIPOMENSAJESIMPR_DELETE_ENTITY'.
  endmethod.
  method TIPOMENSAJESIMPR_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TIPOMENSAJESIMPR_GET_ENTITY'.
  endmethod.
  method TIPOMENSAJESIMPR_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_lgort  TYPE zif_zui5_cm_get_clase_mensajes=>ranges_lgort_tt.
 DATA ir_werks  TYPE zif_zui5_cm_get_clase_mensajes=>range_t_werks_d.
 DATA o_data  TYPE zif_zui5_cm_get_clase_mensajes=>zscmtt_clases_mensajes.
 DATA o_return  TYPE zif_zui5_cm_get_clase_mensajes=>bapiret2_t.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_clase_mensajes=>ranges_lgort_tt.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_clase_mensajes=>range_t_werks_d.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_clase_mensajes=>zscmtt_clases_mensajes.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_clase_mensajes=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       LOOP AT lr_lgort INTO ls_lgort.
         ls_ir_lgort-high = ls_lgort-high.
         ls_ir_lgort-low = ls_lgort-low.
         ls_ir_lgort-option = ls_lgort-option.
         ls_ir_lgort-sign = ls_lgort-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_CLASE_MENSAJES'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_lgort       = ir_lgort
           ir_werks       = ir_werks
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_lgort              = ir_lgort
       ir_werks              = ir_werks
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-name1 = ls_o_data-name1.
   ls_gw_o_data-lgort = ls_o_data-lgort.
   ls_gw_o_data-lgobe = ls_o_data-lgobe.
   ls_gw_o_data-kappl = ls_o_data-kappl.
   ls_gw_o_data-vtext_kappl = ls_o_data-vtext_kappl.
   ls_gw_o_data-kschl = ls_o_data-kschl.
   ls_gw_o_data-vtext_kschl = ls_o_data-vtext_kschl.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method TIPOMENSAJESIMPR_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TIPOMENSAJESIMPR_UPDATE_ENTITY'.
  endmethod.
  method TRANSPORTESSET_CREATE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_crear_transporte=>lgort_d.
 DATA i_transporte TYPE zif_zui5_cm_crear_transporte=>zsuis_cm_get_transportes.
 DATA o_transporte TYPE zif_zui5_cm_crear_transporte=>zsuis_cm_get_transportes.
 DATA o_return  TYPE zif_zui5_cm_crear_transporte=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_crear_transporte=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_request_input_data TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_transportes.
 DATA ls_entity TYPE REF TO data.
 DATA lo_tech_read_request_context TYPE REF TO /iwbep/cl_sb_gen_read_aftr_crt.
 DATA ls_key TYPE /iwbep/s_mgw_tech_pair.
 DATA lt_keys TYPE /iwbep/t_mgw_tech_pairs.
 DATA lv_entityset_name TYPE string.
 DATA lv_entity_name TYPE string.
 FIELD-SYMBOLS: <ls_data> TYPE any.
 DATA ls_converted_keys LIKE er_entity.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get request input data
 io_data_provider->read_entry_data( IMPORTING es_data = ls_request_input_data ).

* Map request input fields to function module parameters
 i_almacen_montaje = ls_request_input_data-lgort.
 i_transporte-remolque = ls_request_input_data-remolque.
 i_transporte-centro_montaje = ls_request_input_data-centro_montaje.
 i_transporte-route = ls_request_input_data-route.
 i_transporte-telefono = ls_request_input_data-telefono.
 i_transporte-zzconductor_name = ls_request_input_data-zzconductor_name.
 i_transporte-tknum = ls_request_input_data-tknum.
 i_transporte-tdlnr = ls_request_input_data-tdlnr.
 i_transporte-tdlnr_name = ls_request_input_data-tdlnr_name.
 i_transporte-zzconductor = ls_request_input_data-zzconductor.
 i_transporte-signi = ls_request_input_data-signi.
 i_transporte-sttrg = ls_request_input_data-sttrg.
 i_transporte-sttrg_name = ls_request_input_data-sttrg_name.
 i_transporte-erdat = ls_request_input_data-erdat.
 i_transporte-kunwe = ls_request_input_data-kunwe.
 i_transporte-kunwe_name = ls_request_input_data-kunwe_name.
 i_transporte-almacen_montaje = ls_request_input_data-almacen_montaje.
 i_transporte-shtyp = ls_request_input_data-shtyp.
 i_transporte-monitor = ls_request_input_data-monitor.
 i_transporte-tipotrans = ls_request_input_data-tipotrans.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_CREAR_TRANSPORTE'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_transporte      = i_transporte
           i_almacen_montaje = i_almacen_montaje
         IMPORTING
           o_return          = o_return
           o_transporte      = o_transporte
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_transporte          = i_transporte
       i_almacen_montaje     = i_almacen_montaje
     IMPORTING
       o_return              = o_return
       o_transporte          = o_transporte
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
*-------------------------------------------------------------------------*
*             - Read After Create -
*-------------------------------------------------------------------------*
 CREATE OBJECT lo_tech_read_request_context.

* Create key table for the read operation

 ls_key-name = 'LGORT'.
 ls_key-value = i_almacen_montaje.
 IF ls_key-value IS NOT INITIAL.
   APPEND ls_key TO lt_keys.
 ENDIF.

 ls_key-name = 'TKNUM'.
 ls_key-value = i_transporte-tknum.
 IF ls_key IS NOT INITIAL.
   APPEND ls_key TO lt_keys.
 ENDIF.

 ls_key-name = 'TKNUM'.
 ls_key-value = o_transporte-tknum.
 IF ls_key IS NOT INITIAL.
   APPEND ls_key TO lt_keys.
 ENDIF.

* Set into request context object the key table and the entity set name
 lo_tech_read_request_context->set_keys( EXPORTING  it_keys = lt_keys ).
 lv_entityset_name = io_tech_request_context->get_entity_set_name( ).
 lo_tech_read_request_context->set_entityset_name( EXPORTING iv_entityset_name = lv_entityset_name ).
 lv_entity_name = io_tech_request_context->get_entity_type_name( ).
 lo_tech_read_request_context->set_entity_type_name( EXPORTING iv_entity_name = lv_entity_name ).

* Call read after create
 /iwbep/if_mgw_appl_srv_runtime~get_entity(
   EXPORTING
     iv_entity_name     = iv_entity_name
     iv_entity_set_name = iv_entity_set_name
     iv_source_name     = iv_source_name
     it_key_tab         = it_key_tab
     io_tech_request_context = lo_tech_read_request_context
     it_navigation_path = it_navigation_path
   IMPORTING
     er_entity          = ls_entity ).

* Send the read response to the caller interface
 ASSIGN ls_entity->* TO <ls_data>.
 er_entity = <ls_data>.
  endmethod.
  method TRANSPORTESSET_DELETE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_borrar_transporte=>lgort_d.
 DATA i_transporte TYPE zif_zui5_cm_borrar_transporte=>tknum.
 DATA o_return  TYPE zif_zui5_cm_borrar_transporte=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_borrar_transporte=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys TYPE zcl_zsui5_cm_gestion_t_mpc=>ts_transportes.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

* Maps key fields to function module parameters

 i_transporte = ls_converted_keys-tknum.
 i_almacen_montaje = ls_converted_keys-lgort.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_BORRAR_TRANSPORTE'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_transporte      = i_transporte
           i_almacen_montaje = i_almacen_montaje
         IMPORTING
           o_return          = o_return
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_transporte          = i_transporte
       i_almacen_montaje     = i_almacen_montaje
     IMPORTING
       o_return              = o_return
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
  endmethod.
  method TRANSPORTESSET_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_get_transportes=>lgort_d.
 DATA i_transporte TYPE zif_zui5_cm_get_transportes=>tknum.
 DATA e_data  TYPE zif_zui5_cm_get_transportes=>zsuitt_cm_get_transportes.
 DATA e_return  TYPE zif_zui5_cm_get_transportes=>bapiret2_t.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_transportes=>zsuitt_cm_get_transportes.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_transportes=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'TransportesSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_transporte = ls_converted_keys-tknum.
 i_almacen_montaje = ls_converted_keys-lgort.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_TRANSPORTES'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_transporte      = i_transporte
           i_almacen_montaje = i_almacen_montaje
         IMPORTING
           e_return          = e_return
           e_data            = e_data
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_transporte          = i_transporte
       i_almacen_montaje     = i_almacen_montaje
     IMPORTING
       e_return              = e_return
       e_data                = e_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE e_data INTO ls_e_data INDEX 1.
 er_entity-borrable = ls_e_data-borrable.
 er_entity-editable = ls_e_data-editable.
 er_entity-route_name = ls_e_data-route_name.
 er_entity-zzconductor_name = ls_e_data-zzconductor_name.
 er_entity-route = ls_e_data-route.
 er_entity-kunwe_name = ls_e_data-kunwe_name.
 er_entity-kunwe = ls_e_data-kunwe.
 er_entity-erdat = ls_e_data-erdat.
 er_entity-sttrg_name = ls_e_data-sttrg_name.
 er_entity-sttrg = ls_e_data-sttrg.
 er_entity-signi = ls_e_data-signi.
 er_entity-zzconductor = ls_e_data-zzconductor.
 er_entity-tdlnr_name = ls_e_data-tdlnr_name.
 er_entity-tdlnr = ls_e_data-tdlnr.
 er_entity-tknum = ls_e_data-tknum.
 er_entity-centro_montaje = ls_e_data-centro_montaje.
 er_entity-remolque = ls_e_data-remolque.
 er_entity-telefono = ls_e_data-telefono.
 er_entity-shtyp = ls_e_data-shtyp.
 er_entity-tipotrans = ls_e_data-tipotrans.
 er_entity-monitor = ls_e_data-monitor.
 er_entity-lgort = ls_e_data-almacen_montaje.
  endmethod.
  method TRANSPORTESSET_GET_ENTITYSET.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TRANSPORTESSET_GET_ENTITYSET'.
  endmethod.
  method TRANSPORTESSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TRANSPORTESSET_UPDATE_ENTITY'.
  endmethod.
