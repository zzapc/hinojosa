
class ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT definition
  public
  inheriting from ZCL_ZSUI5_CM_STOCK_MON_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~EXECUTE_ACTION
    redefinition .
protected section.

  methods AYUDATIPOBLOQUEO_GET_ENTITYSET
    redefinition .
  methods STATUSSET_GET_ENTITYSET
    redefinition .
  methods STOCKSET_GET_ENTITYSET
    redefinition .
  methods AYUDATIPOMERMASE_GET_ENTITYSET
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT definition
class ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT implementation.
  METHOD /iwbep/if_mgw_appl_srv_runtime~execute_action.

    DATA:
      ls_parameter         TYPE /iwbep/s_mgw_name_value_pair,
      lo_logger            TYPE REF TO /iwbep/cl_cos_logger,
      io_message_container TYPE REF TO /iwbep/if_message_container,
      lv_error_category    TYPE /iwbep/if_message_container=>ty_error_category,
      lv_text              TYPE bapi_msg,
      ls_return            TYPE bapiret2,
      return               TYPE bapiret2_t.

    DATA:
      wa_stock     TYPE zui5s_cm_stock,
      ts_mpc_stock TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_stock,

      ls_montaje   TYPE zui5s_cm_montaje.

    CASE iv_action_name.

      WHEN 'MontajeCrear'.

        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Cantidad'.
          IF sy-subrc = 0.
            ls_montaje-cantidad = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'TipoBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-tipo_bloqueo = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-cant_bloqueo = ls_parameter-value.
          ENDIF.

        ENDIF.
        CALL FUNCTION 'ZUI5_CM_STOCK_MONTAJE'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

      WHEN 'LiberarDevolucion'.
        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Cantidad'.
          IF sy-subrc = 0.
            ls_montaje-cantidad = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

        ENDIF.
        CALL FUNCTION 'ZUI5_CM_LIBERAR_STOCK_MONTAJE'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

      WHEN 'MontajeAnular'.
        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Cantidad'.
          IF sy-subrc = 0.
            ls_montaje-cantidad = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

        ENDIF.

        CALL FUNCTION 'ZUI5_CM_STOCK_MONTAJE_ANULAR'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

      WHEN 'MermaCrear'.

        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'TipoBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-tipo_bloqueo = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-cant_bloqueo = ls_parameter-value.
          ENDIF.

        ENDIF.
        CALL FUNCTION 'ZUI5_CM_STOCK_MERMA'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

      WHEN 'MermaAnular'.
        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Cantidad'.
          IF sy-subrc = 0.
            ls_montaje-cantidad = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'TipoBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-tipo_bloqueo = ls_parameter-value.
          ENDIF.

        ENDIF.

        CALL FUNCTION 'ZUI5_CM_STOCK_MERMA_ANULAR'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

      WHEN 'BloqueoCrear'.

        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Cantidad'.
          IF sy-subrc = 0.
            ls_montaje-cantidad = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'TipoBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-tipo_bloqueo = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-cant_bloqueo = ls_parameter-value.
          ENDIF.

        ENDIF.
        CALL FUNCTION 'ZUI5_CM_STOCK_BLOQUEO'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

      WHEN 'BloqueoAnular'.

        IF it_parameter IS NOT INITIAL.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Werks'.
          IF sy-subrc = 0.
            ls_montaje-werks = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Lgort'.
          IF sy-subrc = 0.
            ls_montaje-lgort = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Matnr'.
          IF sy-subrc = 0.
            ls_montaje-matnr = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Charg'.
          IF sy-subrc = 0.
            ls_montaje-charg = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'Cantidad'.
          IF sy-subrc = 0.
            ls_montaje-cantidad = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadUOM'.
          IF sy-subrc = 0.
            ls_montaje-cantidad_uom = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'TipoBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-tipo_bloqueo = ls_parameter-value.
          ENDIF.

          READ TABLE it_parameter INTO ls_parameter WITH KEY name = 'CantidadBloqueo'.
          IF sy-subrc = 0.
            ls_montaje-cant_bloqueo = ls_parameter-value.
          ENDIF.

        ENDIF.
        CALL FUNCTION 'ZUI5_CM_STOCK_BLOQUEO_ANULAR'
          EXPORTING
            i_montaje = ls_montaje
          IMPORTING
            o_stock   = wa_stock
            o_return  = return.

        MOVE-CORRESPONDING wa_stock TO ts_mpc_stock.

        copy_data_to_ref(
         EXPORTING
           is_data = ts_mpc_stock
         CHANGING
           cr_data = er_data ).

    ENDCASE.

    lo_logger            = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
    io_message_container = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).
    lv_error_category    = /iwbep/if_message_container=>gcs_error_category-processing.

    READ TABLE return WITH KEY type = 'E' TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.

      io_message_container->add_messages_from_bapi(
         it_bapi_messages = return
         iv_determine_leading_msg = /iwbep/if_message_container=>gcs_leading_msg_search_option-first
       ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          textid = /iwbep/cx_mgw_busi_exception=>business_error.
    ELSE.
      DELETE return WHERE type = space.

      io_message_container->add_messages_from_bapi(
          it_bapi_messages = return
          iv_add_to_response_header = abap_true
          iv_determine_leading_msg = /iwbep/if_message_container=>gcs_leading_msg_search_option-first
      ).
    ENDIF.

  ENDMETHOD.
  METHOD ayudatipobloqueo_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_domvalue_l LIKE RANGE OF ls_converted_keys-domvalue_l.
    DATA ls_domvalue_l LIKE LINE OF lr_domvalue_l.
    DATA lr_ddtext LIKE RANGE OF ls_converted_keys-ddtext.
    DATA ls_ddtext LIKE LINE OF lr_ddtext.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_stock_mon_mpc=>tt_ayudatipobloqueo.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or(
        EXPORTING
          iv_instancia = me
          iv_data = ls_entityset
        IMPORTING
          et_filter_select_options_and = lt_filter_select_options_and
          et_filter_select_options_or = lt_filter_select_options_or ).
*      filtros_or( IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.

      zcl_search_dpc=>search_or(
      EXPORTING
        iv_instancia = me
        iv_search = iv_search_string
        iv_data = ls_entityset
        it_filter_select_options = lt_filter_select_options
      IMPORTING
        et_filter_select_options_or = lt_filter_select_options_or ).

*      search_or( EXPORTING iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
*                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.


* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.


    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.

    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_entityset
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'DOMVALUE_L'.              " Equivalent to 'TipoBloqueo' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_domvalue_l ).

            LOOP AT lr_domvalue_l INTO ls_domvalue_l.
              ls_selopt-high = ls_domvalue_l-high.
              ls_selopt-low = ls_domvalue_l-low.
              ls_selopt-option = ls_domvalue_l-option.
              ls_selopt-sign = ls_domvalue_l-sign.
              ls_selopt-shlpfield = 'DOMVALUE_L'.
              ls_selopt-shlpname = 'ZSCMH_TIPO_BLOQ'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'DDTEXT'.              " Equivalent to 'Descripcion' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ddtext ).

            LOOP AT lr_ddtext INTO ls_ddtext.
              ls_selopt-high = ls_ddtext-high.
              ls_selopt-low = ls_ddtext-low.
              ls_selopt-option = ls_ddtext-option.
              ls_selopt-sign = ls_ddtext-sign.
              ls_selopt-shlpfield = 'DDTEXT'.
              ls_selopt-shlpname = 'ZSCMH_TIPO_BLOQ'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'ZSCMH_TIPO_BLOQ'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list.
*        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'DDTEXT'.
            ls_entityset-ddtext = ls_result_list-field_value.
          WHEN 'DOMVALUE_L'.
            ls_entityset-domvalue_l = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.
      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp .
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset. " PMP Comentamos el skip/top por problemas en frontend FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudatipomermase_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_domvalue_l LIKE RANGE OF ls_converted_keys-domvalue_l.
    DATA ls_domvalue_l LIKE LINE OF lr_domvalue_l.
    DATA lr_ddtext LIKE RANGE OF ls_converted_keys-ddtext.
    DATA ls_ddtext LIKE LINE OF lr_ddtext.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_stock_mon_mpc=>tt_ayudatipomerma.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*  me->/iwbep/if_sb_dpc_comm_services~log_message(
*    EXPORTING
*      iv_msg_type   = 'E'
*      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*      iv_msg_number = 025 ).
*  " Raise Exception
*  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*    EXPORTING
*      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      zcl_search_dpc=>filtros_or(
             EXPORTING
               iv_instancia = me
               iv_data = ls_entityset
             IMPORTING
               et_filter_select_options_and = lt_filter_select_options_and
               et_filter_select_options_or = lt_filter_select_options_or ).
*      filtros_or( IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.

      zcl_search_dpc=>search_or(
      EXPORTING
        iv_instancia = me
        iv_search = iv_search_string
        iv_data = ls_entityset
        it_filter_select_options = lt_filter_select_options
      IMPORTING
        et_filter_select_options_or = lt_filter_select_options_or ).

*      search_or( EXPORTING iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
*                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.

    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_entityset
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'DOMVALUE_L'.              " Equivalent to 'TipoMerma' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_domvalue_l ).

            LOOP AT lr_domvalue_l INTO ls_domvalue_l.
              ls_selopt-high = ls_domvalue_l-high.
              ls_selopt-low = ls_domvalue_l-low.
              ls_selopt-option = ls_domvalue_l-option.
              ls_selopt-sign = ls_domvalue_l-sign.
              ls_selopt-shlpfield = 'DOMVALUE_L'.
              ls_selopt-shlpname = 'ZSCMH_TIPO_MERMA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'DDTEXT'.              " Equivalent to 'Descripcion' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ddtext ).

            LOOP AT lr_ddtext INTO ls_ddtext.
              ls_selopt-high = ls_ddtext-high.
              ls_selopt-low = ls_ddtext-low.
              ls_selopt-option = ls_ddtext-option.
              ls_selopt-sign = ls_ddtext-sign.
              ls_selopt-shlpfield = 'DDTEXT'.
              ls_selopt-shlpname = 'ZSCMH_TIPO_MERMA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'ZSCMH_TIPO_MERMA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list.
        " WHERE record_number > ls_paging-skip. PMP Comentamos skip y top

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'DDTEXT'.
            ls_entityset-ddtext = ls_result_list-field_value.
          WHEN 'DOMVALUE_L'.
            ls_entityset-domvalue_l = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp .
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset. " PMP Comentamos skip y top FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  method STATUSSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA o_status  TYPE zif_zui5_cm_status=>zui5tt_cm_status.
 DATA ls_o_status  TYPE LINE OF zif_zui5_cm_status=>zui5tt_cm_status.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_status LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_STATUS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         IMPORTING
           o_status       = o_status
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     IMPORTING
       o_status              = o_status
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_status ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_status INTO ls_o_status
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_status-status_text = ls_o_status-status_text.
   ls_gw_o_status-status = ls_o_status-status.
   APPEND ls_gw_o_status TO et_entityset.
   CLEAR ls_gw_o_status.
 ENDLOOP.

  endmethod.
  METHOD stockset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA ir_budat  TYPE zif_zui5_cm_stocks=>ranges_budat_tt.
    DATA ir_kdmat  TYPE zif_zui5_cm_stocks=>shp_kdmat_range_t.
    DATA ir_kunnr  TYPE zif_zui5_cm_stocks=>range_kunnr_tab.
    DATA ir_kunnr_name  TYPE zif_zui5_cm_stocks=>zsuis_cm_nombres_rang.
    DATA ir_lgort  TYPE zif_zui5_cm_stocks=>range_t_lgort_d.
    DATA ir_maktx  TYPE zif_zui5_cm_stocks=>fip_t_maktx_range.
    DATA ir_status_text  TYPE zif_zui5_cm_stocks=>zsuitt_range_ddtext.
    DATA ir_werks  TYPE zif_zui5_cm_stocks=>range_t_werks_d.
    DATA i_alto  TYPE zif_zui5_cm_stocks=>zui5r_cm_alto.
    DATA i_ancho  TYPE zif_zui5_cm_stocks=>zui5r_cm_ancho.
    DATA i_charg  TYPE zif_zui5_cm_stocks=>ranges_charg_tt.
    DATA i_largo  TYPE zif_zui5_cm_stocks=>zui5r_cm_largo.
    DATA i_matnr  TYPE zif_zui5_cm_stocks=>ranges_matnr_tt.
    DATA i_status  TYPE zif_zui5_cm_stocks=>zui5r_cm_status.
    DATA o_stock  TYPE zif_zui5_cm_stocks=>zui5tt_cm_stock.
    DATA ls_ir_budat  TYPE LINE OF zif_zui5_cm_stocks=>ranges_budat_tt.
    DATA ls_ir_kdmat  TYPE LINE OF zif_zui5_cm_stocks=>shp_kdmat_range_t.
    DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_stocks=>range_kunnr_tab.
    DATA ls_ir_kunnr_name  TYPE LINE OF zif_zui5_cm_stocks=>zsuis_cm_nombres_rang.
    DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_stocks=>range_t_lgort_d.
    DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_stocks=>fip_t_maktx_range.
    DATA ls_ir_medidacaja  TYPE LINE OF zif_zui5_cm_stocks=>rseloption.
    DATA ir_medidacaja  TYPE zif_zui5_cm_stocks=>rseloption.
    DATA ls_ir_status_text  TYPE LINE OF zif_zui5_cm_stocks=>zsuitt_range_ddtext.
    DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_stocks=>range_t_werks_d.
    DATA ls_i_alto  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_alto.
    DATA ls_i_ancho  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_ancho.
    DATA ls_i_charg  TYPE LINE OF zif_zui5_cm_stocks=>ranges_charg_tt.
    DATA ls_i_largo  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_largo.
    DATA ls_i_matnr  TYPE LINE OF zif_zui5_cm_stocks=>ranges_matnr_tt.
    DATA ls_i_status  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_status.
    DATA ls_o_stock  TYPE LINE OF zif_zui5_cm_stocks=>zui5tt_cm_stock.
    DATA lv_rfc_name TYPE tfdir-funcname.
    DATA lv_destination TYPE rfcdest.
    DATA lv_subrc TYPE syst-subrc.
    DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
    DATA lx_root TYPE REF TO cx_root.
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
    DATA ls_alto LIKE LINE OF lr_alto.
    DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
    DATA ls_largo LIKE LINE OF lr_largo.
    DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
    DATA ls_ancho LIKE LINE OF lr_ancho.
    DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
    DATA ls_charg LIKE LINE OF lr_charg.
    DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
    DATA ls_lgort LIKE LINE OF lr_lgort.
    DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
    DATA ls_matnr LIKE LINE OF lr_matnr.
    DATA lr_status LIKE RANGE OF ls_converted_keys-status.
    DATA ls_status LIKE LINE OF lr_status.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_centro_montaje LIKE RANGE OF ls_converted_keys-centro_montaje.
    DATA ls_centro_montaje LIKE LINE OF lr_centro_montaje.
    DATA lr_almacen_montaje LIKE RANGE OF ls_converted_keys-almacen_montaje.
    DATA ls_almacen_montaje LIKE LINE OF lr_almacen_montaje.
    DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
    DATA ls_kunnr LIKE LINE OF lr_kunnr.
    DATA lr_kunnr_name LIKE RANGE OF ls_converted_keys-kunnr_name.
    DATA ls_kunnr_name LIKE LINE OF lr_kunnr_name.
    DATA lr_status_text LIKE RANGE OF ls_converted_keys-status_text.
    DATA ls_status_text LIKE LINE OF lr_status_text.
    DATA lr_kdmat LIKE RANGE OF ls_converted_keys-kdmat.
    DATA ls_kdmat LIKE LINE OF lr_kdmat.
    DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
    DATA ls_maktx LIKE LINE OF lr_maktx.
    DATA lr_budat LIKE RANGE OF ls_converted_keys-budat.
    DATA ls_budat LIKE LINE OF lr_budat.
    DATA lr_dimension LIKE RANGE OF ls_converted_keys-dimension.
    DATA ls_dimension LIKE LINE OF lr_dimension.
    DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
    DATA ls_gw_o_stock LIKE LINE OF et_entityset.
    DATA lv_skip     TYPE int4.
    DATA lv_top      TYPE int4.

    DATA o_stock_temp  TYPE zif_zui5_cm_stocks=>zui5tt_cm_stock.
    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
*      EXIT.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_gw_o_stock IMPORTING  et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_gw_o_stock it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).


    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.

    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_gw_o_stock
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: o_stock, ir_lgort, ir_werks, i_alto, i_ancho, i_charg, i_largo, i_matnr, i_status, ir_budat,
              ir_kunnr, ir_kunnr_name, ir_kdmat, ir_maktx, ir_status_text, ir_medidacaja.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.

        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to function module parameters
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_ir_werks-sign = ls_werks-sign.
              ls_ir_werks-option = ls_werks-option.
              ls_ir_werks-low = ls_werks-low.
              ls_ir_werks-high = ls_werks-high.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_werks.
          WHEN 'STATUS'.              " Equivalent to 'Status' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_status ).

            LOOP AT lr_status INTO ls_status.
              ls_i_status-high = ls_status-high.
              ls_i_status-low = ls_status-low.
              ls_i_status-option = ls_status-option.
              ls_i_status-sign = ls_status-sign.
              APPEND ls_i_status TO i_status.
            ENDLOOP.
            CLEAR lr_status.
          WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_matnr ).

            LOOP AT lr_matnr INTO ls_matnr.
              ls_i_matnr-high = ls_matnr-high.
              ls_i_matnr-low = ls_matnr-low.
              ls_i_matnr-option = ls_matnr-option.
              ls_i_matnr-sign = ls_matnr-sign.
              APPEND ls_i_matnr TO i_matnr.
            ENDLOOP.
            CLEAR lr_matnr.
          WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

            LOOP AT lr_lgort INTO ls_lgort.
              ls_ir_lgort-sign = ls_lgort-sign.
              ls_ir_lgort-option = ls_lgort-option.
              ls_ir_lgort-low = ls_lgort-low.
              ls_ir_lgort-high = ls_lgort-high.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_lgort.
          WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_charg ).

            LOOP AT lr_charg INTO ls_charg.
              ls_i_charg-high = ls_charg-high.
              ls_i_charg-low = ls_charg-low.
              ls_i_charg-option = ls_charg-option.
              ls_i_charg-sign = ls_charg-sign.
              APPEND ls_i_charg TO i_charg.
            ENDLOOP.
            CLEAR lr_charg.
          WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ancho ).

            LOOP AT lr_ancho INTO ls_ancho.
              ls_i_ancho-high = ls_ancho-high.
              ls_i_ancho-low = ls_ancho-low.
              ls_i_ancho-option = ls_ancho-option.
              ls_i_ancho-sign = ls_ancho-sign.
              APPEND ls_i_ancho TO i_ancho.
            ENDLOOP.
            CLEAR lr_ancho.
          WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_largo ).

            LOOP AT lr_largo INTO ls_largo.
              ls_i_largo-high = ls_largo-high.
              ls_i_largo-low = ls_largo-low.
              ls_i_largo-option = ls_largo-option.
              ls_i_largo-sign = ls_largo-sign.
              APPEND ls_i_largo TO i_largo.
            ENDLOOP.
            CLEAR lr_largo.
          WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_alto ).

            LOOP AT lr_alto INTO ls_alto.
              ls_i_alto-high = ls_alto-high.
              ls_i_alto-low = ls_alto-low.
              ls_i_alto-option = ls_alto-option.
              ls_i_alto-sign = ls_alto-sign.
              APPEND ls_i_alto TO i_alto.
            ENDLOOP.
            CLEAR lr_alto.
          WHEN 'ALMACEN_MONTAJE'.              " Equivalent to 'AlmacenMontaje' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_almacen_montaje ).

            LOOP AT lr_almacen_montaje INTO ls_almacen_montaje.
              ls_ir_lgort-sign = ls_almacen_montaje-sign.
              ls_ir_lgort-option = ls_almacen_montaje-option.
              ls_ir_lgort-low = ls_almacen_montaje-low.
              ls_ir_lgort-high = ls_almacen_montaje-high.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_almacen_montaje.
          WHEN 'CENTRO_MONTAJE'.              " Equivalent to 'CentroMontaje' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_centro_montaje ).

            LOOP AT lr_centro_montaje INTO ls_centro_montaje.
              ls_ir_werks-sign = ls_centro_montaje-sign.
              ls_ir_werks-option = ls_centro_montaje-option.
              ls_ir_werks-low = ls_centro_montaje-low.
              ls_ir_werks-high = ls_centro_montaje-high.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_centro_montaje.

          WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_kunnr ).

            LOOP AT lr_kunnr INTO ls_kunnr.
              ls_ir_kunnr-sign = ls_kunnr-sign.
              ls_ir_kunnr-option = ls_kunnr-option.
              ls_ir_kunnr-low = ls_kunnr-low.
              ls_ir_kunnr-high = ls_kunnr-high.
              APPEND ls_ir_kunnr TO ir_kunnr.
            ENDLOOP.
            CLEAR lr_kunnr.
          WHEN 'KUNNR_NAME'.              " Equivalent to 'KunnrName' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_kunnr_name ).

            LOOP AT lr_kunnr_name INTO ls_kunnr_name.
              ls_ir_kunnr_name-sign = ls_kunnr_name-sign.
              ls_ir_kunnr_name-option = ls_kunnr_name-option.
              ls_ir_kunnr_name-low = ls_kunnr_name-low.
              ls_ir_kunnr_name-high = ls_kunnr_name-high.
              APPEND ls_ir_kunnr_name TO ir_kunnr_name.
            ENDLOOP.
            CLEAR lr_kunnr_name.
          WHEN 'STATUS_TEXT'.              " Equivalent to 'StatusText' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_status_text ).

            LOOP AT lr_status_text INTO ls_status_text.
              ls_ir_status_text-sign = ls_status_text-sign.
              ls_ir_status_text-option = ls_status_text-option.
              ls_ir_status_text-low = ls_status_text-low.
              ls_ir_status_text-high = ls_status_text-high.
              APPEND ls_ir_status_text TO ir_status_text.
            ENDLOOP.
            CLEAR lr_status_text.
          WHEN 'KDMAT'.              " Equivalent to 'Kdmat' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_kdmat ).

            LOOP AT lr_kdmat INTO ls_kdmat.
              ls_ir_kdmat-sign = ls_kdmat-sign.
              ls_ir_kdmat-option = ls_kdmat-option.
              ls_ir_kdmat-low = ls_kdmat-low.
              ls_ir_kdmat-high = ls_kdmat-high.
              APPEND ls_ir_kdmat TO ir_kdmat.
            ENDLOOP.
            CLEAR lr_kdmat.
          WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_maktx ).

            LOOP AT lr_maktx INTO ls_maktx.
              ls_ir_maktx-sign = ls_maktx-sign.
              ls_ir_maktx-option = ls_maktx-option.
              ls_ir_maktx-low = ls_maktx-low.
              ls_ir_maktx-high = ls_maktx-high.
              APPEND ls_ir_maktx TO ir_maktx.
            ENDLOOP.
            CLEAR lr_maktx.
          WHEN 'BUDAT'.              " Equivalent to 'Budat' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_budat ).

            LOOP AT lr_budat INTO ls_budat.
              ls_ir_budat-sign = ls_budat-sign.
              ls_ir_budat-option = ls_budat-option.
              ls_ir_budat-low = ls_budat-low.
              ls_ir_budat-high = ls_budat-high.
              APPEND ls_ir_budat TO ir_budat.
            ENDLOOP.
            CLEAR lr_budat.
          WHEN 'DIMENSION'.              " Equivalent to 'Dimension' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_dimension ).

            LOOP AT lr_dimension INTO ls_dimension.
              ls_ir_medidacaja-sign = ls_dimension-sign.
              ls_ir_medidacaja-option = ls_dimension-option.
              ls_ir_medidacaja-low = ls_dimension-low.
              ls_ir_medidacaja-high = ls_dimension-high.
              APPEND ls_ir_medidacaja TO ir_medidacaja.
            ENDLOOP.
            CLEAR lr_dimension.
          WHEN OTHERS.
*      SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.

      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################

* Get RFC destination
      lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
      lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
      lv_rfc_name = 'ZUI5_CM_STOCKS'.

      IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

        TRY.
            CALL FUNCTION lv_rfc_name
              EXPORTING
                i_alto         = i_alto
                i_largo        = i_largo
                i_ancho        = i_ancho
                i_charg        = i_charg
                ir_lgort       = ir_lgort
                i_matnr        = i_matnr
                i_status       = i_status
                ir_werks       = ir_werks
                ir_kunnr       = ir_kunnr
                ir_kunnr_name  = ir_kunnr_name
                ir_status_text = ir_status_text
                ir_kdmat       = ir_kdmat
                ir_maktx       = ir_maktx
                ir_budat       = ir_budat
                ir_medidacaja  = ir_medidacaja
              IMPORTING
                o_stock        = o_stock
              EXCEPTIONS
                system_failure = 1000 message lv_exc_msg
                OTHERS         = 1002.

            lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
          CATCH cx_root INTO lx_root.
            lv_subrc = 1001.
            lv_exc_msg = lx_root->if_message~get_text( ).
        ENDTRY.

      ELSE.

        CALL FUNCTION lv_rfc_name DESTINATION lv_destination
          EXPORTING
            i_alto                = i_alto
            i_largo               = i_largo
            i_ancho               = i_ancho
            i_charg               = i_charg
            ir_lgort              = ir_lgort
            i_matnr               = i_matnr
            i_status              = i_status
            ir_werks              = ir_werks
            ir_kunnr              = ir_kunnr
            ir_kunnr_name         = ir_kunnr_name
            ir_status_text        = ir_status_text
            ir_kdmat              = ir_kdmat
            ir_maktx              = ir_maktx
            ir_budat              = ir_budat
            ir_medidacaja         = ir_medidacaja
          IMPORTING
            o_stock               = o_stock
          EXCEPTIONS
            system_failure        = 1000 MESSAGE lv_exc_msg
            communication_failure = 1001 MESSAGE lv_exc_msg
            OTHERS                = 1002.

        lv_subrc = sy-subrc.

      ENDIF.

      "MTS: Ajustes
      APPEND LINES OF o_stock TO o_stock_temp.
*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
      IF lv_subrc <> 0.
* Execute the RFC exception handling process
        me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
          EXPORTING
            iv_subrc            = lv_subrc
            iv_exp_message_text = lv_exc_msg ).
      ENDIF.

    ENDDO. "MTS Ajustes
    o_stock = o_stock_temp.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
    IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
      lv_skip = ls_paging-skip + 1.
    ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
    IF  ls_paging-top <> 0
    AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
      lv_top = ls_paging-top + lv_skip - 1.
    ELSEIF ls_paging-top <> 0
    AND    lv_skip IS INITIAL.
      lv_top = ls_paging-top.
    ELSE.
      lv_top = lines( o_stock ).
    ENDIF.

    "Ordenamos
    IF it_order IS NOT INITIAL.
      SORT o_stock BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
      DELETE ADJACENT DUPLICATES FROM o_stock.
    ENDIF.

*  - Map properties from the backend to the Gateway output response table -

    LOOP AT o_stock INTO ls_o_stock
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
         FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
      ls_gw_o_stock-cant_devolucion_uom = ls_o_stock-cant_devolucion_uom.
      ls_gw_o_stock-cant_bloq_defectuosa_uom = ls_o_stock-cant_bloq_defectuosa_uom.
      ls_gw_o_stock-cant_bloq_montaje = ls_o_stock-cant_bloq_montaje.
      ls_gw_o_stock-budat = ls_o_stock-budat.
      ls_gw_o_stock-bwtar = ls_o_stock-bwtar.
      ls_gw_o_stock-charg = ls_o_stock-charg.
      ls_gw_o_stock-cant_disp_uom = ls_o_stock-cant_disp_uom.
      ls_gw_o_stock-cant_disp = ls_o_stock-cant_disp.
      ls_gw_o_stock-alto_uom = ls_o_stock-alto_uom.
      ls_gw_o_stock-alto = ls_o_stock-alto.
      ls_gw_o_stock-ancho_uom = ls_o_stock-ancho_uom.
      ls_gw_o_stock-ancho = ls_o_stock-ancho.
      ls_gw_o_stock-largo_uom = ls_o_stock-largo_uom.
      ls_gw_o_stock-largo = ls_o_stock-largo.
      ls_gw_o_stock-maktx = ls_o_stock-maktx.
      ls_gw_o_stock-kdmat = ls_o_stock-kdmat.
      ls_gw_o_stock-matnr = ls_o_stock-matnr.
      ls_gw_o_stock-lgort = ls_o_stock-lgort.
      ls_gw_o_stock-kunnr = ls_o_stock-kunnr.
      ls_gw_o_stock-kunnr_name = ls_o_stock-kunnr_name.
      ls_gw_o_stock-matnr_bloq = ls_o_stock-matnr_bloq.
      ls_gw_o_stock-stock_bloq = ls_o_stock-stock_bloq.
      ls_gw_o_stock-cant_bloq_montaje_uom = ls_o_stock-cant_bloq_montaje_uom.
      ls_gw_o_stock-cant_bloq_defectuosa = ls_o_stock-cant_bloq_defectuosa.
      ls_gw_o_stock-cant_devolucion = ls_o_stock-cant_devolucion.
      ls_gw_o_stock-dimension = ls_o_stock-dimension.
      ls_gw_o_stock-status = ls_o_stock-status.
      ls_gw_o_stock-werks = ls_o_stock-werks.
      ls_gw_o_stock-status_text = ls_o_stock-status_text.
      APPEND ls_gw_o_stock TO et_entityset.
      CLEAR ls_gw_o_stock.
    ENDLOOP.



  ENDMETHOD.
endclass. "ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT implementation
