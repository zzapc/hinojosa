
class ZCL_ZSUI5_CM_MATCH_COD_DPC_EXT definition
  public
  inheriting from ZCL_ZSUI5_CM_MATCH_COD_DPC
  create public .

public section.
protected section.

  methods AYUDAALMACENESSE_GET_ENTITYSET
    redefinition .
  methods AYUDACENTROSSET_GET_ENTITYSET
    redefinition .
  methods AYUDACONDUCTORSE_GET_ENTITYSET
    redefinition .
  methods AYUDADESTINATARI_GET_ENTITYSET
    redefinition .
  methods AYUDAGRUPOCOMPRA_GET_ENTITYSET
    redefinition .
  methods AYUDALOTESET_GET_ENTITYSET
    redefinition .
  methods AYUDAPROVEEDORSE_GET_ENTITYSET
    redefinition .
  methods AYUDAPUESTOEXPED_GET_ENTITYSET
    redefinition .
  methods AYUDARUTASET_GET_ENTITYSET
    redefinition .
  methods AYUDATIPOCAMIONS_GET_ENTITYSET
    redefinition .
  methods AYUDATIPOPALLETS_GET_ENTITYSET
    redefinition .
  methods AYUDATRANSPORT01_GET_ENTITYSET
    redefinition .
  methods AYUDATRANSPORTES_GET_ENTITYSET
    redefinition .
  methods MATERIALESSET_GET_ENTITYSET
    redefinition .
  methods AYUDAMOTIVOPEDID_GET_ENTITYSET
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_MATCH_COD_DPC_EXT definition
class ZCL_ZSUI5_CM_MATCH_COD_DPC_EXT implementation.
  METHOD ayudaalmacenesse_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA e_data  TYPE zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
    DATA e_data_temp  TYPE zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
    DATA e_return  TYPE zif_zui5_cm_get_almacenes=>bapiret2_t.
    DATA ir_lgort  TYPE zif_zui5_cm_get_almacenes=>range_t_lgort_d.
    DATA ir_logbe  TYPE zif_zui5_cm_get_almacenes=>rseloption.
    DATA ir_werks  TYPE zif_zui5_cm_get_almacenes=>range_t_werks_d.
    DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_almacenes=>zui5tt_cm_almacenes.
    DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_almacenes=>bapiret2_t.
    DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_almacenes=>range_t_lgort_d.
    DATA ls_ir_logbe  TYPE LINE OF zif_zui5_cm_get_almacenes=>rseloption.
    DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_almacenes=>range_t_werks_d.
    DATA lv_rfc_name TYPE tfdir-funcname.
    DATA lv_destination TYPE rfcdest.
    DATA lv_subrc TYPE syst-subrc.
    DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
    DATA lx_root TYPE REF TO cx_root.
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA lv_source_entity_set_name TYPE string.
    DATA ayudacentrosset_get_entityset TYPE LINE OF zcl_zsui5_cm_match_cod_mpc=>tt_ayudacentros.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
    DATA ls_lgort LIKE LINE OF lr_lgort.
    DATA lr_lgobe LIKE RANGE OF ls_converted_keys-lgobe.
    DATA ls_lgobe LIKE LINE OF lr_lgobe.
    DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
    DATA ls_gw_e_data LIKE LINE OF et_entityset.
    DATA lv_skip     TYPE int4.
    DATA lv_top      TYPE int4.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_gw_e_data IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_gw_e_data it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps key fields to function module parameters
    IF it_key_tab IS NOT INITIAL.

      lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

      IF  lv_source_entity_set_name = 'AyudaCentrosSet'.
        " Convert keys to appropriate entity set structure
        io_tech_request_context->get_converted_source_keys(
          IMPORTING
            es_key_values  = ayudacentrosset_get_entityset ).
        ls_ir_werks-low = ayudacentrosset_get_entityset-werks. " Equivalent to 'Werks' property in the service
        ls_ir_werks-option = 'EQ'.
        ls_ir_werks-sign = 'I'.
        APPEND ls_ir_werks TO ir_werks.

      ENDIF.

    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_gw_e_data
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: e_data, ir_lgort, ir_logbe, ir_werks.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ENDIF.
      "MTS: Ajustes filtro OR

*      IF it_filter_select_options IS NOT INITIAL.

* Maps filter table lines to function module parameters
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_ir_werks-high = ls_werks-high.
              ls_ir_werks-low = ls_werks-low.
              ls_ir_werks-option = ls_werks-option.
              ls_ir_werks-sign = ls_werks-sign.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_werks.
          WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

            LOOP AT lr_lgort INTO ls_lgort.
              ls_ir_lgort-high = ls_lgort-high.
              ls_ir_lgort-low = ls_lgort-low.
              ls_ir_lgort-option = ls_lgort-option.
              ls_ir_lgort-sign = ls_lgort-sign.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_lgort.
          WHEN 'LGORT_MULTIPLE'.
            READ TABLE ls_filter-select_options INDEX 1 INTO DATA(t_filter_selopt).
            IF t_filter_selopt IS NOT INITIAL.
              SPLIT t_filter_selopt-low AT ':' INTO TABLE DATA(t_lgort_mult).
              CLEAR: ls_filter-select_options, t_filter_selopt.
              LOOP AT t_lgort_mult INTO DATA(wa_lgort_mult).
                t_filter_selopt-sign = 'I'.
                t_filter_selopt-option = 'EQ'.
                t_filter_selopt-low = wa_lgort_mult.
                APPEND t_filter_selopt TO ls_filter-select_options.
              ENDLOOP.
              lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

              LOOP AT lr_lgort INTO ls_lgort.
                ls_ir_lgort-high = ls_lgort-high.
                ls_ir_lgort-low = ls_lgort-low.
                ls_ir_lgort-option = ls_lgort-option.
                ls_ir_lgort-sign = ls_lgort-sign.
                APPEND ls_ir_lgort TO ir_lgort.
              ENDLOOP.
              CLEAR lr_lgort.
            ENDIF.
          WHEN 'LGOBE'.              " Equivalent to 'Lgobe' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgobe ).

            LOOP AT lr_lgobe INTO ls_lgobe.
              ls_ir_logbe-high = ls_lgobe-high.
              ls_ir_logbe-low = ls_lgobe-low.
              ls_ir_logbe-option = ls_lgobe-option.
              ls_ir_logbe-sign = ls_lgobe-sign.
              APPEND ls_ir_logbe TO ir_logbe.
            ENDLOOP.
            CLEAR lr_lgobe.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.

      ENDLOOP.

*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################

* Get RFC destination
      lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
      lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
      lv_rfc_name = 'ZUI5_CM_GET_ALMACENES'.

      IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

        TRY.
            CALL FUNCTION lv_rfc_name
              EXPORTING
                ir_werks       = ir_werks
                ir_lgort       = ir_lgort
                ir_logbe       = ir_logbe
              IMPORTING
                e_return       = e_return
                e_data         = e_data
              EXCEPTIONS
                system_failure = 1000 message lv_exc_msg
                OTHERS         = 1002.

            lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
          CATCH cx_root INTO lx_root.
            lv_subrc = 1001.
            lv_exc_msg = lx_root->if_message~get_text( ).
        ENDTRY.

      ELSE.

        CALL FUNCTION lv_rfc_name DESTINATION lv_destination
          EXPORTING
            ir_werks              = ir_werks
            ir_lgort              = ir_lgort
            ir_logbe              = ir_logbe
          IMPORTING
            e_return              = e_return
            e_data                = e_data
          EXCEPTIONS
            system_failure        = 1000 MESSAGE lv_exc_msg
            communication_failure = 1001 MESSAGE lv_exc_msg
            OTHERS                = 1002.

        lv_subrc = sy-subrc.

      ENDIF.

      "MTS: Ajustes
      APPEND LINES OF e_data TO e_data_temp.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
      IF lv_subrc <> 0.
* Execute the RFC exception handling process
        me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
          EXPORTING
            iv_subrc            = lv_subrc
            iv_exp_message_text = lv_exc_msg ).
      ENDIF.

      IF e_return IS NOT INITIAL.
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            iv_entity_type = iv_entity_name
            it_return      = e_return
            it_key_tab     = it_key_tab ).
      ENDIF.



    ENDDO. "MTS Ajustes
    e_data = e_data_temp.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
    IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
      lv_skip = ls_paging-skip + 1.
    ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
    IF  ls_paging-top <> 0
    AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
      lv_top = ls_paging-top + lv_skip - 1.
    ELSEIF ls_paging-top <> 0
    AND    lv_skip IS INITIAL.
      lv_top = ls_paging-top.
    ELSE.
      lv_top = lines( e_data ).
    ENDIF.

*    "Ordenamos
*    IF it_order IS NOT INITIAL.
*      SORT e_data BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
*      DELETE ADJACENT DUPLICATES FROM e_data.
*    ENDIF.

*  - Map properties from the backend to the Gateway output response table -
    LOOP AT e_data INTO ls_e_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
     FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
      ls_gw_e_data-werks = ls_e_data-werks.
      ls_gw_e_data-lgort = ls_e_data-lgort.
      ls_gw_e_data-lgobe = ls_e_data-lgobe.
      APPEND ls_gw_e_data TO et_entityset.
      CLEAR ls_gw_e_data.
    ENDLOOP.

*    "Ordenamos
    IF it_order IS NOT INITIAL.
      SORT et_entityset BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
      DELETE ADJACENT DUPLICATES FROM et_entityset.
    ENDIF.

  ENDMETHOD.
  METHOD ayudacentrosset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_name1 LIKE RANGE OF ls_converted_keys-name1.
    DATA ls_name1 LIKE LINE OF lr_name1.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudacentros.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR
*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR


* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_selopt-high = ls_werks-high.
              ls_selopt-low = ls_werks-low.
              ls_selopt-option = ls_werks-option.
              ls_selopt-sign = ls_werks-sign.
              ls_selopt-shlpfield = 'WERKS'.
              ls_selopt-shlpname = 'H_T001W'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'NAME1'.              " Equivalent to 'Name1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_name1 ).

            LOOP AT lr_name1 INTO ls_name1.
              ls_selopt-high = ls_name1-high.
              ls_selopt-low = ls_name1-low.
              ls_selopt-option = ls_name1-option.
              ls_selopt-sign = ls_name1-sign.
              ls_selopt-shlpfield = 'MC_NAME1'.
              ls_selopt-shlpname = 'H_T001W'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
            "SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'H_T001W'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'NAME1'.
            ls_entityset-name1 = ls_result_list-field_value.
          WHEN 'WERKS'.
            ls_entityset-werks = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING werks.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR
  ENDMETHOD.
  METHOD ayudaconductorse_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
    DATA ls_lgort LIKE LINE OF lr_lgort.
    DATA lr_conductor LIKE RANGE OF ls_converted_keys-conductor.
    DATA ls_conductor LIKE LINE OF lr_conductor.
    DATA lr_dni LIKE RANGE OF ls_converted_keys-dni.
    DATA ls_dni LIKE LINE OF lr_dni.
    DATA lr_matricula LIKE RANGE OF ls_converted_keys-matricula.
    DATA ls_matricula LIKE LINE OF lr_matricula.
    DATA lr_remolque LIKE RANGE OF ls_converted_keys-remolque.
    DATA ls_remolque LIKE LINE OF lr_remolque.
    DATA lr_telefono LIKE RANGE OF ls_converted_keys-telefono.
    DATA ls_telefono LIKE LINE OF lr_telefono.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudaconductor.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.


* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_entityset
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_selopt-sign = ls_werks-sign.
              ls_selopt-option = ls_werks-option.
              ls_selopt-low = ls_werks-low.
              ls_selopt-high = ls_werks-high.
              ls_selopt-shlpfield = 'WERKS'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

            LOOP AT lr_lgort INTO ls_lgort.
              ls_selopt-sign = ls_lgort-sign.
              ls_selopt-option = ls_lgort-option.
              ls_selopt-low = ls_lgort-low.
              ls_selopt-high = ls_lgort-high.
              ls_selopt-shlpfield = 'LGORT'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'CONDUCTOR'.              " Equivalent to 'Conductor' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_conductor ).

            LOOP AT lr_conductor INTO ls_conductor.
              ls_selopt-sign = ls_conductor-sign.
              ls_selopt-option = ls_conductor-option.
              ls_selopt-low = ls_conductor-low.
              ls_selopt-high = ls_conductor-high.
              ls_selopt-shlpfield = 'CONDUCTOR'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'DNI'.              " Equivalent to 'Dni' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_dni ).

            LOOP AT lr_dni INTO ls_dni.
              ls_selopt-sign = ls_dni-sign.
              ls_selopt-option = ls_dni-option.
              ls_selopt-low = ls_dni-low.
              ls_selopt-high = ls_dni-high.
              ls_selopt-shlpfield = 'DNI'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MATRICULA'.              " Equivalent to 'Matricula' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_matricula ).

            LOOP AT lr_matricula INTO ls_matricula.
              ls_selopt-sign = ls_matricula-sign.
              ls_selopt-option = ls_matricula-option.
              ls_selopt-low = ls_matricula-low.
              ls_selopt-high = ls_matricula-high.
              ls_selopt-shlpfield = 'MATRICULA'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'REMOLQUE'.              " Equivalent to 'Remolque' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_remolque ).

            LOOP AT lr_remolque INTO ls_remolque.
              ls_selopt-sign = ls_remolque-sign.
              ls_selopt-option = ls_remolque-option.
              ls_selopt-low = ls_remolque-low.
              ls_selopt-high = ls_remolque-high.
              ls_selopt-shlpfield = 'REMOLQUE'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'TELEFONO'.              " Equivalent to 'Telefono' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_telefono ).

            LOOP AT lr_telefono INTO ls_telefono.
              ls_selopt-sign = ls_telefono-sign.
              ls_selopt-option = ls_telefono-option.
              ls_selopt-low = ls_telefono-low.
              ls_selopt-high = ls_telefono-high.
              ls_selopt-shlpfield = 'TELEFONO'.
              ls_selopt-shlpname = 'ZCMH_CONDUCTORES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       sarce ini 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'ZCMH_CONDUCTORES'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'CONDUCTOR'.
            ls_entityset-conductor = ls_result_list-field_value.
          WHEN 'DNI'.
            ls_entityset-dni = ls_result_list-field_value.
          WHEN 'LGORT'.
            ls_entityset-lgort = ls_result_list-field_value.
          WHEN 'MATRICULA'.
            ls_entityset-matricula = ls_result_list-field_value.
          WHEN 'REMOLQUE'.
            ls_entityset-remolque = ls_result_list-field_value.
          WHEN 'TELEFONO'.
            ls_entityset-telefono = ls_result_list-field_value.
          WHEN 'WERKS'.
            ls_entityset-werks = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.
      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING werks lgort conductor dni.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudadestinatari_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
    DATA ls_land1 LIKE LINE OF lr_land1.
    DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
    DATA ls_pstlz LIKE LINE OF lr_pstlz.
    DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
    DATA ls_mcod3 LIKE LINE OF lr_mcod3.
    DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
    DATA ls_mcod1 LIKE LINE OF lr_mcod1.
    DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
    DATA ls_kunnr LIKE LINE OF lr_kunnr.
    DATA lr_loevm LIKE RANGE OF ls_converted_keys-loevm.
    DATA ls_loevm LIKE LINE OF lr_loevm.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudadestinatario.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR
*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.


* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.
    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.

    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR



* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'LAND1'.              " Equivalent to 'Pais' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_land1 ).

            LOOP AT lr_land1 INTO ls_land1.
              ls_selopt-high = ls_land1-high.
              ls_selopt-low = ls_land1-low.
              ls_selopt-option = ls_land1-option.
              ls_selopt-sign = ls_land1-sign.
              ls_selopt-shlpfield = 'LAND1'.
              ls_selopt-shlpname = 'DEBIA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'PSTLZ'.              " Equivalent to 'CodigoPostal' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_pstlz ).

            LOOP AT lr_pstlz INTO ls_pstlz.
              ls_selopt-high = ls_pstlz-high.
              ls_selopt-low = ls_pstlz-low.
              ls_selopt-option = ls_pstlz-option.
              ls_selopt-sign = ls_pstlz-sign.
              ls_selopt-shlpfield = 'PSTLZ'.
              ls_selopt-shlpname = 'DEBIA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MCOD3'.              " Equivalent to 'Poblacion' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_mcod3 ).

            LOOP AT lr_mcod3 INTO ls_mcod3.
              ls_selopt-high = ls_mcod3-high.
              ls_selopt-low = ls_mcod3-low.
              ls_selopt-option = ls_mcod3-option.
              ls_selopt-sign = ls_mcod3-sign.
              ls_selopt-shlpfield = 'MCOD3'.
              ls_selopt-shlpname = 'DEBIA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MCOD1'.              " Equivalent to 'NombreCliente' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_mcod1 ).

            LOOP AT lr_mcod1 INTO ls_mcod1.
              ls_selopt-high = ls_mcod1-high.
              ls_selopt-low = ls_mcod1-low.
              ls_selopt-option = ls_mcod1-option.
              ls_selopt-sign = ls_mcod1-sign.
              ls_selopt-shlpfield = 'MCOD1'.
              ls_selopt-shlpname = 'DEBIA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'KUNNR'.              " Equivalent to 'Cliente' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_kunnr ).

            LOOP AT lr_kunnr INTO ls_kunnr.
              ls_selopt-high = ls_kunnr-high.
              ls_selopt-low = ls_kunnr-low.
              ls_selopt-option = ls_kunnr-option.
              ls_selopt-sign = ls_kunnr-sign.
              ls_selopt-shlpfield = 'KUNNR'.
              ls_selopt-shlpname = 'DEBIA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'LOEVM'.              " Equivalent to 'Borrado' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_loevm ).

            LOOP AT lr_loevm INTO ls_loevm.
              ls_selopt-high = ls_loevm-high.
              ls_selopt-low = ls_loevm-low.
              ls_selopt-option = ls_loevm-option.
              ls_selopt-sign = ls_loevm-sign.
              ls_selopt-shlpfield = 'LOEVM'.
              ls_selopt-shlpname = 'DEBIA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
            "SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'DEBIA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'KUNNR'.
            ls_entityset-kunnr = ls_result_list-field_value.
          WHEN 'LAND1'.
            ls_entityset-land1 = ls_result_list-field_value.
          WHEN 'LOEVM'.
            ls_entityset-loevm = ls_result_list-field_value.
          WHEN 'MCOD1'.
            ls_entityset-mcod1 = ls_result_list-field_value.
          WHEN 'MCOD3'.
            ls_entityset-mcod3 = ls_result_list-field_value.
          WHEN 'PSTLZ'.
            ls_entityset-pstlz = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    delete ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING kunnr.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR
  ENDMETHOD.
  METHOD ayudagrupocompra_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_ekgrp LIKE RANGE OF ls_converted_keys-ekgrp.
    DATA ls_ekgrp LIKE LINE OF lr_ekgrp.
    DATA lr_eknam LIKE RANGE OF ls_converted_keys-eknam.
    DATA ls_eknam LIKE LINE OF lr_eknam.
    DATA lr_ektel LIKE RANGE OF ls_converted_keys-ektel.
    DATA ls_ektel LIKE LINE OF lr_ektel.
    DATA lr_telfx LIKE RANGE OF ls_converted_keys-telfx.
    DATA ls_telfx LIKE LINE OF lr_telfx.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudagrupocompras.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR


* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'EKGRP'.              " Equivalent to 'Ekgrp' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ekgrp ).

            LOOP AT lr_ekgrp INTO ls_ekgrp.
              ls_selopt-high = ls_ekgrp-high.
              ls_selopt-low = ls_ekgrp-low.
              ls_selopt-option = ls_ekgrp-option.
              ls_selopt-sign = ls_ekgrp-sign.
              ls_selopt-shlpfield = 'EKGRP'.
              ls_selopt-shlpname = 'H_T024'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'EKNAM'.              " Equivalent to 'Eknam' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_eknam ).

            LOOP AT lr_eknam INTO ls_eknam.
              ls_selopt-high = ls_eknam-high.
              ls_selopt-low = ls_eknam-low.
              ls_selopt-option = ls_eknam-option.
              ls_selopt-sign = ls_eknam-sign.
              ls_selopt-shlpfield = 'EKNAM'.
              ls_selopt-shlpname = 'H_T024'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'EKTEL'.              " Equivalent to 'Ektel' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ektel ).

            LOOP AT lr_ektel INTO ls_ektel.
              ls_selopt-high = ls_ektel-high.
              ls_selopt-low = ls_ektel-low.
              ls_selopt-option = ls_ektel-option.
              ls_selopt-sign = ls_ektel-sign.
              ls_selopt-shlpfield = 'EKTEL'.
              ls_selopt-shlpname = 'H_T024'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'TELFX'.              " Equivalent to 'Telfx' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_telfx ).

            LOOP AT lr_telfx INTO ls_telfx.
              ls_selopt-high = ls_telfx-high.
              ls_selopt-low = ls_telfx-low.
              ls_selopt-option = ls_telfx-option.
              ls_selopt-sign = ls_telfx-sign.
              ls_selopt-shlpfield = 'TELFX'.
              ls_selopt-shlpname = 'H_T024'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'H_T024'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'EKGRP'.
            ls_entityset-ekgrp = ls_result_list-field_value.
          WHEN 'EKNAM'.
            ls_entityset-eknam = ls_result_list-field_value.
          WHEN 'EKTEL'.
            ls_entityset-ektel = ls_result_list-field_value.
          WHEN 'TELFX'.
            ls_entityset-telfx = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING ekgrp.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudaloteset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
    DATA ls_matnr LIKE LINE OF lr_matnr.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
    DATA ls_charg LIKE LINE OF lr_charg.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudalote.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_matnr ).

            LOOP AT lr_matnr INTO ls_matnr.
              ls_selopt-high = ls_matnr-high.
              ls_selopt-low = ls_matnr-low.
              ls_selopt-option = ls_matnr-option.
              ls_selopt-sign = ls_matnr-sign.
              ls_selopt-shlpfield = 'MATNR'.
              ls_selopt-shlpname = 'H_MCHA_E'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_selopt-high = ls_werks-high.
              ls_selopt-low = ls_werks-low.
              ls_selopt-option = ls_werks-option.
              ls_selopt-sign = ls_werks-sign.
              ls_selopt-shlpfield = 'WERKS'.
              ls_selopt-shlpname = 'H_MCHA_E'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_charg ).

            LOOP AT lr_charg INTO ls_charg.
              ls_selopt-high = ls_charg-high.
              ls_selopt-low = ls_charg-low.
              ls_selopt-option = ls_charg-option.
              ls_selopt-sign = ls_charg-sign.
              ls_selopt-shlpfield = 'CHARG'.
              ls_selopt-shlpname = 'H_MCHA_E'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*             SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'H_MCHA_E'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'CHARG'.
            ls_entityset-charg = ls_result_list-field_value.
          WHEN 'MATNR'.
            ls_entityset-matnr = ls_result_list-field_value.
          WHEN 'WERKS'.
            ls_entityset-werks = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING charg.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudamotivopedid_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_bezei LIKE RANGE OF ls_converted_keys-bezei.
    DATA ls_bezei LIKE LINE OF lr_bezei.
    DATA lr_augru LIKE RANGE OF ls_converted_keys-augru.
    DATA ls_augru LIKE LINE OF lr_augru.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudamotivopedido.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR
*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or(
        EXPORTING
          iv_instancia = me
          iv_data = ls_entityset
        IMPORTING
          et_filter_select_options_and = lt_filter_select_options_and
          et_filter_select_options_or = lt_filter_select_options_or ).
*      filtros_or( IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.

      zcl_search_dpc=>search_or(
      EXPORTING
        iv_instancia = me
        iv_search = iv_search_string
        iv_data = ls_entityset
        it_filter_select_options = lt_filter_select_options
      IMPORTING
        et_filter_select_options_or = lt_filter_select_options_or ).

*      search_or( EXPORTING iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
*                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.

    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_entityset
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'BEZEI'.              " Equivalent to 'AugruName' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_bezei ).

            LOOP AT lr_bezei INTO ls_bezei.
              ls_selopt-sign = ls_bezei-sign.
              ls_selopt-option = ls_bezei-option.
              ls_selopt-low = ls_bezei-low.
              ls_selopt-high = ls_bezei-high.
              ls_selopt-shlpfield = 'BEZEI'.
              ls_selopt-shlpname = 'H_TVAU'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'AUGRU'.              " Equivalent to 'Augru' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_augru ).

            LOOP AT lr_augru INTO ls_augru.
              ls_selopt-sign = ls_augru-sign.
              ls_selopt-option = ls_augru-option.
              ls_selopt-low = ls_augru-low.
              ls_selopt-high = ls_augru-high.
              ls_selopt-shlpfield = 'AUGRU'.
              ls_selopt-shlpname = 'H_TVAU'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'H_TVAU'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'AUGRU'.
            ls_entityset-augru = ls_result_list-field_value.
          WHEN 'BEZEI'.
            ls_entityset-bezei = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR
*      SARCE FIN 4#
*      SARCE INI 5#
    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp .
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR
  ENDMETHOD.
  METHOD ayudaproveedorse_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_loevm LIKE RANGE OF ls_converted_keys-loevm.
    DATA ls_loevm LIKE LINE OF lr_loevm.
    DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
    DATA ls_lifnr LIKE LINE OF lr_lifnr.
    DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
    DATA ls_mcod1 LIKE LINE OF lr_mcod1.
    DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
    DATA ls_mcod3 LIKE LINE OF lr_mcod3.
    DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
    DATA ls_pstlz LIKE LINE OF lr_pstlz.
    DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
    DATA ls_land1 LIKE LINE OF lr_land1.
    DATA lr_sortl LIKE RANGE OF ls_converted_keys-sortl.
    DATA ls_sortl LIKE LINE OF lr_sortl.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudaproveedor.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'LOEVM'.              " Equivalent to 'Loevm' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_loevm ).

            LOOP AT lr_loevm INTO ls_loevm.
              ls_selopt-sign = ls_loevm-sign.
              ls_selopt-option = ls_loevm-option.
              ls_selopt-low = ls_loevm-low.
              ls_selopt-high = ls_loevm-high.
              ls_selopt-shlpfield = 'LOEVM'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lifnr ).

            LOOP AT lr_lifnr INTO ls_lifnr.
              ls_selopt-sign = ls_lifnr-sign.
              ls_selopt-option = ls_lifnr-option.
              ls_selopt-low = ls_lifnr-low.
              ls_selopt-high = ls_lifnr-high.
              ls_selopt-shlpfield = 'LIFNR'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MCOD1'.              " Equivalent to 'Mcod1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_mcod1 ).

            LOOP AT lr_mcod1 INTO ls_mcod1.
              ls_selopt-sign = ls_mcod1-sign.
              ls_selopt-option = ls_mcod1-option.
              ls_selopt-low = ls_mcod1-low.
              ls_selopt-high = ls_mcod1-high.
              ls_selopt-shlpfield = 'MCOD1'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MCOD3'.              " Equivalent to 'Mcod3' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_mcod3 ).

            LOOP AT lr_mcod3 INTO ls_mcod3.
              ls_selopt-sign = ls_mcod3-sign.
              ls_selopt-option = ls_mcod3-option.
              ls_selopt-low = ls_mcod3-low.
              ls_selopt-high = ls_mcod3-high.
              ls_selopt-shlpfield = 'MCOD3'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'PSTLZ'.              " Equivalent to 'Pstlz' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_pstlz ).

            LOOP AT lr_pstlz INTO ls_pstlz.
              ls_selopt-sign = ls_pstlz-sign.
              ls_selopt-option = ls_pstlz-option.
              ls_selopt-low = ls_pstlz-low.
              ls_selopt-high = ls_pstlz-high.
              ls_selopt-shlpfield = 'PSTLZ'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'LAND1'.              " Equivalent to 'Land1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_land1 ).

            LOOP AT lr_land1 INTO ls_land1.
              ls_selopt-sign = ls_land1-sign.
              ls_selopt-option = ls_land1-option.
              ls_selopt-low = ls_land1-low.
              ls_selopt-high = ls_land1-high.
              ls_selopt-shlpfield = 'LAND1'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'SORTL'.              " Equivalent to 'Sortl' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_sortl ).

            LOOP AT lr_sortl INTO ls_sortl.
              ls_selopt-sign = ls_sortl-sign.
              ls_selopt-option = ls_sortl-option.
              ls_selopt-low = ls_sortl-low.
              ls_selopt-high = ls_sortl-high.
              ls_selopt-shlpfield = 'SORTL'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'KREDA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'LAND1'.
            ls_entityset-land1 = ls_result_list-field_value.
          WHEN 'LIFNR'.
            ls_entityset-lifnr = ls_result_list-field_value.
          WHEN 'LOEVM'.
            ls_entityset-loevm = ls_result_list-field_value.
          WHEN 'MCOD1'.
            ls_entityset-mcod1 = ls_result_list-field_value.
          WHEN 'MCOD3'.
            ls_entityset-mcod3 = ls_result_list-field_value.
          WHEN 'PSTLZ'.
            ls_entityset-pstlz = ls_result_list-field_value.
          WHEN 'SORTL'.
            ls_entityset-sortl = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING lifnr.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudapuestoexped_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_vstel LIKE RANGE OF ls_converted_keys-vstel.
    DATA ls_vstel LIKE LINE OF lr_vstel.
    DATA lr_vtext LIKE RANGE OF ls_converted_keys-vtext.
    DATA ls_vtext LIKE LINE OF lr_vtext.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudapuestoexpedicion.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'VSTEL'.              " Equivalent to 'Vstel' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_vstel ).

            LOOP AT lr_vstel INTO ls_vstel.
              ls_selopt-high = ls_vstel-high.
              ls_selopt-low = ls_vstel-low.
              ls_selopt-option = ls_vstel-option.
              ls_selopt-sign = ls_vstel-sign.
              ls_selopt-shlpfield = 'VSTEL'.
              ls_selopt-shlpname = 'H_TVST'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'VTEXT'.              " Equivalent to 'Vtext' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_vtext ).

            LOOP AT lr_vtext INTO ls_vtext.
              ls_selopt-high = ls_vtext-high.
              ls_selopt-low = ls_vtext-low.
              ls_selopt-option = ls_vtext-option.
              ls_selopt-sign = ls_vtext-sign.
              ls_selopt-shlpfield = 'VTEXT'.
              ls_selopt-shlpname = 'H_TVST'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'H_TVST'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'VSTEL'.
            ls_entityset-vstel = ls_result_list-field_value.
          WHEN 'VTEXT'.
            ls_entityset-vtext = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING vstel.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudarutaset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_route LIKE RANGE OF ls_converted_keys-route.
    DATA ls_route LIKE LINE OF lr_route.
    DATA lr_bezei LIKE RANGE OF ls_converted_keys-bezei.
    DATA ls_bezei LIKE LINE OF lr_bezei.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudaruta.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'ROUTE'.              " Equivalent to 'Route' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_route ).

            LOOP AT lr_route INTO ls_route.
              ls_selopt-high = ls_route-high.
              ls_selopt-low = ls_route-low.
              ls_selopt-option = ls_route-option.
              ls_selopt-sign = ls_route-sign.
              ls_selopt-shlpfield = 'ROUTE'.
              ls_selopt-shlpname = 'H_TVRO'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'BEZEI'.              " Equivalent to 'Bezei' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_bezei ).

            LOOP AT lr_bezei INTO ls_bezei.
              ls_selopt-high = ls_bezei-high.
              ls_selopt-low = ls_bezei-low.
              ls_selopt-option = ls_bezei-option.
              ls_selopt-sign = ls_bezei-sign.
              ls_selopt-shlpfield = 'BEZEI'.
              ls_selopt-shlpname = 'H_TVRO'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'H_TVRO'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'BEZEI'.
            ls_entityset-bezei = ls_result_list-field_value.
          WHEN 'ROUTE'.
            ls_entityset-route = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING route.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudatipocamions_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_add_info LIKE RANGE OF ls_converted_keys-add_info.
    DATA ls_add_info LIKE LINE OF lr_add_info.
    DATA lr_bezei LIKE RANGE OF ls_converted_keys-bezei.
    DATA ls_bezei LIKE LINE OF lr_bezei.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudatipocamion.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
*      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR


* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'ADD_INFO'.              " Equivalent to 'TipoCamion' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_add_info ).

            LOOP AT lr_add_info INTO ls_add_info.
              ls_selopt-high = ls_add_info-high.
              ls_selopt-low = ls_add_info-low.
              ls_selopt-option = ls_add_info-option.
              ls_selopt-sign = ls_add_info-sign.
              ls_selopt-shlpfield = 'ADD_INFO'.
              ls_selopt-shlpname = 'ZUI5_CM_TIPO_CAMION'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'BEZEI'.              " Equivalent to 'Bezei' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_bezei ).

            LOOP AT lr_bezei INTO ls_bezei.
              ls_selopt-high = ls_bezei-high.
              ls_selopt-low = ls_bezei-low.
              ls_selopt-option = ls_bezei-option.
              ls_selopt-sign = ls_bezei-sign.
              ls_selopt-shlpfield = 'BEZEI'.
              ls_selopt-shlpname = 'ZUI5_CM_TIPO_CAMION'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'ZUI5_CM_TIPO_CAMION'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'ADD_INFO'.
            ls_entityset-add_info = ls_result_list-field_value.
          WHEN 'BEZEI'.
            ls_entityset-bezei = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp COMPARING add_info.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudatipopallets_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA e_data  TYPE zif_zui5_cm_get_tipo_pallets2=>zscmtt_material_palets_centro.
    DATA e_return  TYPE zif_zui5_cm_get_tipo_pallets2=>bapiret2_t.
    DATA ir_lgort  TYPE zif_zui5_cm_get_tipo_pallets2=>range_t_lgort_d.
    DATA ir_maktx  TYPE zif_zui5_cm_get_tipo_pallets2=>fip_t_maktx_range.
    DATA ir_matnr  TYPE zif_zui5_cm_get_tipo_pallets2=>range_t_matnr.
    DATA ir_werks  TYPE zif_zui5_cm_get_tipo_pallets2=>range_t_werks_d.
    DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_tipo_pallets2=>zscmtt_material_palets_centro.
    DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_tipo_pallets2=>bapiret2_t.
    DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_tipo_pallets2=>range_t_lgort_d.
    DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_tipo_pallets2=>fip_t_maktx_range.
    DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_tipo_pallets2=>range_t_matnr.
    DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_tipo_pallets2=>range_t_werks_d.
    DATA lv_rfc_name TYPE tfdir-funcname.
    DATA lv_destination TYPE rfcdest.
    DATA lv_subrc TYPE syst-subrc.
    DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
    DATA lx_root TYPE REF TO cx_root.
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
    DATA ls_lgort LIKE LINE OF lr_lgort.
    DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
    DATA ls_matnr LIKE LINE OF lr_matnr.
    DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
    DATA ls_maktx LIKE LINE OF lr_maktx.
    DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
    DATA ls_gw_e_data LIKE LINE OF et_entityset.
    DATA lv_skip     TYPE int4.
    DATA lv_top      TYPE int4.

    "MTS: Ajustes filtro OR
    DATA e_data_temp  TYPE zif_zui5_cm_get_tipo_pallets2=>zscmtt_material_palets_centro.
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR
*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_gw_e_data IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_gw_e_data it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_gw_e_data
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: e_data, ir_lgort, ir_maktx, ir_matnr, ir_werks.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to function module parameters
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_ir_werks-high = ls_werks-high.
              ls_ir_werks-low = ls_werks-low.
              ls_ir_werks-option = ls_werks-option.
              ls_ir_werks-sign = ls_werks-sign.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_werks.
          WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

            LOOP AT lr_lgort INTO ls_lgort.
              ls_ir_lgort-high = ls_lgort-high.
              ls_ir_lgort-low = ls_lgort-low.
              ls_ir_lgort-option = ls_lgort-option.
              ls_ir_lgort-sign = ls_lgort-sign.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_lgort.
          WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_matnr ).

            LOOP AT lr_matnr INTO ls_matnr.
              ls_ir_matnr-high = ls_matnr-high.
              ls_ir_matnr-low = ls_matnr-low.
              ls_ir_matnr-option = ls_matnr-option.
              ls_ir_matnr-sign = ls_matnr-sign.
              APPEND ls_ir_matnr TO ir_matnr.
            ENDLOOP.
            CLEAR lr_matnr.
          WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_maktx ).

            LOOP AT lr_maktx INTO ls_maktx.
              ls_ir_maktx-high = ls_maktx-high.
              ls_ir_maktx-low = ls_maktx-low.
              ls_ir_maktx-option = ls_maktx-option.
              ls_ir_maktx-sign = ls_maktx-sign.
              APPEND ls_ir_maktx TO ir_maktx.
            ENDLOOP.
            CLEAR lr_maktx.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.

      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
* Get RFC destination
      lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
      lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
      lv_rfc_name = 'ZUI5_CM_GET_TIPO_PALLETS'.

      IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

        TRY.
            CALL FUNCTION lv_rfc_name
              EXPORTING
                ir_werks       = ir_werks
                ir_lgort       = ir_lgort
                ir_matnr       = ir_matnr
                ir_maktx       = ir_maktx
              IMPORTING
                e_return       = e_return
                e_data         = e_data
              EXCEPTIONS
                system_failure = 1000 message lv_exc_msg
                OTHERS         = 1002.

            lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
          CATCH cx_root INTO lx_root.
            lv_subrc = 1001.
            lv_exc_msg = lx_root->if_message~get_text( ).
        ENDTRY.

      ELSE.

        CALL FUNCTION lv_rfc_name DESTINATION lv_destination
          EXPORTING
            ir_werks              = ir_werks
            ir_lgort              = ir_lgort
            ir_matnr              = ir_matnr
            ir_maktx              = ir_maktx
          IMPORTING
            e_return              = e_return
            e_data                = e_data
          EXCEPTIONS
            system_failure        = 1000 MESSAGE lv_exc_msg
            communication_failure = 1001 MESSAGE lv_exc_msg
            OTHERS                = 1002.

        lv_subrc = sy-subrc.

      ENDIF.

      "MTS: Ajustes
      APPEND LINES OF e_data TO e_data_temp.
*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
      IF lv_subrc <> 0.
* Execute the RFC exception handling process
        me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
          EXPORTING
            iv_subrc            = lv_subrc
            iv_exp_message_text = lv_exc_msg ).
      ENDIF.

      IF e_return IS NOT INITIAL.
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            iv_entity_type = iv_entity_name
            it_return      = e_return
            it_key_tab     = it_key_tab ).
      ENDIF.

    ENDDO. "MTS Ajustes
    e_data = e_data_temp.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
    IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
      lv_skip = ls_paging-skip + 1.
    ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
    IF  ls_paging-top <> 0
    AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
      lv_top = ls_paging-top + lv_skip - 1.
    ELSEIF ls_paging-top <> 0
    AND    lv_skip IS INITIAL.
      lv_top = ls_paging-top.
    ELSE.
      lv_top = lines( e_data ).
    ENDIF.

    "Ordenamos
    IF it_order IS NOT INITIAL.
      SORT e_data BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
      DELETE ADJACENT DUPLICATES FROM e_data.
    ENDIF.
*  - Map properties from the backend to the Gateway output response table -

    LOOP AT e_data INTO ls_e_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
         FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
      ls_gw_e_data-maktx = ls_e_data-maktx.
      ls_gw_e_data-werks = ls_e_data-werks.
      ls_gw_e_data-lgort = ls_e_data-lgort.
      ls_gw_e_data-matnr = ls_e_data-matnr.
      APPEND ls_gw_e_data TO et_entityset.
      CLEAR ls_gw_e_data.
    ENDLOOP.

  ENDMETHOD.
  METHOD ayudatransport01_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
    DATA ls_land1 LIKE LINE OF lr_land1.
    DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
    DATA ls_pstlz LIKE LINE OF lr_pstlz.
    DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
    DATA ls_mcod3 LIKE LINE OF lr_mcod3.
    DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
    DATA ls_mcod1 LIKE LINE OF lr_mcod1.
    DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
    DATA ls_lifnr LIKE LINE OF lr_lifnr.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudatransportista.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR
*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR


* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'LAND1'.              " Equivalent to 'Land1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_land1 ).

            LOOP AT lr_land1 INTO ls_land1.
              ls_selopt-high = ls_land1-high.
              ls_selopt-low = ls_land1-low.
              ls_selopt-option = ls_land1-option.
              ls_selopt-sign = ls_land1-sign.
              ls_selopt-shlpfield = 'LAND1'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'PSTLZ'.              " Equivalent to 'Pstlz' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_pstlz ).

            LOOP AT lr_pstlz INTO ls_pstlz.
              ls_selopt-high = ls_pstlz-high.
              ls_selopt-low = ls_pstlz-low.
              ls_selopt-option = ls_pstlz-option.
              ls_selopt-sign = ls_pstlz-sign.
              ls_selopt-shlpfield = 'PSTLZ'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MCOD3'.              " Equivalent to 'Mcod3' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_mcod3 ).

            LOOP AT lr_mcod3 INTO ls_mcod3.
              ls_selopt-high = ls_mcod3-high.
              ls_selopt-low = ls_mcod3-low.
              ls_selopt-option = ls_mcod3-option.
              ls_selopt-sign = ls_mcod3-sign.
              ls_selopt-shlpfield = 'MCOD3'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'MCOD1'.              " Equivalent to 'Mcod1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_mcod1 ).

            LOOP AT lr_mcod1 INTO ls_mcod1.
              ls_selopt-high = ls_mcod1-high.
              ls_selopt-low = ls_mcod1-low.
              ls_selopt-option = ls_mcod1-option.
              ls_selopt-sign = ls_mcod1-sign.
              ls_selopt-shlpfield = 'MCOD1'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lifnr ).

            LOOP AT lr_lifnr INTO ls_lifnr.
              ls_selopt-high = ls_lifnr-high.
              ls_selopt-low = ls_lifnr-low.
              ls_selopt-option = ls_lifnr-option.
              ls_selopt-sign = ls_lifnr-sign.
              ls_selopt-shlpfield = 'LIFNR'.
              ls_selopt-shlpname = 'KREDA'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'KREDA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'LAND1'.
            ls_entityset-land1 = ls_result_list-field_value.
          WHEN 'LIFNR'.
            ls_entityset-lifnr = ls_result_list-field_value.
          WHEN 'MCOD1'.
            ls_entityset-mcod1 = ls_result_list-field_value.
          WHEN 'MCOD3'.
            ls_entityset-mcod3 = ls_result_list-field_value.
          WHEN 'PSTLZ'.
            ls_entityset-pstlz = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD ayudatransportes_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
    DATA ls_tknum LIKE LINE OF lr_tknum.
    DATA lr_exti1 LIKE RANGE OF ls_converted_keys-exti1.
    DATA ls_exti1 LIKE LINE OF lr_exti1.
    DATA lr_vbtyp LIKE RANGE OF ls_converted_keys-vbtyp.
    DATA ls_vbtyp LIKE LINE OF lr_vbtyp.
    DATA lr_exti2 LIKE RANGE OF ls_converted_keys-exti2.
    DATA ls_exti2 LIKE LINE OF lr_exti2.
    DATA lr_tplst LIKE RANGE OF ls_converted_keys-tplst.
    DATA ls_tplst LIKE LINE OF lr_tplst.
    DATA lr_tdlnr LIKE RANGE OF ls_converted_keys-tdlnr.
    DATA ls_tdlnr LIKE LINE OF lr_tdlnr.
    DATA lr_erdat LIKE RANGE OF ls_converted_keys-erdat.
    DATA ls_erdat LIKE LINE OF lr_erdat.
    DATA lr_route LIKE RANGE OF ls_converted_keys-route.
    DATA ls_route LIKE LINE OF lr_route.
    DATA lr_signi LIKE RANGE OF ls_converted_keys-signi.
    DATA ls_signi LIKE LINE OF lr_signi.
    DATA lr_add01 LIKE RANGE OF ls_converted_keys-add01.
    DATA ls_add01 LIKE LINE OF lr_add01.
    DATA lr_add02 LIKE RANGE OF ls_converted_keys-add02.
    DATA ls_add02 LIKE LINE OF lr_add02.
    DATA lr_add04 LIKE RANGE OF ls_converted_keys-add04.
    DATA ls_add04 LIKE LINE OF lr_add04.
    DATA lr_text1 LIKE RANGE OF ls_converted_keys-text1.
    DATA ls_text1 LIKE LINE OF lr_text1.
    DATA lr_zzconductor LIKE RANGE OF ls_converted_keys-zzconductor.
    DATA ls_zzconductor LIKE LINE OF lr_zzconductor.
    DATA lr_zzdni LIKE RANGE OF ls_converted_keys-zzdni.
    DATA ls_zzdni LIKE LINE OF lr_zzdni.
    DATA lr_zzmatricula LIKE RANGE OF ls_converted_keys-zzmatricula.
    DATA ls_zzmatricula LIKE LINE OF lr_zzmatricula.
    DATA lr_zzremolque LIKE RANGE OF ls_converted_keys-zzremolque.
    DATA ls_zzremolque LIKE LINE OF lr_zzremolque.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lt_entityset_temp TYPE zcl_zsui5_cm_match_cod_mpc=>tt_ayudatransporte.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_entityset IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_entityset it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.


* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.


    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR: lt_entityset_temp, posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_entityset
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).
      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: lt_result_list, ls_message, lt_selopt.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR


* Maps filter table lines to the Search Help select option table
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_tknum ).

            LOOP AT lr_tknum INTO ls_tknum.
              ls_selopt-high = ls_tknum-high.
              ls_selopt-low = ls_tknum-low.
              ls_selopt-option = ls_tknum-option.
              ls_selopt-sign = ls_tknum-sign.
              ls_selopt-shlpfield = 'TKNUM'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'EXTI1'.              " Equivalent to 'Exti1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_exti1 ).

            LOOP AT lr_exti1 INTO ls_exti1.
              ls_selopt-high = ls_exti1-high.
              ls_selopt-low = ls_exti1-low.
              ls_selopt-option = ls_exti1-option.
              ls_selopt-sign = ls_exti1-sign.
              ls_selopt-shlpfield = 'EXTI1'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'VBTYP'.              " Equivalent to 'Vbtyp' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_vbtyp ).

            LOOP AT lr_vbtyp INTO ls_vbtyp.
              ls_selopt-high = ls_vbtyp-high.
              ls_selopt-low = ls_vbtyp-low.
              ls_selopt-option = ls_vbtyp-option.
              ls_selopt-sign = ls_vbtyp-sign.
              ls_selopt-shlpfield = 'VBTYP'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'EXTI2'.              " Equivalent to 'Exti2' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_exti2 ).

            LOOP AT lr_exti2 INTO ls_exti2.
              ls_selopt-high = ls_exti2-high.
              ls_selopt-low = ls_exti2-low.
              ls_selopt-option = ls_exti2-option.
              ls_selopt-sign = ls_exti2-sign.
              ls_selopt-shlpfield = 'EXTI2'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'TPLST'.              " Equivalent to 'Tplst' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_tplst ).

            LOOP AT lr_tplst INTO ls_tplst.
              ls_selopt-high = ls_tplst-high.
              ls_selopt-low = ls_tplst-low.
              ls_selopt-option = ls_tplst-option.
              ls_selopt-sign = ls_tplst-sign.
              ls_selopt-shlpfield = 'TPLST'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'TDLNR'.              " Equivalent to 'Tdlnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_tdlnr ).

            LOOP AT lr_tdlnr INTO ls_tdlnr.
              ls_selopt-high = ls_tdlnr-high.
              ls_selopt-low = ls_tdlnr-low.
              ls_selopt-option = ls_tdlnr-option.
              ls_selopt-sign = ls_tdlnr-sign.
              ls_selopt-shlpfield = 'TDLNR'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ERDAT'.              " Equivalent to 'Erdat' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_erdat ).

            LOOP AT lr_erdat INTO ls_erdat.
              ls_selopt-high = ls_erdat-high.
              ls_selopt-low = ls_erdat-low.
              ls_selopt-option = ls_erdat-option.
              ls_selopt-sign = ls_erdat-sign.
              ls_selopt-shlpfield = 'ERDAT'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ROUTE'.              " Equivalent to 'Route' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_route ).

            LOOP AT lr_route INTO ls_route.
              ls_selopt-high = ls_route-high.
              ls_selopt-low = ls_route-low.
              ls_selopt-option = ls_route-option.
              ls_selopt-sign = ls_route-sign.
              ls_selopt-shlpfield = 'ROUTE'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'SIGNI'.              " Equivalent to 'Signi' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_signi ).

            LOOP AT lr_signi INTO ls_signi.
              ls_selopt-high = ls_signi-high.
              ls_selopt-low = ls_signi-low.
              ls_selopt-option = ls_signi-option.
              ls_selopt-sign = ls_signi-sign.
              ls_selopt-shlpfield = 'SIGNI'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ADD01'.              " Equivalent to 'Add01' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_add01 ).

            LOOP AT lr_add01 INTO ls_add01.
              ls_selopt-high = ls_add01-high.
              ls_selopt-low = ls_add01-low.
              ls_selopt-option = ls_add01-option.
              ls_selopt-sign = ls_add01-sign.
              ls_selopt-shlpfield = 'ADD01'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ADD02'.              " Equivalent to 'Add02' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_add02 ).

            LOOP AT lr_add02 INTO ls_add02.
              ls_selopt-high = ls_add02-high.
              ls_selopt-low = ls_add02-low.
              ls_selopt-option = ls_add02-option.
              ls_selopt-sign = ls_add02-sign.
              ls_selopt-shlpfield = 'ADD02'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ADD04'.              " Equivalent to 'Add04' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_add04 ).

            LOOP AT lr_add04 INTO ls_add04.
              ls_selopt-high = ls_add04-high.
              ls_selopt-low = ls_add04-low.
              ls_selopt-option = ls_add04-option.
              ls_selopt-sign = ls_add04-sign.
              ls_selopt-shlpfield = 'ADD04'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'TEXT1'.              " Equivalent to 'Text1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_text1 ).

            LOOP AT lr_text1 INTO ls_text1.
              ls_selopt-high = ls_text1-high.
              ls_selopt-low = ls_text1-low.
              ls_selopt-option = ls_text1-option.
              ls_selopt-sign = ls_text1-sign.
              ls_selopt-shlpfield = 'TEXT1'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ZZCONDUCTOR'.              " Equivalent to 'Zzconductor' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_zzconductor ).

            LOOP AT lr_zzconductor INTO ls_zzconductor.
              ls_selopt-high = ls_zzconductor-high.
              ls_selopt-low = ls_zzconductor-low.
              ls_selopt-option = ls_zzconductor-option.
              ls_selopt-sign = ls_zzconductor-sign.
              ls_selopt-shlpfield = 'ZZCONDUCTOR'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ZZDNI'.              " Equivalent to 'Zzdni' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_zzdni ).

            LOOP AT lr_zzdni INTO ls_zzdni.
              ls_selopt-high = ls_zzdni-high.
              ls_selopt-low = ls_zzdni-low.
              ls_selopt-option = ls_zzdni-option.
              ls_selopt-sign = ls_zzdni-sign.
              ls_selopt-shlpfield = 'ZZDNI'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ZZMATRICULA'.              " Equivalent to 'Zzmatricula' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_zzmatricula ).

            LOOP AT lr_zzmatricula INTO ls_zzmatricula.
              ls_selopt-high = ls_zzmatricula-high.
              ls_selopt-low = ls_zzmatricula-low.
              ls_selopt-option = ls_zzmatricula-option.
              ls_selopt-sign = ls_zzmatricula-sign.
              ls_selopt-shlpfield = 'ZZMATRICULA'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.
          WHEN 'ZZREMOLQUE'.              " Equivalent to 'Zzremolque' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_zzremolque ).

            LOOP AT lr_zzremolque INTO ls_zzremolque.
              ls_selopt-high = ls_zzremolque-high.
              ls_selopt-low = ls_zzremolque-low.
              ls_selopt-option = ls_zzremolque-option.
              ls_selopt-sign = ls_zzremolque-sign.
              ls_selopt-shlpfield = 'ZZREMOLQUE'.
              ls_selopt-shlpname = 'ZUI5_CM_TRANSPORTES'.
              APPEND ls_selopt TO lt_selopt.
              CLEAR ls_selopt.
            ENDLOOP.

          WHEN OTHERS.
*       SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.
      ENDLOOP.
*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################
*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'ZUI5_CM_TRANSPORTES'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
      IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            is_return      = ls_message
            iv_entity_type = iv_entity_name
            it_key_tab     = it_key_tab ).
      ENDIF.

      CLEAR et_entityset.

      LOOP AT lt_result_list INTO ls_result_list
        WHERE record_number > ls_paging-skip.

        " Move SH results to GW request responce table
        lv_next = sy-tabix + 1. " next loop iteration
        CASE ls_result_list-field_name.
          WHEN 'ADD01'.
            ls_entityset-add01 = ls_result_list-field_value.
          WHEN 'ADD02'.
            ls_entityset-add02 = ls_result_list-field_value.
          WHEN 'ADD04'.
            ls_entityset-add04 = ls_result_list-field_value.
          WHEN 'ERDAT'.
            ls_entityset-erdat = ls_result_list-field_value.
          WHEN 'EXTI1'.
            ls_entityset-exti1 = ls_result_list-field_value.
          WHEN 'EXTI2'.
            ls_entityset-exti2 = ls_result_list-field_value.
          WHEN 'ROUTE'.
            ls_entityset-route = ls_result_list-field_value.
          WHEN 'SIGNI'.
            ls_entityset-signi = ls_result_list-field_value.
          WHEN 'TDLNR'.
            ls_entityset-tdlnr = ls_result_list-field_value.
          WHEN 'TEXT1'.
            ls_entityset-text1 = ls_result_list-field_value.
          WHEN 'TKNUM'.
            ls_entityset-tknum = ls_result_list-field_value.
          WHEN 'TPLST'.
            ls_entityset-tplst = ls_result_list-field_value.
          WHEN 'VBTYP'.
            ls_entityset-vbtyp = ls_result_list-field_value.
          WHEN 'ZZCONDUCTOR'.
            ls_entityset-zzconductor = ls_result_list-field_value.
          WHEN 'ZZDNI'.
            ls_entityset-zzdni = ls_result_list-field_value.
          WHEN 'ZZMATRICULA'.
            ls_entityset-zzmatricula = ls_result_list-field_value.
          WHEN 'ZZREMOLQUE'.
            ls_entityset-zzremolque = ls_result_list-field_value.
        ENDCASE.

        " Check if the next line in the result list is a new record
        READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
        IF sy-subrc <> 0
        OR ls_result_list-record_number <> ls_result_list_next-record_number.
          " Save the collected SH result in the GW request table
          APPEND ls_entityset TO et_entityset.
          CLEAR: ls_result_list_next, ls_entityset.
        ENDIF.

      ENDLOOP.

      "MTS: Ajustes filtro OR
      APPEND LINES OF et_entityset TO lt_entityset_temp.
    ENDDO.   "MTS: Ajustes filtro OR

    "MTS: Ajustes filtro OR
    SORT lt_entityset_temp BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
    DELETE ADJACENT DUPLICATES FROM lt_entityset_temp.
    CLEAR et_entityset.
    IF lv_max_hits NE 0.
      LOOP AT lt_entityset_temp INTO ls_entityset FROM is_paging-skip TO lv_max_hits.
        APPEND ls_entityset TO et_entityset.
      ENDLOOP.
    ELSE.
      et_entityset = lt_entityset_temp.
    ENDIF.
    "MTS: Ajustes filtro OR

  ENDMETHOD.
  METHOD materialesset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA i_almacen_montaje TYPE zif_zui5_cm_get_materiales1=>lgort_d.
    DATA i_centro_montaje TYPE zif_zui5_cm_get_materiales1=>werks_d.
    DATA ir_alto  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_dimensiones_range.
    DATA ir_ancho  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_dimensiones_range.
    DATA ir_largo  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_dimensiones_range.
    DATA ir_lote  TYPE zif_zui5_cm_get_materiales1=>ranges_charg_tt.
    DATA ir_maktx  TYPE zif_zui5_cm_get_materiales1=>fip_t_maktx_range.
    DATA ir_matnr  TYPE zif_zui5_cm_get_materiales1=>ranges_matnr_tt.
    DATA ir_status  TYPE zif_zui5_cm_get_materiales1=>zui5r_cm_status.
    DATA ir_medidacaja  TYPE zif_zui5_cm_get_materiales1=>rseloption.
    DATA ir_stock_libre  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_cantidad_range.
    DATA ir_stock_pedido  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_cantidad_range.
    DATA ir_stock_total  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_cantidad_range.
    DATA o_data  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_materiales.
    DATA o_return  TYPE zif_zui5_cm_get_materiales1=>bapiret2_t.
    DATA ls_ir_alto  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_dimensiones_range.
    DATA ls_ir_ancho  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_dimensiones_range.
    DATA ls_ir_largo  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_dimensiones_range.
    DATA ls_ir_lote  TYPE LINE OF zif_zui5_cm_get_materiales1=>ranges_charg_tt.
    DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_materiales1=>fip_t_maktx_range.
    DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_materiales1=>ranges_matnr_tt.
    DATA ls_ir_medidacaja  TYPE LINE OF zif_zui5_cm_get_materiales1=>rseloption.
    DATA ls_ir_status  TYPE LINE OF zif_zui5_cm_get_materiales1=>zui5r_cm_status.
    DATA ls_ir_stock_libre  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_cantidad_range.
    DATA ls_ir_stock_pedido  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_cantidad_range.
    DATA ls_ir_stock_total  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_cantidad_range.
    DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_materiales1=>zsuitt_cm_materiales.
    DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_materiales1=>bapiret2_t.
    DATA lv_rfc_name TYPE tfdir-funcname.
    DATA lv_destination TYPE rfcdest.
    DATA lv_subrc TYPE syst-subrc.
    DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
    DATA lx_root TYPE REF TO cx_root.
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
    DATA ls_lgort LIKE LINE OF lr_lgort.
    DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
    DATA ls_matnr LIKE LINE OF lr_matnr.
    DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
    DATA ls_maktx LIKE LINE OF lr_maktx.
    DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
    DATA ls_largo LIKE LINE OF lr_largo.
    DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
    DATA ls_ancho LIKE LINE OF lr_ancho.
    DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
    DATA ls_alto LIKE LINE OF lr_alto.
    DATA lr_stock_libre LIKE RANGE OF ls_converted_keys-stock_libre.
    DATA ls_stock_libre LIKE LINE OF lr_stock_libre.
    DATA lr_stock_pedido LIKE RANGE OF ls_converted_keys-stock_pedido.
    DATA ls_stock_pedido LIKE LINE OF lr_stock_pedido.
    DATA lr_stock_total LIKE RANGE OF ls_converted_keys-stock_total.
    DATA ls_stock_total LIKE LINE OF lr_stock_total.
    DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
    DATA ls_charg LIKE LINE OF lr_charg.
    DATA lr_estado LIKE RANGE OF ls_converted_keys-estado.
    DATA ls_estado LIKE LINE OF lr_estado.
    DATA lr_dimensiones LIKE RANGE OF ls_converted_keys-dimensiones.
    DATA ls_dimensiones LIKE LINE OF lr_dimensiones.
    DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
    DATA ls_gw_o_data LIKE LINE OF et_entityset.
    DATA lv_skip     TYPE int4.
    DATA lv_top      TYPE int4.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    DATA o_data_temp  TYPE zif_zui5_cm_get_materiales1=>zsuitt_cm_materiales.
    "MTS: Ajustes filtro OR

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      zcl_search_dpc=>filtros_or( EXPORTING iv_instancia = me iv_data = ls_gw_o_data IMPORTING et_filter_select_options_and = lt_filter_select_options_and et_filter_select_options_or = lt_filter_select_options_or ).
      "MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.
      zcl_search_dpc=>search_or( EXPORTING iv_instancia = me iv_search = iv_search_string iv_data = ls_gw_o_data it_filter_select_options = lt_filter_select_options
                 IMPORTING et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
      IF lv_veces IS INITIAL.
        lv_veces = 1.
      ENDIF.
    ELSE.
      lv_veces = 1.
    ENDIF.

    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
     EXPORTING
       iv_data = ls_gw_o_data
       CHANGING
       ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR: o_data, ir_alto, ir_ancho, ir_largo, ir_lote, ir_maktx, ir_matnr, ir_status, ir_stock_libre, ir_stock_pedido, ir_stock_total.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.

        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR

* Maps filter table lines to function module parameters
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'WERKS'.
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            READ TABLE lr_werks INTO ls_werks INDEX 1.
            IF sy-subrc = 0.
              i_centro_montaje = ls_werks-low.
            ENDIF.
          WHEN 'LGORT'.
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

            READ TABLE lr_lgort INTO ls_lgort INDEX 1.
            IF sy-subrc = 0.
              i_almacen_montaje = ls_lgort-low.
            ENDIF.
          WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_matnr ).

            LOOP AT lr_matnr INTO ls_matnr.
              ls_ir_matnr-sign = ls_matnr-sign.
              ls_ir_matnr-option = ls_matnr-option.
              ls_ir_matnr-low = ls_matnr-low.
              ls_ir_matnr-high = ls_matnr-high.
              APPEND ls_ir_matnr TO ir_matnr.
            ENDLOOP.
            CLEAR lr_matnr.
          WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_maktx ).

            LOOP AT lr_maktx INTO ls_maktx.
              ls_ir_maktx-sign = ls_maktx-sign.
              ls_ir_maktx-option = ls_maktx-option.
              ls_ir_maktx-low = ls_maktx-low.
              ls_ir_maktx-high = ls_maktx-high.
              APPEND ls_ir_maktx TO ir_maktx.
            ENDLOOP.
            CLEAR lr_maktx.
          WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_largo ).

            LOOP AT lr_largo INTO ls_largo.
              ls_ir_largo-sign = ls_largo-sign.
              ls_ir_largo-option = ls_largo-option.
              ls_ir_largo-low = ls_largo-low.
              ls_ir_largo-high = ls_largo-high.
              APPEND ls_ir_largo TO ir_largo.
            ENDLOOP.
            CLEAR lr_largo.
          WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ancho ).

            LOOP AT lr_ancho INTO ls_ancho.
              ls_ir_ancho-sign = ls_ancho-sign.
              ls_ir_ancho-option = ls_ancho-option.
              ls_ir_ancho-low = ls_ancho-low.
              ls_ir_ancho-high = ls_ancho-high.
              APPEND ls_ir_ancho TO ir_ancho.
            ENDLOOP.
            CLEAR lr_ancho.
          WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_alto ).

            LOOP AT lr_alto INTO ls_alto.
              ls_ir_alto-sign = ls_alto-sign.
              ls_ir_alto-option = ls_alto-option.
              ls_ir_alto-low = ls_alto-low.
              ls_ir_alto-high = ls_alto-high.
              APPEND ls_ir_alto TO ir_alto.
            ENDLOOP.
            CLEAR lr_alto.
          WHEN 'STOCK_LIBRE'.              " Equivalent to 'StockLibre' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_stock_libre ).

            LOOP AT lr_stock_libre INTO ls_stock_libre.
              ls_ir_stock_libre-sign = ls_stock_libre-sign.
              ls_ir_stock_libre-option = ls_stock_libre-option.
              ls_ir_stock_libre-low = ls_stock_libre-low.
              ls_ir_stock_libre-high = ls_stock_libre-high.
              APPEND ls_ir_stock_libre TO ir_stock_libre.
            ENDLOOP.
            CLEAR lr_stock_libre.
          WHEN 'STOCK_PEDIDO'.              " Equivalent to 'StockPedido' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_stock_pedido ).

            LOOP AT lr_stock_pedido INTO ls_stock_pedido.
              ls_ir_stock_pedido-sign = ls_stock_pedido-sign.
              ls_ir_stock_pedido-option = ls_stock_pedido-option.
              ls_ir_stock_pedido-low = ls_stock_pedido-low.
              ls_ir_stock_pedido-high = ls_stock_pedido-high.
              APPEND ls_ir_stock_pedido TO ir_stock_pedido.
            ENDLOOP.
            CLEAR lr_stock_pedido.
          WHEN 'STOCK_TOTAL'.              " Equivalent to 'StockTotal' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_stock_total ).

            LOOP AT lr_stock_total INTO ls_stock_total.
              ls_ir_stock_total-sign = ls_stock_total-sign.
              ls_ir_stock_total-option = ls_stock_total-option.
              ls_ir_stock_total-low = ls_stock_total-low.
              ls_ir_stock_total-high = ls_stock_total-high.
              APPEND ls_ir_stock_total TO ir_stock_total.
            ENDLOOP.
            CLEAR lr_stock_total.
          WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_charg ).

            LOOP AT lr_charg INTO ls_charg.
              ls_ir_lote-sign = ls_charg-sign.
              ls_ir_lote-option = ls_charg-option.
              ls_ir_lote-low = ls_charg-low.
              ls_ir_lote-high = ls_charg-high.
              APPEND ls_ir_lote TO ir_lote.
            ENDLOOP.
            CLEAR lr_charg.
          WHEN 'ESTADO'.              " Equivalent to 'Estado' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_estado ).

            LOOP AT lr_estado INTO ls_estado.
              ls_ir_status-sign = ls_estado-sign.
              ls_ir_status-option = ls_estado-option.
              ls_ir_status-low = ls_estado-low.
              ls_ir_status-high = ls_estado-high.
              APPEND ls_ir_status TO ir_status.
            ENDLOOP.
            CLEAR lr_estado.

          WHEN 'DIMENSIONES'.              " Equivalent to 'Dimensiones' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_dimensiones ).

            LOOP AT lr_dimensiones INTO ls_dimensiones.
              ls_ir_medidacaja-sign = ls_dimensiones-sign.
              ls_ir_medidacaja-option = ls_dimensiones-option.
              ls_ir_medidacaja-low = ls_dimensiones-low.
              ls_ir_medidacaja-high = ls_dimensiones-high.
              APPEND ls_ir_medidacaja TO ir_medidacaja.
            ENDLOOP.
            CLEAR lr_dimensiones.
          WHEN OTHERS.
*      SARCE INI 3###########################################
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3###########################################
            " Log message in the application log
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.

      ENDLOOP.

*      SARCE INI 4###########################################
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4###########################################

* Get RFC destination
      lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
      lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
      lv_rfc_name = 'ZUI5_CM_GET_MATERIALES'.

      IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

        TRY.
            CALL FUNCTION lv_rfc_name
              EXPORTING
                ir_matnr          = ir_matnr
                ir_maktx          = ir_maktx
                i_centro_montaje  = i_centro_montaje
                i_almacen_montaje = i_almacen_montaje
                ir_largo          = ir_largo
                ir_ancho          = ir_ancho
                ir_alto           = ir_alto
                ir_stock_libre    = ir_stock_libre
                ir_stock_pedido   = ir_stock_pedido
                ir_stock_total    = ir_stock_total
                ir_lote           = ir_lote
                ir_status         = ir_status
                ir_medidacaja     = ir_medidacaja
              IMPORTING
                o_return          = o_return
                o_data            = o_data
              EXCEPTIONS
                system_failure    = 1000 message lv_exc_msg
                OTHERS            = 1002.

            lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
          CATCH cx_root INTO lx_root.
            lv_subrc = 1001.
            lv_exc_msg = lx_root->if_message~get_text( ).
        ENDTRY.

      ELSE.

        CALL FUNCTION lv_rfc_name DESTINATION lv_destination
          EXPORTING
            ir_matnr              = ir_matnr
            ir_maktx              = ir_maktx
            i_centro_montaje      = i_centro_montaje
            i_almacen_montaje     = i_almacen_montaje
            ir_largo              = ir_largo
            ir_ancho              = ir_ancho
            ir_alto               = ir_alto
            ir_stock_libre        = ir_stock_libre
            ir_stock_pedido       = ir_stock_pedido
            ir_stock_total        = ir_stock_total
            ir_lote               = ir_lote
            ir_status             = ir_status
            ir_medidacaja         = ir_medidacaja
          IMPORTING
            o_return              = o_return
            o_data                = o_data
          EXCEPTIONS
            system_failure        = 1000 MESSAGE lv_exc_msg
            communication_failure = 1001 MESSAGE lv_exc_msg
            OTHERS                = 1002.

        lv_subrc = sy-subrc.

      ENDIF.


      "MTS: Ajustes
      APPEND LINES OF o_data TO o_data_temp.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
      IF lv_subrc <> 0.
* Execute the RFC exception handling process
        me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
          EXPORTING
            iv_subrc            = lv_subrc
            iv_exp_message_text = lv_exc_msg ).
      ENDIF.

      IF o_return IS NOT INITIAL.
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            iv_entity_type = iv_entity_name
            it_return      = o_return
            it_key_tab     = it_key_tab ).
      ENDIF.

    ENDDO. "MTS Ajustes
    o_data = o_data_temp.
*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
    IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
      lv_skip = ls_paging-skip + 1.
    ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
    IF  ls_paging-top <> 0
    AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
      lv_top = ls_paging-top + lv_skip - 1.
    ELSEIF ls_paging-top <> 0
    AND    lv_skip IS INITIAL.
      lv_top = ls_paging-top.
    ELSE.
      lv_top = lines( o_data ).
    ENDIF.


    "Ordenamos
    IF it_order IS NOT INITIAL.
      SORT o_data BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
      DELETE ADJACENT DUPLICATES FROM o_data.
    ENDIF.

*  - Map properties from the backend to the Gateway output response table -

    LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
         FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
      ls_gw_o_data-estado = ls_o_data-estado.
      ls_gw_o_data-stock_total = ls_o_data-stock_total.
      ls_gw_o_data-stock_pedido = ls_o_data-stock_pedido.
      ls_gw_o_data-stock_libre = ls_o_data-stock_libre.
      ls_gw_o_data-alto = ls_o_data-alto.
      ls_gw_o_data-ancho = ls_o_data-ancho.
      ls_gw_o_data-largo = ls_o_data-largo.
      ls_gw_o_data-lgort = ls_o_data-lgort.
      ls_gw_o_data-werks = ls_o_data-werks.
      ls_gw_o_data-maktx = ls_o_data-maktx.
      ls_gw_o_data-matnr = ls_o_data-matnr.
      ls_gw_o_data-charg = ls_o_data-charg.
      ls_gw_o_data-largo_uom = ls_o_data-largo_uom.
      ls_gw_o_data-ancho_uom = ls_o_data-ancho_uom.
      ls_gw_o_data-alto_uom = ls_o_data-alto_uom.
      ls_gw_o_data-status_lote = ls_o_data-status_lote.
      ls_gw_o_data-status_text = ls_o_data-status_text.
      ls_gw_o_data-kunnr = ls_o_data-kunnr.
      ls_gw_o_data-kunnr_name = ls_o_data-kunnr_name.
      ls_gw_o_data-gualdera = ls_o_data-gualdera.
      ls_gw_o_data-meins = ls_o_data-meins.
      ls_gw_o_data-tipo_pallet = ls_o_data-tipo_pallet.
      ls_gw_o_data-cajas_pallets = ls_o_data-cajas_pallets.
      ls_gw_o_data-num_pallets = ls_o_data-num_pallets.
      ls_gw_o_data-dimensiones = ls_o_data-dimensiones.
      ls_gw_o_data-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
      APPEND ls_gw_o_data TO et_entityset.
      CLEAR ls_gw_o_data.
    ENDLOOP.

  ENDMETHOD.
