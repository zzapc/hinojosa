
class ZCL_UI5_LOG definition
  public
  final
  create public .

public section.

  class-methods SAVE_LOG
    importing
      value(MF) type RS38L_FNAM optional
      value(UNAME) type UNAME default SY-UNAME
      value(STATU) type FLAG default 'X'
      value(TCODE) type TCODE optional
      value(LGNUM) type LGNUM optional
      value(VBELN) type VBELN_VL optional
      value(TKNUM) type TKNUM optional
      value(CERRAR_TRANSPORTE) type FLAG optional
      value(OPERARIO) type ZLNUM_OPER optional
      value(FIELDNAME) type FIELDNAME optional
      value(FVAL) type BDC_FVAL optional
      value(REG_PARAMETROS) type ZSWM_DATA_UI5_PARAM_STR optional
      value(REG_FUNCIONALIDADES) type ZSWM_DATA_UI5_FUNC_STR optional
      value(TT_PEDIDOS) type ZST_RF_EM_PO_TT optional
      value(TT_PICKING) type ZSEWM_DATOS_UI5_PICKING_TT optional
      value(TT_LOG) type BAPIRET2_TT optional
      value(RT_ACCIONES) type ZSWM_UI5_ACC optional
      value(TT_ACCIONES) type ZSWM_UI5_ACC_TT optional
      value(ERROR) type FLAG optional
      value(COMMIT) type FLAG default 'X'
      value(TT_LENUM) type ZSWM_PRINT_EXIDV_LENUM_TT optional .
protected section.
private section.
endclass. "ZCL_UI5_LOG definition
class ZCL_UI5_LOG implementation.
  method SAVE_LOG.
*MF Importing Type  RS38L_FNAM
*UNAME  Importing Type  UNAME
*STATU  Importing Type  FLAG
*TCODE  Importing Type  TCODE
*ERROR  Importing Type  FLAG
*LGNUM  Importing Type  LGNUM
*OPERARIO Importing Type  ZLNUM_OPER
*REG_PARAMETROS Importing Type  ZSWM_DATA_UI5_PARAM_STR
*REG_FUNCIONALIDADES  Importing Type  ZSWM_DATA_UI5_FUNC_STR
*TT_LOG Importing Type  BAPIRET2_TT
*COMMIT Importing Type  FLAG
    data idcla type ZSWM_RANGO_CL_UI5_LOG.
    data etenr type ETENR.
    data r_log type ZSWM_UI5_LOG.
    data r_men type ZSWM_UI5_MENS.
    data r_par type ZSWM_UI5_PARAM.
    data r_uas type ZSWM_UI5_UAS.
    data terminal type XUTERMINAL.
    data tt_log_ui5 type TABLE OF ZSWM_UI5_LOG.
    data tt_log_men type TABLE OF ZSWM_UI5_MENS.
    data tT_param   type TABLE OF ZSWM_UI5_PARAM.
    data tT_act     type TABLE OF ZSWM_UI5_acc.
    data tT_uas     type TABLE OF ZSWM_UI5_UAS.
    data rango      type INRI-NRRANGENR VALUE '01'.
    data objeto     type INRI-OBJECT    value 'ZSWMLOG'.
    data tpo_reg    type ZSWM_UI5_LOG-tipo_reg.
*D  Datos
*P  Parametros
*F  Funcionalidades
*L  Log
    CALL FUNCTION 'NUMBER_GET_NEXT'
      EXPORTING
        nr_range_nr                   = rango
        object                        = objeto
*       QUANTITY                      = '1'
*       SUBOBJECT                     = ' '
*       TOYEAR                        = '0000'
*       IGNORE_BUFFER                 = ' '
     IMPORTING
       NUMBER                        = idcla
*       QUANTITY                      =
*       RETURNCODE                    =
     EXCEPTIONS
       INTERVAL_NOT_FOUND            = 1
       NUMBER_RANGE_NOT_INTERN       = 2
       OBJECT_NOT_FOUND              = 3
       QUANTITY_IS_0                 = 4
       QUANTITY_IS_NOT_1             = 5
       INTERVAL_OVERFLOW             = 6
       BUFFER_OVERFLOW               = 7
       OTHERS                        = 8
              .

   check sy-subrc eq 0.
   CALL FUNCTION 'TERMINAL_ID_GET'
*     EXPORTING
*      USERNAME                   = SY-UNAME
     IMPORTING
       TERMINAL                   = terminal
    EXCEPTIONS
      MULTIPLE_TERMINAL_ID       = 1
      NO_TERMINAL_FOUND          = 2
      OTHERS                     = 3
             .
   data r_mod type ZSWM_UI5_LOG_STR.

   etenr = 0.
   clear r_mod.
   r_mod-ernam    = sy-uname.
   r_mod-erdat    = sy-datum.
   r_mod-erzeit   = sy-uzeit.
   r_mod-TERMINAL = TERMINAL.
   tpo_reg = 'D'.
   clear tt_log_ui5[].

   clear r_log.
   move-CORRESPONDING r_mod to r_log.
   r_log-mandt    = sy-mandt.
   r_log-idcla    = idcla.
   r_log-tipo_reg  = tpo_reg.
   r_log-etenr    = etenr.
   r_log-LGNUM    = lgnum.
   r_log-FNAM     = mf.
   r_log-UNAME    = uname.
   r_log-STATU    = STATU.
   r_log-TCODE    = TCODE.
   r_log-OPERARIO = OPERARIO.
   r_log-ERROR    = ERROR.
   if tT_log[] is not INITIAL.
     r_log-log = abap_true.
   endif.
   r_log-tknum = tknum.
   r_log-vbeln = vbeln.
   r_log-CERRART = CERRAr_transporte.
   append r_log to tt_log_ui5.

   if REG_FUNCIONALIDADES is not INITIAL.
     tpo_reg = 'F'.
     add 1 to etenr.

     clear r_log.
     move-CORRESPONDING r_mod to r_log.
     move-CORRESPONDING reg_funcionalidades to r_log.
     r_log-etenr    = etenr.
     r_log-mandt    = sy-mandt.
     r_log-idcla    = idcla.
     r_log-tipo_reg  = tpo_reg.
     append r_log to tt_log_ui5.
    endif.
   tpo_reg = 'P'.

   if REG_PARAMETROS is not INITIAL.
     add 1 to etenr.

     clear r_log.
     move-CORRESPONDING r_mod to r_log.
     move-CORRESPONDING REG_PARAMETROS to r_log.
     r_log-etenr    = etenr.
     r_log-mandt    = sy-mandt.
     r_log-idcla    = idcla.
     r_log-tipo_reg  = tpo_reg.
     append r_log to tt_log_ui5.
   endif.

   tpo_reg = 'L'.
   etenr = 0.
   loop at tt_log into data(rT_log).
      clear r_men.
      add 1 to etenr.
      r_men-mandt      = sy-mandt.
      r_men-idcla      = idcla.
      r_log-etenr      = etenr.
      move-CORRESPONDING rt_log to r_men.
      r_men-ZNUMBER    = rt_log-NUMBER.
      r_men-ZPARAMETER = rT_log-parameter.
      r_men-ZSYSTEM    = rT_log-system.
      append r_men to tt_log_men.
   endloop.
   etenr = 0.
   loop at tT_pedidos into data(RT_pedidos).
      clear r_par.
      add 1 to etenr.
      r_par-mandt      = sy-mandt.
      r_par-idcla      = idcla.
      r_par-etenr      = etenr.
      r_par-tabname    = 'ZST_RF_EM_PO'.
      move-CORRESPONDING rt_pedidos to r_par.
      append r_par to tT_param.
   endloop.
   loop at tT_picking into datA(rT_picking).
      clear r_par.
      add 1 to etenr.
      r_par-mandt      = sy-mandt.
      r_par-idcla      = idcla.
      r_par-etenr      = etenr.
      r_par-tabname    = 'ZSEWM_DATOS_UI5_PICKING_STR'.
      move-CORRESPONDING rT_picking to r_par.
      append r_par to tT_param.
   endloop.
   if rT_acciones is not INITIAL.
     append rT_acciones to tT_acciones.
   endif.
   clear etenr.
   loop at tT_acciones into data(Rt_acc).
       rT_acc-mandt = sy-mandt.
       rt_acc-idcla = idcla.
       add 1 to etenr.
       rT_acc-etenr = etenr.
       move-CORRESPONDING r_mod to Rt_acc.
       append rt_acc to tt_act.
   endloop.
   clear etenr.
   loop at tt_lenum into data(rT_lenum).
      clear r_uas.
      r_uas-mandt = sy-mandt.
      r_uas-idcla = idcla.
      add 1 to etenr.
      r_uas-etenr = etenr.
      r_uas-lenum = rt_lenum-lenum.
      move-CORRESPONDING r_mod to r_uas.
      append r_uas to tT_uas.
   endloop.
   loop at tt_log_ui5 into r_log.
     insert into ZSWM_UI5_LOG values r_log.
   endloop.
   loop at tt_log_men into r_men.
      insert into ZSWM_UI5_MENS VALUES r_men.
   endloop.
   loop at tT_param into r_par.
      insert into ZSWM_UI5_PARAM VALUES r_par.
   endloop.
   loop at tT_act into Rt_acc.
      insert into ZSWM_UI5_acc VALUES Rt_acc.
   endloop.
   loop at tT_uas into r_uas.
      insert into ZSWM_UI5_UAS values r_uas.
   endloop.
   check sy-subrc eq 0 and commit eq abap_true.
   commit WORK and WAIT.
  endmethod.
