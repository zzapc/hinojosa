
class ZCL_ZSUI5_CM_STOCK_MON_DPC definition
  public
  inheriting from /IWBEP/CL_MGW_PUSH_ABS_DATA
  abstract
  create public .

public section.

  interfaces /IWBEP/IF_SB_DPC_COMM_SERVICES .
  interfaces /IWBEP/IF_SB_GENDPC_SHLP_DATA .
  interfaces /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY
    redefinition .
protected section.

  data mo_injection type ref to /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods AYUDATIPOBLOQUEO_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_AYUDATIPOBLOQUEO
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOBLOQUEO_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOBLOQUEO_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_AYUDATIPOBLOQUEO
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOBLOQUEO_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TT_AYUDATIPOBLOQUEO
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOBLOQUEO_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_AYUDATIPOBLOQUEO
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOMERMASE_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_AYUDATIPOMERMA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOMERMASE_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOMERMASE_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_AYUDATIPOMERMA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOMERMASE_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TT_AYUDATIPOMERMA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOMERMASE_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_AYUDATIPOMERMA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STATUSSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_STATUSVH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STATUSSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STATUSSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_STATUSVH
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STATUSSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TT_STATUSVH
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STATUSSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_STATUSVH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STOCKSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_STOCK
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STOCKSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STOCKSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_STOCK
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STOCKSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TT_STOCK
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods STOCKSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_STOCK_MON_MPC=>TS_STOCK
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .

  methods CHECK_SUBSCRIPTION_AUTHORITY
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_STOCK_MON_DPC definition
class ZCL_ZSUI5_CM_STOCK_MON_DPC implementation.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_CRT_ENTITY_BASE
*&* This class has been generated on 27.06.2024 17:09:45 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA stockset_create_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_stock.
 DATA statusset_create_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_statusvh.
 DATA ayudatipomermase_create_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_ayudatipomerma.
 DATA ayudatipobloqueo_create_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_ayudatipobloqueo.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  StockSet
*-------------------------------------------------------------------------*
     WHEN 'StockSet'.
*     Call the entity set generated method
    stockset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = stockset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = stockset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  StatusVHSet
*-------------------------------------------------------------------------*
     WHEN 'StatusVHSet'.
*     Call the entity set generated method
    statusset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = statusset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = statusset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoMermaSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaTipoMermaSet'.
*     Call the entity set generated method
    ayudatipomermase_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudatipomermase_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudatipomermase_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoBloqueoSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaTipoBloqueoSet'.
*     Call the entity set generated method
    ayudatipobloqueo_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudatipobloqueo_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudatipobloqueo_create_entity
      CHANGING
        cr_data = er_entity
   ).

  when others.
    super->/iwbep/if_mgw_appl_srv_runtime~create_entity(
       EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         io_data_provider   = io_data_provider
         it_key_tab = it_key_tab
         it_navigation_path = it_navigation_path
      IMPORTING
        er_entity = er_entity
  ).
ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_DEL_ENTITY_BASE
*&* This class has been generated on 27.06.2024 17:09:45 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  StockSet
*-------------------------------------------------------------------------*
      when 'StockSet'.
*     Call the entity set generated method
     stockset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  StatusVHSet
*-------------------------------------------------------------------------*
      when 'StatusVHSet'.
*     Call the entity set generated method
     statusset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoMermaSet
*-------------------------------------------------------------------------*
      when 'AyudaTipoMermaSet'.
*     Call the entity set generated method
     ayudatipomermase_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoBloqueoSet
*-------------------------------------------------------------------------*
      when 'AyudaTipoBloqueoSet'.
*     Call the entity set generated method
     ayudatipobloqueo_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

   when others.
     super->/iwbep/if_mgw_appl_srv_runtime~delete_entity(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_key_tab = it_key_tab
          it_navigation_path = it_navigation_path
 ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY.
*&-----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_GETENTITY_BASE
*&* This class has been generated  on 27.06.2024 17:09:45 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA stockset_get_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_stock.
 DATA statusset_get_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_statusvh.
 DATA ayudatipomermase_get_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_ayudatipomerma.
 DATA ayudatipobloqueo_get_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_ayudatipobloqueo.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data.       "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  StockSet
*-------------------------------------------------------------------------*
      WHEN 'StockSet'.
*     Call the entity set generated method
          stockset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = stockset_get_entity
                         es_response_context = es_response_context
          ).

        IF stockset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = stockset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  StatusVHSet
*-------------------------------------------------------------------------*
      WHEN 'StatusVHSet'.
*     Call the entity set generated method
          statusset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = statusset_get_entity
                         es_response_context = es_response_context
          ).

        IF statusset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = statusset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoMermaSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoMermaSet'.
*     Call the entity set generated method
          ayudatipomermase_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipomermase_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudatipomermase_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipomermase_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoBloqueoSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoBloqueoSet'.
*     Call the entity set generated method
          ayudatipobloqueo_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipobloqueo_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudatipobloqueo_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipobloqueo_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.

      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~get_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TMP_ENTITYSET_BASE
*&* This class has been generated on 27.06.2024 17:09:45 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT
*&-----------------------------------------------------------------------------------------------*
 DATA stockset_get_entityset TYPE zcl_zsui5_cm_stock_mon_mpc=>tt_stock.
 DATA statusset_get_entityset TYPE zcl_zsui5_cm_stock_mon_mpc=>tt_statusvh.
 DATA ayudatipomermase_get_entityset TYPE zcl_zsui5_cm_stock_mon_mpc=>tt_ayudatipomerma.
 DATA ayudatipobloqueo_get_entityset TYPE zcl_zsui5_cm_stock_mon_mpc=>tt_ayudatipobloqueo.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  StockSet
*-------------------------------------------------------------------------*
   WHEN 'StockSet'.
*     Call the entity set generated method
      stockset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = stockset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = stockset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  StatusVHSet
*-------------------------------------------------------------------------*
   WHEN 'StatusVHSet'.
*     Call the entity set generated method
      statusset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = statusset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = statusset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoMermaSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaTipoMermaSet'.
*     Call the entity set generated method
      ayudatipomermase_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudatipomermase_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudatipomermase_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoBloqueoSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaTipoBloqueoSet'.
*     Call the entity set generated method
      ayudatipobloqueo_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudatipobloqueo_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudatipobloqueo_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

    WHEN OTHERS.
      super->/iwbep/if_mgw_appl_srv_runtime~get_entityset(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_filter_select_options = it_filter_select_options
          it_order = it_order
          is_paging = is_paging
          it_navigation_path = it_navigation_path
          it_key_tab = it_key_tab
          iv_filter_string = iv_filter_string
          iv_search_string = iv_search_string
          io_tech_request_context = io_tech_request_context
       IMPORTING
         er_entityset = er_entityset ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_UPD_ENTITY_BASE
*&* This class has been generated on 27.06.2024 17:09:45 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_STOCK_MON_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA stockset_update_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_stock.
 DATA statusset_update_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_statusvh.
 DATA ayudatipomermase_update_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_ayudatipomerma.
 DATA ayudatipobloqueo_update_entity TYPE zcl_zsui5_cm_stock_mon_mpc=>ts_ayudatipobloqueo.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data. "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  StockSet
*-------------------------------------------------------------------------*
      WHEN 'StockSet'.
*     Call the entity set generated method
          stockset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = stockset_update_entity
          ).
       IF stockset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = stockset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  StatusVHSet
*-------------------------------------------------------------------------*
      WHEN 'StatusVHSet'.
*     Call the entity set generated method
          statusset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = statusset_update_entity
          ).
       IF statusset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = statusset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoMermaSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoMermaSet'.
*     Call the entity set generated method
          ayudatipomermase_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipomermase_update_entity
          ).
       IF ayudatipomermase_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipomermase_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoBloqueoSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoBloqueoSet'.
*     Call the entity set generated method
          ayudatipobloqueo_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipobloqueo_update_entity
          ).
       IF ayudatipobloqueo_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipobloqueo_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~update_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             io_data_provider   = io_data_provider
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~COMMIT_WORK.
* Call RFC commit work functionality
DATA lt_message      TYPE bapiret2. "#EC NEEDED
DATA lv_message_text TYPE BAPI_MSG.
DATA lo_logger       TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_subrc        TYPE syst-subrc.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

  IF iv_rfc_dest IS INITIAL OR iv_rfc_dest EQ 'NONE'.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
      wait   = abap_true
    IMPORTING
      return = lt_message.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      DESTINATION iv_rfc_dest
    EXPORTING
      wait                  = abap_true
    IMPORTING
      return                = lt_message
    EXCEPTIONS
      communication_failure = 1000 MESSAGE lv_message_text
      system_failure        = 1001 MESSAGE lv_message_text
      OTHERS                = 1002.

  IF sy-subrc <> 0.
    lv_subrc = sy-subrc.
    /iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
        EXPORTING
          iv_subrc            = lv_subrc
          iv_exp_message_text = lv_message_text
          io_logger           = lo_logger ).
  ENDIF.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~GET_GENERATION_STRATEGY.
* Get generation strategy
  rv_generation_strategy = '1'.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~LOG_MESSAGE.
* Log message in the application log
DATA lo_logger TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_text TYPE /iwbep/sup_msg_longtext.

  MESSAGE ID iv_msg_id TYPE iv_msg_type NUMBER iv_msg_number
    WITH iv_msg_v1 iv_msg_v2 iv_msg_v3 iv_msg_v4 INTO lv_text.

  lo_logger = mo_context->get_logger( ).
  lo_logger->log_message(
    EXPORTING
     iv_msg_type   = iv_msg_type
     iv_msg_id     = iv_msg_id
     iv_msg_number = iv_msg_number
     iv_msg_text   = lv_text
     iv_msg_v1     = iv_msg_v1
     iv_msg_v2     = iv_msg_v2
     iv_msg_v3     = iv_msg_v3
     iv_msg_v4     = iv_msg_v4
     iv_agent      = 'DPC' ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_EXCEPTION_HANDLING.
* RFC call exception handling
DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

/iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
  EXPORTING
    iv_subrc            = iv_subrc
    iv_exp_message_text = iv_exp_message_text
    io_logger           = lo_logger ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_SAVE_LOG.
  DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.
  DATA lo_message_container TYPE REF TO /iwbep/if_message_container.

  lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
  lo_message_container = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).

  " Save the RFC call log in the application log
  /iwbep/cl_sb_gen_dpc_rt_util=>rfc_save_log(
    EXPORTING
      is_return            = is_return
      iv_entity_type       = iv_entity_type
      it_return            = it_return
      it_key_tab           = it_key_tab
      io_logger            = lo_logger
      io_message_container = lo_message_container ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~SET_INJECTION.
* Unit test injection
  IF io_unit IS BOUND.
    mo_injection = io_unit.
  ELSE.
    mo_injection = me.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_GENDPC_SHLP_DATA~GET_SEARCH_HELP_VALUES.
* Call to Search Help run time mechanism to get values
  DATA lo_sh_data TYPE REF TO /iwbep/if_sb_shlp_data.

  CLEAR: et_return_list, es_message.
  lo_sh_data = /iwbep/cl_sb_shlp_data_factory=>get_sh_data_obj( ).

  lo_sh_data->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
    EXPORTING
      iv_shlp_name  = iv_shlp_name
      iv_maxrows  = iv_maxrows
      iv_sort = iv_sort
      iv_call_shlt_exit = iv_call_shlt_exit
      it_selopt = it_selopt
    IMPORTING
      et_return_list = et_return_list
      es_message = es_message ).
  endmethod.
  method AYUDATIPOBLOQUEO_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOBLOQUEO_CREATE_ENTITY'.
  endmethod.
  method AYUDATIPOBLOQUEO_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOBLOQUEO_DELETE_ENTITY'.
  endmethod.
  method AYUDATIPOBLOQUEO_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOBLOQUEO_GET_ENTITY'.
  endmethod.
  method AYUDATIPOBLOQUEO_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_domvalue_l LIKE RANGE OF ls_converted_keys-domvalue_l.
DATA ls_domvalue_l LIKE LINE OF lr_domvalue_l.
DATA lr_ddtext LIKE RANGE OF ls_converted_keys-ddtext.
DATA ls_ddtext LIKE LINE OF lr_ddtext.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'DOMVALUE_L'.              " Equivalent to 'TipoBloqueo' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_domvalue_l ).

      LOOP AT lr_domvalue_l INTO ls_domvalue_l.
        ls_selopt-high = ls_domvalue_l-high.
        ls_selopt-low = ls_domvalue_l-low.
        ls_selopt-option = ls_domvalue_l-option.
        ls_selopt-sign = ls_domvalue_l-sign.
        ls_selopt-shlpfield = 'DOMVALUE_L'.
        ls_selopt-shlpname = 'ZSCMH_TIPO_BLOQ'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'DDTEXT'.              " Equivalent to 'Descripcion' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_ddtext ).

      LOOP AT lr_ddtext INTO ls_ddtext.
        ls_selopt-high = ls_ddtext-high.
        ls_selopt-low = ls_ddtext-low.
        ls_selopt-option = ls_ddtext-option.
        ls_selopt-sign = ls_ddtext-sign.
        ls_selopt-shlpfield = 'DDTEXT'.
        ls_selopt-shlpname = 'ZSCMH_TIPO_BLOQ'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'ZSCMH_TIPO_BLOQ'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'DDTEXT'.
      ls_entityset-ddtext = ls_result_list-field_value.
    WHEN 'DOMVALUE_L'.
      ls_entityset-domvalue_l = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDATIPOBLOQUEO_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOBLOQUEO_UPDATE_ENTITY'.
  endmethod.
  method AYUDATIPOMERMASE_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOMERMASE_CREATE_ENTITY'.
  endmethod.
  method AYUDATIPOMERMASE_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOMERMASE_DELETE_ENTITY'.
  endmethod.
  method AYUDATIPOMERMASE_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOMERMASE_GET_ENTITY'.
  endmethod.
  method AYUDATIPOMERMASE_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_domvalue_l LIKE RANGE OF ls_converted_keys-domvalue_l.
DATA ls_domvalue_l LIKE LINE OF lr_domvalue_l.
DATA lr_ddtext LIKE RANGE OF ls_converted_keys-ddtext.
DATA ls_ddtext LIKE LINE OF lr_ddtext.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'DOMVALUE_L'.              " Equivalent to 'TipoMerma' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_domvalue_l ).

      LOOP AT lr_domvalue_l INTO ls_domvalue_l.
        ls_selopt-high = ls_domvalue_l-high.
        ls_selopt-low = ls_domvalue_l-low.
        ls_selopt-option = ls_domvalue_l-option.
        ls_selopt-sign = ls_domvalue_l-sign.
        ls_selopt-shlpfield = 'DOMVALUE_L'.
        ls_selopt-shlpname = 'ZSCMH_TIPO_MERMA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'DDTEXT'.              " Equivalent to 'Descripcion' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_ddtext ).

      LOOP AT lr_ddtext INTO ls_ddtext.
        ls_selopt-high = ls_ddtext-high.
        ls_selopt-low = ls_ddtext-low.
        ls_selopt-option = ls_ddtext-option.
        ls_selopt-sign = ls_ddtext-sign.
        ls_selopt-shlpfield = 'DDTEXT'.
        ls_selopt-shlpname = 'ZSCMH_TIPO_MERMA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'ZSCMH_TIPO_MERMA'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'DDTEXT'.
      ls_entityset-ddtext = ls_result_list-field_value.
    WHEN 'DOMVALUE_L'.
      ls_entityset-domvalue_l = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDATIPOMERMASE_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOMERMASE_UPDATE_ENTITY'.
  endmethod.
  method CHECK_SUBSCRIPTION_AUTHORITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'CHECK_SUBSCRIPTION_AUTHORITY'.
  endmethod.
  method STATUSSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STATUSSET_CREATE_ENTITY'.
  endmethod.
  method STATUSSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STATUSSET_DELETE_ENTITY'.
  endmethod.
  method STATUSSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STATUSSET_GET_ENTITY'.
  endmethod.
  method STATUSSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA o_status  TYPE zif_zui5_cm_status=>zui5tt_cm_status.
 DATA ls_o_status  TYPE LINE OF zif_zui5_cm_status=>zui5tt_cm_status.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_status LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_STATUS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         IMPORTING
           o_status       = o_status
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     IMPORTING
       o_status              = o_status
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_status ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_status INTO ls_o_status
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_status-status_text = ls_o_status-status_text.
   ls_gw_o_status-status = ls_o_status-status.
   APPEND ls_gw_o_status TO et_entityset.
   CLEAR ls_gw_o_status.
 ENDLOOP.

  endmethod.
  method STATUSSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STATUSSET_UPDATE_ENTITY'.
  endmethod.
  method STOCKSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STOCKSET_CREATE_ENTITY'.
  endmethod.
  method STOCKSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STOCKSET_DELETE_ENTITY'.
  endmethod.
  method STOCKSET_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_charg TYPE zif_zui5_cm_stock=>charg_d.
 DATA i_lgort TYPE zif_zui5_cm_stock=>lgort_d.
 DATA i_matnr TYPE zif_zui5_cm_stock=>matnr.
 DATA i_werks TYPE zif_zui5_cm_stock=>werks_d.
 DATA o_stock TYPE zif_zui5_cm_stock=>zui5s_cm_stock.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'StockSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_charg = ls_converted_keys-charg.
 i_matnr = ls_converted_keys-matnr.
 i_lgort = ls_converted_keys-lgort.
 i_werks = ls_converted_keys-werks.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_STOCK'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_charg        = i_charg
           i_matnr        = i_matnr
           i_lgort        = i_lgort
           i_werks        = i_werks
         IMPORTING
           o_stock        = o_stock
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_charg               = i_charg
       i_matnr               = i_matnr
       i_lgort               = i_lgort
       i_werks               = i_werks
     IMPORTING
       o_stock               = o_stock
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure

 er_entity-cant_bloq_defectuosa_uom = o_stock-cant_bloq_defectuosa_uom.
 er_entity-cant_devolucion = o_stock-cant_devolucion.
 er_entity-cant_devolucion_uom = o_stock-cant_devolucion_uom.
 er_entity-budat = o_stock-budat.
 er_entity-bwtar = o_stock-bwtar.
 er_entity-charg = o_stock-charg.
 er_entity-cant_disp_uom = o_stock-cant_disp_uom.
 er_entity-cant_disp = o_stock-cant_disp.
 er_entity-alto_uom = o_stock-alto_uom.
 er_entity-alto = o_stock-alto.
 er_entity-ancho_uom = o_stock-ancho_uom.
 er_entity-ancho = o_stock-ancho.
 er_entity-largo_uom = o_stock-largo_uom.
 er_entity-largo = o_stock-largo.
 er_entity-maktx = o_stock-maktx.
 er_entity-kdmat = o_stock-kdmat.
 er_entity-matnr = o_stock-matnr.
 er_entity-lgort = o_stock-lgort.
 er_entity-status_text = o_stock-status_text.
 er_entity-werks = o_stock-werks.
 er_entity-status = o_stock-status.
 er_entity-dimension = o_stock-dimension.
 er_entity-cant_bloq_defectuosa = o_stock-cant_bloq_defectuosa.
 er_entity-cant_bloq_montaje_uom = o_stock-cant_bloq_montaje_uom.
 er_entity-cant_bloq_montaje = o_stock-cant_bloq_montaje.
 er_entity-stock_bloq = o_stock-stock_bloq.
 er_entity-matnr_bloq = o_stock-matnr_bloq.
 er_entity-kunnr_name = o_stock-kunnr_name.
 er_entity-kunnr = o_stock-kunnr.
  endmethod.
  method STOCKSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_budat  TYPE zif_zui5_cm_stocks=>ranges_budat_tt.
 DATA ir_kdmat  TYPE zif_zui5_cm_stocks=>shp_kdmat_range_t.
 DATA ir_kunnr  TYPE zif_zui5_cm_stocks=>range_kunnr_tab.
 DATA ir_kunnr_name  TYPE zif_zui5_cm_stocks=>zsuis_cm_nombres_rang.
 DATA ir_lgort  TYPE zif_zui5_cm_stocks=>range_t_lgort_d.
 DATA ir_maktx  TYPE zif_zui5_cm_stocks=>fip_t_maktx_range.
 DATA ir_medidacaja  TYPE zif_zui5_cm_stocks=>rseloption.
 DATA ir_status_text  TYPE zif_zui5_cm_stocks=>zsuitt_range_ddtext.
 DATA ir_werks  TYPE zif_zui5_cm_stocks=>range_t_werks_d.
 DATA i_alto  TYPE zif_zui5_cm_stocks=>zui5r_cm_alto.
 DATA i_ancho  TYPE zif_zui5_cm_stocks=>zui5r_cm_ancho.
 DATA i_charg  TYPE zif_zui5_cm_stocks=>ranges_charg_tt.
 DATA i_largo  TYPE zif_zui5_cm_stocks=>zui5r_cm_largo.
 DATA i_matnr  TYPE zif_zui5_cm_stocks=>ranges_matnr_tt.
 DATA i_status  TYPE zif_zui5_cm_stocks=>zui5r_cm_status.
 DATA o_stock  TYPE zif_zui5_cm_stocks=>zui5tt_cm_stock.
 DATA ls_ir_budat  TYPE LINE OF zif_zui5_cm_stocks=>ranges_budat_tt.
 DATA ls_ir_kdmat  TYPE LINE OF zif_zui5_cm_stocks=>shp_kdmat_range_t.
 DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_stocks=>range_kunnr_tab.
 DATA ls_ir_kunnr_name  TYPE LINE OF zif_zui5_cm_stocks=>zsuis_cm_nombres_rang.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_stocks=>range_t_lgort_d.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_stocks=>fip_t_maktx_range.
 DATA ls_ir_medidacaja  TYPE LINE OF zif_zui5_cm_stocks=>rseloption.
 DATA ls_ir_status_text  TYPE LINE OF zif_zui5_cm_stocks=>zsuitt_range_ddtext.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_stocks=>range_t_werks_d.
 DATA ls_i_alto  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_alto.
 DATA ls_i_ancho  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_ancho.
 DATA ls_i_charg  TYPE LINE OF zif_zui5_cm_stocks=>ranges_charg_tt.
 DATA ls_i_largo  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_largo.
 DATA ls_i_matnr  TYPE LINE OF zif_zui5_cm_stocks=>ranges_matnr_tt.
 DATA ls_i_status  TYPE LINE OF zif_zui5_cm_stocks=>zui5r_cm_status.
 DATA ls_o_stock  TYPE LINE OF zif_zui5_cm_stocks=>zui5tt_cm_stock.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_budat LIKE RANGE OF ls_converted_keys-budat.
 DATA ls_budat LIKE LINE OF lr_budat.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_kdmat LIKE RANGE OF ls_converted_keys-kdmat.
 DATA ls_kdmat LIKE LINE OF lr_kdmat.
 DATA lr_status_text LIKE RANGE OF ls_converted_keys-status_text.
 DATA ls_status_text LIKE LINE OF lr_status_text.
 DATA lr_kunnr_name LIKE RANGE OF ls_converted_keys-kunnr_name.
 DATA ls_kunnr_name LIKE LINE OF lr_kunnr_name.
 DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
 DATA ls_kunnr LIKE LINE OF lr_kunnr.
 DATA lr_almacen_montaje LIKE RANGE OF ls_converted_keys-almacen_montaje.
 DATA ls_almacen_montaje LIKE LINE OF lr_almacen_montaje.
 DATA lr_centro_montaje LIKE RANGE OF ls_converted_keys-centro_montaje.
 DATA ls_centro_montaje LIKE LINE OF lr_centro_montaje.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_status LIKE RANGE OF ls_converted_keys-status.
 DATA ls_status LIKE LINE OF lr_status.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
 DATA ls_charg LIKE LINE OF lr_charg.
 DATA lr_dimension LIKE RANGE OF ls_converted_keys-dimension.
 DATA ls_dimension LIKE LINE OF lr_dimension.
 DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
 DATA ls_ancho LIKE LINE OF lr_ancho.
 DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
 DATA ls_largo LIKE LINE OF lr_largo.
 DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
 DATA ls_alto LIKE LINE OF lr_alto.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_stock LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'BUDAT'.              " Equivalent to 'Budat' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_budat ).

       LOOP AT lr_budat INTO ls_budat.
         ls_ir_budat-high = ls_budat-high.
         ls_ir_budat-low = ls_budat-low.
         ls_ir_budat-option = ls_budat-option.
         ls_ir_budat-sign = ls_budat-sign.
         APPEND ls_ir_budat TO ir_budat.
       ENDLOOP.
       CLEAR lr_budat.
     WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_maktx ).

       LOOP AT lr_maktx INTO ls_maktx.
         ls_ir_maktx-high = ls_maktx-high.
         ls_ir_maktx-low = ls_maktx-low.
         ls_ir_maktx-option = ls_maktx-option.
         ls_ir_maktx-sign = ls_maktx-sign.
         APPEND ls_ir_maktx TO ir_maktx.
       ENDLOOP.
       CLEAR lr_maktx.
     WHEN 'KDMAT'.              " Equivalent to 'Kdmat' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kdmat ).

       LOOP AT lr_kdmat INTO ls_kdmat.
         ls_ir_kdmat-high = ls_kdmat-high.
         ls_ir_kdmat-low = ls_kdmat-low.
         ls_ir_kdmat-option = ls_kdmat-option.
         ls_ir_kdmat-sign = ls_kdmat-sign.
         APPEND ls_ir_kdmat TO ir_kdmat.
       ENDLOOP.
       CLEAR lr_kdmat.
     WHEN 'STATUS_TEXT'.              " Equivalent to 'StatusText' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_status_text ).

       LOOP AT lr_status_text INTO ls_status_text.
         ls_ir_status_text-high = ls_status_text-high.
         ls_ir_status_text-low = ls_status_text-low.
         ls_ir_status_text-option = ls_status_text-option.
         ls_ir_status_text-sign = ls_status_text-sign.
         APPEND ls_ir_status_text TO ir_status_text.
       ENDLOOP.
       CLEAR lr_status_text.
     WHEN 'KUNNR_NAME'.              " Equivalent to 'KunnrName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr_name ).

       LOOP AT lr_kunnr_name INTO ls_kunnr_name.
         ls_ir_kunnr_name-high = ls_kunnr_name-high.
         ls_ir_kunnr_name-low = ls_kunnr_name-low.
         ls_ir_kunnr_name-option = ls_kunnr_name-option.
         ls_ir_kunnr_name-sign = ls_kunnr_name-sign.
         APPEND ls_ir_kunnr_name TO ir_kunnr_name.
       ENDLOOP.
       CLEAR lr_kunnr_name.
     WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr ).

       LOOP AT lr_kunnr INTO ls_kunnr.
         ls_ir_kunnr-high = ls_kunnr-high.
         ls_ir_kunnr-low = ls_kunnr-low.
         ls_ir_kunnr-option = ls_kunnr-option.
         ls_ir_kunnr-sign = ls_kunnr-sign.
         APPEND ls_ir_kunnr TO ir_kunnr.
       ENDLOOP.
       CLEAR lr_kunnr.
     WHEN 'ALMACEN_MONTAJE'.              " Equivalent to 'AlmacenMontaje' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_almacen_montaje ).

       LOOP AT lr_almacen_montaje INTO ls_almacen_montaje.
         ls_ir_lgort-high = ls_almacen_montaje-high.
         ls_ir_lgort-low = ls_almacen_montaje-low.
         ls_ir_lgort-option = ls_almacen_montaje-option.
         ls_ir_lgort-sign = ls_almacen_montaje-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_almacen_montaje.
     WHEN 'CENTRO_MONTAJE'.              " Equivalent to 'CentroMontaje' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_centro_montaje ).

       LOOP AT lr_centro_montaje INTO ls_centro_montaje.
         ls_ir_werks-high = ls_centro_montaje-high.
         ls_ir_werks-low = ls_centro_montaje-low.
         ls_ir_werks-option = ls_centro_montaje-option.
         ls_ir_werks-sign = ls_centro_montaje-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_centro_montaje.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.
     WHEN 'STATUS'.              " Equivalent to 'Status' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_status ).

       LOOP AT lr_status INTO ls_status.
         ls_i_status-high = ls_status-high.
         ls_i_status-low = ls_status-low.
         ls_i_status-option = ls_status-option.
         ls_i_status-sign = ls_status-sign.
         APPEND ls_i_status TO i_status.
       ENDLOOP.
       CLEAR lr_status.
     WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_matnr ).

       LOOP AT lr_matnr INTO ls_matnr.
         ls_i_matnr-high = ls_matnr-high.
         ls_i_matnr-low = ls_matnr-low.
         ls_i_matnr-option = ls_matnr-option.
         ls_i_matnr-sign = ls_matnr-sign.
         APPEND ls_i_matnr TO i_matnr.
       ENDLOOP.
       CLEAR lr_matnr.
     WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       LOOP AT lr_lgort INTO ls_lgort.
         ls_ir_lgort-high = ls_lgort-high.
         ls_ir_lgort-low = ls_lgort-low.
         ls_ir_lgort-option = ls_lgort-option.
         ls_ir_lgort-sign = ls_lgort-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort.
     WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_charg ).

       LOOP AT lr_charg INTO ls_charg.
         ls_i_charg-high = ls_charg-high.
         ls_i_charg-low = ls_charg-low.
         ls_i_charg-option = ls_charg-option.
         ls_i_charg-sign = ls_charg-sign.
         APPEND ls_i_charg TO i_charg.
       ENDLOOP.
       CLEAR lr_charg.
     WHEN 'DIMENSION'.              " Equivalent to 'Dimension' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_dimension ).

       LOOP AT lr_dimension INTO ls_dimension.
         ls_ir_medidacaja-high = ls_dimension-high.
         ls_ir_medidacaja-low = ls_dimension-low.
         ls_ir_medidacaja-option = ls_dimension-option.
         ls_ir_medidacaja-sign = ls_dimension-sign.
         APPEND ls_ir_medidacaja TO ir_medidacaja.
       ENDLOOP.
       CLEAR lr_dimension.
     WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_ancho ).

       LOOP AT lr_ancho INTO ls_ancho.
         ls_i_ancho-high = ls_ancho-high.
         ls_i_ancho-low = ls_ancho-low.
         ls_i_ancho-option = ls_ancho-option.
         ls_i_ancho-sign = ls_ancho-sign.
         APPEND ls_i_ancho TO i_ancho.
       ENDLOOP.
       CLEAR lr_ancho.
     WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_largo ).

       LOOP AT lr_largo INTO ls_largo.
         ls_i_largo-high = ls_largo-high.
         ls_i_largo-low = ls_largo-low.
         ls_i_largo-option = ls_largo-option.
         ls_i_largo-sign = ls_largo-sign.
         APPEND ls_i_largo TO i_largo.
       ENDLOOP.
       CLEAR lr_largo.
     WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_alto ).

       LOOP AT lr_alto INTO ls_alto.
         ls_i_alto-high = ls_alto-high.
         ls_i_alto-low = ls_alto-low.
         ls_i_alto-option = ls_alto-option.
         ls_i_alto-sign = ls_alto-sign.
         APPEND ls_i_alto TO i_alto.
       ENDLOOP.
       CLEAR lr_alto.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_STOCKS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_budat       = ir_budat
           ir_maktx       = ir_maktx
           ir_kdmat       = ir_kdmat
           ir_status_text = ir_status_text
           ir_kunnr_name  = ir_kunnr_name
           ir_kunnr       = ir_kunnr
           ir_lgort       = ir_lgort
           ir_werks       = ir_werks
           i_status       = i_status
           i_matnr        = i_matnr
           i_charg        = i_charg
           ir_medidacaja  = ir_medidacaja
           i_ancho        = i_ancho
           i_largo        = i_largo
           i_alto         = i_alto
         IMPORTING
           o_stock        = o_stock
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_budat              = ir_budat
       ir_maktx              = ir_maktx
       ir_kdmat              = ir_kdmat
       ir_status_text        = ir_status_text
       ir_kunnr_name         = ir_kunnr_name
       ir_kunnr              = ir_kunnr
       ir_lgort              = ir_lgort
       ir_werks              = ir_werks
       i_status              = i_status
       i_matnr               = i_matnr
       i_charg               = i_charg
       ir_medidacaja         = ir_medidacaja
       i_ancho               = i_ancho
       i_largo               = i_largo
       i_alto                = i_alto
     IMPORTING
       o_stock               = o_stock
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_stock ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_stock INTO ls_o_stock
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_stock-cant_devolucion_uom = ls_o_stock-cant_devolucion_uom.
   ls_gw_o_stock-cant_bloq_defectuosa_uom = ls_o_stock-cant_bloq_defectuosa_uom.
   ls_gw_o_stock-cant_bloq_montaje = ls_o_stock-cant_bloq_montaje.
   ls_gw_o_stock-budat = ls_o_stock-budat.
   ls_gw_o_stock-bwtar = ls_o_stock-bwtar.
   ls_gw_o_stock-charg = ls_o_stock-charg.
   ls_gw_o_stock-cant_disp_uom = ls_o_stock-cant_disp_uom.
   ls_gw_o_stock-cant_disp = ls_o_stock-cant_disp.
   ls_gw_o_stock-alto_uom = ls_o_stock-alto_uom.
   ls_gw_o_stock-alto = ls_o_stock-alto.
   ls_gw_o_stock-ancho_uom = ls_o_stock-ancho_uom.
   ls_gw_o_stock-ancho = ls_o_stock-ancho.
   ls_gw_o_stock-largo_uom = ls_o_stock-largo_uom.
   ls_gw_o_stock-largo = ls_o_stock-largo.
   ls_gw_o_stock-maktx = ls_o_stock-maktx.
   ls_gw_o_stock-kdmat = ls_o_stock-kdmat.
   ls_gw_o_stock-matnr = ls_o_stock-matnr.
   ls_gw_o_stock-lgort = ls_o_stock-lgort.
   ls_gw_o_stock-status_text = ls_o_stock-status_text.
   ls_gw_o_stock-werks = ls_o_stock-werks.
   ls_gw_o_stock-status = ls_o_stock-status.
   ls_gw_o_stock-dimension = ls_o_stock-dimension.
   ls_gw_o_stock-cant_devolucion = ls_o_stock-cant_devolucion.
   ls_gw_o_stock-cant_bloq_defectuosa = ls_o_stock-cant_bloq_defectuosa.
   ls_gw_o_stock-cant_bloq_montaje_uom = ls_o_stock-cant_bloq_montaje_uom.
   ls_gw_o_stock-stock_bloq = ls_o_stock-stock_bloq.
   ls_gw_o_stock-matnr_bloq = ls_o_stock-matnr_bloq.
   ls_gw_o_stock-kunnr_name = ls_o_stock-kunnr_name.
   ls_gw_o_stock-kunnr = ls_o_stock-kunnr.
   APPEND ls_gw_o_stock TO et_entityset.
   CLEAR ls_gw_o_stock.
 ENDLOOP.

  endmethod.
  method STOCKSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'STOCKSET_UPDATE_ENTITY'.
  endmethod.
