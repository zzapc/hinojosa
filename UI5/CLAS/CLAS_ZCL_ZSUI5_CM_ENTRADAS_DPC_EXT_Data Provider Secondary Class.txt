
class ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT definition
  public
  inheriting from ZCL_ZSUI5_CM_ENTRADAS_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~EXECUTE_ACTION
    redefinition .
protected section.

  methods CUSTOME_CREATE_DEEP_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_EXPAND type ref to /IWBEP/IF_MGW_ODATA_EXPAND
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER
    exporting
      !ER_DEEP_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC_EXT=>TS_ENTREGACREAR_DEEP
      !ER_RETURN type BAPIRET2_T
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .

  methods AYUDAPROVEEDORSE_GET_ENTITYSET
    redefinition .
  methods ENTRADASSET_GET_ENTITYSET
    redefinition .
  methods ADDPOSICIONSET_GET_ENTITYSET
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT definition
class ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT implementation.

  METHOD ayudaproveedorse_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA lv_max_hits TYPE i.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_message TYPE bapiret2.
    DATA lt_selopt TYPE ddshselops.
    DATA ls_selopt LIKE LINE OF lt_selopt.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_loevm LIKE RANGE OF ls_converted_keys-loevm.
    DATA ls_loevm LIKE LINE OF lr_loevm.
    DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
    DATA ls_mcod1 LIKE LINE OF lr_mcod1.
    DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
    DATA ls_lifnr LIKE LINE OF lr_lifnr.
    DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
    DATA ls_pstlz LIKE LINE OF lr_pstlz.
    DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
    DATA ls_mcod3 LIKE LINE OF lr_mcod3.
    DATA lr_sortl LIKE RANGE OF ls_converted_keys-sortl.
    DATA ls_sortl LIKE LINE OF lr_sortl.
    DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
    DATA ls_land1 LIKE LINE OF lr_land1.
    DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
    DATA lv_next TYPE i VALUE 1.
    DATA ls_entityset LIKE LINE OF et_entityset.
    DATA ls_result_list_next LIKE LINE OF lt_result_list.
    DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 025 ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    " Calculate the number of max hits to be fetched from the function module
    " The lv_max_hits value is a summary of the Top and Skip values
    IF ls_paging-top > 0.
      lv_max_hits = is_paging-top + is_paging-skip.
    ENDIF.

* Maps filter table lines to the Search Help select option table
    LOOP AT lt_filter_select_options INTO ls_filter.

      CASE ls_filter-property.
        WHEN 'LOEVM'.              " Equivalent to 'Loevm' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_loevm ).

          LOOP AT lr_loevm INTO ls_loevm.
            ls_selopt-high = ls_loevm-high.
            ls_selopt-low = ls_loevm-low.
            ls_selopt-option = ls_loevm-option.
            ls_selopt-sign = ls_loevm-sign.
            ls_selopt-shlpfield = 'LOEVM'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.
        WHEN 'MCOD1'.              " Equivalent to 'Mcod1' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_mcod1 ).

          LOOP AT lr_mcod1 INTO ls_mcod1.
            ls_selopt-high = ls_mcod1-high.
            ls_selopt-low = ls_mcod1-low.
            ls_selopt-option = ls_mcod1-option.
            ls_selopt-sign = ls_mcod1-sign.
            ls_selopt-shlpfield = 'MCOD1'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.
        WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_lifnr ).

          LOOP AT lr_lifnr INTO ls_lifnr.
            ls_selopt-high = ls_lifnr-high.
            ls_selopt-low = ls_lifnr-low.
            ls_selopt-option = ls_lifnr-option.
            ls_selopt-sign = ls_lifnr-sign.
            ls_selopt-shlpfield = 'LIFNR'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.
        WHEN 'PSTLZ'.              " Equivalent to 'Pstlz' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_pstlz ).

          LOOP AT lr_pstlz INTO ls_pstlz.
            ls_selopt-high = ls_pstlz-high.
            ls_selopt-low = ls_pstlz-low.
            ls_selopt-option = ls_pstlz-option.
            ls_selopt-sign = ls_pstlz-sign.
            ls_selopt-shlpfield = 'PSTLZ'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.
        WHEN 'MCOD3'.              " Equivalent to 'Mcod3' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_mcod3 ).

          LOOP AT lr_mcod3 INTO ls_mcod3.
            ls_selopt-high = ls_mcod3-high.
            ls_selopt-low = ls_mcod3-low.
            ls_selopt-option = ls_mcod3-option.
            ls_selopt-sign = ls_mcod3-sign.
            ls_selopt-shlpfield = 'MCOD3'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.
        WHEN 'SORTL'.              " Equivalent to 'Sortl' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_sortl ).

          LOOP AT lr_sortl INTO ls_sortl.
            ls_selopt-high = ls_sortl-high.
            ls_selopt-low = ls_sortl-low.
            ls_selopt-option = ls_sortl-option.
            ls_selopt-sign = ls_sortl-sign.
            ls_selopt-shlpfield = 'SORTL'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.
        WHEN 'LAND1'.              " Equivalent to 'Land1' property in the service
          lo_filter->convert_select_option(
            EXPORTING
              is_select_option = ls_filter
            IMPORTING
              et_select_option = lr_land1 ).

          LOOP AT lr_land1 INTO ls_land1.
            ls_selopt-high = ls_land1-high.
            ls_selopt-low = ls_land1-low.
            ls_selopt-option = ls_land1-option.
            ls_selopt-sign = ls_land1-sign.
            ls_selopt-shlpfield = 'LAND1'.
            ls_selopt-shlpname = 'KREDA'.
            APPEND ls_selopt TO lt_selopt.
            CLEAR ls_selopt.
          ENDLOOP.

        WHEN OTHERS.
          " Log message in the application log
          me->/iwbep/if_sb_dpc_comm_services~log_message(
            EXPORTING
              iv_msg_type   = 'E'
              iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
              iv_msg_number = 020
              iv_msg_v1     = ls_filter-property ).
          " Raise Exception
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
            EXPORTING
              textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      ENDCASE.
    ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------

    IF NOT iv_search_string IS INITIAL.

      APPEND VALUE #( shlpfield = 'LIFNR' sign = 'I' option = 'CP' low = '*' && iv_search_string && '*' ) TO lt_selopt.

      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'KREDA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = DATA(tv_result1) " lt_result_list
          es_message = ls_message ).

      MOVE-CORRESPONDING tv_result1 TO lt_result_list KEEPING TARGET LINES.

      CLEAR lt_selopt.

      APPEND VALUE #( shlpfield = 'MCOD1' sign = 'I' option = 'CP' low = '*' && iv_search_string && '*' ) TO lt_selopt.

      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'KREDA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = DATA(tv_result2) " lt_result_list
          es_message = ls_message ).

      MOVE-CORRESPONDING tv_result2 TO lt_result_list KEEPING TARGET LINES.



    ELSE.
      me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
        EXPORTING
          iv_shlp_name = 'KREDA'
          iv_maxrows = lv_max_hits
          iv_sort = 'X'
          iv_call_shlt_exit = 'X'
          it_selopt = lt_selopt
        IMPORTING
          et_return_list = lt_result_list
          es_message = ls_message ).
    ENDIF.

* Get search help values

*    me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
*      EXPORTING
*        iv_shlp_name = 'KREDA'
*        iv_maxrows = lv_max_hits
*        iv_sort = 'X'
*        iv_call_shlt_exit = 'X'
*        it_selopt = lt_selopt
*      IMPORTING
*        et_return_list = lt_result_list
*        es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
    IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
      me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
        EXPORTING
          is_return      = ls_message
          iv_entity_type = iv_entity_name
          it_key_tab     = it_key_tab ).
    ENDIF.

    CLEAR et_entityset.

    LOOP AT lt_result_list INTO ls_result_list
      WHERE record_number > ls_paging-skip.

      " Move SH results to GW request responce table
      lv_next = sy-tabix + 1. " next loop iteration
      CASE ls_result_list-field_name.
        WHEN 'LAND1'.
          ls_entityset-land1 = ls_result_list-field_value.
        WHEN 'LIFNR'.
          ls_entityset-lifnr = ls_result_list-field_value.
        WHEN 'LOEVM'.
          ls_entityset-loevm = ls_result_list-field_value.
        WHEN 'MCOD1'.
          ls_entityset-mcod1 = ls_result_list-field_value.
        WHEN 'MCOD3'.
          ls_entityset-mcod3 = ls_result_list-field_value.
        WHEN 'PSTLZ'.
          ls_entityset-pstlz = ls_result_list-field_value.
        WHEN 'SORTL'.
          ls_entityset-sortl = ls_result_list-field_value.
      ENDCASE.

      " Check if the next line in the result list is a new record
      READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
      IF sy-subrc <> 0
      OR ls_result_list-record_number <> ls_result_list_next-record_number.
        " Save the collected SH result in the GW request table
        APPEND ls_entityset TO et_entityset.
        CLEAR: ls_result_list_next, ls_entityset.
      ENDIF.

    ENDLOOP.

    SORT et_entityset BY lifnr.
  ENDMETHOD.
  METHOD /iwbep/if_mgw_appl_srv_runtime~create_deep_entity.

    DATA vl_vbeln TYPE vbeln_vl.
    DATA custome_create_deep_entity TYPE zcl_zsui5_cm_entradas_mpc_ext=>ts_entregacrear_deep.
    DATA tl_return_go TYPE STANDARD TABLE OF zcl_zsui5_cm_entradas_mpc=>return.

    CASE iv_entity_set_name.
*-------------------------------------------------------------------------*
*             EntitySet -  HeaderSet
*-------------------------------------------------------------------------*
      WHEN 'EntregaCrearHeadSet'.
*       Call the entity set generated method
*      TRY.

        CALL METHOD me->custome_create_deep_entity
          EXPORTING
            iv_entity_name          = iv_entity_name
            iv_entity_set_name      = iv_entity_set_name
            iv_source_name          = iv_source_name
            it_key_tab              = it_key_tab
            it_navigation_path      = it_navigation_path
            io_expand               = io_expand
            io_tech_request_context = io_tech_request_context
            io_data_provider        = io_data_provider
          IMPORTING
            er_deep_entity          = custome_create_deep_entity
            er_return               = DATA(tv_return).

        LOOP AT tv_return INTO DATA(wv_return) WHERE type NE 'E' AND type NE 'A' AND type NE ''.

          MESSAGE ID wv_return-id TYPE wv_return-type NUMBER wv_return-number
          WITH wv_return-message_v1 wv_return-message_v2 wv_return-message_v3 wv_return-message_v4
          INTO DATA(vv_mensaje).

          APPEND VALUE #( type = wv_return-type message = vv_mensaje ) TO custome_create_deep_entity-mensajesset.

        ENDLOOP.

        copy_data_to_ref(
        EXPORTING
        is_data = custome_create_deep_entity
        CHANGING
        cr_data = er_deep_entity
        ).
    ENDCASE.

    DATA(lo_logger)            = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
    DATA(io_message_container) = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).
    DATA(lv_error_category)    = /iwbep/if_message_container=>gcs_error_category-processing.

    READ TABLE tv_return WITH KEY type = 'E' TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      io_message_container->add_messages_from_bapi(
         it_bapi_messages = tv_return
         iv_determine_leading_msg = /iwbep/if_message_container=>gcs_leading_msg_search_option-first
       ).
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          textid = /iwbep/cx_mgw_busi_exception=>business_error.
    ELSE.
      io_message_container->add_messages_from_bapi(
          it_bapi_messages = tv_return
          iv_add_to_response_header = abap_true
          iv_determine_leading_msg = /iwbep/if_message_container=>gcs_leading_msg_search_option-first
      ).
    ENDIF.
  ENDMETHOD.
  METHOD /iwbep/if_mgw_appl_srv_runtime~execute_action.
    DATA tl_return TYPE bapiret2_t.
    DATA wl_resultado TYPE zcl_zsui5_cm_entradas_mpc=>resultado.
    DATA tl_return_go TYPE STANDARD TABLE OF zcl_zsui5_cm_entradas_mpc=>return.
    CASE iv_action_name.
      WHEN 'ContabilizarEntregaEntrante'.
        TRY .
            DATA(vv_vbeln_ce) = CONV vbeln_vl(  it_parameter[ name = 'Vbeln' ]-value ).
            DATA(vv_posnr_ce) = CONV posnr_vl(  it_parameter[ name = 'Posnr' ]-value ).

            vv_vbeln_ce = |{ vv_vbeln_ce ALPHA = IN }|.
            vv_posnr_ce = |{ vv_posnr_ce ALPHA = IN }|.
            CALL FUNCTION 'ZUI5_CM_CONTABILIZAR_ENTREGA'
              EXPORTING
                iv_vbeln = vv_vbeln_ce
                iv_posnr = vv_posnr_ce
              IMPORTING
                o_return = tl_return
                e_error  = wl_resultado-resultado.

            LOOP AT tl_return INTO DATA(wv_return).

              MESSAGE id wv_return-id TYPE wv_return-type NUMBER wv_return-number
              WITH wv_return-message_v1 wv_return-message_v2 wv_return-message_v3 wv_return-message_v4
              INTO DATA(vv_mensaje).

              APPEND VALUE #( type = wv_return-type message = vv_mensaje ) TO tl_return_go.

            ENDLOOP.



            copy_data_to_ref(
                     EXPORTING
                       is_data = tl_return_go
                     CHANGING
                       cr_data = er_data ).
          CATCH cx_sy_itab_line_not_found INTO DATA(vv_error_1).

        ENDTRY.

      WHEN 'AnularEntregaEntrante'.

        TRY .
            DATA(vv_vbeln_ae) =  CONV vbeln_vl( it_parameter[ name = 'Vbeln' ]-value ).
            vv_vbeln_ae = |{ vv_vbeln_ae ALPHA = IN }|.
            CALL FUNCTION 'ZUI5_CM_ANULA_CONTABILIZACION'
              EXPORTING
                iv_vbeln = vv_vbeln_ae
              IMPORTING
                e_error  = wl_resultado-resultado
                o_return = tl_return.

            LOOP AT tl_return INTO DATA(wv_return2).

              MESSAGE id wv_return2-id TYPE wv_return2-type NUMBER wv_return2-number
              WITH wv_return2-message_v1 wv_return2-message_v2 wv_return2-message_v3 wv_return2-message_v4
              INTO DATA(vv_mensaje2).

              APPEND VALUE #( type = wv_return2-type message = vv_mensaje2 ) to tl_return_go.

            ENDLOOP.


            copy_data_to_ref(
         EXPORTING
           is_data = tl_return_go
         CHANGING
           cr_data = er_data ).
          CATCH cx_sy_itab_line_not_found INTO DATA(vv_error_2).

        ENDTRY.

      WHEN 'AnularPosicionEntrega'.
*        TRY .
*            DATA(vv_vbeln_ap) = CONV vbeln_vl( it_parameter[ name = 'Vbeln' ]-value ).
*            DATA(vv_posnr_ap) = CONV vbeln_vl( it_parameter[ name = 'Posnr' ]-value ).
*            CALL FUNCTION 'ZUI5_CM_ANULA_POSICION_ENTREGA'
*              EXPORTING
*                iv_vbeln = vv_vbeln_ap
*                iv_posnr = vv_posnr_ap
*              IMPORTING
*                o_return = tl_return
*                e_error  = wl_resultado-resultado.
*
*            copy_data_to_ref(
*              EXPORTING
*                  is_data = wl_resultado
*              CHANGING
*                  cr_data = er_data ).
*          CATCH cx_sy_itab_line_not_found INTO DATA(vv_error_3).
*
*        ENDTRY.



*	WHEN .
      WHEN OTHERS.
    ENDCASE.

    DATA(lo_logger)            = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
    DATA(io_message_container) = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).
    DATA(lv_error_category)    = /iwbep/if_message_container=>gcs_error_category-processing.

    READ TABLE tl_return WITH KEY type = 'E' TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      io_message_container->add_messages_from_bapi(
         it_bapi_messages = tl_return
         iv_determine_leading_msg = /iwbep/if_message_container=>gcs_leading_msg_search_option-first
       ).
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          textid = /iwbep/cx_mgw_busi_exception=>business_error.
    ELSE.
      io_message_container->add_messages_from_bapi(
          it_bapi_messages = tl_return
          iv_add_to_response_header = abap_true
          iv_determine_leading_msg = /iwbep/if_message_container=>gcs_leading_msg_search_option-first
      ).
    ENDIF.

  ENDMETHOD.
  METHOD addposicionset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA ir_bedat  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_dimensioncaja  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_ebeln  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_lgort  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_lifnr  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_lifnr_name  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_maktx  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA ir_werks  TYPE zif_zui5_cm_ayuda_material=>rseloption.
    DATA o_data  TYPE zif_zui5_cm_ayuda_material=>zsuitt_add_posicion.
    DATA o_return  TYPE zif_zui5_cm_ayuda_material=>bapiret2_t.
    DATA ls_ir_bedat  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_ebeln  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_dimensioncaja  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_lifnr  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_lifnr_name  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
    DATA ls_o_data  TYPE LINE OF zif_zui5_cm_ayuda_material=>zsuitt_add_posicion.
    DATA ls_o_return  TYPE LINE OF zif_zui5_cm_ayuda_material=>bapiret2_t.
    DATA lv_rfc_name TYPE tfdir-funcname.
    DATA lv_destination TYPE rfcdest.
    DATA lv_subrc TYPE syst-subrc.
    DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
    DATA lx_root TYPE REF TO cx_root.
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
    DATA ls_maktx LIKE LINE OF lr_maktx.
    DATA lr_lgort_d LIKE RANGE OF ls_converted_keys-lgort_d.
    DATA ls_lgort_d LIKE LINE OF lr_lgort_d.
    DATA lr_char70 LIKE RANGE OF ls_converted_keys-char70.
    DATA ls_char70 LIKE LINE OF lr_char70.
    DATA lr_werks_d LIKE RANGE OF ls_converted_keys-werks_d.
    DATA ls_werks_d LIKE LINE OF lr_werks_d.
    DATA lr_name1 LIKE RANGE OF ls_converted_keys-name1.
    DATA ls_name1 LIKE LINE OF lr_name1.
    DATA lr_bedat LIKE RANGE OF ls_converted_keys-bedat.
    DATA ls_bedat LIKE LINE OF lr_bedat.
    DATA lr_ebeln LIKE RANGE OF ls_converted_keys-ebeln.
    DATA ls_ebeln LIKE LINE OF lr_ebeln.
    DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
    DATA ls_lifnr LIKE LINE OF lr_lifnr.
    DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
    DATA ls_gw_o_data LIKE LINE OF et_entityset.
    DATA lv_skip     TYPE int4.
    DATA lv_top      TYPE int4.

    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    DATA o_data_temp         TYPE zif_zui5_cm_ayuda_material=>zsuitt_add_posicion.
    "MTS: Ajustes filtro OR
*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*   me->/iwbep/if_sb_dpc_comm_services~log_message(
*     EXPORTING
*       iv_msg_type   = 'E'
*       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*       iv_msg_number = 025 ).
*   " Raise Exception
*   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*     EXPORTING
*       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
      "mts: ajustes filtro or
      zcl_search_dpc=>filtros_or(
      EXPORTING
        iv_instancia = me
        iv_data = ls_gw_o_data
        IMPORTING

          et_filter_select_options_and = lt_filter_select_options_and
          et_filter_select_options_or = lt_filter_select_options_or ).
*      MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.

      zcl_search_dpc=>search_or(
      EXPORTING
        iv_instancia = me
        iv_search = iv_search_string
        iv_data = ls_gw_o_data
        it_filter_select_options = lt_filter_select_options
      IMPORTING
        et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).

    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
    ELSE.
      lv_veces = 1.
    ENDIF.
    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_gw_o_data
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.

    DO lv_veces TIMES.
      CLEAR:
      ir_bedat, ir_dimensioncaja, ir_lgort, ir_lifnr, ir_lifnr_name, ir_maktx, ir_werks, ir_ebeln.

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ELSE.
        lt_filter_select_options = lt_filter_select_options_and.
      ENDIF.
      "MTS: Ajustes filtro OR
* Maps filter table lines to function module parameters
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_maktx ).

            LOOP AT lr_maktx INTO ls_maktx.
              ls_ir_maktx-high = ls_maktx-high.
              ls_ir_maktx-low = ls_maktx-low.
              ls_ir_maktx-option = ls_maktx-option.
              ls_ir_maktx-sign = ls_maktx-sign.
              APPEND ls_ir_maktx TO ir_maktx.
            ENDLOOP.
            CLEAR lr_maktx.
          WHEN 'LGORT_D'.              " Equivalent to 'Lgort' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort_d ).

            LOOP AT lr_lgort_d INTO ls_lgort_d.
              ls_ir_lgort-high = ls_lgort_d-high.
              ls_ir_lgort-low = ls_lgort_d-low.
              ls_ir_lgort-option = ls_lgort_d-option.
              ls_ir_lgort-sign = ls_lgort_d-sign.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_lgort_d.
          WHEN 'CHAR70'.              " Equivalent to 'DimensionCaja' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_char70 ).

            LOOP AT lr_char70 INTO ls_char70.
              ls_ir_dimensioncaja-high = ls_char70-high.
              ls_ir_dimensioncaja-low = ls_char70-low.
              ls_ir_dimensioncaja-option = ls_char70-option.
              ls_ir_dimensioncaja-sign = ls_char70-sign.
              APPEND ls_ir_dimensioncaja TO ir_dimensioncaja.
            ENDLOOP.
            CLEAR lr_char70.
          WHEN 'WERKS_D'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks_d ).

            LOOP AT lr_werks_d INTO ls_werks_d.
              ls_ir_werks-high = ls_werks_d-high.
              ls_ir_werks-low = ls_werks_d-low.
              ls_ir_werks-option = ls_werks_d-option.
              ls_ir_werks-sign = ls_werks_d-sign.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_werks_d.
          WHEN 'NAME1'.              " Equivalent to 'LifnrName' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_name1 ).

            LOOP AT lr_name1 INTO ls_name1.
              ls_ir_lifnr_name-high = ls_name1-high.
              ls_ir_lifnr_name-low = ls_name1-low.
              ls_ir_lifnr_name-option = ls_name1-option.
              ls_ir_lifnr_name-sign = ls_name1-sign.
              APPEND ls_ir_lifnr_name TO ir_lifnr_name.
            ENDLOOP.
            CLEAR lr_name1.
          WHEN 'BEDAT'.              " Equivalent to 'Bedat' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_bedat ).

            LOOP AT lr_bedat INTO ls_bedat.
              ls_ir_bedat-high = ls_bedat-high.
              ls_ir_bedat-low = ls_bedat-low.
              ls_ir_bedat-option = ls_bedat-option.
              ls_ir_bedat-sign = ls_bedat-sign.
              APPEND ls_ir_bedat TO ir_bedat.
            ENDLOOP.
            CLEAR lr_bedat.
          WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lifnr ).

            LOOP AT lr_lifnr INTO ls_lifnr.
              ls_ir_lifnr-high = ls_lifnr-high.
              ls_ir_lifnr-low = ls_lifnr-low.
              ls_ir_lifnr-option = ls_lifnr-option.
              ls_ir_lifnr-sign = ls_lifnr-sign.
              APPEND ls_ir_lifnr TO ir_lifnr.
            ENDLOOP.
            CLEAR lr_lifnr.
          WHEN 'EBELN'.              " Equivalent to 'Ebeln' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ebeln ).

            LOOP AT lr_ebeln INTO ls_ebeln.
              ls_ir_ebeln-sign = ls_ebeln-sign.
              ls_ir_ebeln-option = ls_ebeln-option.
              ls_ir_ebeln-low = ls_ebeln-low.
              ls_ir_ebeln-high = ls_ebeln-high.
              APPEND ls_ir_ebeln TO ir_ebeln.
            ENDLOOP.
            CLEAR lr_ebeln.

          WHEN OTHERS.
*      sarce ini 3#
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3#
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.

      ENDLOOP.
*      SARCE INI 4#
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4#



* Get RFC destination
      lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
      lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
      lv_rfc_name = 'ZUI5_CM_AYUDA_MATERIAL'.

      IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

        TRY.
            CALL FUNCTION lv_rfc_name
              EXPORTING
                ir_maktx         = ir_maktx
                ir_lgort         = ir_lgort
                ir_dimensioncaja = ir_dimensioncaja
                ir_werks         = ir_werks
                ir_lifnr_name    = ir_lifnr_name
                ir_bedat         = ir_bedat
                ir_lifnr         = ir_lifnr
                ir_ebeln         = ir_ebeln
              IMPORTING
                o_return         = o_return
                o_data           = o_data
              EXCEPTIONS
                system_failure   = 1000 message lv_exc_msg
                OTHERS           = 1002.

            lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
          CATCH cx_root INTO lx_root.
            lv_subrc = 1001.
            lv_exc_msg = lx_root->if_message~get_text( ).
        ENDTRY.

      ELSE.

        CALL FUNCTION lv_rfc_name DESTINATION lv_destination
          EXPORTING
            ir_maktx              = ir_maktx
            ir_lgort              = ir_lgort
            ir_dimensioncaja      = ir_dimensioncaja
            ir_werks              = ir_werks
            ir_lifnr_name         = ir_lifnr_name
            ir_bedat              = ir_bedat
            ir_lifnr              = ir_lifnr
            ir_ebeln              = ir_ebeln
          IMPORTING
            o_return              = o_return
            o_data                = o_data
          EXCEPTIONS
            system_failure        = 1000 MESSAGE lv_exc_msg
            communication_failure = 1001 MESSAGE lv_exc_msg
            OTHERS                = 1002.

        lv_subrc = sy-subrc.

      ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
      IF lv_subrc <> 0.
* Execute the RFC exception handling process
        me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
          EXPORTING
            iv_subrc            = lv_subrc
            iv_exp_message_text = lv_exc_msg ).
      ENDIF.

      IF o_return IS NOT INITIAL.
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            iv_entity_type = iv_entity_name
            it_return      = o_return
            it_key_tab     = it_key_tab ).
      ENDIF.
*      SARCE INI 5#
      MOVE-CORRESPONDING o_data_temp TO o_data KEEPING TARGET LINES.
*      SARCE FIN 5#
    ENDDO. "MTS Ajustes
*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
    IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
      lv_skip = ls_paging-skip + 1.
    ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
    IF  ls_paging-top <> 0
    AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
      lv_top = ls_paging-top + lv_skip - 1.
    ELSEIF ls_paging-top <> 0
    AND    lv_skip IS INITIAL.
      lv_top = ls_paging-top.
    ELSE.
      lv_top = lines( o_data ).
    ENDIF.

    "Ordenamos
    IF it_order IS NOT INITIAL.
      SORT o_data BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
      DELETE ADJACENT DUPLICATES FROM o_data.
    ELSE.
      SORT o_data.
      DELETE ADJACENT DUPLICATES FROM o_data.
    ENDIF.

*  - Map properties from the backend to the Gateway output response table -

    LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
         FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
      ls_gw_o_data-lgort_d = ls_o_data-lgort.
      ls_gw_o_data-werks_d = ls_o_data-werks.
      ls_gw_o_data-dimesioncaja = ls_o_data-dimesioncaja.
      ls_gw_o_data-meins = ls_o_data-meins.
      ls_gw_o_data-menge = ls_o_data-menge.
      ls_gw_o_data-maktx = ls_o_data-maktx.
      ls_gw_o_data-matnr = ls_o_data-matnr.
      ls_gw_o_data-ebelp = ls_o_data-ebelp.
      ls_gw_o_data-ebeln = ls_o_data-ebeln.
      ls_gw_o_data-matnr2 = ls_o_data-zzmatpal.
      ls_gw_o_data-menge2 = ls_o_data-zzcantpal.
      ls_gw_o_data-menge3 = ls_o_data-zzcanxpal.
      APPEND ls_gw_o_data TO et_entityset.
      CLEAR ls_gw_o_data.
    ENDLOOP.

  ENDMETHOD.
  METHOD custome_create_deep_entity.
    DATA: vl_vbeln TYPE vbeln_vl.
    DATA: wl_deep_entity TYPE zcl_zsui5_cm_entradas_mpc_ext=>ts_entregacrear_deep,
          wl_head        TYPE zsuist_crea_entrega_head,
          tl_position    TYPE zsuitt_crea_entrega_pos.

    io_data_provider->read_entry_data(
    IMPORTING
    es_data = wl_deep_entity ).

    MOVE-CORRESPONDING wl_deep_entity TO wl_head.
    MOVE-CORRESPONDING wl_deep_entity-entregacrearpositionset TO tl_position.

    CALL FUNCTION 'ZUI5_CM_CREA_ENTREGA_ENTRANTE'
      EXPORTING
        iv_head       = wl_head
        it_posiciones = tl_position
      IMPORTING
        o_return      = er_return
        e_vbeln       = vl_vbeln.

    er_deep_entity = wl_deep_entity.

    er_deep_entity-lifex = vl_vbeln.
  ENDMETHOD.
  METHOD entradasset_get_entityset.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
    DATA ir_add01       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_agencia     TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_cantidad    TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_charg       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_charg_stat  TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_ebeln       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_ebelp       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_eindt       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_kunnr       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_kunnr_name  TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_lgort       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_lifnr       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_lifnr_name  TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_maktx       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_matnr       TYPE zif_zui5_cm_get_entradas=>tbl_mat_range.
    DATA ir_medidacaja  TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_posnr       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_tdlnr       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_text1       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_vbeln       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_wadat_ist   TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_wbsta       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_werks       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_belnr       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA ir_buzei       TYPE zif_zui5_cm_get_entradas=>rseloption.
    DATA o_data         TYPE zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
    DATA o_return  TYPE zif_zui5_cm_get_entradas=>bapiret2_t.
    DATA ls_ir_add01  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_agencia  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_cantidad  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_charg  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_charg_stat  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_ebeln  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_ebelp  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_eindt  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_kunnr_name  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_lifnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_lifnr_name  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_entradas=>tbl_mat_range.
    DATA ls_ir_medidacaja  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_posnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_tdlnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_text1  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_wadat_ist  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_wbsta  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_belnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_ir_buzei  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
    DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
    DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entradas=>bapiret2_t.
    DATA lv_rfc_name TYPE tfdir-funcname.
    DATA lv_destination TYPE rfcdest.
    DATA lv_subrc TYPE syst-subrc.
    DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
    DATA lx_root TYPE REF TO cx_root.
    DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
    DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
    DATA lv_filter_str TYPE string.
    DATA ls_paging TYPE /iwbep/s_mgw_paging.
    DATA ls_converted_keys LIKE LINE OF et_entityset.
    DATA ls_filter TYPE /iwbep/s_mgw_select_option.
    DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
    DATA lr_vbeln LIKE RANGE OF ls_converted_keys-vbeln.
    DATA ls_vbeln LIKE LINE OF lr_vbeln.
    DATA lr_posnr LIKE RANGE OF ls_converted_keys-posnr.
    DATA ls_posnr LIKE LINE OF lr_posnr.
    DATA lr_ebeln LIKE RANGE OF ls_converted_keys-ebeln.
    DATA ls_ebeln LIKE LINE OF lr_ebeln.
    DATA lr_ebelp LIKE RANGE OF ls_converted_keys-ebelp.
    DATA ls_ebelp LIKE LINE OF lr_ebelp.
    DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
    DATA ls_matnr LIKE LINE OF lr_matnr.
    DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
    DATA ls_maktx LIKE LINE OF lr_maktx.
    DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
    DATA ls_werks LIKE LINE OF lr_werks.
    DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
    DATA ls_lifnr LIKE LINE OF lr_lifnr.
    DATA lr_lifnr_name LIKE RANGE OF ls_converted_keys-lifnr_name.
    DATA ls_lifnr_name LIKE LINE OF lr_lifnr_name.
    DATA lr_medidacaja LIKE RANGE OF ls_converted_keys-medidacaja.
    DATA ls_medidacaja LIKE LINE OF lr_medidacaja.
    DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
    DATA ls_charg LIKE LINE OF lr_charg.
    DATA lr_charg_stat LIKE RANGE OF ls_converted_keys-charg_stat.
    DATA ls_charg_stat LIKE LINE OF lr_charg_stat.
    DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
    DATA ls_kunnr LIKE LINE OF lr_kunnr.
    DATA lr_kunnr_name LIKE RANGE OF ls_converted_keys-kunnr_name.
    DATA ls_kunnr_name LIKE LINE OF lr_kunnr_name.
    DATA lr_cantidad LIKE RANGE OF ls_converted_keys-cantidad.
    DATA ls_cantidad LIKE LINE OF lr_cantidad.
    DATA lr_tdlnr LIKE RANGE OF ls_converted_keys-tdlnr.
    DATA ls_tdlnr LIKE LINE OF lr_tdlnr.
    DATA lr_agencia LIKE RANGE OF ls_converted_keys-agencia.
    DATA ls_agencia LIKE LINE OF lr_agencia.
    DATA lr_add01 LIKE RANGE OF ls_converted_keys-add01.
    DATA ls_add01 LIKE LINE OF lr_add01.
    DATA lr_text1 LIKE RANGE OF ls_converted_keys-text1.
    DATA ls_text1 LIKE LINE OF lr_text1.
    DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
    DATA ls_lgort LIKE LINE OF lr_lgort.
    DATA lr_wadat_ist LIKE RANGE OF ls_converted_keys-wadat_ist.
    DATA ls_wadat_ist LIKE LINE OF lr_wadat_ist.
    DATA lr_wbsta LIKE RANGE OF ls_converted_keys-wbsta.
    DATA ls_wbsta LIKE LINE OF lr_wbsta.
    DATA lr_eindt LIKE RANGE OF ls_converted_keys-eindt.
    DATA ls_eindt LIKE LINE OF lr_eindt.
    DATA lr_buzei LIKE RANGE OF ls_converted_keys-buzei.
    DATA ls_buzei LIKE LINE OF lr_buzei.
    DATA lr_belnr LIKE RANGE OF ls_converted_keys-belnr.
    DATA ls_belnr LIKE LINE OF lr_belnr.
    DATA lr_centro_montaje LIKE RANGE OF ls_converted_keys-centro_montaje.
    DATA ls_centro_montaje LIKE LINE OF lr_centro_montaje.
    DATA lr_almacen_montaje LIKE RANGE OF ls_converted_keys-almacen_montaje.
    DATA ls_almacen_montaje LIKE LINE OF lr_almacen_montaje.
    DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
    DATA ls_gw_o_data LIKE LINE OF et_entityset.
    DATA lv_skip     TYPE int4.
    DATA lv_top      TYPE int4.

*      SARCE INI 0#
    "MTS: Ajustes filtro OR
    DATA lt_filter_select_options_and TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_temp TYPE /iwbep/t_mgw_select_option.
    DATA lt_filter_select_options_or TYPE /iwbep/t_mgw_select_option.
    DATA lv_veces TYPE i.
    DATA posicion TYPE i.
    DATA o_data_temp         TYPE zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
    "MTS: Ajustes filtro OR
*      SARCE FIN 0#

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
    lo_filter = io_tech_request_context->get_filter( ).
    lt_filter_select_options = lo_filter->get_filter_select_options( ).
    lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
    IF  lv_filter_str            IS NOT INITIAL
    AND lt_filter_select_options IS INITIAL.
      " If the string of the Filter System Query Option is not automatically converted into
      " filter option table (lt_filter_select_options), then the filtering combination is not supported
      " Log message in the application log
*      SARCE INI 1#
*      me->/iwbep/if_sb_dpc_comm_services~log_message(
*        EXPORTING
*          iv_msg_type   = 'E'
*          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
*          iv_msg_number = 025 ).
*      " Raise Exception
*      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
*        EXPORTING
*          textid = /iwbep/cx_mgw_tech_exception=>internal_error.

*      MTS: Ajustes filtro OR
      zcl_search_dpc=>filtros_or(
      EXPORTING
        iv_instancia = me
        iv_data = ls_gw_o_data
        IMPORTING

          et_filter_select_options_and = lt_filter_select_options_and
          et_filter_select_options_or = lt_filter_select_options_or ).
*      MTS: Ajustes filtro OR
    ENDIF.
    IF iv_search_string IS NOT INITIAL.

      zcl_search_dpc=>search_or(
      EXPORTING
        iv_instancia = me
        iv_search = iv_search_string
        iv_data = ls_gw_o_data
        it_filter_select_options = lt_filter_select_options
      IMPORTING
        et_filter_select_options_or = lt_filter_select_options_or ).
    ENDIF.
*      SARCE FIN 1#

* Get key table information
    io_tech_request_context->get_converted_source_keys(
      IMPORTING
        es_key_values  = ls_converted_keys ).

    ls_paging-top = io_tech_request_context->get_top( ).
    ls_paging-skip = io_tech_request_context->get_skip( ).
*      SARCE INI 2#
    "MTS: Ajustes filtro OR
    IF lt_filter_select_options_or IS NOT INITIAL OR lt_filter_select_options_and IS NOT INITIAL.
      DESCRIBE TABLE lt_filter_select_options_or LINES lv_veces.
    ELSE.
      lv_veces = 1.
    ENDIF.
    CLEAR posicion.

    IF lt_filter_select_options IS NOT INITIAL.
      zcl_search_dpc=>filtro_mayusculas(
      EXPORTING
        iv_data = ls_gw_o_data
        CHANGING
        ct_filter_select_options = lt_filter_select_options ).

      APPEND LINES OF lt_filter_select_options TO lt_filter_select_options_and.
    ENDIF.
    DO lv_veces TIMES.
      CLEAR:
      ir_add01 ,
      ir_agencia,
      ir_cantidad,
      ir_charg    ,
      ir_charg_stat,
      ir_ebeln     ,
      ir_ebelp     ,
      ir_eindt     ,
      ir_kunnr     ,
      ir_kunnr_name,
      ir_lgort     ,
      ir_lifnr     ,
      ir_lifnr_name,
      ir_maktx     ,
      ir_matnr     ,
      ir_medidacaja,
      ir_posnr     ,
      ir_tdlnr     ,
      ir_text1     ,
      ir_vbeln     ,
      ir_wadat_ist ,
      ir_wbsta     ,
      ir_werks     .

      ADD 1 TO posicion.
      READ TABLE lt_filter_select_options_or INTO DATA(ls_option_or) INDEX posicion.
      IF sy-subrc = 0.
        lt_filter_select_options = lt_filter_select_options_and.
        APPEND ls_option_or TO lt_filter_select_options.
      ENDIF.
      "MTS: Ajustes filtro OR
*      SARCE FIN 2#
* Maps filter table lines to function module parameters
      LOOP AT lt_filter_select_options INTO ls_filter.

        CASE ls_filter-property.
          WHEN 'VBELN'.              " Equivalent to 'Vbeln' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_vbeln ).

            LOOP AT lr_vbeln INTO ls_vbeln.
              ls_ir_vbeln-high = ls_vbeln-high.
              ls_ir_vbeln-low = ls_vbeln-low.
              ls_ir_vbeln-option = ls_vbeln-option.
              ls_ir_vbeln-sign = ls_vbeln-sign.
              APPEND ls_ir_vbeln TO ir_vbeln.
            ENDLOOP.
            CLEAR lr_vbeln.
          WHEN 'POSNR'.              " Equivalent to 'Posnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_posnr ).

            LOOP AT lr_posnr INTO ls_posnr.
              ls_ir_posnr-high = ls_posnr-high.
              ls_ir_posnr-low = ls_posnr-low.
              ls_ir_posnr-option = ls_posnr-option.
              ls_ir_posnr-sign = ls_posnr-sign.
              APPEND ls_ir_posnr TO ir_posnr.
            ENDLOOP.
            CLEAR lr_posnr.
          WHEN 'EBELN'.              " Equivalent to 'Ebeln' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ebeln ).

            LOOP AT lr_ebeln INTO ls_ebeln.
              ls_ir_ebeln-high = ls_ebeln-high.
              ls_ir_ebeln-low = ls_ebeln-low.
              ls_ir_ebeln-option = ls_ebeln-option.
              ls_ir_ebeln-sign = ls_ebeln-sign.
              APPEND ls_ir_ebeln TO ir_ebeln.
            ENDLOOP.
            CLEAR lr_ebeln.
          WHEN 'EBELP'.              " Equivalent to 'Ebelp' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_ebelp ).

            LOOP AT lr_ebelp INTO ls_ebelp.
              ls_ir_ebelp-high = ls_ebelp-high.
              ls_ir_ebelp-low = ls_ebelp-low.
              ls_ir_ebelp-option = ls_ebelp-option.
              ls_ir_ebelp-sign = ls_ebelp-sign.
              APPEND ls_ir_ebelp TO ir_ebelp.
            ENDLOOP.
            CLEAR lr_ebelp.
          WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_matnr ).

            LOOP AT lr_matnr INTO ls_matnr.
              ls_ir_matnr-matnr_high = ls_matnr-high.
              ls_ir_matnr-matnr_low = ls_matnr-low.
              ls_ir_matnr-option = ls_matnr-option.
              ls_ir_matnr-sign = ls_matnr-sign.
              APPEND ls_ir_matnr TO ir_matnr.
            ENDLOOP.
            CLEAR lr_matnr.
          WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_maktx ).

            LOOP AT lr_maktx INTO ls_maktx.
              ls_ir_maktx-high = ls_maktx-high.
              ls_ir_maktx-low = ls_maktx-low.
              ls_ir_maktx-option = ls_maktx-option.
              ls_ir_maktx-sign = ls_maktx-sign.
              APPEND ls_ir_maktx TO ir_maktx.
            ENDLOOP.
            CLEAR lr_maktx.
          WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_werks ).

            LOOP AT lr_werks INTO ls_werks.
              ls_ir_werks-high = ls_werks-high.
              ls_ir_werks-low = ls_werks-low.
              ls_ir_werks-option = ls_werks-option.
              ls_ir_werks-sign = ls_werks-sign.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_werks.
          WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lifnr ).

            LOOP AT lr_lifnr INTO ls_lifnr.
              ls_ir_lifnr-high = ls_lifnr-high.
              ls_ir_lifnr-low = ls_lifnr-low.
              ls_ir_lifnr-option = ls_lifnr-option.
              ls_ir_lifnr-sign = ls_lifnr-sign.
              APPEND ls_ir_lifnr TO ir_lifnr.
            ENDLOOP.
            CLEAR lr_lifnr.
          WHEN 'LIFNR_NAME'.              " Equivalent to 'LifnrName' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lifnr_name ).

            LOOP AT lr_lifnr_name INTO ls_lifnr_name.
              ls_ir_lifnr_name-high = ls_lifnr_name-high.
              ls_ir_lifnr_name-low = ls_lifnr_name-low.
              ls_ir_lifnr_name-option = ls_lifnr_name-option.
              ls_ir_lifnr_name-sign = ls_lifnr_name-sign.
              APPEND ls_ir_lifnr_name TO ir_lifnr_name.
            ENDLOOP.
            CLEAR lr_lifnr_name.
          WHEN 'MEDIDACAJA'.              " Equivalent to 'Medidacaja' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_medidacaja ).

            LOOP AT lr_medidacaja INTO ls_medidacaja.
              ls_ir_medidacaja-high = ls_medidacaja-high.
              ls_ir_medidacaja-low = ls_medidacaja-low.
              ls_ir_medidacaja-option = ls_medidacaja-option.
              ls_ir_medidacaja-sign = ls_medidacaja-sign.
              APPEND ls_ir_medidacaja TO ir_medidacaja.
            ENDLOOP.
            CLEAR lr_medidacaja.
          WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_charg ).

            LOOP AT lr_charg INTO ls_charg.
              ls_ir_charg-high = ls_charg-high.
              ls_ir_charg-low = ls_charg-low.
              ls_ir_charg-option = ls_charg-option.
              ls_ir_charg-sign = ls_charg-sign.
              APPEND ls_ir_charg TO ir_charg.
            ENDLOOP.
            CLEAR lr_charg.
          WHEN 'CHARG_STAT'.              " Equivalent to 'ChargStat' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_charg_stat ).

            LOOP AT lr_charg_stat INTO ls_charg_stat.
              ls_ir_charg_stat-high = ls_charg_stat-high.
              ls_ir_charg_stat-low = ls_charg_stat-low.
              ls_ir_charg_stat-option = ls_charg_stat-option.
              ls_ir_charg_stat-sign = ls_charg_stat-sign.
              APPEND ls_ir_charg_stat TO ir_charg_stat.
            ENDLOOP.
            CLEAR lr_charg_stat.
          WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_kunnr ).

            LOOP AT lr_kunnr INTO ls_kunnr.
              ls_ir_kunnr-high = ls_kunnr-high.
              ls_ir_kunnr-low = ls_kunnr-low.
              ls_ir_kunnr-option = ls_kunnr-option.
              ls_ir_kunnr-sign = ls_kunnr-sign.
              APPEND ls_ir_kunnr TO ir_kunnr.
            ENDLOOP.
            CLEAR lr_kunnr.
          WHEN 'KUNNR_NAME'.              " Equivalent to 'KunnrName' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_kunnr_name ).

            LOOP AT lr_kunnr_name INTO ls_kunnr_name.
              ls_ir_kunnr_name-high = ls_kunnr_name-high.
              ls_ir_kunnr_name-low = ls_kunnr_name-low.
              ls_ir_kunnr_name-option = ls_kunnr_name-option.
              ls_ir_kunnr_name-sign = ls_kunnr_name-sign.
              APPEND ls_ir_kunnr_name TO ir_kunnr_name.
            ENDLOOP.
            CLEAR lr_kunnr_name.
          WHEN 'CANTIDAD'.              " Equivalent to 'Cantidad' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_cantidad ).

            LOOP AT lr_cantidad INTO ls_cantidad.
              ls_ir_cantidad-high = ls_cantidad-high.
              ls_ir_cantidad-low = ls_cantidad-low.
              ls_ir_cantidad-option = ls_cantidad-option.
              ls_ir_cantidad-sign = ls_cantidad-sign.
              APPEND ls_ir_cantidad TO ir_cantidad.
            ENDLOOP.
            CLEAR lr_cantidad.
          WHEN 'TDLNR'.              " Equivalent to 'Tdlnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_tdlnr ).

            LOOP AT lr_tdlnr INTO ls_tdlnr.
              ls_ir_tdlnr-high = ls_tdlnr-high.
              ls_ir_tdlnr-low = ls_tdlnr-low.
              ls_ir_tdlnr-option = ls_tdlnr-option.
              ls_ir_tdlnr-sign = ls_tdlnr-sign.
              APPEND ls_ir_tdlnr TO ir_tdlnr.
            ENDLOOP.
            CLEAR lr_tdlnr.
          WHEN 'AGENCIA'.              " Equivalent to 'Agencia' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_agencia ).

            LOOP AT lr_agencia INTO ls_agencia.
              ls_ir_agencia-high = ls_agencia-high.
              ls_ir_agencia-low = ls_agencia-low.
              ls_ir_agencia-option = ls_agencia-option.
              ls_ir_agencia-sign = ls_agencia-sign.
              APPEND ls_ir_agencia TO ir_agencia.
            ENDLOOP.
            CLEAR lr_agencia.
          WHEN 'ADD01'.              " Equivalent to 'Add01' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_add01 ).

            LOOP AT lr_add01 INTO ls_add01.
              ls_ir_add01-high = ls_add01-high.
              ls_ir_add01-low = ls_add01-low.
              ls_ir_add01-option = ls_add01-option.
              ls_ir_add01-sign = ls_add01-sign.
              APPEND ls_ir_add01 TO ir_add01.
            ENDLOOP.
            CLEAR lr_add01.
          WHEN 'TEXT1'.              " Equivalent to 'Text1' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_text1 ).

            LOOP AT lr_text1 INTO ls_text1.
              ls_ir_text1-high = ls_text1-high.
              ls_ir_text1-low = ls_text1-low.
              ls_ir_text1-option = ls_text1-option.
              ls_ir_text1-sign = ls_text1-sign.
              APPEND ls_ir_text1 TO ir_text1.
            ENDLOOP.
            CLEAR lr_text1.
          WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_lgort ).

            LOOP AT lr_lgort INTO ls_lgort.
              ls_ir_lgort-high = ls_lgort-high.
              ls_ir_lgort-low = ls_lgort-low.
              ls_ir_lgort-option = ls_lgort-option.
              ls_ir_lgort-sign = ls_lgort-sign.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_lgort.
          WHEN 'WADAT_IST'.              " Equivalent to 'WadatIst' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_wadat_ist ).

            LOOP AT lr_wadat_ist INTO ls_wadat_ist.
              ls_ir_wadat_ist-high = ls_wadat_ist-high.
              ls_ir_wadat_ist-low = ls_wadat_ist-low.
              ls_ir_wadat_ist-option = ls_wadat_ist-option.
              ls_ir_wadat_ist-sign = ls_wadat_ist-sign.
              APPEND ls_ir_wadat_ist TO ir_wadat_ist.
            ENDLOOP.
            CLEAR lr_wadat_ist.
          WHEN 'WBSTA'.              " Equivalent to 'Wbsta' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_wbsta ).

            LOOP AT lr_wbsta INTO ls_wbsta.
              ls_ir_wbsta-sign = ls_wbsta-sign.
              ls_ir_wbsta-option = ls_wbsta-option.
              ls_ir_wbsta-low = ls_wbsta-low.
              ls_ir_wbsta-high = ls_wbsta-high.
              APPEND ls_ir_wbsta TO ir_wbsta.
            ENDLOOP.
            CLEAR lr_wbsta.
          WHEN 'EINDT'.              " Equivalent to 'Eindt' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_eindt ).

            LOOP AT lr_eindt INTO ls_eindt.
              ls_ir_eindt-high = ls_eindt-high.
              ls_ir_eindt-low = ls_eindt-low.
              ls_ir_eindt-option = ls_eindt-option.
              ls_ir_eindt-sign = ls_eindt-sign.
              APPEND ls_ir_eindt TO ir_eindt.
            ENDLOOP.
            CLEAR lr_eindt.
          WHEN 'BELNR'.              " Equivalent to 'belnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_belnr ).

            LOOP AT lr_belnr INTO ls_belnr.
              ls_ir_belnr-high = ls_belnr-high.
              ls_ir_belnr-low = ls_belnr-low.
              ls_ir_belnr-option = ls_belnr-option.
              ls_ir_belnr-sign = ls_belnr-sign.
              APPEND ls_ir_belnr TO ir_belnr.
            ENDLOOP.
            CLEAR lr_belnr.
          WHEN 'BUZEI'.              " Equivalent to 'belnr' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_BUZEI ).

            LOOP AT lr_BUZEI INTO ls_BUZEI.
              ls_ir_BUZEI-high = ls_BUZEI-high.
              ls_ir_BUZEI-low = ls_BUZEI-low.
              ls_ir_BUZEI-option = ls_BUZEI-option.
              ls_ir_BUZEI-sign = ls_BUZEI-sign.
              APPEND ls_ir_BUZEI TO ir_buzei.
            ENDLOOP.
            CLEAR lr_BUZEI.
          WHEN 'CENTRO_MONTAJE'.              " Equivalent to 'CentroMontaje' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_centro_montaje ).

            LOOP AT lr_centro_montaje INTO ls_centro_montaje.
              ls_ir_werks-high = ls_centro_montaje-high.
              ls_ir_werks-low = ls_centro_montaje-low.
              ls_ir_werks-option = ls_centro_montaje-option.
              ls_ir_werks-sign = ls_centro_montaje-sign.
              APPEND ls_ir_werks TO ir_werks.
            ENDLOOP.
            CLEAR lr_centro_montaje.
          WHEN 'ALMACEN_MONTAJE'.              " Equivalent to 'AlmacenMontaje' property in the service
            lo_filter->convert_select_option(
              EXPORTING
                is_select_option = ls_filter
              IMPORTING
                et_select_option = lr_almacen_montaje ).

            LOOP AT lr_almacen_montaje INTO ls_almacen_montaje.
              ls_ir_lgort-high = ls_almacen_montaje-high.
              ls_ir_lgort-low = ls_almacen_montaje-low.
              ls_ir_lgort-option = ls_almacen_montaje-option.
              ls_ir_lgort-sign = ls_almacen_montaje-sign.
              APPEND ls_ir_lgort TO ir_lgort.
            ENDLOOP.
            CLEAR lr_almacen_montaje.

          WHEN OTHERS.
*      SARCE INI 3#
            " Log message in the application log
            IF NOT iv_search_string IS INITIAL.
              DATA(vv_jump_search) = 'X'.
              CONTINUE.
            ENDIF.
*      SARCE FIN 3#
            me->/iwbep/if_sb_dpc_comm_services~log_message(
              EXPORTING
                iv_msg_type   = 'E'
                iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
                iv_msg_number = 020
                iv_msg_v1     = ls_filter-property ).
            " Raise Exception
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
              EXPORTING
                textid = /iwbep/cx_mgw_tech_exception=>internal_error.
        ENDCASE.

      ENDLOOP.
*      SARCE INI 4#
      IF vv_jump_search = 'X'.
        vv_jump_search = ''.
        CONTINUE.
      ENDIF.
      "MTS: Ajustes
*      SARCE FIN 4#

* Get RFC destination
      lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
      lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
      lv_rfc_name = 'ZUI5_CM_GET_ENTRADAS'.

      IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

        TRY.
            CALL FUNCTION lv_rfc_name
              EXPORTING
                ir_vbeln       = ir_vbeln
                ir_posnr       = ir_posnr
                ir_ebeln       = ir_ebeln
                ir_ebelp       = ir_ebelp
                ir_matnr       = ir_matnr
                ir_maktx       = ir_maktx
                ir_werks       = ir_werks
                ir_lifnr       = ir_lifnr
                ir_lifnr_name  = ir_lifnr_name
                ir_medidacaja  = ir_medidacaja
                ir_charg       = ir_charg
                ir_charg_stat  = ir_charg_stat
                ir_kunnr       = ir_kunnr
                ir_kunnr_name  = ir_kunnr_name
                ir_cantidad    = ir_cantidad
                ir_tdlnr       = ir_tdlnr
                ir_agencia     = ir_agencia
                ir_add01       = ir_add01
                ir_text1       = ir_text1
                ir_lgort       = ir_lgort
                ir_wadat_ist   = ir_wadat_ist
                ir_wbsta       = ir_wbsta
                ir_eindt       = ir_eindt
                ir_BELNR       = ir_belnr
                ir_BUZEI       = ir_buzei
              IMPORTING
                o_return       = o_return
                o_data         = o_data_temp
              EXCEPTIONS
                system_failure = 1000 message lv_exc_msg
                OTHERS         = 1002.

            lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
          CATCH cx_root INTO lx_root.
            lv_subrc = 1001.
            lv_exc_msg = lx_root->if_message~get_text( ).
        ENDTRY.

      ELSE.

        CALL FUNCTION lv_rfc_name DESTINATION lv_destination
          EXPORTING
            ir_vbeln              = ir_vbeln
            ir_posnr              = ir_posnr
            ir_ebeln              = ir_ebeln
            ir_ebelp              = ir_ebelp
            ir_matnr              = ir_matnr
            ir_maktx              = ir_maktx
            ir_werks              = ir_werks
            ir_lifnr              = ir_lifnr
            ir_lifnr_name         = ir_lifnr_name
            ir_medidacaja         = ir_medidacaja
            ir_charg              = ir_charg
            ir_charg_stat         = ir_charg_stat
            ir_kunnr              = ir_kunnr
            ir_kunnr_name         = ir_kunnr_name
            ir_cantidad           = ir_cantidad
            ir_tdlnr              = ir_tdlnr
            ir_agencia            = ir_agencia
            ir_add01              = ir_add01
            ir_text1              = ir_text1
            ir_lgort              = ir_lgort
            ir_wadat_ist          = ir_wadat_ist
            ir_wbsta              = ir_wbsta
            ir_eindt              = ir_eindt
                ir_BELNR       = ir_belnr
                ir_BUZEI       = ir_buzei
          IMPORTING
            o_return              = o_return
            o_data                = o_data_temp
          EXCEPTIONS
            system_failure        = 1000 MESSAGE lv_exc_msg
            communication_failure = 1001 MESSAGE lv_exc_msg
            OTHERS                = 1002.

        lv_subrc = sy-subrc.

      ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
      IF lv_subrc <> 0.
* Execute the RFC exception handling process
        me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
          EXPORTING
            iv_subrc            = lv_subrc
            iv_exp_message_text = lv_exc_msg ).
      ENDIF.

      IF o_return IS NOT INITIAL.
        me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
          EXPORTING
            iv_entity_type = iv_entity_name
            it_return      = o_return
            it_key_tab     = it_key_tab ).
      ENDIF.
*      SARCE INI 5#
      MOVE-CORRESPONDING o_data_temp TO o_data KEEPING TARGET LINES.
*      SARCE FIN 5#
    ENDDO. "MTS Ajustes

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
    IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
      lv_skip = ls_paging-skip + 1.
    ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
    IF  ls_paging-top <> 0
    AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
      lv_top = ls_paging-top + lv_skip - 1.
    ELSEIF ls_paging-top <> 0
    AND    lv_skip IS INITIAL.
      lv_top = ls_paging-top.
    ELSE.
      lv_top = lines( o_data ).
    ENDIF.

*      SARCE INI 6#
    "Ordenamos
    IF it_order IS NOT INITIAL.
      SORT o_data BY zcl_search_dpc=>sort_string( EXPORTING iv_instancia = me ).
      DELETE ADJACENT DUPLICATES FROM o_data.
    ELSE.
      SORT o_data.
      DELETE ADJACENT DUPLICATES FROM o_data.
    ENDIF.
*      SARCE FIN 6#

*  - Map properties from the backend to the Gateway output response table -

    LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
         FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
      ls_gw_o_data-charg_stat_text = ls_o_data-charg_stat_text.
      ls_gw_o_data-meins = ls_o_data-meins.
      ls_gw_o_data-vbeln = ls_o_data-vbeln.
      ls_gw_o_data-posnr = ls_o_data-posnr.
      ls_gw_o_data-ebeln = ls_o_data-ebeln.
      ls_gw_o_data-ebelp = ls_o_data-ebelp.
      ls_gw_o_data-matnr = ls_o_data-matnr.
      ls_gw_o_data-maktx = ls_o_data-maktx.
      ls_gw_o_data-werks = ls_o_data-werks.
      ls_gw_o_data-lifnr = ls_o_data-lifnr.
      ls_gw_o_data-lifnr_name = ls_o_data-lifnr_name.
      ls_gw_o_data-medidacaja = ls_o_data-medidacaja.
      ls_gw_o_data-charg = ls_o_data-charg.
      ls_gw_o_data-charg_stat = ls_o_data-charg_stat.
      ls_gw_o_data-kunnr = ls_o_data-kunnr.
      ls_gw_o_data-kunnr_name = ls_o_data-kunnr_name.
      ls_gw_o_data-cantidad = ls_o_data-cantidad.
      ls_gw_o_data-tdlnr = ls_o_data-tdlnr.
      ls_gw_o_data-agencia = ls_o_data-agencia.
      ls_gw_o_data-add01 = ls_o_data-add01.
      ls_gw_o_data-text1 = ls_o_data-text1.
      ls_gw_o_data-lgort = ls_o_data-lgort.
      ls_gw_o_data-wadat_ist = ls_o_data-wadat_ist.
      ls_gw_o_data-wbsta = ls_o_data-wbsta.
      ls_gw_o_data-eindt = ls_o_data-eindt.
      ls_gw_o_data-wbsta_text = ls_o_data-wbsta_text.
      ls_gw_o_data-deletable = ls_o_data-deletable.
      ls_gw_o_data-reslo = ls_o_data-reslo.
      ls_gw_o_data-reswk = ls_o_data-reswk.
      ls_gw_o_data-belnr = ls_o_data-belnr.
      ls_gw_o_data-buzei = ls_o_data-buzei.
      ls_gw_o_data-contabilizado = ls_o_data-contabilizado.
      APPEND ls_gw_o_data TO et_entityset.
      CLEAR ls_gw_o_data.
    ENDLOOP.

  ENDMETHOD.
