
class ZCL_ZSUI5_CM_ENTRADAS_DPC definition
  public
  inheriting from /IWBEP/CL_MGW_PUSH_ABS_DATA
  abstract
  create public .

public section.

  interfaces /IWBEP/IF_SB_DPC_COMM_SERVICES .
  interfaces /IWBEP/IF_SB_GENDPC_SHLP_DATA .
  interfaces /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY
    redefinition .
protected section.

  data mo_injection type ref to /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods MENSAJESSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_MENSAJES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_MENSAJES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_MENSAJES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_MENSAJES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARPOSI_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTREGACREARPOSITION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARPOSI_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_ENTREGACREARPOSITION
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARPOSI_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTREGACREARPOSITION
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARPOSI_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARPOSI_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTREGACREARPOSITION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARHEAD_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTREGACREARHEAD
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARHEAD_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_ENTREGACREARHEAD
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARHEAD_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTREGACREARHEAD
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARHEAD_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGACREARHEAD_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTREGACREARHEAD
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTRADASSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTRADAS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTRADASSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_ENTRADAS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTRADASSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTRADAS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTRADASSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTRADASSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_ENTRADAS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDATIPOPALLET
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_AYUDATIPOPALLET
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDATIPOPALLET
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDATIPOPALLETS_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDATIPOPALLET
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDASTATUSSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDASTATUS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDASTATUSSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_AYUDASTATUS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDASTATUSSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDASTATUS
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDASTATUSSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDASTATUSSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDASTATUS
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPROVEEDORSE_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDAPROVEEDOR
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPROVEEDORSE_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_AYUDAPROVEEDOR
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPROVEEDORSE_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDAPROVEEDOR
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPROVEEDORSE_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods AYUDAPROVEEDORSE_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDAPROVEEDOR
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ADDPOSICIONSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDAMATERIALES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ADDPOSICIONSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TT_AYUDAMATERIALES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ADDPOSICIONSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDAMATERIALES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ADDPOSICIONSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ADDPOSICIONSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_ENTRADAS_MPC=>TS_AYUDAMATERIALES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .

  methods CHECK_SUBSCRIPTION_AUTHORITY
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_ENTRADAS_DPC definition
class ZCL_ZSUI5_CM_ENTRADAS_DPC implementation.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_CRT_ENTITY_BASE
*&* This class has been generated on 27.06.2024 11:21:58 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA ayudatipopallets_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudatipopallet.
 DATA entregacrearhead_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entregacrearhead.
 DATA addposicionset_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudamateriales.
 DATA ayudastatusset_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudastatus.
 DATA entregacrearposi_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entregacrearposition.
 DATA ayudaproveedorse_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudaproveedor.
 DATA entradasset_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entradas.
 DATA mensajesset_create_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_mensajes.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
    ayudatipopallets_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudatipopallets_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudatipopallets_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearHeadSet
*-------------------------------------------------------------------------*
     WHEN 'EntregaCrearHeadSet'.
*     Call the entity set generated method
    entregacrearhead_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = entregacrearhead_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = entregacrearhead_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMaterialesSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaMaterialesSet'.
*     Call the entity set generated method
    addposicionset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = addposicionset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = addposicionset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaStatusSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaStatusSet'.
*     Call the entity set generated method
    ayudastatusset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudastatusset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudastatusset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearPositionSet
*-------------------------------------------------------------------------*
     WHEN 'EntregaCrearPositionSet'.
*     Call the entity set generated method
    entregacrearposi_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = entregacrearposi_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = entregacrearposi_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaProveedorSet
*-------------------------------------------------------------------------*
     WHEN 'AyudaProveedorSet'.
*     Call the entity set generated method
    ayudaproveedorse_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = ayudaproveedorse_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = ayudaproveedorse_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntradasSet
*-------------------------------------------------------------------------*
     WHEN 'EntradasSet'.
*     Call the entity set generated method
    entradasset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = entradasset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = entradasset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
     WHEN 'MensajesSet'.
*     Call the entity set generated method
    mensajesset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = mensajesset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = mensajesset_create_entity
      CHANGING
        cr_data = er_entity
   ).

  when others.
    super->/iwbep/if_mgw_appl_srv_runtime~create_entity(
       EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         io_data_provider   = io_data_provider
         it_key_tab = it_key_tab
         it_navigation_path = it_navigation_path
      IMPORTING
        er_entity = er_entity
  ).
ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_DEL_ENTITY_BASE
*&* This class has been generated on 27.06.2024 11:21:58 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
      when 'AyudaTipoPalletSet'.
*     Call the entity set generated method
     ayudatipopallets_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMaterialesSet
*-------------------------------------------------------------------------*
      when 'AyudaMaterialesSet'.
*     Call the entity set generated method
     addposicionset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaStatusSet
*-------------------------------------------------------------------------*
      when 'AyudaStatusSet'.
*     Call the entity set generated method
     ayudastatusset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaProveedorSet
*-------------------------------------------------------------------------*
      when 'AyudaProveedorSet'.
*     Call the entity set generated method
     ayudaproveedorse_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntradasSet
*-------------------------------------------------------------------------*
      when 'EntradasSet'.
*     Call the entity set generated method
     entradasset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
      when 'MensajesSet'.
*     Call the entity set generated method
     mensajesset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearHeadSet
*-------------------------------------------------------------------------*
      when 'EntregaCrearHeadSet'.
*     Call the entity set generated method
     entregacrearhead_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearPositionSet
*-------------------------------------------------------------------------*
      when 'EntregaCrearPositionSet'.
*     Call the entity set generated method
     entregacrearposi_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

   when others.
     super->/iwbep/if_mgw_appl_srv_runtime~delete_entity(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_key_tab = it_key_tab
          it_navigation_path = it_navigation_path
 ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY.
*&-----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_GETENTITY_BASE
*&* This class has been generated  on 27.06.2024 11:21:58 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA entregacrearhead_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entregacrearhead.
 DATA ayudatipopallets_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudatipopallet.
 DATA addposicionset_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudamateriales.
 DATA entregacrearposi_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entregacrearposition.
 DATA ayudastatusset_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudastatus.
 DATA ayudaproveedorse_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudaproveedor.
 DATA mensajesset_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_mensajes.
 DATA entradasset_get_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entradas.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data.       "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearHeadSet
*-------------------------------------------------------------------------*
      WHEN 'EntregaCrearHeadSet'.
*     Call the entity set generated method
          entregacrearhead_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregacrearhead_get_entity
                         es_response_context = es_response_context
          ).

        IF entregacrearhead_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregacrearhead_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
          ayudatipopallets_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipopallets_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudatipopallets_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipopallets_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMaterialesSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaMaterialesSet'.
*     Call the entity set generated method
          addposicionset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = addposicionset_get_entity
                         es_response_context = es_response_context
          ).

        IF addposicionset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = addposicionset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearPositionSet
*-------------------------------------------------------------------------*
      WHEN 'EntregaCrearPositionSet'.
*     Call the entity set generated method
          entregacrearposi_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregacrearposi_get_entity
                         es_response_context = es_response_context
          ).

        IF entregacrearposi_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregacrearposi_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaStatusSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaStatusSet'.
*     Call the entity set generated method
          ayudastatusset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudastatusset_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudastatusset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudastatusset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaProveedorSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaProveedorSet'.
*     Call the entity set generated method
          ayudaproveedorse_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaproveedorse_get_entity
                         es_response_context = es_response_context
          ).

        IF ayudaproveedorse_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaproveedorse_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
      WHEN 'MensajesSet'.
*     Call the entity set generated method
          mensajesset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = mensajesset_get_entity
                         es_response_context = es_response_context
          ).

        IF mensajesset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = mensajesset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntradasSet
*-------------------------------------------------------------------------*
      WHEN 'EntradasSet'.
*     Call the entity set generated method
          entradasset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entradasset_get_entity
                         es_response_context = es_response_context
          ).

        IF entradasset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entradasset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.

      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~get_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TMP_ENTITYSET_BASE
*&* This class has been generated on 27.06.2024 11:21:58 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*
 DATA entregacrearhead_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_entregacrearhead.
 DATA entradasset_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_entradas.
 DATA ayudatipopallets_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_ayudatipopallet.
 DATA mensajesset_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_mensajes.
 DATA ayudaproveedorse_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_ayudaproveedor.
 DATA addposicionset_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_ayudamateriales.
 DATA ayudastatusset_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_ayudastatus.
 DATA entregacrearposi_get_entityset TYPE zcl_zsui5_cm_entradas_mpc=>tt_entregacrearposition.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearHeadSet
*-------------------------------------------------------------------------*
   WHEN 'EntregaCrearHeadSet'.
*     Call the entity set generated method
      entregacrearhead_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = entregacrearhead_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = entregacrearhead_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntradasSet
*-------------------------------------------------------------------------*
   WHEN 'EntradasSet'.
*     Call the entity set generated method
      entradasset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = entradasset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = entradasset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
      ayudatipopallets_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudatipopallets_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudatipopallets_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
   WHEN 'MensajesSet'.
*     Call the entity set generated method
      mensajesset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = mensajesset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = mensajesset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaProveedorSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaProveedorSet'.
*     Call the entity set generated method
      ayudaproveedorse_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudaproveedorse_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudaproveedorse_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMaterialesSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaMaterialesSet'.
*     Call the entity set generated method
      addposicionset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = addposicionset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = addposicionset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  AyudaStatusSet
*-------------------------------------------------------------------------*
   WHEN 'AyudaStatusSet'.
*     Call the entity set generated method
      ayudastatusset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = ayudastatusset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = ayudastatusset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearPositionSet
*-------------------------------------------------------------------------*
   WHEN 'EntregaCrearPositionSet'.
*     Call the entity set generated method
      entregacrearposi_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = entregacrearposi_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = entregacrearposi_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

    WHEN OTHERS.
      super->/iwbep/if_mgw_appl_srv_runtime~get_entityset(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_filter_select_options = it_filter_select_options
          it_order = it_order
          is_paging = is_paging
          it_navigation_path = it_navigation_path
          it_key_tab = it_key_tab
          iv_filter_string = iv_filter_string
          iv_search_string = iv_search_string
          io_tech_request_context = io_tech_request_context
       IMPORTING
         er_entityset = er_entityset ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_UPD_ENTITY_BASE
*&* This class has been generated on 27.06.2024 11:21:58 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_ENTRADAS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA ayudastatusset_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudastatus.
 DATA entregacrearposi_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entregacrearposition.
 DATA ayudaproveedorse_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudaproveedor.
 DATA addposicionset_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudamateriales.
 DATA entregacrearhead_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entregacrearhead.
 DATA entradasset_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_entradas.
 DATA ayudatipopallets_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_ayudatipopallet.
 DATA mensajesset_update_entity TYPE zcl_zsui5_cm_entradas_mpc=>ts_mensajes.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data. "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaStatusSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaStatusSet'.
*     Call the entity set generated method
          ayudastatusset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudastatusset_update_entity
          ).
       IF ayudastatusset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudastatusset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearPositionSet
*-------------------------------------------------------------------------*
      WHEN 'EntregaCrearPositionSet'.
*     Call the entity set generated method
          entregacrearposi_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregacrearposi_update_entity
          ).
       IF entregacrearposi_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregacrearposi_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaProveedorSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaProveedorSet'.
*     Call the entity set generated method
          ayudaproveedorse_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudaproveedorse_update_entity
          ).
       IF ayudaproveedorse_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudaproveedorse_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaMaterialesSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaMaterialesSet'.
*     Call the entity set generated method
          addposicionset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = addposicionset_update_entity
          ).
       IF addposicionset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = addposicionset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregaCrearHeadSet
*-------------------------------------------------------------------------*
      WHEN 'EntregaCrearHeadSet'.
*     Call the entity set generated method
          entregacrearhead_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregacrearhead_update_entity
          ).
       IF entregacrearhead_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregacrearhead_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  EntradasSet
*-------------------------------------------------------------------------*
      WHEN 'EntradasSet'.
*     Call the entity set generated method
          entradasset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entradasset_update_entity
          ).
       IF entradasset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entradasset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  AyudaTipoPalletSet
*-------------------------------------------------------------------------*
      WHEN 'AyudaTipoPalletSet'.
*     Call the entity set generated method
          ayudatipopallets_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = ayudatipopallets_update_entity
          ).
       IF ayudatipopallets_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = ayudatipopallets_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesSet
*-------------------------------------------------------------------------*
      WHEN 'MensajesSet'.
*     Call the entity set generated method
          mensajesset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = mensajesset_update_entity
          ).
       IF mensajesset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = mensajesset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~update_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             io_data_provider   = io_data_provider
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~COMMIT_WORK.
* Call RFC commit work functionality
DATA lt_message      TYPE bapiret2. "#EC NEEDED
DATA lv_message_text TYPE BAPI_MSG.
DATA lo_logger       TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_subrc        TYPE syst-subrc.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

  IF iv_rfc_dest IS INITIAL OR iv_rfc_dest EQ 'NONE'.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
      wait   = abap_true
    IMPORTING
      return = lt_message.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      DESTINATION iv_rfc_dest
    EXPORTING
      wait                  = abap_true
    IMPORTING
      return                = lt_message
    EXCEPTIONS
      communication_failure = 1000 MESSAGE lv_message_text
      system_failure        = 1001 MESSAGE lv_message_text
      OTHERS                = 1002.

  IF sy-subrc <> 0.
    lv_subrc = sy-subrc.
    /iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
        EXPORTING
          iv_subrc            = lv_subrc
          iv_exp_message_text = lv_message_text
          io_logger           = lo_logger ).
  ENDIF.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~GET_GENERATION_STRATEGY.
* Get generation strategy
  rv_generation_strategy = '1'.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~LOG_MESSAGE.
* Log message in the application log
DATA lo_logger TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_text TYPE /iwbep/sup_msg_longtext.

  MESSAGE ID iv_msg_id TYPE iv_msg_type NUMBER iv_msg_number
    WITH iv_msg_v1 iv_msg_v2 iv_msg_v3 iv_msg_v4 INTO lv_text.

  lo_logger = mo_context->get_logger( ).
  lo_logger->log_message(
    EXPORTING
     iv_msg_type   = iv_msg_type
     iv_msg_id     = iv_msg_id
     iv_msg_number = iv_msg_number
     iv_msg_text   = lv_text
     iv_msg_v1     = iv_msg_v1
     iv_msg_v2     = iv_msg_v2
     iv_msg_v3     = iv_msg_v3
     iv_msg_v4     = iv_msg_v4
     iv_agent      = 'DPC' ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_EXCEPTION_HANDLING.
* RFC call exception handling
DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

/iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
  EXPORTING
    iv_subrc            = iv_subrc
    iv_exp_message_text = iv_exp_message_text
    io_logger           = lo_logger ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_SAVE_LOG.
  DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.
  DATA lo_message_container TYPE REF TO /iwbep/if_message_container.

  lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
  lo_message_container = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).

  " Save the RFC call log in the application log
  /iwbep/cl_sb_gen_dpc_rt_util=>rfc_save_log(
    EXPORTING
      is_return            = is_return
      iv_entity_type       = iv_entity_type
      it_return            = it_return
      it_key_tab           = it_key_tab
      io_logger            = lo_logger
      io_message_container = lo_message_container ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~SET_INJECTION.
* Unit test injection
  IF io_unit IS BOUND.
    mo_injection = io_unit.
  ELSE.
    mo_injection = me.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_GENDPC_SHLP_DATA~GET_SEARCH_HELP_VALUES.
* Call to Search Help run time mechanism to get values
  DATA lo_sh_data TYPE REF TO /iwbep/if_sb_shlp_data.

  CLEAR: et_return_list, es_message.
  lo_sh_data = /iwbep/cl_sb_shlp_data_factory=>get_sh_data_obj( ).

  lo_sh_data->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
    EXPORTING
      iv_shlp_name  = iv_shlp_name
      iv_maxrows  = iv_maxrows
      iv_sort = iv_sort
      iv_call_shlt_exit = iv_call_shlt_exit
      it_selopt = it_selopt
    IMPORTING
      et_return_list = et_return_list
      es_message = es_message ).
  endmethod.
  method ADDPOSICIONSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ADDPOSICIONSET_CREATE_ENTITY'.
  endmethod.
  method ADDPOSICIONSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ADDPOSICIONSET_DELETE_ENTITY'.
  endmethod.
  method ADDPOSICIONSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ADDPOSICIONSET_GET_ENTITY'.
  endmethod.
  method ADDPOSICIONSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_bedat  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_dimensioncaja  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_ebeln  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_lgort  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_lifnr  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_lifnr_name  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_maktx  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA ir_werks  TYPE zif_zui5_cm_ayuda_material=>rseloption.
 DATA o_data  TYPE zif_zui5_cm_ayuda_material=>zsuitt_add_posicion.
 DATA o_return  TYPE zif_zui5_cm_ayuda_material=>bapiret2_t.
 DATA ls_ir_bedat  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_dimensioncaja  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_ebeln  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_lifnr  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_lifnr_name  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_ayuda_material=>rseloption.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_ayuda_material=>zsuitt_add_posicion.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_ayuda_material=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
 DATA ls_lifnr LIKE LINE OF lr_lifnr.
 DATA lr_bedat LIKE RANGE OF ls_converted_keys-bedat.
 DATA ls_bedat LIKE LINE OF lr_bedat.
 DATA lr_name1 LIKE RANGE OF ls_converted_keys-name1.
 DATA ls_name1 LIKE LINE OF lr_name1.
 DATA lr_werks_d LIKE RANGE OF ls_converted_keys-werks_d.
 DATA ls_werks_d LIKE LINE OF lr_werks_d.
 DATA lr_char70 LIKE RANGE OF ls_converted_keys-char70.
 DATA ls_char70 LIKE LINE OF lr_char70.
 DATA lr_lgort_d LIKE RANGE OF ls_converted_keys-lgort_d.
 DATA ls_lgort_d LIKE LINE OF lr_lgort_d.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_ebeln LIKE RANGE OF ls_converted_keys-ebeln.
 DATA ls_ebeln LIKE LINE OF lr_ebeln.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lifnr ).

       LOOP AT lr_lifnr INTO ls_lifnr.
         ls_ir_lifnr-high = ls_lifnr-high.
         ls_ir_lifnr-low = ls_lifnr-low.
         ls_ir_lifnr-option = ls_lifnr-option.
         ls_ir_lifnr-sign = ls_lifnr-sign.
         APPEND ls_ir_lifnr TO ir_lifnr.
       ENDLOOP.
       CLEAR lr_lifnr.
     WHEN 'BEDAT'.              " Equivalent to 'Bedat' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_bedat ).

       LOOP AT lr_bedat INTO ls_bedat.
         ls_ir_bedat-high = ls_bedat-high.
         ls_ir_bedat-low = ls_bedat-low.
         ls_ir_bedat-option = ls_bedat-option.
         ls_ir_bedat-sign = ls_bedat-sign.
         APPEND ls_ir_bedat TO ir_bedat.
       ENDLOOP.
       CLEAR lr_bedat.
     WHEN 'NAME1'.              " Equivalent to 'LifnrName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_name1 ).

       LOOP AT lr_name1 INTO ls_name1.
         ls_ir_lifnr_name-high = ls_name1-high.
         ls_ir_lifnr_name-low = ls_name1-low.
         ls_ir_lifnr_name-option = ls_name1-option.
         ls_ir_lifnr_name-sign = ls_name1-sign.
         APPEND ls_ir_lifnr_name TO ir_lifnr_name.
       ENDLOOP.
       CLEAR lr_name1.
     WHEN 'WERKS_D'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks_d ).

       LOOP AT lr_werks_d INTO ls_werks_d.
         ls_ir_werks-high = ls_werks_d-high.
         ls_ir_werks-low = ls_werks_d-low.
         ls_ir_werks-option = ls_werks_d-option.
         ls_ir_werks-sign = ls_werks_d-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks_d.
     WHEN 'CHAR70'.              " Equivalent to 'DimensionCaja' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_char70 ).

       LOOP AT lr_char70 INTO ls_char70.
         ls_ir_dimensioncaja-high = ls_char70-high.
         ls_ir_dimensioncaja-low = ls_char70-low.
         ls_ir_dimensioncaja-option = ls_char70-option.
         ls_ir_dimensioncaja-sign = ls_char70-sign.
         APPEND ls_ir_dimensioncaja TO ir_dimensioncaja.
       ENDLOOP.
       CLEAR lr_char70.
     WHEN 'LGORT_D'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort_d ).

       LOOP AT lr_lgort_d INTO ls_lgort_d.
         ls_ir_lgort-high = ls_lgort_d-high.
         ls_ir_lgort-low = ls_lgort_d-low.
         ls_ir_lgort-option = ls_lgort_d-option.
         ls_ir_lgort-sign = ls_lgort_d-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort_d.
     WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_maktx ).

       LOOP AT lr_maktx INTO ls_maktx.
         ls_ir_maktx-high = ls_maktx-high.
         ls_ir_maktx-low = ls_maktx-low.
         ls_ir_maktx-option = ls_maktx-option.
         ls_ir_maktx-sign = ls_maktx-sign.
         APPEND ls_ir_maktx TO ir_maktx.
       ENDLOOP.
       CLEAR lr_maktx.
     WHEN 'EBELN'.              " Equivalent to 'Ebeln' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_ebeln ).

       LOOP AT lr_ebeln INTO ls_ebeln.
         ls_ir_ebeln-high = ls_ebeln-high.
         ls_ir_ebeln-low = ls_ebeln-low.
         ls_ir_ebeln-option = ls_ebeln-option.
         ls_ir_ebeln-sign = ls_ebeln-sign.
         APPEND ls_ir_ebeln TO ir_ebeln.
       ENDLOOP.
       CLEAR lr_ebeln.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_AYUDA_MATERIAL'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_lifnr         = ir_lifnr
           ir_bedat         = ir_bedat
           ir_lifnr_name    = ir_lifnr_name
           ir_werks         = ir_werks
           ir_dimensioncaja = ir_dimensioncaja
           ir_lgort         = ir_lgort
           ir_maktx         = ir_maktx
           ir_ebeln         = ir_ebeln
         IMPORTING
           o_return         = o_return
           o_data           = o_data
         EXCEPTIONS
           system_failure   = 1000 message lv_exc_msg
           OTHERS           = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_lifnr              = ir_lifnr
       ir_bedat              = ir_bedat
       ir_lifnr_name         = ir_lifnr_name
       ir_werks              = ir_werks
       ir_dimensioncaja      = ir_dimensioncaja
       ir_lgort              = ir_lgort
       ir_maktx              = ir_maktx
       ir_ebeln              = ir_ebeln
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-matnr2 = ls_o_data-zzmatpal.
   ls_gw_o_data-menge2 = ls_o_data-zzcantpal.
   ls_gw_o_data-menge3 = ls_o_data-zzcanxpal.
   ls_gw_o_data-ebeln = ls_o_data-ebeln.
   ls_gw_o_data-ebelp = ls_o_data-ebelp.
   ls_gw_o_data-matnr = ls_o_data-matnr.
   ls_gw_o_data-maktx = ls_o_data-maktx.
   ls_gw_o_data-menge = ls_o_data-menge.
   ls_gw_o_data-meins = ls_o_data-meins.
   ls_gw_o_data-dimesioncaja = ls_o_data-dimesioncaja.
   ls_gw_o_data-werks_d = ls_o_data-werks.
   ls_gw_o_data-lgort_d = ls_o_data-lgort.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method ADDPOSICIONSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ADDPOSICIONSET_UPDATE_ENTITY'.
  endmethod.
  method AYUDAPROVEEDORSE_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPROVEEDORSE_CREATE_ENTITY'.
  endmethod.
  method AYUDAPROVEEDORSE_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPROVEEDORSE_DELETE_ENTITY'.
  endmethod.
  method AYUDAPROVEEDORSE_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPROVEEDORSE_GET_ENTITY'.
  endmethod.
  method AYUDAPROVEEDORSE_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_loevm LIKE RANGE OF ls_converted_keys-loevm.
DATA ls_loevm LIKE LINE OF lr_loevm.
DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
DATA ls_lifnr LIKE LINE OF lr_lifnr.
DATA lr_mcod1 LIKE RANGE OF ls_converted_keys-mcod1.
DATA ls_mcod1 LIKE LINE OF lr_mcod1.
DATA lr_mcod3 LIKE RANGE OF ls_converted_keys-mcod3.
DATA ls_mcod3 LIKE LINE OF lr_mcod3.
DATA lr_pstlz LIKE RANGE OF ls_converted_keys-pstlz.
DATA ls_pstlz LIKE LINE OF lr_pstlz.
DATA lr_land1 LIKE RANGE OF ls_converted_keys-land1.
DATA ls_land1 LIKE LINE OF lr_land1.
DATA lr_sortl LIKE RANGE OF ls_converted_keys-sortl.
DATA ls_sortl LIKE LINE OF lr_sortl.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'LOEVM'.              " Equivalent to 'Loevm' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_loevm ).

      LOOP AT lr_loevm INTO ls_loevm.
        ls_selopt-high = ls_loevm-high.
        ls_selopt-low = ls_loevm-low.
        ls_selopt-option = ls_loevm-option.
        ls_selopt-sign = ls_loevm-sign.
        ls_selopt-shlpfield = 'LOEVM'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_lifnr ).

      LOOP AT lr_lifnr INTO ls_lifnr.
        ls_selopt-high = ls_lifnr-high.
        ls_selopt-low = ls_lifnr-low.
        ls_selopt-option = ls_lifnr-option.
        ls_selopt-sign = ls_lifnr-sign.
        ls_selopt-shlpfield = 'LIFNR'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MCOD1'.              " Equivalent to 'Mcod1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mcod1 ).

      LOOP AT lr_mcod1 INTO ls_mcod1.
        ls_selopt-high = ls_mcod1-high.
        ls_selopt-low = ls_mcod1-low.
        ls_selopt-option = ls_mcod1-option.
        ls_selopt-sign = ls_mcod1-sign.
        ls_selopt-shlpfield = 'MCOD1'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'MCOD3'.              " Equivalent to 'Mcod3' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_mcod3 ).

      LOOP AT lr_mcod3 INTO ls_mcod3.
        ls_selopt-high = ls_mcod3-high.
        ls_selopt-low = ls_mcod3-low.
        ls_selopt-option = ls_mcod3-option.
        ls_selopt-sign = ls_mcod3-sign.
        ls_selopt-shlpfield = 'MCOD3'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'PSTLZ'.              " Equivalent to 'Pstlz' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_pstlz ).

      LOOP AT lr_pstlz INTO ls_pstlz.
        ls_selopt-high = ls_pstlz-high.
        ls_selopt-low = ls_pstlz-low.
        ls_selopt-option = ls_pstlz-option.
        ls_selopt-sign = ls_pstlz-sign.
        ls_selopt-shlpfield = 'PSTLZ'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'LAND1'.              " Equivalent to 'Land1' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_land1 ).

      LOOP AT lr_land1 INTO ls_land1.
        ls_selopt-high = ls_land1-high.
        ls_selopt-low = ls_land1-low.
        ls_selopt-option = ls_land1-option.
        ls_selopt-sign = ls_land1-sign.
        ls_selopt-shlpfield = 'LAND1'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'SORTL'.              " Equivalent to 'Sortl' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_sortl ).

      LOOP AT lr_sortl INTO ls_sortl.
        ls_selopt-high = ls_sortl-high.
        ls_selopt-low = ls_sortl-low.
        ls_selopt-option = ls_sortl-option.
        ls_selopt-sign = ls_sortl-sign.
        ls_selopt-shlpfield = 'SORTL'.
        ls_selopt-shlpname = 'KREDA'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'KREDA'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'LAND1'.
      ls_entityset-land1 = ls_result_list-field_value.
    WHEN 'LIFNR'.
      ls_entityset-lifnr = ls_result_list-field_value.
    WHEN 'LOEVM'.
      ls_entityset-loevm = ls_result_list-field_value.
    WHEN 'MCOD1'.
      ls_entityset-mcod1 = ls_result_list-field_value.
    WHEN 'MCOD3'.
      ls_entityset-mcod3 = ls_result_list-field_value.
    WHEN 'PSTLZ'.
      ls_entityset-pstlz = ls_result_list-field_value.
    WHEN 'SORTL'.
      ls_entityset-sortl = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDAPROVEEDORSE_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDAPROVEEDORSE_UPDATE_ENTITY'.
  endmethod.
  method AYUDASTATUSSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDASTATUSSET_CREATE_ENTITY'.
  endmethod.
  method AYUDASTATUSSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDASTATUSSET_DELETE_ENTITY'.
  endmethod.
  method AYUDASTATUSSET_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lv_max_hits TYPE i VALUE 1.
DATA ls_converted_keys LIKE er_entity.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA lv_source_entity_set_name TYPE string.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
io_tech_request_context->get_converted_keys(
  IMPORTING
    es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

ls_selopt-sign = 'I'.
ls_selopt-option = 'EQ'.
ls_selopt-low = ls_converted_keys-domvalue_l.
ls_selopt-shlpfield = 'DOMVALUE_L'.
ls_selopt-shlpname = 'ZSCMH_EE_ESTATUS'.
APPEND ls_selopt TO lt_selopt.
CLEAR ls_selopt.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'ZSCMH_EE_ESTATUS'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR er_entity.
LOOP AT lt_result_list INTO ls_result_list.

  " Move SH results to GW request responce table
  CASE ls_result_list-field_name.
    WHEN 'DDTEXT'.
      er_entity-ddtext = ls_result_list-field_value.
    WHEN 'DOMVALUE_L'.
      er_entity-domvalue_l = ls_result_list-field_value.
  ENDCASE.

ENDLOOP.

  endmethod.
  method AYUDASTATUSSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
DATA lv_filter_str TYPE string.
DATA lv_max_hits TYPE i.
DATA ls_paging TYPE /iwbep/s_mgw_paging.
DATA ls_converted_keys LIKE LINE OF et_entityset.
DATA ls_message TYPE bapiret2.
DATA lt_selopt TYPE ddshselops.
DATA ls_selopt LIKE LINE OF lt_selopt.
DATA ls_filter TYPE /iwbep/s_mgw_select_option.
DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
DATA lr_domvalue_l LIKE RANGE OF ls_converted_keys-domvalue_l.
DATA ls_domvalue_l LIKE LINE OF lr_domvalue_l.
DATA lr_ddtext LIKE RANGE OF ls_converted_keys-ddtext.
DATA ls_ddtext LIKE LINE OF lr_ddtext.
DATA lt_result_list TYPE /iwbep/if_sb_gendpc_shlp_data=>tt_result_list.
DATA lv_next TYPE i VALUE 1.
DATA ls_entityset LIKE LINE OF et_entityset.
DATA ls_result_list_next LIKE LINE OF lt_result_list.
DATA ls_result_list LIKE LINE OF lt_result_list.

*-------------------------------------------------------------
*  Map the runtime request to the Search Help select option - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
lo_filter = io_tech_request_context->get_filter( ).
lt_filter_select_options = lo_filter->get_filter_select_options( ).
lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
IF  lv_filter_str            IS NOT INITIAL
AND lt_filter_select_options IS INITIAL.
  " If the string of the Filter System Query Option is not automatically converted into
  " filter option table (lt_filter_select_options), then the filtering combination is not supported
  " Log message in the application log
  me->/iwbep/if_sb_dpc_comm_services~log_message(
    EXPORTING
      iv_msg_type   = 'E'
      iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
      iv_msg_number = 025 ).
  " Raise Exception
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
    EXPORTING
      textid = /iwbep/cx_mgw_tech_exception=>internal_error.
ENDIF.

* Get key table information
io_tech_request_context->get_converted_source_keys(
  IMPORTING
    es_key_values  = ls_converted_keys ).

ls_paging-top = io_tech_request_context->get_top( ).
ls_paging-skip = io_tech_request_context->get_skip( ).

" Calculate the number of max hits to be fetched from the function module
" The lv_max_hits value is a summary of the Top and Skip values
IF ls_paging-top > 0.
  lv_max_hits = is_paging-top + is_paging-skip.
ENDIF.

* Maps filter table lines to the Search Help select option table
LOOP AT lt_filter_select_options INTO ls_filter.

  CASE ls_filter-property.
    WHEN 'DOMVALUE_L'.              " Equivalent to 'Status' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_domvalue_l ).

      LOOP AT lr_domvalue_l INTO ls_domvalue_l.
        ls_selopt-high = ls_domvalue_l-high.
        ls_selopt-low = ls_domvalue_l-low.
        ls_selopt-option = ls_domvalue_l-option.
        ls_selopt-sign = ls_domvalue_l-sign.
        ls_selopt-shlpfield = 'DOMVALUE_L'.
        ls_selopt-shlpname = 'ZSCMH_EE_ESTATUS'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.
    WHEN 'DDTEXT'.              " Equivalent to 'StatusText' property in the service
      lo_filter->convert_select_option(
        EXPORTING
          is_select_option = ls_filter
        IMPORTING
          et_select_option = lr_ddtext ).

      LOOP AT lr_ddtext INTO ls_ddtext.
        ls_selopt-high = ls_ddtext-high.
        ls_selopt-low = ls_ddtext-low.
        ls_selopt-option = ls_ddtext-option.
        ls_selopt-sign = ls_ddtext-sign.
        ls_selopt-shlpfield = 'DDTEXT'.
        ls_selopt-shlpname = 'ZSCMH_EE_ESTATUS'.
        APPEND ls_selopt TO lt_selopt.
        CLEAR ls_selopt.
      ENDLOOP.

    WHEN OTHERS.
      " Log message in the application log
      me->/iwbep/if_sb_dpc_comm_services~log_message(
        EXPORTING
          iv_msg_type   = 'E'
          iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
          iv_msg_number = 020
          iv_msg_v1     = ls_filter-property ).
      " Raise Exception
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          textid = /iwbep/cx_mgw_tech_exception=>internal_error.
  ENDCASE.
ENDLOOP.

*-------------------------------------------------------------
*  Call to Search Help get values mechanism
*-------------------------------------------------------------
* Get search help values
me->/iwbep/if_sb_gendpc_shlp_data~get_search_help_values(
  EXPORTING
    iv_shlp_name = 'ZSCMH_EE_ESTATUS'
    iv_maxrows = lv_max_hits
    iv_sort = 'X'
    iv_call_shlt_exit = 'X'
    it_selopt = lt_selopt
  IMPORTING
    et_return_list = lt_result_list
    es_message = ls_message ).

*-------------------------------------------------------------
*  Map the Search Help returned results to the caller interface - Only mapped attributes
*-------------------------------------------------------------
IF ls_message IS NOT INITIAL.
* Call RFC call exception handling
  me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
    EXPORTING
      is_return      = ls_message
      iv_entity_type = iv_entity_name
      it_key_tab     = it_key_tab ).
ENDIF.

CLEAR et_entityset.

LOOP AT lt_result_list INTO ls_result_list
  WHERE record_number > ls_paging-skip.

  " Move SH results to GW request responce table
  lv_next = sy-tabix + 1. " next loop iteration
  CASE ls_result_list-field_name.
    WHEN 'DDTEXT'.
      ls_entityset-ddtext = ls_result_list-field_value.
    WHEN 'DOMVALUE_L'.
      ls_entityset-domvalue_l = ls_result_list-field_value.
  ENDCASE.

  " Check if the next line in the result list is a new record
  READ TABLE lt_result_list INTO ls_result_list_next INDEX lv_next.
  IF sy-subrc <> 0
  OR ls_result_list-record_number <> ls_result_list_next-record_number.
    " Save the collected SH result in the GW request table
    APPEND ls_entityset TO et_entityset.
    CLEAR: ls_result_list_next, ls_entityset.
  ENDIF.

ENDLOOP.

  endmethod.
  method AYUDASTATUSSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDASTATUSSET_UPDATE_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_CREATE_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_DELETE_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_GET_ENTITY'.
  endmethod.
  method AYUDATIPOPALLETS_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA e_data  TYPE zif_zui5_cm_get_tipo_pallets1=>zscmtt_material_palets_centro.
 DATA e_return  TYPE zif_zui5_cm_get_tipo_pallets1=>bapiret2_t.
 DATA ir_lgort  TYPE zif_zui5_cm_get_tipo_pallets1=>range_t_lgort_d.
 DATA ir_matnr  TYPE zif_zui5_cm_get_tipo_pallets1=>range_t_matnr.
 DATA ir_werks  TYPE zif_zui5_cm_get_tipo_pallets1=>range_t_werks_d.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_tipo_pallets1=>zscmtt_material_palets_centro.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_tipo_pallets1=>bapiret2_t.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_tipo_pallets1=>range_t_lgort_d.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_tipo_pallets1=>range_t_matnr.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_tipo_pallets1=>range_t_werks_d.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_e_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_matnr ).

       LOOP AT lr_matnr INTO ls_matnr.
         ls_ir_matnr-high = ls_matnr-high.
         ls_ir_matnr-low = ls_matnr-low.
         ls_ir_matnr-option = ls_matnr-option.
         ls_ir_matnr-sign = ls_matnr-sign.
         APPEND ls_ir_matnr TO ir_matnr.
       ENDLOOP.
       CLEAR lr_matnr.
     WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       LOOP AT lr_lgort INTO ls_lgort.
         ls_ir_lgort-high = ls_lgort-high.
         ls_ir_lgort-low = ls_lgort-low.
         ls_ir_lgort-option = ls_lgort-option.
         ls_ir_lgort-sign = ls_lgort-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_TIPO_PALLETS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_matnr       = ir_matnr
           ir_lgort       = ir_lgort
           ir_werks       = ir_werks
         IMPORTING
           e_return       = e_return
           e_data         = e_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_matnr              = ir_matnr
       ir_lgort              = ir_lgort
       ir_werks              = ir_werks
     IMPORTING
       e_return              = e_return
       e_data                = e_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( e_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT e_data INTO ls_e_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_e_data-maktx = ls_e_data-maktx.
   ls_gw_e_data-matnr = ls_e_data-matnr.
   ls_gw_e_data-lgort = ls_e_data-lgort.
   ls_gw_e_data-werks = ls_e_data-werks.
   APPEND ls_gw_e_data TO et_entityset.
   CLEAR ls_gw_e_data.
 ENDLOOP.

  endmethod.
  method AYUDATIPOPALLETS_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'AYUDATIPOPALLETS_UPDATE_ENTITY'.
  endmethod.
  method CHECK_SUBSCRIPTION_AUTHORITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'CHECK_SUBSCRIPTION_AUTHORITY'.
  endmethod.
  method ENTRADASSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTRADASSET_CREATE_ENTITY'.
  endmethod.
  method ENTRADASSET_DELETE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA iv_posnr TYPE zif_zui5_cm_anula_posicion_ent=>posnr_vl.
 DATA iv_vbeln TYPE zif_zui5_cm_anula_posicion_ent=>zscm_vbeln_traslado.
 DATA o_return  TYPE zif_zui5_cm_anula_posicion_ent=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_anula_posicion_ent=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys TYPE zcl_zsui5_cm_entradas_mpc=>ts_entradas.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

* Maps key fields to function module parameters

 iv_posnr = ls_converted_keys-posnr.
 iv_vbeln = ls_converted_keys-vbeln.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_ANULA_POSICION_ENTREGA'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           iv_posnr       = iv_posnr
           iv_vbeln       = iv_vbeln
         IMPORTING
           o_return       = o_return
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       iv_posnr              = iv_posnr
       iv_vbeln              = iv_vbeln
     IMPORTING
       o_return              = o_return
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
  endmethod.
  method ENTRADASSET_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA iv_posnr TYPE zif_zui5_cm_get_entradas=>posnr_vl.
 DATA iv_vbeln TYPE zif_zui5_cm_get_entradas=>vbeln_vl.
 DATA o_data  TYPE zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
 DATA o_return  TYPE zif_zui5_cm_get_entradas=>bapiret2_t.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entradas=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'EntradasSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 iv_posnr = ls_converted_keys-posnr.
 iv_vbeln = ls_converted_keys-vbeln.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ENTRADAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           iv_posnr       = iv_posnr
           iv_vbeln       = iv_vbeln
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       iv_posnr              = iv_posnr
       iv_vbeln              = iv_vbeln
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE o_data INTO ls_o_data INDEX 1.
 er_entity-deletable = ls_o_data-deletable.
 er_entity-wbsta_text = ls_o_data-wbsta_text.
 er_entity-eindt = ls_o_data-eindt.
 er_entity-wbsta = ls_o_data-wbsta.
 er_entity-wadat_ist = ls_o_data-wadat_ist.
 er_entity-lgort = ls_o_data-lgort.
 er_entity-posnr = ls_o_data-posnr.
 er_entity-vbeln = ls_o_data-vbeln.
 er_entity-text1 = ls_o_data-text1.
 er_entity-add01 = ls_o_data-add01.
 er_entity-agencia = ls_o_data-agencia.
 er_entity-tdlnr = ls_o_data-tdlnr.
 er_entity-meins = ls_o_data-meins.
 er_entity-cantidad = ls_o_data-cantidad.
 er_entity-kunnr_name = ls_o_data-kunnr_name.
 er_entity-kunnr = ls_o_data-kunnr.
 er_entity-charg_stat_text = ls_o_data-charg_stat_text.
 er_entity-charg_stat = ls_o_data-charg_stat.
 er_entity-charg = ls_o_data-charg.
 er_entity-medidacaja = ls_o_data-medidacaja.
 er_entity-lifnr_name = ls_o_data-lifnr_name.
 er_entity-lifnr = ls_o_data-lifnr.
 er_entity-werks = ls_o_data-werks.
 er_entity-maktx = ls_o_data-maktx.
 er_entity-matnr = ls_o_data-matnr.
 er_entity-ebelp = ls_o_data-ebelp.
 er_entity-ebeln = ls_o_data-ebeln.
 er_entity-buzei = ls_o_data-buzei.
 er_entity-belnr = ls_o_data-belnr.
 er_entity-reswk = ls_o_data-reswk.
 er_entity-reslo = ls_o_data-reslo.
  endmethod.
  method ENTRADASSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_add01  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_agencia  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_belnr  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_buzei  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_cantidad  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_charg  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_charg_stat  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_ebeln  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_ebelp  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_eindt  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_kunnr  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_kunnr_name  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_lgort  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_lifnr  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_lifnr_name  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_maktx  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_matnr  TYPE zif_zui5_cm_get_entradas=>tbl_mat_range.
 DATA ir_medidacaja  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_posnr  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_tdlnr  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_text1  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_vbeln  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_wadat_ist  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_wbsta  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA ir_werks  TYPE zif_zui5_cm_get_entradas=>rseloption.
 DATA o_data  TYPE zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
 DATA o_return  TYPE zif_zui5_cm_get_entradas=>bapiret2_t.
 DATA ls_ir_add01  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_agencia  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_belnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_buzei  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_cantidad  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_charg  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_charg_stat  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_ebeln  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_ebelp  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_eindt  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_kunnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_kunnr_name  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_lifnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_lifnr_name  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_entradas=>tbl_mat_range.
 DATA ls_ir_medidacaja  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_posnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_tdlnr  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_text1  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_wadat_ist  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_wbsta  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_entradas=>rseloption.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entradas=>zsuitt_cm_entregas_entrantes.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entradas=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_almacen_montaje LIKE RANGE OF ls_converted_keys-almacen_montaje.
 DATA ls_almacen_montaje LIKE LINE OF lr_almacen_montaje.
 DATA lr_centro_montaje LIKE RANGE OF ls_converted_keys-centro_montaje.
 DATA ls_centro_montaje LIKE LINE OF lr_centro_montaje.
 DATA lr_eindt LIKE RANGE OF ls_converted_keys-eindt.
 DATA ls_eindt LIKE LINE OF lr_eindt.
 DATA lr_wbsta LIKE RANGE OF ls_converted_keys-wbsta.
 DATA ls_wbsta LIKE LINE OF lr_wbsta.
 DATA lr_wadat_ist LIKE RANGE OF ls_converted_keys-wadat_ist.
 DATA ls_wadat_ist LIKE LINE OF lr_wadat_ist.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_text1 LIKE RANGE OF ls_converted_keys-text1.
 DATA ls_text1 LIKE LINE OF lr_text1.
 DATA lr_add01 LIKE RANGE OF ls_converted_keys-add01.
 DATA ls_add01 LIKE LINE OF lr_add01.
 DATA lr_agencia LIKE RANGE OF ls_converted_keys-agencia.
 DATA ls_agencia LIKE LINE OF lr_agencia.
 DATA lr_tdlnr LIKE RANGE OF ls_converted_keys-tdlnr.
 DATA ls_tdlnr LIKE LINE OF lr_tdlnr.
 DATA lr_cantidad LIKE RANGE OF ls_converted_keys-cantidad.
 DATA ls_cantidad LIKE LINE OF lr_cantidad.
 DATA lr_kunnr_name LIKE RANGE OF ls_converted_keys-kunnr_name.
 DATA ls_kunnr_name LIKE LINE OF lr_kunnr_name.
 DATA lr_kunnr LIKE RANGE OF ls_converted_keys-kunnr.
 DATA ls_kunnr LIKE LINE OF lr_kunnr.
 DATA lr_charg_stat LIKE RANGE OF ls_converted_keys-charg_stat.
 DATA ls_charg_stat LIKE LINE OF lr_charg_stat.
 DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
 DATA ls_charg LIKE LINE OF lr_charg.
 DATA lr_medidacaja LIKE RANGE OF ls_converted_keys-medidacaja.
 DATA ls_medidacaja LIKE LINE OF lr_medidacaja.
 DATA lr_lifnr_name LIKE RANGE OF ls_converted_keys-lifnr_name.
 DATA ls_lifnr_name LIKE LINE OF lr_lifnr_name.
 DATA lr_lifnr LIKE RANGE OF ls_converted_keys-lifnr.
 DATA ls_lifnr LIKE LINE OF lr_lifnr.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lr_ebelp LIKE RANGE OF ls_converted_keys-ebelp.
 DATA ls_ebelp LIKE LINE OF lr_ebelp.
 DATA lr_ebeln LIKE RANGE OF ls_converted_keys-ebeln.
 DATA ls_ebeln LIKE LINE OF lr_ebeln.
 DATA lr_posnr LIKE RANGE OF ls_converted_keys-posnr.
 DATA ls_posnr LIKE LINE OF lr_posnr.
 DATA lr_vbeln LIKE RANGE OF ls_converted_keys-vbeln.
 DATA ls_vbeln LIKE LINE OF lr_vbeln.
 DATA lr_buzei LIKE RANGE OF ls_converted_keys-buzei.
 DATA ls_buzei LIKE LINE OF lr_buzei.
 DATA lr_belnr LIKE RANGE OF ls_converted_keys-belnr.
 DATA ls_belnr LIKE LINE OF lr_belnr.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'ALMACEN_MONTAJE'.              " Equivalent to 'AlmacenMontaje' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_almacen_montaje ).

       LOOP AT lr_almacen_montaje INTO ls_almacen_montaje.
         ls_ir_lgort-high = ls_almacen_montaje-high.
         ls_ir_lgort-low = ls_almacen_montaje-low.
         ls_ir_lgort-option = ls_almacen_montaje-option.
         ls_ir_lgort-sign = ls_almacen_montaje-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_almacen_montaje.
     WHEN 'CENTRO_MONTAJE'.              " Equivalent to 'CentroMontaje' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_centro_montaje ).

       LOOP AT lr_centro_montaje INTO ls_centro_montaje.
         ls_ir_werks-high = ls_centro_montaje-high.
         ls_ir_werks-low = ls_centro_montaje-low.
         ls_ir_werks-option = ls_centro_montaje-option.
         ls_ir_werks-sign = ls_centro_montaje-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_centro_montaje.
     WHEN 'EINDT'.              " Equivalent to 'Eindt' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_eindt ).

       LOOP AT lr_eindt INTO ls_eindt.
         ls_ir_eindt-high = ls_eindt-high.
         ls_ir_eindt-low = ls_eindt-low.
         ls_ir_eindt-option = ls_eindt-option.
         ls_ir_eindt-sign = ls_eindt-sign.
         APPEND ls_ir_eindt TO ir_eindt.
       ENDLOOP.
       CLEAR lr_eindt.
     WHEN 'WBSTA'.              " Equivalent to 'Wbsta' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_wbsta ).

       LOOP AT lr_wbsta INTO ls_wbsta.
         ls_ir_wbsta-high = ls_wbsta-high.
         ls_ir_wbsta-low = ls_wbsta-low.
         ls_ir_wbsta-option = ls_wbsta-option.
         ls_ir_wbsta-sign = ls_wbsta-sign.
         APPEND ls_ir_wbsta TO ir_wbsta.
       ENDLOOP.
       CLEAR lr_wbsta.
     WHEN 'WADAT_IST'.              " Equivalent to 'WadatIst' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_wadat_ist ).

       LOOP AT lr_wadat_ist INTO ls_wadat_ist.
         ls_ir_wadat_ist-high = ls_wadat_ist-high.
         ls_ir_wadat_ist-low = ls_wadat_ist-low.
         ls_ir_wadat_ist-option = ls_wadat_ist-option.
         ls_ir_wadat_ist-sign = ls_wadat_ist-sign.
         APPEND ls_ir_wadat_ist TO ir_wadat_ist.
       ENDLOOP.
       CLEAR lr_wadat_ist.
     WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       LOOP AT lr_lgort INTO ls_lgort.
         ls_ir_lgort-high = ls_lgort-high.
         ls_ir_lgort-low = ls_lgort-low.
         ls_ir_lgort-option = ls_lgort-option.
         ls_ir_lgort-sign = ls_lgort-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort.
     WHEN 'TEXT1'.              " Equivalent to 'Text1' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_text1 ).

       LOOP AT lr_text1 INTO ls_text1.
         ls_ir_text1-high = ls_text1-high.
         ls_ir_text1-low = ls_text1-low.
         ls_ir_text1-option = ls_text1-option.
         ls_ir_text1-sign = ls_text1-sign.
         APPEND ls_ir_text1 TO ir_text1.
       ENDLOOP.
       CLEAR lr_text1.
     WHEN 'ADD01'.              " Equivalent to 'Add01' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_add01 ).

       LOOP AT lr_add01 INTO ls_add01.
         ls_ir_add01-high = ls_add01-high.
         ls_ir_add01-low = ls_add01-low.
         ls_ir_add01-option = ls_add01-option.
         ls_ir_add01-sign = ls_add01-sign.
         APPEND ls_ir_add01 TO ir_add01.
       ENDLOOP.
       CLEAR lr_add01.
     WHEN 'AGENCIA'.              " Equivalent to 'Agencia' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_agencia ).

       LOOP AT lr_agencia INTO ls_agencia.
         ls_ir_agencia-high = ls_agencia-high.
         ls_ir_agencia-low = ls_agencia-low.
         ls_ir_agencia-option = ls_agencia-option.
         ls_ir_agencia-sign = ls_agencia-sign.
         APPEND ls_ir_agencia TO ir_agencia.
       ENDLOOP.
       CLEAR lr_agencia.
     WHEN 'TDLNR'.              " Equivalent to 'Tdlnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_tdlnr ).

       LOOP AT lr_tdlnr INTO ls_tdlnr.
         ls_ir_tdlnr-high = ls_tdlnr-high.
         ls_ir_tdlnr-low = ls_tdlnr-low.
         ls_ir_tdlnr-option = ls_tdlnr-option.
         ls_ir_tdlnr-sign = ls_tdlnr-sign.
         APPEND ls_ir_tdlnr TO ir_tdlnr.
       ENDLOOP.
       CLEAR lr_tdlnr.
     WHEN 'CANTIDAD'.              " Equivalent to 'Cantidad' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_cantidad ).

       LOOP AT lr_cantidad INTO ls_cantidad.
         ls_ir_cantidad-high = ls_cantidad-high.
         ls_ir_cantidad-low = ls_cantidad-low.
         ls_ir_cantidad-option = ls_cantidad-option.
         ls_ir_cantidad-sign = ls_cantidad-sign.
         APPEND ls_ir_cantidad TO ir_cantidad.
       ENDLOOP.
       CLEAR lr_cantidad.
     WHEN 'KUNNR_NAME'.              " Equivalent to 'KunnrName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr_name ).

       LOOP AT lr_kunnr_name INTO ls_kunnr_name.
         ls_ir_kunnr_name-high = ls_kunnr_name-high.
         ls_ir_kunnr_name-low = ls_kunnr_name-low.
         ls_ir_kunnr_name-option = ls_kunnr_name-option.
         ls_ir_kunnr_name-sign = ls_kunnr_name-sign.
         APPEND ls_ir_kunnr_name TO ir_kunnr_name.
       ENDLOOP.
       CLEAR lr_kunnr_name.
     WHEN 'KUNNR'.              " Equivalent to 'Kunnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunnr ).

       LOOP AT lr_kunnr INTO ls_kunnr.
         ls_ir_kunnr-high = ls_kunnr-high.
         ls_ir_kunnr-low = ls_kunnr-low.
         ls_ir_kunnr-option = ls_kunnr-option.
         ls_ir_kunnr-sign = ls_kunnr-sign.
         APPEND ls_ir_kunnr TO ir_kunnr.
       ENDLOOP.
       CLEAR lr_kunnr.
     WHEN 'CHARG_STAT'.              " Equivalent to 'ChargStat' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_charg_stat ).

       LOOP AT lr_charg_stat INTO ls_charg_stat.
         ls_ir_charg_stat-high = ls_charg_stat-high.
         ls_ir_charg_stat-low = ls_charg_stat-low.
         ls_ir_charg_stat-option = ls_charg_stat-option.
         ls_ir_charg_stat-sign = ls_charg_stat-sign.
         APPEND ls_ir_charg_stat TO ir_charg_stat.
       ENDLOOP.
       CLEAR lr_charg_stat.
     WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_charg ).

       LOOP AT lr_charg INTO ls_charg.
         ls_ir_charg-high = ls_charg-high.
         ls_ir_charg-low = ls_charg-low.
         ls_ir_charg-option = ls_charg-option.
         ls_ir_charg-sign = ls_charg-sign.
         APPEND ls_ir_charg TO ir_charg.
       ENDLOOP.
       CLEAR lr_charg.
     WHEN 'MEDIDACAJA'.              " Equivalent to 'Medidacaja' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_medidacaja ).

       LOOP AT lr_medidacaja INTO ls_medidacaja.
         ls_ir_medidacaja-high = ls_medidacaja-high.
         ls_ir_medidacaja-low = ls_medidacaja-low.
         ls_ir_medidacaja-option = ls_medidacaja-option.
         ls_ir_medidacaja-sign = ls_medidacaja-sign.
         APPEND ls_ir_medidacaja TO ir_medidacaja.
       ENDLOOP.
       CLEAR lr_medidacaja.
     WHEN 'LIFNR_NAME'.              " Equivalent to 'LifnrName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lifnr_name ).

       LOOP AT lr_lifnr_name INTO ls_lifnr_name.
         ls_ir_lifnr_name-high = ls_lifnr_name-high.
         ls_ir_lifnr_name-low = ls_lifnr_name-low.
         ls_ir_lifnr_name-option = ls_lifnr_name-option.
         ls_ir_lifnr_name-sign = ls_lifnr_name-sign.
         APPEND ls_ir_lifnr_name TO ir_lifnr_name.
       ENDLOOP.
       CLEAR lr_lifnr_name.
     WHEN 'LIFNR'.              " Equivalent to 'Lifnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lifnr ).

       LOOP AT lr_lifnr INTO ls_lifnr.
         ls_ir_lifnr-high = ls_lifnr-high.
         ls_ir_lifnr-low = ls_lifnr-low.
         ls_ir_lifnr-option = ls_lifnr-option.
         ls_ir_lifnr-sign = ls_lifnr-sign.
         APPEND ls_ir_lifnr TO ir_lifnr.
       ENDLOOP.
       CLEAR lr_lifnr.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.
     WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_maktx ).

       LOOP AT lr_maktx INTO ls_maktx.
         ls_ir_maktx-high = ls_maktx-high.
         ls_ir_maktx-low = ls_maktx-low.
         ls_ir_maktx-option = ls_maktx-option.
         ls_ir_maktx-sign = ls_maktx-sign.
         APPEND ls_ir_maktx TO ir_maktx.
       ENDLOOP.
       CLEAR lr_maktx.
     WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_matnr ).

       LOOP AT lr_matnr INTO ls_matnr.
         ls_ir_matnr-matnr_high = ls_matnr-high.
         ls_ir_matnr-matnr_low = ls_matnr-low.
         ls_ir_matnr-option = ls_matnr-option.
         ls_ir_matnr-sign = ls_matnr-sign.
         APPEND ls_ir_matnr TO ir_matnr.
       ENDLOOP.
       CLEAR lr_matnr.
     WHEN 'EBELP'.              " Equivalent to 'Ebelp' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_ebelp ).

       LOOP AT lr_ebelp INTO ls_ebelp.
         ls_ir_ebelp-high = ls_ebelp-high.
         ls_ir_ebelp-low = ls_ebelp-low.
         ls_ir_ebelp-option = ls_ebelp-option.
         ls_ir_ebelp-sign = ls_ebelp-sign.
         APPEND ls_ir_ebelp TO ir_ebelp.
       ENDLOOP.
       CLEAR lr_ebelp.
     WHEN 'EBELN'.              " Equivalent to 'Ebeln' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_ebeln ).

       LOOP AT lr_ebeln INTO ls_ebeln.
         ls_ir_ebeln-high = ls_ebeln-high.
         ls_ir_ebeln-low = ls_ebeln-low.
         ls_ir_ebeln-option = ls_ebeln-option.
         ls_ir_ebeln-sign = ls_ebeln-sign.
         APPEND ls_ir_ebeln TO ir_ebeln.
       ENDLOOP.
       CLEAR lr_ebeln.
     WHEN 'POSNR'.              " Equivalent to 'Posnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_posnr ).

       LOOP AT lr_posnr INTO ls_posnr.
         ls_ir_posnr-high = ls_posnr-high.
         ls_ir_posnr-low = ls_posnr-low.
         ls_ir_posnr-option = ls_posnr-option.
         ls_ir_posnr-sign = ls_posnr-sign.
         APPEND ls_ir_posnr TO ir_posnr.
       ENDLOOP.
       CLEAR lr_posnr.
     WHEN 'VBELN'.              " Equivalent to 'Vbeln' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_vbeln ).

       LOOP AT lr_vbeln INTO ls_vbeln.
         ls_ir_vbeln-high = ls_vbeln-high.
         ls_ir_vbeln-low = ls_vbeln-low.
         ls_ir_vbeln-option = ls_vbeln-option.
         ls_ir_vbeln-sign = ls_vbeln-sign.
         APPEND ls_ir_vbeln TO ir_vbeln.
       ENDLOOP.
       CLEAR lr_vbeln.
     WHEN 'BUZEI'.              " Equivalent to 'Buzei' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_buzei ).

       LOOP AT lr_buzei INTO ls_buzei.
         ls_ir_buzei-high = ls_buzei-high.
         ls_ir_buzei-low = ls_buzei-low.
         ls_ir_buzei-option = ls_buzei-option.
         ls_ir_buzei-sign = ls_buzei-sign.
         APPEND ls_ir_buzei TO ir_buzei.
       ENDLOOP.
       CLEAR lr_buzei.
     WHEN 'BELNR'.              " Equivalent to 'Belnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_belnr ).

       LOOP AT lr_belnr INTO ls_belnr.
         ls_ir_belnr-high = ls_belnr-high.
         ls_ir_belnr-low = ls_belnr-low.
         ls_ir_belnr-option = ls_belnr-option.
         ls_ir_belnr-sign = ls_belnr-sign.
         APPEND ls_ir_belnr TO ir_belnr.
       ENDLOOP.
       CLEAR lr_belnr.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ENTRADAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_lgort       = ir_lgort
           ir_werks       = ir_werks
           ir_eindt       = ir_eindt
           ir_wbsta       = ir_wbsta
           ir_wadat_ist   = ir_wadat_ist
           ir_text1       = ir_text1
           ir_add01       = ir_add01
           ir_agencia     = ir_agencia
           ir_tdlnr       = ir_tdlnr
           ir_cantidad    = ir_cantidad
           ir_kunnr_name  = ir_kunnr_name
           ir_kunnr       = ir_kunnr
           ir_charg_stat  = ir_charg_stat
           ir_charg       = ir_charg
           ir_medidacaja  = ir_medidacaja
           ir_lifnr_name  = ir_lifnr_name
           ir_lifnr       = ir_lifnr
           ir_maktx       = ir_maktx
           ir_matnr       = ir_matnr
           ir_ebelp       = ir_ebelp
           ir_ebeln       = ir_ebeln
           ir_posnr       = ir_posnr
           ir_vbeln       = ir_vbeln
           ir_buzei       = ir_buzei
           ir_belnr       = ir_belnr
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_lgort              = ir_lgort
       ir_werks              = ir_werks
       ir_eindt              = ir_eindt
       ir_wbsta              = ir_wbsta
       ir_wadat_ist          = ir_wadat_ist
       ir_text1              = ir_text1
       ir_add01              = ir_add01
       ir_agencia            = ir_agencia
       ir_tdlnr              = ir_tdlnr
       ir_cantidad           = ir_cantidad
       ir_kunnr_name         = ir_kunnr_name
       ir_kunnr              = ir_kunnr
       ir_charg_stat         = ir_charg_stat
       ir_charg              = ir_charg
       ir_medidacaja         = ir_medidacaja
       ir_lifnr_name         = ir_lifnr_name
       ir_lifnr              = ir_lifnr
       ir_maktx              = ir_maktx
       ir_matnr              = ir_matnr
       ir_ebelp              = ir_ebelp
       ir_ebeln              = ir_ebeln
       ir_posnr              = ir_posnr
       ir_vbeln              = ir_vbeln
       ir_buzei              = ir_buzei
       ir_belnr              = ir_belnr
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-deletable = ls_o_data-deletable.
   ls_gw_o_data-wbsta_text = ls_o_data-wbsta_text.
   ls_gw_o_data-eindt = ls_o_data-eindt.
   ls_gw_o_data-wbsta = ls_o_data-wbsta.
   ls_gw_o_data-wadat_ist = ls_o_data-wadat_ist.
   ls_gw_o_data-lgort = ls_o_data-lgort.
   ls_gw_o_data-text1 = ls_o_data-text1.
   ls_gw_o_data-add01 = ls_o_data-add01.
   ls_gw_o_data-agencia = ls_o_data-agencia.
   ls_gw_o_data-tdlnr = ls_o_data-tdlnr.
   ls_gw_o_data-cantidad = ls_o_data-cantidad.
   ls_gw_o_data-kunnr_name = ls_o_data-kunnr_name.
   ls_gw_o_data-kunnr = ls_o_data-kunnr.
   ls_gw_o_data-charg_stat = ls_o_data-charg_stat.
   ls_gw_o_data-charg = ls_o_data-charg.
   ls_gw_o_data-medidacaja = ls_o_data-medidacaja.
   ls_gw_o_data-lifnr_name = ls_o_data-lifnr_name.
   ls_gw_o_data-lifnr = ls_o_data-lifnr.
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-maktx = ls_o_data-maktx.
   ls_gw_o_data-matnr = ls_o_data-matnr.
   ls_gw_o_data-ebelp = ls_o_data-ebelp.
   ls_gw_o_data-ebeln = ls_o_data-ebeln.
   ls_gw_o_data-posnr = ls_o_data-posnr.
   ls_gw_o_data-vbeln = ls_o_data-vbeln.
   ls_gw_o_data-meins = ls_o_data-meins.
   ls_gw_o_data-charg_stat_text = ls_o_data-charg_stat_text.
   ls_gw_o_data-buzei = ls_o_data-buzei.
   ls_gw_o_data-belnr = ls_o_data-belnr.
   ls_gw_o_data-reswk = ls_o_data-reswk.
   ls_gw_o_data-reslo = ls_o_data-reslo.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method ENTRADASSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTRADASSET_UPDATE_ENTITY'.
  endmethod.
  method ENTREGACREARHEAD_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARHEAD_CREATE_ENTITY'.
  endmethod.
  method ENTREGACREARHEAD_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARHEAD_DELETE_ENTITY'.
  endmethod.
  method ENTREGACREARHEAD_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARHEAD_GET_ENTITY'.
  endmethod.
  method ENTREGACREARHEAD_GET_ENTITYSET.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARHEAD_GET_ENTITYSET'.
  endmethod.
  method ENTREGACREARHEAD_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARHEAD_UPDATE_ENTITY'.
  endmethod.
  method ENTREGACREARPOSI_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARPOSI_CREATE_ENTITY'.
  endmethod.
  method ENTREGACREARPOSI_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARPOSI_DELETE_ENTITY'.
  endmethod.
  method ENTREGACREARPOSI_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARPOSI_GET_ENTITY'.
  endmethod.
  method ENTREGACREARPOSI_GET_ENTITYSET.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARPOSI_GET_ENTITYSET'.
  endmethod.
  method ENTREGACREARPOSI_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGACREARPOSI_UPDATE_ENTITY'.
  endmethod.
  method MENSAJESSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_CREATE_ENTITY'.
  endmethod.
  method MENSAJESSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_DELETE_ENTITY'.
  endmethod.
  method MENSAJESSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_GET_ENTITY'.
  endmethod.
  method MENSAJESSET_GET_ENTITYSET.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_GET_ENTITYSET'.
  endmethod.
  method MENSAJESSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESSET_UPDATE_ENTITY'.
  endmethod.
