
class ZCL_ZUI5_WM_DPC_EXT definition
  public
  inheriting from ZCL_ZUI5_WM_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
    redefinition .
protected section.
private section.
endclass. "ZCL_ZUI5_WM_DPC_EXT definition
class ZCL_ZUI5_WM_DPC_EXT implementation.
  METHOD /iwbep/if_mgw_appl_srv_runtime~create_deep_entity.

*--------------------------------------------------------------------*
*                     DEFINICIÓN DE CONSTANTES
*--------------------------------------------------------------------*
    CONSTANTS c_confirmacionentrega(20) TYPE c VALUE 'ConfEntregaHeader'.
    CONSTANTS c_msg(11)         TYPE c VALUE 'ZUI5_WM'.
    CONSTANTS c_e(1)            TYPE c VALUE 'E'.

*--------------------------------------------------------------------*
*                    DEFINICIÓN DE TIPOS DE DATOS
*--------------------------------------------------------------------*
    TYPES:  BEGIN OF lty_confirmar_entrega,
              confentregaheaderset TYPE zcl_zui5_wm_mpc=>ts_confentregaheader,
              confentregaposset    TYPE STANDARD TABLE OF zcl_zui5_wm_mpc=>ts_confentregapos WITH DEFAULT KEY,
            END OF lty_confirmar_entrega.

*--------------------------------------------------------------------*
*                   DECLARACIÓN VARIABLES GENERALES
*--------------------------------------------------------------------*
    DATA lo_logger                  TYPE REF TO /iwbep/cl_cos_logger.
    DATA io_message_container       TYPE REF TO /iwbep/if_message_container.
    DATA lv_error_category          TYPE /iwbep/if_message_container=>ty_error_category.
    DATA lv_text                    TYPE bapi_msg.
    DATA: lv_mensaje                TYPE bapi_msg.
    DATA: o_tlog TYPE tt_bapiret2,
          w_tlog TYPE bapiret2.
    DATA:
      e_return     TYPE tt_bapiret2,
      e_bapireturn TYPE tt_bapiret2.

    DATA: ls_return TYPE bapiret2,
          es_return TYPE bapiret2.

    DATA: ls_confirmarentrega TYPE lty_confirmar_entrega.

    DATA: ls_confentregaheader  TYPE zui5_s_entrega_cabecera,
          ls_confentregapos     TYPE zui5_s_mat_entrega,
          lt_confentregapos     TYPE zui5_tt_mat_entrega,
          ls_confentregapos_aux TYPE zcl_zui5_wm_mpc=>ts_confentregapos,
          lt_confentregapos_aux TYPE zcl_zui5_wm_mpc=>ts_confentregapos.

    DATA: lv_error(1) TYPE c.

    CLEAR: o_tlog, o_tlog[].

*--------------------------------------------------------------------*
*                             LÓGICA
*--------------------------------------------------------------------*
    CASE iv_entity_name.

*--------------------------------------------------------------------*
*                   CONFIRMACIÓN DE ENTREGA
*--------------------------------------------------------------------*
      WHEN c_confirmacionentrega.
        io_data_provider->read_entry_data(
             IMPORTING es_data = ls_confirmarentrega-confentregaheaderset ).

        io_data_provider->read_entry_data(
        IMPORTING es_data = ls_confirmarentrega ).

        MOVE-CORRESPONDING ls_confirmarentrega-confentregaheaderset TO ls_confentregaheader.

        LOOP AT ls_confirmarentrega-confentregaposset INTO ls_confentregapos_aux.
          MOVE-CORRESPONDING ls_confentregapos_aux TO ls_confentregapos.
          APPEND ls_confentregapos TO lt_confentregapos.
        ENDLOOP.


***************************************************
***  LLAMADA A LA FUNCIÓN DE CREACIÓN DE PEDIDOS***
***************************************************
        CLEAR: es_return, ls_return, e_return, lv_mensaje.

        CALL FUNCTION 'ZUI5_MF_CONF_ENTREGA'
          EXPORTING
            i_cabecera_entrega   = ls_confentregaheader
            i_posiciones_entrega = lt_confentregapos
          IMPORTING
            o_bapi_return        = es_return.

        IF es_return-type = 'E' OR es_return-type = 'W'.
          lv_error = 'X'.
          lv_mensaje = es_return-message.
        ENDIF.

        IF lv_error NE 'X'. "Si la función no ha devuelto error
*      Preparamos los datos de cabecera para ser devueltos
          copy_data_to_ref(
              EXPORTING
                is_data = ls_confirmarentrega-confentregaheaderset
              CHANGING
                cr_data = er_deep_entity ).

        ELSE.
*      Preparamos los datos de cabecera para ser devueltos
          copy_data_to_ref(
              EXPORTING
                is_data = es_return
              CHANGING
                cr_data = er_deep_entity ).

          lo_logger            = /iwbep/if_mgw_conv_srv_runtime~get_logger( )              .
          io_message_container = /iwbep/if_mgw_conv_srv_runtime~get_message_container( )   .
          lv_error_category    = /iwbep/if_message_container=>gcs_error_category-processing.

          APPEND es_return TO o_tlog.
          io_message_container->add_messages_from_bapi(
                   EXPORTING
                     it_bapi_messages  = o_tlog
                     iv_error_category = lv_error_category
                     iv_entity_type    = iv_entity_name
                     it_key_tab        = it_key_tab ).

          IF es_return-type IS NOT INITIAL.
*              MESSAGE ID es_return-id TYPE es_return-type NUMBER es_return-number
*                      WITH es_return-message INTO lv_text.
          ELSE.
            MESSAGE ID c_msg TYPE c_e NUMBER 001 INTO lv_text.
          ENDIF.
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
            EXPORTING
              textid            = /iwbep/cx_mgw_busi_exception=>business_error
              message           = es_return-message
              message_container = io_message_container.
        ENDIF.



    ENDCASE.
  ENDMETHOD.
endclass. "ZCL_ZUI5_WM_DPC_EXT definition
endclass. "ZCL_ZUI5_WM_DPC_EXT implementation
