
class ZCL_ZSUI5_CM_TRASLADOS_DPC definition
  public
  inheriting from /IWBEP/CL_MGW_PUSH_ABS_DATA
  abstract
  create public .

public section.

  interfaces /IWBEP/IF_SB_DPC_COMM_SERVICES .
  interfaces /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY
    redefinition .
protected section.

  data mo_injection type ref to /IWBEP/IF_SB_GEN_DPC_INJECTION .

  methods ENTREGASTRANSPOR_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_ENTREGASTRANSPORTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_ENTREGASTRANSPORTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TT_ENTREGASTRANSPORTE
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods ENTREGASTRANSPOR_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_ENTREGASTRANSPORTE
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESDEEPSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_MENSAJESDEEP
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESDEEPSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESDEEPSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_MENSAJESDEEP
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESDEEPSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TT_MENSAJESDEEP
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods MENSAJESDEEPSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_MENSAJESDEEP
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_POSICIONESENTREGA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_POSICIONESENTREGA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TT_POSICIONESENTREGA
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods POSICIONESENTREG_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_POSICIONESENTREGA
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_CREATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_TRANSPORTES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_DELETE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_D optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_GET_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_REQUEST_OBJECT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_TRANSPORTES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_ENTITY_CNTXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_GET_ENTITYSET
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_FILTER_SELECT_OPTIONS type /IWBEP/T_MGW_SELECT_OPTION
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IT_ORDER type /IWBEP/T_MGW_SORTING_ORDER
      !IV_FILTER_STRING type STRING
      !IV_SEARCH_STRING type STRING
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET optional
    exporting
      !ET_ENTITYSET type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TT_TRANSPORTES
      !ES_RESPONSE_CONTEXT type /IWBEP/IF_MGW_APPL_SRV_RUNTIME=>TY_S_MGW_RESPONSE_CONTEXT
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods TRANSPORTESSET_UPDATE_ENTITY
    importing
      !IV_ENTITY_NAME type STRING
      !IV_ENTITY_SET_NAME type STRING
      !IV_SOURCE_NAME type STRING
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_U optional
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER optional
    exporting
      !ER_ENTITY type ZCL_ZSUI5_CM_TRASLADOS_MPC=>TS_TRANSPORTES
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION
      /IWBEP/CX_MGW_TECH_EXCEPTION .

  methods CHECK_SUBSCRIPTION_AUTHORITY
    redefinition .
private section.
endclass. "ZCL_ZSUI5_CM_TRASLADOS_DPC definition
class ZCL_ZSUI5_CM_TRASLADOS_DPC implementation.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_CRT_ENTITY_BASE
*&* This class has been generated on 17.05.2024 13:30:18 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_TRASLADOS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA entregastranspor_create_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_entregastransporte.
 DATA posicionesentreg_create_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_posicionesentrega.
 DATA mensajesdeepset_create_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_mensajesdeep.
 DATA transportesset_create_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_transportes.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
     WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
    entregastranspor_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = entregastranspor_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = entregastranspor_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
     WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
    posicionesentreg_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = posicionesentreg_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = posicionesentreg_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesDeepSet
*-------------------------------------------------------------------------*
     WHEN 'MensajesDeepSet'.
*     Call the entity set generated method
    mensajesdeepset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = mensajesdeepset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = mensajesdeepset_create_entity
      CHANGING
        cr_data = er_entity
   ).

*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
     WHEN 'TransportesSet'.
*     Call the entity set generated method
    transportesset_create_entity(
         EXPORTING iv_entity_name     = iv_entity_name
                   iv_entity_set_name = iv_entity_set_name
                   iv_source_name     = iv_source_name
                   io_data_provider   = io_data_provider
                   it_key_tab         = it_key_tab
                   it_navigation_path = it_navigation_path
                   io_tech_request_context = io_tech_request_context
       	 IMPORTING er_entity          = transportesset_create_entity
    ).
*     Send specific entity data to the caller interfaces
    copy_data_to_ref(
      EXPORTING
        is_data = transportesset_create_entity
      CHANGING
        cr_data = er_entity
   ).

  when others.
    super->/iwbep/if_mgw_appl_srv_runtime~create_entity(
       EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         io_data_provider   = io_data_provider
         it_key_tab = it_key_tab
         it_navigation_path = it_navigation_path
      IMPORTING
        er_entity = er_entity
  ).
ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~DELETE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_DEL_ENTITY_BASE
*&* This class has been generated on 17.05.2024 13:30:18 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_TRASLADOS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
      when 'EntregasTransporteSet'.
*     Call the entity set generated method
     entregastranspor_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
      when 'PosicionesEntregaSet'.
*     Call the entity set generated method
     posicionesentreg_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesDeepSet
*-------------------------------------------------------------------------*
      when 'MensajesDeepSet'.
*     Call the entity set generated method
     mensajesdeepset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
      when 'TransportesSet'.
*     Call the entity set generated method
     transportesset_delete_entity(
          EXPORTING iv_entity_name     = iv_entity_name
                    iv_entity_set_name = iv_entity_set_name
                    iv_source_name     = iv_source_name
                    it_key_tab         = it_key_tab
                    it_navigation_path = it_navigation_path
                    io_tech_request_context = io_tech_request_context
     ).

   when others.
     super->/iwbep/if_mgw_appl_srv_runtime~delete_entity(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_key_tab = it_key_tab
          it_navigation_path = it_navigation_path
 ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITY.
*&-----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_GETENTITY_BASE
*&* This class has been generated  on 17.05.2024 13:30:18 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_TRASLADOS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA entregastranspor_get_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_entregastransporte.
 DATA posicionesentreg_get_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_posicionesentrega.
 DATA mensajesdeepset_get_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_mensajesdeep.
 DATA transportesset_get_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_transportes.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data.       "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
      WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
          entregastranspor_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregastranspor_get_entity
                         es_response_context = es_response_context
          ).

        IF entregastranspor_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregastranspor_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
      WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
          posicionesentreg_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = posicionesentreg_get_entity
                         es_response_context = es_response_context
          ).

        IF posicionesentreg_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = posicionesentreg_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesDeepSet
*-------------------------------------------------------------------------*
      WHEN 'MensajesDeepSet'.
*     Call the entity set generated method
          mensajesdeepset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = mensajesdeepset_get_entity
                         es_response_context = es_response_context
          ).

        IF mensajesdeepset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = mensajesdeepset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
      WHEN 'TransportesSet'.
*     Call the entity set generated method
          transportesset_get_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = transportesset_get_entity
                         es_response_context = es_response_context
          ).

        IF transportesset_get_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = transportesset_get_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.

      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~get_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_ENTITYSET.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TMP_ENTITYSET_BASE
*&* This class has been generated on 17.05.2024 13:30:18 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_TRASLADOS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*
 DATA entregastranspor_get_entityset TYPE zcl_zsui5_cm_traslados_mpc=>tt_entregastransporte.
 DATA posicionesentreg_get_entityset TYPE zcl_zsui5_cm_traslados_mpc=>tt_posicionesentrega.
 DATA mensajesdeepset_get_entityset TYPE zcl_zsui5_cm_traslados_mpc=>tt_mensajesdeep.
 DATA transportesset_get_entityset TYPE zcl_zsui5_cm_traslados_mpc=>tt_transportes.
 DATA lv_entityset_name TYPE string.

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
   WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
      entregastranspor_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = entregastranspor_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = entregastranspor_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
   WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
      posicionesentreg_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = posicionesentreg_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = posicionesentreg_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  MensajesDeepSet
*-------------------------------------------------------------------------*
   WHEN 'MensajesDeepSet'.
*     Call the entity set generated method
      mensajesdeepset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = mensajesdeepset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = mensajesdeepset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
   WHEN 'TransportesSet'.
*     Call the entity set generated method
      transportesset_get_entityset(
        EXPORTING
         iv_entity_name = iv_entity_name
         iv_entity_set_name = iv_entity_set_name
         iv_source_name = iv_source_name
         it_filter_select_options = it_filter_select_options
         it_order = it_order
         is_paging = is_paging
         it_navigation_path = it_navigation_path
         it_key_tab = it_key_tab
         iv_filter_string = iv_filter_string
         iv_search_string = iv_search_string
         io_tech_request_context = io_tech_request_context
       IMPORTING
         et_entityset = transportesset_get_entityset
         es_response_context = es_response_context
       ).
*     Send specific entity data to the caller interface
      copy_data_to_ref(
        EXPORTING
          is_data = transportesset_get_entityset
        CHANGING
          cr_data = er_entityset
      ).

    WHEN OTHERS.
      super->/iwbep/if_mgw_appl_srv_runtime~get_entityset(
        EXPORTING
          iv_entity_name = iv_entity_name
          iv_entity_set_name = iv_entity_set_name
          iv_source_name = iv_source_name
          it_filter_select_options = it_filter_select_options
          it_order = it_order
          is_paging = is_paging
          it_navigation_path = it_navigation_path
          it_key_tab = it_key_tab
          iv_filter_string = iv_filter_string
          iv_search_string = iv_search_string
          io_tech_request_context = io_tech_request_context
       IMPORTING
         er_entityset = er_entityset ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~UPDATE_ENTITY.
*&----------------------------------------------------------------------------------------------*
*&  Include           /IWBEP/DPC_TEMP_UPD_ENTITY_BASE
*&* This class has been generated on 17.05.2024 13:30:18 in client 100
*&*
*&*       WARNING--> NEVER MODIFY THIS CLASS <--WARNING
*&*   If you want to change the DPC implementation, use the
*&*   generated methods inside the DPC provider subclass - ZCL_ZSUI5_CM_TRASLADOS_DPC_EXT
*&-----------------------------------------------------------------------------------------------*

 DATA entregastranspor_update_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_entregastransporte.
 DATA posicionesentreg_update_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_posicionesentrega.
 DATA mensajesdeepset_update_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_mensajesdeep.
 DATA transportesset_update_entity TYPE zcl_zsui5_cm_traslados_mpc=>ts_transportes.
 DATA lv_entityset_name TYPE string.
 DATA lr_entity TYPE REF TO data. "#EC NEEDED

lv_entityset_name = io_tech_request_context->get_entity_set_name( ).

CASE lv_entityset_name.
*-------------------------------------------------------------------------*
*             EntitySet -  EntregasTransporteSet
*-------------------------------------------------------------------------*
      WHEN 'EntregasTransporteSet'.
*     Call the entity set generated method
          entregastranspor_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = entregastranspor_update_entity
          ).
       IF entregastranspor_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = entregastranspor_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  PosicionesEntregaSet
*-------------------------------------------------------------------------*
      WHEN 'PosicionesEntregaSet'.
*     Call the entity set generated method
          posicionesentreg_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = posicionesentreg_update_entity
          ).
       IF posicionesentreg_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = posicionesentreg_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  MensajesDeepSet
*-------------------------------------------------------------------------*
      WHEN 'MensajesDeepSet'.
*     Call the entity set generated method
          mensajesdeepset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = mensajesdeepset_update_entity
          ).
       IF mensajesdeepset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = mensajesdeepset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
*-------------------------------------------------------------------------*
*             EntitySet -  TransportesSet
*-------------------------------------------------------------------------*
      WHEN 'TransportesSet'.
*     Call the entity set generated method
          transportesset_update_entity(
               EXPORTING iv_entity_name     = iv_entity_name
                         iv_entity_set_name = iv_entity_set_name
                         iv_source_name     = iv_source_name
                         io_data_provider   = io_data_provider
                         it_key_tab         = it_key_tab
                         it_navigation_path = it_navigation_path
                         io_tech_request_context = io_tech_request_context
               IMPORTING er_entity          = transportesset_update_entity
          ).
       IF transportesset_update_entity IS NOT INITIAL.
*     Send specific entity data to the caller interface
          copy_data_to_ref(
            EXPORTING
              is_data = transportesset_update_entity
            CHANGING
              cr_data = er_entity
          ).
        ELSE.
*         In case of initial values - unbind the entity reference
          er_entity = lr_entity.
        ENDIF.
      WHEN OTHERS.
        super->/iwbep/if_mgw_appl_srv_runtime~update_entity(
           EXPORTING
             iv_entity_name = iv_entity_name
             iv_entity_set_name = iv_entity_set_name
             iv_source_name = iv_source_name
             io_data_provider   = io_data_provider
             it_key_tab = it_key_tab
             it_navigation_path = it_navigation_path
          IMPORTING
            er_entity = er_entity
    ).
 ENDCASE.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~COMMIT_WORK.
* Call RFC commit work functionality
DATA lt_message      TYPE bapiret2. "#EC NEEDED
DATA lv_message_text TYPE BAPI_MSG.
DATA lo_logger       TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_subrc        TYPE syst-subrc.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

  IF iv_rfc_dest IS INITIAL OR iv_rfc_dest EQ 'NONE'.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
      wait   = abap_true
    IMPORTING
      return = lt_message.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      DESTINATION iv_rfc_dest
    EXPORTING
      wait                  = abap_true
    IMPORTING
      return                = lt_message
    EXCEPTIONS
      communication_failure = 1000 MESSAGE lv_message_text
      system_failure        = 1001 MESSAGE lv_message_text
      OTHERS                = 1002.

  IF sy-subrc <> 0.
    lv_subrc = sy-subrc.
    /iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
        EXPORTING
          iv_subrc            = lv_subrc
          iv_exp_message_text = lv_message_text
          io_logger           = lo_logger ).
  ENDIF.
  ENDIF.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~GET_GENERATION_STRATEGY.
* Get generation strategy
  rv_generation_strategy = '1'.
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~LOG_MESSAGE.
* Log message in the application log
DATA lo_logger TYPE REF TO /iwbep/cl_cos_logger.
DATA lv_text TYPE /iwbep/sup_msg_longtext.

  MESSAGE ID iv_msg_id TYPE iv_msg_type NUMBER iv_msg_number
    WITH iv_msg_v1 iv_msg_v2 iv_msg_v3 iv_msg_v4 INTO lv_text.

  lo_logger = mo_context->get_logger( ).
  lo_logger->log_message(
    EXPORTING
     iv_msg_type   = iv_msg_type
     iv_msg_id     = iv_msg_id
     iv_msg_number = iv_msg_number
     iv_msg_text   = lv_text
     iv_msg_v1     = iv_msg_v1
     iv_msg_v2     = iv_msg_v2
     iv_msg_v3     = iv_msg_v3
     iv_msg_v4     = iv_msg_v4
     iv_agent      = 'DPC' ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_EXCEPTION_HANDLING.
* RFC call exception handling
DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.

lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).

/iwbep/cl_sb_gen_dpc_rt_util=>rfc_exception_handling(
  EXPORTING
    iv_subrc            = iv_subrc
    iv_exp_message_text = iv_exp_message_text
    io_logger           = lo_logger ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~RFC_SAVE_LOG.
  DATA lo_logger  TYPE REF TO /iwbep/cl_cos_logger.
  DATA lo_message_container TYPE REF TO /iwbep/if_message_container.

  lo_logger = /iwbep/if_mgw_conv_srv_runtime~get_logger( ).
  lo_message_container = /iwbep/if_mgw_conv_srv_runtime~get_message_container( ).

  " Save the RFC call log in the application log
  /iwbep/cl_sb_gen_dpc_rt_util=>rfc_save_log(
    EXPORTING
      is_return            = is_return
      iv_entity_type       = iv_entity_type
      it_return            = it_return
      it_key_tab           = it_key_tab
      io_logger            = lo_logger
      io_message_container = lo_message_container ).
  endmethod.
  method /IWBEP/IF_SB_DPC_COMM_SERVICES~SET_INJECTION.
* Unit test injection
  IF io_unit IS BOUND.
    mo_injection = io_unit.
  ELSE.
    mo_injection = me.
  ENDIF.
  endmethod.
  method CHECK_SUBSCRIPTION_AUTHORITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'CHECK_SUBSCRIPTION_AUTHORITY'.
  endmethod.
  method ENTREGASTRANSPOR_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGASTRANSPOR_CREATE_ENTITY'.
  endmethod.
  method ENTREGASTRANSPOR_DELETE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_eliminar_ent_tra1=>lgort_d.
 DATA i_entrega TYPE zif_zui5_cm_eliminar_ent_tra1=>vbeln_vl.
 DATA i_transporte TYPE zif_zui5_cm_eliminar_ent_tra1=>tknum.
 DATA o_return  TYPE zif_zui5_cm_eliminar_ent_tra1=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_eliminar_ent_tra1=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys TYPE zcl_zsui5_cm_traslados_mpc=>ts_entregastransporte.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

* Maps key fields to function module parameters

 i_entrega = ls_converted_keys-vbeln.
 i_transporte = ls_converted_keys-tknum.
 i_almacen_montaje = ls_converted_keys-almacen_montaje.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_ELIMINAR_ENT_TRANS_TRA'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_entrega         = i_entrega
           i_transporte      = i_transporte
           i_almacen_montaje = i_almacen_montaje
         IMPORTING
           o_return          = o_return
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_entrega             = i_entrega
       i_transporte          = i_transporte
       i_almacen_montaje     = i_almacen_montaje
     IMPORTING
       o_return              = o_return
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
  endmethod.
  method ENTREGASTRANSPOR_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_get_entregas_trasl=>lgort_d.
 DATA i_tknum TYPE zif_zui5_cm_get_entregas_trasl=>tknum.
 DATA i_vbeln TYPE zif_zui5_cm_get_entregas_trasl=>vbeln_vl.
 DATA o_data  TYPE zif_zui5_cm_get_entregas_trasl=>zsuitt_cm_entregas_traslados.
 DATA o_return  TYPE zif_zui5_cm_get_entregas_trasl=>bapiret2_t.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>zsuitt_cm_entregas_traslados.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'EntregasTransporteSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_tknum = ls_converted_keys-tknum.
 i_vbeln = ls_converted_keys-vbeln.
 i_almacen_montaje = ls_converted_keys-almacen_montaje.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ENTREGAS_TRASLADO'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_tknum           = i_tknum
           i_vbeln           = i_vbeln
           i_almacen_montaje = i_almacen_montaje
         IMPORTING
           o_return          = o_return
           o_data            = o_data
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_tknum               = i_tknum
       i_vbeln               = i_vbeln
       i_almacen_montaje     = i_almacen_montaje
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE o_data INTO ls_o_data INDEX 1.
 er_entity-almacen_montaje = ls_o_data-almacen_montaje.
 er_entity-erdat = ls_o_data-erdat.
 er_entity-estado_ee_desc = ls_o_data-estado_ee_desc.
 er_entity-estado_ee = ls_o_data-estado_ee.
 er_entity-vbeln_entrante = ls_o_data-vbeln_entrante.
 er_entity-tknum = ls_o_data-tknum.
 er_entity-vbeln = ls_o_data-vbeln.
 er_entity-ekgrp_name = ls_o_data-ekgrp_name.
 er_entity-ebeln = ls_o_data-ebeln.
 er_entity-wadat = ls_o_data-wadat.
 er_entity-ekgrp = ls_o_data-ekgrp.
 er_entity-lgort_dest = ls_o_data-lgort_dest.
 er_entity-lgort_dest_name = ls_o_data-lgort_dest_name.
  endmethod.
  method ENTREGASTRANSPOR_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_fecha  TYPE zif_zui5_cm_get_entregas_trasl=>date_t_range.
 DATA ir_tknum  TYPE zif_zui5_cm_get_entregas_trasl=>shp_tknum_range_t.
 DATA ir_vbeln  TYPE zif_zui5_cm_get_entregas_trasl=>/eby/_lbapidlv_range_vbeln.
 DATA o_data  TYPE zif_zui5_cm_get_entregas_trasl=>zsuitt_cm_entregas_traslados.
 DATA o_return  TYPE zif_zui5_cm_get_entregas_trasl=>bapiret2_t.
 DATA ls_ir_fecha  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>date_t_range.
 DATA ls_ir_tknum  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>shp_tknum_range_t.
 DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>/eby/_lbapidlv_range_vbeln.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>zsuitt_cm_entregas_traslados.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_entregas_trasl=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lv_source_entity_set_name TYPE string.
 DATA transportesset_get_entityset TYPE LINE OF zcl_zsui5_cm_traslados_mpc=>tt_transportes.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lr_vbeln LIKE RANGE OF ls_converted_keys-vbeln.
 DATA ls_vbeln LIKE LINE OF lr_vbeln.
 DATA lr_wadat LIKE RANGE OF ls_converted_keys-wadat.
 DATA ls_wadat LIKE LINE OF lr_wadat.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps key fields to function module parameters
 IF it_key_tab IS NOT INITIAL.

   lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

   IF  lv_source_entity_set_name = 'TransportesSet'.
     " Convert keys to appropriate entity set structure
     io_tech_request_context->get_converted_source_keys(
       IMPORTING
         es_key_values  = transportesset_get_entityset ).
     ls_ir_tknum-low = transportesset_get_entityset-tknum. " Equivalent to 'Tknum' property in the service
     ls_ir_tknum-option = 'EQ'.
     ls_ir_tknum-sign = 'I'.
     APPEND ls_ir_tknum TO ir_tknum.

   ENDIF.

 ENDIF.

 IF it_filter_select_options IS NOT INITIAL.

* Maps filter table lines to function module parameters
   LOOP AT lt_filter_select_options INTO ls_filter.

     CASE ls_filter-property.
       WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_tknum ).

         LOOP AT lr_tknum INTO ls_tknum.
           ls_ir_tknum-high = ls_tknum-high.
           ls_ir_tknum-low = ls_tknum-low.
           ls_ir_tknum-option = ls_tknum-option.
           ls_ir_tknum-sign = ls_tknum-sign.
           APPEND ls_ir_tknum TO ir_tknum.
         ENDLOOP.
         CLEAR lr_tknum.
       WHEN 'VBELN'.              " Equivalent to 'Vbeln' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_vbeln ).

         LOOP AT lr_vbeln INTO ls_vbeln.
           ls_ir_vbeln-deliv_numb_high = ls_vbeln-high.
           ls_ir_vbeln-deliv_numb_low = ls_vbeln-low.
           ls_ir_vbeln-option = ls_vbeln-option.
           ls_ir_vbeln-sign = ls_vbeln-sign.
           APPEND ls_ir_vbeln TO ir_vbeln.
         ENDLOOP.
         CLEAR lr_vbeln.
       WHEN 'WADAT'.              " Equivalent to 'Wadat' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_wadat ).

         LOOP AT lr_wadat INTO ls_wadat.
           ls_ir_fecha-high = ls_wadat-high.
           ls_ir_fecha-low = ls_wadat-low.
           ls_ir_fecha-option = ls_wadat-option.
           ls_ir_fecha-sign = ls_wadat-sign.
           APPEND ls_ir_fecha TO ir_fecha.
         ENDLOOP.
         CLEAR lr_wadat.

       WHEN OTHERS.
         " Log message in the application log
         me->/iwbep/if_sb_dpc_comm_services~log_message(
           EXPORTING
             iv_msg_type   = 'E'
             iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
             iv_msg_number = 020
             iv_msg_v1     = ls_filter-property ).
         " Raise Exception
         RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
           EXPORTING
             textid = /iwbep/cx_mgw_tech_exception=>internal_error.
     ENDCASE.

   ENDLOOP.

 ENDIF.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_ENTREGAS_TRASLADO'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_tknum       = ir_tknum
           ir_vbeln       = ir_vbeln
           ir_fecha       = ir_fecha
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_tknum              = ir_tknum
       ir_vbeln              = ir_vbeln
       ir_fecha              = ir_fecha
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-almacen_montaje = ls_o_data-almacen_montaje.
   ls_gw_o_data-tknum = ls_o_data-tknum.
   ls_gw_o_data-vbeln = ls_o_data-vbeln.
   ls_gw_o_data-lgort_dest = ls_o_data-lgort_dest.
   ls_gw_o_data-lgort_dest_name = ls_o_data-lgort_dest_name.
   ls_gw_o_data-wadat = ls_o_data-wadat.
   ls_gw_o_data-ekgrp = ls_o_data-ekgrp.
   ls_gw_o_data-ekgrp_name = ls_o_data-ekgrp_name.
   ls_gw_o_data-ebeln = ls_o_data-ebeln.
   ls_gw_o_data-erdat = ls_o_data-erdat.
   ls_gw_o_data-vbeln_entrante = ls_o_data-vbeln_entrante.
   ls_gw_o_data-estado_ee = ls_o_data-estado_ee.
   ls_gw_o_data-estado_ee_desc = ls_o_data-estado_ee_desc.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method ENTREGASTRANSPOR_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'ENTREGASTRANSPOR_UPDATE_ENTITY'.
  endmethod.
  method MENSAJESDEEPSET_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESDEEPSET_CREATE_ENTITY'.
  endmethod.
  method MENSAJESDEEPSET_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESDEEPSET_DELETE_ENTITY'.
  endmethod.
  method MENSAJESDEEPSET_GET_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESDEEPSET_GET_ENTITY'.
  endmethod.
  method MENSAJESDEEPSET_GET_ENTITYSET.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESDEEPSET_GET_ENTITYSET'.
  endmethod.
  method MENSAJESDEEPSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'MENSAJESDEEPSET_UPDATE_ENTITY'.
  endmethod.
  method POSICIONESENTREG_CREATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'POSICIONESENTREG_CREATE_ENTITY'.
  endmethod.
  method POSICIONESENTREG_DELETE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'POSICIONESENTREG_DELETE_ENTITY'.
  endmethod.
  method POSICIONESENTREG_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_posnr TYPE zif_zui5_cm_get_pos_entregas_t=>posnr_vl.
 DATA i_tknum TYPE zif_zui5_cm_get_pos_entregas_t=>tknum.
 DATA i_vbeln TYPE zif_zui5_cm_get_pos_entregas_t=>vbeln_vl.
 DATA o_data  TYPE zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_posiciones_ent_trasl.
 DATA o_return  TYPE zif_zui5_cm_get_pos_entregas_t=>bapiret2_t.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_posiciones_ent_trasl.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'PosicionesEntregaSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_posnr = ls_converted_keys-posnr.
 i_vbeln = ls_converted_keys-vbeln.
 i_tknum = ls_converted_keys-tknum.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_POS_ENTREGAS_TRAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_posnr        = i_posnr
           i_vbeln        = i_vbeln
           i_tknum        = i_tknum
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_posnr               = i_posnr
       i_vbeln               = i_vbeln
       i_tknum               = i_tknum
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE o_data INTO ls_o_data INDEX 1.
 er_entity-hsdat = ls_o_data-hsdat.
 er_entity-posnr = ls_o_data-posnr.
 er_entity-vbeln = ls_o_data-vbeln.
 er_entity-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
 er_entity-tknum = ls_o_data-tknum.
 er_entity-dimensiones = ls_o_data-dimensiones.
 er_entity-cajas_pallets = ls_o_data-cajas_pallets.
 er_entity-num_pallets = ls_o_data-num_pallets.
 er_entity-tipo_pallet = ls_o_data-tipo_pallet.
 er_entity-ebelp = ls_o_data-ebelp.
 er_entity-ebeln = ls_o_data-ebeln.
 er_entity-meins = ls_o_data-meins.
 er_entity-lfimg = ls_o_data-lfimg.
 er_entity-charg = ls_o_data-charg.
 er_entity-status_text = ls_o_data-status_text.
 er_entity-status_lote = ls_o_data-status_lote.
 er_entity-alto_uom = ls_o_data-alto_uom.
 er_entity-alto = ls_o_data-alto.
 er_entity-ancho_uom = ls_o_data-ancho_uom.
 er_entity-ancho = ls_o_data-ancho.
 er_entity-largo_uom = ls_o_data-largo_uom.
 er_entity-largo = ls_o_data-largo.
 er_entity-lgort = ls_o_data-lgort.
 er_entity-werks = ls_o_data-werks.
 er_entity-maktx = ls_o_data-maktx.
 er_entity-matnr = ls_o_data-matnr.
  endmethod.
  method POSICIONESENTREG_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA ir_alto  TYPE zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_dimensiones_range.
 DATA ir_ancho  TYPE zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_dimensiones_range.
 DATA ir_largo  TYPE zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_dimensiones_range.
 DATA ir_lote  TYPE zif_zui5_cm_get_pos_entregas_t=>ranges_charg_tt.
 DATA ir_maktx  TYPE zif_zui5_cm_get_pos_entregas_t=>fip_t_maktx_range.
 DATA ir_matnr  TYPE zif_zui5_cm_get_pos_entregas_t=>ranges_matnr_tt.
 DATA ir_tknum  TYPE zif_zui5_cm_get_pos_entregas_t=>shp_tknum_range_t.
 DATA ir_vbeln  TYPE zif_zui5_cm_get_pos_entregas_t=>/eby/_lbapidlv_range_vbeln.
 DATA o_data  TYPE zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_posiciones_ent_trasl.
 DATA o_return  TYPE zif_zui5_cm_get_pos_entregas_t=>bapiret2_t.
 DATA ls_ir_alto  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_ancho  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_largo  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_dimensiones_range.
 DATA ls_ir_lote  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>ranges_charg_tt.
 DATA ls_ir_maktx  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>fip_t_maktx_range.
 DATA ls_ir_matnr  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>ranges_matnr_tt.
 DATA ls_ir_tknum  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>shp_tknum_range_t.
 DATA ls_ir_vbeln  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>/eby/_lbapidlv_range_vbeln.
 DATA ls_o_data  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>zsuitt_cm_posiciones_ent_trasl.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_get_pos_entregas_t=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA lv_source_entity_set_name TYPE string.
 DATA entregastranspor_get_entityset TYPE LINE OF zcl_zsui5_cm_traslados_mpc=>tt_entregastransporte.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_charg LIKE RANGE OF ls_converted_keys-charg.
 DATA ls_charg LIKE LINE OF lr_charg.
 DATA lr_alto LIKE RANGE OF ls_converted_keys-alto.
 DATA ls_alto LIKE LINE OF lr_alto.
 DATA lr_ancho LIKE RANGE OF ls_converted_keys-ancho.
 DATA ls_ancho LIKE LINE OF lr_ancho.
 DATA lr_largo LIKE RANGE OF ls_converted_keys-largo.
 DATA ls_largo LIKE LINE OF lr_largo.
 DATA lr_matnr LIKE RANGE OF ls_converted_keys-matnr.
 DATA ls_matnr LIKE LINE OF lr_matnr.
 DATA lr_maktx LIKE RANGE OF ls_converted_keys-maktx.
 DATA ls_maktx LIKE LINE OF lr_maktx.
 DATA lr_vbeln LIKE RANGE OF ls_converted_keys-vbeln.
 DATA ls_vbeln LIKE LINE OF lr_vbeln.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_o_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps key fields to function module parameters
 IF it_key_tab IS NOT INITIAL.

   lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

   IF  lv_source_entity_set_name = 'EntregasTransporteSet'.
     " Convert keys to appropriate entity set structure
     io_tech_request_context->get_converted_source_keys(
       IMPORTING
         es_key_values  = entregastranspor_get_entityset ).
     ls_ir_tknum-low = entregastranspor_get_entityset-tknum. " Equivalent to 'Tknum' property in the service
     ls_ir_tknum-option = 'EQ'.
     ls_ir_tknum-sign = 'I'.
     APPEND ls_ir_tknum TO ir_tknum.

     ls_ir_vbeln-deliv_numb_low = entregastranspor_get_entityset-vbeln. " Equivalent to 'Vbeln' property in the service
     ls_ir_vbeln-option = 'EQ'.
     ls_ir_vbeln-sign = 'I'.
     APPEND ls_ir_vbeln TO ir_vbeln.

   ENDIF.

 ENDIF.

 IF it_filter_select_options IS NOT INITIAL.

* Maps filter table lines to function module parameters
   LOOP AT lt_filter_select_options INTO ls_filter.

     CASE ls_filter-property.
       WHEN 'CHARG'.              " Equivalent to 'Charg' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_charg ).

         LOOP AT lr_charg INTO ls_charg.
           ls_ir_lote-high = ls_charg-high.
           ls_ir_lote-low = ls_charg-low.
           ls_ir_lote-option = ls_charg-option.
           ls_ir_lote-sign = ls_charg-sign.
           APPEND ls_ir_lote TO ir_lote.
         ENDLOOP.
         CLEAR lr_charg.
       WHEN 'ALTO'.              " Equivalent to 'Alto' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_alto ).

         LOOP AT lr_alto INTO ls_alto.
           ls_ir_alto-high = ls_alto-high.
           ls_ir_alto-low = ls_alto-low.
           ls_ir_alto-option = ls_alto-option.
           ls_ir_alto-sign = ls_alto-sign.
           APPEND ls_ir_alto TO ir_alto.
         ENDLOOP.
         CLEAR lr_alto.
       WHEN 'ANCHO'.              " Equivalent to 'Ancho' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_ancho ).

         LOOP AT lr_ancho INTO ls_ancho.
           ls_ir_ancho-high = ls_ancho-high.
           ls_ir_ancho-low = ls_ancho-low.
           ls_ir_ancho-option = ls_ancho-option.
           ls_ir_ancho-sign = ls_ancho-sign.
           APPEND ls_ir_ancho TO ir_ancho.
         ENDLOOP.
         CLEAR lr_ancho.
       WHEN 'LARGO'.              " Equivalent to 'Largo' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_largo ).

         LOOP AT lr_largo INTO ls_largo.
           ls_ir_largo-high = ls_largo-high.
           ls_ir_largo-low = ls_largo-low.
           ls_ir_largo-option = ls_largo-option.
           ls_ir_largo-sign = ls_largo-sign.
           APPEND ls_ir_largo TO ir_largo.
         ENDLOOP.
         CLEAR lr_largo.
       WHEN 'MATNR'.              " Equivalent to 'Matnr' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_matnr ).

         LOOP AT lr_matnr INTO ls_matnr.
           ls_ir_matnr-high = ls_matnr-high.
           ls_ir_matnr-low = ls_matnr-low.
           ls_ir_matnr-option = ls_matnr-option.
           ls_ir_matnr-sign = ls_matnr-sign.
           APPEND ls_ir_matnr TO ir_matnr.
         ENDLOOP.
         CLEAR lr_matnr.
       WHEN 'MAKTX'.              " Equivalent to 'Maktx' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_maktx ).

         LOOP AT lr_maktx INTO ls_maktx.
           ls_ir_maktx-high = ls_maktx-high.
           ls_ir_maktx-low = ls_maktx-low.
           ls_ir_maktx-option = ls_maktx-option.
           ls_ir_maktx-sign = ls_maktx-sign.
           APPEND ls_ir_maktx TO ir_maktx.
         ENDLOOP.
         CLEAR lr_maktx.
       WHEN 'VBELN'.              " Equivalent to 'Vbeln' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_vbeln ).

         LOOP AT lr_vbeln INTO ls_vbeln.
           ls_ir_vbeln-deliv_numb_high = ls_vbeln-high.
           ls_ir_vbeln-deliv_numb_low = ls_vbeln-low.
           ls_ir_vbeln-option = ls_vbeln-option.
           ls_ir_vbeln-sign = ls_vbeln-sign.
           APPEND ls_ir_vbeln TO ir_vbeln.
         ENDLOOP.
         CLEAR lr_vbeln.
       WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
         lo_filter->convert_select_option(
           EXPORTING
             is_select_option = ls_filter
           IMPORTING
             et_select_option = lr_tknum ).

         LOOP AT lr_tknum INTO ls_tknum.
           ls_ir_tknum-high = ls_tknum-high.
           ls_ir_tknum-low = ls_tknum-low.
           ls_ir_tknum-option = ls_tknum-option.
           ls_ir_tknum-sign = ls_tknum-sign.
           APPEND ls_ir_tknum TO ir_tknum.
         ENDLOOP.
         CLEAR lr_tknum.

       WHEN OTHERS.
         " Log message in the application log
         me->/iwbep/if_sb_dpc_comm_services~log_message(
           EXPORTING
             iv_msg_type   = 'E'
             iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
             iv_msg_number = 020
             iv_msg_v1     = ls_filter-property ).
         " Raise Exception
         RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
           EXPORTING
             textid = /iwbep/cx_mgw_tech_exception=>internal_error.
     ENDCASE.

   ENDLOOP.

 ENDIF.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_POS_ENTREGAS_TRAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_lote        = ir_lote
           ir_alto        = ir_alto
           ir_ancho       = ir_ancho
           ir_largo       = ir_largo
           ir_matnr       = ir_matnr
           ir_maktx       = ir_maktx
           ir_vbeln       = ir_vbeln
           ir_tknum       = ir_tknum
         IMPORTING
           o_return       = o_return
           o_data         = o_data
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_lote               = ir_lote
       ir_alto               = ir_alto
       ir_ancho              = ir_ancho
       ir_largo              = ir_largo
       ir_matnr              = ir_matnr
       ir_maktx              = ir_maktx
       ir_vbeln              = ir_vbeln
       ir_tknum              = ir_tknum
     IMPORTING
       o_return              = o_return
       o_data                = o_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( o_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT o_data INTO ls_o_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_o_data-hsdat = ls_o_data-hsdat.
   ls_gw_o_data-alto = ls_o_data-alto.
   ls_gw_o_data-ancho = ls_o_data-ancho.
   ls_gw_o_data-largo = ls_o_data-largo.
   ls_gw_o_data-maktx = ls_o_data-maktx.
   ls_gw_o_data-matnr = ls_o_data-matnr.
   ls_gw_o_data-vbeln = ls_o_data-vbeln.
   ls_gw_o_data-tknum = ls_o_data-tknum.
   ls_gw_o_data-txt_tipo_pallet = ls_o_data-txt_tipo_pallet.
   ls_gw_o_data-dimensiones = ls_o_data-dimensiones.
   ls_gw_o_data-cajas_pallets = ls_o_data-cajas_pallets.
   ls_gw_o_data-num_pallets = ls_o_data-num_pallets.
   ls_gw_o_data-tipo_pallet = ls_o_data-tipo_pallet.
   ls_gw_o_data-ebelp = ls_o_data-ebelp.
   ls_gw_o_data-ebeln = ls_o_data-ebeln.
   ls_gw_o_data-meins = ls_o_data-meins.
   ls_gw_o_data-lfimg = ls_o_data-lfimg.
   ls_gw_o_data-status_lote = ls_o_data-status_lote.
   ls_gw_o_data-status_text = ls_o_data-status_text.
   ls_gw_o_data-alto_uom = ls_o_data-alto_uom.
   ls_gw_o_data-ancho_uom = ls_o_data-ancho_uom.
   ls_gw_o_data-largo_uom = ls_o_data-largo_uom.
   ls_gw_o_data-werks = ls_o_data-werks.
   ls_gw_o_data-lgort = ls_o_data-lgort.
   ls_gw_o_data-posnr = ls_o_data-posnr.
   APPEND ls_gw_o_data TO et_entityset.
   CLEAR ls_gw_o_data.
 ENDLOOP.

  endmethod.
  method POSICIONESENTREG_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'POSICIONESENTREG_UPDATE_ENTITY'.
  endmethod.
  method TRANSPORTESSET_CREATE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_transporte TYPE zif_zui5_cm_crear_transporte_t=>zsuis_cm_get_transportes.
 DATA o_return  TYPE zif_zui5_cm_crear_transporte_t=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_crear_transporte_t=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_request_input_data TYPE zcl_zsui5_cm_traslados_mpc=>ts_transportes.
 DATA ls_entity TYPE REF TO data.
 DATA lo_tech_read_request_context TYPE REF TO /iwbep/cl_sb_gen_read_aftr_crt.
 DATA ls_key TYPE /iwbep/s_mgw_tech_pair.
 DATA lt_keys TYPE /iwbep/t_mgw_tech_pairs.
 DATA lv_entityset_name TYPE string.
 DATA lv_entity_name TYPE string.
 FIELD-SYMBOLS: <ls_data> TYPE any.
 DATA ls_converted_keys LIKE er_entity.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get request input data
 io_data_provider->read_entry_data( IMPORTING es_data = ls_request_input_data ).

* Map request input fields to function module parameters
 i_transporte-telefono = ls_request_input_data-telefono.
 i_transporte-remolque = ls_request_input_data-remolque.
 i_transporte-lgort = ls_request_input_data-lgort.
 i_transporte-werks = ls_request_input_data-werks.
 i_transporte-almacen_montaje = ls_request_input_data-almacen_montaje.
 i_transporte-centro_montaje = ls_request_input_data-centro_montaje.
 i_transporte-borrable = ls_request_input_data-borrable.
 i_transporte-editable = ls_request_input_data-editable.
 i_transporte-route_name = ls_request_input_data-route_name.
 i_transporte-route = ls_request_input_data-route.
 i_transporte-kunwe_name = ls_request_input_data-kunwe_name.
 i_transporte-kunwe = ls_request_input_data-kunwe.
 i_transporte-erdat = ls_request_input_data-erdat.
 i_transporte-sttrg_name = ls_request_input_data-sttrg_name.
 i_transporte-sttrg = ls_request_input_data-sttrg.
 i_transporte-signi = ls_request_input_data-signi.
 i_transporte-zzconductor_name = ls_request_input_data-zzconductor_name.
 i_transporte-zzconductor = ls_request_input_data-zzconductor.
 i_transporte-tdlnr_name = ls_request_input_data-tdlnr_name.
 i_transporte-tdlnr = ls_request_input_data-tdlnr.
 i_transporte-tknum = ls_request_input_data-tknum.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_CREAR_TRANSPORTE_TRASL'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_transporte   = i_transporte
         IMPORTING
           o_return       = o_return
         EXCEPTIONS
           system_failure = 1000 message lv_exc_msg
           OTHERS         = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_transporte          = i_transporte
     IMPORTING
       o_return              = o_return
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
*-------------------------------------------------------------------------*
*             - Read After Create -
*-------------------------------------------------------------------------*
 CREATE OBJECT lo_tech_read_request_context.

* Create key table for the read operation

 ls_key-name = 'ALMACEN_MONTAJE'.
 ls_key-value = i_transporte-almacen_montaje.
 IF ls_key IS NOT INITIAL.
   APPEND ls_key TO lt_keys.
 ENDIF.

 ls_key-name = 'TKNUM'.
 ls_key-value = i_transporte-tknum.
 IF ls_key IS NOT INITIAL.
   APPEND ls_key TO lt_keys.
 ENDIF.

* Set into request context object the key table and the entity set name
 lo_tech_read_request_context->set_keys( EXPORTING  it_keys = lt_keys ).
 lv_entityset_name = io_tech_request_context->get_entity_set_name( ).
 lo_tech_read_request_context->set_entityset_name( EXPORTING iv_entityset_name = lv_entityset_name ).
 lv_entity_name = io_tech_request_context->get_entity_type_name( ).
 lo_tech_read_request_context->set_entity_type_name( EXPORTING iv_entity_name = lv_entity_name ).

* Call read after create
 /iwbep/if_mgw_appl_srv_runtime~get_entity(
   EXPORTING
     iv_entity_name     = iv_entity_name
     iv_entity_set_name = iv_entity_set_name
     iv_source_name     = iv_source_name
     it_key_tab         = it_key_tab
     io_tech_request_context = lo_tech_read_request_context
     it_navigation_path = it_navigation_path
   IMPORTING
     er_entity          = ls_entity ).

* Send the read response to the caller interface
 ASSIGN ls_entity->* TO <ls_data>.
 er_entity = <ls_data>.
  endmethod.
  method TRANSPORTESSET_DELETE_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_borrar_transporte_=>lgort_d.
 DATA i_transporte TYPE zif_zui5_cm_borrar_transporte_=>tknum.
 DATA o_return  TYPE zif_zui5_cm_borrar_transporte_=>bapiret2_t.
 DATA ls_o_return  TYPE LINE OF zif_zui5_cm_borrar_transporte_=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys TYPE zcl_zsui5_cm_traslados_mpc=>ts_transportes.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

* Maps key fields to function module parameters

 i_almacen_montaje = ls_converted_keys-almacen_montaje.
 i_transporte = ls_converted_keys-tknum.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_BORRAR_TRANSPORTE_TRAS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_almacen_montaje = i_almacen_montaje
           i_transporte      = i_transporte
         IMPORTING
           o_return          = o_return
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_almacen_montaje     = i_almacen_montaje
       i_transporte          = i_transporte
     IMPORTING
       o_return              = o_return
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF o_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = o_return
       it_key_tab     = it_key_tab ).
 ENDIF.

* Call RFC commit work
 me->/iwbep/if_sb_dpc_comm_services~commit_work(
        EXPORTING
          iv_rfc_dest = lv_destination
     ) .
  endmethod.
  method TRANSPORTESSET_GET_ENTITY.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA i_almacen_montaje TYPE zif_zui5_cm_get_trans_traslado=>lgort_d.
 DATA i_transporte TYPE zif_zui5_cm_get_trans_traslado=>tknum.
 DATA e_data  TYPE zif_zui5_cm_get_trans_traslado=>zsuitt_cm_get_transportes.
 DATA e_return  TYPE zif_zui5_cm_get_trans_traslado=>bapiret2_t.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuitt_cm_get_transportes.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>bapiret2_t.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA ls_converted_keys LIKE er_entity.
 DATA lv_source_entity_set_name TYPE string.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get key table information - for direct call
 io_tech_request_context->get_converted_keys(
   IMPORTING
     es_key_values = ls_converted_keys ).

* Maps key fields to function module parameters

 lv_source_entity_set_name = io_tech_request_context->get_source_entity_set_name( ).

 IF lv_source_entity_set_name = 'TransportesSet' AND
    lv_source_entity_set_name NE io_tech_request_context->get_entity_set_name( ).

   io_tech_request_context->get_converted_source_keys(
   IMPORTING es_key_values = ls_converted_keys ).

 ENDIF.

 i_almacen_montaje = ls_converted_keys-almacen_montaje.
 i_transporte = ls_converted_keys-tknum.
* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_TRANS_TRASLADOS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           i_almacen_montaje = i_almacen_montaje
           i_transporte      = i_transporte
         IMPORTING
           e_return          = e_return
           e_data            = e_data
         EXCEPTIONS
           system_failure    = 1000 message lv_exc_msg
           OTHERS            = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       i_almacen_montaje     = i_almacen_montaje
       i_transporte          = i_transporte
     IMPORTING
       e_return              = e_return
       e_data                = e_data
     EXCEPTIONS
       system_failure        = 1000 MESSAGE lv_exc_msg
       communication_failure = 1001 MESSAGE lv_exc_msg
       OTHERS                = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
* Map properties from the backend to the Gateway output response structure


* In GetEntity operation we support only read for the first entry in the response table

 READ TABLE e_data INTO ls_e_data INDEX 1.
 er_entity-telefono = ls_e_data-telefono.
 er_entity-remolque = ls_e_data-remolque.
 er_entity-tknum = ls_e_data-tknum.
 er_entity-lgort = ls_e_data-lgort.
 er_entity-werks = ls_e_data-werks.
 er_entity-almacen_montaje = ls_e_data-almacen_montaje.
 er_entity-centro_montaje = ls_e_data-centro_montaje.
 er_entity-borrable = ls_e_data-borrable.
 er_entity-editable = ls_e_data-editable.
 er_entity-route_name = ls_e_data-route_name.
 er_entity-route = ls_e_data-route.
 er_entity-kunwe_name = ls_e_data-kunwe_name.
 er_entity-kunwe = ls_e_data-kunwe.
 er_entity-erdat = ls_e_data-erdat.
 er_entity-sttrg_name = ls_e_data-sttrg_name.
 er_entity-sttrg = ls_e_data-sttrg.
 er_entity-signi = ls_e_data-signi.
 er_entity-zzconductor_name = ls_e_data-zzconductor_name.
 er_entity-zzconductor = ls_e_data-zzconductor.
 er_entity-tdlnr_name = ls_e_data-tdlnr_name.
 er_entity-tdlnr = ls_e_data-tdlnr.
  endmethod.
  method TRANSPORTESSET_GET_ENTITYSET.
*-------------------------------------------------------------
*  Data declaration
*-------------------------------------------------------------
 DATA e_data  TYPE zif_zui5_cm_get_trans_traslado=>zsuitt_cm_get_transportes.
 DATA e_return  TYPE zif_zui5_cm_get_trans_traslado=>bapiret2_t.
 DATA ir_conductor  TYPE zif_zui5_cm_get_trans_traslado=>zsuis_cm_zzconductor_rang.
 DATA ir_conductor_name  TYPE zif_zui5_cm_get_trans_traslado=>zsuis_cm_nombres_rang.
 DATA ir_destinatario  TYPE zif_zui5_cm_get_trans_traslado=>shp_kunwe_range_t.
 DATA ir_destinatario_nombre  TYPE zif_zui5_cm_get_trans_traslado=>zsuis_cm_nombres_rang.
 DATA ir_fecha_crea  TYPE zif_zui5_cm_get_trans_traslado=>date_t_range.
 DATA ir_lgort  TYPE zif_zui5_cm_get_trans_traslado=>range_t_lgort_d.
 DATA ir_matricula  TYPE zif_zui5_cm_get_trans_traslado=>isi_signi_ra.
 DATA ir_route  TYPE zif_zui5_cm_get_trans_traslado=>shp_route_range_t.
 DATA ir_route_name  TYPE zif_zui5_cm_get_trans_traslado=>zsui5tt_cm_name_route.
 DATA ir_status  TYPE zif_zui5_cm_get_trans_traslado=>zsuis_cm_status_trans_range.
 DATA ir_status_nombre  TYPE zif_zui5_cm_get_trans_traslado=>zsuis_cm_textos_dominio_rang.
 DATA ir_transporte  TYPE zif_zui5_cm_get_trans_traslado=>shp_tknum_range_t.
 DATA ir_transportista  TYPE zif_zui5_cm_get_trans_traslado=>md_range_t_lifnr.
 DATA ir_transportista_nombre  TYPE zif_zui5_cm_get_trans_traslado=>zsuis_cm_nombres_rang.
 DATA ir_werks  TYPE zif_zui5_cm_get_trans_traslado=>range_t_werks_d.
 DATA ls_e_data  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuitt_cm_get_transportes.
 DATA ls_e_return  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>bapiret2_t.
 DATA ls_ir_conductor  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuis_cm_zzconductor_rang.
 DATA ls_ir_conductor_name  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuis_cm_nombres_rang.
 DATA ls_ir_destinatario  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>shp_kunwe_range_t.
 DATA ls_ir_destinatario_nombre  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuis_cm_nombres_rang.
 DATA ls_ir_fecha_crea  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>date_t_range.
 DATA ls_ir_lgort  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>range_t_lgort_d.
 DATA ls_ir_matricula  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>isi_signi_ra.
 DATA ls_ir_route  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>shp_route_range_t.
 DATA ls_ir_route_name  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsui5tt_cm_name_route.
 DATA ls_ir_status  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuis_cm_status_trans_range.
 DATA ls_ir_status_nombre  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuis_cm_textos_dominio_rang.
 DATA ls_ir_transporte  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>shp_tknum_range_t.
 DATA ls_ir_transportista  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>md_range_t_lifnr.
 DATA ls_ir_transportista_nombre  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>zsuis_cm_nombres_rang.
 DATA ls_ir_werks  TYPE LINE OF zif_zui5_cm_get_trans_traslado=>range_t_werks_d.
 DATA lv_rfc_name TYPE tfdir-funcname.
 DATA lv_destination TYPE rfcdest.
 DATA lv_subrc TYPE syst-subrc.
 DATA lv_exc_msg TYPE /iwbep/mgw_bop_rfc_excep_text.
 DATA lx_root TYPE REF TO cx_root.
 DATA lo_filter TYPE  REF TO /iwbep/if_mgw_req_filter.
 DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
 DATA lv_filter_str TYPE string.
 DATA ls_paging TYPE /iwbep/s_mgw_paging.
 DATA ls_converted_keys LIKE LINE OF et_entityset.
 DATA ls_filter TYPE /iwbep/s_mgw_select_option.
 DATA ls_filter_range TYPE /iwbep/s_cod_select_option.
 DATA lr_lgort LIKE RANGE OF ls_converted_keys-lgort.
 DATA ls_lgort LIKE LINE OF lr_lgort.
 DATA lr_werks LIKE RANGE OF ls_converted_keys-werks.
 DATA ls_werks LIKE LINE OF lr_werks.
 DATA lr_almacen_montaje LIKE RANGE OF ls_converted_keys-almacen_montaje.
 DATA ls_almacen_montaje LIKE LINE OF lr_almacen_montaje.
 DATA lr_centro_montaje LIKE RANGE OF ls_converted_keys-centro_montaje.
 DATA ls_centro_montaje LIKE LINE OF lr_centro_montaje.
 DATA lr_route_name LIKE RANGE OF ls_converted_keys-route_name.
 DATA ls_route_name LIKE LINE OF lr_route_name.
 DATA lr_kunwe_name LIKE RANGE OF ls_converted_keys-kunwe_name.
 DATA ls_kunwe_name LIKE LINE OF lr_kunwe_name.
 DATA lr_route LIKE RANGE OF ls_converted_keys-route.
 DATA ls_route LIKE LINE OF lr_route.
 DATA lr_kunwe LIKE RANGE OF ls_converted_keys-kunwe.
 DATA ls_kunwe LIKE LINE OF lr_kunwe.
 DATA lr_erdat LIKE RANGE OF ls_converted_keys-erdat.
 DATA ls_erdat LIKE LINE OF lr_erdat.
 DATA lr_sttrg_name LIKE RANGE OF ls_converted_keys-sttrg_name.
 DATA ls_sttrg_name LIKE LINE OF lr_sttrg_name.
 DATA lr_sttrg LIKE RANGE OF ls_converted_keys-sttrg.
 DATA ls_sttrg LIKE LINE OF lr_sttrg.
 DATA lr_signi LIKE RANGE OF ls_converted_keys-signi.
 DATA ls_signi LIKE LINE OF lr_signi.
 DATA lr_zzconductor_name LIKE RANGE OF ls_converted_keys-zzconductor_name.
 DATA ls_zzconductor_name LIKE LINE OF lr_zzconductor_name.
 DATA lr_zzconductor LIKE RANGE OF ls_converted_keys-zzconductor.
 DATA ls_zzconductor LIKE LINE OF lr_zzconductor.
 DATA lr_tdlnr_name LIKE RANGE OF ls_converted_keys-tdlnr_name.
 DATA ls_tdlnr_name LIKE LINE OF lr_tdlnr_name.
 DATA lr_tdlnr LIKE RANGE OF ls_converted_keys-tdlnr.
 DATA ls_tdlnr LIKE LINE OF lr_tdlnr.
 DATA lr_tknum LIKE RANGE OF ls_converted_keys-tknum.
 DATA ls_tknum LIKE LINE OF lr_tknum.
 DATA lo_dp_facade TYPE REF TO /iwbep/if_mgw_dp_facade.
 DATA ls_gw_e_data LIKE LINE OF et_entityset.
 DATA lv_skip     TYPE int4.
 DATA lv_top      TYPE int4.

*-------------------------------------------------------------
*  Map the runtime request to the RFC - Only mapped attributes
*-------------------------------------------------------------
* Get all input information from the technical request context object
* Since DPC works with internal property names and runtime API interface holds external property names
* the process needs to get the all needed input information from the technical request context object
* Get filter or select option information
 lo_filter = io_tech_request_context->get_filter( ).
 lt_filter_select_options = lo_filter->get_filter_select_options( ).
 lv_filter_str = lo_filter->get_filter_string( ).

* Check if the supplied filter is supported by standard gateway runtime process
 IF  lv_filter_str            IS NOT INITIAL
 AND lt_filter_select_options IS INITIAL.
   " If the string of the Filter System Query Option is not automatically converted into
   " filter option table (lt_filter_select_options), then the filtering combination is not supported
   " Log message in the application log
   me->/iwbep/if_sb_dpc_comm_services~log_message(
     EXPORTING
       iv_msg_type   = 'E'
       iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
       iv_msg_number = 025 ).
   " Raise Exception
   RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
     EXPORTING
       textid = /iwbep/cx_mgw_tech_exception=>internal_error.
 ENDIF.

* Get key table information
 io_tech_request_context->get_converted_source_keys(
   IMPORTING
     es_key_values  = ls_converted_keys ).

 ls_paging-top = io_tech_request_context->get_top( ).
 ls_paging-skip = io_tech_request_context->get_skip( ).

* Maps filter table lines to function module parameters
 LOOP AT lt_filter_select_options INTO ls_filter.

   CASE ls_filter-property.
     WHEN 'LGORT'.              " Equivalent to 'Lgort' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_lgort ).

       LOOP AT lr_lgort INTO ls_lgort.
         ls_ir_lgort-high = ls_lgort-high.
         ls_ir_lgort-low = ls_lgort-low.
         ls_ir_lgort-option = ls_lgort-option.
         ls_ir_lgort-sign = ls_lgort-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_lgort.
     WHEN 'WERKS'.              " Equivalent to 'Werks' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_werks ).

       LOOP AT lr_werks INTO ls_werks.
         ls_ir_werks-high = ls_werks-high.
         ls_ir_werks-low = ls_werks-low.
         ls_ir_werks-option = ls_werks-option.
         ls_ir_werks-sign = ls_werks-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_werks.
     WHEN 'ALMACEN_MONTAJE'.              " Equivalent to 'AlmacenMontaje' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_almacen_montaje ).

       LOOP AT lr_almacen_montaje INTO ls_almacen_montaje.
         ls_ir_lgort-high = ls_almacen_montaje-high.
         ls_ir_lgort-low = ls_almacen_montaje-low.
         ls_ir_lgort-option = ls_almacen_montaje-option.
         ls_ir_lgort-sign = ls_almacen_montaje-sign.
         APPEND ls_ir_lgort TO ir_lgort.
       ENDLOOP.
       CLEAR lr_almacen_montaje.
     WHEN 'CENTRO_MONTAJE'.              " Equivalent to 'CentroMontaje' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_centro_montaje ).

       LOOP AT lr_centro_montaje INTO ls_centro_montaje.
         ls_ir_werks-high = ls_centro_montaje-high.
         ls_ir_werks-low = ls_centro_montaje-low.
         ls_ir_werks-option = ls_centro_montaje-option.
         ls_ir_werks-sign = ls_centro_montaje-sign.
         APPEND ls_ir_werks TO ir_werks.
       ENDLOOP.
       CLEAR lr_centro_montaje.
     WHEN 'ROUTE_NAME'.              " Equivalent to 'RouteName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_route_name ).

       LOOP AT lr_route_name INTO ls_route_name.
         ls_ir_route_name-high = ls_route_name-high.
         ls_ir_route_name-low = ls_route_name-low.
         ls_ir_route_name-option = ls_route_name-option.
         ls_ir_route_name-sign = ls_route_name-sign.
         APPEND ls_ir_route_name TO ir_route_name.
       ENDLOOP.
       CLEAR lr_route_name.
     WHEN 'KUNWE_NAME'.              " Equivalent to 'KunweName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunwe_name ).

       LOOP AT lr_kunwe_name INTO ls_kunwe_name.
         ls_ir_destinatario_nombre-high = ls_kunwe_name-high.
         ls_ir_destinatario_nombre-low = ls_kunwe_name-low.
         ls_ir_destinatario_nombre-option = ls_kunwe_name-option.
         ls_ir_destinatario_nombre-sign = ls_kunwe_name-sign.
         APPEND ls_ir_destinatario_nombre TO ir_destinatario_nombre.
       ENDLOOP.
       CLEAR lr_kunwe_name.
     WHEN 'ROUTE'.              " Equivalent to 'Route' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_route ).

       LOOP AT lr_route INTO ls_route.
         ls_ir_route-high = ls_route-high.
         ls_ir_route-low = ls_route-low.
         ls_ir_route-option = ls_route-option.
         ls_ir_route-sign = ls_route-sign.
         APPEND ls_ir_route TO ir_route.
       ENDLOOP.
       CLEAR lr_route.
     WHEN 'KUNWE'.              " Equivalent to 'Kunwe' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_kunwe ).

       LOOP AT lr_kunwe INTO ls_kunwe.
         ls_ir_destinatario-high = ls_kunwe-high.
         ls_ir_destinatario-low = ls_kunwe-low.
         ls_ir_destinatario-option = ls_kunwe-option.
         ls_ir_destinatario-sign = ls_kunwe-sign.
         APPEND ls_ir_destinatario TO ir_destinatario.
       ENDLOOP.
       CLEAR lr_kunwe.
     WHEN 'ERDAT'.              " Equivalent to 'Erdat' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_erdat ).

       LOOP AT lr_erdat INTO ls_erdat.
         ls_ir_fecha_crea-high = ls_erdat-high.
         ls_ir_fecha_crea-low = ls_erdat-low.
         ls_ir_fecha_crea-option = ls_erdat-option.
         ls_ir_fecha_crea-sign = ls_erdat-sign.
         APPEND ls_ir_fecha_crea TO ir_fecha_crea.
       ENDLOOP.
       CLEAR lr_erdat.
     WHEN 'STTRG_NAME'.              " Equivalent to 'SttrgName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_sttrg_name ).

       LOOP AT lr_sttrg_name INTO ls_sttrg_name.
         ls_ir_status_nombre-high = ls_sttrg_name-high.
         ls_ir_status_nombre-low = ls_sttrg_name-low.
         ls_ir_status_nombre-option = ls_sttrg_name-option.
         ls_ir_status_nombre-sign = ls_sttrg_name-sign.
         APPEND ls_ir_status_nombre TO ir_status_nombre.
       ENDLOOP.
       CLEAR lr_sttrg_name.
     WHEN 'STTRG'.              " Equivalent to 'Sttrg' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_sttrg ).

       LOOP AT lr_sttrg INTO ls_sttrg.
         ls_ir_status-high = ls_sttrg-high.
         ls_ir_status-low = ls_sttrg-low.
         ls_ir_status-option = ls_sttrg-option.
         ls_ir_status-sign = ls_sttrg-sign.
         APPEND ls_ir_status TO ir_status.
       ENDLOOP.
       CLEAR lr_sttrg.
     WHEN 'SIGNI'.              " Equivalent to 'Signi' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_signi ).

       LOOP AT lr_signi INTO ls_signi.
         ls_ir_matricula-high = ls_signi-high.
         ls_ir_matricula-low = ls_signi-low.
         ls_ir_matricula-option = ls_signi-option.
         ls_ir_matricula-sign = ls_signi-sign.
         APPEND ls_ir_matricula TO ir_matricula.
       ENDLOOP.
       CLEAR lr_signi.
     WHEN 'ZZCONDUCTOR_NAME'.              " Equivalent to 'ZzconductorName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_zzconductor_name ).

       LOOP AT lr_zzconductor_name INTO ls_zzconductor_name.
         ls_ir_conductor_name-high = ls_zzconductor_name-high.
         ls_ir_conductor_name-low = ls_zzconductor_name-low.
         ls_ir_conductor_name-option = ls_zzconductor_name-option.
         ls_ir_conductor_name-sign = ls_zzconductor_name-sign.
         APPEND ls_ir_conductor_name TO ir_conductor_name.
       ENDLOOP.
       CLEAR lr_zzconductor_name.
     WHEN 'ZZCONDUCTOR'.              " Equivalent to 'Zzconductor' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_zzconductor ).

       LOOP AT lr_zzconductor INTO ls_zzconductor.
         ls_ir_conductor-high = ls_zzconductor-high.
         ls_ir_conductor-low = ls_zzconductor-low.
         ls_ir_conductor-option = ls_zzconductor-option.
         ls_ir_conductor-sign = ls_zzconductor-sign.
         APPEND ls_ir_conductor TO ir_conductor.
       ENDLOOP.
       CLEAR lr_zzconductor.
     WHEN 'TDLNR_NAME'.              " Equivalent to 'TdlnrName' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_tdlnr_name ).

       LOOP AT lr_tdlnr_name INTO ls_tdlnr_name.
         ls_ir_transportista_nombre-high = ls_tdlnr_name-high.
         ls_ir_transportista_nombre-low = ls_tdlnr_name-low.
         ls_ir_transportista_nombre-option = ls_tdlnr_name-option.
         ls_ir_transportista_nombre-sign = ls_tdlnr_name-sign.
         APPEND ls_ir_transportista_nombre TO ir_transportista_nombre.
       ENDLOOP.
       CLEAR lr_tdlnr_name.
     WHEN 'TDLNR'.              " Equivalent to 'Tdlnr' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_tdlnr ).

       LOOP AT lr_tdlnr INTO ls_tdlnr.
         ls_ir_transportista-high = ls_tdlnr-high.
         ls_ir_transportista-low = ls_tdlnr-low.
         ls_ir_transportista-option = ls_tdlnr-option.
         ls_ir_transportista-sign = ls_tdlnr-sign.
         APPEND ls_ir_transportista TO ir_transportista.
       ENDLOOP.
       CLEAR lr_tdlnr.
     WHEN 'TKNUM'.              " Equivalent to 'Tknum' property in the service
       lo_filter->convert_select_option(
         EXPORTING
           is_select_option = ls_filter
         IMPORTING
           et_select_option = lr_tknum ).

       LOOP AT lr_tknum INTO ls_tknum.
         ls_ir_transporte-high = ls_tknum-high.
         ls_ir_transporte-low = ls_tknum-low.
         ls_ir_transporte-option = ls_tknum-option.
         ls_ir_transporte-sign = ls_tknum-sign.
         APPEND ls_ir_transporte TO ir_transporte.
       ENDLOOP.
       CLEAR lr_tknum.

     WHEN OTHERS.
       " Log message in the application log
       me->/iwbep/if_sb_dpc_comm_services~log_message(
         EXPORTING
           iv_msg_type   = 'E'
           iv_msg_id     = '/IWBEP/MC_SB_DPC_ADM'
           iv_msg_number = 020
           iv_msg_v1     = ls_filter-property ).
       " Raise Exception
       RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
         EXPORTING
           textid = /iwbep/cx_mgw_tech_exception=>internal_error.
   ENDCASE.

 ENDLOOP.

* Get RFC destination
 lo_dp_facade = /iwbep/if_mgw_conv_srv_runtime~get_dp_facade( ).
 lv_destination = /iwbep/cl_sb_gen_dpc_rt_util=>get_rfc_destination( io_dp_facade = lo_dp_facade ).

*-------------------------------------------------------------
*  Call RFC function module
*-------------------------------------------------------------
 lv_rfc_name = 'ZUI5_CM_GET_TRANS_TRASLADOS'.

 IF lv_destination IS INITIAL OR lv_destination EQ 'NONE'.

   TRY.
       CALL FUNCTION lv_rfc_name
         EXPORTING
           ir_lgort                = ir_lgort
           ir_werks                = ir_werks
           ir_route_name           = ir_route_name
           ir_destinatario_nombre  = ir_destinatario_nombre
           ir_route                = ir_route
           ir_destinatario         = ir_destinatario
           ir_fecha_crea           = ir_fecha_crea
           ir_status_nombre        = ir_status_nombre
           ir_status               = ir_status
           ir_matricula            = ir_matricula
           ir_conductor_name       = ir_conductor_name
           ir_conductor            = ir_conductor
           ir_transportista_nombre = ir_transportista_nombre
           ir_transportista        = ir_transportista
           ir_transporte           = ir_transporte
         IMPORTING
           e_return                = e_return
           e_data                  = e_data
         EXCEPTIONS
           system_failure          = 1000 message lv_exc_msg
           OTHERS                  = 1002.

       lv_subrc = sy-subrc.
*in case of co-deployment the exception is raised and needs to be caught
     CATCH cx_root INTO lx_root.
       lv_subrc = 1001.
       lv_exc_msg = lx_root->if_message~get_text( ).
   ENDTRY.

 ELSE.

   CALL FUNCTION lv_rfc_name DESTINATION lv_destination
     EXPORTING
       ir_lgort                = ir_lgort
       ir_werks                = ir_werks
       ir_route_name           = ir_route_name
       ir_destinatario_nombre  = ir_destinatario_nombre
       ir_route                = ir_route
       ir_destinatario         = ir_destinatario
       ir_fecha_crea           = ir_fecha_crea
       ir_status_nombre        = ir_status_nombre
       ir_status               = ir_status
       ir_matricula            = ir_matricula
       ir_conductor_name       = ir_conductor_name
       ir_conductor            = ir_conductor
       ir_transportista_nombre = ir_transportista_nombre
       ir_transportista        = ir_transportista
       ir_transporte           = ir_transporte
     IMPORTING
       e_return                = e_return
       e_data                  = e_data
     EXCEPTIONS
       system_failure          = 1000 MESSAGE lv_exc_msg
       communication_failure   = 1001 MESSAGE lv_exc_msg
       OTHERS                  = 1002.

   lv_subrc = sy-subrc.

 ENDIF.

*-------------------------------------------------------------
*  Map the RFC response to the caller interface - Only mapped attributes
*-------------------------------------------------------------
*-------------------------------------------------------------
* Error and exception handling
*-------------------------------------------------------------
 IF lv_subrc <> 0.
* Execute the RFC exception handling process
   me->/iwbep/if_sb_dpc_comm_services~rfc_exception_handling(
     EXPORTING
       iv_subrc            = lv_subrc
       iv_exp_message_text = lv_exc_msg ).
 ENDIF.

 IF e_return IS NOT INITIAL.
   me->/iwbep/if_sb_dpc_comm_services~rfc_save_log(
     EXPORTING
       iv_entity_type = iv_entity_name
       it_return      = e_return
       it_key_tab     = it_key_tab ).
 ENDIF.

*-------------------------------------------------------------------------*
*             - Post Backend Call -
*-------------------------------------------------------------------------*
 IF ls_paging-skip IS NOT INITIAL.
*  If the Skip value was requested at runtime
*  the response table will provide backend entries from skip + 1, meaning start from skip +1
*  for example: skip=5 means to start get results from the 6th row
   lv_skip = ls_paging-skip + 1.
 ENDIF.
*  The Top value was requested at runtime but was not handled as part of the function interface
 IF  ls_paging-top <> 0
 AND lv_skip IS NOT INITIAL.
*  if lv_skip > 0 retrieve the entries from lv_skip + Top - 1
*  for example: skip=5 and top=2 means to start get results from the 6th row and end in row number 7
   lv_top = ls_paging-top + lv_skip - 1.
 ELSEIF ls_paging-top <> 0
 AND    lv_skip IS INITIAL.
   lv_top = ls_paging-top.
 ELSE.
   lv_top = lines( e_data ).
 ENDIF.

*  - Map properties from the backend to the Gateway output response table -

 LOOP AT e_data INTO ls_e_data
*  Provide the response entries according to the Top and Skip parameters that were provided at runtime
      FROM lv_skip TO lv_top.
*  Only fields that were mapped will be delivered to the response table
   ls_gw_e_data-almacen_montaje = ls_e_data-almacen_montaje.
   ls_gw_e_data-lgort = ls_e_data-lgort.
   ls_gw_e_data-werks = ls_e_data-werks.
   ls_gw_e_data-route_name = ls_e_data-route_name.
   ls_gw_e_data-route = ls_e_data-route.
   ls_gw_e_data-kunwe_name = ls_e_data-kunwe_name.
   ls_gw_e_data-kunwe = ls_e_data-kunwe.
   ls_gw_e_data-erdat = ls_e_data-erdat.
   ls_gw_e_data-sttrg_name = ls_e_data-sttrg_name.
   ls_gw_e_data-sttrg = ls_e_data-sttrg.
   ls_gw_e_data-signi = ls_e_data-signi.
   ls_gw_e_data-zzconductor = ls_e_data-zzconductor.
   ls_gw_e_data-zzconductor_name = ls_e_data-zzconductor_name.
   ls_gw_e_data-tdlnr_name = ls_e_data-tdlnr_name.
   ls_gw_e_data-tdlnr = ls_e_data-tdlnr.
   ls_gw_e_data-tknum = ls_e_data-tknum.
   ls_gw_e_data-borrable = ls_e_data-borrable.
   ls_gw_e_data-editable = ls_e_data-editable.
   APPEND ls_gw_e_data TO et_entityset.
   CLEAR ls_gw_e_data.
 ENDLOOP.

  endmethod.
  method TRANSPORTESSET_UPDATE_ENTITY.
  RAISE EXCEPTION TYPE /iwbep/cx_mgw_not_impl_exc
    EXPORTING
      textid = /iwbep/cx_mgw_not_impl_exc=>method_not_implemented
      method = 'TRANSPORTESSET_UPDATE_ENTITY'.
  endmethod.
