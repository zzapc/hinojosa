*----------------------------------------------------------------------*
***INCLUDE ZSWM_PROCESSINVENTORY_UI5_MOD.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  SALIR_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE salir_0100 INPUT.
  SET SCREEN 0. LEAVE SCREEN.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'MAIN_2'.
  SET TITLEBAR '0100'.
  variant-report = sy-repid.
  variant-handle = 'HEAD'.
  variant-variant = p_varian.


  PERFORM load_data_into_grid TABLES t_alv
                           USING 'CC_ALV' variant 'ZSWM_UI5_IVNUM_STR'
                           CHANGING g_custom_container alv gs_layout gt_fieldcatalog funciones.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  DATA t_ucomm LIKE sy-ucomm OCCURS 0 WITH HEADER LINE.
  CLEAR t_ucomm[].
  IF zswm_ui5_ivnum_str-lvorm       EQ abap_true
  OR zswm_ui5_ivnum_str-ivnum_close EQ abap_true.
    t_ucomm = 'BORRAR'.       APPEND t_ucomm.
    t_ucomm = 'CHANGE_BIN'. APPEND t_ucomm.
    t_ucomm = 'RECUENTO_0'. APPEND t_ucomm.
    t_ucomm = 'DELETE_POS'. APPEND t_ucomm.
  ENDIF.
  SET PF-STATUS 'MAIN' EXCLUDING t_ucomm.
  SET TITLEBAR '0200' WITH zswm_ui5_ivnum_str-ivnum.
  variant-report = sy-repid.
  variant-handle = 'POSI'.
  variant-variant = p_varian.
  PERFORM load_data_into_grid TABLES t_pos
                         USING 'CC_ALV_POS' variant 'ZSWM_UI5_IVPOS_STR'
                         CHANGING g_custom_container alv_pos gs_layout gt_fieldcatalog funciones.
  variant-report = sy-repid.
  variant-handle = 'DNI'.
  variant-variant = p_varian.
  PERFORM load_data_into_grid TABLES t_dni
                         USING 'CC_DNI' variant 'ZSWM_UI5_INV_UPO_STR'
                         CHANGING g_custom_container alv_dni gs_layout gt_fieldcatalog funciones.
variant-report = sy-repid.
  variant-handle = '9999'.
  variant-variant = p_varian.
  PERFORM load_data_into_grid TABLES t_999
                         USING 'CC_ALV_999' variant 'ZSWM_READ_EXIDV_STR'
                         CHANGING g_custom_container alv_999 gs_layout gt_fieldcatalog funciones.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  UCOMM_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ucomm_0200 INPUT.
  CASE sy-ucomm.
    WHEN 'BORRAR'.
      CLEAR sy-ucomm.
      IF zswm_ui5_ivnum_str-lvorm NE abap_true
      AND zswm_ui5_ivnum_str-ivnum_close NE abap_true.
        DATA answer.
        DATA: pregunta TYPE lfa1-name1.
        CONCATENATE '¿' text-dbo zswm_ui5_ivnum_str-ivnum '?' INTO pregunta.
        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
*           TITLEBAR       = ' '
*           DIAGNOSE_OBJECT             = ' '
            text_question  = pregunta
*           TEXT_BUTTON_1  = 'Ja'(001)
*           ICON_BUTTON_1  = ' '
*           TEXT_BUTTON_2  = 'Nein'(002)
*           ICON_BUTTON_2  = ' '
*           DEFAULT_BUTTON = '1'
*           DISPLAY_CANCEL_BUTTON       = 'X'
*           USERDEFINED_F1_HELP         = ' '
*           START_COLUMN   = 25
*           START_ROW      = 6
*           POPUP_TYPE     =
*           IV_QUICKINFO_BUTTON_1       = ' '
*           IV_QUICKINFO_BUTTON_2       = ' '
          IMPORTING
            answer         = answer
*        TABLES
*           PARAMETER      =
          EXCEPTIONS
            text_not_found = 1
            OTHERS         = 2.
        IF answer EQ '1'.
          UPDATE zswm_ui5_ivnum SET lvorm  = abap_true
                                    aedat  = sy-datum
                                    aezeit = sy-uzeit
                                    aenam  = sy-uname
                                WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                                  AND ivnum EQ zswm_ui5_ivnum_str-ivnum.
          COMMIT WORK AND WAIT.
          SET SCREEN 0. LEAVE SCREEN.
        ENDIF.
        IF sy-subrc <> 0.

        ENDIF.

      ENDIF.
    WHEN 'CHANGE_BIN'
      OR 'RECUENTO_0'
      OR 'DELETE_POS'.

      DATA: et_index_rows TYPE lvc_t_row,
            es_index_rows TYPE lvc_s_row.
      CALL METHOD alv_pos->get_selected_rows
        IMPORTING
          et_index_rows = et_index_rows[].
      DELETE et_index_rows WHERE rowtype IS NOT INITIAL.
      IF et_index_rows[] IS INITIAL.
        MESSAGE s368(00) WITH text-001 DISPLAY LIKE 'E'.
      ELSE.
        CLEAR t_return[].
        LOOP AT et_index_rows INTO es_index_rows.
          READ TABLE t_pos INTO DATA(rt_pos) INDEX es_index_rows-index.
          CHECK rt_pos-ok NE abap_true.

*          CHECK sy-subrc      EQ 0
*            AND rt_pos-status EQ '20'
*            and sy-ucomm      eq 'CHANGE_BIN'.
          SELECT SINGLE * INTO @DATA(lein) FROM lein WHERE lenum EQ @rt_pos-lenum.
          IF sy-subrc NE 0.
*            La UA & ha desaparecido
            CLEAR t_return[].
            PERFORM mensaje USING 'E' 'ZSWM_UI5' '099' rt_pos-lenum space space space CHANGING t_return[].
            READ TABLE t_return INTO DATA(rt_return) INDEX 1.
            UPDATE zswm_ui5_ivpos SET message = rt_return-message
                               aedat  = sy-datum
                               aezeit = sy-uzeit
                               aenam  = sy-uname
                           WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                             AND ivnum EQ zswm_ui5_ivnum_str-ivnum
                             AND ivpos EQ rt_pos-ivpos.
          ELSEIF lein-lgtyp EQ zswm_ui5_ivnum_str-lgtyp
             AND lein-lgpla EQ zswm_ui5_ivnum_str-lgpla
             AND rt_pos-status NE '30'.
            UPDATE zswm_ui5_ivpos SET ok = abap_true
                                status = '10'
                                aedat  = sy-datum
                                aezeit = sy-uzeit
                                aenam  = sy-uname
                            WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                              AND ivnum EQ zswm_ui5_ivnum_str-ivnum
                              AND ivpos EQ rt_pos-ivpos.
          ELSEIF sy-ucomm EQ 'CHANGE_BIN'
              OR sy-ucomm EQ 'RECUENTO_0'.

            DATA tanum TYPE ltak-tanum.
            CLEAR tanum.

            IF rt_pos-status      EQ '20'
            AND sy-ucomm          EQ 'CHANGE_BIN'.
              CALL FUNCTION 'L_TO_CREATE_MOVE_SU' DESTINATION 'NONE'
                EXPORTING
                  i_lenum               = lein-lenum
                  i_bwlvs               = '999'
*                 I_LZNUM               = ' '
                  i_nltyp               = zswm_ui5_ivnum_str-lgtyp
*                 I_NLBER               =
                  i_nlpla               = zswm_ui5_ivnum_str-lgpla
*                 I_NPPOS               = ' '
                  i_squit               = abap_true
                  i_letyp               = lein-letyp
*                 I_NIDRU               = ' '
*                 I_DRUKZ               = ' '
*                 I_LDEST               = ' '
*                 I_UPDATE_TASK         = ' '
                  i_commit_work         = 'X'
*                 I_BNAME               = SY-UNAME
*                 I_SOLEX               = 0
*                 I_PERNR               = 0
*                 I_BETYP               = ' '
*                 I_BENUM               = ' '
                IMPORTING
                  e_tanum               = tanum
*                 E_NLTYP               =
*                 E_NLBER               =
*                 E_NLPLA               =
*                 E_NPPOS               =
*                 TABLES
*                 T_LTAP_MOVE_SU        =
*                 T_LTAK                =
*                 T_LTAP_VB             =
                EXCEPTIONS
                  not_confirmed_to      = 1
                  foreign_lock          = 2
                  bwlvs_wrong           = 3
                  betyp_wrong           = 4
                  nltyp_wrong           = 5
                  nlpla_wrong           = 6
                  nltyp_missing         = 7
                  nlpla_missing         = 8
                  squit_forbidden       = 9
                  lgber_wrong           = 10
                  xfeld_wrong           = 11
                  drukz_wrong           = 12
                  ldest_wrong           = 13
                  no_stock_on_su        = 14
                  su_not_found          = 15
                  update_without_commit = 16
                  no_authority          = 17
                  benum_required        = 18
                  ltap_move_su_wrong    = 19
                  lenum_wrong           = 20
*                 OTHERS                = 21
                  error_message         = 98
                  OTHERS                = 99.
            ELSEIF rt_pos-status      EQ '30'
               AND sy-ucomm           EQ 'RECUENTO_0'.
              DATA lgpla TYPE lagp-lgpla.
              lgpla = zswm_ui5_ivnum_str-ivnum.
              SELECT SINGLE * INTO @DATA(r_lagp) FROM lagp WHERE lgnum EQ @zswm_ui5_ivnum_str-lgnum
                                                             AND lgtyp EQ '999'
                                                             AND lgpla EQ @lgpla.
              IF sy-subrc NE 0.
*               busco un area de almacenamiento del 999
                SELECT SINGLE lgber INTO @DATA(lgber) FROM lagp
                     WHERE lgnum EQ @zswm_ui5_ivnum_str-lgnum
                       AND lgtyp EQ '999'.
                CALL FUNCTION 'ZSWM_CREATE_BIN'
                  EXPORTING
                    lgnum = zswm_ui5_ivnum_str-lgnum
                    lgtyp = '999'
                    lgpla = lgpla
                    lgber = lgber
                    lptyp = 'GN'.

              ENDIF.
              CALL FUNCTION 'L_TO_CREATE_MOVE_SU' DESTINATION 'NONE'
                EXPORTING
                  i_lenum               = lein-lenum
                  i_bwlvs               = '999'
*                 I_LZNUM               = ' '
                  i_nltyp               = '999'
*                 I_NLBER               =
                  i_nlpla               = lgpla
*                 I_NPPOS               = ' '
                  i_squit               = abap_true
                  i_letyp               = lein-letyp
*                 I_NIDRU               = ' '
*                 I_DRUKZ               = ' '
*                 I_LDEST               = ' '
*                 I_UPDATE_TASK         = ' '
                  i_commit_work         = 'X'
*                 I_BNAME               = SY-UNAME
*                 I_SOLEX               = 0
*                 I_PERNR               = 0
*                 I_BETYP               = ' '
*                 I_BENUM               = ' '
                IMPORTING
                  e_tanum               = tanum
*                 E_NLTYP               =
*                 E_NLBER               =
*                 E_NLPLA               =
*                 E_NPPOS               =
*                 TABLES
*                 T_LTAP_MOVE_SU        =
*                 T_LTAK                =
*                 T_LTAP_VB             =
                EXCEPTIONS
                  not_confirmed_to      = 1
                  foreign_lock          = 2
                  bwlvs_wrong           = 3
                  betyp_wrong           = 4
                  nltyp_wrong           = 5
                  nlpla_wrong           = 6
                  nltyp_missing         = 7
                  nlpla_missing         = 8
                  squit_forbidden       = 9
                  lgber_wrong           = 10
                  xfeld_wrong           = 11
                  drukz_wrong           = 12
                  ldest_wrong           = 13
                  no_stock_on_su        = 14
                  su_not_found          = 15
                  update_without_commit = 16
                  no_authority          = 17
                  benum_required        = 18
                  ltap_move_su_wrong    = 19
                  lenum_wrong           = 20
*                 OTHERS                = 21
                  error_message         = 98
                  OTHERS                = 99.

            ENDIF.
            IF sy-subrc NE 0.
              CLEAR t_return[].
              PERFORM mensaje USING sy-msgty sy-msgid sy-msgno sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 CHANGING t_return[].

              READ TABLE t_return INTO rt_return INDEX 1.
              UPDATE zswm_ui5_ivpos SET message = rt_return-message
                                 aedat  = sy-datum
                                 aezeit = sy-uzeit
                                 aenam  = sy-uname
                             WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                               AND ivnum EQ zswm_ui5_ivnum_str-ivnum
                               AND ivpos EQ rt_pos-ivpos.

            ELSEIF tanum IS NOT INITIAL.
              CASE sy-ucomm.
                WHEN 'CHANGE_BIN'.
                  UPDATE zswm_ui5_ivpos SET ok = abap_true
                                      tanum  = tanum
                                      tapos  = '0001'
                                      aedat  = sy-datum
                                      aezeit = sy-uzeit
                                      aenam  = sy-uname
                                  WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                                    AND ivnum EQ zswm_ui5_ivnum_str-ivnum
                                    AND ivpos EQ rt_pos-ivpos.
                WHEN 'RECUENTO_0'.
                  UPDATE zswm_ui5_ivpos SET ok = abap_true
                                      tanum  = tanum
                                      tapos  = '0001'
                                      xnull  = abap_true
                                      aedat  = sy-datum
                                      aezeit = sy-uzeit
                                      aenam  = sy-uname
                                  WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                                    AND ivnum EQ zswm_ui5_ivnum_str-ivnum
                                    AND ivpos EQ rt_pos-ivpos.

              ENDCASE.
            ENDIF.
          ELSEIF sy-ucomm EQ 'DELETE_POS'.
            rt_pos-lenum = |{ rt_pos-lenum ALPHA = OUT }|.
            CONCATENATE '¿' text-db2 rt_pos-lenum '?' INTO  pregunta.
            CALL FUNCTION 'POPUP_TO_CONFIRM'
              EXPORTING
*               TITLEBAR       = ' '
*               DIAGNOSE_OBJECT             = ' '
                text_question  = pregunta
*               TEXT_BUTTON_1  = 'Ja'(001)
*               ICON_BUTTON_1  = ' '
*               TEXT_BUTTON_2  = 'Nein'(002)
*               ICON_BUTTON_2  = ' '
*               DEFAULT_BUTTON = '1'
*               DISPLAY_CANCEL_BUTTON       = 'X'
*               USERDEFINED_F1_HELP         = ' '
*               START_COLUMN   = 25
*               START_ROW      = 6
*               POPUP_TYPE     =
*               IV_QUICKINFO_BUTTON_1       = ' '
*               IV_QUICKINFO_BUTTON_2       = ' '
              IMPORTING
                answer         = answer
*        TABLES
*               PARAMETER      =
              EXCEPTIONS
                text_not_found = 1
                OTHERS         = 2.
            IF answer EQ '1'.

              UPDATE zswm_ui5_ivpos SET ok = abap_true
                                  lvorm  = abap_true
                                  aedat  = sy-datum
                                  aezeit = sy-uzeit
                                  aenam  = sy-uname
                              WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                                AND ivnum EQ zswm_ui5_ivnum_str-ivnum
                                AND ivpos EQ rt_pos-ivpos.

            ENDIF.
          ENDIF.
        ENDLOOP.
        COMMIT WORK AND WAIT.
        CLEAR sy-ucomm.
        DATA sw_fin_inventario TYPE flag.
        PERFORM valida_inventario USING zswm_ui5_ivnum_str CHANGING sw_fin_inventario.
        IF sw_fin_inventario EQ abap_true.
          PERFORM get_data TABLES t_alv. SET SCREEN 0. LEAVE SCREEN.
        ELSE.
          PERFORM get_seleccion_pos TABLES t_pos t_999 t_dni USING zswm_ui5_ivnum_str.
        ENDIF.
      ENDIF.
  ENDCASE.
ENDMODULE.
