*----------------------------------------------------------------------*
***INCLUDE ZSWM_UI5_LOG_PRD.
*----------------------------------------------------------------------*
FORM load_data_into_grid TABLES tabla       TYPE STANDARD TABLE
                         USING nombre_cont TYPE        scrfname
                               variant     LIKE        disvariant
                               estruc      LIKE        dd02l-tabname
                     CHANGING  contenedor  TYPE REF TO cl_gui_custom_container
                               alv_c         TYPE REF TO cl_gui_alv_grid
                               layout      TYPE        lvc_s_layo
                               it_fieldcat TYPE        lvc_t_fcat
                               excludin    TYPE        ui_functions.
  IF alv_c IS INITIAL.
    IF cl_gui_alv_grid=>offline( ) IS INITIAL.

      CREATE OBJECT contenedor
        EXPORTING
          container_name = nombre_cont.
*        EXCEPTIONS
*          OTHERS         = 1.
*      contenedor->

      CREATE OBJECT alv_c
        EXPORTING
          i_parent = contenedor.
*        EXCEPTIONS
*          OTHERS   = 1.

      CREATE OBJECT l_eventos.

*    ELSE.

      PERFORM preparefieldcatalog USING    estruc
                                  CHANGING it_fieldcat.

      PERFORM preparelayout       CHANGING layout.
      PERFORM rellenar_toolbar    CHANGING excludin.

    ENDIF.

    SET HANDLER l_eventos->handle_hotspot_click         FOR alv_c.
*    SET HANDLER eventos->user_tolbar           FOR alv_c.
*    SET HANDLER eventos->handle_user_command   FOR alv_c.

    CALL METHOD alv_c->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

*    alv_c->

    CALL METHOD alv_c->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_enter.

    CALL METHOD alv_c->set_table_for_first_display
      EXPORTING
        is_variant           = variant
        i_save               = 'A'
        is_layout            = layout
        it_toolbar_excluding = excludin
      CHANGING
        it_outtab            = tabla[]
        it_fieldcatalog      = it_fieldcat[]
      EXCEPTIONS
        OTHERS               = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ELSE.

    ls_stable-row = 'X'.
    ls_stable-col = 'X'.

    CALL METHOD alv_c->refresh_table_display
      EXPORTING
        is_stable = ls_stable.
  ENDIF.
ENDFORM.                    "load_data_into_grid
*&--------------------------------------------------------------------
*&      Form  preparefieldcatalog
*&--------------------------------------------------------------------
FORM preparefieldcatalog USING    estruc       LIKE dd02l-tabname
                         CHANGING it_fieldcat1 TYPE lvc_t_fcat.

  DATA: l_fieldcat TYPE LINE OF lvc_t_fcat.

  REFRESH it_fieldcat1.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active    = 'X'
      i_structure_name   = estruc
      i_bypassing_buffer = 'X'
    CHANGING
      ct_fieldcat        = it_fieldcat1[].
*    EXCEPTIONS
*      inconsistent_interface = 1
*      program_error          = 2
*      OTHERS                 = 3.

  LOOP AT it_fieldcat1 ASSIGNING FIELD-SYMBOL(<l_fieldcat>).
    CASE estruc.
      WHEN 'ZSWM_UI5_LOG_DATA_STR'.
*        OR 'ZSEWM_SCWM_S_LIME_ALL_MON_STR'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'ICON_LOG' or 'ICON_PAR' or 'ICON_ACC' or 'ICON_UAS'.
            <l_fieldcat>-hotspot = 'X'.
          WHEN OTHERS.
        ENDCASE.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    "preparefieldcatalog

*&--------------------------------------------------------------------
*&      Form  preparelayout
*---------------------------------------------------------------------
FORM preparelayout CHANGING cwa_layout TYPE lvc_s_layo.

  cwa_layout-zebra    = 'X'.
  cwa_layout-cwidth_opt = 'X'.
  cwa_layout-sel_mode = 'D'.
  cwa_layout-stylefname = 'STYLE'.

ENDFORM.                    "preparelayout
*&--------------------------------------------------------------------
*&      Form  rellenar_toolbar
*&--------------------------------------------------------------------
FORM rellenar_toolbar CHANGING excluirtool TYPE ui_functions.

  REFRESH: excluirtool.

*  APPEND   cl_gui_alv_grid=>mc_fc_excl_all            TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_copy_row          TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_delete_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_append_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_insert_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_move_row          TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_copy              TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_cut               TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_paste             TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_paste_new_row     TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_undo              TO excluirtool.


ENDFORM.                    "rellenar_toolbar

*&---------------------------------------------------------------------*
*&      Form  SHOW_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*FORM show_alv .
* DATA lr_functions     TYPE REF TO cl_salv_functions_list.
*  DATA lr_display       TYPE REF TO cl_salv_display_settings.
*  DATA lr_layout        TYPE REF TO cl_salv_layout.
*  DATA lr_content       TYPE REF TO cl_salv_form_element.
*  DATA lr_events        TYPE REF TO cl_salv_events_table.
*  DATA lr_event_handler TYPE REF TO lcl_event_handler.
*  DATA lr_selections    TYPE REF TO cl_salv_selections.
*  DATA lv_scrtext_s     TYPE scrtext_s.
*  DATA ls_key           TYPE salv_s_layout_key.
*
*  TRY.
*      cl_salv_table=>factory(
*        IMPORTING
*          r_salv_table = gr_table
*        CHANGING
*          t_table      = tT_alv ).
*    CATCH cx_salv_msg.                                  "#EC NO_HANDLER
*  ENDTRY.
*
*  gr_table->set_screen_status(
*      report        = sy-repid
*      pfstatus      = space
*      set_functions = gr_table->c_functions_all ).
*
** Functions
*  lr_functions = gr_table->get_functions( ).
*
** Activate ALV generic Functions
*  lr_functions->set_all( abap_true ).
*
** Display settings
*  lr_display = gr_table->get_display_settings( ).
*  lr_display->set_striped_pattern( cl_salv_display_settings=>true ).
*
** Layout settings
*  lr_layout = gr_table->get_layout( ).
*  ls_key-report = sy-repid.
*  lr_layout->set_key( ls_key ).
*  lr_layout->set_default( abap_true ).
*  lr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
*
** ALV Header
**  PERFORM built_header CHANGING lr_content.
**  gr_table->set_top_of_list( lr_content ).
*
** Selections
*  lr_selections = gr_table->get_selections( ).
*  lr_selections->set_selection_mode( if_salv_c_selection_mode=>none ).
*
*   PERFORM set_columns_alv.
*
** Events
*  lr_events = gr_table->get_event( ).
*
*  CREATE OBJECT lr_event_handler.
*  SET HANDLER lr_event_handler->on_link_click   FOR lr_events.
* gr_table->display( ).
*
*ENDFORM.
**&---------------------------------------------------------------------*
**&      Form  SET_COLUMNS_ALV
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
**  -->  p1        text
**  <--  p2        text
**----------------------------------------------------------------------*
*FORM set_columns_alv .
*
*  DATA lr_columns       TYPE REF TO cl_salv_columns_table.
*  DATA lr_column        TYPE REF TO cl_salv_column_table.
*
** Set columns options
*  lr_columns = gr_table->get_columns( ).
*  lr_columns->set_optimize( abap_true ).
*
*
**  TRY.
**      lr_column ?= lr_columns->get_column( '' ).
**      lr_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
**
**    CATCH cx_salv_not_found    ##NO_HANDLER.
**
**  ENDTRY.
*
*  TRY.
*      lr_column ?= lr_columns->get_column( 'DECISION' ).
*    CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
*  ENDTRY.
*  lr_column->set_visible( value  = if_salv_c_bool_sap=>false ). " INVISIBLE
*
*  TRY.
*      lr_column ?= lr_columns->get_column( 'UPPER_ORDERID' ).
*      lr_column->set_long_text( CONV #( text-c01 ) ).
*      lr_column->set_medium_text( CONV #( text-c01 ) ).
*      lr_column->set_short_text( CONV #( text-c01 ) ).
*      lr_column->set_tooltip( CONV #( text-c01 ) ).
*      lr_column->set_edit_mask( space ).
*      lr_column->set_optimized( ).
*    CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
*  ENDTRY.
**// 2. Set the Color Column to the ALV
*  TRY.
*      CALL METHOD lr_columns->set_color_column
*        EXPORTING
*          value = 'ZCOLOR'.
*    CATCH cx_salv_data_error.
*  ENDTRY.
*
*ENDFORM.
