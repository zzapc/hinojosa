*----------------------------------------------------------------------*
***INCLUDE ZSWM_PROCESSINVENTORY_UI5_PRD.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_ALV  text
*----------------------------------------------------------------------*
FORM get_data  TABLES  t_alv STRUCTURE zswm_ui5_ivnum_str.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE t_alv FROM zswm_ui5_ivnum
       WHERE lgnum       EQ p_lgnum
         AND ivnum       IN s_ivnum
         AND lgtyp       IN s_lgtyp
         AND lgpla       IN s_lgpla
         AND operario    IN s_opera
         AND ernam       IN s_ernam
         AND erdat       IN s_erdat
         AND ivnum_close IN s_close
         AND lvorm       IN s_lvorm
         and NBNID       in s_NBNID.
  PERFORM completar_datos_inventario TABLES t_alv.
*  loop at t_alv.
*    data(sw_tabix) = sy-tabix.
*    if t_alv-lvorm eq abap_true.
*       move ICON_DELETE to t_alv-icon_lvorm.
*    elseif t_alv-IVNUM_close ne abap_true.
*       move ICON_ACTIVATE to t_alv-ICON_lvorm.
*    else.
*       move ICON_RELEASE  to t_alv-icon_lvorm.
*    endif.
*    select count( * ) into t_alv-n_reg from ZSWM_UI5_IVPOS where lgnum eq t_alv-lgnum
*                                                             and ivnum eq t_alv-ivnum.
**    if t_alv-IVNUM_close eq abap_true.
**      move ICON_LOCKED to t_alv-icon_close.
**    else.
**      move ICON_UNLOCKED to t_alv-icon_close.
**    endif.
*    modify t_alv index sw_tabix.
*  endloop.
ENDFORM.
FORM load_data_into_grid TABLES tabla       TYPE STANDARD TABLE
                         USING nombre_cont TYPE        scrfname
                               variant     LIKE        disvariant
                               estruc      LIKE        dd02l-tabname
                     CHANGING  contenedor  TYPE REF TO cl_gui_custom_container
                               alv_c         TYPE REF TO cl_gui_alv_grid
                               layout      TYPE        lvc_s_layo
                               it_fieldcat TYPE        lvc_t_fcat
                               excludin    TYPE        ui_functions.
  IF alv_c IS INITIAL.
    IF cl_gui_alv_grid=>offline( ) IS INITIAL.

      CREATE OBJECT contenedor
        EXPORTING
          container_name = nombre_cont.
*        EXCEPTIONS
*          OTHERS         = 1.
*      contenedor->

      CREATE OBJECT alv_c
        EXPORTING
          i_parent = contenedor.
*        EXCEPTIONS
*          OTHERS   = 1.

      CREATE OBJECT l_eventos.

*    ELSE.

      PERFORM preparefieldcatalog USING    estruc
                                  CHANGING it_fieldcat.

      PERFORM preparelayout       CHANGING layout.
      PERFORM rellenar_toolbar    CHANGING excludin.

    ENDIF.

    SET HANDLER l_eventos->handle_hotspot_click         FOR alv_c.
*    SET HANDLER eventos->user_tolbar           FOR alv_c.
*    SET HANDLER eventos->handle_user_command   FOR alv_c.

    CALL METHOD alv_c->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

*    alv_c->

    CALL METHOD alv_c->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_enter.

    CALL METHOD alv_c->set_table_for_first_display
      EXPORTING
        is_variant           = variant
        i_save               = 'A'
        is_layout            = layout
        it_toolbar_excluding = excludin
      CHANGING
        it_outtab            = tabla[]
        it_fieldcatalog      = it_fieldcat[]
      EXCEPTIONS
        OTHERS               = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ELSE.

    ls_stable-row = 'X'.
    ls_stable-col = 'X'.

    CALL METHOD alv_c->refresh_table_display
      EXPORTING
        is_stable = ls_stable.
  ENDIF.
ENDFORM.                    "load_data_into_grid
*&--------------------------------------------------------------------
*&      Form  preparefieldcatalog
*&--------------------------------------------------------------------
FORM preparefieldcatalog USING    estruc       LIKE dd02l-tabname
                         CHANGING it_fieldcat1 TYPE lvc_t_fcat.

  DATA: l_fieldcat TYPE LINE OF lvc_t_fcat.

  REFRESH it_fieldcat1.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active    = 'X'
      i_structure_name   = estruc
      i_bypassing_buffer = 'X'
    CHANGING
      ct_fieldcat        = it_fieldcat1[].
*    EXCEPTIONS
*      inconsistent_interface = 1
*      program_error          = 2
*      OTHERS                 = 3.
  LOOP AT it_fieldcat1 ASSIGNING FIELD-SYMBOL(<l_fieldcat>).
    CASE estruc.
      WHEN 'ZSWM_UI5_IVNUM_STR'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'IVNUM'.
            <l_fieldcat>-hotspot = abap_true.
        ENDCASE.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    "preparefieldcatalog

*&--------------------------------------------------------------------
*&      Form  preparelayout
*---------------------------------------------------------------------
FORM preparelayout CHANGING cwa_layout TYPE lvc_s_layo.

  cwa_layout-zebra    = 'X'.
  cwa_layout-cwidth_opt = 'X'.
  cwa_layout-sel_mode = 'D'.
  cwa_layout-stylefname = 'STYLE'.

ENDFORM.                    "preparelayout
*&--------------------------------------------------------------------
*&      Form  rellenar_toolbar
*&--------------------------------------------------------------------
FORM rellenar_toolbar CHANGING excluirtool TYPE ui_functions.

  REFRESH: excluirtool.

*  APPEND   cl_gui_alv_grid=>mc_fc_excl_all            TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_copy_row          TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_delete_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_append_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_insert_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_move_row          TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_copy              TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_cut               TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_paste             TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_paste_new_row     TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_undo              TO excluirtool.


ENDFORM.                    "rellenar_toolbar
*&---------------------------------------------------------------------*
*&      Form  GET_SELECCION_POS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_POS  text
*      -->P_ZSWM_UI5_IVNUM_STR  text
*----------------------------------------------------------------------*
FORM get_seleccion_pos  TABLES   t_pos STRUCTURE t_pos
                                 t_999 STRUCTURE t_999
                                 t_dni STRUCTURE ZSWM_UI5_INV_UPO_STR
                        USING    zswm_ui5_ivnum_str TYPE zswm_ui5_ivnum_str.

  CLEAR t_999[].
  DATA tt_lqua TYPE TABLE OF lqua. " add jtm 20.10.2022
  clear tT_lqua[].
*     del jtm 20.10.2022
*      select * into TABLE @data(tt_lqua) from lqua where lgnum eq @p_lgnum
*                                                     and lgtyp eq '999'
*                                                     and lgpla eq @zswm_ui5_ivnum_str-ivnum.
*     fin del jtm 20.10.2022
  SELECT * INTO CORRESPONDING FIELDS OF TABLE t_pos FROM zswm_ui5_ivpos WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                                                                          AND ivnum EQ zswm_ui5_ivnum_str-ivnum.
  LOOP AT t_pos INTO DATA(rt_pos).
    DATA(sw_tabix) = sy-tabix.
    SELECT ddtext INTO rt_pos-status_pos_txt UP TO 1 ROWS
                                 FROM dd07t WHERE domname    EQ 'ZSWM_STATUS_INVENTARIO'
                                              AND ddlanguage EQ sy-langu
                                              AND as4local   EQ 'A'
                                              AND as4vers    EQ 'A'
                                              AND domvalue_l EQ rt_pos-status.
    ENDSELECT.
    IF rt_pos-lvorm EQ abap_true.
      MOVE icon_delete TO rt_pos-icon.
    ELSEIF rt_pos-ok EQ abap_true.
      MOVE icon_okay   TO rt_pos-icon.
    ELSE.
      MOVE icon_cancel TO rt_pos-icon.
    ENDIF.
*       add jtm 20.10.2022
    IF rt_pos-status EQ '30'.
      SELECT * APPENDING  CORRESPONDING FIELDS OF TABLE tt_lqua FROM lqua WHERE lgnum EQ p_lgnum
                                                                            AND lgtyp EQ '999'
                                                                            AND lenum EQ rt_pos-lenum.

    ENDIF.
*       fin de add jtm 20.10.2022
*        if rT_pos-status eq '10'.
*           move icon_okay to rT_pos-icon.
*        elseif rT_pos-status eq '20'.
*           move icon_cancel to rT_pos-icon.
*        elseif rt_pos-status eq '30'.
*           move icon_cancel to rT_pos-icon.
*        endif.
*        if rT_pos-lvorm eq abap_true.
*           move ICON_DELETE to rT_pos-icon.
*        endif.
    MODIFY t_pos FROM rt_pos INDEX sw_tabix.
  ENDLOOP.
  LOOP AT tt_lqua INTO DATA(rt_lqua).
    CALL FUNCTION 'ZSWM_READ_LENUM'
      EXPORTING
        lenum        = rt_lqua-lenum
*       TCODE        = 'ZWM_RF_UI5_PIN_001'
      IMPORTING
        rt_registros = t_999
*       ERROR        =
*       TT_LOG       =
      .
    APPEND t_999.
  ENDLOOP.
  select * into CORRESPONDING FIELDS OF TABLE t_dni from ZSWM_UI5_INV_UPO
         where lgnum eq zswm_ui5_ivnum_str-lgnum
           and lgtyp eq zswm_ui5_ivnum_str-lgtyp
           and lgpla eq zswm_ui5_ivnum_str-lgpla
           and ivnum eq zswm_ui5_ivnum_str-ivnum.
  loop at t_dni.
    sw_tabix = sy-tabix.
    MESSAGE id t_dni-msgid TYPE 'I' NUMBER t_dni-msgno with t_dni-MSGV1 t_dni-MSGV2 t_dni-MSGV3 t_dni-MSGV4
        into t_dni-MESSAGE.
    modify t_dni index sw_tabix.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  VALIDA_INVENTARIO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSWM_UI5_IVNUM_STR  text
*----------------------------------------------------------------------*
FORM valida_inventario  USING    zswm_ui5_ivnum_str TYPE zswm_ui5_ivnum_str
                        CHANGING sw_concluido.
  CHECK zswm_ui5_ivnum_str-ivnum_close NE abap_true
    AND zswm_ui5_ivnum_str-lvorm       NE abap_true.

  PERFORM get_seleccion_pos TABLES t_pos t_999 t_dni USING zswm_ui5_ivnum_str.
  LOOP AT t_pos WHERE ok NE abap_true.
  ENDLOOP.
  CHECK sy-subrc NE 0.
  UPDATE zswm_ui5_ivnum SET ivnum_close = abap_true
                                 aedat  = sy-datum
                                 aezeit = sy-uzeit
                                 aenam  = sy-uname
                             WHERE lgnum EQ zswm_ui5_ivnum_str-lgnum
                               AND ivnum EQ zswm_ui5_ivnum_str-ivnum.
  COMMIT WORK AND WAIT.
  MESSAGE i398(00) WITH 'Inventario concluido:' zswm_ui5_ivnum_str-ivnum.
  MOVE abap_true TO sw_concluido.
ENDFORM.
FORM mensaje  USING    VALUE(p_type)        LIKE bapireturn-type
                       VALUE(p_id)          LIKE sy-msgid
                       VALUE(p_number)      LIKE sy-msgno
                       val1
                       val2
                       val3
                       val4
              CHANGING tt_log_men TYPE bapiret2_tt.
  DATA: p_val1 LIKE sy-msgv1,
        p_val2 LIKE sy-msgv2,
        p_val3 LIKE sy-msgv3,
        p_val4 LIKE sy-msgv4.
  p_val1 = val1.
  p_val2 = val2.
  p_val3 = val3.
  p_val4 = val4.

  DATA r_men TYPE bapiret2.
  CLEAR r_men.
  CALL FUNCTION 'BALW_BAPIRETURN_GET2'
    EXPORTING
      type   = p_type
      cl     = p_id
      number = p_number
      par1   = p_val1
      par2   = p_val2
      par3   = p_val3
      par4   = p_val4
*     LOG_NO = ' '
*     LOG_MSG_NO       = ' '
*     PARAMETER        = ' '
*     ROW    = 0
*     FIELD  = ' '
    IMPORTING
      return = r_men.
  APPEND r_men TO tt_log_men.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  COMPLETAR_DATOS_INVENTARIO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_ALV  text
*----------------------------------------------------------------------*
FORM completar_datos_inventario  TABLES   t_alv STRUCTURE t_alv.
  LOOP AT t_alv.
    DATA(sw_tabix) = sy-tabix.
    PERFORM completar_reg_inventario USING t_alv.
*    if t_alv-lvorm eq abap_true.
*       move ICON_DELETE to t_alv-icon_lvorm.
*    elseif t_alv-IVNUM_close ne abap_true.
*       move ICON_ACTIVATE to t_alv-ICON_lvorm.
*    else.
*       move ICON_RELEASE  to t_alv-icon_lvorm.
*    endif.
*    select count( * ) into t_alv-n_reg from ZSWM_UI5_IVPOS where lgnum eq t_alv-lgnum
*                                                             and ivnum eq t_alv-ivnum.
*    if t_alv-IVNUM_close eq abap_true.
*      move ICON_LOCKED to t_alv-icon_close.
*    else.
*      move ICON_UNLOCKED to t_alv-icon_close.
*    endif.
    MODIFY t_alv INDEX sw_tabix.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  COMPLETAR_REG_INVENTARIO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_ALV  text
*----------------------------------------------------------------------*
FORM completar_reg_inventario  USING    t_alv TYPE zswm_ui5_ivnum_str.
  IF t_alv-lvorm EQ abap_true.
    MOVE icon_delete TO t_alv-icon_lvorm.
  ELSEIF t_alv-ivnum_close NE abap_true.
    MOVE icon_activate TO t_alv-icon_lvorm.
  ELSE.
    MOVE icon_release  TO t_alv-icon_lvorm.
  ENDIF.
  SELECT COUNT( * ) INTO t_alv-n_reg FROM zswm_ui5_ivpos WHERE lgnum EQ t_alv-lgnum
                                                           AND ivnum EQ t_alv-ivnum.

ENDFORM.
