FUNCTION zswm_grabar_peso_albaran_ui5.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TKNUM) TYPE  TKNUM
*"     VALUE(PESO) TYPE  MENGE_D
*"     VALUE(GEWEI) TYPE  GEWEI DEFAULT 'KG'
*"     VALUE(MODE_BI) TYPE  BALMODE DEFAULT 'N'
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
  DATA: zswm_peso_albara TYPE zswm_peso_albara.
  PERFORM break USING 'ZSWM_GRABAR_PESO_ALBARAN_UI5'.

  DATA t_log LIKE bdcmsgcoll  OCCURS 0 WITH HEADER LINE.
  IF peso <= 0.
    MOVE abap_true TO error.
    PERFORM mensaje USING 'E' 'ZWM_RF' '071' space space space space CHANGING tt_log[].
  ELSE.
*   add jtm 20.07.2022
    DATA sw_que_es.
    tknum = |{ tknum ALPHA = IN }|.
    SELECT SINGLE COUNT( * ) FROM vttk WHERE tknum EQ tknum.
    IF sy-subrc EQ 0.
      sw_que_es = 'T'.
    ELSE.
      SELECT SINGLE COUNT( * ) FROM likp WHERE vbeln EQ tknum.
      IF sy-subrc EQ 0.
        sw_que_es = 'E'.
      ELSE.

      ENDIF.
    ENDIF.
    CASE sw_que_es.
      WHEN 'E'.
        CLEAR zswm_peso_albara.
        zswm_peso_albara-mandt  = sy-mandt.
        zswm_peso_albara-vbeln  = tknum.
        zswm_peso_albara-gewei  = gewei.
        zswm_peso_albara-brgew  = peso.
        zswm_peso_albara-erdat  = sy-datum.
        zswm_peso_albara-erzeit = sy-uzeit.
        zswm_peso_albara-ernam  = sy-uname.
        MODIFY zswm_peso_albara FROM zswm_peso_albara.
        commit WORK and WAIT.
      WHEN 'T'.
*   fin de add jtm 20.07.2022
        CLEAR: t_bdc[], t_log[].
        dynpro 'SAPMV56A'  '1011'.
        campo  'VTTK-TKNUM' tknum.
        boton  '=MM_TKAL'.

        dynpro 'SAPMV56A'  '1020'.
        boton  '=TABS_OV_AI'.

        dynpro 'SAPMV56A'  '1020'.
        DATA peso_c(12).
        WRITE peso TO peso_c LEFT-JUSTIFIED UNIT gewei.
        campo  'VTTK-ZZPESO_ALB' peso_c.
        boton  '=MM_SICH'.

        CALL TRANSACTION 'VT02N' USING t_bdc MODE mode_bi MESSAGES INTO t_log.
        LOOP AT t_log WHERE msgtyp EQ 'E'
                         OR msgtyp EQ 'A'.
          MOVE abap_true TO error.
        ENDLOOP.
        IF abap_true EQ error.
          DELETE t_log WHERE NOT ( msgtyp EQ 'E' OR msgtyp EQ 'A' ).

          CALL FUNCTION 'CONVERT_BDCMSGCOLL_TO_BAPIRET2'
            TABLES
              imt_bdcmsgcoll = t_log
              ext_return     = tt_log[].

        ENDIF.
    ENDCASE. " add jtm 20.07.2022
  ENDIF.
*  DATA: lt_xvttk                TYPE TABLE OF vttkvb,
*        lt_yvttk                TYPE TABLE OF vttkvb,
*        ls_yvttk                TYPE vttkvb,
*        ls_xvttk_new            TYPE vttkvb,
*        ls_tvtk                 TYPE tvtk,
*        lt_xvttp                TYPE vttpvb_tab,
*        lt_yvttp                TYPE vttpvb_tab,
*        lt_xvtts                TYPE vttsvb_tab,
*        lt_yvtts                TYPE vttsvb_tab,
*        lt_xvtsp                TYPE vtspvb_tab,
*        lt_yvtsp                TYPE vtspvb_tab,
*        lt_xvbpa                TYPE vbpa_tab,
*        lt_yvbpa                TYPE vbpa_tab,
*        lt_xvbadr               TYPE tt_sadrvb,
*        lt_yvbadr               TYPE tt_sadrvb,
*        lt_xtrlk                TYPE vtrlk_tab,
*        lt_xtrlp                TYPE vtrlp_tab,
*        lv_log_always           TYPE  c,
*        lv_log_on_error_warning TYPE  c,
*        lv_save_log             TYPE  c,
*        ls_split_dialog_wa      TYPE  ledsp_all,
*        lv_tabix                TYPE sy-tabix.
*  DATA: gt_vttk TYPE TABLE OF vttk.
*
*  IF peso <= 0.
*    MOVE abap_true TO error.
*    PERFORM mensaje USING 'E' 'ZWM_RF' '071' space space space space CHANGING tt_log[].
*  ELSE.
*    DATA ls_vttk TYPE vttk.
*    SELECT SINGLE * INTO CORRESPONDING FIELDS OF ls_vttk FROM vttk WHERE tknum EQ tknum.
*    APPEND ls_vttk TO lt_xvttk.
*
*    ls_vttk-zzpeso_alb = peso.
*    APPEND ls_vttk TO lt_yvttk.
*
*    MOVE-CORRESPONDING ls_vttk TO ls_tvtk.
**        Se informa al transporte
*    CALL FUNCTION 'SD_SHIPMENT_HEADER_CHANGE'
*      EXPORTING
*        i_tvtk                       = ls_tvtk
**       I_DESTINATION                =
**       I_DEPARTURE                  =
**       OPT_DIALOG                   = 'X'
**         IMPORTING
**       E_SERV_AGENT_FROM_DELIVERY   =
**       E_ROUTE_FROM_DELIVERY        =
**       E_LEG_DETERMINATION_DONE     =
**       E_NUMBER_OF_CHANGED_LEGS     =
*      TABLES
*        c_xvttk                      = lt_xvttk
*        c_yvttk                      = lt_yvttk
*        c_xvttp                      = lt_xvttp
*        c_yvttp                      = lt_yvttp
*        c_xvtts                      = lt_xvtts
*        c_yvtts                      = lt_yvtts
*        c_xvtsp                      = lt_xvtsp
*        c_yvtsp                      = lt_yvtsp
*        c_xvbpa                      = lt_xvbpa
*        c_yvbpa                      = lt_yvbpa
*        c_xvbadr                     = lt_xvbadr
*        c_yvbadr                     = lt_yvbadr
*        i_xtrlk                      = lt_xtrlk
*        i_xtrlp                      = lt_xtrlp
**       I_DEPARTURE_SEQUENCE         =
**       I_XVTFA                      =
**       I_YVTFA                      =
*      CHANGING
*        c_xvttk_new                  = ls_xvttk_new
*      EXCEPTIONS
*        invalid_change               = 1
*        route_insert_failed          = 2
*        tdlnr_insert_failed          = 3
*        status_planned_failed        = 4
*        status_registrated_failed    = 5
*        status_loading_start_failed  = 6
*        status_loading_end_failed    = 7
*        status_completion_failed     = 8
*        status_shipment_start_failed = 9
*        status_shipment_end_failed   = 10
*        OTHERS                       = 11.
*    IF sy-subrc NE 0.
*      MOVE abap_true TO error.
*      PERFORM mensaje USING 'E' 'ZWM_RF' '072' tknum space space space CHANGING tt_log[].
*    ELSE.
*      CLEAR: ls_yvttk.
*      MOVE-CORRESPONDING ls_vttk TO ls_yvttk.
*      APPEND ls_yvttk TO lt_yvttk.
*
*      CALL FUNCTION 'SD_SHIPMENTS_SAVE'
*        EXPORTING
*          i_transaktionstyp      = 'V'
**         I_UPD_DEADLINES        = 'X'
**         I_UPD_TEXTS            = 'X'
**         I_UPD_SHIPPING_UNITS   = 'X'
**         I_UPD_OUTPUT           = 'X'
**         I_OPT_UPDATE_TASK      = 'X'
**         I_OPT_ACTIVITIES       = 'X'
**         I_OPT_NO_STATISTICS    = ' '
**         I_OPT_READ_SHIP_UNITS  = 'X'
******               I_FLAG_TRA_COMPLETE          = 'X'
*          i_flag_tra_complete    = 'C'
**         I_TRA_SAVE_CALLER      =
*          i_tra_save_caller      = 'DIA'
*        IMPORTING
*          e_log_always           = lv_log_always
*          e_log_on_error_warning = lv_log_on_error_warning
*          e_save_log             = lv_save_log
*        TABLES
*          i_xvttk                = lt_xvttk
*          i_yvttk                = lt_yvttk
*          i_xvttp                = lt_xvttp
*          i_yvttp                = lt_yvttp
**         I_VTRLK                =
**         I_VTRLP                =
**         I_XVTTS                =
**         I_YVTTS                =
**         I_XVTSP                =
**         I_YVTSP                =
**         I_XVBPA                =
**         I_YVBPA                =
**         I_XSADR                =
**         I_YSADR                =
**         I_XVTFA                =
**         I_YVTFA                =
**         I_XVEKP                =
**         I_YVEKP                =
**         I_XVEPO                =
**         I_YVEPO                =
*        CHANGING
*          c_split_dialog_wa      = ls_split_dialog_wa
*        EXCEPTIONS
*          no_change              = 1
*          delivery_split_error   = 2
*          OTHERS                 = 3.
*      IF sy-subrc NE 0.
*        MOVE abap_true TO error.
*        PERFORM mensaje USING 'E' 'ZWM_RF' '072' tknum space space space CHANGING tt_log[].
*
*      ELSE.
*        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'.
*
*      ENDIF.
*    ENDIF.
*  ENDIF.



ENDFUNCTION.
