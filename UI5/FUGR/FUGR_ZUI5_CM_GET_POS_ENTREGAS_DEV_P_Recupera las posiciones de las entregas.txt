FUNCTION zui5_cm_get_pos_entregas_dev_p.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_MATNR) TYPE  RANGES_MATNR_TT OPTIONAL
*"     VALUE(IR_MAKTX) TYPE  FIP_T_MAKTX_RANGE OPTIONAL
*"     VALUE(IR_LARGO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_ALTO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_ANCHO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_LOTE) TYPE  RANGES_CHARG_TT OPTIONAL
*"     VALUE(IR_STATUS) TYPE  ZUI5R_CM_STATUS OPTIONAL
*"     VALUE(IR_TPLST) TYPE  ZSUITT_CM_TPLST_RANGE OPTIONAL
*"     VALUE(IR_VBELN) TYPE  /EBY/_LBAPIDLV_RANGE_VBELN OPTIONAL
*"     VALUE(IR_KUNNR) TYPE  ZSUI_CM_KUNNR_RANGE_T OPTIONAL
*"     VALUE(IR_TKNUM) TYPE  SHP_TKNUM_RANGE_T OPTIONAL
*"     VALUE(I_TKNUM) TYPE  TKNUM OPTIONAL
*"     VALUE(I_VBELN) TYPE  VBELN_VL OPTIONAL
*"     VALUE(I_POSNR) TYPE  POSNR_VL OPTIONAL
*"     VALUE(IR_MEDIDACAJA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(I_ALMACEN_MONTAJE) TYPE  LGORT_D OPTIONAL
*"  EXPORTING
*"     VALUE(O_DATA) TYPE  ZSUITT_CM_POSICIONES_ENT_DEV
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  DATA: v_str_largo     TYPE char20,
        v_str_alto      TYPE char20,
        v_lote_2d       TYPE charg_d,
        v_lote_3d       TYPE charg_d,
        v_dimension(60) TYPE c,
        v_str_ancho     TYPE char20.
  DATA: r_posnr TYPE RANGE OF posnr_vl.

  IF i_tknum IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_tknum ASSIGNING  FIELD-SYMBOL(<ls_trans>).
    <ls_trans>-sign = 'I'.
    <ls_trans>-option = 'EQ'.
    <ls_trans>-low = |{ i_tknum ALPHA = IN }|.
  ENDIF.
  IF i_vbeln IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_vbeln ASSIGNING  FIELD-SYMBOL(<ls_vbeln>).
    <ls_vbeln>-sign = 'I'.
    <ls_vbeln>-option = 'EQ'.
    <ls_vbeln>-deliv_numb_low = |{ i_vbeln ALPHA = IN }|.
  ENDIF.

  IF i_posnr IS NOT INITIAL.
    APPEND INITIAL LINE TO r_posnr ASSIGNING  FIELD-SYMBOL(<ls_posnr>).
    <ls_posnr>-sign = 'I'.
    <ls_posnr>-option = 'EQ'.
    <ls_posnr>-low =  |{ i_posnr  ALPHA = IN }|.
  ENDIF.

  SELECT vt~tknum, l~vbeln, l~posnr, l~matnr, b~maktx, l~werks, yhp~prole AS largo, yhp~prole_uom AS largo_uom, yhp~prowi AS ancho, yhp~prowi_uom AS ancho_uom, yhp~prohe AS alto, yhp~prohe_uom AS alto_uom,
         l~charg, l~lfimg, l~lgort, l~meins, mc~zzkunnr AS kunnr, k~name1 AS kunnr_name, yhp2~tbqty AS cajas_pallets, l~vgbel AS ebeln, l~vgpos AS ebelp, mb~ersda AS hsdat,
         l~zztipo_devolucion AS tipo_devolucion, t~ddtext AS tipo_devolucion_name
  FROM lips AS l
    INNER JOIN mara AS ma ON ma~matnr = l~matnr AND ma~mtart NE 'ZPAL'
    INNER JOIN makt AS b ON b~matnr = ma~matnr AND b~spras = @sy-langu
    INNER JOIN marc AS c ON c~matnr = l~matnr AND c~werks = l~werks
    LEFT JOIN mcha AS mc ON mc~matnr = l~matnr AND  mc~werks = l~werks AND mc~charg = l~charg
    LEFT JOIN mchb AS mb ON mb~matnr = l~matnr AND  mb~werks = l~werks AND mb~charg = l~charg AND mb~lgort = l~lgort
    LEFT JOIN yhp_idx_td100  AS yhp ON yhp~cuobj = c~cuobj
    LEFT JOIN kna1 AS k ON k~kunnr = mc~zzkunnr
    LEFT JOIN vttp AS vt ON vt~vbeln = l~vbeln
    LEFT JOIN yhp_idx_td151  AS yhp2 ON yhp2~cuobj = c~cuobj AND yhp2~shuty = 'UNIT'
    LEFT JOIN dd07t AS t ON t~domvalue_l = l~zztipo_devolucion AND t~ddlanguage = @sy-langu AND t~domname = 'ZUI5D_CM_TIPO_DEVOLUCION'
    INTO TABLE @DATA(lt_data)
    WHERE l~vbeln IN @ir_vbeln
    AND  l~posnr IN @r_posnr
    AND l~werks IN @ir_tplst
    AND l~lgort IN @ir_tplst
    AND l~matnr IN @ir_matnr
    AND b~maktx IN @ir_maktx
    AND l~charg IN @ir_lote
    AND mc~zzkunnr IN @ir_kunnr
    AND yhp~prole IN @ir_largo
    AND yhp~prowi IN @ir_ancho
    AND yhp~prohe IN @ir_alto
    AND vt~tknum IN @ir_tknum.
  IF sy-subrc = 0.
    "Recuperamos campso Z de la ekpo para lote 3D
    SELECT ebeln, ebelp, zzmatpal, zzcantpal, zzcanxpal, b~maktx, a~zzaugru, c~bezei
      FROM ekpo AS a
      LEFT JOIN makt AS b ON b~matnr = a~zzmatpal AND b~spras = @sy-langu
      LEFT JOIN tvaut AS c ON c~augru = a~zzaugru AND c~spras = @sy-langu
      INTO TABLE @DATA(lt_ekpo)
      FOR ALL ENTRIES IN @lt_data
       WHERE ebeln  = @lt_data-ebeln.

    "REcuperamos campso Z de la Lips para lote 3D
    SELECT vbeln, posnr, zzmatpal, zzcantpal, zzcanxpal, b~maktx
      FROM lips AS a
      LEFT JOIN makt AS b ON b~matnr = a~zzmatpal AND b~spras = @sy-langu
      INTO TABLE @DATA(lt_lips)
      FOR ALL ENTRIES IN @lt_data
       WHERE vbeln  = @lt_data-vbeln
      AND posnr = @lt_data-posnr.

    LOOP AT lt_data ASSIGNING FIELD-SYMBOL(<ls_data>).
      WRITE <ls_data>-largo TO v_str_largo LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
      WRITE <ls_data>-alto  TO v_str_alto  LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
      WRITE <ls_data>-ancho TO v_str_ancho LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
      v_dimension = |{ v_str_largo }x{ v_str_alto }x{ v_str_ancho }|.

      IF NOT v_dimension IN ir_medidacaja AND NOT ir_medidacaja IS INITIAL.
        CONTINUE.
      ENDIF.

      APPEND INITIAL LINE TO o_data ASSIGNING FIELD-SYMBOL(<ls_o_data>).

      MOVE-CORRESPONDING <ls_data> TO <ls_o_data>.

      <ls_o_data>-dimensiones = v_dimension.

      CALL FUNCTION 'ZUI5_CM_STATUS_LOTE'
        EXPORTING
          i_lgort       = <ls_o_data>-lgort
          i_werks       = <ls_o_data>-werks
          i_charg       = <ls_o_data>-charg
        IMPORTING
          o_status      = <ls_o_data>-status_lote
          o_status_text = <ls_o_data>-status_text
          o_lote_2d     = v_lote_2d
          o_lote_3d     = v_lote_3d.

      " Comprobamos si el lote de la iteración es 3D.
      IF v_lote_3d EQ <ls_o_data>-charg.
        " Estamos procesando un Lote 3D.
        SELECT SINGLE ersda FROM mchb INTO @<ls_o_data>-hsdat
          WHERE charg EQ @v_lote_2d.
      ENDIF.

      "Para Lotes 3D recuperamos datos de la LIPS
      IF <ls_o_data>-status_lote = '00' OR <ls_o_data>-status_lote = '01'.
        <ls_o_data>-tipo_pallet = ''.

        READ TABLE lt_lips INTO DATA(ls_lips) WITH KEY vbeln = <ls_o_data>-vbeln posnr = <ls_o_data>-posnr.
        IF sy-subrc = 0.
          <ls_o_data>-cajas_pallets = ls_lips-zzcanxpal.
          <ls_o_data>-num_pallets = ls_lips-zzcantpal.
          <ls_o_data>-tipo_pallet = ls_lips-zzmatpal.
          <ls_o_data>-txt_tipo_pallet = ls_lips-maktx.
        ENDIF.
      ELSE.
        READ TABLE lt_ekpo INTO DATA(ls_ekpo) WITH KEY ebeln = <ls_o_data>-ebeln ebelp = <ls_o_data>-ebelp.
        IF sy-subrc = 0.
          <ls_o_data>-cajas_pallets = ls_ekpo-zzcanxpal.
          <ls_o_data>-num_pallets = ls_ekpo-zzcantpal.
          <ls_o_data>-tipo_pallet = ls_ekpo-zzmatpal.
          <ls_o_data>-txt_tipo_pallet = ls_ekpo-maktx.
          <ls_o_data>-zzaugru = ls_ekpo-zzaugru.
          <ls_o_data>-zzaugru_name = ls_ekpo-bezei.
        ENDIF.
      ENDIF.
    ENDLOOP.

  ELSE.
*    APPEND INITIAL LINE TO o_return ASSIGNING FIELD-SYMBOL(<ls_return>).
*    <ls_return>-type = 'E'.
*    <ls_return>-id = 'ZUI5_CM'.
*    <ls_return>-number = '005'.
  ENDIF.

ENDFUNCTION.
