FUNCTION zswm_emcia_ui5 .
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(CADENA) TYPE  BARCODE
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
  PERFORM break USING 'ZSWM_EMCIA_UI5'.

* GAPOF001 Recepción de MCIA
  CLEAR: error, tt_log[].
  DATA: error_call,
        tt_log_call TYPE bapiret2_tt,
        user_d      TYPE zswm_data_ui5_eeeoo_str,
        sw_que_es,
        cadena_cb   TYPE string,
        exidv       TYPE exidv.
  MOVE cadena TO cadena_cb.
  CLEAR sw_que_es.
*  data exidv type exidv.
  CALL FUNCTION 'ZSWM_GET_DATA_USER_UI5'
    EXPORTING
      no_gen_log = abap_true
*   EXPORTING
*     UNAME      = SY-UNAME
*     STATU      = 'X'
    IMPORTING
      data_user  = user_d
      error      = error_call
      tt_log     = tt_log_call.
  IF error_call EQ abap_true.
    MOVE abap_true TO error.
    tt_log[] = tt_log_call[].
  ELSEIF cadena_cb IS NOT INITIAL.
    WHILE cadena_cb+0(1) EQ space.
      cadena_cb = cadena_cb+1.
    ENDWHILE.
    DATA exidv_aux TYPE vekp-exidv.
    exidv_aux = cadena_cb.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = exidv_aux
      IMPORTING
        output = exidv.
    SELECT SINGLE * INTO @DATA(r_vekp) FROM vekp WHERE exidv  EQ @exidv
                                                   AND status NE '0060'. " borrado
    IF sy-subrc EQ 0.
      IF r_vekp-lgnum NE user_d-lgnum.
        MOVE abap_true TO error.
*          Usuario & logueado en nº almacen &, y entrega & es de nº almacen &
        PERFORM mensaje USING 'E' 'ZSWM_UI5' '001'  user_d-uname user_d-lgnum  r_vekp-vbeln_gen r_vekp-lgnum CHANGING tt_log[].
      ELSE.
        SELECT SINGLE vbtyp INTO @DATA(vbtyp) FROM likp WHERE vbeln EQ @r_vekp-vbeln_gen.
        IF vbtyp    NE '7'
        OR sy-subrc NE 0.
          MOVE abap_true TO error.
*            El bulto de matricula & pertenece a una entrega & que no es entrante
          PERFORM mensaje USING 'E' 'ZSWM_UI5' '002' exidv r_vekp-vbeln_gen space space CHANGING tt_log[].
        ELSE.
          SELECT SINGLE wbstk INTO @DATA(wbstk) FROM vbuk WHERE vbeln EQ @r_vekp-vbeln_gen.
          IF sy-subrc NE 0
          OR wbstk    EQ 'C'.
            MOVE abap_true TO error.
*               El bulto de matricula & pertenece a una entrega & ya contabilizada
            PERFORM mensaje USING 'E' 'ZSWM_UI5' '002' exidv r_vekp-vbeln_gen space space CHANGING tt_log[].
          ELSE.
*               Intentamos contabilizar entrega entrante &.
            PERFORM mensaje USING 'I' 'ZSWM_UI5' '005' r_vekp-vbeln_gen space space space CHANGING tt_log[].
            PERFORM contabilizar USING r_vekp-vbeln_gen vbtyp CHANGING error tt_log.
          ENDIF.
        ENDIF.
      ENDIF.
    ELSE.

    ENDIF.
  ELSE.

  ENDIF.
  DATA: fval TYPE bdc_fval.
  fval = cadena.

  CALL METHOD zcl_ui5_log=>save_log
    EXPORTING
      mf        = 'ZSWM_EMCIA_UI5'
      uname     = sy-uname
      statu     = abap_true
*     tcode     = TCODE
      error     = error
      lgnum     = user_d-lgnum
      fieldname = 'BARCODE'
      fval      = fval
*     operario  =
      tt_log    = tt_log
      commit    = abap_true.




ENDFUNCTION.
