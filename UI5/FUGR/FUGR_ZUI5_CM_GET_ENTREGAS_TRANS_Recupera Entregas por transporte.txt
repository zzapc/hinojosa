FUNCTION zui5_cm_get_entregas_trans.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_CENTRO_MONTAJE) TYPE  ZSUITT_CM_TPLST_RANGE OPTIONAL
*"     VALUE(IR_VBELN) TYPE  /EBY/_LBAPIDLV_RANGE_VBELN OPTIONAL
*"     VALUE(IR_DESTINATARIO) TYPE  SHP_KUNWE_RANGE_T OPTIONAL
*"     VALUE(IR_DESTINATARIO_NOMBRE) TYPE  ZSUIS_CM_NOMBRES_RANG
*"       OPTIONAL
*"     VALUE(IR_CLIENTE) TYPE  SHP_KUNWE_RANGE_T OPTIONAL
*"     VALUE(IR_CLIENTE_NOMBRE) TYPE  ZSUIS_CM_NOMBRES_RANG OPTIONAL
*"     VALUE(IR_FECHA) TYPE  DATE_T_RANGE OPTIONAL
*"     VALUE(IR_RUTA) TYPE  SHP_ROUTE_RANGE_T OPTIONAL
*"     VALUE(IR_INCOTERM) TYPE  SHP_INCO1_RANGE_T OPTIONAL
*"     VALUE(IR_TKNUM) TYPE  SHP_TKNUM_RANGE_T OPTIONAL
*"     VALUE(I_TKNUM) TYPE  TKNUM OPTIONAL
*"     VALUE(I_VBELN) TYPE  VBELN_VL OPTIONAL
*"  EXPORTING
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"     VALUE(O_DATA) TYPE  ZSUITT_CM_ENTREGAS
*"----------------------------------------------------------------------
  IF i_tknum IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_tknum ASSIGNING  FIELD-SYMBOL(<ls_trans>).
    <ls_trans>-sign = 'I'.
    <ls_trans>-option = 'EQ'.
    <ls_trans>-low = |{ i_tknum ALPHA = IN }|.
  ENDIF.
  IF i_vbeln IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_vbeln ASSIGNING  FIELD-SYMBOL(<ls_vbeln>).
    <ls_vbeln>-sign = 'I'.
    <ls_vbeln>-option = 'EQ'.
    <ls_vbeln>-deliv_numb_low = |{ i_vbeln ALPHA = IN }|.
  ENDIF.

  SELECT a~tknum, b~vbeln, we~kunnr, kwe~name1 AS kunwe_name, b~wadat, b~route, b~inco1, ag~kunnr, kag~name1 AS kunag_name, b~vstel, t~vtext,

    CASE WHEN b~lfart = 'ZLR' AND vbfa~vbtyp_v = 'C' THEN 'X'
         WHEN b~lfart = 'ZLR' AND vbfa~vbtyp_v = @space THEN 'R'
         WHEN b~lfart = 'ZLR' AND vbfa~vbtyp_v IS NULL THEN 'R'
         ELSE @space END AS devolucion,
         ad~city1, ad~street
    FROM vttp AS a
    INNER JOIN likp AS b ON b~vbeln = a~vbeln

    LEFT JOIN vbpa AS we ON we~vbeln = b~vbeln AND we~parvw = 'WE'
    LEFT JOIN kna1 AS kwe ON kwe~kunnr = we~kunnr
    LEFT JOIN vbpa AS ag ON ag~vbeln = b~vbeln AND ag~parvw = 'AG'
    LEFT JOIN kna1 AS kag ON kag~kunnr = ag~kunnr
    LEFT JOIN tvstt AS t ON t~vstel = b~vstel AND t~spras = @sy-langu
    LEFT OUTER JOIN vbfa AS vbfa ON b~vbeln = vbfa~vbeln AND vbtyp_v = 'C'
    LEFT JOIN adrc AS ad ON ad~addrnumber = kwe~adrnr
    INTO TABLE @o_data
    WHERE a~tknum IN @ir_tknum
      AND b~vbeln IN @ir_vbeln
      AND we~kunnr IN @ir_destinatario
      AND kwe~name1 IN @ir_destinatario_nombre
      AND ag~kunnr IN @ir_cliente
      AND kag~name1 IN @ir_cliente_nombre
      AND b~wadat IN @ir_fecha
      AND b~route IN @ir_ruta
      AND b~inco1 IN @ir_incoterm.
  IF sy-subrc = 0.
    SELECT DISTINCT vp~vbeln, va~augru, tv~bezei,  vb~bstkd
      FROM vbfa AS vp
      LEFT JOIN vbkd AS vb ON vp~vbelv = vb~vbeln  AND vb~posnr = '000000'
      LEFT JOIN vbak AS va ON va~vbeln = vp~vbelv
      LEFT JOIN tvaut AS tv ON tv~augru = va~augru AND tv~spras = @sy-langu
      INTO TABLE @DATA(lt_motivo)
      FOR ALL ENTRIES IN @o_data
      WHERE vp~vbeln = @o_data-vbeln.
    IF sy-subrc = 0.
      LOOP AT o_data ASSIGNING FIELD-SYMBOL(<ls_odata>).
        READ TABLE lt_motivo INTO DATA(ls_motivo) WITH KEY vbeln = <ls_odata>-vbeln.
        IF sy-subrc = 0.
          <ls_odata>-augru = ls_motivo-augru.
          <ls_odata>-augru_name = ls_motivo-bezei.
          <ls_odata>-bstkd = ls_motivo-bstkd.
        ENDIF.
      ENDLOOP.
    ENDIF.


  ENDIF.


ENDFUNCTION.
