FUNCTION zui5_cm_get_entradas.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_EBELN) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_VBELN) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_POSNR) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_EBELP) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_MATNR) TYPE  TBL_MAT_RANGE OPTIONAL
*"     VALUE(IR_MAKTX) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_WERKS) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_LIFNR) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_LIFNR_NAME) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_MEDIDACAJA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_CHARG) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_CHARG_STAT) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_KUNNR) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_KUNNR_NAME) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_CANTIDAD) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_TDLNR) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_AGENCIA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_ADD01) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_TEXT1) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IV_VBELN) TYPE  VBELN_VL OPTIONAL
*"     VALUE(IV_POSNR) TYPE  POSNR_VL OPTIONAL
*"     VALUE(IR_LGORT) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_WADAT_IST) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_EINDT) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_WBSTA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_BELNR) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_BUZEI) TYPE  RSELOPTION OPTIONAL
*"  EXPORTING
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"     VALUE(O_DATA) TYPE  ZSUITT_CM_ENTREGAS_ENTRANTES
*"----------------------------------------------------------------------
  TYPES: BEGIN OF ty_s_ee_pedido_ext,
           vbeln TYPE vbeln_vl,
           lifex TYPE lifex,
         END OF ty_s_ee_pedido_ext.

  DATA wl_odata TYPE zsuist_cm_entregas_entrantes.
  DATA: tl_idd07v TYPE TABLE OF  dd07v .
  DATA: r_ee_pedido_ext TYPE RANGE OF vbeln_vl.
  DATA: lt_pedido_ext TYPE STANDARD TABLE OF ty_s_ee_pedido_ext.
  DATA: r_belnr TYPE RANGE OF mblnr.

  IF NOT iv_vbeln IS INITIAL .
    APPEND VALUE #( sign = 'I' option = 'EQ' low = iv_vbeln ) TO ir_vbeln.
  ENDIF.
  IF NOT iv_posnr IS INITIAL.
    APPEND VALUE #( sign = 'I' option = 'EQ' low = iv_posnr ) TO ir_posnr.
  ENDIF.

  DATA rg_ebeln TYPE RANGE OF ebeln.

  rg_ebeln = ir_ebeln.

  SELECT a~vbeln, a~posnr, a~ebeln, a~ebelp, a~matnr, a~maktx, a~reswk, a~reslo, a~werks, a~lifnr, a~lifnr_name, a~length, a~height, a~width, a~charg, a~kunnr,
    a~kunnr_name, a~cantidad, a~meins, a~tdlnr, a~agencia, a~add01, a~text1, a~lgort, a~wadat_ist, a~wbsta, a~eindt, a~vbtyp, a~belnr, a~buzei, b~wbsta AS ent_sal_wbsta
    FROM zsui5cmventrega1 AS a
    LEFT JOIN vbup AS b ON b~vbeln = a~belnr AND b~posnr = a~buzei "and b~wbsta = 'C' "Solo mostramos las entregas de Salida contabilizadas
           WHERE a~ebeln IN @rg_ebeln
            AND a~ebelp IN @ir_ebelp
            AND a~vbeln IN @ir_vbeln
            AND a~posnr IN @ir_posnr
            AND a~matnr IN @ir_matnr
            AND a~lgort IN @ir_lgort
            AND a~maktx IN @ir_maktx
            AND a~werks IN @ir_werks
            AND a~eindt IN @ir_eindt
            AND a~lifnr IN @ir_lifnr
            AND a~wadat_ist IN @ir_wadat_ist
            AND a~lifnr_name IN @ir_lifnr_name
            AND a~charg IN @ir_charg

            AND a~tdlnr IN @ir_tdlnr
            AND a~agencia IN @ir_agencia
            AND a~add01 IN @ir_add01
            AND a~text1 IN @ir_text1
*            AND shuty = 'BASE_BOX'
            AND a~wbsta IN @ir_wbsta
            AND a~kunnr IN @ir_kunnr
            AND a~kunnr_name IN @ir_kunnr_name
            AND a~cantidad IN @ir_cantidad
            AND a~belnr IN @ir_belnr
            AND a~buzei IN @ir_buzei
            INTO TABLE @DATA(tv_data).

  IF sy-subrc = 0.
    r_ee_pedido_ext = VALUE #( FOR ls_data IN tv_data WHERE ( belnr EQ space ) ( sign = 'I' option = 'EQ' low = ls_data-vbeln ) ).
    IF r_ee_pedido_ext IS NOT INITIAL.
      SELECT vbeln, lifex
        FROM likp
        INTO TABLE @lt_pedido_ext
        WHERE vbeln IN @r_ee_pedido_ext
        ORDER BY vbeln.

    ENDIF.

    LOOP AT tv_data ASSIGNING FIELD-SYMBOL(<fs_data>) WHERE ent_sal_wbsta = 'C' or ent_sal_wbsta = ''.

      wl_odata-medidacaja = |{  <fs_data>-length DECIMALS = 0  }| && 'x' && |{ <fs_data>-height DECIMALS = 0 }|  && 'x' && |{ <fs_data>-width DECIMALS = 0 }| .

      IF NOT wl_odata-medidacaja IN ir_medidacaja AND NOT ir_medidacaja IS INITIAL.
        CONTINUE.
      ENDIF.

      CALL FUNCTION 'ZUI5_CM_STATUS_LOTE'
        EXPORTING
          i_werks       = <fs_data>-werks
          i_lgort       = <fs_data>-lgort
          i_charg       = <fs_data>-charg
        IMPORTING
          o_status      = wl_odata-charg_stat
          o_status_text = wl_odata-charg_stat_text.

      IF wl_odata-charg_stat NOT IN  ir_charg_stat AND NOT ir_charg_stat IS INITIAL.
        CONTINUE.
      ENDIF.

      MOVE-CORRESPONDING <fs_data> TO wl_odata.



      wl_odata-centro_montaje = <fs_data>-werks.
      wl_odata-almacen_montaje = <fs_data>-lgort.
      wl_odata-reslo = <fs_data>-reslo.
      wl_odata-reswk = <fs_data>-reswk.

      CALL FUNCTION 'DD_DOMVALUES_GET'
        EXPORTING
          domname   = 'STATV'
          text      = 'X'
          langu     = sy-langu
*         BYPASS_BUFFER        = ' '
*       IMPORTING
*         RC        =
        TABLES
          dd07v_tab = tl_idd07v
*       EXCEPTIONS
*         WRONG_TEXTFLAG       = 1
*         OTHERS    = 2
        .
      IF sy-subrc <> 0.
* Implement suitable error handling her
      ELSE.
        READ TABLE tl_idd07v INTO DATA(wv_idd07v) WITH KEY domvalue_l = wl_odata-wbsta.
        IF sy-subrc = 0.

          wl_odata-wbsta_text = wv_idd07v-ddtext.

        ENDIF.
      ENDIF.

      IF ( wl_odata-wbsta <> 'B' AND wl_odata-wbsta <> 'C' ) .
        wl_odata-contabilizado = ''.
      ELSE.
        wl_odata-contabilizado = 'X'.
      ENDIF.

      IF wl_odata-belnr IS INITIAL.
        wl_odata-deletable = 'X'.
      ELSE.
        wl_odata-deletable = ''.
      ENDIF.

      "Para las entrega con pedido externo recuperamos el albarán del campo LIKP-LIFEX
      IF wl_odata-belnr IS INITIAL.
        READ TABLE lt_pedido_ext INTO DATA(ls_ee) WITH KEY vbeln = wl_odata-vbeln BINARY SEARCH.
        IF sy-subrc = 0.
          wl_odata-belnr = ls_ee-lifex.
        ENDIF.
      ELSE.
        wl_odata-belnr = |{ wl_odata-belnr ALPHA = OUT }| .
      ENDIF.

      INSERT wl_odata INTO TABLE o_data.

    ENDLOOP.

    IF o_data IS INITIAL.

      APPEND VALUE #( type = 'I' id = 'ZUI5_CM' number = '050' ) TO o_return.

    ENDIF.

  ELSE.
    APPEND VALUE #( type = 'I' id = 'ZUI5_CM' number = '050' ) TO o_return.
  ENDIF.

ENDFUNCTION.
