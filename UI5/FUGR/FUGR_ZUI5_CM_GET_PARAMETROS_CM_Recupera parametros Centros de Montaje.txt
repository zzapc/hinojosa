FUNCTION zui5_cm_get_parametros_cm.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_WERKS) TYPE  WERKS_D OPTIONAL
*"     VALUE(I_LGORT) TYPE  LGORT_D
*"     VALUE(IT_POSICIONES) TYPE  ZSUITT_CM_POSICIONES_ENTREGA OPTIONAL
*"  EXPORTING
*"     VALUE(E_PARAMETROS) TYPE  ZCMVENTA
*"     VALUE(ET_TIPO_POSICION) TYPE  ZSUITT_CM_TIPO_POSICION
*"  TABLES
*"      IT_PARAMETROS STRUCTURE  ZCMVENTA OPTIONAL
*"----------------------------------------------------------------------
  DATA: r_werks TYPE RANGE OF werks_d,
        r_lgort TYPE RANGE OF lgort_d,
        r_auart TYPE RANGE OF auart,
        r_matnr TYPE RANGE OF matnr.

  IF i_werks IS NOT INITIAL.
    APPEND INITIAL LINE TO r_werks ASSIGNING FIELD-SYMBOL(<ls_werk>).
    <ls_werk>-sign = 'I'.
    <ls_werk>-option = 'EQ'.
    <ls_werk>-low = i_werks.
  ENDIF.
  IF i_lgort IS NOT INITIAL.
    APPEND INITIAL LINE TO r_lgort ASSIGNING FIELD-SYMBOL(<ls_lgort>).
    <ls_lgort>-sign = 'I'.
    <ls_lgort>-option = 'EQ'.
    <ls_lgort>-low = i_lgort.
  ENDIF.

  SELECT *
    FROM zcmventa
    INTO TABLE it_parametros
    WHERE werks IN r_werks
    AND lgort IN r_lgort.
  IF sy-subrc = 0.
    e_parametros = it_parametros[ 1 ].

    "Obtenemos el Tipo de Posición por parametrización según Grupo Material de la tabla V_T184
    IF it_posiciones IS NOT INITIAL.
      r_auart = VALUE #( ( sign = 'I' option = 'EQ' low = e_parametros-auart )
      ( sign = 'I' option = 'EQ' low = e_parametros-auart_dev ) ).

      r_matnr = VALUE #( FOR pos IN it_posiciones (  sign = 'I' option = 'EQ' low = pos-matnr ) ).

      SELECT b~auart, a~matnr, b~pstyv
        FROM mvke AS a
        INNER JOIN t184 AS b ON b~mtpos = a~mtpos
        INTO TABLE @et_tipo_posicion
        WHERE b~auart IN @r_auart
        AND b~vwpos = @space
        AND b~uepst = @space
        AND a~matnr IN @r_matnr.

    ENDIF.
  ENDIF.

ENDFUNCTION.
