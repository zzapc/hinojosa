FUNCTION zui5_mf_actualizar_transporte.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(MATRICULA) TYPE  SIGNI OPTIONAL
*"     VALUE(REMOLQUE) TYPE  TPBEZ OPTIONAL
*"     VALUE(ID_CONDUCTOR) TYPE  TEXT1 OPTIONAL
*"     VALUE(PESO_TOTAL) TYPE  ALLOWED_TWGT OPTIONAL
*"     VALUE(ID_TRANSPORTE) TYPE  TKNUM OPTIONAL
*"  EXPORTING
*"     VALUE(O_BAPI_RETURN) TYPE  BAPIRET2
*"----------------------------------------------------------------------

  DATA: ls_vttk TYPE vttk,
        lt_vttk TYPE TABLE OF vttk.

  DATA: lv_flag_error(3) TYPE c.

  DATA l_dpten TYPE dpten.
  DATA l_upten TYPE upten.

  DATA l_correcto TYPE bool VALUE si.
  DATA lv_mensaje TYPE bapi_msg.

*PREPARACIÓN DATOS DEL TRANSPORTE
  SELECT SINGLE * FROM vttk INTO ls_vttk WHERE tknum = id_transporte.

  ls_vttk-signi = matricula.
  ls_vttk-tpbez = remolque.
  ls_vttk-text1 = id_conductor.
  ls_vttk-allowed_twgt = peso_total.
  APPEND ls_vttk TO lt_vttk.

  CALL FUNCTION 'RV_SHIPMENT_UPDATE_DB'
    EXPORTING
      i_flag_tra_complete = 'X'
*     I_TRA_SAVE_CALLER   =
    TABLES
      db_vttk_upd         = lt_vttk.
*Controlamos el error en el preparación de datos
  IF sy-subrc <> 0.
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '013'.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*Confirmamos la preparación de datos
  COMMIT WORK AND WAIT.
  CLEAR: lt_vttk, ls_vttk.

  SELECT SINGLE * FROM vttk INTO ls_vttk WHERE tknum = id_transporte.
  IF sy-subrc <> 0.
  ENDIF.

*INICIAMOS LA CARGA DE TRANSPORTE
  ls_vttk-dalbg = sy-datum.
  ls_vttk-ualbg = sy-uzeit.
  ls_vttk-stlbg = 'X'.
  APPEND ls_vttk TO lt_vttk.

  CALL FUNCTION 'RV_SHIPMENT_UPDATE_DB'
    EXPORTING
      i_flag_tra_complete = 'X'
*     I_TRA_SAVE_CALLER   =
    TABLES
      db_vttk_upd         = lt_vttk.
  IF sy-subrc <> 0.
*Controlamos el error en el inicio de la carga de transporte
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '014'.
    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*Confirmamos la carga de transporte
  COMMIT WORK AND WAIT.
  CLEAR: lt_vttk, ls_vttk.

*FINALIZAMOS LA CARGA DE TRANSPORTE
  SELECT SINGLE * FROM vttk INTO ls_vttk WHERE tknum = id_transporte.

* Modifico los datos que deseo
  ls_vttk-dalen = sy-datum.
  ls_vttk-ualen = sy-uzeit.
  ls_vttk-stlad = 'X'.
  APPEND ls_vttk TO lt_vttk.

  CALL FUNCTION 'RV_SHIPMENT_UPDATE_DB'
    EXPORTING
      i_flag_tra_complete = 'X'
    TABLES
      db_vttk_upd         = lt_vttk.
  IF sy-subrc <> 0.
*Controlamos el error en la finalizacion de la carga del transporte
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '015'.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*Confirmamos la finalizacion de carga de transporte
  COMMIT WORK AND WAIT.
  CLEAR: ls_vttk, lt_vttk.

*-Obtengo todos los datos referentes a la posicion a modificar
  SELECT SINGLE * FROM vttk INTO ls_vttk WHERE tknum = id_transporte.

* Modifico los datos que deseo
  ls_vttk-dtabf = sy-datum.
  ls_vttk-uzabf = sy-uzeit.
  ls_vttk-stabf = 'X'.
  APPEND ls_vttk TO lt_vttk.

  CALL FUNCTION 'RV_SHIPMENT_UPDATE_DB'
    EXPORTING
      i_flag_tra_complete = 'X'
    TABLES
      db_vttk_upd         = lt_vttk.
  IF sy-subrc <> 0.
*Controlamos el error al inicio del despacho expedicion
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '016'.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*Confirmamos el inicio de despacho
  COMMIT WORK AND WAIT.
  CLEAR: ls_vttk, lt_vttk.

*REALIZAMOS LA SALIDA DE MERCANCIAS
  PERFORM contabilizar_entrega2 USING id_transporte CHANGING l_correcto lv_mensaje.
  IF l_correcto <> 'X'.
*Controlamos el error en la salida de mercancias
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-message = lv_mensaje.

    IF lv_mensaje IS INITIAL.
      CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
        EXPORTING
          id         = o_bapi_return-id
          number     = o_bapi_return-number
          language   = sy-langu
          textformat = 'ASC'
        IMPORTING
          message    = o_bapi_return-message.

    ENDIF.


    EXIT.
  ENDIF.

*INICIAMOS EL TRANSPORTE -> CAMBIO DE ESTADO
  SELECT SINGLE * FROM vttk INTO ls_vttk WHERE tknum = id_transporte.

* Modifico los datos que deseo
  ls_vttk-dpten = sy-datum.
  ls_vttk-upten = sy-uzeit.
*  ls_vttk-stten = 'X'.
  ls_vttk-sttrg = '5'.
  ls_vttk-stabf = 'X'.
  APPEND ls_vttk TO lt_vttk.

  CALL FUNCTION 'RV_SHIPMENT_UPDATE_DB'
    EXPORTING
      i_flag_tra_complete = 'X'
    TABLES
      db_vttk_upd         = lt_vttk.
  IF sy-subrc <> 0.
*Controlamos el error en el inicio del transporte
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '017'.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*Confirmmos el inicio de transporte
  COMMIT WORK AND WAIT.
  CLEAR: lt_vttk, ls_vttk.

*LANZAMOS EL MENSAJE DE ALBARAN
  PERFORM lanzar_mensaje_albaran2 USING id_transporte CHANGING l_correcto.
  IF l_correcto <> 'X'.
*Controlamos el error al lanzar el albaran
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '021'.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*INICIAMOS LA FINALIZACION DE TRANSPORTE
  SELECT SINGLE * FROM vttk INTO ls_vttk WHERE tknum = id_transporte.

* Modifico los datos que deseo
  ls_vttk-datbg = sy-datum.
  ls_vttk-uatbg = sy-uzeit.
  ls_vttk-sttbg = 'X'.
  ls_vttk-sttrg = '6'.
  APPEND ls_vttk TO lt_vttk.

  CALL FUNCTION 'RV_SHIPMENT_UPDATE_DB'
    EXPORTING
      i_flag_tra_complete = 'X'
    TABLES
      db_vttk_upd         = lt_vttk.
  IF sy-subrc <> 0.
*Controlamos el error en la finalizacion del transporte
    o_bapi_return-type = 'W'.
    o_bapi_return-id = 'Z_WM'.
    o_bapi_return-number = '018'.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = o_bapi_return-id
        number     = o_bapi_return-number
        language   = sy-langu
        textformat = 'ASC'
      IMPORTING
        message    = o_bapi_return-message.
    EXIT.
  ENDIF.
*Finalizamos el transporte
  COMMIT WORK AND WAIT.

  o_bapi_return-type = 'S'.
  o_bapi_return-id = 'Z_WM'.
  o_bapi_return-number = '019'.

  CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
    EXPORTING
      id         = o_bapi_return-id
      number     = o_bapi_return-number
      language   = sy-langu
      textformat = 'ASC'
    IMPORTING
      message    = o_bapi_return-message.


ENDFUNCTION.
