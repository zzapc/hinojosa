FUNCTION ZSWM_UI5_TRAER_BULTO.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TCODE) TYPE  TCODE OPTIONAL
*"     VALUE(UNAME) TYPE  SY-UNAME DEFAULT SY-UNAME
*"     VALUE(OPERARIO) TYPE  ZLNUM_OPER OPTIONAL
*"     VALUE(REGISTRO) TYPE  ZSWM_READ_EXIDV_STR OPTIONAL
*"  EXPORTING
*"     VALUE(OK) TYPE  FLAG
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
*  DATA:
*    zswm_read_exidv_bloq_lqua_str TYPE zswm_read_exidv_bloq_lqua_str,
*    zswm_read_exidv_bloq_lein_str TYPE zswm_read_exidv_bloq_lein_str,
*    zswm_read_exidv_bloq_lagp_str TYPE zswm_read_exidv_bloq_lagp_str,
*    zswm_read_exidv_doc_str       TYPE zswm_read_exidv_doc_str.

  PERFORM break USING 'ZSWM_UI5_TRAER_BULTO'.

  DATA: data_u            TYPE zswm_data_ui5_eeeoo_str,
        r_param           TYPE zswm_data_ui5_param_str,
        r_funcionalidades TYPE zswm_data_ui5_func_str.

  CALL FUNCTION 'ZSWM_GET_DATA_USER_UI5'
    EXPORTING
      uname      = uname
      statu      = 'X'
      no_gen_log = abap_true
      tcode      = tcode
    IMPORTING
      data_user  = data_u
*     ERROR      =
*     TT_LOG     =
    .
  data_u-operario = operario.
  if registro-lgpla is not INITIAL.
     select SINGLE * into @datA(lagp) from lagp where lgnum eq @data_u-lgnum
                                                  and lgpla eq @registro-lgpla.
     if sy-subrc ne 0.
        move abap_true to error.
        PERFORM mensaje USING 'E' 'ZSWM_UI5' '044' registro-lgpla data_u-lgnum space space CHANGING tt_log.
     elseif lagp-SKZUA eq abap_true
         or lagp-SKZUE eq abap_true
         or lagp-SKZSA eq abap_true
         or lagp-SKZSE eq abap_true
         or lagp-SKZSI eq abap_true.
        move abap_true to error.
        PERFORM mensaje USING 'E' 'ZSWM_UI5' '088' registro-lgpla data_u-lgnum space space CHANGING tt_log.
     else.
     endif.
  endif.
  if error ne abap_true.
    PERFORM hacer_311 USING registro data_u CHANGING error tt_log.
  endif.
  case error.
  when abap_true.
  when OTHERS.
     if registro-lgpla is not INITIAL.
         data tanum type ltak-tanum.
         select SINGLE letyp into registro-letyp from lein where lenum eq registro-lenum.
         PERFORM cambiar_ubicacion_ua USING registro-lenum registro-letyp '999' lagp-lgtyp lagp-lgpla data_u CHANGING registro tanum error tt_log ok.
     else.
       move abap_true to ok.
     endif.
                  CALL FUNCTION 'ZSWM_PRINT_EXIDV'
                    EXPORTING
                      tcode    = tcode
                      uname    = uname
                      operario = operario
                      LENUM    = registro-lenum
                      mvttype  = 'E'
                    IMPORTING
                      error    = error
                      tt_log   = tt_log_global.


  endcase.
*  PERFORM read_lenum USING lenum tcode data_u '' '' CHANGING registro error tt_log.

ENDFUNCTION.
