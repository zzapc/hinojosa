FUNCTION zui5_cm_get_pos_entregas.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_MATNR) TYPE  RANGES_MATNR_TT OPTIONAL
*"     VALUE(IR_MAKTX) TYPE  FIP_T_MAKTX_RANGE OPTIONAL
*"     VALUE(IR_LARGO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_ALTO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_ANCHO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_LOTE) TYPE  RANGES_CHARG_TT OPTIONAL
*"     VALUE(IR_STATUS) TYPE  ZUI5R_CM_STATUS OPTIONAL
*"     VALUE(IR_TPLST) TYPE  ZSUITT_CM_TPLST_RANGE OPTIONAL
*"     VALUE(IR_VBELN) TYPE  /EBY/_LBAPIDLV_RANGE_VBELN OPTIONAL
*"     VALUE(IR_KUNNR) TYPE  ZSUI_CM_KUNNR_RANGE_T OPTIONAL
*"     VALUE(IR_TKNUM) TYPE  SHP_TKNUM_RANGE_T OPTIONAL
*"     VALUE(I_TKNUM) TYPE  TKNUM OPTIONAL
*"     VALUE(I_VBELN) TYPE  VBELN_VL OPTIONAL
*"     VALUE(I_POSNR) TYPE  POSNR_VL OPTIONAL
*"  EXPORTING
*"     VALUE(O_DATA) TYPE  ZSUITT_CM_POSICIONES_ENTREGA
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  DATA: v_str_largo TYPE char20,
        v_str_alto  TYPE char20,
        v_str_ancho TYPE char20.
  DATA: r_posnr TYPE RANGE OF posnr_vl.

  IF i_tknum IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_tknum ASSIGNING  FIELD-SYMBOL(<ls_trans>).
    <ls_trans>-sign = 'I'.
    <ls_trans>-option = 'EQ'.
    <ls_trans>-low = |{ i_tknum ALPHA = IN }|.
  ENDIF.
  IF i_vbeln IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_vbeln ASSIGNING  FIELD-SYMBOL(<ls_vbeln>).
    <ls_vbeln>-sign = 'I'.
    <ls_vbeln>-option = 'EQ'.
    <ls_vbeln>-deliv_numb_low = |{ i_vbeln ALPHA = IN }|.
  ENDIF.

  IF i_posnr IS NOT INITIAL.
    APPEND INITIAL LINE TO r_posnr ASSIGNING  FIELD-SYMBOL(<ls_posnr>).
    <ls_posnr>-sign = 'I'.
    <ls_posnr>-option = 'EQ'.
    <ls_posnr>-low =  |{ i_posnr  ALPHA = IN }|.
  ENDIF.

  SELECT vt~tknum, l~vbeln, l~posnr, l~matnr, b~maktx, l~werks, yhp~prole AS largo, yhp~prole_uom AS largo_uom, yhp~prowi AS ancho, yhp~prowi_uom AS ancho_uom, yhp~prohe AS alto, yhp~prohe_uom AS alto_uom,
         l~charg, l~lfimg, l~lgort, l~meins, mc~zzkunnr AS kunnr, k~name1 AS kunnr_name, l~vgbel AS refdoc, l~vgpos AS refdocitem,
    yhp2~tbqty AS cajas_pallets, l~zzcantpal AS num_pallets_lips, l~zzcanxpal AS cajas_pallets_lips
  FROM lips AS l
    INNER JOIN mara AS ma ON ma~matnr = l~matnr AND ma~mtart NE 'ZPAL'
    INNER JOIN makt AS b ON b~matnr = ma~matnr AND b~spras = @sy-langu
    INNER JOIN marc AS c ON c~matnr = l~matnr AND c~werks = l~werks
    LEFT JOIN mcha AS mc ON mc~matnr = l~matnr AND  c~werks = l~werks AND mc~charg = l~charg
    LEFT JOIN yhp_idx_td100  AS yhp ON yhp~cuobj = c~cuobj
    LEFT JOIN kna1 AS k ON k~kunnr = mc~zzkunnr
    LEFT JOIN vttp AS vt ON vt~vbeln = l~vbeln
    LEFT JOIN yhp_idx_td151  AS yhp2 ON yhp2~cuobj = c~cuobj AND yhp2~shuty = 'UNIT'
    INTO TABLE @DATA(lt_data)
    WHERE l~vbeln IN @ir_vbeln
    AND  l~posnr IN @r_posnr
    AND l~werks IN @ir_tplst
    AND l~lgort IN @ir_tplst
    AND l~matnr IN @ir_matnr
    AND b~maktx IN @ir_maktx
    AND l~charg IN @ir_lote
    AND mc~zzkunnr IN @ir_kunnr
    AND yhp~prole IN @ir_largo
    AND yhp~prowi IN @ir_ancho
    AND yhp~prohe IN @ir_alto
    AND vt~tknum IN @ir_tknum.

  IF sy-subrc = 0.

    SELECT vekp~venum, exidv, vhilm, vbeln, posnr, vepo~vemng
      FROM vekp
      INNER JOIN vepo ON vepo~venum EQ vekp~venum
      INTO TABLE @DATA(t_vekp)
      FOR ALL ENTRIES IN @lt_data
      WHERE vbeln EQ @lt_data-vbeln.
    IF sy-subrc = 0.
      SORT t_vekp BY vbeln posnr vemng DESCENDING. "Ordenamos para quedarnos con la cantidad mayor
    ENDIF.

    "Recuperamos la referencia al pedido
    SELECT a~vbeln, a~posnr, a~vgbel, a~vgpos, b~vgbel AS refdoc, b~vgpos AS refdocitem
      FROM lips AS a
      INNER JOIN vbap AS b ON b~vbeln = a~vgbel AND b~posnr = a~vgpos
      INTO TABLE @DATA(lt_ref)
      FOR ALL ENTRIES IN @lt_data
      WHERE a~vbeln EQ @lt_data-vbeln
        AND a~posnr EQ @lt_data-posnr.

    LOOP AT lt_data ASSIGNING FIELD-SYMBOL(<ls_data>).
      APPEND INITIAL LINE TO o_data ASSIGNING FIELD-SYMBOL(<ls_o_data>).

      MOVE-CORRESPONDING <ls_data> TO <ls_o_data>.

      CALL FUNCTION 'ZUI5_CM_STATUS_LOTE'
        EXPORTING
          i_lgort       = <ls_o_data>-lgort
          i_werks       = <ls_o_data>-werks
          i_charg       = <ls_o_data>-charg
        IMPORTING
          o_status      = <ls_o_data>-status_lote
          o_status_text = <ls_o_data>-status_text.



      WRITE <ls_o_data>-largo TO v_str_largo LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
      WRITE <ls_o_data>-alto  TO v_str_alto  LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
      WRITE <ls_o_data>-ancho TO v_str_ancho LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
      <ls_o_data>-dimensiones = |{ v_str_largo }x{ v_str_alto }x{ v_str_ancho }|.


*      DATA(t_vekp_vbeln) = t_vekp.
      LOOP AT t_vekp TRANSPORTING NO FIELDS WHERE vbeln EQ <ls_o_data>-vbeln AND posnr EQ <ls_o_data>-posnr.
        <ls_o_data>-num_pallets = <ls_o_data>-num_pallets + 1.
      ENDLOOP.
      READ TABLE t_vekp INTO DATA(wa_vekp_vbeln) WITH KEY vbeln = <ls_data>-vbeln posnr = <ls_data>-posnr.
      IF sy-subrc EQ 0.
        <ls_o_data>-tipo_pallet = wa_vekp_vbeln-vhilm.
        <ls_o_data>-cajas_pallets = wa_vekp_vbeln-vemng.
        SELECT SINGLE maktx INTO <ls_o_data>-txt_tipo_pallet FROM makt WHERE matnr EQ <ls_o_data>-tipo_pallet AND spras EQ sy-langu.
      ENDIF.

      "Para Lotes 3D recuperamos datos de la LIPS
      IF <ls_o_data>-status_lote = '00' OR <ls_o_data>-status_lote = '01'.
        <ls_o_data>-num_pallets = <ls_data>-num_pallets_lips.
        <ls_o_data>-cajas_pallets = <ls_data>-cajas_pallets_lips.
        <ls_o_data>-flagmontado = 'X'.
      ENDIF.

      "Recuperamos el pedido de referencia
      READ TABLE lt_ref INTO DATA(ls_ref) WITH KEY vbeln = <ls_o_data>-vbeln posnr = <ls_o_data>-posnr.
      IF sy-subrc = 0.
        <ls_o_data>-refdoc = ls_ref-refdoc.
        <ls_o_data>-refdocitem = ls_ref-refdocitem.
      ENDIF.

    ENDLOOP.

  ELSE.
*    APPEND INITIAL LINE TO o_return ASSIGNING FIELD-SYMBOL(<ls_return>).
*    <ls_return>-type = 'E'.
*    <ls_return>-id = 'ZUI5_CM'.
*    <ls_return>-number = '005'.
  ENDIF.

ENDFUNCTION.
