FUNCTION zswm_add_delv_to_shipment_ui5.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TCODE) TYPE  TCODE OPTIONAL
*"     VALUE(UNAME) TYPE  SY-UNAME DEFAULT SY-UNAME
*"     VALUE(OPERARIO) TYPE  ZLNUM_OPER OPTIONAL
*"     VALUE(TKNUM) TYPE  TKNUM
*"     VALUE(VBELN) TYPE  VBELN_VL
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
  PERFORM break USING 'ZSWM_ADD_DELV_TO_SHIPMENT_UI5'.

  DATA: l_vbeln          TYPE vbeln,
        ls_header        TYPE bapishipmentheader,
        ls_header_action TYPE bapishipmentheaderaction,
        ls_item          TYPE bapishipmentitem,
        lt_item          TYPE TABLE OF bapishipmentitem,
        ls_item_action   TYPE bapishipmentitemaction,
        lt_item_action   TYPE TABLE OF bapishipmentitemaction,
        lt_return        TYPE TABLE OF bapiret2,
        ls_return        TYPE bapiret2.


  SELECT SINGLE @abap_true FROM vbuk
    WHERE vbeln EQ @vbeln
      AND trsta EQ 'A'
    INTO @DATA(check).

  IF sy-subrc NE 0.
    EXIT.
  ENDIF.
* datos de cabecera
  ls_header-shipment_num = tknum.
*  ls_header-suppl_2 = sy-tcode.
  ls_header_action-suppl_2 = 'C'.
* SUPPL_2
  SELECT SINGLE add02 INTO @DATA(add02) FROM vttk WHERE tknum EQ @tknum.
  CASE tcode.
    WHEN 'ZWM_RF_UI5_ENT_002'. " SRETI
      IF add02 IS INITIAL.
        add02 = 'ZWM_RF_004'.
        ls_header-suppl_2 = add02.
        ls_header_action-suppl_2 = 'C'.
      ENDIF.
    WHEN 'ZWM_RF_UI5_ENT_003' " CRETI
       OR 'ZWM_RF_UI5_ENT_006' "Entradas subcontratación Pedidos
       OR 'ZWM_RF_UI5_ENT_007'. "Entradas CM

      IF add02 IS INITIAL.
        add02 = 'ZWM_RF_009'.
        ls_header-suppl_2 = add02.
        ls_header_action-suppl_2 = 'C'.
      ENDIF.
  ENDCASE.

* Entregas aociadas
  ls_item-delivery = vbeln.

  APPEND ls_item TO lt_item.
  CLEAR ls_item.

  ls_item_action-delivery = 'A'.
  ls_item_action-itenerary = 'A'.
  APPEND ls_item_action TO lt_item_action.
  CLEAR ls_item_action.



  CALL FUNCTION 'BAPI_SHIPMENT_CHANGE'
    EXPORTING
      headerdata       = ls_header
      headerdataaction = ls_header_action
    TABLES
      itemdata         = lt_item
      itemdataaction   = lt_item_action
      return           = lt_return.
  LOOP AT lt_return INTO DATA(rt_log) WHERE type EQ 'E'
                                         OR type EQ 'A'.
    MOVE abap_true TO error.
    APPEND rt_log TO tt_log.
  ENDLOOP.
  IF sy-subrc EQ 0.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*      IMPORTING
*        RETURN        =
      .
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = abap_true
*     IMPORTING
*       RETURN        =
      .
  ENDIF.



ENDFUNCTION.
