FUNCTION zui5_cm_valida_cant_bloqueo_zz.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_ACCION) TYPE  FLAG OPTIONAL
*"     VALUE(I_MATNR) TYPE  MATNR
*"     VALUE(I_WERKS) TYPE  WERKS_D
*"     VALUE(I_LGORT) TYPE  LGORT_D
*"     VALUE(I_TIPO_BLOQUEO) TYPE  ZSCM_TIPO_BLOQUEO
*"     VALUE(I_CHARG) TYPE  CHARG_D
*"     VALUE(I_CANTIDAD) TYPE  MENGE_D
*"     VALUE(I_CANTIDAD_UOM) TYPE  MEINS
*"  EXPORTING
*"     VALUE(O_OK) TYPE  FLAG
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  CONSTANTS: n_veces TYPE i VALUE 5.
  DATA: lt_return              TYPE bapiret2_t,
        lv_meins               TYPE meins,
        bloqueo_activo         TYPE flag,
        lv_cantidad_montaje    TYPE menge_d,

        lv_cantidad_defectuosa TYPE menge_d.

  "Recuperamos los valores actuales de ZZ de las tabla MCHB.
  SELECT SINGLE a~zzcm_montaje, a~zzcm_defectuosa, b~meins
    FROM mchb AS a
    INNER JOIN mara AS b ON b~matnr = a~matnr
    INTO @DATA(ls_cantidades)
    WHERE  a~matnr = @i_matnr AND a~werks = @i_werks AND a~lgort = @i_lgort AND a~charg = @i_charg.
  IF sy-subrc = 0.
    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
      EXPORTING
        input          = i_cantidad_uom
      IMPORTING
        output         = lv_meins
      EXCEPTIONS
        unit_not_found = 1
        OTHERS         = 2.
    "Comprobamos que la unidad de la cantidad sea la base
    IF ls_cantidades-meins NE lv_meins.
      CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
        EXPORTING
          i_matnr              = i_matnr
          i_in_me              = lv_meins
          i_out_me             = ls_cantidades-meins
          i_menge              = i_cantidad
        IMPORTING
          e_menge              = i_cantidad
        EXCEPTIONS
          error_in_application = 1
          error                = 2
          OTHERS               = 3.
      IF sy-subrc <> 0.
        APPEND INITIAL LINE TO lt_return ASSIGNING FIELD-SYMBOL(<ls_return>).
        <ls_return>-id = sy-msgid.
        <ls_return>-type = sy-msgty.
        <ls_return>-number = sy-msgno.
        <ls_return>-message_v1 = sy-msgv1.
        <ls_return>-message_v2 = sy-msgv2.
        <ls_return>-message_v3 = sy-msgv3.
        <ls_return>-message_v3 = sy-msgv4.

        EXIT.
      ENDIF.
    ENDIF.

    "Calculamos la cantidad dependiendo de la acción.
    CASE i_accion.
      WHEN 'X'. "Añadir
        lv_cantidad_montaje = ls_cantidades-zzcm_montaje + i_cantidad.
        lv_cantidad_defectuosa = ls_cantidades-zzcm_defectuosa + i_cantidad.
      WHEN ''.
        lv_cantidad_montaje = ls_cantidades-zzcm_montaje - i_cantidad.
        lv_cantidad_defectuosa = ls_cantidades-zzcm_defectuosa - i_cantidad.

    ENDCASE.

    CASE i_tipo_bloqueo.
      WHEN 'M'. "Bloqueo Montaje
        IF lv_cantidad_montaje < 0.
          APPEND INITIAL LINE TO lt_return ASSIGNING <ls_return>.
          <ls_return>-id = 'ZUI5_CM'.
          <ls_return>-type = 'E'.
          <ls_return>-number = '101'.
          <ls_return>-message_v1 = ceil( i_cantidad ).
          <ls_return>-message_v2 = i_cantidad_uom.
          <ls_return>-message_v3 = ceil( ls_cantidades-zzcm_montaje ).
        ENDIF.
      WHEN 'D'. "Bloqueo defectuoso
        IF lv_cantidad_defectuosa < 0.
          APPEND INITIAL LINE TO lt_return ASSIGNING <ls_return>.
          <ls_return>-id = 'ZUI5_CM'.
          <ls_return>-type = 'E'.
          <ls_return>-number = '101'.
          <ls_return>-message_v1 = ceil( i_cantidad ).
          <ls_return>-message_v2 = i_cantidad_uom.
          <ls_return>-message_v3 = ceil( ls_cantidades-zzcm_defectuosa ).
        ENDIF.

    ENDCASE.

  ENDIF.



  APPEND LINES OF lt_return TO o_return.



ENDFUNCTION.
