FUNCTION zui5_cm_get_materiales_dev.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_MATNR) TYPE  RANGES_MATNR_TT OPTIONAL
*"     VALUE(IR_MAKTX) TYPE  FIP_T_MAKTX_RANGE OPTIONAL
*"     VALUE(IR_LARGO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_ALTO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_ANCHO) TYPE  ZSUITT_CM_DIMENSIONES_RANGE OPTIONAL
*"     VALUE(IR_LOTE) TYPE  RANGES_CHARG_TT OPTIONAL
*"     VALUE(IR_STATUS) TYPE  ZUI5R_CM_STATUS OPTIONAL
*"     VALUE(IR_KUNNR) TYPE  ZSUI_CM_KUNNR_RANGE_T OPTIONAL
*"     VALUE(IR_STOCK_LIBRE) TYPE  ZSUITT_CM_CANTIDAD_RANGE OPTIONAL
*"     VALUE(IR_STOCK_PEDIDO) TYPE  ZSUITT_CM_CANTIDAD_RANGE OPTIONAL
*"     VALUE(IR_STOCK_TOTAL) TYPE  ZSUITT_CM_CANTIDAD_RANGE OPTIONAL
*"     VALUE(IR_TPLST) TYPE  ZSUITT_CM_TPLST_RANGE OPTIONAL
*"     VALUE(I_CENTRO_MONTAJE) TYPE  WERKS_D OPTIONAL
*"     VALUE(I_ALMACEN_MONTAJE) TYPE  LGORT_D OPTIONAL
*"     VALUE(I_TKNUM) TYPE  TKNUM OPTIONAL
*"     VALUE(IR_MEDIDASCAJA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_VBELN) TYPE  SD_VBELN_RANGES OPTIONAL
*"  EXPORTING
*"     VALUE(O_DATA) TYPE  ZSUITT_CM_MATERIALES_DEV
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  IF i_centro_montaje IS INITIAL.
    i_centro_montaje = '2000'.
    IF i_almacen_montaje IS INITIAL.
      i_almacen_montaje = 'CM01'.
    ENDIF.
  ENDIF.


  LOOP AT ir_kunnr ASSIGNING FIELD-SYMBOL(<fs_kunnr>).

    <fs_kunnr>-low = |{ <fs_kunnr>-low ALPHA = IN }|.
    <fs_kunnr>-high = |{ <fs_kunnr>-high  ALPHA = IN }|.

  ENDLOOP.


  DATA: v_str_largo TYPE char20,
        v_str_alto  TYPE char20,
        v_str_ancho TYPE char20.

  DATA: o_status      TYPE  zui5_cm_sm_status,
        o_status_text TYPE  ddtext.


  SELECT SINGLE auart FROM  zcmventa
    INTO @DATA(vv_auart)
         WHERE    werks  = @i_centro_montaje
         AND    lgort  = @i_almacen_montaje.
  IF sy-subrc = 0.

    SELECT vbak~vbeln AS refdoc, vbap~posnr AS refdocitem, mara~matnr, makt~maktx, vbap~fixmg, vbap~kwmeng AS stock_libre , vbap~charg, vbap~werks, vbap~lgort, marc~mmsta, mara~mstae,
      yhp~prole AS largo, yhp~prole_uom AS largo_uom, yhp~prowi AS ancho, yhp~prowi_uom AS ancho_uom, yhp~prohe AS alto, yhp~prohe_uom AS alto_uom,
      vbpa~kunnr, kna1~name1 AS kunnr_name, mara~meins, yhp2~tbqty AS cajas_pallets, yhp3~pmatn AS tipo_pallet, yhp3txt~maktx AS txt_tipo_pallet,
      l~zzcantpal AS num_pallet, l~zzcanxpal AS cajas_pallets2
      INTO TABLE @DATA(tv_vbak)
      FROM vbak AS vbak
       INNER JOIN vbpa AS vbpa ON vbak~vbeln = vbpa~vbeln   AND vbpa~parvw = 'WE'
       INNER JOIN vbap AS vbap ON vbak~vbeln = vbap~vbeln
       INNER JOIN mara AS mara ON vbap~matnr = mara~matnr
       INNER JOIN makt AS makt ON vbap~matnr = makt~matnr  AND makt~spras = @sy-langu
       INNER JOIN marc AS marc ON vbap~matnr = marc~matnr AND vbap~werks = marc~werks
       LEFT JOIN lips AS l ON l~vgbel = vbak~vbeln AND l~vgpos = vbap~posnr
       LEFT JOIN yhp_idx_td100  AS yhp ON marc~cuobj = yhp~cuobj
       LEFT JOIN yhp_idx_td151  AS yhp2 ON marc~cuobj = yhp2~cuobj  AND yhp2~shuty = 'UNIT'
       LEFT JOIN yhp_idx_td160  AS yhp3 ON marc~cuobj = yhp3~cuobj
      LEFT JOIN makt AS yhp3txt ON yhp3txt~matnr = yhp3~pmatn  AND yhp3txt~spras = @sy-langu
       LEFT JOIN kna1 AS kna1 ON vbpa~kunnr = kna1~kunnr
      WHERE vbak~auart = @vv_auart
      AND vbak~vkorg = @i_centro_montaje
      AND vbap~werks = @i_centro_montaje
      AND vbap~lgort = @i_almacen_montaje
      AND vbpa~kunnr IN @ir_kunnr
       AND yhp~prole IN @ir_largo
      AND yhp~prowi IN @ir_ancho
      AND yhp~prohe IN @ir_alto
      AND yhp~prole IN @ir_largo
      AND yhp~prohe IN @ir_alto
      AND yhp~prowi IN @ir_ancho
      AND vbpa~kunnr IN @ir_kunnr
      AND vbap~matnr IN @ir_matnr
      AND makt~maktx IN @ir_maktx
      AND vbap~charg IN @ir_lote
      AND vbak~vbeln IN @ir_vbeln.
    IF sy-subrc = 0.

      SELECT vbelv, posnv, rfmng
        INTO TABLE @DATA(tv_vbfa)
        FROM zsuicmvmatdev
        FOR ALL ENTRIES IN @tv_vbak
        WHERE vbelv = @tv_vbak-refdoc.

      SELECT l~vgbel, l~vgpos, a~vemng, a~vbeln, a~posnr, a~charg, b~vhilm
        FROM lips AS l
        INNER JOIN vepo AS a ON a~vbeln = l~vbeln AND  a~posnr = l~posnr
        INNER JOIN vekp AS b ON b~venum = a~venum
        INTO TABLE @DATA(lt_venum)
        FOR ALL ENTRIES IN @tv_vbak
        WHERE l~vgbel = @tv_vbak-refdoc
        AND l~vgpos = @tv_vbak-refdocitem
        AND a~charg = @tv_vbak-charg.
      IF sy-subrc = 0.
        SORT lt_venum BY vgbel vgpos vemng DESCENDING.
      ENDIF.

    ENDIF.

  ENDIF.

  LOOP AT tv_vbak ASSIGNING FIELD-SYMBOL(<ls_data>).

    READ TABLE tv_vbfa INTO DATA(wv_vbfa) WITH KEY vbelv = <ls_data>-refdoc posnv = <ls_data>-refdocitem.
    IF sy-subrc = 0.
      IF NOT <ls_data>-stock_libre < wv_vbfa-rfmng.
        CONTINUE.
      ENDIF.
    ENDIF.

    "Recuperamos el tipo pallet
    READ TABLE lt_venum INTO DATA(ls_venum) WITH KEY vgbel = <ls_data>-refdoc vgpos = <ls_data>-refdocitem.
    IF sy-subrc = 0.
      <ls_data>-tipo_pallet = ls_venum-vhilm.
      <ls_data>-cajas_pallets = ls_venum-vemng.
      LOOP AT lt_venum TRANSPORTING NO FIELDS WHERE vgbel = <ls_data>-refdoc AND vgpos = <ls_data>-refdocitem.
        ADD 1 TO <ls_data>-num_pallet .
      ENDLOOP.
    ENDIF.

    WRITE <ls_data>-largo TO v_str_largo LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
    WRITE <ls_data>-alto  TO v_str_alto  LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.
    WRITE <ls_data>-ancho TO v_str_ancho LEFT-JUSTIFIED NO-GROUPING DECIMALS 0.

    DATA(v_dimension) = |{ v_str_largo }x{ v_str_ancho }x{ v_str_alto }|.

    IF v_dimension NOT IN ir_medidascaja AND ir_medidascaja IS NOT INITIAL.
      CONTINUE.
    ENDIF.

    CALL FUNCTION 'ZUI5_CM_STATUS_LOTE'
      EXPORTING
        i_werks       = <ls_data>-werks
        i_lgort       = <ls_data>-lgort
        i_charg       = <ls_data>-charg
      IMPORTING
        o_status      = o_status
        o_status_text = o_status_text.

    IF o_status IS INITIAL OR ( o_status NOT IN ir_status AND ir_status IS NOT INITIAL ).
      CONTINUE.
    ENDIF.

    APPEND INITIAL LINE TO o_data ASSIGNING FIELD-SYMBOL(<ls_o_data>).

    MOVE-CORRESPONDING <ls_data> TO <ls_o_data>.
    <ls_o_data>-stock_pedido = wv_vbfa-rfmng.
*    <ls_o_data>-stock_total = <ls_o_data>-stock_libre + <ls_o_data>-stock_pedido.
    <ls_o_data>-status_lote = o_status.
    <ls_o_data>-status_text = o_status_text.

    <ls_o_data>-num_pallets = <ls_data>-num_pallet .

    <ls_o_data>-dimensiones = v_dimension.

    IF o_status = '00' OR o_status = '01'.
      <ls_o_data>-cajas_pallets = <ls_data>-cajas_pallets2.
      <ls_o_data>-num_pallets = <ls_data>-num_pallet.
    ENDIF.

    CLEAR wv_vbfa.
  ENDLOOP.


ENDFUNCTION.
