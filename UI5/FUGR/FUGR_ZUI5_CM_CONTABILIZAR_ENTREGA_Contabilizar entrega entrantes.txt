FUNCTION zui5_cm_contabilizar_entrega.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IV_VBELN) TYPE  VBELN_VL
*"     VALUE(IV_POSNR) TYPE  POSNR_VL
*"  EXPORTING
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"     VALUE(E_ERROR) TYPE  XFELD
*"----------------------------------------------------------------------
  DATA wl_vbkok TYPE vbkok.
  DATA tl_vbpok TYPE STANDARD TABLE OF vbpok.
  DATA wl_vbpok TYPE vbpok.
  DATA: ef_error_any_0              TYPE xfeld,
        ef_error_in_item_deletion_0 TYPE xfeld,
        ef_error_in_pod_update_0    TYPE xfeld,
        ef_error_in_interface_0     TYPE xfeld,
        ef_error_in_goods_issue_0   TYPE xfeld,
        ef_error_in_final_check_0   TYPE xfeld,
        ef_error_partner_update     TYPE xfeld,
        ef_error_sernr_update       TYPE xfeld.

  DATA tl_prot TYPE STANDARD TABLE OF prott.
  DATA wl_header_data TYPE bapiibdlvhdrcon.
  DATA wl_header_control TYPE bapiibdlvhdrctrlcon.

  PERFORM mensajes_pasos USING 'ZUI5_CM' 'I' '071' 'ZUI5_CM_CONTABILIZAR_ENTREGA' '' '' ''CHANGING o_return.

  "Comprobamos si ya se ha contabilizado, porque la entrega se contabiliza completa y nosotros le pasamos varias posiciones y la segunda que envía ya está contabilizada
  SELECT SINGLE vbeln, wbstk FROM vbuk
    INTO @DATA(ls_vbuk)
    WHERE vbeln = @iv_vbeln
    AND wbstk = 'C'.
  IF sy-subrc NE 0.

    SELECT  matnr, posnr, charg,lfimg, vrkme,bwtar, vgbel, vgpos, werks, lgort FROM lips
      WHERE vbeln = @iv_vbeln
      AND posnr = @iv_posnr
      INTO TABLE @DATA(tv_lips).

    wl_vbkok-vbeln_vl = iv_vbeln.
    wl_vbkok-vbtyp_vl = '7'.
    wl_vbkok-wabuc = 'X'.

    SELECT * FROM zsui5cmventrega1
      INTO TABLE @DATA(lt_entregas)
      WHERE vbeln = @iv_vbeln
      AND posnr = @iv_posnr.
    IF sy-subrc = 0.
      LOOP AT lt_entregas INTO DATA(ls_entrega).
        PERFORM mensajes_pasos USING 'ZUI5_CM' 'I' '077' ls_entrega-werks ls_entrega-lgort '' ''CHANGING o_return.
        PERFORM mensajes_pasos USING 'ZUI5_CM' 'I' '078' ls_entrega-ebeln ls_entrega-ebelp '' ''CHANGING o_return.
        PERFORM mensajes_pasos USING 'ZUI5_CM' 'I' '079' ls_entrega-lifnr ls_entrega-lifnr_name '' ''CHANGING o_return.
      ENDLOOP.
    ENDIF.

    LOOP AT tv_lips INTO DATA(wv_lips).


      wl_vbpok-vbeln_vl = iv_vbeln.
      wl_vbpok-posnr_vl = wv_lips-posnr.
      wl_vbpok-vbeln = wv_lips-vgbel.
      wl_vbpok-posnn = wv_lips-vgpos.
      wl_vbpok-matnr = wv_lips-matnr.
      wl_vbpok-charg = wv_lips-charg.
      wl_vbpok-lfimg = wv_lips-lfimg.
      wl_vbpok-lgmng   = wv_lips-lfimg.
      wl_vbpok-pikmg   = wv_lips-lfimg.
      wl_vbpok-werks   = wv_lips-werks.
      wl_vbpok-lgort   = wv_lips-lgort.

      IF wl_vbpok-lgort IS INITIAL .
        SELECT SINGLE lgort FROM vbfa AS vbfa
          INNER JOIN lips AS lips
            ON vbfa~vbelv = lips~vbeln
          INTO wl_vbpok-lgort
          WHERE vbfa~vbeln = iv_vbeln
          AND   vbfa~vbtyp_n = '7'
          AND   vbfa~vbtyp_v = 'J'
          AND   lips~posnr =  wv_lips-posnr.

        UPDATE lips SET lgort =  wl_vbpok-lgort WHERE vbeln = iv_vbeln AND posnr = wv_lips-posnr.
        COMMIT WORK AND WAIT.
      ENDIF.

      wl_vbpok-umvkz = 1.
      wl_vbpok-umvkn = 1.
      wl_vbpok-umrev = 1.
      wl_vbpok-lfimg_flo = wv_lips-lfimg.
      wl_vbpok-lgmng_flo = wv_lips-lfimg.
      wl_vbpok-vrkme = wv_lips-vrkme.
      wl_vbpok-bwtar = wv_lips-bwtar.

      INSERT wl_vbpok INTO TABLE tl_vbpok.
      CLEAR wl_vbpok.

    ENDLOOP.


    CALL FUNCTION 'WS_DELIVERY_UPDATE'
      EXPORTING
        vbkok_wa                    = wl_vbkok
        delivery                    = iv_vbeln
      IMPORTING
        ef_error_any_0              = ef_error_any_0
        ef_error_in_item_deletion_0 = ef_error_in_item_deletion_0
        ef_error_in_pod_update_0    = ef_error_in_pod_update_0
        ef_error_in_interface_0     = ef_error_in_interface_0
        ef_error_in_goods_issue_0   = ef_error_in_goods_issue_0
        ef_error_in_final_check_0   = ef_error_in_final_check_0
        ef_error_partner_update     = ef_error_partner_update
        ef_error_sernr_update       = ef_error_sernr_update
      TABLES
        prot                        = tl_prot.

    IF ef_error_any_0 IS INITIAL AND
       ef_error_in_item_deletion_0 IS INITIAL AND
       ef_error_in_pod_update_0 IS INITIAL AND
       ef_error_in_interface_0 IS INITIAL AND
       ef_error_in_goods_issue_0 IS INITIAL AND
       ef_error_in_final_check_0 IS INITIAL AND
       ef_error_partner_update IS INITIAL AND
       ef_error_sernr_update IS INITIAL .

      COMMIT WORK AND WAIT.

      DATA(vv_vbeln) = CONV vbeln_vl( |{ iv_vbeln ALPHA = OUT  }| ).
      DATA(vv_posnr) = CONV posnr( |{ iv_posnr ALPHA = OUT  }| ).
      APPEND VALUE #( type = 'S' id = 'ZUI5_CM' number = '063' message_v1 = vv_vbeln message_v2 = vv_posnr ) TO o_return.

    ELSE.
      IF NOT tl_prot IS INITIAL.

        LOOP AT tl_prot INTO DATA(wv_prot).

          APPEND VALUE #( type = wv_prot-msgty id = wv_prot-msgid number = wv_prot-msgno message_v1 = wv_prot-msgv1
                                                                                         message_v2 = wv_prot-msgv2
                                                                                         message_v3 = wv_prot-msgv3
                                                                                         message_v4 = wv_prot-msgv4
                                                                                         ) TO o_return.

        ENDLOOP.
      ELSE.
        DATA(vv_vbeln2) = CONV vbeln_vl( |{ iv_vbeln ALPHA = OUT  }| ).
        APPEND VALUE #( type = 'S' id = 'ZUI5_CM' number = '064' message_v1 = vv_vbeln2 ) TO o_return.
      ENDIF.

    ENDIF.
  ELSE.
    APPEND VALUE #( type = 'S' id = 'ZUI5_CM' number = '089' message_v1 = |{ iv_vbeln ALPHA = OUT }|
                          message_v2 = |{ iv_posnr ALPHA = OUT }| message_v3 = space message_v4 = space ) TO o_return.
  ENDIF.

  PERFORM guardar_log USING iv_vbeln o_return.

ENDFUNCTION.
