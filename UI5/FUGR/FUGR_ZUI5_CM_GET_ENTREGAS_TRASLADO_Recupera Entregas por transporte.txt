FUNCTION zui5_cm_get_entregas_traslado.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_CENTRO_MONTAJE) TYPE  ZSUITT_CM_TPLST_RANGE OPTIONAL
*"     VALUE(IR_VBELN) TYPE  /EBY/_LBAPIDLV_RANGE_VBELN OPTIONAL
*"     VALUE(IR_DESTINATARIO) TYPE  SHP_KUNWE_RANGE_T OPTIONAL
*"     VALUE(IR_DESTINATARIO_NOMBRE) TYPE  ZSUIS_CM_NOMBRES_RANG
*"       OPTIONAL
*"     VALUE(IR_CLIENTE) TYPE  SHP_KUNWE_RANGE_T OPTIONAL
*"     VALUE(IR_CLIENTE_NOMBRE) TYPE  ZSUIS_CM_NOMBRES_RANG OPTIONAL
*"     VALUE(IR_FECHA) TYPE  DATE_T_RANGE OPTIONAL
*"     VALUE(IR_RUTA) TYPE  SHP_ROUTE_RANGE_T OPTIONAL
*"     VALUE(IR_INCOTERM) TYPE  SHP_INCO1_RANGE_T OPTIONAL
*"     VALUE(IR_TKNUM) TYPE  SHP_TKNUM_RANGE_T OPTIONAL
*"     VALUE(I_TKNUM) TYPE  TKNUM OPTIONAL
*"     VALUE(I_VBELN) TYPE  VBELN_VL OPTIONAL
*"     VALUE(IR_MEDIDACAJA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(I_ALMACEN_MONTAJE) TYPE  LGORT_D OPTIONAL
*"  EXPORTING
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"     VALUE(O_DATA) TYPE  ZSUITT_CM_ENTREGAS_TRASLADOS
*"----------------------------------------------------------------------
  IF i_tknum IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_tknum ASSIGNING  FIELD-SYMBOL(<ls_trans>).
    <ls_trans>-sign = 'I'.
    <ls_trans>-option = 'EQ'.
    <ls_trans>-low = |{ i_tknum ALPHA = IN }|.
  ENDIF.
  IF i_vbeln IS NOT INITIAL.
    APPEND INITIAL LINE TO ir_vbeln ASSIGNING  FIELD-SYMBOL(<ls_vbeln>).
    <ls_vbeln>-sign = 'I'.
    <ls_vbeln>-option = 'EQ'.
    <ls_vbeln>-deliv_numb_low = |{ i_vbeln ALPHA = IN }|.
  ENDIF.

  SELECT a~tknum, b~vbeln, b~wadat, vb~vbeln AS vbeln_entrante,
    k~wbstk AS estado_ee, tk~ddtext AS estado_ee_desc
    FROM vttp AS a
    INNER JOIN likp AS b ON b~vbeln = a~vbeln
    LEFT JOIN vbpa AS we ON we~vbeln = b~vbeln AND we~parvw = 'WE'
    LEFT JOIN kna1 AS kwe ON kwe~kunnr = we~kunnr
    LEFT JOIN tvstt AS t ON t~vstel = b~vstel AND t~spras = @sy-langu
    LEFT JOIN vbfa AS vb ON vb~vbelv = b~vbeln AND vb~vbtyp_n = '7'
    LEFT  JOIN vbuk AS k ON k~vbeln = vb~vbeln
    LEFT JOIN dd07t AS tk ON k~wbstk = tk~domvalue_l AND tk~domname = 'STATV' AND tk~ddlanguage = @sy-langu
    INTO TABLE @DATA(lt_data)
    WHERE a~tknum IN @ir_tknum
      AND b~vbeln IN @ir_vbeln
      AND b~wadat IN @ir_fecha.
  IF sy-subrc = 0.
    "Recuperamos los datos del pedido de Compras
    SELECT l~vbeln, a~ebeln, b~ebelp, a~ekgrp, b~lgort , a~aedat, tl~lgobe, t4~eknam
      FROM lips AS l
      INNER JOIN ekko AS a ON l~vgbel = a~ebeln
      INNER JOIN ekpo AS b ON b~ebeln = a~ebeln
      LEFT JOIN t001l AS tl ON b~lgort = tl~lgort AND tl~werks = b~werks
      LEFT JOIN t024 AS t4 ON t4~ekgrp = a~ekgrp
      INTO TABLE @DATA(lt_ekko)
      FOR ALL ENTRIES IN @lt_data
      WHERE vbeln = @lt_data-vbeln.
  ENDIF.
  MOVE-CORRESPONDING lt_data TO o_data.
  LOOP AT o_data ASSIGNING FIELD-SYMBOL(<ls_data>).
    READ TABLE lt_ekko INTO DATA(ls_ekko) WITH KEY vbeln = <ls_data>-vbeln.
    <ls_data>-lgort_dest = ls_ekko-lgort.
    <ls_data>-lgort_dest_name = ls_ekko-lgobe.
    <ls_data>-ekgrp = ls_ekko-ekgrp.
    <ls_data>-ekgrp_name = ls_ekko-eknam.
    <ls_data>-ebeln = ls_ekko-ebeln.
    <ls_data>-erdat = ls_ekko-aedat.
  ENDLOOP.
ENDFUNCTION.
