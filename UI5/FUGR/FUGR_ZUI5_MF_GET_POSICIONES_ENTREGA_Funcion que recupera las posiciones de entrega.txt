FUNCTION zui5_mf_get_posiciones_entrega.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_ENTREGA) TYPE  VBELN_VL
*"     VALUE(I_CODIGO_LOTE) TYPE  ZUI5_CODIGO_OBJETO
*"  EXPORTING
*"     VALUE(O_POSICIONES_ENTREGA) TYPE  ZUI5_TT_MAT_ENTREGA
*"----------------------------------------------------------------------

  TYPES: BEGIN OF listado_pos,
           vbeln TYPE vbeln_vl,
           pstyv TYPE pstyv_vl,
           posnr TYPE posnr_vl,
           lfimg TYPE lfimg,
           vgbel TYPE vgbel,
           vgpos TYPE vgpos,
           werks TYPE werks_d,
           umvkz TYPE umvkz,
           umvkn TYPE umvkn,
           uecha TYPE uecha,
           charg TYPE charg_d,
           matnr TYPE matnr,
           orden TYPE aufnr,
         END OF listado_pos.

  TYPES: BEGIN OF ty_material_tipo,
           matnr TYPE matnr,
           mtart TYPE mtart,
         END OF ty_material_tipo.

  TYPES: BEGIN OF  ty_estado_pos,
           vbeln TYPE vbeln,
           posnr TYPE posnr,
           kosta TYPE kosta,
         END OF ty_estado_pos.

  TYPES : BEGIN OF ty_orden_pos,
            aufnr    TYPE aufnr,
            auart    TYPE auart,
            zzebeln4 TYPE zzebeln4,
            zzebelp4 TYPE zzebelp4,
          END OF ty_orden_pos.

  TYPES: BEGIN OF ty_material_descrip,
           matnr TYPE matnr,
           maktx TYPE maktx,
         END OF ty_material_descrip.

  DATA: lt_posiciones_entrega TYPE TABLE OF listado_pos,
        ls_posiciones_entrega TYPE listado_pos,
        lt_estado_pos         TYPE TABLE OF ty_estado_pos,
        ls_estado_pos         TYPE ty_estado_pos,
        lv_pikmg              TYPE pikmg,
        lv_estado             TYPE kosta,
        ls_pos                TYPE zui5_s_mat_entrega,
        lt_material_descrip   TYPE TABLE OF ty_material_descrip,
        ls_material_descrip   TYPE ty_material_descrip,
        lt_mat_tipo           TYPE TABLE OF ty_material_tipo,
        ls_mat_tipo           TYPE ty_material_tipo,
        lt_orden_pos          TYPE TABLE OF ty_orden_pos,
        ls_orden_pos          TYPE ty_orden_pos.


*Recuperamos las posiciones de la entrega
  SELECT vbeln pstyv posnr lfimg vgbel vgpos werks umvkz umvkn uecha charg matnr
    INTO CORRESPONDING FIELDS OF TABLE lt_posiciones_entrega
  FROM lips
    WHERE vbeln = i_entrega.

  SELECT vbeln posnr kosta
    INTO CORRESPONDING FIELDS OF TABLE lt_estado_pos
    FROM vbup
    FOR ALL ENTRIES IN lt_posiciones_entrega
    WHERE vbeln = lt_posiciones_entrega-vbeln AND posnr = lt_posiciones_entrega-posnr.

  SELECT matnr mtart
    INTO CORRESPONDING FIELDS OF TABLE lt_mat_tipo
    FROM mara
    FOR ALL ENTRIES IN lt_posiciones_entrega
    WHERE matnr = lt_posiciones_entrega-matnr.

  SELECT matnr maktx
    INTO CORRESPONDING FIELDS OF TABLE lt_material_descrip
    FROM makt
    FOR ALL ENTRIES IN lt_posiciones_entrega
    WHERE matnr = lt_posiciones_entrega-matnr.

  SELECT aufnr zzebeln4 zzebelp4 auart
    INTO CORRESPONDING FIELDS OF TABLE lt_orden_pos
    FROM aufk
    FOR ALL ENTRIES IN lt_posiciones_entrega
    WHERE  werks = lt_posiciones_entrega-werks
    AND zzebeln4 = lt_posiciones_entrega-vgbel
    AND zzebelp4 = lt_posiciones_entrega-vgpos.

  LOOP AT lt_posiciones_entrega INTO ls_posiciones_entrega.

    CLEAR lv_pikmg.

    CALL FUNCTION 'WB2_GET_PICK_QUANTITY'
      EXPORTING
        i_vbeln = ls_posiciones_entrega-vbeln
        i_posnr = ls_posiciones_entrega-posnr
      IMPORTING
        e_pikmg = lv_pikmg.

    READ TABLE lt_estado_pos INTO ls_estado_pos WITH KEY vbeln = ls_posiciones_entrega-vbeln posnr = ls_posiciones_entrega-posnr.
    IF sy-subrc = 0.
      lv_estado = ls_estado_pos-kosta.
    ENDIF.

    READ TABLE lt_material_descrip INTO ls_material_descrip WITH KEY matnr = ls_posiciones_entrega-matnr.
    IF sy-subrc = 0.
      ls_pos-material_descrip = ls_material_descrip-maktx.
    ENDIF.

    READ TABLE lt_mat_tipo INTO ls_mat_tipo WITH KEY matnr = ls_posiciones_entrega-matnr.
    IF sy-subrc = 0.
      IF ls_mat_tipo = 'ZPLP'.
        READ TABLE lt_orden_pos INTO ls_orden_pos WITH KEY zzebeln4 = ls_posiciones_entrega-vgbel  zzebelp4 = ls_posiciones_entrega-vgpos auart = 'ZC01'.
        IF sy-subrc = 0.
          ls_posiciones_entrega-orden = ls_orden_pos-aufnr.
        ENDIF.
      ELSE.
        READ TABLE lt_orden_pos INTO ls_orden_pos WITH KEY zzebeln4 = ls_posiciones_entrega-vgbel  zzebelp4 = ls_posiciones_entrega-vgpos auart = 'ZC02'.
        IF sy-subrc = 0.
          ls_posiciones_entrega-orden = ls_orden_pos-aufnr.
        ENDIF.
      ENDIF.
    ENDIF.


    ls_pos-cod_entrega = ls_posiciones_entrega-vbeln.
    ls_pos-pstyv = ls_posiciones_entrega-pstyv.
    ls_pos-posicion = ls_posiciones_entrega-posnr.
    ls_pos-pedido = ls_posiciones_entrega-vgbel.
    ls_pos-pos_ped = ls_posiciones_entrega-vgpos.
    ls_pos-centro = ls_posiciones_entrega-werks.
    ls_pos-uecha = ls_posiciones_entrega-uecha.
    ls_pos-umvkn = ls_posiciones_entrega-umvkn.
    ls_pos-umvkz = ls_posiciones_entrega-umvkz.
    ls_pos-material = ls_posiciones_entrega-matnr.
    ls_pos-orden = ls_posiciones_entrega-orden.

*Si la posicion es padre de KITS o es no relevante para picking VBUP-KOSTA = ''
    IF ls_pos-pstyv = 'ZTA2' OR lv_estado = ''.
      ls_pos-cantidad_entrega = 0.
      ls_pos-cantidad = 0.
    ELSE.
      ls_pos-cantidad_entrega = ls_posiciones_entrega-lfimg.
      ls_pos-cantidad = ( ls_posiciones_entrega-lfimg - lv_pikmg ).
    ENDIF.

    APPEND ls_pos TO o_posiciones_entrega.

  ENDLOOP.


ENDFUNCTION.
