FUNCTION zui5_cm_stock.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_WERKS) TYPE  WERKS_D
*"     VALUE(I_LGORT) TYPE  LGORT_D
*"     VALUE(I_MATNR) TYPE  MATNR
*"     VALUE(I_CHARG) TYPE  CHARG_D
*"  EXPORTING
*"     VALUE(O_STOCK) TYPE  ZUI5S_CM_STOCK
*"----------------------------------------------------------------------

  DATA: v_str_largo TYPE char20,
        v_str_alto  TYPE char20,
        v_str_ancho TYPE char20,
        v_lote_2d TYPE charg_d,
        v_lote_3d TYPE charg_d.

  SELECT SINGLE mchb~matnr, mchb~werks, mchb~lgort, mchb~charg, maktx, clabs, mara~meins, bwtar, mchb~ersda, knmt~kdmat,
    yhp_idx_td100~cuobj, prole AS largo, prowi AS ancho, prohe AS alto, mch1~zzkunnr AS kunnr, kna1~name1 AS kunnr_name,
    mara~mstae, mara~mstav, marc~mmsta, mvke~vmsta, mchb~zzcm_montaje, mchb~zzcm_defectuosa, mchb~cspem
    FROM mchb
    INNER JOIN mara ON mara~matnr EQ mchb~matnr
    INNER JOIN mcha ON mcha~matnr EQ mchb~matnr AND mcha~werks EQ mchb~werks AND mcha~charg EQ mchb~charg
    LEFT JOIN mch1 ON mcha~matnr EQ mch1~matnr AND mch1~charg EQ mcha~charg
    LEFT JOIN makt ON makt~matnr EQ mchb~matnr AND makt~spras EQ 'S'
    LEFT JOIN knmt ON knmt~matnr EQ mchb~matnr
    LEFT JOIN marc ON marc~matnr EQ mchb~matnr AND marc~werks EQ mchb~werks
    LEFT JOIN t001w ON t001w~werks EQ mchb~werks
    LEFT JOIN mvke ON mvke~matnr EQ mara~matnr AND mvke~vkorg EQ t001w~vkorg AND mvke~vtweg EQ '10'
    LEFT JOIN yhp_idx_td100 ON yhp_idx_td100~cuobj EQ marc~cuobj
    LEFT JOIN kna1 ON kna1~kunnr EQ mch1~zzkunnr
    INTO @DATA(wa_mchb)
    WHERE mchb~werks EQ @i_werks
      AND mchb~lgort EQ @i_lgort
*      AND mchb~clabs GT 0
      AND mchb~charg EQ @i_charg
      AND mchb~matnr EQ @i_matnr
      AND mchb~lvorm <> 'X'.

  CHECK sy-subrc EQ 0.

  " Obtenemos textos dominio ZUI5_CM_SM_STATUS
  SELECT domname, domvalue_l, ddtext
    FROM dd07v
    INTO TABLE @DATA(t_status_text)
    WHERE domname EQ 'ZUI5_CM_SM_STATUS'
      AND ddlanguage EQ @sy-langu.

  IF wa_mchb-mstae IS NOT INITIAL
    OR wa_mchb-mmsta IS NOT INITIAL
    OR wa_mchb-mstav IS NOT INITIAL
    OR wa_mchb-vmsta IS NOT INITIAL.
    o_stock-matnr_bloq = 'X'.
  ENDIF.

  o_stock-werks = wa_mchb-werks.
  o_stock-lgort = wa_mchb-lgort.
  o_stock-matnr = wa_mchb-matnr.
  o_stock-charg = wa_mchb-charg.
  o_stock-maktx = wa_mchb-maktx.
  o_stock-cant_disp = wa_mchb-clabs.
  o_stock-cant_disp_uom = wa_mchb-meins.
  o_stock-bwtar = wa_mchb-bwtar.
  o_stock-budat = wa_mchb-ersda.
  o_stock-kdmat = wa_mchb-kdmat.
  o_stock-kunnr = wa_mchb-kunnr.
  o_stock-kunnr_name = wa_mchb-kunnr_name.

  CALL FUNCTION 'ZUI5_CM_STATUS_LOTE'
    EXPORTING
      i_werks       = i_werks
      i_lgort       = i_lgort
      i_charg       = o_stock-charg
    IMPORTING
      o_status      = o_stock-status
      o_status_text = o_stock-status_text
      o_lote_2d     = v_lote_2d
      o_lote_3d     = v_lote_3d.

  WRITE wa_mchb-largo TO v_str_largo LEFT-JUSTIFIED NO-GROUPING DECIMALS 0 .
  WRITE wa_mchb-alto  TO v_str_alto LEFT-JUSTIFIED NO-GROUPING DECIMALS 0 .
  WRITE wa_mchb-ancho TO v_str_ancho LEFT-JUSTIFIED NO-GROUPING DECIMALS 0 .

  o_stock-largo = wa_mchb-largo.
  o_stock-alto = wa_mchb-alto.
  o_stock-ancho = wa_mchb-ancho.
  o_stock-dimension = |{ v_str_largo }x{ v_str_ancho }x{ v_str_alto }|.

  " Los lotes 3D tienen como fecha de contabilización la de su lote 2D.
  " Comprobamos si el lote es 3D.
  IF v_lote_3d EQ o_stock-charg.
    SELECT SINGLE ersda FROM mchb INTO @o_stock-budat
        WHERE charg EQ @v_lote_2d.
  ENDIF.


ENDFUNCTION.
