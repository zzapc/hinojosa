FUNCTION zui5_cm_get_clientes_destina.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_KUNNR) TYPE  RANGE_KUNNR_TAB OPTIONAL
*"     VALUE(IR_KUNNR_NAME) TYPE  ZSUIS_CM_NOMBRES_RANG OPTIONAL
*"     VALUE(IR_KUNWE) TYPE  RANGE_KUNNR_TAB OPTIONAL
*"     VALUE(IR_KUNWE_NAME) TYPE  ZSUIS_CM_NOMBRES_RANG OPTIONAL
*"     VALUE(IR_WERKS) TYPE  RANGE_T_WERKS_D OPTIONAL
*"     VALUE(IR_LGORT) TYPE  RANGE_T_LGORT_D OPTIONAL
*"     VALUE(IR_CITY) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_STREET) TYPE  RSELOPTION OPTIONAL
*"  EXPORTING
*"     VALUE(O_DATA) TYPE  ZSCMTT_DESTINATARIOS_CLIENTE
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  DATA: sum_opens LIKE  rf02l-oblig.

  SELECT a~kunnr, b~name1 AS name_kunnr, a~vkorg, a~vtweg, a~spart, a~parvw, a~parza, a~kunn2 , c~name1 AS name1_kunn2, t~werks, t~bukrs, kk~klimk, ad~city1 AS city, ad~street
    FROM tvkwz AS tv
    INNER JOIN knvp AS a ON tv~vkorg = a~vkorg
    INNER JOIN kna1 AS b ON b~kunnr = a~kunnr AND b~ktokd IN ( 'ZCLI', 'ZGRU' )
    INNER JOIN knvv AS v ON v~kunnr = b~kunnr AND v~vkorg = a~vkorg AND v~vtweg = a~vtweg AND v~spart = a~spart
    INNER JOIN kna1 AS c ON c~kunnr = a~kunn2
    INNER JOIN tvko AS t ON t~vkorg = a~vkorg
    LEFT JOIN knkk AS kk ON kk~kunnr = b~kunnr AND kk~kkber = a~vkorg
    LEFT JOIN adrc AS ad ON ad~addrnumber = c~adrnr
    INTO TABLE @DATA(lt_data)
    WHERE a~kunnr IN @ir_kunnr
    AND b~name1 IN @ir_kunnr_name
    AND a~kunn2 IN @ir_kunwe
    AND c~name1 IN @ir_kunwe_name
    AND tv~werks IN @ir_werks
    AND ad~city1 IN @ir_city
    AND ad~street IN @ir_street
    AND a~parvw = 'WE'
    AND b~aufsd = @space
    AND v~aufsd = @space
    and v~vtweg = '10'
    and v~spart = '10'
    ORDER BY a~kunnr, a~kunn2.

  IF sy-subrc = 0.
    LOOP AT lt_data INTO DATA(ls_data).
      APPEND INITIAL LINE TO o_data ASSIGNING FIELD-SYMBOL(<ls_data>).

      MOVE-CORRESPONDING ls_data TO <ls_data>.

      CALL FUNCTION 'CREDIT_EXPOSURE'
        EXPORTING
          kkber         = ls_data-vkorg
          kunnr         = ls_data-kunnr
        IMPORTING
          sum_opens     = sum_opens
        EXCEPTIONS
          error_message = 1
          OTHERS        = 2.
      IF sy-subrc = 0.
        IF sum_opens > ls_data-klimk.
          <ls_data>-credito_excedido = 'X'.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDIF.


ENDFUNCTION.
