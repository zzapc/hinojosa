FUNCTION zswm_put_ui5_rlab .
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TCODE) TYPE  TCODE OPTIONAL
*"     VALUE(UNAME) TYPE  SY-UNAME DEFAULT SY-UNAME
*"     VALUE(OPERARIO) TYPE  ZLNUM_OPER OPTIONAL
*"     VALUE(VBELN) TYPE  VBELN OPTIONAL
*"     VALUE(TT_CUEST) TYPE  ZSWM_UI5_RLBO_STR_TT OPTIONAL
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  PERFORM break USING 'ZSWM_GET_UI5_RLAB'.

  DATA: data_u            TYPE zswm_data_ui5_eeeoo_str,
        r_param           TYPE zswm_data_ui5_param_str,
        r_funcionalidades TYPE zswm_data_ui5_func_str,
        g_message1        TYPE logline,
        g_message2        TYPE logline,
        g_message3        TYPE logline,
        g_message4        TYPE logline,
        g_message5        TYPE logline,
        g_message6        TYPE logline,
        g_message7        TYPE logline,
        g_message_number  TYPE msgnr,
        g_msgid           TYPE msgid,
        g_msgv1           LIKE sprot_u-var1,
        g_msgv2           LIKE sprot_u-var2,
        g_msgv3           LIKE sprot_u-var3,
        g_msgv4           LIKE sprot_u-var4,

        g_message_type    TYPE syst_msgty.
  DATA gs_rlab  TYPE zwm_rf_riesg_lab.

  data: vbeln_doc type vbeln.
  PERFORM get_document USING vbeln tcode CHANGING vbeln_doc error tt_log.


  CALL FUNCTION 'ZSWM_GET_DATA_USER_UI5'
    EXPORTING
      uname      = uname
      statu      = 'X'
      no_gen_log = abap_true
    IMPORTING
      data_user  = data_u
*     ERROR      =
*     TT_LOG     =
    .
*  DATA gs_rlab  TYPE zwm_rf_riesg_lab.
  DATA gs_rlab_log TYPE zwm_rf_rlab_log.
  MOVE operario TO gs_rlab_log-operario.
  sort tt_cuest by id.
  CHECK tt_cuest[] IS NOT INITIAL.
* add jtm 19.10.2022 de esta forma si pasamos varias veces
  delete from zwm_rf_rlab_log
                         where lgnum    eq data_u-lgnum
                           and usuario  eq uname
                           and operario eq operario
                           and vbeln    eq vbeln_doc.
* fin de add jtm 19.10.2022
*  vbeln = |{ vbeln  ALPHA = IN }|.
*
  TRY.

      zcl_wm_rlab_dao=>init( ).
      zcl_wm_rlab_dao=>get_instance(
          iv_lgnum = data_u-lgnum
          iv_vbeln = CONV #( vbeln_doc )
          iv_usnam = uname
          iv_noper = gs_rlab_log-operario )->start_query(  ).
      WHILE zcl_wm_rlab_dao=>get_instance( )->has_next_query( ) = abap_true.
        DATA(sw_indice) = sy-index.
        READ TABLE tt_cuest WITH KEY id = sw_indice INTO DATA(rt_cuest).
        CLEAR: gs_rlab_log-respuesta,  gs_rlab.
        gs_rlab =  zcl_wm_rlab_dao=>get_instance( iv_lgnum = data_u-lgnum )->get_next_query( ).
        gs_rlab_log-lgnum = data_u-lgnum.
        gs_rlab_log-operario = operario.
        gs_rlab_log-usuario = uname.
        gs_rlab_log-fecha = sy-datum.
        gs_rlab_log-hora = sy-uzeit.
        gs_rlab_log-id = gs_rlab-id.
        gs_rlab_log-respuesta = rt_cuest-RESPUESTA.
        zcl_wm_rlab_dao=>get_instance( )->create_log_entry(
        EXPORTING
          is_data   = gs_rlab_log
*          iv_commit = ABAP_TRUE
      ).
        IF zcl_wm_rlab_dao=>get_instance( )->get_last_log_entry( )-respuesta eq 'No'.
            move abap_true to error.
            PERFORM mensaje USING 'E' 'ZSWM_UI5' '089' space space space space  CHANGING tt_log[].
            return.
        endif.
      ENDWHILE.
    CATCH zcx_wm_exception INTO DATA(lr_exc).
      g_message_number = lr_exc->if_t100_message~t100key-msgno.
      g_msgid = lr_exc->if_t100_message~t100key-msgid.
      g_msgv1 = lr_exc->if_t100_message~t100key-attr1.
      g_msgv2 = lr_exc->if_t100_message~t100key-attr2.
      g_msgv3 = lr_exc->if_t100_message~t100key-attr3.
      g_msgv4 = lr_exc->if_t100_message~t100key-attr4.
      MOVE abap_true TO error.
      DATA(msgno) = sy-msgno.
      MOVE g_message_number TO msgno.
      PERFORM mensaje USING 'E' g_msgid msgno g_msgv1 g_msgv2 g_msgv3 g_msgv4 CHANGING tt_log[].

  ENDTRY.

ENDFUNCTION.
