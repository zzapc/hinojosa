FUNCTION zui5_cm_ayuda_material .
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IR_LIFNR) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_LIFNR_NAME) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_BEDAT) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_MAKTX) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_DIMENSIONCAJA) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_WERKS) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_LGORT) TYPE  RSELOPTION OPTIONAL
*"     VALUE(IR_EBELN) TYPE  RSELOPTION OPTIONAL
*"  EXPORTING
*"     VALUE(O_DATA) TYPE  ZSUITT_ADD_POSICION
*"     VALUE(O_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------

  DATA wl_add_posicion TYPE zsuist_add_posicion.
  DATA: lv_cantidad_entrega TYPE lfimg.
  " USR05

  LOOP AT ir_lifnr ASSIGNING FIELD-SYMBOL(<fs_lifnr>).

    <fs_lifnr>-low = CONV lifnr( |{ <fs_lifnr>-low ALPHA = IN }| ).
    <fs_lifnr>-high = CONV lifnr( |{ <fs_lifnr>-high ALPHA = IN }| ).

  ENDLOOP.

  SELECT  ekko~ebeln,
          ekpo~ebelp,
          ekpo~matnr,
          makt~maktx,
          ekpo~menge,
          ekpo~meins,
          yhp~length,
          yhp~height,
          yhp~width,
          ekko~lifnr,
          ekko~bedat,
          yhp3~pmatn AS zzmatpal,
          ekpo~zzcantpal,
          yhp2~tbqty AS zzcanxpal
    FROM ekko AS ekko
    INNER JOIN ekpo AS ekpo ON ekko~ebeln = ekpo~ebeln
    INNER JOIN makt AS makt ON ekpo~matnr = makt~matnr
    INNER JOIN lfa1 AS lfa1 ON ekko~lifnr = lfa1~lifnr
    LEFT OUTER JOIN marc AS marc ON marc~matnr = ekpo~matnr AND marc~werks = ekpo~werks
    LEFT OUTER JOIN yhp_idx_td151 AS yhp ON yhp~cuobj EQ marc~cuobj
    LEFT OUTER JOIN yhp_idx_td151  AS yhp2 ON yhp2~cuobj = marc~cuobj AND yhp2~shuty = 'UNIT'
    LEFT OUTER JOIN yhp_idx_td160  AS yhp3 ON yhp3~cuobj = marc~cuobj
    WHERE ekko~lifnr IN @ir_lifnr
      AND lfa1~name1 IN @ir_lifnr_name
      AND ekko~bedat IN @ir_bedat
      AND makt~maktx IN @ir_maktx
      AND makt~spras = @sy-langu
      AND yhp~shuty = 'BASE_BOX'
      AND ekko~bsart = 'ZPE1'
*      AND ekko~ekgrp = '213' "MTS: 28.05.2024 quitamos esta condición `por mail SAITÍ - CM Monitor de entradas
      AND ekpo~elikz = ''
      AND ekpo~bstae = '0004'
      AND ekpo~werks IN @ir_werks
      AND ekpo~lgort IN @ir_lgort
      AND ekko~ebeln IN @ir_ebeln
    INTO TABLE @DATA(tv_posiciones).

  IF sy-subrc = 0.
    SELECT b~vgbel, b~vgpos, b~vbeln, b~posnr, b~lfimg, b~vrkme
      FROM ekpo AS a
      INNER JOIN lips AS b ON b~vgbel = a~ebeln "and b~vgpos = a~ebelp
      INTO TABLE @DATA(lt_lips)
      FOR ALL ENTRIES IN @tv_posiciones
        WHERE a~ebeln = @tv_posiciones-ebeln
        AND a~ebelp = @tv_posiciones-ebelp.


    LOOP AT tv_posiciones INTO DATA(wv_posiciones).
      CLEAR lv_cantidad_entrega.
      LOOP AT lt_lips INTO DATA(ls_lips) WHERE vgbel = wv_posiciones-ebeln AND vgpos = wv_posiciones-ebelp.
        ADD ls_lips-lfimg TO lv_cantidad_entrega.
      ENDLOOP.
      IF wv_posiciones-menge <= lv_cantidad_entrega.
        CONTINUE.
      ELSE.
        wv_posiciones-menge =  wv_posiciones-menge - lv_cantidad_entrega.
      ENDIF.

      MOVE-CORRESPONDING wv_posiciones TO wl_add_posicion.

      TRY .
          wl_add_posicion-zzcantpal = round( val = wl_add_posicion-menge / wl_add_posicion-zzcanxpal dec = 0 mode = 1  ).
        CATCH cx_sy_zerodivide.
        CATCH cx_sy_conversion_no_number.
          wl_add_posicion-zzcantpal = 1.
      ENDTRY.

      wl_add_posicion-dimesioncaja = wv_posiciones-length && 'X' && wv_posiciones-height && 'X' && wv_posiciones-width.

      IF wl_add_posicion-dimesioncaja IN ir_dimensioncaja.
        INSERT wl_add_posicion INTO TABLE o_data.
      ENDIF.

    ENDLOOP.

    IF o_data IS INITIAL.
      APPEND VALUE #( type = 'I' id = 'ZUI5_CM' number = '050' ) TO o_return.
    ENDIF.

  ELSE.

    APPEND VALUE #( type = 'I' id = 'ZUI5_CM' number = '050' ) TO o_return.

  ENDIF.

ENDFUNCTION.
