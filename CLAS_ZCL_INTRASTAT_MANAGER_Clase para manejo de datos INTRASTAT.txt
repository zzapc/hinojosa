
class ZCL_INTRASTAT_MANAGER definition
  public
  final
  create public .

public section.

  class-data _C_TVARVC_INTRASTAT_IVA_SERV type SYCHAR30 value 'ZMM_INTRASTAT_TIVA' ##NO_TEXT.
  class-data _C_TVARVC_HDFIELDS type SYCHAR30 value 'ZMM_INTRASTAT_HDFIELDS' ##NO_TEXT.
  class-data _C_TVARVC_PDFIELDS type SYCHAR30 value 'ZMM_INTRASTAT_PDFIELDS' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !I_LIFNR type LIFNR
    exceptions
      NOT_UE .
  methods GET_COUNTRY
    importing
      !I_LIFNR type LIFNR optional
    exporting
      !E_LAND1 type LAND1
      !E_XEGLD type XEGLD .
  methods CHECK_IF_IVA_IS_SERVICE
    importing
      !I_MWSKZ type MWSKZ
    exporting
      !E_SERVICE type BOOL .
  class-methods SET_PO_INTRASTAT_HEADER_DATA
    changing
      !C_EIKP type EIKP .
  class-methods SET_PO_INTRASTAT_POSITION_DATA
    changing
      !C_EIPO type EIPO .
protected section.
private section.

  data _LIFNR type LIFNR .
  data _MATNR type MATNR .
  data _LAND1 type LAND1 .
  data _XEGLD type XEGLD .
endclass. "ZCL_INTRASTAT_MANAGER definition
class ZCL_INTRASTAT_MANAGER implementation.
  method CHECK_IF_IVA_IS_SERVICE.

    DATA: lr_mwskz TYPE RANGE OF mwskz,
          ls_mwskz LIKE LINE OF lr_mwskz.

    SELECT *
      FROM tvarvc
      INTO @DATA(ls_mwskz_values)
     WHERE name = @_c_tvarvc_intrastat_iva_serv.

      CLEAR: ls_mwskz.
      ls_mwskz-sign   = ls_mwskz_values-sign.
      ls_mwskz-option = ls_mwskz_values-opti.
      ls_mwskz-low    = ls_mwskz_values-low.
      ls_mwskz-high   = ls_mwskz_values-high.
      APPEND ls_mwskz TO lr_mwskz.

    ENDSELECT.

    IF ( i_mwskz IN lr_mwskz ).
      e_service = abap_true.
    ENDIF.

  endmethod.
  method CONSTRUCTOR.

    _lifnr = i_lifnr.

    me->get_country(
      EXPORTING
        i_lifnr = _lifnr    " Número de cuenta del proveedor o acreedor
      IMPORTING
        e_land1 = _land1    " Clave de país
        e_xegld = _xegld    " Indicador: ¿ Miembro de la CEE ?
    ).



  endmethod.
  method GET_COUNTRY.

    DATA: lv_lifnr TYPE lifnr.

    IF ( i_lifnr IS INITIAL ).
      lv_lifnr = _lifnr.
    ELSE.
      lv_lifnr = i_lifnr.
    ENDIF.

    SELECT SINGLE land1
      FROM lfa1
      INTO e_land1
     WHERE lifnr EQ lv_lifnr.

    SELECT SINGLE xegld
      FROM t005
      INTO e_xegld
     WHERE land1 = e_land1.

  endmethod.
  method SET_PO_INTRASTAT_HEADER_DATA.

    "Rellenamos dinamicamente los valores, para ello usmos los FS.
    FIELD-SYMBOLS: <fs_import_header> LIKE c_eikp,
                   <fs_fieldname> TYPE any.

    "Asigno la estructura que tiene los datos INTRASTAT al FS
    ASSIGN c_eikp TO <fs_import_header>.

    "Si se ha asignado...
    IF ( <fs_import_header> IS ASSIGNED ).

      "Obtenemos campos a rellenar de TVARVC
      SELECT *
        FROM tvarvc
        INTO @DATA(ls_tvarvc)
       WHERE name EQ @_c_tvarvc_hdfields.

        "Asignamos el campo al FS y este lo referenciamos a la estructura de datos IMPORT.
        ASSIGN COMPONENT ls_tvarvc-high OF STRUCTURE <fs_import_header> TO <fs_fieldname>.

        "Comprobamos que se ha asignado...
        IF ( <fs_fieldname> IS ASSIGNED ).

          "Comprobamos que no venga relleno desde el proveedor
          "así dejamos que mande lo que diga el maestro de proveedores o el registro info.
          IF ( <fs_fieldname> IS INITIAL ).

            "Modificamos el valor.
            <fs_fieldname> = ls_tvarvc-low.

          ENDIF.

          "Liberamos el FS
          UNASSIGN <fs_fieldname>.

        ENDIF.

      ENDSELECT.

    ENDIF.

    "Liberamos el FS
    UNASSIGN <fs_import_header>.

  endmethod.
  METHOD set_po_intrastat_position_data.

    "Rellenamos dinamicamente los valores, para ello usmos los FS.
    FIELD-SYMBOLS: <fs_import_pos> LIKE c_eipo,
                   <fs_fieldname>  TYPE any.

    "Asigno la estructura que tiene los datos INTRASTAT al FS
    ASSIGN c_eipo TO <fs_import_pos>.

    "Si se ha asignado...
    IF ( <fs_import_pos> IS ASSIGNED ).

      "Obtenemos campos a rellenar de TVARVC
      SELECT *
        FROM tvarvc
        INTO @DATA(ls_tvarvc)
       WHERE name EQ @_c_tvarvc_pdfields.

        "Asignamos el campo al FS y este lo referenciamos a la estructura de datos IMPORT.
        ASSIGN COMPONENT ls_tvarvc-high OF STRUCTURE <fs_import_pos> TO <fs_fieldname>.

        "Comprobamos que se ha asignado...
        IF ( <fs_fieldname> IS ASSIGNED ).

          "Comprobamos que no venga relleno desde el proveedor o el reg. info
          "así dejamos que mande lo que diga el maestro de proveedores o el registro info.
          IF ( <fs_fieldname> IS INITIAL ).

            "Modificamos el valor.
            <fs_fieldname> = ls_tvarvc-low.

          ENDIF.

          "Liberamos el FS
          UNASSIGN <fs_fieldname>.

        ENDIF.

      ENDSELECT.

    ENDIF.

    "Liberamos el FS
    UNASSIGN <fs_import_pos>.

  ENDMETHOD.
