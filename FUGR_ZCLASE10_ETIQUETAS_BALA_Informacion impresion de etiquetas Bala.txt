FUNCTION zclase10_etiquetas_bala .
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IT_MSEG) TYPE  TY_T_MSEG
*"     VALUE(IS_MKPF) TYPE  MKPF
*"  EXPORTING
*"     VALUE(E_DATOS) TYPE  ZMT_ETIQUETAS_CLASE10
*"----------------------------------------------------------------------
  DATA: wa_datos TYPE zdt_etiquetas_clase10_linea.

  DATA: lo_proxy    TYPE REF TO cl_proxy_client,
        lv_log_port TYPE prx_logical_port_name.


  LOOP AT it_mseg INTO DATA(wa_mseg).
    REFRESH e_datos-mt_etiquetas_clase10-linea.

*   Identificador único del registro (autoincremento)
    wa_datos-id = ''.

    wa_datos-puesto = ''. " = Mayor que 0 para filtrar etiquetas por puestos, 0 para todos los puestos

    wa_datos-usuario = sy-uname.

*   Fecha de creación del registro AAAAMMDD
    wa_datos-fecha = is_mkpf-bldat.

*   Hora de creación del registro HHMMSS
    wa_datos-hora = is_mkpf-cputm.

*   Código de barras del producto
    wa_datos-gtin_02 = ''.

*   Descripción del producto
    SELECT SINGLE maktx FROM makt
      INTO wa_datos-descripcion
      WHERE spras = sy-langu AND
            matnr = wa_mseg-matnr.

*   Descripción breve del origen del producto
    wa_datos-origen = ''.

*   Literal informativo del formato del producto CAJAS,PIEZAS…
    wa_datos-confeccion = ''. " =

*   Lote
    wa_datos-lot_batch_10 = wa_mseg-charg.

*   Cantidad (puede llevar decimales)
    wa_datos-cantidad_37 = wa_mseg-menge.

*
    wa_datos-nombre_fabricante = ''. "
*
    wa_datos-direccion_fabricante = ''. "
*
    wa_datos-cp_fabricante = ''. "
*
    wa_datos-provincia_fabricante = ''.
*
    wa_datos-fecha_produccion_13 = wa_mseg-hsdat.

*   Proveedor y nombre
    wa_datos-codigo_proveedor_91 = wa_mseg-lifnr.

    SELECT SINGLE name1 FROM lfa1
      INTO wa_datos-nombre_proveedor
      WHERE lifnr = wa_mseg-lifnr.

*   Código de material
    wa_datos-codigo_articulo = wa_mseg-matnr.

*   Código de Material en proveedor
    SELECT SINGLE idnlf FROM eina
      INTO wa_datos-codigo_articulo_cliente_241
      WHERE matnr = wa_mseg-matnr.

*   I Enviado a impresora P Pendiente de imprimir
    IF wa_mseg-bwart = '101'.
      wa_datos-estado_envio = 'M'. "'P'.
    ELSE.
      wa_datos-estado_envio = 'A'.
    ENDIF.

*   centro
    wa_datos-centro = wa_mseg-werks.

*   Código almacén(almacen_em) y descriptivo(almacen)
    wa_datos-almacen_em = wa_mseg-lgort.

    SELECT SINGLE lgobe FROM t001l
      INTO wa_datos-almacen
      WHERE lgort = wa_mseg-lgort.

*   Número de copias a imprimir por defecto
    wa_datos-copias = ''.

*   Valor a grabar en la etiqueta (max con tipo activado 16 de longitud)
    wa_datos-rfid  = ''.

    APPEND wa_datos TO e_datos-mt_etiquetas_clase10-linea.


    TRY.
        CREATE OBJECT lo_proxy
                TYPE ('ZCO_SI_SAP_ETIQUETAS_BALA_OUT')
                EXPORTING logical_port_name = lv_log_port.

        CAST zco_si_sap_etiquetas_bala_out( lo_proxy )->si_sap_etiquetas_bala_out_b( output = e_datos ).

        COMMIT WORK AND WAIT.

      CATCH cx_root INTO DATA(lr_exc).
        MESSAGE text-e01 TYPE 'S' DISPLAY LIKE 'E'.
        EXIT.
    ENDTRY.
  ENDLOOP.

ENDFUNCTION.
