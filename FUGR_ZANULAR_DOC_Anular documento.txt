FUNCTION zanular_doc.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_MBLNR) TYPE  MBLNR
*"     VALUE(I_MJAHR) TYPE  MJAHR
*"  EXPORTING
*"     VALUE(E_ERROR) TYPE  XFELD
*"  TABLES
*"      T_MESSAGES STRUCTURE  BAPIRET2
*"----------------------------------------------------------------------


  DATA: lt_return TYPE TABLE OF bapiret2,
        ls_return TYPE          bapiret2.

  DATA: gs_messages TYPE bapiret2.

  DATA: lv_extnumber TYPE balnrext.


  CALL FUNCTION 'BAPI_GOODSMVT_CANCEL'
    EXPORTING
      materialdocument = i_mblnr
      matdocumentyear  = i_mjahr
*     GOODSMVT_PSTNG_DATE       =
*     GOODSMVT_PR_UNAME         =
* IMPORTING
*     GOODSMVT_HEADRET =
    TABLES
      return           = lt_return
*     GOODSMVT_MATDOCITEM       =
    .

  READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.
  IF sy-subrc <> 0.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.

*   GUARDAR LOGS CON EL PEDIDO DE COMPRAS CREADO
    CLEAR gs_messages.

    gs_messages-type = 'S'.
    gs_messages-number = '124'.
    gs_messages-id = 'ZPP'.
    gs_messages-message_v1 = i_mblnr.
    gs_messages-message_v2 = i_mjahr.

    APPEND gs_messages TO t_messages.
  ELSE.
    e_error = 'X'.

*   REGISTRAR ERROR EN CASO DE NO CREACION DEL PEDIDO DE COMPRAS
    LOOP AT lt_return INTO ls_return WHERE type  = 'E'.
      CLEAR gs_messages.
      gs_messages = ls_return.
      APPEND gs_messages TO t_messages.
    ENDLOOP.

    CONCATENATE 'Documento' i_mblnr '/'  i_mjahr INTO lv_extnumber SEPARATED BY space.

    CALL FUNCTION 'ZMFPP_GUARDAR_LOG'
      EXPORTING
        objeto    = 'ZSAP_MES'
        subobjeto = 'ZANULAR_DOC'
        mensajes  = t_messages[]
        extnumber = lv_extnumber.


  ENDIF.


ENDFUNCTION.
