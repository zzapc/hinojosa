
class ZSCL_CONTROL_CREDITO definition
  public
  final
  create public .

public section.

  class-methods RUTINA_RV07A901
    importing
      !IV_VBUK type VBUK optional
      !IV_VBAP type VBAP optional
      !IV_VBAK type VBAK optional
    exceptions
      ERROR .
protected section.
private section.
endclass. "ZSCL_CONTROL_CREDITO definition
class ZSCL_CONTROL_CREDITO implementation.
  METHOD rutina_rv07a901.

*CHECK 1 = 2.

    IF ( iv_vbuk-cmgst = 'B' OR iv_vbuk-cmgst = 'C' ) AND sy-tcode = 'VA01'.

      RAISE error.

    ELSEIF ( iv_vbuk-cmgst = 'B' OR iv_vbuk-cmgst = 'C' ).


      SELECT aufnr, @space AS liberada FROM afpo
        INTO TABLE @DATA(tv_aufnr)
        WHERE kdauf = @iv_vbak-vbeln
*        AND kdpos = @iv_vbap-posnr
        .
      IF sy-subrc = 0.

        LOOP AT tv_aufnr ASSIGNING FIELD-SYMBOL(<fs_aufnr>).

          DATA(vv_objnr) = CONV j_objnr( 'OR' && | { <fs_aufnr>-aufnr ALPHA = IN } | ).

          CONDENSE vv_objnr NO-GAPS.

          SELECT SINGLE COUNT(*) FROM jest
            WHERE objnr = @vv_objnr
            AND stat = 'I0002'
            AND inact = ''.
          IF sy-subrc <> 0.

            <fs_aufnr>-liberada = ''.

          ELSE.

            <fs_aufnr>-liberada = 'X'.
*          RAISE error.

          ENDIF.
        ENDLOOP.

        IF NOT line_exists( tv_aufnr[ liberada = 'X' ] ).
          RAISE error.
        ENDIF.


      ELSE.
        RAISE error.
      ENDIF.

* Read the subsequent function information for the message
*      PERFORM fofun_text_read USING    gl_fofun
*                              CHANGING fofun_text.
*      MESSAGE ID 'V1' TYPE 'E' NUMBER '849'
*              WITH fofun_text
*              RAISING error.
    ENDIF.



  ENDMETHOD.
endclass. "ZSCL_CONTROL_CREDITO implementation
