*&---------------------------------------------------------------------*
*& Report  ZOA_UPLOAD_AND_LINK
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zoa_upload_and_link.
*$*$----------------------------------------------------------------$*$*
*$ Correction Inst.         0120031469 0000303820                     $*
*$--------------------------------------------------------------------$*
*$ Valid for       :                                                  $*
*$ Software Component   SAP_BASIS  SAP Basiskomponente                $*
*$  Release 610          All Support Package Levels                   $*
*$  Release 620          All Support Package Levels                   $*
*$  Release 640          All Support Package Levels                   $*
*$*$----------------------------------------------------------------$*$*
*&--------------------------------------------------------------------*
*& Object          REPS ZOA_UPLOAD_AND_LINK
*& Object Header   PROG ZOA_UPLOAD_AND_LINK
*&--------------------------------------------------------------------*
*& PROGRAM ZOA_UPLOAD_AND_LINK
*&--------------------------------------------------------------------*
...
*REPORT  zoa_upload_and_link.
*>>>> START OF INSERTION <<<<
INCLUDE <cntn01>.
SELECTION-SCREEN BEGIN OF BLOCK a WITH FRAME TITLE text-101.
PARAMETERS:
  path(256)  TYPE c LOWER CASE OBLIGATORY
                DEFAULT 'C:\temp\input\archive\eingang',    "#EC NOTEXT
  extent(10) TYPE c LOWER CASE DEFAULT 'fax' OBLIGATORY,
  frontend   TYPE c DEFAULT 'X' AS CHECKBOX,
  delim(1)   TYPE c DEFAULT '\' OBLIGATORY,
  debug(1)   TYPE c DEFAULT ' ' NO-DISPLAY.
SELECTION-SCREEN END OF BLOCK a.

SELECTION-SCREEN BEGIN OF BLOCK b WITH FRAME TITLE text-102.
PARAMETERS:
  object  TYPE toaom-sap_object OBLIGATORY,
  dok_art TYPE toaom-ar_object OBLIGATORY.
SELECTION-SCREEN END OF BLOCK b.

SELECTION-SCREEN BEGIN OF BLOCK c WITH FRAME TITLE text-103.
PARAMETERS:
  no_del   TYPE c DEFAULT 'X' AS CHECKBOX,
  check    TYPE c DEFAULT 'X' AS CHECKBOX,
  exist    TYPE c DEFAULT 'X' AS CHECKBOX,
  end      TYPE c DEFAULT 'X' AS CHECKBOX,
  exismeth TYPE swc_elem DEFAULT 'EXISTENCECHECK'
             OBLIGATORY.

SELECTION-SCREEN END OF BLOCK c.

SELECTION-SCREEN BEGIN OF BLOCK d WITH FRAME TITLE text-104.
PARAMETERS:
  stassign TYPE c RADIOBUTTON GROUP 1,
  wfcreate TYPE c RADIOBUTTON GROUP 1.
*            wfassign    type c radiobutton group 1.
SELECTION-SCREEN END OF BLOCK d.

SELECTION-SCREEN BEGIN OF BLOCK e WITH FRAME TITLE text-105.
PARAMETERS:
            verbose     TYPE c DEFAULT ' ' AS CHECKBOX.
SELECTION-SCREEN END OF BLOCK e.

* definition
DATA: object2        TYPE toaom-sap_object,
      aid            TYPE toav0-archiv_id,
      e_path(1200)   TYPE c,
      adi            TYPE toav0-arc_doc_id,
      file_path      TYPE string,
      filetable      TYPE STANDARD TABLE OF sapb-sappfad,
      wa_f           TYPE sapb-sappfad,
      toaom          LIKE toaom OCCURS 0 WITH HEADER LINE,
      count          TYPE i,
      objid          TYPE sapb-sapobjid,
      doc_type       TYPE toadv-doc_type,
      obj            TYPE swc_object,
      del_file       TYPE string,
      lines          TYPE i,
      file_dir_back  TYPE epsdirnam,
      file_list_back TYPE epsfili OCCURS 0 WITH HEADER LINE,
      searchstr      TYPE string,
      oarfcin        TYPE oarfcin,
      name_len       TYPE i,
      extent_len     TYPE i,
      search_pos     TYPE i,
      iobj           TYPE swotobjid-objtype,
      info           TYPE swotrk OCCURS 0 WITH HEADER LINE,
      off            TYPE sy-index,
      len            TYPE sy-index,
      hextent        LIKE extent.
*
FIELD-SYMBOLS: <f>.

* reject process if running in background and frontend = 'X'
IF sy-batch = 'X' AND frontend = 'X'.
  MESSAGE ID 'OA' TYPE 'E' NUMBER '501' WITH 'Frontend'.    "#EC NOTEXT
  LEAVE.
ENDIF.
*
file_path = path.
* search files in directory
IF frontend = 'X'.
*  search for files on frontend
  CALL METHOD cl_gui_frontend_services=>directory_list_files
    EXPORTING
      directory                   = file_path
      filter                      = '*.*'
      files_only                  = 'X'
*     DIRECTORIES_ONLY            =
    CHANGING
      file_table                  = filetable
      count                       = count
    EXCEPTIONS
      cntl_error                  = 1
      directory_list_files_failed = 2
      wrong_parameter             = 3
      error_no_gui                = 4
      not_supported_by_gui        = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ELSE.
* search for files on backend
  file_dir_back = path.
  IF verbose = 'X'.
    WRITE: / 'Lesen Dateien aus dem Verzeichnis:'(015), path.
  ENDIF.
  CALL FUNCTION 'EPS_GET_DIRECTORY_LISTING'
    EXPORTING
      dir_name = file_dir_back
    TABLES
      dir_list = file_list_back
    EXCEPTIONS
      OTHERS   = 1.
  IF sy-subrc = 0.
    REFRESH filetable.
    LOOP AT file_list_back.
      IF verbose = 'X'.
        WRITE: / text-031, file_list_back-name.
      ENDIF.
      CONCATENATE '.' extent INTO searchstr.
      SEARCH file_list_back-name FOR searchstr.
      IF sy-subrc = 0.
        wa_f = file_list_back-name.
        APPEND wa_f TO filetable.
        IF verbose = 'X'.
          WRITE: / text-030, wa_f.
        ENDIF.
      ENDIF.
    ENDLOOP.
*    append lines of file_list_back to filetable.
  ENDIF.

ENDIF.
* get the content repository from customizing

CALL FUNCTION 'ARCHIV_METAINFO_GET'
  EXPORTING
    active_flag           = 'X'
    ar_object             = dok_art
    sap_object            = object
  TABLES
    toaom_fkt             = toaom
  EXCEPTIONS
    error_connectiontable = 1
    error_parameter       = 2
    OTHERS                = 3.
IF sy-subrc <> 0.
  MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
hextent = extent.
TRANSLATE hextent TO UPPER CASE.
IF hextent <> toaom-doc_type.
  WRITE: / text-012, hextent, toaom-doc_type.
  EXIT.
ENDIF.
*
* check if the are file to process
DESCRIBE TABLE filetable LINES lines.
IF lines = 0.
  WRITE: / text-023, path.
  EXIT.
ENDIF.
*
* get the key fields and print the key out
iobj = object.
CALL FUNCTION 'SWO_QUERY_KEYFIELDS'
  EXPORTING
*   LANGUAGE       = SY-LANGU
    objtype = iobj
    text    = 'X'
  TABLES
    info    = info.
SORT info BY offset.
*
swc_container cont.
* process for all files found
LOOP AT filetable INTO wa_f.
  CONCATENATE path delim wa_f INTO e_path.
  ULINE.
  WRITE: / text-001, e_path.
  WRITE: / text-002, toaom-archiv_id.
* build object identifier
  name_len = strlen( wa_f ).
  extent_len = strlen( extent ).
  extent_len = extent_len + 1.   "extent + '.'
  search_pos = name_len - extent_len.
*  translate wa_f to upper case.                          "#EC TRANSLANG
  CONCATENATE '.' extent INTO searchstr.
  SEARCH wa_f FOR searchstr.
  IF search_pos <> sy-fdpos.
    WRITE: / 'Dateiextent nicht korrekt gesetzt:'(014), wa_f, extent.
    IF end = 'X'.
      EXIT.
    ELSE.
      CONTINUE.
    ENDIF.
  ENDIF.
  objid = wa_f(search_pos).
  WRITE: / text-004, objid.
* check if a link should be created or a workflow be started
  IF wfcreate <> 'X'.   "workflow start ?
* no scenario store and assign
* check existance of object if required
    IF exist = 'X'.
      WRITE: / text-005, object.
      WRITE / text-016.
      LOOP AT info.
        off = info-offset.
        len = info-ddlength.
        ASSIGN objid+off(len) TO <f>.
        WRITE: / info-descript, <f>.
      ENDLOOP.
      swc_create_object obj object objid.
      swc_call_method obj exismeth cont.
      IF sy-subrc <> 0.
*      message id 'OA' type 'I' number '858' with object objid.
        WRITE: / text-021, object, objid.
        IF end = 'X'.
          WRITE: / text-020.
          EXIT.
        ELSE.
          CONTINUE.
        ENDIF.
      ELSE.
        WRITE: / text-011, object2, objid, doc_type.
      ENDIF.
    ELSE.
      WRITE: / text-006, object, objid.
    ENDIF.
* store document if required
    IF check = ' '.
      CALL FUNCTION 'SCMS_AO_FILE_CREATE_PATH'
        EXPORTING
          mandt        = sy-mandt
          arc_id       = toaom-archiv_id
          path         = e_path
          doc_type     = extent
          no_delete    = 'X'
        IMPORTING
          doc_id       = adi
        EXCEPTIONS
          error_http   = 1
          error_archiv = 2
          error_kernel = 3
          error_config = 4
          OTHERS       = 5.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        IF end = 'X'.
          WRITE: / text-020.
          LEAVE.
        ELSE.
          CONTINUE.
        ENDIF.
      ELSE.
        WRITE: / text-003, adi.
      ENDIF.
    ELSE.
      WRITE: / text-009.
    ENDIF.

    aid = toaom-archiv_id.
    doc_type = extent. "type casting
    object2 = object.  "type casting
* create link to business object
    IF check = ' '. "should object existance be checked ?
      CALL FUNCTION 'ARCHIV_CONNECTION_INSERT'
        EXPORTING
          archiv_id             = aid
          arc_doc_id            = adi
          ar_object             = dok_art
          mandant               = sy-mandt
          object_id             = objid
          sap_object            = object2
          doc_type              = doc_type
        EXCEPTIONS
          error_connectiontable = 1
          OTHERS                = 2.
      IF sy-subrc <> 0.  "link written ?
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        IF end = 'X'.
          WRITE: / text-020.
          LEAVE.
        ELSE.
          CONTINUE.
        ENDIF.
      ELSE.
        WRITE: / text-022.
      ENDIF.
    ELSE.
      WRITE: / text-010.
    ENDIF.
* link written continue process
    IF no_del <> 'X'.
      del_file = e_path.
      IF frontend = 'X'.
        WRITE: / text-007, e_path.
      ELSE.
        WRITE: / text-008, e_path.
      ENDIF.
      CALL FUNCTION 'SCMS_FILE_DELETE'
        EXPORTING
          filename = e_path
          frontend = frontend
        EXCEPTIONS
          OTHERS   = 1.
      IF sy-subrc <> 0.
        MESSAGE ID 'OA' TYPE 'I' NUMBER '287' WITH del_file.
        IF end = 'X'.
          WRITE: / text-020.
          LEAVE.
        ELSE.
          CONTINUE.
        ENDIF. " end = 'X'
      ENDIF. " no_del
    ENDIF.
  ELSE. "Yes, start WF
* first store document
    IF check = ' '.
      CALL FUNCTION 'SCMS_AO_FILE_CREATE_PATH'
        EXPORTING
          mandt        = sy-mandt
          arc_id       = toaom-archiv_id
          path         = e_path
          doc_type     = extent
          no_delete    = 'X'
        IMPORTING
          doc_id       = adi
        EXCEPTIONS
          error_http   = 1
          error_archiv = 2
          error_kernel = 3
          error_config = 4
          OTHERS       = 5.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        IF end = 'X'.
          WRITE: / text-020.
          LEAVE.
        ELSE.
          CONTINUE.
        ENDIF.
      ELSE.
        WRITE: / text-003, adi.
      ENDIF.
    ELSE.
      WRITE: / text-009.
    ENDIF.
* call function module ARCHIV_PROCESS_RFCINPUT

    oarfcin-archiv_id  = toaom-archiv_id.
    oarfcin-arc_doc_id = adi.
    oarfcin-ar_object  = dok_art.
    oarfcin-doc_type   = extent.
*    if wfassign = 'X'.
*      oarfcin-late = 'X'.
*    endif.
    IF verbose = 'X'.
      WRITE: / text-040, toaom-archiv_id, adi, dok_art, doc_type.
    ENDIF.
    IF check = ' '.
      CALL FUNCTION 'ARCHIV_PROCESS_RFCINPUT'
        EXPORTING
          document_entry      = oarfcin
        EXCEPTIONS
          no_authorization    = 1
          no_workitem_created = 2
          error_parameter     = 3
          OTHERS              = 4.
      IF sy-subrc <> 0.
        MESSAGE ID 'OA' TYPE 'I' NUMBER '172'.
        IF end = 'X'.
          WRITE: / text-020.
          LEAVE.
        ENDIF.
      ELSE.
        WRITE: / 'Workitem gestartet'(013).
      ENDIF.
      IF no_del <> 'X'.
        del_file = e_path.
        IF frontend = 'X'.
          WRITE: / text-007, e_path.
        ELSE.
          WRITE: / text-008, e_path.
        ENDIF.
        CALL FUNCTION 'SCMS_FILE_DELETE'
          EXPORTING
            filename = e_path
            frontend = frontend
          EXCEPTIONS
            OTHERS   = 1.
        IF sy-subrc <> 0.
          MESSAGE ID 'OA' TYPE 'I' NUMBER '287' WITH del_file.
          IF end = 'X'.
            WRITE: / text-020.
            LEAVE.
          ELSE.
            CONTINUE.
          ENDIF. " end = 'X'
        ENDIF. " no_del
      ENDIF.
    ELSE.
      WRITE: / 'Workflow wegen Testlauf nicht gestartet'(016).
    ENDIF.
  ENDIF.
ENDLOOP.

*>>>> END OF INSERTION <<<<<<
