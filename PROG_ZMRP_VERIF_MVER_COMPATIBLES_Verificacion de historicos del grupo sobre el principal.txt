*&---------------------------------------------------------------------*
*& Report  ZMRP_VERIF_MVER_COMPATIBLES
*&
*&---------------------------------------------------------------------*
*& Autor: Carlos Vivó Jiménez
*&
*& Contexto: el report ZMRP_GRUPOS_DATOS_CONSUMO integra los consumos
*&  históricos de todos los miembros del grupo (tabla ZWM_COMPATIBLES)
*&  sobre el principal. No estoy seguro de que funcione en el 100% de los
*&  casos y acotar todas las casuísticas es más complejo que activar una alerta
*&  ; así que este programa funcionará a modo de alerta cuando algún principal
*&  no tenga un consumo equivalente a la suma de todo el grupo
*&
*&---------------------------------------------------------------------*
REPORT zmrp_verif_mver_compatibles.

SELECTION-SCREEN BEGIN OF BLOCK 1.
PARAMETERS: p_werks TYPE werks_d.
SELECTION-SCREEN END OF BLOCK 1.

START-OF-SELECTION.
  DATA(index) = CONV sytabix( 1 ).
  DATA gt_main_curr TYPE STANDARD TABLE OF zmm_v_prod_grp WITH DEFAULT KEY.
  DATA zperkz  TYPE perkz.
  DATA group TYPE zmm_v_prod_grp.

  CALL METHOD zcl_wm_compatibles=>get_grupos
    EXPORTING
      iv_werks           = p_werks
    RECEIVING
      et_zwm_compatibles = DATA(t_compat).

  LOOP AT t_compat INTO DATA(compat).
    index = 1.

    DO 8 TIMES.
      IF index EQ 1.
        DATA(matnr) = compat-principal.
        DATA(prgrp) = matnr.
      ELSE.
        ASSIGN COMPONENT |compatible{ index - 1 }| OF STRUCTURE compat TO FIELD-SYMBOL(<field>).

        IF <field> IS ASSIGNED.
          matnr = <field>.
        ENDIF.
      ENDIF.

      IF matnr IS INITIAL.
        EXIT. " salimos del DO
      ENDIF.

      ADD 1 TO index.

      SELECT * FROM mver
      INNER JOIN mara
      ON mver~matnr EQ mara~matnr
      WHERE mver~matnr EQ @matnr
      AND mver~werks EQ @compat-werks
      INTO @DATA(mver).

        APPEND INITIAL LINE TO gt_main_curr ASSIGNING FIELD-SYMBOL(<fs_curr>).
        MOVE-CORRESPONDING mver-mver TO <fs_curr>.
        MOVE mver-mara-meins TO <fs_curr>-meins.

        <fs_curr>-prgrp = prgrp.
        <fs_curr>-main_prod = COND #( WHEN matnr EQ compat-principal THEN abap_true ELSE abap_false ).
        <fs_curr>-wemit = compat-werks.
      ENDSELECT.
    ENDDO.
  ENDLOOP.

* delete records from different period from master data->
  LOOP AT gt_main_curr ASSIGNING <fs_curr>.
    CLEAR zperkz.

    SELECT SINGLE perkz INTO zperkz FROM marc
      WHERE matnr = <fs_curr>-matnr AND
      werks = <fs_curr>-werks.

    IF sy-subrc EQ 0.
      DELETE  gt_main_curr WHERE matnr = <fs_curr>-matnr AND
                perkz NE zperkz.
    ENDIF.
  ENDLOOP.

  SORT gt_main_curr BY prgrp gjahr zahlr ASCENDING.


  " ahora vamos a verificar contra el principal de cada grupo, secuencia de periodos y ejercicios
  LOOP AT gt_main_curr INTO DATA(data).
    IF data-prgrp NE group-prgrp OR data-zahlr NE group-zahlr OR data-gjahr NE group-gjahr.
      IF group-prgrp IS NOT INITIAL. " además, no es la primera línea, por tanto verificamos ya
        DATA(main) = gt_main_curr[ prgrp = group-prgrp zahlr = group-zahlr gjahr = group-gjahr ].

        IF main-mgv01 NE group-gsv01. " si el consumo corregido del principal <> consumo total del grupo
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 1, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv01, 'debería ser ', group-gsv01.
        ENDIF.

        IF main-mgv02 NE group-gsv02.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 2, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv02, 'debería ser ', group-gsv02.
        ENDIF.

        IF main-mgv03 NE group-gsv03.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 3, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv03, 'debería ser ', group-gsv03.
        ENDIF.

        IF main-mgv04 NE group-gsv04.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 4, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv04, 'debería ser ', group-gsv04.
        ENDIF.

        IF main-mgv05 NE group-gsv05.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 5, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv05, 'debería ser ', group-gsv05.
        ENDIF.

        IF main-mgv06 NE group-gsv06.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 6, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv06, 'debería ser ', group-gsv06.
        ENDIF.

        IF main-mgv07 NE group-gsv07.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 7, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv07, 'debería ser ', group-gsv07.
        ENDIF.

        IF main-mgv08 NE group-gsv08.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 8, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv08, 'debería ser ', group-gsv08.
        ENDIF.

        IF main-mgv09 NE group-gsv09.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 9, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv09, 'debería ser ', group-gsv09.
        ENDIF.

        IF main-mgv10 NE group-gsv10.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 10, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv10, 'debería ser ', group-gsv10.
        ENDIF.

        IF main-mgv11 NE group-gsv11.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 11, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv11, 'debería ser ', group-gsv11.
        ENDIF.

        IF main-mgv12 NE group-gsv12.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 12, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv12, 'debería ser ', group-gsv12.
        ENDIF.

        IF main-mgv13 NE group-gsv13.
          WRITE: / 'Diferencia en grupo ', main-prgrp, 'periodo 13, contador ', main-zahlr,'/', main-gjahr, '. Valor ', main-mgv13, 'debería ser ', group-gsv13.
        ENDIF.
      ENDIF.

      CLEAR group.
      group-prgrp = data-prgrp. " nuevo grupo
      group-zahlr = data-zahlr. " o nueva secuencia
      group-gjahr = data-gjahr. " o nuevo año
    ENDIF.

    ADD data-gsv01 TO group-gsv01.
    ADD data-mgv01 TO group-mgv01.

    ADD data-gsv02 TO group-gsv02.
    ADD data-mgv02 TO group-mgv02.

    ADD data-gsv03 TO group-gsv03.
    ADD data-mgv03 TO group-mgv03.

    ADD data-gsv04 TO group-gsv04.
    ADD data-mgv04 TO group-mgv04.

    ADD data-gsv05 TO group-gsv05.
    ADD data-mgv05 TO group-mgv05.

    ADD data-gsv06 TO group-gsv06.
    ADD data-mgv06 TO group-mgv06.

    ADD data-gsv07 TO group-gsv07.
    ADD data-mgv07 TO group-mgv07.

    ADD data-gsv08 TO group-gsv08.
    ADD data-mgv08 TO group-mgv08.

    ADD data-gsv09 TO group-gsv09.
    ADD data-mgv09 TO group-mgv09.

    ADD data-gsv10 TO group-gsv10.
    ADD data-mgv10 TO group-mgv10.

    ADD data-gsv11 TO group-gsv11.
    ADD data-mgv11 TO group-mgv11.

    ADD data-gsv12 TO group-gsv12.
    ADD data-mgv12 TO group-mgv12.

    ADD data-gsv13 TO group-gsv13.
    ADD data-mgv13 TO group-mgv13.
  ENDLOOP.
