REPORT ZACE8M MESSAGE-ID AD.
*======================================================================
*   =================================================================
*      ===========================================================
*         ====================================================
*            ===============================================
*
*                              ACE-ABAP 8
*                                  for
*                        4.7, ECC 5.0 and higher
*
*            Copyright © 1996 - 2016 PricewaterhouseCoopers.
*                         All rights reserved.
*    PricewaterhouseCoopers refers to the network of member firms of
*    PricewaterhouseCoopers International Limited, each of which is
*               a separate and independent legal entity.
*
DATA: REPREL(10) TYPE C VALUE '8.10.306'.
*
*            ===============================================
*         =====================================================
*      ===========================================================
*   =================================================================
*======================================================================
*
*  PURPOSE:
*  This program downloads the necessary data for the PC-Tool ACE
*  onto the connected application server.
*
*  PARAMETERS:
*  Beside several other selection parameters, the PATH parameter must
*  be changed to a valid path on the application server named on the
*  selection screen. The rest of the parameters should remain to their
*  default values.
*
*  INLCUDES / SUBPROGRAMS:
*  This program has no includes. It changes, generates and calls
*  the ABAP ZACE8T. Other naming conventions can be adapted by
*  changing the assignment of variable suprepid. This is the only
*  change needed.
DATA: SUBREPID LIKE SY-REPID VALUE 'ZACE8T'.
*
*  INPUT:
*  Depending on the SAP version and the selection parameters this
*  ABAP selects (beside some base tables) the tables dynamically.
*  The selection process is driven by the DD. These tables are
*  downloaded by ZACE8T.
*
*  OUTPUT:
*  The output consists of:
*    - the tables downloaded as described above
*    - a protocol which shows IF any table is not downloaded (due to
*      non-existence in this SAP release or table size)
*    - messages for each tables downloaded
*
*  ADDITIONAL REMARKS:
*  It is highly recommended to start the ABAP in the background.
*  After execution in the background the process should be supervised
*  by checking IF at least one file could be written on the specified
*  directory on the application server.
*
*  SYSTEM IMPACT:
*  There should be no impact to the system:
*     - the program is designed for low memory usage.
*     - no changes to DD or any other table is performed
*       (except program ZACE8T - see above)
*
*  CHECK OF SUCCESS:
*  Beside the standard error messages you can test the completness of
*  download by the procedure described below:
*  Approx. 700-800 files will be created. The naming conventions
*  of these files contain a numbering. To check completness of files,
*  take the highest file number, it must be the same as the total
*  number of files downloaded.
*
*######################################################################
*######################################################################
*##                                                                  ##
*##     DEFINITION                                                   ##
*##                                                                  ##
*######################################################################
*######################################################################
*---------------------------------------------------------------------*
*       WORK AREAS FOR EXTERNAL TABLES                                *
*---------------------------------------------------------------------*
TABLES: DD02L, USH02.

DATA: BEGIN OF WTOBJ,
        OBJCT TYPE TOBJ-OBJCT,
        FIEL1 TYPE TOBJ-FIEL1,
        FIEL2 TYPE TOBJ-FIEL2,
        FIEL3 TYPE TOBJ-FIEL3,
        FIEL4 TYPE TOBJ-FIEL4,
        FIEL5 TYPE TOBJ-FIEL5,
        FIEL6 TYPE TOBJ-FIEL6,
        FIEL7 TYPE TOBJ-FIEL7,
        FIEL8 TYPE TOBJ-FIEL8,
        FIEL9 TYPE TOBJ-FIEL9,
        FIEL0 TYPE TOBJ-FIEL0,
        OCLSS TYPE TOBJ-OCLSS,
      END OF WTOBJ,
      ITOBJ LIKE TABLE OF WTOBJ.
FIELD-SYMBOLS <ZTOBJ> LIKE LINE OF ITOBJ.

DATA: BEGIN OF WUSR04,
        MANDT TYPE USR04-MANDT,
        BNAME TYPE USR04-BNAME,
        NRPRO TYPE USR04-NRPRO,
        PROFS TYPE USR04-PROFS,
      END OF WUSR04,
      ITUSR04 LIKE TABLE OF WUSR04.
FIELD-SYMBOLS <ZUSR04> LIKE LINE OF ITUSR04.

DATA: BEGIN OF WUSR10,
        MANDT TYPE USR10-MANDT,
        TYP TYPE USR10-TYP,
        PROFN TYPE USR10-PROFN,
        NRAUT TYPE USR10-NRAUT,
        AUTHS TYPE USR10-AUTHS,
      END OF WUSR10,
      ITUSR10 LIKE TABLE OF WUSR10.
FIELD-SYMBOLS <ZUSR10> LIKE LINE OF ITUSR10.

DATA: BEGIN OF WUSRLOGSEL
       ,MANDT TYPE USH02-MANDT
       ,BNAME TYPE USH02-BNAME
     ,END OF WUSRLOGSEL
     ,ITUSRLOGSEL LIKE TABLE OF WUSRLOGSEL.
FIELD-SYMBOLS <ZUSRLOGSEL> LIKE LINE OF
                               ITUSRLOGSEL.

DATA: BEGIN OF WUSRLOGEXT
       ,MANDT TYPE USH02-MANDT
       ,BNAME TYPE USH02-BNAME
       ,NRPRO TYPE USH04-NRPRO
       ,PROFS TYPE USH04-PROFS
       ,MODDA TYPE USH04-MODDA
       ,MODTI TYPE USH04-MODTI
       ,MODBE TYPE USH04-MODBE
     ,END OF WUSRLOGEXT
     ,ITUSRLOGEXT LIKE TABLE OF WUSRLOGEXT.
FIELD-SYMBOLS <ZUSRLOGEXT> LIKE LINE OF
                               ITUSRLOGEXT.

DATA: BEGIN OF WUSR12,
        MANDT TYPE USR12-MANDT,
        OBJCT TYPE USR12-OBJCT,
        AUTH TYPE USR12-AUTH,
        AKTPS TYPE USR12-AKTPS,
        MODDA TYPE USR12-MODDA,
        MODTI TYPE USR12-MODTI,
        MODBE TYPE USR12-MODBE,
        TYP TYPE USR12-TYP,
        LNG TYPE USR12-LNG,
        VALS TYPE USR12-VALS,
      END OF WUSR12,
      ITUSR12 LIKE TABLE OF WUSR12.
FIELD-SYMBOLS <ZUSR12> LIKE LINE OF ITUSR12.

DATA: BEGIN OF WROLELOG,
        MANDANT TYPE CDHDR-MANDANT,
        OBJECTID TYPE CDHDR-OBJECTID,
        CHANGENR TYPE CDHDR-CHANGENR,
        USERNAME TYPE CDHDR-USERNAME,
        UDATE TYPE CDHDR-UDATE,
        UTIME TYPE CDHDR-UTIME,
        TCODE TYPE CDHDR-TCODE,
        CHANGE_IND TYPE CDHDR-CHANGE_IND,
      END OF WROLELOG
     ,ITROLELOG LIKE TABLE OF WROLELOG.
FIELD-SYMBOLS <ZROLELOG> LIKE LINE OF ITROLELOG.

DATA: BEGIN OF WPROFLOG,
        MANDT TYPE USH10-MANDT,
        PROFN TYPE USH10-PROFN,
        TYP TYPE USH10-TYP,
        MODDA TYPE USH10-MODDA,
        MODTI TYPE USH10-MODTI,
        MODBE TYPE USH10-MODBE,
        NRAUT TYPE USH10-NRAUT,
        AUTHS TYPE USH10-AUTHS,
      END OF WPROFLOG,
      ITPROFLOG LIKE TABLE OF WPROFLOG.
FIELD-SYMBOLS <ZPROFLOG> LIKE LINE OF ITPROFLOG.

DATA: BEGIN OF WAUTHLOG,
        MANDT TYPE USH12-MANDT,
        OBJCT TYPE USH12-OBJCT,
        AUTH TYPE USH12-AUTH,
        TYP TYPE USH12-TYP,
        MODDA TYPE USH12-MODDA,
        MODTI TYPE USH12-MODTI,
        MODBE TYPE USH12-MODBE,
        LNG TYPE USH12-LNG,
        VALS TYPE USH12-VALS,
      END OF WAUTHLOG,
      ITAUTHLOG LIKE TABLE OF WAUTHLOG.
FIELD-SYMBOLS <ZAUTHLOG> LIKE LINE OF ITAUTHLOG.


DATA: BEGIN OF WDD03L,
        TABNAME TYPE DD03L-TABNAME,
        CHECKTABLE TYPE DD03L-CHECKTABLE,
        ROLLNAME TYPE DD03L-ROLLNAME,
        FIELDNAME TYPE DD03L-FIELDNAME,
        DOMNAME TYPE DD03L-DOMNAME,
        POSITION TYPE DD03L-POSITION,
        DATATYPE TYPE DD03L-DATATYPE,
        LENG TYPE DD03L-LENG,
        DECIMALS TYPE DD03L-DECIMALS,
        KEYFLAG TYPE DD03L-KEYFLAG,
      END OF WDD03L.


DATA: BEGIN OF ACEUSRLOG,
        MANDT LIKE USH02-MANDT,
        BNAME LIKE USH02-BNAME,
        MODBE LIKE USH02-MODBE,
        MODDA LIKE USH02-MODDA,
        MODTI LIKE USH02-MODTI,
        TCODE LIKE USH02-TCODE,
        OPTYPE(1) TYPE C,
        FIELDNAME(30) TYPE C,
        SCRTEXT(10) TYPE C,
        OLD(50) TYPE C,
        NEW(50) TYPE C,
      END OF ACEUSRLOG.

*---------------------------------------------------------------------*
*       INTERNAL TABLES                                               *
*---------------------------------------------------------------------*
DATA: BEGIN OF B0001,
        SYSID LIKE SY-SYSID,
        DELIM1(1) TYPE C,
        CLIENT LIKE SY-MANDT,
        DELIM2(1) TYPE C,
        ABAPREL(10) TYPE C.
DATA: END OF B0001.

DATA: BEGIN OF B0002  OCCURS 5,
        TYP(1) TYPE C,
        NR(4) TYPE C,
        TAB(80) TYPE C,
        DDTEXT LIKE DD02V-DDTEXT,
        FLAG(1)     TYPE C,
        NUMBYTE(15) TYPE N,
        NUMREC(15)  TYPE N.
DATA: END OF B0002.

DATA: BEGIN OF B0003,
        TYP(1) TYPE C,
        NR(4) TYPE C,
        TAB(80) TYPE C,
        FLD(80) TYPE C,
        START(6) TYPE N,
        LEN(6) TYPE N,
        CHECKTABLE LIKE DD03L-CHECKTABLE,
        KEYFLAG LIKE DD03L-KEYFLAG,
        DDTEXT LIKE DD04T-DDTEXT,
        REPTEXT LIKE DD04T-REPTEXT,
        DOMNAME3L LIKE DD03L-DOMNAME.
DATA: END OF B0003.

DATA: BEGIN OF B0004 OCCURS 1,
        CHECKTABLE LIKE DD08VV-CHECKTABLE,
        FORTABLE LIKE DD08VV-FORTABLE,
        FORKEY LIKE DD08VV-FORKEY.
DATA: END OF B0004.

DATA: BEGIN OF B0005 OCCURS 5,
        FTYPE(1) TYPE C,
        TABNAME LIKE DD03L-TABNAME,
        LANGFIELD LIKE DD03L-FIELDNAME,
        TABNAMETEXT LIKE DD03L-TABNAME,
        LANGFIELDTEXT LIKE DD03L-FIELDNAME,
        LIMIT(20) TYPE N,
        GEN(100) TYPE C,
        MIN(1) TYPE C,
        CLI(1) TYPE C,
        BC(1) TYPE C,
        DV(1) TYPE C,
        FSD(1) TYPE C,
        AGF(1) TYPE C,
        SDV(19) TYPE C,
        STAB(19) TYPE C,
        FLDLIST(1000) TYPE C.
DATA: END OF B0005.

class cl_abap_char_utilities definition load.

DATA: BEGIN OF B0006 OCCURS 1,
        DATUM LIKE SY-DATUM,
        SYSTEM LIKE SY-HOST,
        SAPRL LIKE SY-SAPRL,
        OPSYS LIKE SY-OPSYS,
        SYSID LIKE SY-SYSID,
        CLIENT LIKE SY-MANDT,
        DBSYS LIKE SY-DBSYS,
        UNAME LIKE SY-UNAME,
        REPID LIKE SY-REPID,
        STARTD(8) TYPE C,
        STARTT(6) TYPE C,
        ENDD(8) TYPE C,
        ENDT(6) TYPE C,
        PATH(100) TYPE C,
        ALL_CLI(1) TYPE C,
        ALL_CL2(1) TYPE C,
        ALL_CL3(1) TYPE C,
        BC(1) TYPE C,
        DV(1) TYPE C,
        FSD(1) TYPE C,
        HLP(1) TYPE C,
        LIMITS(12) TYPE C,
        LIMITA(12) TYPE C,
        SYS_RLL(1) TYPE C,
        REPREL(10) TYPE C,
        AGF(1) TYPE C,
        TLDM(1) TYPE C,
        TLDW(1) TYPE C,
        TLDD(1) TYPE C,
        TLDSEL(12) TYPE C,
        TLDREC(12) TYPE C,
        CDSSEL(1) TYPE C,
        CDSDATE(8) TYPE C,
        DV01(1) TYPE C,
        TA01(1) TYPE C,
        DV02(1) TYPE C,
        TA02(1) TYPE C,
        DV03(1) TYPE C,
        TA03(1) TYPE C,
        DV04(1) TYPE C,
        TA04(1) TYPE C,
        DV05(1) TYPE C,
        TA05(1) TYPE C,
        DV06(1) TYPE C,
        TA06(1) TYPE C,
        DV07(1) TYPE C,
        TA07(1) TYPE C,
        DV08(1) TYPE C,
        TA08(1) TYPE C,
        DV09(1) TYPE C,
        TA09(1) TYPE C,
        DV10(1) TYPE C,
        TA10(1) TYPE C,
        DV11(1) TYPE C,
        TA11(1) TYPE C,
        DV12(1) TYPE C,
        TA12(1) TYPE C,
        DV13(1) TYPE C,
        TA13(1) TYPE C,
        DV14(1) TYPE C,
        TA14(1) TYPE C,
        DV15(1) TYPE C,
        TA15(1) TYPE C,
        DV16(1) TYPE C,
        TA16(1) TYPE C,
        DV17(1) TYPE C,
        TA17(1) TYPE C,
        DV18(1) TYPE C,
        TA18(1) TYPE C,
        CDP(4) TYPE C,
        UCS(1) TYPE C,
        LIMITE(12) TYPE C,
        KPI001(1) TYPE C,
        KPI002(1) TYPE C,
        KPI003(1) TYPE C,
        KPI004(1) TYPE C,
        KPI009(1) TYPE C,
        KPI012(1) TYPE C,
        KPI019(1) TYPE C,
        KPI024(1) TYPE C,
        KPI027(1) TYPE C,
        KPIBUKRS(5000) TYPE C,
        ONLPST(1) TYPE C,
        DWNPST(1) TYPE C,
        XBKTXT(1) TYPE C,
        XCLR(1) TYPE C,
        XTEXT(1) TYPE C,
        XACCS(1) TYPE C,
        XSDOC(1) TYPE C,
        XPAY(1) TYPE C,
        XQUAN(1) TYPE C,
        SXBUKRS(5000) TYPE C,
        SXGJAHR(5000) TYPE C,
        SXBLART(3000) TYPE C,
        SXBLDAT(6000) TYPE C,
        SXBUDAT(6000) TYPE C,
        SXMONAT(40) TYPE C,
        SXCPUDT(6000) TYPE C,
        SXUSNAM(8000) TYPE C,
        SXTCODE(8000) TYPE C,
        SXGLVOR(4000) TYPE C,
        SXSNAME(4000) TYPE C.
DATA: END OF B0006.

TYPES: BEGIN OF B0007TYPE,
        MESS(400) TYPE C,
        NUM(5) TYPE N,
       END OF B0007TYPE.

DATA B0007 TYPE B0007TYPE
        OCCURS 20
        WITH HEADER LINE.

* HLP Structures
DATA: BEGIN OF HLPLINES OCCURS 20.
        INCLUDE STRUCTURE TLINE.
DATA: END OF HLPLINES.

DATA: BEGIN OF ACEHLP,
        HLPROW(90) TYPE C,
        OBJCT LIKE USR12-OBJCT,
        RFORMAT LIKE TLINE-TDFORMAT,
        ROWNUM(4) TYPE N.
DATA: END OF ACEHLP.

* Report Testing
DATA: BEGIN OF WREPTESTING,
        REPID(100) TYPE C,
        SCRID(40) TYPE C,
        INCID(50) TYPE C,
        LEVEL TYPE I,
        ORDER TYPE I,
        TYPE(16) TYPE C,
        STDCUST(8) TYPE C,
        OBJKEY(10) TYPE C,
        LOCTRANS(11) TYPE C,
        LASTCHG(8) TYPE C,
        XTYPE(16) TYPE C,
        XSTDCUST(8) TYPE C,
        XOBJKEY(10) TYPE C,
        XLOCTRANS(11) TYPE C,
        XLASTCHG(8) TYPE C.
DATA: END OF WREPTESTING.

DATA ZREPTESTING
       LIKE SORTED TABLE OF WREPTESTING
       WITH UNIQUE KEY REPID.

DATA YREPTESTING
       LIKE STANDARD TABLE OF WREPTESTING.

DATA LINENUM TYPE I.
DATA REPINDEX TYPE I.

*---------------------------------------------------------------------*
*       DATA DEFINITIONS                                              *
*---------------------------------------------------------------------*
DATA: ZEILE(200), MESS(200),
      TEXT(200), TEXT2(200),
      STARTD(8), STARTT(6), ENDD(8), ENDT(6),
      CONCAT(200) TYPE C, CONCATU(200)  TYPE C, CONCATU2(200) TYPE C,
      ERRCODE(6) TYPE N.

DATA: INVCHAR1 TYPE x value '0A',
      INVCHAR2 TYPE x value '0D',
      INVCONV TYPE ref to CL_ABAP_CONV_IN_CE,
      INVXSTR TYPE xstring,
      INVSTR1 TYPE string,
      INVSTR2 TYPE string.

* Transfer Variables
DATA: TRANSREC(4000) TYPE C,
      FILENUM(4) TYPE N VALUE 7,
      FILEEXT(4) TYPE C VALUE '.QJF',
      FILEB3(400) TYPE C,
      TRANSTXT(1) TYPE C VALUE '"',
      TRANSSEP(1) TYPE C VALUE '''',
      REPLCHAR(1) TYPE C VALUE '`'.

DATA: SEPCHAR(1) TYPE C.

*ADDBx Variable
DATA: ADDBNR(4) TYPE N,
      ADDBTYP(1) TYPE C,
      ADDBTAB LIKE DD03L-TABNAME,
      ONR(4) TYPE N VALUE '9999',
      OPOS(6) TYPE N VALUE '000000'.

DATA: CODE(350) TYPE C OCCURS 1000.
FIELD-SYMBOLS <ZCODE> LIKE LINE OF CODE.

TYPE-POOLS SSCR.

DATA RESTRICT TYPE SSCR_RESTRICT.

* Auxiliary objects for filling RESTRICT
DATA: OPT TYPE SSCR_OPT_LIST,
      ASS TYPE SSCR_ASS.

*---------------------------------------------------------------------*
*       REPORT DEFINITIONS                                            *
*---------------------------------------------------------------------*
* Data declaration for SELECT-OPTIONS
DATA: TRDIR_NAME LIKE TABFIELD-LFIELDNAME VALUE 'TRDIR-NAME'.

*---------------------------------------------------------------------*
*       EXTENDED DEFINITIONS                                          *
*---------------------------------------------------------------------*
* Data declaration for SELECT-OPTIONS
DATA: ANLA_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'ANLA-BUKRS',
      ANLA_ANLKL LIKE TABFIELD-LFIELDNAME VALUE 'ANLA-ANLKL',
      ANLA_XLOEV LIKE TABFIELD-LFIELDNAME VALUE 'ANLA-XLOEV',

      ANLB_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'ANLB-BUKRS',
      ANLB_AFABE LIKE TABFIELD-LFIELDNAME VALUE 'ANLB-AFABE',

      ANLC_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'ANLC-BUKRS',
      ANLC_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'ANLC-GJAHR',
      ANLC_AFABE LIKE TABFIELD-LFIELDNAME VALUE 'ANLC-AFABE',

      BKPF_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BUKRS',
      BKPF_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-GJAHR',
      BKPF_BLART LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BLART',
      BKPF_BLDAT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BLDAT',
      BKPF_BUDAT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BUDAT',
      BKPF_MONAT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-MONAT',
      BKPF_CPUDT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-CPUDT',
      BKPF_USNAM LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-USNAM',
      BKPF_TCODE LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-TCODE',
      BKPF_GLVOR LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-GLVOR',
      BKPF_SNAME LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-SNAME',

      BSEG_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'BSEG-BUKRS',
      BSEG_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'BSEG-GJAHR',

      CDHDR_OBJECTCLAS LIKE TABFIELD-LFIELDNAME
                                          VALUE 'CDHDR-OBJECTCLAS',
      CDHDR_OBJECTID LIKE TABFIELD-LFIELDNAME VALUE 'CDHDR-OBJECTID',
      CDHDR_UDATE LIKE TABFIELD-LFIELDNAME
                                          VALUE 'CDHDR-UDATE',

      EKKO_BSTYP LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-BSTYP',
      EKKO_BSART LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-BSART',
      EKKO_AEDAT LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-AEDAT',
      EKKO_ERNAM LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-ERNAM',
      EKKO_EKORG LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-EKORG',
      EKKO_EKGRP LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-EKGRP',
      EKKO_BEDAT LIKE TABFIELD-LFIELDNAME VALUE 'EKKO-BEDAT',

      EKPO_EBELN LIKE TABFIELD-LFIELDNAME VALUE 'EKPO-EBELN',
      EKPO_AEDAT LIKE TABFIELD-LFIELDNAME VALUE 'EKPO-AEDAT',
      EKPO_WERKS LIKE TABFIELD-LFIELDNAME VALUE 'EKPO-WERKS',

      KNA1_KUNNR LIKE TABFIELD-LFIELDNAME VALUE 'KNA1-KUNNR',
      KNA1_KTOKD LIKE TABFIELD-LFIELDNAME VALUE 'KNA1-KTOKD',

      KNB1_KUNNR LIKE TABFIELD-LFIELDNAME VALUE 'KNB1-KUNNR',
      KNB1_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'KNB1-BUKRS',

      LFA1_LIFNR LIKE TABFIELD-LFIELDNAME VALUE 'LFA1-LIFNR',
      LFA1_KTOKK LIKE TABFIELD-LFIELDNAME VALUE 'LFA1-KTOKK',

      LFB1_LIFNR LIKE TABFIELD-LFIELDNAME VALUE 'LFB1-LIFNR',
      LFB1_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'LFB1-BUKRS',

      MBEW_MATNR LIKE TABFIELD-LFIELDNAME VALUE 'MBEW-MATNR',
      MBEW_BWKEY LIKE TABFIELD-LFIELDNAME VALUE 'MBEW-BWKEY',

      MBEWH_MATNR LIKE TABFIELD-LFIELDNAME VALUE 'MBEWH-MATNR',
      MBEWH_BWKEY LIKE TABFIELD-LFIELDNAME VALUE 'MBEWH-BWKEY',
      MBEWH_BWTAR LIKE TABFIELD-LFIELDNAME VALUE 'MBEWH-BWTAR',
      MBEWH_LFGJA LIKE TABFIELD-LFIELDNAME VALUE 'MBEWH-LFGJA',
      MBEWH_LFMON LIKE TABFIELD-LFIELDNAME VALUE 'MBEWH-LFMON',

      SKA1_KTOPL LIKE TABFIELD-LFIELDNAME VALUE 'SKA1-KTOPL',

      SKB1_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'SKB1-BUKRS',
      SKB1_SAKNR LIKE TABFIELD-LFIELDNAME VALUE 'SKB1-SAKNR',

      VBAK_ERDAT LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-ERDAT',
      VBAK_ERNAM LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-ERNAM',
      VBAK_AUDAT LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-AUDAT',
      VBAK_VBTYP LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-VBTYP',
      VBAK_AUART LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-AUART',
      VBAK_VKORG LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-VKORG',
      VBAK_VTWEG LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-VTWEG',
      VBAK_KALSM LIKE TABFIELD-LFIELDNAME VALUE 'VBAK-KALSM',

      VBAP_VBELN LIKE TABFIELD-LFIELDNAME VALUE 'VBAP-VBELN',

      RBKP_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'RBKP-GJAHR',
      RBKP_BLART LIKE TABFIELD-LFIELDNAME VALUE 'RBKP-BLART',
      RBKP_BUDAT LIKE TABFIELD-LFIELDNAME VALUE 'RBKP-BUDAT',
      RBKP_USNAM LIKE TABFIELD-LFIELDNAME VALUE 'RBKP-USNAM',
      RBKP_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'RBKP-BUKRS',

      RSEG_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'RSEG-GJAHR',

      EKBE_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'EKBE-GJAHR',
      EKBE_BUDAT LIKE TABFIELD-LFIELDNAME VALUE 'EKBE-BUDAT',
      EKBE_WERKS LIKE TABFIELD-LFIELDNAME VALUE 'EKBE-WERKS',

      CDPOS_OBJECTCLAS LIKE TABFIELD-LFIELDNAME
                                          VALUE 'CDPOS-OBJECTCLAS',
      CDPOS_TABNAME LIKE TABFIELD-LFIELDNAME
                                          VALUE 'CDPOS-TABNAME',
      CDPOS_CHNGIND LIKE TABFIELD-LFIELDNAME
                                          VALUE 'CDPOS-CHNGIND',

      MSEG_MJAHR LIKE TABFIELD-LFIELDNAME VALUE 'MSEG-MJAHR',
      MSEG_BWART LIKE TABFIELD-LFIELDNAME VALUE 'MSEG-BWART',

      MARA_MATNR LIKE TABFIELD-LFIELDNAME VALUE 'MARA-MATNR',

      MVKE_MATNR LIKE TABFIELD-LFIELDNAME VALUE 'MVKE-MATNR',
      MVKE_VKORG LIKE TABFIELD-LFIELDNAME VALUE 'MVKE-VKORG',
      MVKE_VTWEG LIKE TABFIELD-LFIELDNAME VALUE 'MVKE-VTWEG',

      KNVV_KUNNR LIKE TABFIELD-LFIELDNAME VALUE 'KNVV-KUNNR',
      KNVV_VKORG LIKE TABFIELD-LFIELDNAME VALUE 'KNVV-VKORG',
      KNVV_VTWEG LIKE TABFIELD-LFIELDNAME VALUE 'KNVV-VTWEG',
      KNVV_SPART LIKE TABFIELD-LFIELDNAME VALUE 'KNVV-SPART',

      VBRK_VBELN LIKE TABFIELD-LFIELDNAME VALUE 'VBRK-VBELN',

      LFM1_EKORG LIKE TABFIELD-LFIELDNAME VALUE 'LFM1-EKORG',
      LFM1_ERDAT LIKE TABFIELD-LFIELDNAME VALUE 'LFM1-ERDAT',

      MARC_MATNR LIKE TABFIELD-LFIELDNAME VALUE 'MARC-MATNR',
      MARC_WERKS LIKE TABFIELD-LFIELDNAME VALUE 'MARC-WERKS',
      MARC_PSTAT LIKE TABFIELD-LFIELDNAME VALUE 'MARC-PSTAT',

      MKPF_MJAHR LIKE TABFIELD-LFIELDNAME VALUE 'MKPF-MJAHR',
      MKPF_BLDAT LIKE TABFIELD-LFIELDNAME VALUE 'MKPF-BLDAT',
      MKPF_USNAM LIKE TABFIELD-LFIELDNAME VALUE 'MKPF-USNAM',

      KNKK_KUNNR LIKE TABFIELD-LFIELDNAME VALUE 'KNKK-KUNNR',
      KNKK_KKBER LIKE TABFIELD-LFIELDNAME VALUE 'KNKK-KKBER',

      XKPF_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BUKRS',
      XKPF_GJAHR LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-GJAHR',
      XKPF_BLART LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BLART',
      XKPF_BLDAT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BLDAT',
      XKPF_BUDAT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BUDAT',
      XKPF_MONAT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-MONAT',
      XKPF_CPUDT LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-CPUDT',
      XKPF_USNAM LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-USNAM',
      XKPF_TCODE LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-TCODE',
      XKPF_GLVOR LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-GLVOR',
      XKPF_SNAME LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-SNAME',

      KPI_BUKRS LIKE TABFIELD-LFIELDNAME VALUE 'BKPF-BUKRS'.

* Internal table for capturing all the fields for EXT
* (for Selection)
DATA: BEGIN OF T_SELECT OCCURS 1,
        TABNAME   TYPE TABNAME,
        FLDNAME   TYPE FIELDNAME,
      END OF T_SELECT.

* Internal table for capturing all the fields for EXT
* (for WHERE Condition)
DATA: BEGIN OF T_WHERE OCCURS 1,
        TABNAME   TYPE TABNAME,
        FLDNAME   TYPE FIELDNAME,
      END OF T_WHERE.

* Internal tables for WHERE clause in the selection secreen
DATA: SEL01 TYPE TABLE OF SELOPTTAB,
      SEL02 TYPE TABLE OF SELOPTTAB,
      SEL03 TYPE TABLE OF SELOPTTAB,
      SEL04 TYPE TABLE OF SELOPTTAB,
      SEL05 TYPE TABLE OF SELOPTTAB,
      SEL06 TYPE TABLE OF SELOPTTAB,
      SEL07 TYPE TABLE OF SELOPTTAB,
      SEL08 TYPE TABLE OF SELOPTTAB,
      SEL09 TYPE TABLE OF SELOPTTAB,
      SEL10 TYPE TABLE OF SELOPTTAB,
      SEL11 TYPE TABLE OF SELOPTTAB,
      SEL12 TYPE TABLE OF SELOPTTAB,
      SEL13 TYPE TABLE OF SELOPTTAB,
      SEL14 TYPE TABLE OF SELOPTTAB,
      SEL15 TYPE TABLE OF SELOPTTAB.

*---------------------------------------------------------------------*
*       DOWNLOAD STRUKTUREN                                           *
*---------------------------------------------------------------------*

*   06.10.1999 New limit 999'999'999 bytes instead of 100'000'000
DATA: MAXLIMIT TYPE I VALUE 999999999.
DATA: STDLIMIT TYPE I.
DATA: ADDLIMIT TYPE I.
DATA: EXTLIMIT TYPE I.
DATA: CDSLIMIT TYPE I VALUE 300000000.
*   06.10.1999 New fielleng instead of 10'240'000 bytes
DATA: FILELENG TYPE I VALUE 010485760.
DATA: FILELN(9) TYPE N VALUE 010485760.

*---------------------------------------------------------------------*
*       KEYWORD FILTERS (PATH)                                        *
*---------------------------------------------------------------------*

CONSTANTS: BEGIN OF KEYWORDS_SPACE,
              SUBMIT(6) TYPE C VALUE 'SUBMIT',
              SELECT(6) TYPE C VALUE 'SELECT',
              INSERT(6) TYPE C VALUE 'INSERT',
              DELETE(6) TYPE C VALUE 'DELETE',
              PERFORM(7) TYPE C VALUE 'PERFORM',
              DATA(4) TYPE C VALUE 'DATA',
           END OF KEYWORDS_SPACE.

CONSTANTS: BEGIN OF KEYWORDS_NO_SPACE,
              DATA(5) TYPE C VALUE 'DATA:',
           END OF KEYWORDS_NO_SPACE.

*---------------------------------------------------------------------*
*       PARAMETER                                                     *
*---------------------------------------------------------------------*
* HEADER
* ======
SELECTION-SCREEN COMMENT /2(70) PHEAD1 MODIF ID HD1.
SELECTION-SCREEN SKIP 1.

* PATH
* ====
SELECTION-SCREEN BEGIN OF BLOCK PPATHB
                                WITH FRAME TITLE PPATHBC.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(39) PPATHT.
PARAMETERS: PATH(350) TYPE C OBLIGATORY LOWER CASE
  DEFAULT 'Please enter a valid path to an empty directory.'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(39) PCDSDATE.
PARAMETERS: CDSDATE TYPE D DEFAULT '20150701'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK PPATHB.

* DATA
* ====
SELECTION-SCREEN BEGIN OF BLOCK PDATAB
                                WITH FRAME TITLE PDATABC.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(31) PCLIC.
PARAMETERS: ALL_CLI AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(31) PC3IC.
PARAMETERS: ALL_CL3 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(31) PDATCDS.
PARAMETERS: CDSSEL AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.


SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(31) PDATAGT.
PARAMETERS: AGF AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(31) PDATAHT.
PARAMETERS: HLP AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(31) PDATALT.
PARAMETERS: DV AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(31) PDATAFT.
PARAMETERS: FSD AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(31) PDATABT.
PARAMETERS: BC AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(31) PDATUSR.
PARAMETERS: USR AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(39) PTLDTY.
PARAMETERS: TLDM RADIOBUTTON GROUP PTLD DEFAULT 'X'.
SELECTION-SCREEN COMMENT (7) PTLDMT.
PARAMETERS: TLDW RADIOBUTTON GROUP PTLD.
SELECTION-SCREEN COMMENT (7) PTLDWT.
PARAMETERS: TLDD RADIOBUTTON GROUP PTLD.
SELECTION-SCREEN COMMENT (16) PTLDDT.
PARAMETERS: TLDN RADIOBUTTON GROUP PTLD.
SELECTION-SCREEN COMMENT (12) PTLDNT.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(39) PDATAMT.
PARAMETERS: TLDSEL TYPE I OBLIGATORY DEFAULT 12.
SELECTION-SCREEN COMMENT 79(21) PDATART.
PARAMETERS: TLDREC TYPE I OBLIGATORY DEFAULT 4000000.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 22(8) PDATAC2.
SELECTION-SCREEN COMMENT (29) PDATAC3.
SELECTION-SCREEN COMMENT (8) PDATAC4.
SELECTION-SCREEN COMMENT (29) PDATAC5.
SELECTION-SCREEN COMMENT (8) PDATAC6.
SELECTION-SCREEN COMMENT (8) PDATAC7.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(24) PDATR01.
PARAMETERS: DV01 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX01.
PARAMETERS: TA01 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(24) PDATR02.
PARAMETERS: DV02 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX02.
PARAMETERS: TA02 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(24) PDATR03.
PARAMETERS: DV03 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX03.
PARAMETERS: TA03 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(24) PDATR04.
PARAMETERS: DV04 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX04.
PARAMETERS: TA04 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(24) PDATR05.
PARAMETERS: DV05 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX05.
PARAMETERS: TA05 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(24) PDATR07.
PARAMETERS: DV07 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX07.
PARAMETERS: TA07 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(24) PDATR06.
PARAMETERS: DV06 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX06.
PARAMETERS: TA06 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(24) PDATR08.
PARAMETERS: DV08 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX08.
PARAMETERS: TA08 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(24) PDATR10.
PARAMETERS: DV10 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX10.
PARAMETERS: TA10 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(24) PDATR09.
PARAMETERS: DV09 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX09.
PARAMETERS: TA09 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(24) PDATR11.
PARAMETERS: DV11 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX11.
PARAMETERS: TA11 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(24) PDATR12.
PARAMETERS: DV12 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX12.
PARAMETERS: TA12 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(24) PDATR16.
PARAMETERS: DV16 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX16.
PARAMETERS: TA16 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(24) PDATR14.
PARAMETERS: DV14 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX14.
PARAMETERS: TA14 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(24) PDATR15.
PARAMETERS: DV15 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX15.
PARAMETERS: TA15 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(24) PDATR13.
PARAMETERS: DV13 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX13.
PARAMETERS: TA13 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 40(24) PDATR17.
PARAMETERS: DV17 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX17.
PARAMETERS: TA17 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 79(24) PDATR18.
PARAMETERS: DV18 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (4) PDATRX18.
PARAMETERS: TA18 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(36) PTBSC.
SELECT-OPTIONS ADDTABLE FOR DD02L-TABNAME NO INTERVALS.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK PDATAB.

* LIMT
* ====
SELECTION-SCREEN BEGIN OF BLOCK PLIMTB
                                WITH FRAME TITLE PLIMTBC.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(21) PLIMTS.
PARAMETERS: LIMTS     TYPE I OBLIGATORY DEFAULT 20.
SELECTION-SCREEN COMMENT 40(21) PLIMTE.
PARAMETERS: LIMTE     TYPE I OBLIGATORY DEFAULT 200.
SELECTION-SCREEN COMMENT 79(21) PLIMTA.
PARAMETERS: LIMTA     TYPE I OBLIGATORY DEFAULT 20.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK PLIMTB.

* SYSTEM
* ======
SELECTION-SCREEN BEGIN OF BLOCK PSYSB
                                WITH FRAME TITLE PSYSBC.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(39) PSYSC.
PARAMETERS: SYS_PER RADIOBUTTON GROUP PSYS.
SELECTION-SCREEN COMMENT (35)  PSYSAT.
PARAMETERS: SYS_RLL RADIOBUTTON GROUP PSYS DEFAULT 'X'.
SELECTION-SCREEN COMMENT (21)  PSYSOT.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(39) PCDP.
PARAMETERS: CDP(4)  TYPE C OBLIGATORY DEFAULT '1101'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK PSYSB.


* KPIs
* ====

* Designing the Selection-Screen for KPI
SELECTION-SCREEN : BEGIN OF BLOCK PKPIS WITH FRAME TITLE PKPIS.

* Download Posting
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(30) PKPI002.
PARAMETERS : P_KPI002 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 40(30) PKPI003.
PARAMETERS : P_KPI003 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 79(30) PKPI012.
PARAMETERS : P_KPI012 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(30) PKPI001.
PARAMETERS : P_KPI001 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 40(30) PKPI004.
PARAMETERS : P_KPI004 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 79(30) PKPI019.
PARAMETERS : P_KPI019 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(30) PKPI009.
PARAMETERS : P_KPI009 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 40(30) PKPI024.
PARAMETERS : P_KPI024 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 79(30) PKPI027.
PARAMETERS : P_KPI027 AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP 1.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (30) PKPIBUK.
SELECT-OPTIONS : SKBUKRS FOR (KPI_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN : END OF BLOCK PKPIS.


* POSTING
* =======

* Designing the Selection-Screen for PST
SELECTION-SCREEN : BEGIN OF BLOCK PPSTS WITH FRAME TITLE PPSTS.

* Download Posting
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_ONLPST AS CHECKBOX.
SELECTION-SCREEN COMMENT (37) PPSTSC2.
PARAMETERS : P_DWNPST AS CHECKBOX.
SELECTION-SCREEN COMMENT (37) PPSTSC1.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (79) PPSTSC3.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP 1.

* Posting Headers
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(60) PPSTSEL MODIF ID FS3.
SELECTION-SCREEN COMMENT 79(39) PPSTOPT MODIF ID FS3.
SELECTION-SCREEN END OF LINE.

*     Company Code
*     Document Header Text
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTCOM.
SELECT-OPTIONS : SXBUKRS FOR (XKPF_BUKRS) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTDOC.
PARAMETERS : P_XBKTXT AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Fiscal Year
*     Clearing
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTFIS.
SELECT-OPTIONS : SXGJAHR FOR (XKPF_GJAHR) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTCLR.
PARAMETERS : P_XCLR AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Document Type
*     Text
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTDOCT.
SELECT-OPTIONS : SXBLART FOR (XKPF_BLART) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTTEXT.
PARAMETERS : P_XTEXT AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Document Date
*     Account Assignment
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTDOCD.
SELECT-OPTIONS : SXBLDAT FOR (XKPF_BLDAT) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTACCS.
PARAMETERS : P_XACCS AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Posting Date in the Document.
*     Source Document
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTDOCP.
SELECT-OPTIONS : SXBUDAT FOR (XKPF_BUDAT) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTSDOC.
PARAMETERS : P_XSDOC AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Fiscal Period.
*     Payment
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTFISP.
SELECT-OPTIONS : SXMONAT FOR (XKPF_MONAT) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTPAY.
PARAMETERS : P_XPAY AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Accounting Document Entry Date.
*     Quantity
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTAED.
SELECT-OPTIONS : SXCPUDT FOR (XKPF_CPUDT) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PPSTQUAN.
PARAMETERS : P_XQUAN AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     User Name
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTUNAM.
SELECT-OPTIONS : SXUSNAM FOR (XKPF_USNAM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Transaction Code.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTTX.
SELECT-OPTIONS : SXTCODE FOR (XKPF_TCODE) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Business Transaction Code.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTBTX.
SELECT-OPTIONS : SXGLVOR FOR (XKPF_GLVOR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     User Name.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PPSTSNAM.
SELECT-OPTIONS : SXSNAME FOR (XKPF_SNAME) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN : END OF BLOCK PPSTS.


* EXTENDED DOWNLOAD
* =================

* Designing the Selection-Screen for EXT
SELECTION-SCREEN : BEGIN OF BLOCK PEXTS WITH FRAME TITLE PEXTS.

* Download Extended
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_DWNCAT AS CHECKBOX.
SELECTION-SCREEN COMMENT (32) PEXTSC.
SELECTION-SCREEN END OF LINE.

* Extended Headers
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) PEXTTAB MODIF ID FS1.
SELECTION-SCREEN COMMENT 15(60) PEXTSEL MODIF ID FS1.
SELECTION-SCREEN COMMENT 79(39) PEXTOPT MODIF ID FS1.
SELECTION-SCREEN END OF LINE.


* Table ANLA(1)
*     Company Code / Additional
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_ANLA1 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTANLA.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM.
SELECT-OPTIONS : SBUKRS1 FOR (ANLA_BUKRS) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTADD.
PARAMETERS : P_ADTNL1 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Asset Class
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTAST.
SELECT-OPTIONS : SANLKL1 FOR (ANLA_ANLKL) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Indicator: Account marked for deletion?
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTIND.
SELECT-OPTIONS : SXLOEV1 FOR (ANLA_XLOEV) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table ANLB(2)
*     Company Code
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_ANLB2 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTANLB.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM1.
SELECT-OPTIONS : SBUKRS2 FOR (ANLB_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Real Depreciation Area
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTRDA.
SELECT-OPTIONS : SAFABE2 FOR (ANLB_AFABE) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table ANLC(3)
*     Company Code
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_ANLC3 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTANLC.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM2.
SELECT-OPTIONS : SBUKRS3 FOR (ANLC_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Fiscal Year
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTFIS.
SELECT-OPTIONS : SGJAHR3 FOR (ANLC_GJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Real Depreciation Area
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTRDA1.
SELECT-OPTIONS : SAFABE3 FOR (ANLC_AFABE) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table BKPF(4)
*     Company Code
*     Document Header Text
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_BKPF4 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTBKPF.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM3.
SELECT-OPTIONS : SBUKRS4 FOR (BKPF_BUKRS) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTDOC.
PARAMETERS : P_BKTXT4 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Fiscal Year
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTFIS1.
SELECT-OPTIONS : SGJAHR4 FOR (BKPF_GJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Document Type
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDOCT.
SELECT-OPTIONS : SBLART4 FOR (BKPF_BLART) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Document Date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDOCD.
SELECT-OPTIONS : SBLDAT4 FOR (BKPF_BLDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Posting Date in the Document.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDOCP.
SELECT-OPTIONS : SBUDAT4 FOR (BKPF_BUDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Fiscal Period.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTFISP.
SELECT-OPTIONS : SMONAT4 FOR (BKPF_MONAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Accounting Document Entry Date.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTAED.
SELECT-OPTIONS : SCPUDT4 FOR (BKPF_CPUDT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     User Name
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTUNAM.
SELECT-OPTIONS : SUSNAM4 FOR (BKPF_USNAM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Transaction Code.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTTX.
SELECT-OPTIONS : STCODE4 FOR (BKPF_TCODE) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Business Transaction Code.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBTX.
SELECT-OPTIONS : SGLVOR4 FOR (BKPF_GLVOR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     User Name.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTSNAM.
SELECT-OPTIONS : SSNAME4 FOR (BKPF_SNAME) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table BSEG(5)
*     Company Code
*     Clearing
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_BSEG5 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTBSEG.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM4.
SELECT-OPTIONS : SBUKRS5 FOR (BSEG_BUKRS) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTCLR.
PARAMETERS : P_CLR5 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Fiscal Year
*     Text
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTFIS2.
SELECT-OPTIONS : SGJAHR5 FOR (BSEG_GJAHR) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTTEXT.
PARAMETERS : P_TEXT5 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Account Assignment
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 79(30) PEXTACCS.
PARAMETERS : P_ACCS5 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Source Document
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 79(30) PEXTSDOC.
PARAMETERS : P_SDOC5 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Payment
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 79(30) PEXTPAY.
PARAMETERS : P_PAY5 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Quantity
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 79(30) PEXTQUAN.
PARAMETERS : P_QUAN5 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

* Table CDHDR(6)
*     Object Class
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_CDHDR6 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTCDHD.
SELECTION-SCREEN COMMENT 15(30) PEXTOBJC.
SELECT-OPTIONS : SOBJCL6 FOR (CDHDR_OBJECTCLAS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Object Value
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTOBJV.
SELECT-OPTIONS : SOBJVL6 FOR (CDHDR_OBJECTID) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Creation Date of Changed Document
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCRE.
SELECT-OPTIONS : SUDATE6 FOR (CDHDR_UDATE) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table EKKO(7)
*     Purchasing Document Category.
*     Release
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_EKKO7 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTEKKO.
SELECTION-SCREEN COMMENT 15(30) PEXTDOCC.
SELECT-OPTIONS : SBSTYP7 FOR (EKKO_BSTYP) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTREL.
PARAMETERS : P_REL7 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Purchasing Document Type.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDCT.
SELECT-OPTIONS : SBSART7 FOR (EKKO_BSART) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Date on which the record is created
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTRDAT.
SELECT-OPTIONS : SAEDAT7 FOR (EKKO_AEDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Name of the Person
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTNAM.
SELECT-OPTIONS : SERNAM7 FOR (EKKO_ERNAM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Purchase Organization
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTPUR.
SELECT-OPTIONS : SEKORG7 FOR (EKKO_EKORG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Purchasing Group
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTPURG.
SELECT-OPTIONS : SEKGRP7 FOR (EKKO_EKGRP) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Purchasing document date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDCDT.
SELECT-OPTIONS : SBEDAT7 FOR (EKKO_BEDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table EKPO(8)
*     Purchasing document Number
*     Text
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_EKPO8 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTEKPO.
SELECTION-SCREEN COMMENT 15(30) PEXTDOCN.
SELECT-OPTIONS : SEBELN8 FOR (EKPO_EBELN) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTXT.
PARAMETERS : P_TEXT8 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Purchase Document Item Change Date
*     Source Document
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCHDA.
SELECT-OPTIONS : SAEDAT8 FOR (EKPO_AEDAT) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTSRC.
PARAMETERS : P_SOURC8 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Plant
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTPLNT.
SELECT-OPTIONS : SWERKS8 FOR (EKPO_WERKS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table KNA1(9)
*     Customer No.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_KNA19 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTKNA1.
SELECTION-SCREEN COMMENT 15(30) PEXTCUS.
SELECT-OPTIONS : SKUNNR9 FOR (KNA1_KUNNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Customer Account Group.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCUG.
SELECT-OPTIONS : SKTOKD9 FOR (KNA1_KTOKD) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table KNB1(10)
*     Customer No.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_KNB110 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTKNB1.
SELECTION-SCREEN COMMENT 15(30) PEXTCUST.
SELECT-OPTIONS : SKUNN10 FOR (KNB1_KUNNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Company Code.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM5.
SELECT-OPTIONS : SBUKR10 FOR (KNB1_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table LFA1(11)
*     Vendor/Creditor No.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_LFA111 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTLFA1.
SELECTION-SCREEN COMMENT 15(30) PEXTLIF.
SELECT-OPTIONS : SLIFN11 FOR (LFA1_LIFNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Vendor Acc. Group.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTKTOK.
SELECT-OPTIONS : SKTOK11 FOR (LFA1_KTOKK) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table LFB1(12)
*     Vendor/Creditor No.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_LFB112 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTLFB1.
SELECTION-SCREEN COMMENT 15(30) PEXTLIF1.
SELECT-OPTIONS : SLIFN12 FOR (LFB1_LIFNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Company Code.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM6.
SELECT-OPTIONS : SBUKR12 FOR (LFB1_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table MBEW(13)
*     Material No.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MBEW13 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMBEW.
SELECTION-SCREEN COMMENT 15(30) PEXTMAT.
SELECT-OPTIONS : SMATN13 FOR (MBEW_MATNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Valuation Key
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTVAL.
SELECT-OPTIONS : SBWKE13 FOR (MBEW_BWKEY) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table MBEWH(14)
*     Material No.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MBEW14 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PCAMBEWH.
SELECTION-SCREEN COMMENT 15(30) PEXTMAT1.
SELECT-OPTIONS : SMATN14 FOR (MBEWH_MATNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Valuation Key
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTVAL1.
SELECT-OPTIONS : SBWKE14 FOR (MBEWH_BWKEY) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Valuation Type
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTTYP1.
SELECT-OPTIONS : SBWTA14 FOR (MBEWH_BWTAR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Year cur.period
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTPER1.
SELECT-OPTIONS : SLFGJ14 FOR (MBEWH_LFGJA) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Current period
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCUR1.
SELECT-OPTIONS : SLFMO14 FOR (MBEWH_LFMON) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table SKA1(15)
*     Chart of Accounts
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_SKA15 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTSKA1.
SELECTION-SCREEN COMMENT 15(30) PEXTKAT.
SELECT-OPTIONS : SKTOP15 FOR (SKA1_KTOPL) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table SKB1(16)
*     Company Code
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_SKB16 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTSKB1.
SELECTION-SCREEN COMMENT 15(30) PEXTCOM7.
SELECT-OPTIONS : SBUKR16 FOR (SKB1_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     G/L No.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTGL.
SELECT-OPTIONS : SSAKN16 FOR (SKB1_SAKNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table VBAK(17)
*     Creation Date
*     Reference
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_VBAK17 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTVBAK.
SELECTION-SCREEN COMMENT 15(30) PEXTCRET.
SELECT-OPTIONS : SERDA17 FOR (VBAK_ERDAT) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTREF.
PARAMETERS : P_REF17 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Created by
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCBY.
SELECT-OPTIONS : SERNA17 FOR (VBAK_ERNAM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Document date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDDT.
SELECT-OPTIONS : SAUDA17 FOR (VBAK_AUDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     SD Document Category
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTSD.
SELECT-OPTIONS : SVBTY17 FOR (VBAK_VBTYP) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Sales Doc. Type
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDC.
SELECT-OPTIONS : SAUAR17 FOR (VBAK_AUART) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Sales Org.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTSORG.
SELECT-OPTIONS : SVKOR17 FOR (VBAK_VKORG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Distribution Ch.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTDIST.
SELECT-OPTIONS : SVTWE17 FOR (VBAK_VTWEG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Pricing Proceure
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTPRIC.
SELECT-OPTIONS : SKALS17 FOR (VBAK_KALSM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table VBAP(18)
*     Sales Doc. No.
*     Text
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_VBAP18 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTVBAP.
SELECTION-SCREEN COMMENT 15(30) PEXTVBLN.
SELECT-OPTIONS : SVBEL18 FOR (VBAP_VBELN) NO INTERVALS.
SELECTION-SCREEN COMMENT 79(30) PEXTEXT.
PARAMETERS : P_TXT18 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Sales Doc.Info
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 79(30) PEXTDSLE.
PARAMETERS : P_SLDO18 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

*     Additional Pricing data
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 79(30) PEXTDATP.
PARAMETERS : P_PDAT18 AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

* Table RBKP(19)
*     Fiscal Year
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_RBKP19 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTRBKP.
SELECTION-SCREEN COMMENT 15(30) PEXTGJAH.
SELECT-OPTIONS : GJAHR19 FOR (RBKP_GJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Document Type
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBLAR.
SELECT-OPTIONS : BLART19 FOR (RBKP_BLART) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Posting Date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBUDA.
SELECT-OPTIONS : BUDAT19 FOR (RBKP_BUDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     User Name
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTUSNA.
SELECT-OPTIONS : USNAME19 FOR (RBKP_USNAM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Company Code
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBUK5.
SELECT-OPTIONS : BUKRS19 FOR (RBKP_BUKRS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table RSEG(20)
*     Fiscal Year
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_RSEG20 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTRSEG.
SELECTION-SCREEN COMMENT 15(30) PEXTGJA2.
SELECT-OPTIONS : GJAHR20 FOR (RSEG_GJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table EKBE(21)
*     Fiscal Year
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_EKBE21 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTEKBE.
SELECTION-SCREEN COMMENT 15(30) PEXTGJA3.
SELECT-OPTIONS : GJAHR21 FOR (EKBE_GJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*     Posting Date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBUD2.
SELECT-OPTIONS : BUDAT21 FOR (EKBE_BUDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Plant
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTWERK.
SELECT-OPTIONS : WERKS21 FOR (EKBE_WERKS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table CDPOS(22)
*     Object class
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_CDPO22 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTCDPO.
SELECTION-SCREEN COMMENT 15(30) PEXTOBJE.
SELECT-OPTIONS : OBJECT22 FOR (CDPOS_OBJECTCLAS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Table Name
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTTABN.
SELECT-OPTIONS : TABNAM22 FOR (CDPOS_TABNAME) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Change type
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTCHNG.
SELECT-OPTIONS : CHNGIN22 FOR (CDPOS_CHNGIND) NO INTERVALS.
SELECTION-SCREEN END OF LINE.


* Table MKPF(23)
*     Material Doc Year
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MKPF23 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMKPF.
SELECTION-SCREEN COMMENT 15(30) PEXTMJAH.
SELECT-OPTIONS : MJAHR23 FOR (MKPF_MJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Document Date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBLDA.
SELECT-OPTIONS : BLDAT23 FOR (MKPF_BLDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    User Name
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTUSN2.
SELECT-OPTIONS : USNAM23 FOR (MKPF_USNAM) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table MSEG(24)
*     Material Doc Year
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MSEG24 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMSEG.
SELECTION-SCREEN COMMENT 15(30) PEXTGJA4.
SELECT-OPTIONS : MJAHR24 FOR (MSEG_MJAHR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Movement Type
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTBWAR.
SELECT-OPTIONS : BWART24 FOR (MSEG_BWART) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table MARA(25)
*     Material Number
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MARA25 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMARA.
SELECTION-SCREEN COMMENT 15(30) PEXTMATN.
SELECT-OPTIONS : MATNR25 FOR (MARA_MATNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table MARC(26)
*     Material Number
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MARC26 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMARC.
SELECTION-SCREEN COMMENT 15(30) PEXTMAT2.
SELECT-OPTIONS : MATNR26 FOR (MARC_MATNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Plant
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTWER2.
SELECT-OPTIONS : WERKS26 FOR (MARC_WERKS) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Maintenance Status
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTPSTA.
SELECT-OPTIONS : PSTAT26 FOR (MARC_PSTAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table MARM(27)
*
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MARM27 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMARM.
SELECTION-SCREEN END OF LINE.

* Table MVKE(28)
*     Material Number
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_MVKE28 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTMVKE.
SELECTION-SCREEN COMMENT 15(30) PEXTMAT3.
SELECT-OPTIONS : MATNR28 FOR (MVKE_MATNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Sales Organization
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTVKOR.
SELECT-OPTIONS : VKORG28 FOR (MVKE_VKORG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Distribution Channel
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTVTWE.
SELECT-OPTIONS : VTWEG28 FOR (MVKE_VTWEG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table LFM1(29)
*     Purchasing Organiz.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_LFM129 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTLFM1.
SELECTION-SCREEN COMMENT 15(30) PEXTEKOR.
SELECT-OPTIONS : EKORG29 FOR (LFM1_EKORG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Record Creation Date
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTERDA.
SELECT-OPTIONS : ERDAT29 FOR (LFM1_ERDAT) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table KNVV(30)
*     Customer Number
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_KNVV30 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTKNVV.
SELECTION-SCREEN COMMENT 15(30) PEXTKUNN.
SELECT-OPTIONS : KUNNR30 FOR (KNVV_KUNNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Sales Organization
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTVKO2.
SELECT-OPTIONS : VKORG30 FOR (KNVV_VKORG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Distribution Channel
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTVTW2.
SELECT-OPTIONS : VTWEG30 FOR (KNVV_VTWEG) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Division
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTSPAR.
SELECT-OPTIONS : SPART30 FOR (KNVV_SPART) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table KNKK(31)
*     Customer Number
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_KNKK31 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTKNKK.
SELECTION-SCREEN COMMENT 15(30) PEXTKUN2.
SELECT-OPTIONS : KUNNR31 FOR (KNKK_KUNNR) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

*    Credit control area
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 15(30) PEXTKKBE.
SELECT-OPTIONS : KKBER31 FOR (KNKK_KKBER) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

* Table VBRK(32)
*     Billing Document
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_VBRK32 AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PEXTVBRK.
SELECTION-SCREEN COMMENT 15(30) PEXTVBEL.
SELECT-OPTIONS : VBELN32 FOR (VBRK_VBELN) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN : END OF BLOCK PEXTS.

* REPORT
* ======
SELECTION-SCREEN BEGIN OF BLOCK PREPTB
                                WITH FRAME TITLE PREPTBC.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS : P_REPT AS CHECKBOX.
SELECTION-SCREEN COMMENT (8) PREPT.
SELECTION-SCREEN COMMENT 15(30) PREPTT.
SELECT-OPTIONS : RABAP FOR (TRDIR_NAME) NO INTERVALS.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK PREPTB.


*######################################################################
*######################################################################
*##                                                                  ##
*##     INITIALIZATION                                               ##
*##                                                                  ##
*######################################################################
*######################################################################

INITIALIZATION.

* Definition of selection screen
  PERFORM SELSCREEN.

  PERFORM SETUPREPORT.

*---------------------------------------------------------------------*
*       FORM selscreen                                                *
*---------------------------------------------------------------------*
FORM SELSCREEN.

*  TITLE
*  =====
  CONCATENATE 'ACE - AUTOMATED CONTROLS EVALUATOR -'
              REPREL
              INTO PHEAD1
              SEPARATED BY SPACE.

*  PATH
*  ====
  MOVE 'PLEASE ADJUST THESE PARAMETERS ...'     TO PPATHBC.
  CONCATENATE 'Path on Application Server'
              SY-HOST
              INTO PPATHT
              SEPARATED BY SPACE.
  MOVE 'Start of Financial Year'                TO PCDSDATE.


*  DATA
*  ====
  CONCATENATE 'Scope of Download - '
              'Default Selections are Generally Appropriate!'
              INTO PDATABC
              SEPARATED BY SPACE.
  MOVE 'Data Report for all clients'           TO PCLIC.
  MOVE 'Log Analysis for all clients'          TO PC3IC.

  MOVE 'Authorization groups'                   TO PDATAGT.
  MOVE 'Field status definition'                TO PDATAFT.
  MOVE 'Object help information'                TO PDATAHT.
  MOVE 'Base component'                         TO PDATABT.
  MOVE 'With user details'                      TO PDATUSR.
  MOVE 'CDS data'                               TO PDATCDS.
  MOVE 'Desolved values'                        TO PDATALT.

  MOVE 'TLD Download data type'                 TO PTLDTY.
  MOVE 'month'                                  TO PTLDMT.
  MOVE 'week'                                   TO PTLDWT.
  MOVE 'day'                                    TO PTLDDT.
  MOVE 'no download'                            TO PTLDNT.
  MOVE 'TLD Month/week/day limit'               TO PDATAMT.
  MOVE 'Rec limit (max 4 mil)'                  TO PDATART.

  MOVE 'Desolved'                               TO PDATAC2.
  MOVE 'Tables'                                 TO PDATAC3.
  MOVE 'Desolved'                               TO PDATAC4.
  MOVE 'Tables'                                 TO PDATAC5.
  MOVE 'Desolved'                               TO PDATAC6.
  MOVE 'Tables'                                 TO PDATAC7.
  MOVE 'Basis'                                  TO PDATR01.
  MOVE 'Cross-Application'                      TO PDATR02.
  MOVE 'Financial Accounting'                   TO PDATR03.
  MOVE 'Procurement'                            TO PDATR04.
  MOVE 'Sales and Distribution'                 TO PDATR05.
  MOVE 'Inventory Management'                   TO PDATR06.
  MOVE 'Asset Accounting'                       TO PDATR07.
  MOVE 'Human Resources'                        TO PDATR08.
  MOVE 'Treasury'                               TO PDATR09.
  MOVE 'Enterprise Controlling'                 TO PDATR10.
  MOVE 'Revenue/Cost Controlling'               TO PDATR11.
  MOVE 'Plant Maintenance'                      TO PDATR12.
  MOVE 'Production'                             TO PDATR13.
  MOVE 'Quality Management'                     TO PDATR14.
  MOVE 'Project Management'                     TO PDATR15.
  MOVE 'Real Estate Management'                 TO PDATR16.
  MOVE 'Industry Solutions'                     TO PDATR17.
  MOVE 'Diverse Areas'                          TO PDATR18.

  MOVE 'Specify additional tables (if req''d)'  TO PTBSC.
  LOOP AT SCREEN.
    IF SCREEN-GROUP1 = 'HD1'.
      SCREEN-INTENSIFIED = 1.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.

*  LIMT
*  ====
  CONCATENATE 'Space Limit for Tables - '
              'Default Selections are Generally Appropriate!'
              INTO PLIMTBC
              SEPARATED BY SPACE.
  MOVE 'Optional data in MB'                    TO PLIMTS.
  MOVE 'Additional data in MB'                  TO PLIMTA.
  MOVE 'Special data in MB'                     TO PLIMTE.

*  SYSTEM & CODE PAGE
*  ==================
  CONCATENATE 'Download Strategy and Code Page - '
              'Default Selections are Generally Appropriate!'
              INTO PSYSBC
              SEPARATED BY SPACE.
  MOVE 'Do not change without a special reason' TO PSYSC.
  MOVE 'Better performance'                     TO PSYSAT.
  MOVE 'Less read rollback'                     TO PSYSOT.
  MOVE 'Code Page'                              TO PCDP.

* KPI
* ===
  CONCATENATE 'Key Performance Indicator - '
              'Default Selections are Generally Appropriate!'
              INTO PKPIS
              SEPARATED BY SPACE.
  MOVE 'FI invoice vs. MM invoice '             TO PKPI002.
  MOVE 'Outstanding GR/IR'                      TO PKPI003.
  MOVE 'Back dated journal entries'             TO PKPI012.
  MOVE 'Retrospective purchase orders'          TO PKPI001.
  MOVE 'PO approval lead time'                  TO PKPI004.
  MOVE 'Vendor master without activity'         TO PKPI019.
  MOVE 'Customer credit notes vs inv.'          TO PKPI009.
  MOVE 'Customers marked for deletion'          TO PKPI024.
  MOVE 'Distribution of payment terms'          TO PKPI027.

  MOVE 'Company Code'                           TO PKPIBUK.

* POSTING
* =======
  LOOP AT SCREEN.
    IF screen-group1 = 'FS3'.
      screen-DISPLAY_3D = '1'.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.


  CONCATENATE 'Posting Download - '
              'Default Selections are Generally Appropriate!'
              INTO PPSTS
              SEPARATED BY SPACE.

  MOVE 'Download Posting Data and Other Data?'  TO PPSTSC1.
  MOVE 'Download Only Posting Data?'            TO PPSTSC2.
  CONCATENATE 'Please note: NO SIZE LIMIT applies'
              'with this download!'
              INTO PPSTSC3
              SEPARATED BY SPACE.

  CONCATENATE 'Selection Parameter:'
              'PLEASE SPECIFY - THERE IS NO SIZE LIMIT'
              INTO PPSTSEL
              SEPARATED BY SPACE.
  MOVE 'Optional Field Selection'               TO PPSTOPT.

  MOVE 'Document Header Text'                   TO PPSTDOC.
  MOVE 'Company Code'                           TO PPSTCOM.
  MOVE 'Fiscal Year'                            TO PPSTFIS.
  MOVE 'Document Type'                          TO PPSTDOCT.
  MOVE 'Document Date'                          TO PPSTDOCD.
  MOVE 'Posting Date'                           TO PPSTDOCP.
  MOVE 'Fiscal Period'                          TO PPSTFISP.
  MOVE 'Account Entry Date'                     TO PPSTAED.
  MOVE 'User Name (USNAM)'                      TO PPSTUNAM.
  MOVE 'Transaction Code'                       TO PPSTTX.
  MOVE 'Business Transaction'                   TO PPSTBTX.
  MOVE 'User Name (SNAME)'                      TO PPSTSNAM.
  MOVE 'Clearing'                               TO PPSTCLR.
  MOVE 'Segment Text'                           TO PPSTTEXT.
  MOVE 'Account Assignment'                     TO PPSTACCS.
  MOVE 'Source Document'                        TO PPSTSDOC.
  MOVE 'Payment'                                TO PPSTPAY.
  MOVE 'Quantity'                               TO PPSTQUAN.


* Extended Download
* =================
  LOOP AT SCREEN.
    IF screen-group1 = 'FS1'.
      screen-DISPLAY_3D = '1'.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.


  CONCATENATE 'Extended Download - '
              'Default Selections are Generally Appropriate!'
              INTO PEXTS
              SEPARATED BY SPACE.
  MOVE 'Download Extended Data Only?'           TO PEXTSC.

  MOVE 'Table'                                  TO PEXTTAB.
  MOVE 'Selection Parameter'                    TO PEXTSEL.
  MOVE 'Optional Field Selection'               TO PEXTOPT.

  MOVE 'ANLA'                                   TO PEXTANLA.
  MOVE 'ANLB'                                   TO PEXTANLB.
  MOVE 'ANLC'                                   TO PEXTANLC.
  MOVE 'BKPF'                                   TO PEXTBKPF.
  MOVE 'BSEG'                                   TO PEXTBSEG.
  MOVE 'CDHDR'                                  TO PEXTCDHD.
  MOVE 'EKKO'                                   TO PEXTEKKO.
  MOVE 'EKPO'                                   TO PEXTEKPO.
  MOVE 'KNA1'                                   TO PEXTKNA1.
  MOVE 'KNB1'                                   TO PEXTKNB1.
  MOVE 'LFA1'                                   TO PEXTLFA1.
  MOVE 'LFB1'                                   TO PEXTLFB1.
  MOVE 'MBEW'                                   TO PEXTMBEW.
  MOVE 'MBEWH'                                  TO PCAMBEWH.
  MOVE 'SKA1'                                   TO PEXTSKA1.
  MOVE 'SKB1'                                   TO PEXTSKB1.
  MOVE 'VBAK'                                   TO PEXTVBAK.
  MOVE 'VBAP'                                   TO PEXTVBAP.
  MOVE 'RBKP'                                   TO PEXTRBKP.
  MOVE 'RSEG'                                   TO PEXTRSEG.
  MOVE 'EKBE'                                   TO PEXTEKBE.
  MOVE 'CDPOS'                                  TO PEXTCDPO.
  MOVE 'MKPF'                                   TO PEXTMKPF.
  MOVE 'MSEG'                                   TO PEXTMSEG.
  MOVE 'MARA'                                   TO PEXTMARA.
  MOVE 'MARC'                                   TO PEXTMARC.
  MOVE 'MARM'                                   TO PEXTMARM.
  MOVE 'MVKE'                                   TO PEXTMVKE.
  MOVE 'LFM1'                                   TO PEXTLFM1.
  MOVE 'KNVV'                                   TO PEXTKNVV.
  MOVE 'KNKK'                                   TO PEXTKNKK.
  MOVE 'VBRK'                                   TO PEXTVBRK.

* ANLA
  MOVE 'Additional'                             TO PEXTADD.
  MOVE 'Company Code'                           TO PEXTCOM.
  MOVE 'Asset Class'                            TO PEXTAST.
  MOVE 'Indicator for Deletion'                 TO PEXTIND.

* ANLB
  MOVE 'Company Code'                           TO PEXTCOM1.
  MOVE 'Real Depreciation Area'                 TO PEXTRDA.

* ANLC
  MOVE 'Company Code'                           TO PEXTCOM2.
  MOVE 'Fiscal Year'                            TO PEXTFIS.
  MOVE 'Real Depreciation Area'                 TO PEXTRDA1.

* BKPF
  MOVE 'Document Header Text'                   TO PEXTDOC.
  MOVE 'Company Code'                           TO PEXTCOM3.
  MOVE 'Fiscal Year'                            TO PEXTFIS1.
  MOVE 'Document Type'                          TO PEXTDOCT.
  MOVE 'Document Date'                          TO PEXTDOCD.
  MOVE 'Posting date'                           TO PEXTDOCP.
  MOVE 'Fiscal period'                          TO PEXTFISP.
  MOVE 'Account Entry Date'                     TO PEXTAED.
  MOVE 'User Name (USNAM)'                      TO PEXTUNAM.
  MOVE 'Transaction Code'                       TO PEXTTX.
  MOVE 'Business Transaction'                   TO PEXTBTX.
  MOVE 'User Name (SNAME)'                      TO PEXTSNAM.

* BSEG
  MOVE 'Clearing'                               TO PEXTCLR.
  MOVE 'Text'                                   TO PEXTTEXT.
  MOVE 'Account Assignment'                     TO PEXTACCS.
  MOVE 'Source Document'                        TO PEXTSDOC.
  MOVE 'Payment'                                TO PEXTPAY.
  MOVE 'Company Code'                           TO PEXTCOM4.
  MOVE 'Fiscal Year'                            TO PEXTFIS2.
  MOVE 'Quantity'                               TO PEXTQUAN.

* CDHDR
  MOVE 'Object Class'                           TO PEXTOBJC.
  MOVE 'Object Value'                           TO PEXTOBJV.
  MOVE 'Creation date of change'                TO PEXTCRE.

* EKKO
  MOVE 'Release'                                TO PEXTREL.
  MOVE 'Purchasing Doc Category'                TO PEXTDOCC.
  MOVE 'Purchasing Doc Type'                    TO PEXTDCT.
  MOVE 'Record Creation date'                   TO PEXTRDAT.
  MOVE 'Person Responsible'                     TO PEXTNAM.
  MOVE 'Purchase Organization'                  TO PEXTPUR.
  MOVE 'Purchasing Group'                       TO PEXTPURG.
  MOVE 'Purchase Document date'                 TO PEXTDCDT.

* EKPO
  MOVE 'Text'                                   TO PEXTXT.
  MOVE 'Source Document'                        TO PEXTSRC.
  MOVE 'Purchase Document No.'                  TO PEXTDOCN.
  MOVE 'Pur doc item chg date'                  TO PEXTCHDA.
  MOVE 'Plant'                                  TO PEXTPLNT.

* KNA1
  MOVE 'Customer No.'                           TO PEXTCUS.
  MOVE 'Customer Acc. Group'                    TO PEXTCUG.

* KNB1
  MOVE 'Customer No.'                           TO PEXTCUST.
  MOVE 'Company Code'                           TO PEXTCOM5.

* LFA1
  MOVE 'Vendor/Creditor No.'                    TO PEXTLIF.
  MOVE 'Vendor Acc. Group'                      TO PEXTKTOK.

* LFB1
  MOVE 'Vendor/Creditor No.'                    TO PEXTLIF1.
  MOVE 'Company Code'                           TO PEXTCOM6.

* MBEW
  MOVE 'Material No.'                           TO PEXTMAT.
  MOVE 'Valuation Area'                         TO PEXTVAL.

* MBEWH
  MOVE 'Material No.'                           TO PEXTMAT1.
  MOVE 'Valuation Area'                         TO PEXTVAL1.
  MOVE 'Valuation Type'                         TO PEXTTYP1.
  MOVE 'Year cur.period'                        TO PEXTPER1.
  MOVE 'Current period'                         TO PEXTCUR1.

* SKA1
  MOVE 'Chart of Accounts'                      TO PEXTKAT.

* SKB1
  MOVE 'Company Code'                           TO PEXTCOM7.
  MOVE 'G/L Account No.'                        TO PEXTGL.

* VBAK
  MOVE 'Creation Date'                          TO PEXTCRET.
  MOVE 'Created by'                             TO PEXTCBY.
  MOVE 'Document date'                          TO PEXTDDT.
  MOVE 'SD Doc. Category'                       TO PEXTSD.
  MOVE 'Sales Doc. Type'                        TO PEXTDC.
  MOVE 'Sales Org.'                             TO PEXTSORG.
  MOVE 'Distribution Channel'                   TO PEXTDIST.
  MOVE 'Pricing Procedure'                      TO PEXTPRIC.
  MOVE 'References'                             TO PEXTREF.

* VBAP
  MOVE 'Additional Pricing data'                TO PEXTDATP.
  MOVE 'Sales doc. No.'                         TO PEXTVBLN.
  MOVE 'Text'                                   TO PEXTEXT.
  MOVE 'Sales doc info'                         TO PEXTDSLE.

* RBKP
  MOVE 'Fiscal Year'                            TO PEXTGJAH.
  MOVE 'Document Type'                          TO PEXTBLAR.
  MOVE 'Posting Date'                           TO PEXTBUDA.
  MOVE 'User Name'                              TO PEXTUSNA.
  MOVE 'Company Code'                           TO PEXTBUK5.

* RSEG
  MOVE 'Fiscal Year'                            TO PEXTGJA2.

* EKBE
  MOVE 'Fiscal Year'                            TO PEXTGJA3.
  MOVE 'Posting Date'                           TO PEXTBUD2.
  MOVE 'Plant'                                  TO PEXTWERK.

* CDPOS
  MOVE 'Object class'                           TO PEXTOBJE.
  MOVE 'Table Name'                             TO PEXTTABN.
  MOVE 'Change type'                            TO PEXTCHNG.

* MKPF
  MOVE 'Material Doc Year'                      TO PEXTMJAH.
  MOVE 'Document Date'                          TO PEXTBLDA.
  MOVE 'User Name'                              TO PEXTUSN2.

* MSEG
  MOVE 'Material Doc Year'                      TO PEXTGJA4.
  MOVE 'Movement Type'                          TO PEXTBWAR.

* MARA
  MOVE 'Material Number'                        TO PEXTMATN.

* MARC
  MOVE 'Material Number'                        TO PEXTMAT2.
  MOVE 'Plant'                                  TO PEXTWER2.
  MOVE 'Maintenance Status'                     TO PEXTPSTA.

* MARM

* MVKE
  MOVE 'Material Number'                        TO PEXTMAT3.
  MOVE 'Sales Organization'                     TO PEXTVKOR.
  MOVE 'Distribution Channel'                   TO PEXTVTWE.

* LFM1
  MOVE 'Purchasing Organiz.'                    TO PEXTEKOR.
  MOVE 'Record Creation Date'                   TO PEXTERDA.

* KNVV
  MOVE 'Customer Number'                        TO PEXTKUNN.
  MOVE 'Sales Organization'                     TO PEXTVKO2.
  MOVE 'Distribution Channel'                   TO PEXTVTW2.
  MOVE 'Division'                               TO PEXTSPAR.

* KNKK
  MOVE 'Customer Number'                        TO PEXTKUN2.
  MOVE 'Credit Control Area'                    TO PEXTKKBE.

* VBRK
  MOVE 'Billing Document'                       TO PEXTVBEL.


* REPORTING
* =========
  CONCATENATE 'Report Testing - '
              'Default Selections are Generally Appropriate!'
              INTO PREPTBC
              SEPARATED BY SPACE.
  MOVE 'Only Rep'                               TO PREPT.
  MOVE 'ABAP Programs'                          TO PREPTT.

ENDFORM.                    "SELSCREEN

*---------------------------------------------------------------------*
*       FORM setupreport                                              *
*---------------------------------------------------------------------*
FORM SETUPREPORT.
* Authority-Check
  AUTHORITY-CHECK OBJECT 'S_USER_AUT'
                  ID 'OBJECT' DUMMY
                  ID 'AUTH'   DUMMY
                  ID 'ACTVT'  FIELD '03'.

  IF SY-SUBRC <> 0.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10 WITH 'Error: No authorization'.
    LEAVE PROGRAM.
  ENDIF.

* Selection option setting
  OPT-NAME = 'OPTKEY'.
  OPT-OPTIONS-EQ = 'X'.
  APPEND OPT TO RESTRICT-OPT_LIST_TAB.

  ASS-KIND = 'A'.
  ASS-SG_MAIN = 'I'.
  ASS-OP_MAIN = 'OPTKEY'.
  ASS-OP_ADDY = 'OPTKEY'.
  APPEND ASS TO RESTRICT-ASS_TAB.

  CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
    EXPORTING
      RESTRICTION            = RESTRICT
    EXCEPTIONS
      TOO_LATE               = 1
      REPEATED               = 2
      SELOPT_WITHOUT_OPTIONS = 3
      SELOPT_WITHOUT_SIGNS   = 4
      INVALID_SIGN           = 5
      EMPTY_OPTION_LIST      = 6
      INVALID_KIND           = 7
      REPEATED_KIND_A        = 8
      OTHERS                 = 9.

  IF SY-SUBRC <> 0.
    ERRCODE = SY-SUBRC.
    CONCATENATE 'SELECTION OPTION ERROR:'
                'E:' ERRCODE
                INTO ZEILE
                SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10 WITH ZEILE.
    LEAVE PROGRAM.
  ENDIF.
ENDFORM.                    "SETUPREPORT

*######################################################################
*######################################################################
*##                                                                  ##
*##     AT SELECTION-SCREEN                                          ##
*##                                                                  ##
*######################################################################
*######################################################################

AT SELECTION-SCREEN.

DATA: LV_REGEX TYPE STRING,
      RESULT_TAB TYPE MATCH_RESULT_TAB.
FIELD-SYMBOLS: <KEYWORD> TYPE ANY.

DO.
  ASSIGN COMPONENT SY-INDEX OF STRUCTURE KEYWORDS_SPACE TO <KEYWORD>.
  IF SY-SUBRC <> 0.
    EXIT.
  ENDIF.

  CONCATENATE <KEYWORD> '\s' INTO LV_REGEX.

  FIND ALL OCCURRENCES OF REGEX LV_REGEX IN PATH IGNORING CASE
  RESULTS RESULT_TAB.

  IF RESULT_TAB[] IS NOT INITIAL.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10
    WITH 'Path contains keywords that are not allowed'.
  ENDIF.
ENDDO.

DO.
  ASSIGN COMPONENT SY-INDEX OF STRUCTURE KEYWORDS_NO_SPACE TO <KEYWORD>.
  IF SY-SUBRC <> 0.
    EXIT.
  ENDIF.

  LV_REGEX = <KEYWORD>.

  FIND ALL OCCURRENCES OF REGEX LV_REGEX IN PATH IGNORING CASE
  RESULTS RESULT_TAB.

  IF RESULT_TAB[] IS NOT INITIAL.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10
    WITH 'Path contains keywords that are not allowed'.
  ENDIF.
ENDDO.

*######################################################################
*######################################################################
*##                                                                  ##
*##     START-OF-SELECTION                                           ##
*##                                                                  ##
*######################################################################
*######################################################################

START-OF-SELECTION.

IF P_REPT = 'X'.

  PERFORM REPTESTING.

ELSE.

  PERFORM INITVAR.
  PERFORM PROCESSPARAMETER.

* Creation of Files B0003
  PERFORM B0003INIT.

* Init of structures B0004 / B0005 / B0006 / B0007
  PERFORM B000xINIT.

* Init of Start Date / Time
  MOVE SY-DATUM                                 TO STARTD.
  MOVE SY-UZEIT                                 TO STARTT.

* Exec of Mainprog
  PERFORM MAINPROG.

* Init of End Date / Time
  MOVE SY-DATUM                                 TO ENDD.
  MOVE SY-UZEIT                                 TO ENDT.

* Creation of Files B0004 / B0005 / B0006 / B0007
  PERFORM B000x-EXP.

* Creation of Files B0002
  PERFORM B0002-EXP.

* End message
  CONCATENATE 'Information:' FILENUM
              'files written to application server.'
              INTO ZEILE
              SEPARATED BY SPACE.
  PERFORM ADDB0007 USING ZEILE.


* Creation of Files B0001
  PERFORM WRITEB0001.

* Write of summary
  PERFORM WRITESUMMARY.

* Initialize T-ABAP
  PERFORM GENCONSTSTART USING ''.
  PERFORM GENCONSTFORM.
  PERFORM GENCONSTEMPTY.
  PERFORM GENABAP.
ENDIF.

*---------------------------------------------------------------------*
*       FORM INITVAR                                                  *
*---------------------------------------------------------------------*
FORM INITVAR.

* determine which slash to use in paths
  IF SY-OPSYS(3) EQ 'WIN' OR SY-OPSYS(3) EQ 'Win'.
    SEPCHAR = '\'.                     "If MS
  ELSE.
    SEPCHAR = '/'.                     "If Unix etc.
  ENDIF.

  INVXSTR = INVCHAR1.

  CALL METHOD CL_ABAP_CONV_IN_CE=>CREATE
    EXPORTING
      INPUT       = INVXSTR
      ENCODING    = 'UTF-8'
      REPLACEMENT = '?'
      IGNORE_CERR = ABAP_TRUE
    RECEIVING
      CONV        = INVCONV.

  CALL METHOD INVCONV->READ
    IMPORTING
      DATA = INVSTR1.

  INVXSTR = INVCHAR2.

  CALL METHOD CL_ABAP_CONV_IN_CE=>CREATE
    EXPORTING
      INPUT       = INVXSTR
      ENCODING    = 'UTF-8'
      REPLACEMENT = '?'
      IGNORE_CERR = ABAP_TRUE
    RECEIVING
      CONV        = INVCONV.

  CALL METHOD INVCONV->READ
    IMPORTING
      DATA = INVSTR2.

ENDFORM.                    "INITVAR

*---------------------------------------------------------------------*
*       FORM PROCESSPARAMETER                                         *
*---------------------------------------------------------------------*
FORM PROCESSPARAMETER.

  DATA: LEN TYPE I,                    " To be used in modifing path
        PTH LIKE PATH,
        NUMVAL(10) TYPE N.

  PERFORM PARMSG USING 'SYS :' SY-SYSID.
  PERFORM PARMSG USING 'HOST:' SY-HOST.
  PERFORM PARMSG USING 'OS  :' SY-OPSYS.
  PERFORM PARMSG USING 'DB  :' SY-DBSYS.
  PERFORM PARMSG USING 'CLNT:' SY-MANDT.
  PERFORM PARMSG USING 'USER:' SY-UNAME.
  PERFORM PARMSG USING 'REP :' SY-REPID.
  PERFORM PARMSG USING 'RELE:' REPREL.

  PERFORM PARMSG USING 'PATH:' PATH.
  PERFORM PARMSG USING 'CDSD:' CDSDATE.
  PERFORM PARMSG USING 'CLI :' ALL_CLI.
  PERFORM PARMSG USING 'CL3 :' ALL_CL3.
  PERFORM PARMSG USING 'CDSS:' CDSSEL.
  PERFORM PARMSG USING 'AGF :' AGF.
  PERFORM PARMSG USING 'HLP :' HLP.
  PERFORM PARMSG USING 'DV  :' DV.
  PERFORM PARMSG USING 'FSD :' FSD.
  PERFORM PARMSG USING 'BC  :' BC.
  PERFORM PARMSG USING 'USR :' USR.
  PERFORM PARMSG USING 'TLDM:' TLDM.
  PERFORM PARMSG USING 'TLDW:' TLDW.
  PERFORM PARMSG USING 'TLDD:' TLDD.
  PERFORM PARMSG USING 'TLDN:' TLDN.
  NUMVAL = TLDSEL.
  PERFORM PARMSG USING 'TLDS:' NUMVAL.
  NUMVAL = TLDREC.
  PERFORM PARMSG USING 'TLDR:' NUMVAL.
  PERFORM PARMSG USING 'DV01:' DV01.
  PERFORM PARMSG USING 'TA01:' TA01.
  PERFORM PARMSG USING 'DV02:' DV02.
  PERFORM PARMSG USING 'TA02:' TA02.
  PERFORM PARMSG USING 'DV03:' DV03.
  PERFORM PARMSG USING 'TA03:' TA03.
  PERFORM PARMSG USING 'DV04:' DV04.
  PERFORM PARMSG USING 'TA04:' TA04.
  PERFORM PARMSG USING 'DV05:' DV05.
  PERFORM PARMSG USING 'TA05:' TA05.
  PERFORM PARMSG USING 'DV06:' DV06.
  PERFORM PARMSG USING 'TA06:' TA06.
  PERFORM PARMSG USING 'DV07:' DV07.
  PERFORM PARMSG USING 'TA07:' TA07.
  PERFORM PARMSG USING 'DV08:' DV08.
  PERFORM PARMSG USING 'TA08:' TA08.
  PERFORM PARMSG USING 'DV09:' DV09.
  PERFORM PARMSG USING 'TA09:' TA09.
  PERFORM PARMSG USING 'DV10:' DV10.
  PERFORM PARMSG USING 'TA10:' TA10.
  PERFORM PARMSG USING 'DV11:' DV11.
  PERFORM PARMSG USING 'TA11:' TA11.
  PERFORM PARMSG USING 'DV12:' DV12.
  PERFORM PARMSG USING 'TA12:' TA12.
  PERFORM PARMSG USING 'DV13:' DV13.
  PERFORM PARMSG USING 'TA13:' TA13.
  PERFORM PARMSG USING 'DV14:' DV14.
  PERFORM PARMSG USING 'TA14:' TA14.
  PERFORM PARMSG USING 'DV15:' DV15.
  PERFORM PARMSG USING 'TA15:' TA15.
  PERFORM PARMSG USING 'DV16:' DV16.
  PERFORM PARMSG USING 'TA16:' TA16.
  PERFORM PARMSG USING 'DV17:' DV17.
  PERFORM PARMSG USING 'TA17:' TA17.
  PERFORM PARMSG USING 'DV18:' DV18.
  PERFORM PARMSG USING 'TA18:' TA18.
  LOOP AT ADDTABLE.
      PERFORM PARMSG USING 'ADDT:' ADDTABLE-LOW.
  ENDLOOP.
  NUMVAL = LIMTS.
  PERFORM PARMSG USING 'LIMS:' NUMVAL.
  NUMVAL = LIMTE.
  PERFORM PARMSG USING 'LIME:' NUMVAL.
  NUMVAL = LIMTA.
  PERFORM PARMSG USING 'LIMA:' NUMVAL.
  PERFORM PARMSG USING 'SPER:' SYS_PER.
  PERFORM PARMSG USING 'SRLL:' SYS_RLL.
  PERFORM PARMSG USING 'CDP :' CDP.
  PERFORM PARMSG USING 'K002:' P_KPI002.
  PERFORM PARMSG USING 'K003:' P_KPI003.
  PERFORM PARMSG USING 'K012:' P_KPI012.
  PERFORM PARMSG USING 'K001:' P_KPI001.
  PERFORM PARMSG USING 'K004:' P_KPI004.
  PERFORM PARMSG USING 'K019:' P_KPI019.
  PERFORM PARMSG USING 'K009:' P_KPI009.
  PERFORM PARMSG USING 'K024:' P_KPI024.
  PERFORM PARMSG USING 'K027:' P_KPI027.
  PERFORM PARMSG USING 'K027:' P_KPI027.
  LOOP AT SKBUKRS.
      PERFORM PARMSG USING 'KBUK:' SKBUKRS-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ONLP:' P_ONLPST.
  PERFORM PARMSG USING 'DWNP:' P_DWNPST.
  LOOP AT SXBUKRS.
      PERFORM PARMSG USING 'KBUK:' SXBUKRS-LOW.
  ENDLOOP.
  LOOP AT SXGJAHR.
      PERFORM PARMSG USING 'KGJA:' SXGJAHR-LOW.
  ENDLOOP.
  LOOP AT SXBLART.
      PERFORM PARMSG USING 'KBLA:' SXBLART-LOW.
  ENDLOOP.
  LOOP AT SXBLDAT.
      PERFORM PARMSG USING 'KBDT:' SXBLDAT-LOW.
  ENDLOOP.
  LOOP AT SXBUDAT.
      PERFORM PARMSG USING 'KBUD:' SXBUDAT-LOW.
  ENDLOOP.
  LOOP AT SXMONAT.
      PERFORM PARMSG USING 'KMON:' SXMONAT-LOW.
  ENDLOOP.
  LOOP AT SXCPUDT.
      PERFORM PARMSG USING 'KCPU:' SXCPUDT-LOW.
  ENDLOOP.
  LOOP AT SXUSNAM.
      PERFORM PARMSG USING 'KUSN:' SXUSNAM-LOW.
  ENDLOOP.
  LOOP AT SXTCODE.
      PERFORM PARMSG USING 'KTCO:' SXTCODE-LOW.
  ENDLOOP.
  LOOP AT SXGLVOR.
      PERFORM PARMSG USING 'KGLV:' SXGLVOR-LOW.
  ENDLOOP.
  LOOP AT SXSNAME.
      PERFORM PARMSG USING 'KSNA:' SXSNAME-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'KBTX:' P_XBKTXT.
  PERFORM PARMSG USING 'KCLR:' P_XCLR.
  PERFORM PARMSG USING 'KTXT:' P_XTEXT.
  PERFORM PARMSG USING 'KACC:' P_XACCS.
  PERFORM PARMSG USING 'KSDC:' P_XSDOC.
  PERFORM PARMSG USING 'KPAY:' P_XPAY.
  PERFORM PARMSG USING 'KQTY:' P_XQUAN.
  PERFORM PARMSG USING 'EDWN:' P_DWNCAT.
  PERFORM PARMSG USING 'EANA:' P_ANLA1.
  PERFORM PARMSG USING 'EADT:' P_ADTNL1.
  LOOP AT SBUKRS1.
      PERFORM PARMSG USING 'E1BU:' SBUKRS1-LOW.
  ENDLOOP.
  LOOP AT SANLKL1.
      PERFORM PARMSG USING 'E1AN:' SANLKL1-LOW.
  ENDLOOP.
  LOOP AT SXLOEV1.
      PERFORM PARMSG USING 'E1XL:' SXLOEV1-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EANB:' P_ANLB2.
  LOOP AT SBUKRS2.
      PERFORM PARMSG USING 'E2BU:' SBUKRS2-LOW.
  ENDLOOP.
  LOOP AT SAFABE2.
      PERFORM PARMSG USING 'E2AF:' SAFABE2-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EANC:' P_ANLC3.
  LOOP AT SBUKRS3.
      PERFORM PARMSG USING 'E3BU:' SBUKRS3-LOW.
  ENDLOOP.
  LOOP AT SGJAHR3.
      PERFORM PARMSG USING 'E3GJ:' SGJAHR3-LOW.
  ENDLOOP.
  LOOP AT SAFABE3.
      PERFORM PARMSG USING 'E3AF:' SAFABE3-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EBKP:' P_BKPF4.
  PERFORM PARMSG USING 'EBTX:' P_BKTXT4.
  LOOP AT SBUKRS4.
      PERFORM PARMSG USING 'E4BU:' SBUKRS4-LOW.
  ENDLOOP.
  LOOP AT SGJAHR4.
      PERFORM PARMSG USING 'E4SG:' SGJAHR4-LOW.
  ENDLOOP.
  LOOP AT SBLART4.
      PERFORM PARMSG USING 'E4BL:' SBLART4-LOW.
  ENDLOOP.
  LOOP AT SBLDAT4.
      PERFORM PARMSG USING 'E4BD:' SBLDAT4-LOW.
  ENDLOOP.
  LOOP AT SBUDAT4.
      PERFORM PARMSG USING 'E4BU:' SBUDAT4-LOW.
  ENDLOOP.
  LOOP AT SMONAT4.
      PERFORM PARMSG USING 'E4MO:' SMONAT4-LOW.
  ENDLOOP.
  LOOP AT SCPUDT4.
      PERFORM PARMSG USING 'E4CP:' SCPUDT4-LOW.
  ENDLOOP.
  LOOP AT SUSNAM4.
      PERFORM PARMSG USING 'E4US:' SUSNAM4-LOW.
  ENDLOOP.
  LOOP AT STCODE4.
      PERFORM PARMSG USING 'E4ST:' STCODE4-LOW.
  ENDLOOP.
  LOOP AT SGLVOR4.
      PERFORM PARMSG USING 'E4GL:' SGLVOR4-LOW.
  ENDLOOP.
  LOOP AT SSNAME4.
      PERFORM PARMSG USING 'E4SN:' SSNAME4-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EBSE:' P_BSEG5.
  PERFORM PARMSG USING 'ECLR:' P_CLR5.
  PERFORM PARMSG USING 'ETXT:' P_TEXT5.
  PERFORM PARMSG USING 'EACC:' P_ACCS5.
  PERFORM PARMSG USING 'ESDC:' P_SDOC5.
  PERFORM PARMSG USING 'EPAY:' P_PAY5.
  PERFORM PARMSG USING 'EQTY:' P_QUAN5.
  LOOP AT SBUKRS5.
      PERFORM PARMSG USING 'E5BU:' SBUKRS5-LOW.
  ENDLOOP.
  LOOP AT SGJAHR5.
      PERFORM PARMSG USING 'E5GJ:' SGJAHR5-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ECDH:' P_CDHDR6.
  LOOP AT SOBJCL6.
      PERFORM PARMSG USING 'E6OB:' SOBJCL6-LOW.
  ENDLOOP.
  LOOP AT SOBJVL6.
      PERFORM PARMSG USING 'E6JV:' SOBJVL6-LOW.
  ENDLOOP.
  LOOP AT SUDATE6.
      PERFORM PARMSG USING 'E6UD:' SUDATE6-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EEKK:' P_EKKO7.
  PERFORM PARMSG USING 'EREL:' P_REL7.
  LOOP AT SBSTYP7.
      PERFORM PARMSG USING 'E7BT:' SBSTYP7-LOW.
  ENDLOOP.
  LOOP AT SBSART7.
      PERFORM PARMSG USING 'E7BA:' SBSART7-LOW.
  ENDLOOP.
  LOOP AT SAEDAT7.
      PERFORM PARMSG USING 'E7AD:' SAEDAT7-LOW.
  ENDLOOP.
  LOOP AT SERNAM7.
      PERFORM PARMSG USING 'E7ER:' SERNAM7-LOW.
  ENDLOOP.
  LOOP AT SEKORG7.
      PERFORM PARMSG USING 'E7EK:' SEKORG7-LOW.
  ENDLOOP.
  LOOP AT SEKGRP7.
      PERFORM PARMSG USING 'E7KG:' SEKGRP7-LOW.
  ENDLOOP.
  LOOP AT SBEDAT7.
      PERFORM PARMSG USING 'E7BD:' SBEDAT7-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EEKP:' P_EKPO8.
  PERFORM PARMSG USING 'ETXT:' P_TEXT8.
  PERFORM PARMSG USING 'ESRC:' P_SOURC8.
  LOOP AT SEBELN8.
      PERFORM PARMSG USING 'E8EB:' SEBELN8-LOW.
  ENDLOOP.
  LOOP AT SAEDAT8.
      PERFORM PARMSG USING 'E8AE:' SAEDAT8-LOW.
  ENDLOOP.
  LOOP AT SWERKS8.
      PERFORM PARMSG USING 'E8WE:' SWERKS8-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EKNA:' P_KNA19.
  LOOP AT SKUNNR9.
      PERFORM PARMSG USING 'E9KU:' SKUNNR9-LOW.
  ENDLOOP.
  LOOP AT SKTOKD9.
      PERFORM PARMSG USING 'E9KT:' SKTOKD9-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EKNB:' P_KNB110.
  LOOP AT SKUNN10.
      PERFORM PARMSG USING '10KU:' SKUNN10-LOW.
  ENDLOOP.
  LOOP AT SBUKR10.
      PERFORM PARMSG USING '10BU:' SBUKR10-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ELFA:' P_LFA111.
  LOOP AT SLIFN11.
      PERFORM PARMSG USING '11LI:' SLIFN11-LOW.
  ENDLOOP.
  LOOP AT SKTOK11.
      PERFORM PARMSG USING '11KT:' SKTOK11-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ELFB:' P_LFB112.
  LOOP AT SLIFN12.
      PERFORM PARMSG USING '12LI:' SLIFN12-LOW.
  ENDLOOP.
  LOOP AT SBUKR12.
      PERFORM PARMSG USING '12BU:' SBUKR12-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EBEW:' P_MBEW13.
  LOOP AT SMATN13.
      PERFORM PARMSG USING '13MB:' SMATN13-LOW.
  ENDLOOP.
  LOOP AT SBWKE13.
      PERFORM PARMSG USING '13ME:' SBWKE13-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EBW2:' P_MBEW14.
  LOOP AT SMATN14.
      PERFORM PARMSG USING '14MA:' SMATN14-LOW.
  ENDLOOP.
  LOOP AT SBWKE14.
      PERFORM PARMSG USING '14BW:' SBWKE14-LOW.
  ENDLOOP.
  LOOP AT SBWTA14.
      PERFORM PARMSG USING '14BT:' SBWTA14-LOW.
  ENDLOOP.
  LOOP AT SLFGJ14.
      PERFORM PARMSG USING '14LF:' SLFGJ14-LOW.
  ENDLOOP.
  LOOP AT SLFMO14.
      PERFORM PARMSG USING '14LM:' SLFMO14-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ESKA:' P_SKA15.
  LOOP AT SKTOP15.
      PERFORM PARMSG USING '15KT:' SKTOP15-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ESKB:' P_SKB16.
  LOOP AT SBUKR16.
      PERFORM PARMSG USING '16BU:' SBUKR16-LOW.
  ENDLOOP.
  LOOP AT SSAKN16.
      PERFORM PARMSG USING '16SA:' SSAKN16-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EVBK:' P_VBAK17.
  PERFORM PARMSG USING 'EREF:' P_REF17.
  LOOP AT SERDA17.
      PERFORM PARMSG USING '17ER:' SERDA17-LOW.
  ENDLOOP.
  LOOP AT SERNA17.
      PERFORM PARMSG USING '17EN:' SERNA17-LOW.
  ENDLOOP.
  LOOP AT SAUDA17.
      PERFORM PARMSG USING '17AU:' SAUDA17-LOW.
  ENDLOOP.
  LOOP AT SVBTY17.
      PERFORM PARMSG USING '17VB:' SVBTY17-LOW.
  ENDLOOP.
  LOOP AT SAUAR17.
      PERFORM PARMSG USING '17AR:' SAUAR17-LOW.
  ENDLOOP.
  LOOP AT SVKOR17.
      PERFORM PARMSG USING '17VK:' SVKOR17-LOW.
  ENDLOOP.
  LOOP AT SVTWE17.
      PERFORM PARMSG USING '17VT:' SVTWE17-LOW.
  ENDLOOP.
  LOOP AT SKALS17.
      PERFORM PARMSG USING '17KA:' SKALS17-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EVBA:' P_VBAP18.
  PERFORM PARMSG USING 'ETXT:' P_TXT18.
  PERFORM PARMSG USING 'ESLD:' P_SLDO18.
  PERFORM PARMSG USING 'EPDT:' P_PDAT18.
  LOOP AT SVBEL18.
      PERFORM PARMSG USING '18VB:' SVBEL18-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ERBK:' P_RBKP19.
  LOOP AT GJAHR19.
      PERFORM PARMSG USING '19GJ:' GJAHR19-LOW.
  ENDLOOP.
  LOOP AT BLART19.
      PERFORM PARMSG USING '19BL:' BLART19-LOW.
  ENDLOOP.
  LOOP AT BUDAT19.
      PERFORM PARMSG USING '19BD:' BUDAT19-LOW.
  ENDLOOP.
  LOOP AT USNAME19.
      PERFORM PARMSG USING '19US:' USNAME19-LOW.
  ENDLOOP.
  LOOP AT BUKRS19.
      PERFORM PARMSG USING '19BU:' BUKRS19-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ESEG:' P_RSEG20.
  LOOP AT GJAHR20.
      PERFORM PARMSG USING '20GJ:' GJAHR20-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EEKB:' P_EKBE21.
  LOOP AT GJAHR21.
      PERFORM PARMSG USING '21GJ:' GJAHR21-LOW.
  ENDLOOP.
  LOOP AT BUDAT21.
      PERFORM PARMSG USING '21BD:' BUDAT21-LOW.
  ENDLOOP.
  LOOP AT WERKS21.
      PERFORM PARMSG USING '21WE:' WERKS21-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ECDP:' P_CDPO22.
  LOOP AT OBJECT22.
      PERFORM PARMSG USING '22OB:' OBJECT22-LOW.
  ENDLOOP.
  LOOP AT TABNAM22.
      PERFORM PARMSG USING '22TB:' TABNAM22-LOW.
  ENDLOOP.
  LOOP AT CHNGIN22.
      PERFORM PARMSG USING '22CH:' CHNGIN22-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EMKP:' P_MKPF23.
  LOOP AT MJAHR23.
      PERFORM PARMSG USING '23MJ:' MJAHR23-LOW.
  ENDLOOP.
  LOOP AT BLDAT23.
      PERFORM PARMSG USING '23BD:' BLDAT23-LOW.
  ENDLOOP.
  LOOP AT USNAM23.
      PERFORM PARMSG USING '23UN:' USNAM23-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EMSE:' P_MSEG24.
  LOOP AT MJAHR24.
      PERFORM PARMSG USING '24MJ:' MJAHR24-LOW.
  ENDLOOP.
  LOOP AT BWART24.
      PERFORM PARMSG USING '24BA:' BWART24-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EMAR:' P_MARA25.
  LOOP AT MATNR25.
      PERFORM PARMSG USING '25MA:' MATNR25-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EMAC:' P_MARC26.
  LOOP AT MATNR26.
      PERFORM PARMSG USING '26MA:' MATNR26-LOW.
  ENDLOOP.
  LOOP AT WERKS26.
      PERFORM PARMSG USING '26WE:' WERKS26-LOW.
  ENDLOOP.
  LOOP AT PSTAT26.
      PERFORM PARMSG USING '26PS:' PSTAT26-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EMAM:' P_MARM27.
  PERFORM PARMSG USING 'EMVK:' P_MVKE28.
  LOOP AT MATNR28.
      PERFORM PARMSG USING '28MA:' MATNR28-LOW.
  ENDLOOP.
  LOOP AT VKORG28.
      PERFORM PARMSG USING '28VK:' VKORG28-LOW.
  ENDLOOP.
  LOOP AT VTWEG28.
      PERFORM PARMSG USING '28VT:' VTWEG28-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'ELFM:' P_LFM129.
  LOOP AT EKORG29.
      PERFORM PARMSG USING '29LF:' EKORG29-LOW.
  ENDLOOP.
  LOOP AT ERDAT29.
      PERFORM PARMSG USING '29ER:' ERDAT29-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EKNV:' P_KNVV30.
  LOOP AT KUNNR30.
      PERFORM PARMSG USING '30KU:' KUNNR30-LOW.
  ENDLOOP.
  LOOP AT VKORG30.
      PERFORM PARMSG USING '30VK:' VKORG30-LOW.
  ENDLOOP.
  LOOP AT VTWEG30.
      PERFORM PARMSG USING '30VT:' VTWEG30-LOW.
  ENDLOOP.
  LOOP AT SPART30.
      PERFORM PARMSG USING '30SP:' SPART30-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EKNK:' P_KNKK31.
  LOOP AT KUNNR31.
      PERFORM PARMSG USING '31KN:' KUNNR31-LOW.
  ENDLOOP.
  LOOP AT KKBER31.
      PERFORM PARMSG USING '31KK:' KKBER31-LOW.
  ENDLOOP.
  PERFORM PARMSG USING 'EVBR:' P_VBRK32.
  LOOP AT VBELN32.
      PERFORM PARMSG USING '32VB:' VBELN32-LOW.
  ENDLOOP.

  IF LIMTS = 20000000 AND LIMTA = 20000000 AND LIMTE = 200000000.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10
            WITH 'Invalid space limits for tables - please adjust!'.
    LEAVE PROGRAM.
  ENDIF.

* Selection to upper case
  TRANSLATE ALL_CLI TO UPPER CASE.
  TRANSLATE ALL_CL3 TO UPPER CASE.
  TRANSLATE AGF TO UPPER CASE.
  TRANSLATE HLP TO UPPER CASE.
  TRANSLATE FSD TO UPPER CASE.
  TRANSLATE BC TO UPPER CASE.
  TRANSLATE DV TO UPPER CASE.
  TRANSLATE TLDM TO UPPER CASE.
  TRANSLATE TLDW TO UPPER CASE.
  TRANSLATE TLDD TO UPPER CASE.
  TRANSLATE TLDN TO UPPER CASE.
  TRANSLATE CDSSEL TO UPPER CASE.
  TRANSLATE SYS_RLL TO UPPER CASE.
  TRANSLATE SYS_PER TO UPPER CASE.

* Check IF path ends with separator, and add IF not
  LEN = STRLEN( PATH ) - 1.          " Find place of last char
  PTH = PATH.
  SHIFT PTH BY LEN PLACES.
  IF PTH(1) <> SEPCHAR.                  " IF not correct separator
    CONCATENATE PATH SEPCHAR INTO PATH.  " append separator
  ENDIF.

* Limit Parameter to STDLIMIT & ADDLIMIT & EXTLIMIT
  STDLIMIT = LIMTS.
  ADDLIMIT = LIMTA.
  EXTLIMIT = LIMTE.

  IF TLDREC > 4000000.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10 WITH
       'Error: Number of TLD records > 4 million!'.
    LEAVE PROGRAM.
  ELSEIF TLDREC < 1 AND TLDN <> 'X'.
    MESSAGE ID 'AD' TYPE 'E' NUMBER 10 WITH
       'Error: Number of TLD records = 0!'.
    LEAVE PROGRAM.
  ENDIF.

ENDFORM.                    "PROCESSPARAMETER

*---------------------------------------------------------------------*
*       FORM PARMSG                                                   *
*---------------------------------------------------------------------*
FORM PARMSG USING PARAM VAL.
  CONCATENATE 'P'
              PARAM
              VAL
              INTO ZEILE
              SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
ENDFORM.                                                    "PARMSG

*---------------------------------------------------------------------*
*       FORM WRITESUMMARY                                             *
*---------------------------------------------------------------------*
FORM WRITESUMMARY.
  DATA: NUMBYTE(20) TYPE C,
        NUMREC(12) TYPE C,
        NUMSEL(4) TYPE C.

  MOVE 'ACE log          (dd.mm.yyyy / hh:mm:ss)'
*       01234567890123456789012345678901234567890
                                                TO ZEILE.
  MOVE STARTD+6(2)                              TO ZEILE+18(2).
  MOVE STARTD+4(2)                              TO ZEILE+21(2).
  MOVE STARTD+0(4)                              TO ZEILE+24(4).
  MOVE STARTT+0(2)                              TO ZEILE+31(2).
  MOVE STARTT+2(2)                              TO ZEILE+34(2).
  MOVE STARTT+4(2)                              TO ZEILE+37(2).
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.
  SKIP 1.

  MOVE 'Current System'                         TO ZEILE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.
  MOVE 'Selection Parameter'                    TO ZEILE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF
                                                  INVERSE OFF INPUT OFF.
  SKIP 1.


  CONCATENATE 'SAPRel:' SY-SAPRL
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'Dir   :' PATH
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'Client:' SY-MANDT
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'Cli 1 :' ALL_CLI
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'Cli 2 :' ''
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 55 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'Host  :' SY-HOST
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'BC    :' BC
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'AGF   :' AGF
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 55 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'Sys-ID:' SY-SYSID
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'DV    :' DV
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'FSD   :' FSD
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 55 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'OS    :' SY-OPSYS
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'HLP   :' HLP
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'DB    :' SY-DBSYS
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  NUMSEL = TLDSEL.
  NUMREC = TLDREC.
  IF TLDM = 'X'.
    CONCATENATE 'TLD   : M' NUMSEL NUMREC
                INTO ZEILE
              SEPARATED BY SPACE.
  ELSEIF TLDW = 'X'.
    CONCATENATE 'TLD   : W' NUMSEL NUMREC
              INTO ZEILE
              SEPARATED BY SPACE.
  ELSEIF TLDD = 'X'.
    CONCATENATE 'TLD   : D' NUMSEL NUMREC
              INTO ZEILE
              SEPARATED BY SPACE.
  ELSE.
    CONCATENATE 'TLD   : -' ''
              INTO ZEILE
              SEPARATED BY SPACE.
  ENDIF.

  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'User  :' SY-UNAME
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  MOVE LIMTS                                    TO NUMBYTE.
  CONDENSE NUMBYTE.
  CONCATENATE 'LimitS:' NUMBYTE
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'Rep-ID:' SY-REPID
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  MOVE LIMTA                                    TO NUMBYTE.
  CONDENSE NUMBYTE.
  CONCATENATE 'LimitA:' NUMBYTE
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'ABAP  :' REPREL
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  MOVE LIMTE                                    TO NUMBYTE.
  CONDENSE NUMBYTE.
  CONCATENATE 'LimitE:' NUMBYTE
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  IF cl_abap_char_utilities=>charsize = 1.
    CONCATENATE 'UniCo :' ' '
                INTO ZEILE
                SEPARATED BY SPACE.
  ELSE.
    CONCATENATE 'UniCo :' 'X'
                INTO ZEILE
                SEPARATED BY SPACE.
  ENDIF.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'Rollb :' SYS_RLL
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  CONCATENATE 'Codep :' CDP
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF INPUT OFF.

  CONCATENATE 'FinYr :' CDSDATE
              INTO ZEILE
              SEPARATED BY SPACE.
  WRITE 40 ZEILE COLOR COL_HEADING INTENSIFIED OFF INVERSE OFF
                                                   INPUT OFF.

  SKIP 2.
  SORT B0007.
  LOOP AT B0007.
    CONCATENATE B0007-NUM '-' B0007-MESS
                INTO ZEILE
                SEPARATED BY SPACE.
    WRITE / ZEILE.
  ENDLOOP.

  SKIP 2.
  MOVE 'END OF summary.  (dd.mm.yyyy / hh:mm:ss)'
*       01234567890123456789012345678901234567890
                                                TO ZEILE.
  MOVE ENDD+6(2)                                TO ZEILE+18(2).
  MOVE ENDD+4(2)                                TO ZEILE+21(2).
  MOVE ENDD+0(4)                                TO ZEILE+24(4).
  MOVE ENDT+0(2)                                TO ZEILE+31(2).
  MOVE ENDT+2(2)                                TO ZEILE+34(2).
  MOVE ENDT+4(2)                                TO ZEILE+37(2).
  WRITE / ZEILE COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.
ENDFORM.                    "WRITESUMMARY

*---------------------------------------------------------------------*
*       FORM B003INIT                                                 *
*---------------------------------------------------------------------*
FORM B0003INIT.
  CONCATENATE PATH
              'B0003'
              FILEEXT
              INTO FILEB3.

  PERFORM OPENB0003 USING 'OUTPUT' ''.

  PERFORM CLOSEB0003.
ENDFORM.                                                    "B0003INIT

*---------------------------------------------------------------------*
*       FORM B000xINIT                                                *
*---------------------------------------------------------------------*
FORM B000xINIT.

* Structure B0004
* ===============
  PERFORM ADDBSET USING 'N' '0004' 'B' 'B0004'.

  PERFORM ADDB2 USING 'Y' 'Int. table B0004'.

  PERFORM ADDB3 USING 'CHECKTABLE' 0 'DD08VV' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FORTABLE' 0 'DD08VV' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FORKEY' 0 'DD08VV' '' '' '' '' '' ''.


* Structure B0005
* ===============
  PERFORM ADDBSET USING 'N' '0005' 'B' 'B0005'.

  PERFORM ADDB2 USING 'Y' 'Int. table B0005'.

  PERFORM ADDB3 USING 'FTYPE' 1 '' '' '' '' 'FType' 'FType' ''.
  PERFORM ADDB3 USING 'TABNAME' 0 'DD03L' 'TABNAME' '' '' '' '' ''.
  PERFORM ADDB3 USING 'LANGFIELD' 0 'DD03L' 'FIELDNAME' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TABNAMETEXT' 0 'DD03L' 'TABNAME' '' '' '' '' ''.
  PERFORM ADDB3 USING 'LANGFIELDTEXT' 0 'DD03L' 'FIELDNAME'
                            '' '' '' '' ''.
  PERFORM ADDB3 USING 'LEN' 20 '' '' '' '' 'Length' 'Length' ''.
  PERFORM ADDB3 USING 'DIV' 105 '' '' '' '' 'Div' 'Div' ''.
  PERFORM ADDB3 USING 'MAND' 1 '' '' '' '' 'Mandatory' 'Mandatory' ''.
  PERFORM ADDB3 USING 'CLI' 1 '' '' '' '' 'Client' 'Client' ''.
  PERFORM ADDB3 USING 'BC' 1 '' '' '' '' 'Basis' 'Basis' ''.
  PERFORM ADDB3 USING 'DV' 1 '' '' '' '' 'Desolved' 'Desolved' ''.
  PERFORM ADDB3 USING 'FSD' 1 '' '' '' '' 'FieldStat' 'FieldStat' ''.
  PERFORM ADDB3 USING 'AGF' 1 '' '' '' '' 'AuthGrp' 'AuthGrp' ''.
  PERFORM ADDB3 USING 'SDV' 19 '' '' '' '' 'AreaTab' 'AreaTab' ''.
  PERFORM ADDB3 USING 'STAB' 19 '' '' '' '' 'AreaObj' 'AreaObj' ''.

* Structure B0006
* ===============
  PERFORM ADDBSET USING 'N' '0006' 'B' 'B0006'.

  PERFORM ADDB2 USING 'Y' 'Int. table B0006'.

  PERFORM ADDB3 USING 'DATUM' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'HOST' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'SAPRL' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OPSYS' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'SYSID' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MANDT' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DBSYS' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'UNAME' 0 'SYST' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'REPID' 12 '' '' ''
                '' '' 'ABAP Program Name' ''.
  PERFORM ADDB3 USING 'STARTD' 8 '' ''
                '' '' 'Start date' 'Start date' ''.
  PERFORM ADDB3 USING 'STARTT' 6 '' ''
                '' '' 'Start time' 'Start time' ''.
  PERFORM ADDB3 USING 'ENDD' 8 '' ''
                '' '' 'End date' 'End date' ''.
  PERFORM ADDB3 USING 'ENDT' 6 '' ''
                '' '' 'End time' 'End time' ''.
  PERFORM ADDB3 USING 'PATH' 100 '' '' '' '' 'Path' 'Path' ''.
  PERFORM ADDB3 USING 'ALLCLI' 1 '' ''
                '' '' 'Data Reports for all clients' 'A' ''.
  PERFORM ADDB3 USING 'ALLCL2' 1 '' ''
                '' '' 'Auth. Analysis for all clients' 'A' ''.
  PERFORM ADDB3 USING 'ALLCL3' 1 '' ''
                '' '' 'Log Analysis for all clients' 'A' ''.
  PERFORM ADDB3 USING 'BC' 1 '' ''
                '' '' '' 'Base component' 'B'.
  PERFORM ADDB3 USING 'DV' 1 '' ''
                '' '' '' 'Desolved values' 'D'.
  PERFORM ADDB3 USING 'FSD' 1 '' ''
                '' '' 'Fieldstatus definition' 'F' ''.
  PERFORM ADDB3 USING 'HLP' 1 '' ''
                '' '' 'Object help' 'O' ''.
  PERFORM ADDB3 USING 'LIMITS' 12 '' ''
                '' '' 'Limit for optional' 'Limit opt.' ''.
  PERFORM ADDB3 USING 'LIMITA' 12 '' ''
                '' '' 'Limit for additional' 'Limit add.' ''.
  PERFORM ADDB3 USING 'SYSRLL' 1 '' ''
                '' '' 'Less rollback segment' 'L' ''.
  PERFORM ADDB3 USING 'REPREL' 10 '' ''
                '' '' 'ACE ABAP Master-Release' 'Release' ''.
  PERFORM ADDB3 USING 'AGF' 1 '' ''
                '' '' 'Authorization Group Fields' 'A' ''.
  PERFORM ADDB3 USING 'TLDM' 1 '' ''
                '' '' 'Transaction Log Data Monthly' 'T' ''.
  PERFORM ADDB3 USING 'TLDW' 1 '' ''
                '' '' 'Transaction Log Data Weekly' 'W' ''.
  PERFORM ADDB3 USING 'TLDD' 1 '' ''
                '' '' 'Transaction Log Data Daily' 'D' ''.
  PERFORM ADDB3 USING 'TLDSEL' 12 '' ''
                '' '' 'TLD Period Limit' 'Period Limit' ''.
  PERFORM ADDB3 USING 'TLDREC' 12 '' ''
                '' '' 'TLD Record Limit' 'Record Limit' ''.
  PERFORM ADDB3 USING 'CDSSEL' 1 '' ''
                '' '' 'CDS Download' 'Download' ''.
  PERFORM ADDB3 USING 'CDSDATE' 8 '' ''
                '' '' 'CDS Download' 'Starting Financial Year' ''.
  PERFORM ADDB3 USING 'DV01' 1 '' ''
                '' '' 'Desolved Values Basis' '1' ''.
  PERFORM ADDB3 USING 'TA01' 1 '' ''
                '' '' 'Tables Basis' '1' ''.
  PERFORM ADDB3 USING 'DV02' 1 '' ''
                '' '' 'Desolved Values Cross-Application' '2' ''.
  PERFORM ADDB3 USING 'TA02' 1 '' ''
                '' '' 'Tables Cross-Application' '2' ''.
  PERFORM ADDB3 USING 'DV03' 1 '' ''
                '' '' 'Desolved Values Financial Accounting' '3' ''.
  PERFORM ADDB3 USING 'TA03' 1 '' ''
                '' '' 'Tables Financial Accounting' '3' ''.
  PERFORM ADDB3 USING 'DV04' 1 '' ''
                '' '' 'Desolved Values Procurement' '4' ''.
  PERFORM ADDB3 USING 'TA04' 1 '' ''
                '' '' 'Tables Procurement' '4' ''.
  PERFORM ADDB3 USING 'DV05' 1 '' ''
                '' '' 'Desolved Values Sales & Distribution' '5' ''.
  PERFORM ADDB3 USING 'TA05' 1 '' ''
                '' '' 'Tables Sales & Distribution' '5' ''.
  PERFORM ADDB3 USING 'DV06' 1 '' ''
                '' '' 'Desolved Values Inventory Management' '6' ''.
  PERFORM ADDB3 USING 'TA06' 1 '' ''
                '' '' 'Tables Inventory Management' '6' ''.
  PERFORM ADDB3 USING 'DV07' 1 '' ''
                '' '' 'Desolved Values Asset Accounting' '7' ''.
  PERFORM ADDB3 USING 'TA07' 1 '' ''
                '' '' 'Tables Asset Accounting' '7' ''.
  PERFORM ADDB3 USING 'DV08' 1 '' ''
                '' '' 'Desolved Values Human Ressources' '8' ''.
  PERFORM ADDB3 USING 'TA08' 1 '' ''
                '' '' 'Tables Human Ressources' '8' ''.
  PERFORM ADDB3 USING 'DV09' 1 '' ''
                '' '' 'Desolved Values Treasury' '9' ''.
  PERFORM ADDB3 USING 'TA09' 1 '' ''
                '' '' 'Tables Treasury' '9' ''.
  PERFORM ADDB3 USING 'DV10' 1 '' ''
                '' '' 'Desolved Values Enterprise Controlling' '0' ''.
  PERFORM ADDB3 USING 'TA10' 1 '' ''
                '' '' 'Tables Enterprise Controlling' '0' ''.
  PERFORM ADDB3 USING 'DV11' 1 '' ''
                '' '' 'Desolved Values Revenue and Cost Contr.' '1' ''.
  PERFORM ADDB3 USING 'TA11' 1 '' ''
                '' '' 'Tables Revenuw and Cost Controlling' '1' ''.
  PERFORM ADDB3 USING 'DV12' 1 '' ''
                '' '' 'Desolved Values Plant Maintenance' '2' ''.
  PERFORM ADDB3 USING 'TA12' 1 '' ''
                '' '' 'Tables Plant Maintenance' '2' ''.
  PERFORM ADDB3 USING 'DV13' 1 '' ''
                '' '' 'Desolved Values Production' '3' ''.
  PERFORM ADDB3 USING 'TA13' 1 '' ''
                '' '' 'Tables Production' '3' ''.
  PERFORM ADDB3 USING 'DV14' 1 '' ''
                '' '' 'Desolved Values Quality Management' '4' ''.
  PERFORM ADDB3 USING 'TA14' 1 '' ''
                '' '' 'Tables Quality Management' '4' ''.
  PERFORM ADDB3 USING 'DV15' 1 '' ''
                '' '' 'Desolved Values Project Management' '5' ''.
  PERFORM ADDB3 USING 'TA15' 1 '' ''
                '' '' 'Tables Project Management' '5' ''.
  PERFORM ADDB3 USING 'DV16' 1 '' ''
                '' '' 'Desolved Values Real Estate Management' '6' ''.
  PERFORM ADDB3 USING 'TA16' 1 '' ''
                '' '' 'Tables Real Estate Management' '6' ''.
  PERFORM ADDB3 USING 'DV17' 1 '' ''
                '' '' 'Desolved Values Industry Solutions' '7' ''.
  PERFORM ADDB3 USING 'TA17' 1 '' ''
                '' '' 'Tables Industry Solutions' '7' ''.
  PERFORM ADDB3 USING 'DV18' 1 '' ''
                '' '' 'Desolved Values Diverse Areas' '8' ''.
  PERFORM ADDB3 USING 'TA18' 1 '' ''
                '' '' 'Tables Diverse Areas' '8' ''.
  PERFORM ADDB3 USING 'CDP' 4 '' ''
                '' '' 'Code Page' 'C' ''.
  PERFORM ADDB3 USING 'UCS' 1 '' ''
                '' '' 'Unique Code System' 'U' ''.
  PERFORM ADDB3 USING 'LIMITE' 12 '' ''
                '' '' 'Limit for special' 'Limit spe.' ''.
  PERFORM ADDB3 USING 'KPI001' 1 '' ''
                '' '' 'KPI 001' 'A' ''.
  PERFORM ADDB3 USING 'KPI002' 1 '' ''
                '' '' 'KPI 002' 'B' ''.
  PERFORM ADDB3 USING 'KPI003' 1 '' ''
                '' '' 'KPI 003' 'C' ''.
  PERFORM ADDB3 USING 'KPI004' 1 '' ''
                '' '' 'KPI 004' 'D' ''.
  PERFORM ADDB3 USING 'KPI009' 1 '' ''
                '' '' 'KPI 009' 'E' ''.
  PERFORM ADDB3 USING 'KPI012' 1 '' ''
                '' '' 'KPI 012' 'F' ''.
  PERFORM ADDB3 USING 'KPI019' 1 '' ''
                '' '' 'KPI 019' 'G' ''.
  PERFORM ADDB3 USING 'KPI024' 1 '' ''
                '' '' 'KPI 024' 'H' ''.
  PERFORM ADDB3 USING 'KPI027' 1 '' ''
                '' '' 'KPI 027' 'I' ''.
  PERFORM ADDB3 USING 'KPIBUKRS' 5000 '' ''
                '' '' 'KPI Company Code Selection' 'KPI CC' ''.
  PERFORM ADDB3 USING 'ONLPST' 1 '' ''
                '' '' 'Only Posting Download' 'O' ''.
  PERFORM ADDB3 USING 'DWNPST' 1 '' ''
                '' '' 'Posting and Other Download' 'B' ''.
  PERFORM ADDB3 USING 'XBKTXT' 1 '' ''
                '' '' 'Header Text' '1' ''.
  PERFORM ADDB3 USING 'XCLR' 1 '' ''
                '' '' 'Clearing Info' '2' ''.
  PERFORM ADDB3 USING 'XTEXT' 1 '' ''
                '' '' 'Segment Text' '3' ''.
  PERFORM ADDB3 USING 'XACCS' 1 '' ''
                '' '' 'Accounting Info' '4' ''.
  PERFORM ADDB3 USING 'XSDOC' 1 '' ''
                '' '' 'Source Doc Info' '5' ''.
  PERFORM ADDB3 USING 'XPAY' 1 '' ''
                '' '' 'Payment Info' '6' ''.
  PERFORM ADDB3 USING 'XQUAN' 1 '' ''
                '' '' 'Quantity Info' '7' ''.
  PERFORM ADDB3 USING 'SXBUKRS' 5000 '' ''
                '' '' 'Select Company Codes' 'Sel CC' ''.
  PERFORM ADDB3 USING 'SXGJAHR' 5000 '' ''
                '' '' 'Selected Financial Years' 'Sel FY' ''.
  PERFORM ADDB3 USING 'SXBLART' 3000 '' ''
                '' '' 'Selected Document Typpe' 'Sel DT' ''.
  PERFORM ADDB3 USING 'SXBLDAT' 6000 '' ''
                '' '' 'Selected Document Date' 'Sel DD' ''.
  PERFORM ADDB3 USING 'SXBUDAT' 6000 '' ''
                '' '' 'Selected Posting Date' 'Sel PD' ''.
  PERFORM ADDB3 USING 'SXMONAT' 40 '' ''
                '' '' 'Selected Period' 'Sel Period' ''.
  PERFORM ADDB3 USING 'SXCPUDT' 6000 '' ''
                '' '' 'Selected Creation Date' 'Sel CD' ''.
  PERFORM ADDB3 USING 'SXUSNAM' 8000 '' ''
                '' '' 'Select Creation User' 'Sel CU' ''.
  PERFORM ADDB3 USING 'SXTCODE' 8000 '' ''
                '' '' 'Selected TCode' 'Sel TCode' ''.
  PERFORM ADDB3 USING 'SXGLVOR' 4000 '' ''
                '' '' 'Selected Business Transaction' 'Sel BT' ''.
  PERFORM ADDB3 USING 'SXSNAME' 4000 '' ''
                '' '' 'Selected User' 'Sel' ''.

* Structure B0007
* ===============
  PERFORM ADDBSET USING 'N' '0007' 'B' 'B0007'.

  PERFORM ADDB2 USING 'Y' 'Int. table B0007'.

  PERFORM ADDB3 USING 'MESS' 400 '' '' '' '' 'Message' 'Message' ''.
  PERFORM ADDB3 USING 'NUM' 5 '' '' '' '' '' 'Number' 'Num'.

ENDFORM.                                                    "B000xINIT

*---------------------------------------------------------------------*
*       FORM B000x-EXP                                                *
*---------------------------------------------------------------------*
FORM B000x-EXP.

* Fill B0006 table
* ================
  CLEAR B0006.
  B0006-SYSTEM = SY-HOST.
  B0006-DATUM = SY-DATUM.
  B0006-SAPRL = SY-SAPRL.
  B0006-OPSYS = SY-OPSYS.
  B0006-SYSID = SY-SYSID.
  B0006-CLIENT = SY-MANDT.
  B0006-DBSYS = SY-DBSYS.
  B0006-UNAME = SY-UNAME.
  B0006-REPID = SY-REPID.
  B0006-STARTD = STARTD.
  B0006-STARTT = STARTT.
  B0006-ENDD = ENDD.
  B0006-ENDT = ENDT.
  B0006-PATH = PATH.
  B0006-ALL_CLI = ALL_CLI.
  B0006-ALL_CL2 = ''.
  B0006-ALL_CL3 = ALL_CL3.
  B0006-HLP = HLP.
  B0006-FSD = FSD.
  B0006-BC = BC.
  B0006-DV = DV.
  B0006-LIMITS = LIMTS.
  B0006-LIMITA = LIMTA.
  B0006-SYS_RLL = SYS_RLL.
  B0006-REPREL = REPREL.
  B0006-AGF = AGF.
  B0006-TLDM = TLDM.
  B0006-TLDW = TLDW.
  B0006-TLDD = TLDD.
  B0006-TLDSEL = TLDSEL.
  B0006-TLDREC = TLDREC.
  B0006-CDSSEL = CDSSEL.
  B0006-CDSDATE = CDSDATE.
  B0006-DV01 = DV01.
  B0006-TA01 = TA01.
  B0006-DV02 = DV02.
  B0006-TA02 = TA02.
  B0006-DV03 = DV03.
  B0006-TA03 = TA03.
  B0006-DV04 = DV04.
  B0006-TA04 = TA04.
  B0006-DV05 = DV05.
  B0006-TA05 = TA05.
  B0006-DV06 = DV06.
  B0006-TA06 = TA06.
  B0006-DV07 = DV07.
  B0006-TA07 = TA07.
  B0006-DV08 = DV08.
  B0006-TA08 = TA08.
  B0006-DV09 = DV09.
  B0006-TA09 = TA09.
  B0006-DV10 = DV10.
  B0006-TA10 = TA10.
  B0006-DV11 = DV11.
  B0006-TA11 = TA11.
  B0006-DV12 = DV12.
  B0006-TA12 = TA12.
  B0006-DV13 = DV13.
  B0006-TA13 = TA13.
  B0006-DV14 = DV14.
  B0006-TA14 = TA14.
  B0006-DV15 = DV15.
  B0006-TA15 = TA15.
  B0006-DV16 = DV16.
  B0006-TA16 = TA16.
  B0006-DV17 = DV17.
  B0006-TA17 = TA17.
  B0006-DV18 = DV18.
  B0006-TA18 = TA18.
  B0006-CDP = CDP.
  IF cl_abap_char_utilities=>charsize = 1.
    B0006-UCS = ' '.
  ELSE.
    B0006-UCS = 'X'.
  ENDIF.
  B0006-LIMITE = LIMTE.
  B0006-KPI001 = P_KPI001.
  B0006-KPI002 = P_KPI002.
  B0006-KPI003 = P_KPI003.
  B0006-KPI004 = P_KPI004.
  B0006-KPI009 = P_KPI009.
  B0006-KPI012 = P_KPI012.
  B0006-KPI019 = P_KPI019.
  B0006-KPI024 = P_KPI024.
  B0006-KPI027 = P_KPI027.
  B0006-KPIBUKRS = ''.
  LOOP AT SKBUKRS.
    CONCATENATE
                B0006-KPIBUKRS ','
                SKBUKRS-LOW
                INTO B0006-KPIBUKRS.
  ENDLOOP.
  B0006-ONLPST = P_ONLPST.
  B0006-DWNPST = P_DWNPST.
  B0006-XBKTXT = P_XBKTXT.
  B0006-XCLR = P_XCLR.
  B0006-XTEXT = P_XTEXT.
  B0006-XACCS = P_XACCS.
  B0006-XSDOC = P_XSDOC.
  B0006-XPAY = P_XPAY.
  B0006-XQUAN = P_XQUAN.
  B0006-SXBUKRS = ''.
  LOOP AT SXBUKRS.
    CONCATENATE
                B0006-SXBUKRS ','
                SXBUKRS-LOW
                INTO B0006-SXBUKRS.
  ENDLOOP.
  B0006-SXGJAHR = ''.
  LOOP AT SXGJAHR.
    CONCATENATE
                B0006-SXGJAHR ','
                SXGJAHR-LOW
                INTO B0006-SXGJAHR.
  ENDLOOP.
  B0006-SXBLART = ''.
  LOOP AT SXBLART.
    CONCATENATE
                B0006-SXBLART ','
                SXBLART-LOW
                INTO B0006-SXBLART.
  ENDLOOP.
  B0006-SXBLDAT = ''.
  LOOP AT SXBLDAT.
    CONCATENATE
                B0006-SXBLDAT ','
                SXBLDAT-LOW
                INTO B0006-SXBLDAT.
  ENDLOOP.
  B0006-SXBUDAT = ''.
  LOOP AT SXBUDAT.
    CONCATENATE
                B0006-SXBUDAT ','
                SXBUDAT-LOW
                INTO B0006-SXBUDAT.
  ENDLOOP.
  B0006-SXMONAT = ''.
  LOOP AT SXMONAT.
    CONCATENATE
                B0006-SXMONAT ','
                SXMONAT-LOW
                INTO B0006-SXMONAT.
  ENDLOOP.
  B0006-SXCPUDT = ''.
  LOOP AT SXCPUDT.
    CONCATENATE
                B0006-SXCPUDT ','
                SXCPUDT-LOW
                INTO B0006-SXCPUDT.
  ENDLOOP.
  B0006-SXUSNAM = ''.
  LOOP AT SXUSNAM.
    CONCATENATE
                B0006-SXUSNAM ','
                SXUSNAM-LOW
                INTO B0006-SXUSNAM.
  ENDLOOP.
  B0006-SXTCODE = ''.
  LOOP AT SXTCODE.
    CONCATENATE
                B0006-SXTCODE ','
                SXTCODE-LOW
                INTO B0006-SXTCODE.
  ENDLOOP.
  B0006-SXGLVOR = ''.
  LOOP AT SXGLVOR.
    CONCATENATE
                B0006-SXGLVOR ','
                SXGLVOR-LOW
                INTO B0006-SXGLVOR.
  ENDLOOP.
  B0006-SXSNAME = ''.
  LOOP AT SXSNAME.
    CONCATENATE
                B0006-SXSNAME ','
                SXSNAME-LOW
                INTO B0006-SXSNAME.
  ENDLOOP.

  APPEND B0006.

  LOOP AT ADDTABLE.
    CLEAR B0006.
    B0006-PATH = ADDTABLE-LOW.
    APPEND B0006.
  ENDLOOP.


* File B0004
* ==========
  PERFORM ADDBSET USING 'N' '0004' 'B' 'B0004'.
  PERFORM OPENFILE USING 'OUTPUT'.

  LOOP AT B0004.
    REPLACE ALL OCCURRENCES OF TRANSTXT IN B0004 WITH REPLCHAR.
    REPLACE ALL OCCURRENCES OF TRANSSEP IN B0004 WITH REPLCHAR.

    CONCATENATE
                B0004-CHECKTABLE
                B0004-FORTABLE
                B0004-FORKEY
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDLOOP.

  PERFORM CLOSEFILE.


* File B0005
* ==========
  PERFORM ADDBSET USING 'N' '0005' 'B' 'B0005'.
  PERFORM OPENFILE USING 'OUTPUT'.

  LOOP AT B0005.
    PERFORM REPLCHARFIELD USING B0005-FTYPE.
    PERFORM REPLCHARFIELD USING B0005-TABNAME.
    PERFORM REPLCHARFIELD USING B0005-LANGFIELD.
    PERFORM REPLCHARFIELD USING B0005-TABNAMETEXT.
    PERFORM REPLCHARFIELD USING B0005-LANGFIELDTEXT.
    PERFORM REPLCHARFIELD USING B0005-GEN.
    PERFORM REPLCHARFIELD USING B0005-MIN.
    PERFORM REPLCHARFIELD USING B0005-CLI.
    PERFORM REPLCHARFIELD USING B0005-BC.
    PERFORM REPLCHARFIELD USING B0005-DV.
    PERFORM REPLCHARFIELD USING B0005-FSD.
    PERFORM REPLCHARFIELD USING B0005-AGF.
    PERFORM REPLCHARFIELD USING B0005-SDV.
    PERFORM REPLCHARFIELD USING B0005-STAB.

    CONCATENATE
                B0005-FTYPE
                B0005-TABNAME
                B0005-LANGFIELD
                B0005-TABNAMETEXT
                B0005-LANGFIELDTEXT
                B0005-LIMIT
                B0005-GEN
                B0005-MIN
                B0005-CLI
                B0005-BC
                B0005-DV
                B0005-FSD
                B0005-AGF
                B0005-SDV
                B0005-STAB
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDLOOP.

  PERFORM CLOSEFILE.


* File B0006
* ==========
  PERFORM ADDBSET USING 'N' '0006' 'B' 'B0006'.
  PERFORM OPENFILE USING 'OUTPUT'.

  LOOP AT B0006.
    REPLACE ALL OCCURRENCES OF TRANSTXT IN B0006 WITH REPLCHAR.
    REPLACE ALL OCCURRENCES OF TRANSSEP IN B0006 WITH REPLCHAR.

    CONDENSE B0006-KPIBUKRS.
    CONDENSE B0006-SXBUKRS.
    CONDENSE B0006-SXGJAHR.
    CONDENSE B0006-SXBLART.
    CONDENSE B0006-SXBLDAT.
    CONDENSE B0006-SXBUDAT.
    CONDENSE B0006-SXMONAT.
    CONDENSE B0006-SXCPUDT.
    CONDENSE B0006-SXUSNAM.
    CONDENSE B0006-SXTCODE.
    CONDENSE B0006-SXGLVOR.
    CONDENSE B0006-SXSNAME.

    CONCATENATE
                B0006-DATUM
                B0006-SYSTEM
                B0006-SAPRL
                B0006-OPSYS
                B0006-SYSID
                B0006-CLIENT
                B0006-DBSYS
                B0006-UNAME
                B0006-REPID
                B0006-STARTD
                B0006-STARTT
                B0006-ENDD
                B0006-ENDT
                B0006-PATH
                B0006-ALL_CLI
                B0006-ALL_CL2
                B0006-ALL_CL3
                B0006-BC
                B0006-DV
                B0006-FSD
                B0006-HLP
                B0006-LIMITS
                B0006-LIMITA
                B0006-SYS_RLL
                B0006-REPREL
                B0006-AGF
                B0006-TLDM
                B0006-TLDW
                B0006-TLDD
                B0006-TLDSEL
                B0006-TLDREC
                B0006-CDSSEL
                B0006-CDSDATE
                B0006-DV01
                B0006-TA01
                B0006-DV02
                B0006-TA02
                B0006-DV03
                B0006-TA03
                B0006-DV04
                B0006-TA04
                B0006-DV05
                B0006-TA05
                B0006-DV06
                B0006-TA06
                B0006-DV07
                B0006-TA07
                B0006-DV08
                B0006-TA08
                B0006-DV09
                B0006-TA09
                B0006-DV10
                B0006-TA10
                B0006-DV11
                B0006-TA11
                B0006-DV12
                B0006-TA12
                B0006-DV13
                B0006-TA13
                B0006-DV14
                B0006-TA14
                B0006-DV15
                B0006-TA15
                B0006-DV16
                B0006-TA16
                B0006-DV17
                B0006-TA17
                B0006-DV18
                B0006-TA18
                B0006-CDP
                B0006-UCS
                B0006-LIMITE
                B0006-KPI001
                B0006-KPI002
                B0006-KPI003
                B0006-KPI004
                B0006-KPI009
                B0006-KPI012
                B0006-KPI019
                B0006-KPI024
                B0006-KPI027
                B0006-KPIBUKRS
                B0006-ONLPST
                B0006-DWNPST
                B0006-XBKTXT
                B0006-XCLR
                B0006-XTEXT
                B0006-XACCS
                B0006-XSDOC
                B0006-XPAY
                B0006-XQUAN
                B0006-SXBUKRS
                B0006-SXGJAHR
                B0006-SXBLART
                B0006-SXBLDAT
                B0006-SXBUDAT
                B0006-SXMONAT
                B0006-SXCPUDT
                B0006-SXUSNAM
                B0006-SXTCODE
                B0006-SXGLVOR
                B0006-SXSNAME
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDLOOP.

  PERFORM CLOSEFILE.


* File B0007
* ==========
  PERFORM ADDBSET USING 'N' '0007' 'B' 'B0007'.
  PERFORM OPENFILE USING 'OUTPUT'.

  LOOP AT B0007.
    PERFORM REPLCHARFIELD USING B0007-MESS.

    CONCATENATE
                B0007-MESS
                B0007-NUM
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDLOOP.

  PERFORM CLOSEFILE.

ENDFORM.                                                    "B000x-EXP

*---------------------------------------------------------------------*
*       FORM B0002-EXP                                                *
*---------------------------------------------------------------------*
FORM B0002-EXP.
  DATA FILENAM(400) TYPE C.

  PERFORM ADDBSET USING 'N' '0002' 'B' 'B0002'.
  PERFORM OPENFILE USING 'OUTPUT'.

  CONCATENATE PATH
              ADDBTYP
              ADDBNR
              FILEEXT
              INTO FILENAM.

  LOOP AT B0002.
    PERFORM REPLCHARFIELD USING B0002-TYP.
    PERFORM REPLCHARFIELD USING B0002-NR.
    PERFORM REPLCHARFIELD USING B0002-TAB.
    PERFORM REPLCHARFIELD USING B0002-DDTEXT.
    PERFORM REPLCHARFIELD USING B0002-FLAG.

    CONCATENATE
                B0002-TYP
                B0002-NR
                B0002-TAB
                B0002-DDTEXT
                B0002-FLAG
                B0002-NUMBYTE
                B0002-NUMREC
                INTO TRANSREC
                SEPARATED BY TRANSSEP.

    TRANSFER TRANSREC TO FILENAM.
  ENDLOOP.

  PERFORM CLOSEFILE.

ENDFORM.                                                    "B0002-EXP

*---------------------------------------------------------------------*
*       FORM WRITEB0001                                               *
*---------------------------------------------------------------------*
FORM WRITEB0001.
  DATA FILENAM(400) TYPE C.

  PERFORM ADDBSET USING 'N' '0001' 'B' 'B0001'.
  PERFORM OPENFILE USING 'OUTPUT'.

  CONCATENATE PATH ADDBTYP ADDBNR FILEEXT
              INTO FILENAM.

  B0001-SYSID = SY-SYSID.
  B0001-CLIENT = SY-MANDT.
  B0001-ABAPREL = REPREL.

  REPLACE ALL OCCURRENCES OF TRANSTXT IN B0001 WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN B0001 WITH REPLCHAR.

  B0001-DELIM1 = TRANSSEP.
  B0001-DELIM2 = TRANSSEP.

  TRANSFER B0001 TO FILENAM.

  PERFORM CLOSEFILE.

ENDFORM.                                                    "WRITEB0001


*######################################################################
*######################################################################
*##                                                                  ##
*##     MAINPROG                                                     ##
*##                                                                  ##
*######################################################################
*######################################################################
*---------------------------------------------------------------------*
*       FORM MAINPROG                                                 *
*---------------------------------------------------------------------*
FORM MAINPROG.

  PERFORM EXECCOMMIT USING 'MAINPROG' 'A' ''.

  IF P_ONLPST = SPACE.
    PERFORM EXPTOBJ.
    PERFORM EXPUSR04.
    PERFORM EXPUSR10.
    PERFORM EXPUSR12.

    PERFORM EXPPARAM.

    IF HLP = 'X' AND P_DWNCAT = SPACE AND P_ONLPST = SPACE.
      PERFORM EXPHLP.
    ENDIF.

    IF BC = 'X' AND P_DWNCAT = SPACE AND P_ONLPST = SPACE.
      PERFORM EXPUSRLOG.
      PERFORM EXPROLELOG.
      PERFORM EXPPROFLOG.
      PERFORM EXPAUTHLOG.
      PERFORM EXPTRANSIMPLOG.
      PERFORM EXPBATCHAUTHLOG.
    ENDIF.

    IF ( TLDM = 'X' OR TLDW = 'X' OR TLDD = 'X' )
       AND P_DWNCAT = SPACE AND P_ONLPST = SPACE.
      PERFORM EXPTLD.
    ENDIF.

    IF CDSSEL = 'X' AND P_DWNCAT = SPACE AND P_ONLPST = SPACE.
      PERFORM EXPCDSB.
      PERFORM EXPCDSC.
    ENDIF.

    IF P_DWNCAT = SPACE AND P_ONLPST = SPACE.
      PERFORM EXPTABLOG.
    ENDIF.
  ENDIF.

  PERFORM EXPDYNAMIC.

  PERFORM EXPEXT.

  IF P_DWNPST = 'X' OR P_ONLPST = 'X'.
    PERFORM EXPPST.
  ENDIF.

  IF P_ONLPST <> 'X'.
    PERFORM EXPKPI.
  ENDIF.

  PERFORM EXECCOMMIT USING 'MAINPROG' 'B' ''.

ENDFORM.                    "MAINPROG


*---------------------------------------------------------------------*
*       FORM EXPTOBJ                                                  *
*---------------------------------------------------------------------*
FORM EXPTOBJ.
  DATA: FILENUM1(4) TYPE N,
        FILENUM2(4) TYPE N,
        FILENUM4(4) TYPE N,
        FILENUM7(4) TYPE N.

  DATA: BEGIN OF WDD07V,
        DDTEXT TYPE DD07V-DDTEXT,
        DOMVALUE_L TYPE DD07V-DOMVALUE_L,
        END OF WDD07V.

  DATA: BEGIN OF WDD03M,
        FIELDNAME TYPE DD03M-FIELDNAME,
        TABNAME TYPE DD03M-TABNAME,
        CHECKTABLE TYPE DD03M-CHECKTABLE,
        ROLLNAME TYPE DD03M-ROLLNAME,
        ENTITYTAB TYPE DD03M-ENTITYTAB,
        DOMNAME TYPE DD03M-DOMNAME,
        DDTEXT TYPE DD03M-DDTEXT,
        DDLANGUAGE TYPE DD03M-DDLANGUAGE,
        END OF WDD03M,
        IDD03M LIKE TABLE OF WDD03M.
  FIELD-SYMBOLS <ZDD03M> LIKE LINE OF IDD03M.

* FILE DEFINION ACETOBJ1 - TYP D
  DATA: BEGIN OF ACETOBJ1,
        OBJCT LIKE TOBJ-OBJCT,
        OCLSS LIKE TOBJ-OCLSS,
        FIELDNAME LIKE DD03L-FIELDNAME,
        TABNAME LIKE DD03L-TABNAME,
        CHECKTABLE LIKE DD03L-CHECKTABLE,
        ROLLNAME LIKE DD03L-ROLLNAME,
        DOMNAME LIKE DD03L-DOMNAME,
        DDTEXT LIKE DD04T-DDTEXT.
  DATA: END OF ACETOBJ1.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACETOBJ1'.
  FILENUM1 = FILENUM.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table TOBJ1'.

  PERFORM ADDB3 USING 'OBJCT' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OCLSS' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FIELDNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TABNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'CHECKTABLE' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'ROLLNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DOMNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DDTEXT' 0 'DD04T' '' '' '' '' '' ''.

* FILE DEFINION ACETOBJ2 - TYP *
  DATA: BEGIN OF ACETOBJ2,
        OBJCT LIKE TOBJ-OBJCT,
        OCLSS LIKE TOBJ-OCLSS,
        FIELDNAME LIKE DD03L-FIELDNAME,
        TABNAME LIKE DD03L-TABNAME,
        ENTITYTAB LIKE DD01L-ENTITYTAB,
        DOMNAME LIKE DD03L-DOMNAME.
  DATA: END OF ACETOBJ2.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACETOBJ2'.
  FILENUM2 = FILENUM.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table TOBJ2'.

  PERFORM ADDB3 USING 'OBJCT' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OCLSS' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FIELDNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TABNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'ENTITYTAB' 0 'DD01L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DOMNAME' 0 'DD03L' '' '' '' '' '' ''.

* FILE DEFINION ACETOBJ4 - TYP -
  DATA: BEGIN OF ACETOBJ4,
        OBJCT LIKE TOBJ-OBJCT,
        OCLSS LIKE TOBJ-OCLSS,
        FIELDNAME LIKE DD03L-FIELDNAME,
        TABNAME LIKE DD03L-TABNAME,
        DDTEXT LIKE DD07V-DDTEXT,
        DOMVALUE_L LIKE DD07V-DOMVALUE_L.
  DATA: END OF ACETOBJ4.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACETOBJ4'.
  FILENUM4 = FILENUM.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table TOBJ4'.

  PERFORM ADDB3 USING 'OBJCT' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OCLSS' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FIELDNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TABNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DDTEXT' 0 'DD07V' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DOMVALUE_L' 0 'DD07V' '' '' '' '' '' ''.

* FILE DEFINION ACETOBJ7 - TYP C
  DATA: BEGIN OF ACETOBJ7,
        OBJCT LIKE TOBJ-OBJCT,
        OCLSS LIKE TOBJ-OCLSS,
        FIELDNAME LIKE DD03L-FIELDNAME,
        TABNAME LIKE DD03L-TABNAME,
        CHECKTABLE LIKE DD03L-CHECKTABLE,
        DOMNAME LIKE DD03L-DOMNAME.
  DATA: END OF ACETOBJ7.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACETOBJ7'.
  FILENUM7 = FILENUM.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table TOBJ7'.

  PERFORM ADDB3 USING 'OBJCT' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OCLSS' 0 'TOBJ' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FIELDNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TABNAME' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'CHECKTABLE' 0 'DD03L' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'DOMNAME' 0 'DD03L' '' '' '' '' '' ''.

* Selection
  DATA: FLD LIKE TOBJ-FIEL1,
        OBJ LIKE TOBJ-OBJCT,
        FOUND(1) TYPE C.
  DATA: ANZREC TYPE I.

  SELECT      FIELDNAME
              TABNAME
              CHECKTABLE
              ROLLNAME
              ENTITYTAB
              DOMNAME
              DDTEXT
              DDLANGUAGE
         INTO TABLE
              IDD03M
         FROM DD03M
        WHERE TABNAME IN ('AUTHA','AUTHB','AUTHBIW')
          AND FLDSTAT    = 'A'
          AND ROLLSTAT   = 'A'
          AND DOMSTAT    = 'A'
          AND TEXTSTAT   = 'A'.

  SELECT        OBJCT
                FIEL1
                FIEL2
                FIEL3
                FIEL4
                FIEL5
                FIEL6
                FIEL7
                FIEL8
                FIEL9
                FIEL0
                OCLSS
           INTO TABLE
                ITOBJ
   PACKAGE SIZE 1000
           FROM TOBJ.

    LOOP AT ITOBJ ASSIGNING <ZTOBJ>.
      DO 10 TIMES VARYING FLD FROM <ZTOBJ>-FIEL1 NEXT <ZTOBJ>-FIEL2.
        IF FLD <> ''.
          OBJ = <ZTOBJ>-OBJCT.

          FOUND = ' '.

          READ TABLE IDD03M
              WITH KEY TABNAME    = 'AUTHA'
                       FIELDNAME  = FLD
                       DDLANGUAGE = SY-LANGU
             ASSIGNING <ZDD03M>.

          IF sy-subrc <> 0.
            READ TABLE IDD03M
                WITH KEY TABNAME    = 'AUTHA'
                         FIELDNAME  = FLD
               ASSIGNING <ZDD03M>.
          ENDIF.

          IF sy-subrc <> 0.
            READ TABLE IDD03M
                WITH KEY TABNAME    = 'AUTHB'
                         FIELDNAME  = FLD
                         DDLANGUAGE = SY-LANGU
               ASSIGNING <ZDD03M>.
          ENDIF.

          IF sy-subrc <> 0.
            READ TABLE IDD03M
                WITH KEY TABNAME    = 'AUTHB'
                         FIELDNAME  = FLD
               ASSIGNING <ZDD03M>.
          ENDIF.

          IF sy-subrc <> 0.
            READ TABLE IDD03M
                WITH KEY TABNAME    = 'AUTHBIW'
                         FIELDNAME  = FLD
                         DDLANGUAGE = SY-LANGU
               ASSIGNING <ZDD03M>.
          ENDIF.

          IF sy-subrc <> 0.
            READ TABLE IDD03M
                WITH KEY TABNAME    = 'AUTHBIW'
                         FIELDNAME  = FLD
               ASSIGNING <ZDD03M>.
          ENDIF.

          IF sy-subrc = 0.
             FOUND = 'Y'.
          ENDIF.

          "TYP D
          MOVE OBJ                   TO ACETOBJ1-OBJCT.
          MOVE <ZTOBJ>-OCLSS         TO ACETOBJ1-OCLSS.
          MOVE FLD                   TO ACETOBJ1-FIELDNAME.
          IF FOUND = 'Y'.
            MOVE <ZDD03M>-TABNAME    TO ACETOBJ1-TABNAME.
            MOVE <ZDD03M>-CHECKTABLE TO ACETOBJ1-CHECKTABLE.
            MOVE <ZDD03M>-ROLLNAME   TO ACETOBJ1-ROLLNAME.
            MOVE <ZDD03M>-DOMNAME    TO ACETOBJ1-DOMNAME.
            MOVE <ZDD03M>-DDTEXT     TO ACETOBJ1-DDTEXT.
          ELSE.
            MOVE ''                  TO ACETOBJ1-TABNAME.
            MOVE ''                  TO ACETOBJ1-CHECKTABLE.
            MOVE ''                  TO ACETOBJ1-ROLLNAME.
            MOVE ''                  TO ACETOBJ1-DOMNAME.
            MOVE ''                  TO ACETOBJ1-DDTEXT.
          ENDIF.

          PERFORM ADDBSET USING 'N' FILENUM1 'M' 'ACETOBJ1'.
          REPLACE ALL OCCURRENCES OF TRANSTXT IN ACETOBJ1 WITH REPLCHAR.
          REPLACE ALL OCCURRENCES OF TRANSSEP IN ACETOBJ1 WITH REPLCHAR.
          CONCATENATE
                      ACETOBJ1-OBJCT
                      ACETOBJ1-OCLSS
                      ACETOBJ1-FIELDNAME
                      ACETOBJ1-TABNAME
                      ACETOBJ1-CHECKTABLE
                      ACETOBJ1-ROLLNAME
                      ACETOBJ1-DOMNAME
                      ACETOBJ1-DDTEXT
                      INTO TRANSREC
                      SEPARATED BY TRANSSEP.
          PERFORM TRANS.
          FILENUM1 = ADDBNR.

          IF ACETOBJ1-TABNAME = ''.
            CONTINUE.
          ENDIF.

          IF FOUND = 'Y'.
            CASE <ZDD03M>-CHECKTABLE.
              WHEN '*'.
                SELECT        COUNT( * )
                         INTO (ANZREC)
                         FROM DD03M
                        WHERE TABNAME    =  <ZDD03M>-DOMNAME
                          AND FLDSTAT    = 'A'
                          AND ROLLSTAT   = 'A'
                          AND DOMSTAT    = 'A'
                          AND TEXTSTAT   = 'A'
                          AND DDLANGUAGE = SY-LANGU
                          AND KEYFLAG    =  'X'
                          AND CHECKTABLE <> 'T000'
                          AND CHECKTABLE <> 'T002'
                          AND ENTITYTAB  <> 'T000'
                          AND ENTITYTAB  <> 'T002'.
                IF ANZREC = 1.
                  "TYP *
                  MOVE OBJ                TO ACETOBJ2-OBJCT.
                  MOVE <ZTOBJ>-OCLSS      TO ACETOBJ2-OCLSS.
                  MOVE <ZDD03M>-FIELDNAME TO ACETOBJ2-FIELDNAME.
                  MOVE <ZDD03M>-TABNAME   TO ACETOBJ2-TABNAME.
                  MOVE <ZDD03M>-ENTITYTAB TO ACETOBJ2-ENTITYTAB.
                  MOVE <ZDD03M>-DOMNAME   TO ACETOBJ2-DOMNAME.
                  PERFORM ADDBSET USING 'N' FILENUM2 'M' 'ACETOBJ2'.
                  REPLACE ALL OCCURRENCES OF TRANSTXT
                          IN ACETOBJ2 WITH REPLCHAR.
                  REPLACE ALL OCCURRENCES OF TRANSSEP
                          IN ACETOBJ2 WITH REPLCHAR.
                  CONCATENATE
                              ACETOBJ2-OBJCT
                              ACETOBJ2-OCLSS
                              ACETOBJ2-FIELDNAME
                              ACETOBJ2-TABNAME
                              ACETOBJ2-ENTITYTAB
                              ACETOBJ2-DOMNAME
                              INTO TRANSREC
                              SEPARATED BY TRANSSEP.
                  PERFORM TRANS.
                  FILENUM2 = ADDBNR.
                ENDIF.

              WHEN ''.
                SELECT        DDTEXT
                              DOMVALUE_L
                         FROM DD07V
                         INTO (WDD07V-DDTEXT
                              ,WDD07V-DOMVALUE_L
                              )
                        WHERE DOMNAME    = <ZDD03M>-DOMNAME
                          AND DDLANGUAGE = SY-LANGU.
                  "TYP -
                  MOVE OBJ                TO ACETOBJ4-OBJCT.
                  MOVE <ZTOBJ>-OCLSS      TO ACETOBJ4-OCLSS.
                  MOVE <ZDD03M>-FIELDNAME TO ACETOBJ4-FIELDNAME.
                  MOVE <ZDD03M>-TABNAME   TO ACETOBJ4-TABNAME.
                  MOVE WDD07V-DDTEXT      TO ACETOBJ4-DDTEXT.
                  MOVE WDD07V-DOMVALUE_L  TO ACETOBJ4-DOMVALUE_L.
                  PERFORM ADDBSET USING 'N' FILENUM4 'M' 'ACETOBJ4'.
                  REPLACE ALL OCCURRENCES OF TRANSTXT
                          IN ACETOBJ4 WITH REPLCHAR.
                  REPLACE ALL OCCURRENCES OF TRANSSEP
                          IN ACETOBJ4 WITH REPLCHAR.
                  CONCATENATE
                              ACETOBJ4-OBJCT
                              ACETOBJ4-OCLSS
                              ACETOBJ4-FIELDNAME
                              ACETOBJ4-TABNAME
                              ACETOBJ4-DDTEXT
                              ACETOBJ4-DOMVALUE_L
                              INTO TRANSREC
                              SEPARATED BY TRANSSEP.
                  PERFORM TRANS.
                  FILENUM4 = ADDBNR.
                ENDSELECT.

              WHEN OTHERS.
                SELECT        COUNT( * )
                         INTO (ANZREC)
                         FROM DD03M
                        WHERE TABNAME    =  <ZDD03M>-CHECKTABLE
                          AND DDLANGUAGE = SY-LANGU
                          AND FLDSTAT    = 'A'
                          AND ROLLSTAT   = 'A'
                          AND DOMSTAT    = 'A'
                          AND TEXTSTAT   = 'A'
                          AND KEYFLAG    =  'X'
                          AND CHECKTABLE <> 'T000'
                          AND CHECKTABLE <> 'T002'
                          AND ENTITYTAB  <> 'T000'
                          AND ENTITYTAB  <> 'T002'.
                IF ANZREC = 1.
                  "TYP C
                  MOVE OBJ                 TO ACETOBJ7-OBJCT.
                  MOVE <ZTOBJ>-OCLSS       TO ACETOBJ7-OCLSS.
                  MOVE <ZDD03M>-FIELDNAME  TO ACETOBJ7-FIELDNAME.
                  MOVE <ZDD03M>-TABNAME    TO ACETOBJ7-TABNAME.
                  MOVE <ZDD03M>-CHECKTABLE TO ACETOBJ7-CHECKTABLE.
                  MOVE <ZDD03M>-DOMNAME    TO ACETOBJ7-DOMNAME.
                  PERFORM ADDBSET USING 'N' FILENUM7 'M' 'ACETOBJ7'.
                  REPLACE ALL OCCURRENCES OF TRANSTXT
                          IN ACETOBJ7 WITH REPLCHAR.
                  REPLACE ALL OCCURRENCES OF TRANSSEP
                          IN ACETOBJ7 WITH REPLCHAR.
                  CONCATENATE
                              ACETOBJ7-OBJCT
                              ACETOBJ7-OCLSS
                              ACETOBJ7-FIELDNAME
                              ACETOBJ7-TABNAME
                              ACETOBJ7-CHECKTABLE
                              ACETOBJ7-DOMNAME
                              INTO TRANSREC
                              SEPARATED BY TRANSSEP.
                  PERFORM TRANS.
                  FILENUM7 = ADDBNR.
                ENDIF.
            ENDCASE.
          ENDIF.
        ENDIF.
      ENDDO.
    ENDLOOP.
  ENDSELECT.

  PERFORM ADDBSET USING 'N' FILENUM1 'M' 'ACETOBJ1'.
  PERFORM CLOSEFILE.
  PERFORM ADDBSET USING 'N' FILENUM2 'M' 'ACETOBJ2'.
  PERFORM CLOSEFILE.
  PERFORM ADDBSET USING 'N' FILENUM4 'M' 'ACETOBJ4'.
  PERFORM CLOSEFILE.
  PERFORM ADDBSET USING 'N' FILENUM7 'M' 'ACETOBJ7'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'TOBJ' 'A' ''.

ENDFORM.                    "EXPTOBJ

*---------------------------------------------------------------------*
*       FORM EXPUSR04                                                 *
*---------------------------------------------------------------------*
FORM EXPUSR04.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACE04'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table ACE04'.

  PERFORM ADDB3 USING 'MANDT' 0 'USR04' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'BNAME' 0 'USR04' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'PROFN' 0 'USR10' '' '' '' '' '' ''.

  CONCATENATE 'ACE04: User Profile (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  SELECT        MANDT
                BNAME
                NRPRO
                PROFS
           INTO TABLE
                ITUSR04
   PACKAGE SIZE 1000
           FROM USR04.

    LOOP AT ITUSR04 ASSIGNING <ZUSR04>.
      PERFORM EXPSUBUSR04.
    ENDLOOP.

  ENDSELECT.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACE04'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPACE04' 'A' ''.
ENDFORM.                       "EXPUSR04

*---------------------------------------------------------------------*
*       FORM EXPSUBUSR04                                              *
*---------------------------------------------------------------------*
FORM EXPSUBUSR04.
  DATA: BEGIN OF ACE04,
        MANDT LIKE USR04-MANDT,
        BNAME LIKE USR04-BNAME,
        PROFN LIKE USR10-PROFN.
  DATA: END OF ACE04.

  DATA: PROFLNG LIKE SY-FDPOS VALUE 12
       ,NRPRO TYPE I
       ,OFF TYPE I.
  FIELD-SYMBOLS: <TEXT>.

  NRPRO = <ZUSR04>-NRPRO / PROFLNG.
  OFF = 2.
  DO NRPRO TIMES.
    ASSIGN <ZUSR04>-PROFS+OFF(PROFLNG) TO <TEXT>.
    MOVE <ZUSR04>-MANDT       TO ACE04-MANDT.
    MOVE <ZUSR04>-BNAME       TO ACE04-BNAME.
    MOVE <TEXT>               TO ACE04-PROFN.
    OFF = OFF + PROFLNG.

*   Correct Space
    IF ACE04-BNAME+0(1) = ' '.
      ACE04-BNAME+0(1) = '_'.
    ENDIF.
    IF ACE04-PROFN+0(1) = ' '.
      ACE04-PROFN+0(1) = '_'.
    ENDIF.

    REPLACE ALL OCCURRENCES OF TRANSTXT IN ACE04 WITH REPLCHAR.
    REPLACE ALL OCCURRENCES OF TRANSSEP IN ACE04 WITH REPLCHAR.
    CONCATENATE
                ACE04-MANDT
                ACE04-BNAME
                ACE04-PROFN
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDDO.
ENDFORM.                    "EXPSUBUSR04

*---------------------------------------------------------------------*
*       FORM EXPUSR10                                                 *
*---------------------------------------------------------------------*
FORM EXPUSR10.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACE10'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table ACE10'.
  PERFORM ADDB3 USING 'MANDT' 0 'USR10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TYP' 0 'USR10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'PROFN' 0 'USR10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OBJCT' 0 'USR12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'AUTH' 0 'USR12' '' '' '' '' '' ''.

  CONCATENATE 'ACE10: Profile Profile Auth (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  SELECT        MANDT
                TYP
                PROFN
                NRAUT
                AUTHS
           INTO TABLE
                ITUSR10
   PACKAGE SIZE 1000
           FROM USR10
          WHERE AKTPS = 'A'.

    LOOP AT ITUSR10 ASSIGNING <ZUSR10>.
      PERFORM EXPSUBUSR10.
    ENDLOOP.

  ENDSELECT.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACE10'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPUSR10' 'A' ''.
ENDFORM.                                                    "EXPUSR10

*---------------------------------------------------------------------*
*       FORM EXPSUBUSR10                                              *
*---------------------------------------------------------------------*
FORM EXPSUBUSR10.
  DATA: BEGIN OF ACE10,
          MANDT LIKE USR10-MANDT,
          TYP   LIKE USR10-TYP,
          PROFN LIKE USR10-PROFN,
          OBJCT LIKE USR12-OBJCT,
          AUTH  LIKE USR12-AUTH.
  DATA: END OF ACE10.

  DATA: PROFLNG LIKE SY-FDPOS VALUE 12
       ,OBJLNG  LIKE SY-FDPOS VALUE 10
       ,AUTHLNG LIKE SY-FDPOS VALUE 12
       ,OBAULNG LIKE SY-FDPOS VALUE 22
       ,NRAUT TYPE I
       ,OFF TYPE I.
  FIELD-SYMBOLS: <TEXT>.
  FIELD-SYMBOLS: <TEXT1>.

  IF <ZUSR10>-TYP = 'C'.
    NRAUT = <ZUSR10>-NRAUT / PROFLNG.
  ELSE.
    NRAUT = <ZUSR10>-NRAUT / OBAULNG.
  ENDIF.

  OFF = 2.
  DO NRAUT TIMES.
    IF <ZUSR10>-TYP = 'C'.
      ASSIGN <ZUSR10>-AUTHS+OFF(PROFLNG) TO <TEXT>.
      MOVE <ZUSR10>-MANDT        TO ACE10-MANDT.
      MOVE <ZUSR10>-TYP          TO ACE10-TYP.
      MOVE <ZUSR10>-PROFN        TO ACE10-PROFN.
      MOVE ''                    TO ACE10-OBJCT.
      MOVE <TEXT>                TO ACE10-AUTH.
      OFF = OFF + PROFLNG.
    ELSE.
      ASSIGN <ZUSR10>-AUTHS+OFF(OBJLNG) TO <TEXT>.
      OFF = OFF + OBJLNG.
      ASSIGN <ZUSR10>-AUTHS+OFF(AUTHLNG) TO <TEXT1>.
      MOVE <ZUSR10>-MANDT        TO ACE10-MANDT.
      MOVE <ZUSR10>-TYP          TO ACE10-TYP.
      MOVE <ZUSR10>-PROFN        TO ACE10-PROFN.
      MOVE <TEXT>                TO ACE10-OBJCT.
      MOVE <TEXT1>               TO ACE10-AUTH.
      OFF = OFF + AUTHLNG.
    ENDIF.

*   Correct Space
    IF ACE10-PROFN+0(1) = ' '.
      ACE10-PROFN+0(1) = '_'.
    ENDIF.
    IF ACE10-AUTH+0(1) = ' '.
      ACE10-AUTH+0(1) = '_'.
    ENDIF.

    REPLACE ALL OCCURRENCES OF TRANSTXT IN ACE10 WITH REPLCHAR.
    REPLACE ALL OCCURRENCES OF TRANSSEP IN ACE10 WITH REPLCHAR.
    CONCATENATE
                ACE10-MANDT
                ACE10-TYP
                ACE10-PROFN
                ACE10-OBJCT
                ACE10-AUTH
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDDO.
ENDFORM.                    "EXPSUBUSR10

*---------------------------------------------------------------------*
*       FORM EXPUSR12                                                 *
*---------------------------------------------------------------------*
FORM EXPUSR12.
  DATA: BEGIN OF wobj,
          objct TYPE tobj-objct,
        END OF wobj,
        iobj LIKE TABLE OF wobj.
  FIELD-SYMBOLS <zobj> LIKE LINE OF iobj.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACE12'.
  PERFORM OPENFILE USING 'OUTPUT'.
  PERFORM ADDB2 USING 'Y' 'Int. table ACE12'.
  PERFORM ADDB3 USING 'MANDT' 0 'USR12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OBJCT' 0 'USR12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'AUTH' 0 'USR12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'FLD' 0 'TOBJ' 'FIEL1' '' '' '' '' ''.
  PERFORM ADDB3 USING 'IND' 10 '' '' '' '' 'Index' 'Index' ''.
  PERFORM ADDB3 USING 'VTYP' 10 '' '' '' '' 'Type' 'Type' ''.
  PERFORM ADDB3 USING 'VVON' 18 '' '' '' '' 'From' 'From' ''.
  PERFORM ADDB3 USING 'VBIS' 18 '' '' '' '' 'Until' 'Until' ''.

  CONCATENATE 'ACE12: Profile Value (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  SELECT   OBJCT
      INTO TABLE
           iobj
      FROM TOBJ.

    LOOP AT iobj ASSIGNING <zobj>.
      SELECT        *
               INTO TABLE
                    ITUSR12
       PACKAGE SIZE 1000
               FROM USR12
              WHERE OBJCT = <zobj>-OBJCT
                AND AKTPS = 'A'.

        LOOP AT ITUSR12 ASSIGNING <ZUSR12>.
          PERFORM EXPSUBUSR12.
        ENDLOOP.

      ENDSELECT.
    ENDLOOP.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACE12'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPUSR12' 'A' ''.
ENDFORM.                                                    "EXPUSR12

*---------------------------------------------------------------------*
*       FORM EXPSUBUSR12                                              *
*---------------------------------------------------------------------*
FORM EXPSUBUSR12.
  DATA: ERRORFLAG(1) TYPE C.

  DATA: BEGIN OF ACE12,
          MANDT LIKE USR12-MANDT,
          OBJCT LIKE USR12-OBJCT,
          AUTH  LIKE USR12-AUTH,
          FLD   LIKE TOBJ-FIEL1,
          IND(10) TYPE C,
          VTYP(10) TYPE C,
          VVON(50) TYPE C,
          VBIS(50) TYPE C,
        END OF ACE12.

  DATA: INTFLAG TYPE I VALUE 0
       ,PRTFLAG TYPE I VALUE 0
       ,IND TYPE I
       ,VTYP(10) TYPE C
       ,FNAME(100) TYPE C
       ,WERTVON(100) TYPE C
       ,WERTBIS(100) TYPE C
       ,CLNG(2) TYPE C
       ,LNG TYPE I
       ,GLNG TYPE I.

  DATA: FLDLNG  LIKE SY-FDPOS VALUE 10
       ,OFF TYPE I.
  FIELD-SYMBOLS: <TEXT>.

  IF <ZUSR12>-OBJCT = ''.
    MOVE 'Error: Rec in USR12 with empty OBJCT'
                            TO ZEILE.
*    PERFORM ADDB0007 USING ZEILE.
  ELSE.
    CATCH SYSTEM-EXCEPTIONS CONVT_NO_NUMBER = 1
                            ARITHMETIC_ERRORS = 2
                            CONVERSION_ERRORS = 4
                            DATA_ACCESS_ERRORS = 8
                            OTHERS = 16.
      OFF = 2.
      ASSIGN <ZUSR12>-VALS+OFF(1) TO <TEXT>.
      MOVE <TEXT> TO VTYP.
      ERRORFLAG = ''.

      WHILE VTYP <> '  ' AND OFF < <ZUSR12>-LNG AND ERRORFLAG = ''.
        PRTFLAG = 0.
        WERTBIS = SPACE.
        OFF = OFF + 1.
        CASE VTYP.
          WHEN 'F'. "Fieldname
            IND = 1.
            OFF = OFF + 5.
            ASSIGN <ZUSR12>-VALS+OFF(2) TO <TEXT>.
            MOVE <TEXT> TO CLNG.
            LNG = CLNG.
            OFF = OFF + 2.
            ASSIGN <ZUSR12>-VALS+OFF(FLDLNG) TO <TEXT>.
            MOVE <TEXT> TO FNAME.
            OFF = OFF + FLDLNG.
            IF LNG = 0.
              ERRORFLAG = 'L'.
            ENDIF.
          WHEN 'E'. "Single Value
            ASSIGN <ZUSR12>-VALS+OFF(LNG) TO <TEXT>.
            MOVE <TEXT> TO WERTVON.
            OFF = OFF + LNG.
            PRTFLAG = 1.
          WHEN 'G'. "Generic Value
            ASSIGN <ZUSR12>-VALS+OFF(2) TO <TEXT>.
            MOVE <TEXT> TO CLNG.
            GLNG = CLNG.
            OFF = OFF + 2.
            ASSIGN <ZUSR12>-VALS+OFF(LNG) TO <TEXT>.
            IF INTFLAG = 0.
              MOVE <TEXT> TO WERTVON.
              MOVE '*' TO WERTVON+GLNG.
            ELSE.
              MOVE <TEXT> TO WERTBIS.
              MOVE '*' TO WERTBIS+GLNG.
              INTFLAG = 0.
            ENDIF.
            OFF = OFF + LNG.
            PRTFLAG = 1.
          WHEN 'V'. "Start Interval
            INTFLAG = 1.
            ASSIGN <ZUSR12>-VALS+OFF(LNG) TO <TEXT>.
            MOVE <TEXT> TO WERTVON.
            OFF = OFF + LNG.
          WHEN 'B'. "End Interval
            INTFLAG = 0.
            ASSIGN <ZUSR12>-VALS+OFF(LNG) TO <TEXT>.
            MOVE <TEXT> TO WERTBIS.
            OFF = OFF + LNG.
            PRTFLAG = 1.
        ENDCASE.

        IF PRTFLAG = 1.
          MOVE <ZUSR12>-MANDT      TO ACE12-MANDT.
          MOVE <ZUSR12>-OBJCT      TO ACE12-OBJCT.
          MOVE <ZUSR12>-AUTH       TO ACE12-AUTH.
          MOVE FNAME               TO ACE12-FLD.
          MOVE IND                 TO ACE12-IND.
          MOVE VTYP                TO ACE12-VTYP.
          MOVE WERTVON             TO ACE12-VVON.
          MOVE WERTBIS             TO ACE12-VBIS.
          IND = IND + 1.

*         Correct Space
          IF ACE12-AUTH+0(1) = ' '.
            ACE12-AUTH+0(1) = '_'.
          ENDIF.

          REPLACE ALL OCCURRENCES OF TRANSTXT IN ACE12 WITH REPLCHAR.
          REPLACE ALL OCCURRENCES OF TRANSSEP IN ACE12 WITH REPLCHAR.
          CONCATENATE
            ACE12-MANDT
            ACE12-OBJCT
            ACE12-AUTH
            ACE12-FLD
            ACE12-IND
            ACE12-VTYP
            ACE12-VVON
            ACE12-VBIS
              INTO TRANSREC
              SEPARATED BY TRANSSEP.
          PERFORM TRANS.
        ENDIF.

        ASSIGN <ZUSR12>-VALS+OFF(1) TO <TEXT>.
        MOVE <TEXT> TO VTYP.
      ENDWHILE.

    ENDCATCH.

    IF SY-SUBRC <> 0.
      ERRCODE = SY-SUBRC.
      CONCATENATE 'Data Error USR12:'
                  'E:' ERRCODE
                  'O:' <ZUSR12>-OBJCT
                  'A:' <ZUSR12>-AUTH
                  INTO ZEILE
                  SEPARATED BY SPACE.
*      PERFORM ADDB0007 USING ZEILE.
    ENDIF.

    CASE ERRORFLAG.
      WHEN 'L'.
        CONCATENATE 'Data Error USR12:'
                    'E:' 'LNG = 0'
                    'O:' <ZUSR12>-OBJCT
                    'A:' <ZUSR12>-AUTH
                    INTO ZEILE
                    SEPARATED BY SPACE.
*        PERFORM ADDB0007 USING ZEILE.
    ENDCASE.
  ENDIF.

ENDFORM.                    "EXPSUBUSR12

*---------------------------------------------------------------------*
*       FORM EXPPARAM                                                 *
*---------------------------------------------------------------------*
FORM EXPPARAM.

  TYPES: BEGIN OF PAR_SUB_TYPE,
         STATUS LIKE SY-INDEX,
         NAME(60) TYPE C,
         USER_WERT(60) TYPE C,
         DEFAULT_WERT(60) TYPE C,
         END OF PAR_SUB_TYPE.

  DATA: PAR_USUB TYPE PAR_SUB_TYPE OCCURS 0 WITH HEADER LINE,
        PAR_SUB  TYPE PAR_SUB_TYPE OCCURS 0 WITH HEADER LINE.

  FREE PAR_USUB.
  FREE PAR_SUB.

  DATA: BEGIN OF ACEPARAM,
        STATUS(1) TYPE C,
        NAME(60) TYPE C,
        USER_WERT(60) TYPE C,
        DEFAULT_WERT(60) TYPE C.
  DATA: END OF ACEPARAM.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEPARAM'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'System parameter'.

  PERFORM ADDB3 USING 'TYP' 1 '' '' '' '' 'Type' 'T' ''.
  PERFORM ADDB3 USING 'PARAM' 60 '' '' '' '' 'Parameter' 'Parameter' ''.
  PERFORM ADDB3 USING 'USER' 60 '' '' '' '' 'User defined'
                                            'User defined' ''.
  PERFORM ADDB3 USING 'DEFAULT' 60 '' '' '' '' 'Default' 'Default' ''.

  CONCATENATE 'ACEPARAM: Parameter (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  CALL 'C_SAPGALLPARAM' ID 'PAR_USUB' FIELD PAR_USUB-*SYS*
                        ID 'PAR_SUB' FIELD PAR_SUB-*SYS*.
  LOOP AT PAR_SUB.
    MOVE-CORRESPONDING PAR_SUB    TO ACEPARAM.
    REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEPARAM WITH REPLCHAR.
    REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEPARAM WITH REPLCHAR.
    CONCATENATE
                ACEPARAM-STATUS
                ACEPARAM-NAME
                ACEPARAM-USER_WERT
                ACEPARAM-DEFAULT_WERT
                INTO TRANSREC
                SEPARATED BY TRANSSEP.
    PERFORM TRANS.
  ENDLOOP.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEPARAM'.
  PERFORM CLOSEFILE.
  FREE PAR_USUB.
  FREE PAR_SUB.

  PERFORM EXECCOMMIT USING 'EXPPARAM' 'A' ''.
ENDFORM.                                                    "EXPPARAM



*---------------------------------------------------------------------*
*      Form  EXPUSRLOG                                                *
*---------------------------------------------------------------------*
FORM EXPUSRLOG.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEUSRLOG'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table Log of User Changes'.

  PERFORM ADDB3 USING 'MANDT' 0 'USH02' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'BNAME' 0 'USH02' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODBE' 0 'USH02' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODDA' 0 'USH02' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODTI' 0 'USH02' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TCODE' 0 'USH02' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OPTYPE' 1 '' '' '' '' 'Chg Ind' 'C' ''.
  PERFORM ADDB3 USING 'FIELDNAME' 30 '' ''
                '' '' 'Field Name' 'FldName' ''.
  PERFORM ADDB3 USING 'SCRTEXT' 10 '' '' '' '' 'Label' 'Label' ''.
  PERFORM ADDB3 USING 'OLD' 50 '' '' '' '' 'Old Value' 'Old Value' ''.
  PERFORM ADDB3 USING 'NEW' 50 '' '' '' '' 'New Value' 'New Value' ''.

  CONCATENATE 'ACEUSRLOG: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
    SELECT DISTINCT
                  MANDT
                  BNAME
             INTO TABLE
                  ITUSRLOGSEL
     PACKAGE SIZE 1000
             FROM USH02
                  CLIENT SPECIFIED
            WHERE MODDA >= CDSDATE.

      LOOP AT ITUSRLOGSEL ASSIGNING <ZUSRLOGSEL>.
        PERFORM EXPSUBUSRLOGA.
      ENDLOOP.

    ENDSELECT.
  ELSE.
    SELECT DISTINCT
                  MANDT
                  BNAME
             INTO TABLE
                  ITUSRLOGSEL
     PACKAGE SIZE 1000
             FROM USH02
            WHERE MODDA >= CDSDATE.

      LOOP AT ITUSRLOGSEL ASSIGNING <ZUSRLOGSEL>.
        PERFORM EXPSUBUSRLOGA.
      ENDLOOP.

    ENDSELECT.
  ENDIF.

  IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
    SELECT
                  MANDT
                  BNAME
                  NRPRO
                  PROFS
                  MODDA
                  MODTI
                  MODBE
             INTO TABLE
                  ITUSRLOGEXT
     PACKAGE SIZE 1000
             FROM USR04
                  CLIENT SPECIFIED
            WHERE MODDA >= CDSDATE.

      LOOP AT ITUSRLOGEXT ASSIGNING <ZUSRLOGEXT>.
        PERFORM EXPSUBUSRLOGB.
      ENDLOOP.

    ENDSELECT.
  ELSE.
    SELECT
                  MANDT
                  BNAME
                  NRPRO
                  PROFS
                  MODDA
                  MODTI
                  MODBE
             INTO TABLE
                  ITUSRLOGEXT
     PACKAGE SIZE 1000
             FROM USR04
            WHERE MODDA >= CDSDATE.

      LOOP AT ITUSRLOGEXT ASSIGNING <ZUSRLOGEXT>.
        PERFORM EXPSUBUSRLOGB.
      ENDLOOP.

    ENDSELECT.
  ENDIF.

  IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
    SELECT
                  MANDT
                  BNAME
                  NRPRO
                  PROFS
                  MODDA
                  MODTI
                  MODBE
             INTO TABLE
                  ITUSRLOGEXT
     PACKAGE SIZE 1000
             FROM USH04
                  CLIENT SPECIFIED
            WHERE MODDA >= CDSDATE
         ORDER BY MANDT
                  BNAME
                  MODDA DESCENDING
                  MODTI DESCENDING.

      LOOP AT ITUSRLOGEXT ASSIGNING <ZUSRLOGEXT>.
        PERFORM EXPSUBUSRLOGB.
      ENDLOOP.

    ENDSELECT.
  ELSE.
    SELECT
                  MANDT
                  BNAME
                  NRPRO
                  PROFS
                  MODDA
                  MODTI
                  MODBE
             INTO TABLE
                  ITUSRLOGEXT
     PACKAGE SIZE 1000
             FROM USH04
            WHERE MODDA >= CDSDATE
         ORDER BY BNAME
                  MODDA DESCENDING
                  MODTI DESCENDING.

      LOOP AT ITUSRLOGEXT ASSIGNING <ZUSRLOGEXT>.
        PERFORM EXPSUBUSRLOGB.
      ENDLOOP.

    ENDSELECT.
  ENDIF.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEUSRLOG'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPUSRLOG' 'A' ''.
ENDFORM.                                                    "EXPUSRLOG


*---------------------------------------------------------------------*
*      Form  EXPSUBUSRLOGA
*---------------------------------------------------------------------*
FORM EXPSUBUSRLOGA.
  DATA: BEGIN OF WUSH02
         ,STATUS(1) TYPE C
         ,BCODE LIKE USH02-BCODE
         ,GLTGV LIKE USH02-GLTGV
         ,GLTGB LIKE USH02-GLTGB
         ,USTYP LIKE USH02-USTYP
         ,CLASS LIKE USH02-CLASS
         ,UFLAG LIKE USH02-UFLAG
         ,PWDINITIAL TYPE I
       ,END OF WUSH02.

  DATA: BEGIN OF CHG
     ,STATUS(1) TYPE C
     ,BCODE LIKE USH02-BCODE
     ,GLTGV LIKE USH02-GLTGV
     ,GLTGB LIKE USH02-GLTGB
     ,USTYP LIKE USH02-USTYP
     ,CLASS LIKE USH02-CLASS
     ,UFLAG LIKE USH02-UFLAG
     ,PWDINITIAL TYPE I
     ,END OF CHG.

  WUSH02-PWDINITIAL = 0.
  CHG-STATUS = ' '.

  SELECT        *
           FROM USH02
                CLIENT SPECIFIED
          WHERE MANDT = <ZUSRLOGSEL>-MANDT
            AND BNAME = <ZUSRLOGSEL>-BNAME
       ORDER BY MODDA DESCENDING
                MODTI DESCENDING.

    IF CHG-STATUS = ' '.
      CHG-STATUS = 'F'.
      MOVE-CORRESPONDING USH02   TO CHG.
      ACEUSRLOG-MANDT = <ZUSRLOGSEL>-MANDT.
      ACEUSRLOG-BNAME = <ZUSRLOGSEL>-BNAME.
      IF ACEUSRLOG-BNAME+0(1) = ' '.
        ACEUSRLOG-BNAME+0(1) = '_'.
      ENDIF.
      ACEUSRLOG-MODBE = USH02-MODBE.
      ACEUSRLOG-MODDA = USH02-MODDA.
      ACEUSRLOG-MODTI = USH02-MODTI.
      ACEUSRLOG-TCODE = USH02-TCODE.
    ELSE.
      ACEUSRLOG-OPTYPE = 'U'.
      IF CHG-BCODE <> USH02-BCODE.
        ACEUSRLOG-FIELDNAME = 'BCODE'.
        ACEUSRLOG-SCRTEXT = 'Password'.
        ACEUSRLOG-OLD = USH02-BCODE.
        ACEUSRLOG-NEW = CHG-BCODE.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.
      IF CHG-GLTGV <> USH02-GLTGV.
        ACEUSRLOG-FIELDNAME = 'GLTGV'.
        ACEUSRLOG-SCRTEXT = 'Valid From'.
        ACEUSRLOG-OLD = USH02-GLTGV.
        ACEUSRLOG-NEW = CHG-GLTGV.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.
      IF CHG-GLTGB <> USH02-GLTGB.
        ACEUSRLOG-FIELDNAME = 'GLTGB'.
        ACEUSRLOG-SCRTEXT = 'Valid To'.
        ACEUSRLOG-OLD = USH02-GLTGB.
        ACEUSRLOG-NEW = CHG-GLTGB.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.
      IF CHG-USTYP <> USH02-USTYP.
        ACEUSRLOG-FIELDNAME = 'USTYP'.
        ACEUSRLOG-SCRTEXT = 'User Type'.
        ACEUSRLOG-OLD = USH02-USTYP.
        ACEUSRLOG-NEW = CHG-USTYP.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.
      IF CHG-CLASS <> USH02-CLASS.
        ACEUSRLOG-FIELDNAME = 'CLASS'.
        ACEUSRLOG-SCRTEXT = 'User Group'.
        ACEUSRLOG-OLD = USH02-CLASS.
        ACEUSRLOG-NEW = CHG-CLASS.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.
      IF CHG-UFLAG <> USH02-UFLAG.
        ACEUSRLOG-FIELDNAME = 'UFLAG'.
        ACEUSRLOG-SCRTEXT = 'Locked'.
        ACEUSRLOG-OLD = USH02-UFLAG.
        ACEUSRLOG-NEW = CHG-UFLAG.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.
      MOVE-CORRESPONDING USH02       TO WUSH02.
      IF CHG-PWDINITIAL <> WUSH02-PWDINITIAL.
        ACEUSRLOG-FIELDNAME = 'PWDINITIAL'.
        ACEUSRLOG-SCRTEXT = 'Pwd Code'.
        ACEUSRLOG-OLD = WUSH02-PWDINITIAL.
        ACEUSRLOG-NEW = CHG-PWDINITIAL.
        PERFORM EXPSUBRECUSRLOG.
      ENDIF.

      IF USH02-MODDA >= CDSDATE.
        MOVE-CORRESPONDING USH02     TO CHG.
        ACEUSRLOG-MANDT = <ZUSRLOGSEL>-MANDT.
        ACEUSRLOG-BNAME = <ZUSRLOGSEL>-BNAME.
        IF ACEUSRLOG-BNAME+0(1) = ' '.
          ACEUSRLOG-BNAME+0(1) = '_'.
        ENDIF.
        ACEUSRLOG-MODBE = USH02-MODBE.
        ACEUSRLOG-MODDA = USH02-MODDA.
        ACEUSRLOG-MODTI = USH02-MODTI.
        ACEUSRLOG-TCODE = USH02-TCODE.
      ELSE.
        CHG-STATUS = 'E'.
        EXIT.
      ENDIF.
    ENDIF.
  ENDSELECT.

  IF CHG-STATUS <> 'E'.
    ACEUSRLOG-OPTYPE = 'I'.
    ACEUSRLOG-FIELDNAME = 'BCODE'.
    ACEUSRLOG-SCRTEXT = 'Password'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-BCODE.
    PERFORM EXPSUBRECUSRLOG.
    ACEUSRLOG-FIELDNAME = 'GLTGV'.
    ACEUSRLOG-SCRTEXT = 'Valid From'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-GLTGV.
    PERFORM EXPSUBRECUSRLOG.
    ACEUSRLOG-FIELDNAME = 'GLTGB'.
    ACEUSRLOG-SCRTEXT = 'Valid To'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-GLTGB.
    PERFORM EXPSUBRECUSRLOG.
    ACEUSRLOG-FIELDNAME = 'USTYP'.
    ACEUSRLOG-SCRTEXT = 'User Type'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-USTYP.
    PERFORM EXPSUBRECUSRLOG.
    ACEUSRLOG-FIELDNAME = 'CLASS'.
    ACEUSRLOG-SCRTEXT = 'User Group'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-CLASS.
    PERFORM EXPSUBRECUSRLOG.
    ACEUSRLOG-FIELDNAME = 'UFLAG'.
    ACEUSRLOG-SCRTEXT = 'Locked'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-UFLAG.
    PERFORM EXPSUBRECUSRLOG.
    ACEUSRLOG-FIELDNAME = 'PWDINITIAL'.
    ACEUSRLOG-SCRTEXT = 'Pwd Code'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = CHG-PWDINITIAL.
    PERFORM EXPSUBRECUSRLOG.
  ENDIF.
ENDFORM.                    "EXPSUBUSRLOGA

*---------------------------------------------------------------------*
*     Form  EXPSUBUSRLOGB
*---------------------------------------------------------------------*
FORM EXPSUBUSRLOGB.
  DATA: OPOS TYPE I
       ,NPOS TYPE I
       ,LOGFOUND(1) TYPE C
       .

  DATA: BEGIN OF WUSRLOGOLD
       ,NRPROO TYPE USH04-NRPRO
       ,PROFSO TYPE USH04-PROFS
       ,MODDAO TYPE USH04-MODDA
       ,MODTIO TYPE USH04-MODTI
       ,END OF WUSRLOGOLD.

  ACEUSRLOG-MANDT = <ZUSRLOGEXT>-MANDT.
  ACEUSRLOG-BNAME = <ZUSRLOGEXT>-BNAME.
  IF ACEUSRLOG-BNAME+0(1) = ' '.
    ACEUSRLOG-BNAME+0(1) = '_'.
  ENDIF.
  ACEUSRLOG-MODBE = <ZUSRLOGEXT>-MODBE.
  ACEUSRLOG-MODDA = <ZUSRLOGEXT>-MODDA.
  ACEUSRLOG-MODTI = <ZUSRLOGEXT>-MODTI.
  ACEUSRLOG-TCODE = ''.

  IF <ZUSRLOGEXT>-NRPRO = 0.
  ELSEIF <ZUSRLOGEXT>-PROFS+0(1) = 'D'.
    ACEUSRLOG-FIELDNAME = 'RECORD'.
    ACEUSRLOG-SCRTEXT = 'Deletion'.
    ACEUSRLOG-OLD = ''.
    ACEUSRLOG-NEW = ''.
    PERFORM EXPSUBRECUSRLOG.
    EXIT.
  ENDIF.

  ACEUSRLOG-FIELDNAME = 'PROF'.
  ACEUSRLOG-SCRTEXT = 'Profile'.

  LOGFOUND = ' '.

  SELECT
                NRPRO
                PROFS
                MODDA
                MODTI
           INTO (WUSRLOGOLD-NRPROO
                ,WUSRLOGOLD-PROFSO
                ,WUSRLOGOLD-MODDAO
                ,WUSRLOGOLD-MODTIO
                )
           FROM USH04
                CLIENT SPECIFIED
          WHERE MANDT = <ZUSRLOGEXT>-MANDT
            AND BNAME = <ZUSRLOGEXT>-BNAME
            AND (   MODDA < <ZUSRLOGEXT>-MODDA
              OR (    MODDA = <ZUSRLOGEXT>-MODDA
                  AND MODTI < <ZUSRLOGEXT>-MODTI
                    )
                )
       ORDER BY MODDA DESCENDING
                MODTI DESCENDING.
    LOGFOUND = 'X'.
    EXIT.
  ENDSELECT.

  IF LOGFOUND = 'X'.
    ACEUSRLOG-OPTYPE = 'U'.
  ELSE.
    ACEUSRLOG-OPTYPE = 'I'.
    WUSRLOGOLD-NRPROO = 0.
    WUSRLOGOLD-PROFSO = ''.
  ENDIF.

  IF WUSRLOGOLD-NRPROO > 3.
    OPOS = 2.
  ELSE.
    OPOS = 9999.
  ENDIF.

  IF <ZUSRLOGEXT>-NRPRO > 3.
    NPOS = 2.
  ELSE.
    NPOS = 9999.
  ENDIF.

  WHILE NPOS < <ZUSRLOGEXT>-NRPRO OR OPOS < WUSRLOGOLD-NRPROO.
    IF NPOS >= <ZUSRLOGEXT>-NRPRO.
      ACEUSRLOG-OLD = WUSRLOGOLD-PROFSO+OPOS(12).
      ACEUSRLOG-NEW = ''.
      PERFORM EXPSUBRECUSRLOG.
      OPOS = OPOS + 12.
    ELSEIF OPOS >= WUSRLOGOLD-NRPROO.
      ACEUSRLOG-OLD = ''.
      ACEUSRLOG-NEW = <ZUSRLOGEXT>-PROFS+NPOS(12).
      PERFORM EXPSUBRECUSRLOG.
      NPOS = NPOS + 12.
    ELSEIF WUSRLOGOLD-PROFSO+OPOS(12) < <ZUSRLOGEXT>-PROFS+NPOS(12).
      ACEUSRLOG-OLD = WUSRLOGOLD-PROFSO+OPOS(12).
      ACEUSRLOG-NEW = ''.
      PERFORM EXPSUBRECUSRLOG.
      OPOS = OPOS + 12.
    ELSEIF WUSRLOGOLD-PROFSO+OPOS(12) > <ZUSRLOGEXT>-PROFS+NPOS(12).
      ACEUSRLOG-OLD = ''.
      ACEUSRLOG-NEW = <ZUSRLOGEXT>-PROFS+NPOS(12).
      PERFORM EXPSUBRECUSRLOG.
      NPOS = NPOS + 12.
    ELSE.
      OPOS = OPOS + 12.
      NPOS = NPOS + 12.
    ENDIF.
  ENDWHILE.

ENDFORM.                    "EXPSUBUSRLOGB

*---------------------------------------------------------------------*
*      Form  EXPSUBRECUSRLOG
*---------------------------------------------------------------------*
FORM EXPSUBRECUSRLOG.
  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEUSRLOG WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEUSRLOG WITH REPLCHAR.
  CONCATENATE
              ACEUSRLOG-MANDT
              ACEUSRLOG-BNAME
              ACEUSRLOG-MODBE
              ACEUSRLOG-MODDA
              ACEUSRLOG-MODTI
              ACEUSRLOG-TCODE
              ACEUSRLOG-OPTYPE
              ACEUSRLOG-FIELDNAME
              ACEUSRLOG-SCRTEXT
              ACEUSRLOG-OLD
              ACEUSRLOG-NEW
              INTO TRANSREC
              SEPARATED BY TRANSSEP.
  PERFORM TRANS.
ENDFORM.                    "EXPSUBRECUSRLOG

*---------------------------------------------------------------------*
*      Form  EXPROLELOG                                               *
*---------------------------------------------------------------------*
FORM EXPROLELOG.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEROLELOG'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table Log of Local Role Changes'.

  PERFORM ADDB3 USING 'MANDANT' 0 'CDHDR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OBJECTID' 0 'CDHDR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'USERNAME' 0 'CDHDR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'UDATE' 0 'CDHDR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'UTIME' 0 'CDHDR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TCODE' 0 'CDHDR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'CHANGE_IND' 0 'CDHDR' '' '' '' '' '' ''.

  CONCATENATE 'ACEROLELOG: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
      SELECT
                    MANDANT
                    OBJECTID
                    CHANGENR
                    USERNAME
                    UDATE
                    UTIME
                    TCODE
                    CHANGE_IND
               INTO TABLE
                    ITROLELOG
       PACKAGE SIZE 1000
               FROM CDHDR
                    CLIENT SPECIFIED
              WHERE UDATE >= CDSDATE
                AND OBJECTCLAS = 'PFCG'.

        LOOP AT ITROLELOG ASSIGNING <ZROLELOG>.
          PERFORM EXPSUBRECROLELOG.
        ENDLOOP.

      ENDSELECT.
  ELSE.
      SELECT
                    MANDANT
                    OBJECTID
                    CHANGENR
                    USERNAME
                    UDATE
                    UTIME
                    TCODE
                    CHANGE_IND
               INTO TABLE
                    ITROLELOG
       PACKAGE SIZE 1000
               FROM CDHDR
              WHERE UDATE >= CDSDATE
                AND OBJECTCLAS = 'PFCG'.

        LOOP AT ITROLELOG ASSIGNING <ZROLELOG>.
          PERFORM EXPSUBRECROLELOG.
        ENDLOOP.

      ENDSELECT.
  ENDIF.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEROLELOG'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPROLELOG' 'A' ''.
ENDFORM.                       "EXPROLELOG

*---------------------------------------------------------------------*
*       FORM EXPSUBRECROLELOG                                         *
*---------------------------------------------------------------------*
FORM EXPSUBRECROLELOG.
  DATA: BEGIN OF ACEROLELOG
       ,MANDANT LIKE CDHDR-MANDANT
       ,OBJECTID LIKE CDHDR-OBJECTID
       ,USERNAME LIKE CDHDR-USERNAME
       ,UDATE LIKE CDHDR-UDATE
       ,UTIME LIKE CDHDR-UTIME
       ,TCODE LIKE CDHDR-TCODE
       ,CHANGE_IND LIKE CDHDR-CHANGE_IND.
  DATA: END OF ACEROLELOG.

  DATA CO TYPE I.

  SELECT        COUNT( * )
           INTO CO
           FROM CDPOS
          WHERE OBJECTCLAS = 'PFCG'
            AND OBJECTID = <ZROLELOG>-OBJECTID
            AND CHANGENR = <ZROLELOG>-CHANGENR
            AND TABNAME <> 'AGR_USERS'.

  IF SY-SUBRC = 4.
    EXIT.
  ENDIF.

  ACEROLELOG-MANDANT = <ZROLELOG>-MANDANT.
  ACEROLELOG-OBJECTID = <ZROLELOG>-OBJECTID.
  ACEROLELOG-USERNAME = <ZROLELOG>-USERNAME.
  IF ACEROLELOG-USERNAME+0(1) = ' '.
    ACEROLELOG-USERNAME+0(1) = '_'.
  ENDIF.
  ACEROLELOG-UDATE = <ZROLELOG>-UDATE.
  ACEROLELOG-UTIME = <ZROLELOG>-UTIME.
  ACEROLELOG-TCODE = <ZROLELOG>-TCODE.
  ACEROLELOG-CHANGE_IND = <ZROLELOG>-CHANGE_IND.

  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEROLELOG WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEROLELOG WITH REPLCHAR.

  CONCATENATE
              ACEROLELOG-MANDANT
              ACEROLELOG-OBJECTID
              ACEROLELOG-USERNAME
              ACEROLELOG-UDATE
              ACEROLELOG-UTIME
              ACEROLELOG-TCODE
              ACEROLELOG-CHANGE_IND
              INTO TRANSREC
              SEPARATED BY TRANSSEP.
  PERFORM TRANS.
ENDFORM.                    "EXPSUBRECROLELOG

*---------------------------------------------------------------------*
*      Form  EXPPROFLOG                                               *
*---------------------------------------------------------------------*
FORM EXPPROFLOG.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEPROFLOG'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table Log of Local Profile Changes'.

  PERFORM ADDB3 USING 'MANDT' 0 'USH10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'PROFN' 0 'USH10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TYP' 0 'USH10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODDA' 0 'USH10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODTI' 0 'USH10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODBE' 0 'USH10' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'CHGIND' 1 '' '' '' '' 'Chg Ind' 'C' ''.

  CONCATENATE 'ACEPROFLOG: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
    SELECT
                  MANDT
                  PROFN
                  TYP
                  MODDA
                  MODTI
                  MODBE
                  NRAUT
                  AUTHS
             INTO TABLE
                  ITPROFLOG
     PACKAGE SIZE 1000
             FROM USH10
                  CLIENT SPECIFIED
            WHERE MODDA >= CDSDATE
              AND TYP <> 'G'
              AND AKTPS = 'A'.

      LOOP AT ITPROFLOG ASSIGNING <ZPROFLOG>.
        PERFORM EXPSUBRECPROFLOG.
      ENDLOOP.

    ENDSELECT.
  ELSE.
    SELECT
                  MANDT
                  PROFN
                  TYP
                  MODDA
                  MODTI
                  MODBE
                  NRAUT
                  AUTHS
             INTO TABLE
                  ITPROFLOG
     PACKAGE SIZE 1000
             FROM USH10
            WHERE MODDA >= CDSDATE
              AND TYP <> 'G'
              AND AKTPS = 'A'.

      LOOP AT ITPROFLOG ASSIGNING <ZPROFLOG>.
        PERFORM EXPSUBRECPROFLOG.
      ENDLOOP.

    ENDSELECT.
  ENDIF.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEPROFLOG'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPPROFLOG' 'A' ''.
ENDFORM.                       "EXPPROFLOG

*---------------------------------------------------------------------*
*       FORM EXPSUBRECPROFLOG                                         *
*---------------------------------------------------------------------*
FORM EXPSUBRECPROFLOG.
  DATA: BEGIN OF ACEPROFLOG
       ,MANDT LIKE USH10-MANDT
       ,PROFN LIKE USH10-PROFN
       ,TYP LIKE USH10-TYP
       ,MODDA LIKE USH10-MODDA
       ,MODTI LIKE USH10-MODTI
       ,MODBE LIKE USH10-MODBE
       ,CHGIND(1) TYPE C.
  DATA: END OF ACEPROFLOG.

  ACEPROFLOG-MANDT = <ZPROFLOG>-MANDT.
  ACEPROFLOG-PROFN = <ZPROFLOG>-PROFN.
  ACEPROFLOG-TYP = <ZPROFLOG>-TYP.
  ACEPROFLOG-MODDA = <ZPROFLOG>-MODDA.
  ACEPROFLOG-MODTI = <ZPROFLOG>-MODTI.
  ACEPROFLOG-MODBE = <ZPROFLOG>-MODBE.
  IF <ZPROFLOG>-NRAUT = 0.
    ACEPROFLOG-CHGIND = '-'.
  ELSEIF <ZPROFLOG>-AUTHS+0(1) = 'C'.
    ACEPROFLOG-CHGIND = 'I'.
  ELSEIF <ZPROFLOG>-AUTHS+0(1) = 'M'.
    ACEPROFLOG-CHGIND = 'U'.
  ELSE.
    ACEPROFLOG-CHGIND = 'D'.
  ENDIF.

  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEPROFLOG WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEPROFLOG WITH REPLCHAR.
  CONCATENATE
              ACEPROFLOG-MANDT
              ACEPROFLOG-PROFN
              ACEPROFLOG-TYP
              ACEPROFLOG-MODDA
              ACEPROFLOG-MODTI
              ACEPROFLOG-MODBE
              ACEPROFLOG-CHGIND
              INTO TRANSREC
              SEPARATED BY TRANSSEP.
  PERFORM TRANS.
ENDFORM.                    "EXPSUBRECPROFLOG

*---------------------------------------------------------------------*
*      Form  EXPAUTHLOG                                               *
*---------------------------------------------------------------------*
FORM EXPAUTHLOG.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEAUTHLOG'.
  PERFORM OPENFILE USING 'OUTPUT'.
  PERFORM ADDB2 USING 'Y'
                'Int. table Log of Local Authorization Changes'.
  PERFORM ADDB3 USING 'MANDT' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'OBJCT' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'AUTH' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TYP' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODDA' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODTI' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'MODBE' 0 'USH12' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'CHGIND' 1 '' '' '' '' 'Chg Ind' 'C' ''.

  CONCATENATE 'ACEAUTHLOG: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
    SELECT
                  MANDT
                  OBJCT
                  AUTH
                  TYP
                  MODDA
                  MODTI
                  MODBE
                  LNG
                  VALS
             INTO TABLE
                  ITAUTHLOG
     PACKAGE SIZE 1000
             FROM USH12
                  CLIENT SPECIFIED
            WHERE MODDA >= CDSDATE
              AND TYP <> 'G'
              AND AKTPS = 'A'.

      LOOP AT ITAUTHLOG ASSIGNING <ZAUTHLOG>.
        PERFORM EXPSUBRECAUTHLOG.
      ENDLOOP.

    ENDSELECT.
  ELSE.
    SELECT
                  MANDT
                  OBJCT
                  AUTH
                  TYP
                  MODDA
                  MODTI
                  MODBE
                  LNG
                  VALS
             INTO TABLE
                  ITAUTHLOG
     PACKAGE SIZE 1000
             FROM USH12
            WHERE MODDA >= CDSDATE
              AND TYP <> 'G'
              AND AKTPS = 'A'.

      LOOP AT ITAUTHLOG ASSIGNING <ZAUTHLOG>.
        PERFORM EXPSUBRECAUTHLOG.
      ENDLOOP.

    ENDSELECT.
  ENDIF.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEAUTHLOG'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPAUTHLOG' 'A' ''.
ENDFORM.                       "EXPAUTHLOG

*---------------------------------------------------------------------*
*       FORM EXPSUBRECAUTHLOG                                         *
*---------------------------------------------------------------------*
FORM EXPSUBRECAUTHLOG.
  DATA: BEGIN OF ACEAUTHLOG
       ,MANDT LIKE USH12-MANDT
       ,OBJCT LIKE USH12-OBJCT
       ,AUTH LIKE USH12-AUTH
       ,TYP LIKE USH12-TYP
       ,MODDA LIKE USH12-MODDA
       ,MODTI LIKE USH12-MODTI
       ,MODBE LIKE USH12-MODBE
       ,CHGIND(1) TYPE C.
  DATA: END OF ACEAUTHLOG.

  ACEAUTHLOG-MANDT = <ZAUTHLOG>-MANDT.
  ACEAUTHLOG-OBJCT = <ZAUTHLOG>-OBJCT.
  ACEAUTHLOG-AUTH = <ZAUTHLOG>-AUTH.
  ACEAUTHLOG-TYP = <ZAUTHLOG>-TYP.
  ACEAUTHLOG-MODDA = <ZAUTHLOG>-MODDA.
  ACEAUTHLOG-MODTI = <ZAUTHLOG>-MODTI.
  ACEAUTHLOG-MODBE = <ZAUTHLOG>-MODBE.
  IF <ZAUTHLOG>-LNG = 0.
    ACEAUTHLOG-CHGIND = '-'.
  ELSEIF <ZAUTHLOG>-VALS+0(1) = 'C'.
    ACEAUTHLOG-CHGIND = 'I'.
  ELSEIF <ZAUTHLOG>-VALS+0(1) = 'M'.
    ACEAUTHLOG-CHGIND = 'U'.
  ELSE.
    ACEAUTHLOG-CHGIND = 'D'.
  ENDIF.

  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEAUTHLOG WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEAUTHLOG WITH REPLCHAR.

  CONCATENATE
              ACEAUTHLOG-MANDT
              ACEAUTHLOG-OBJCT
              ACEAUTHLOG-AUTH
              ACEAUTHLOG-TYP
              ACEAUTHLOG-MODDA
              ACEAUTHLOG-MODTI
              ACEAUTHLOG-MODBE
              ACEAUTHLOG-CHGIND
              INTO TRANSREC
              SEPARATED BY TRANSSEP.
  PERFORM TRANS.
ENDFORM.                    "EXPSUBRECAUTHLOG

*---------------------------------------------------------------------*
*      Form  EXPTRANSIMPLOG                                           *
*---------------------------------------------------------------------*
FORM EXPTRANSIMPLOG.
  DATA: BEGIN OF WTRANSIMPLOG
       ,CMDSTRING TYPE TPLOG-CMDSTRING
       ,USERNAME TYPE TPLOG-USERNAME
       ,SYDATE TYPE TPLOG-SYDATE
       ,SYTIME TYPE TPLOG-SYTIME
       ,CLIENT TYPE TPLOG-CLIENT
       ,END OF WTRANSIMPLOG
       ,ITRANSIMPLOG LIKE TABLE OF WTRANSIMPLOG.
  FIELD-SYMBOLS <ZTRANSIMPLOG> LIKE LINE OF
                               ITRANSIMPLOG.

  DATA: BEGIN OF ACETRANSIMPLOG
       ,TRKORR LIKE E070-TRKORR
       ,USERNAME LIKE TPLOG-USERNAME
       ,SYDATE LIKE TPLOG-SYDATE
       ,SYTIME LIKE TPLOG-SYTIME
       ,CLIENT LIKE TPLOG-CLIENT.
  DATA: END OF ACETRANSIMPLOG.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACETRANSIMPLOG'.
  PERFORM OPENFILE USING 'OUTPUT'.
  PERFORM ADDB2 USING 'Y' 'Int. table Transport Import Log'.
  PERFORM ADDB3 USING 'TRKORR' 0 'E070' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'USERNAME' 0 'TPLOG' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'SYDATE' 0 'TPLOG' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'SYTIME' 0 'TPLOG' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'CLIENT' 0 'TPLOG' '' '' '' '' '' ''.

  CONCATENATE 'ACETRANSIMPLOG: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  SELECT        CMDSTRING
                USERNAME
                SYDATE
                SYTIME
                CLIENT
             INTO TABLE
                  ITRANSIMPLOG
     PACKAGE SIZE 1000
           FROM TPLOG
          WHERE SYDATE >= CDSDATE
            AND RETCODE = '0000'
            AND CMDSTRING like 'IMPORT%'.

    LOOP AT ITRANSIMPLOG ASSIGNING <ZTRANSIMPLOG>.

      IF <ZTRANSIMPLOG>-CMDSTRING+7(4) = 'ALL ' OR
         <ZTRANSIMPLOG>-CMDSTRING+7(4) = 'all '.
        ACETRANSIMPLOG-TRKORR = <ZTRANSIMPLOG>-CMDSTRING+7(7).
      ELSEIF <ZTRANSIMPLOG>-CMDSTRING+7(5) = 'SOME ' OR
             <ZTRANSIMPLOG>-CMDSTRING+7(5) = 'some '.
        ACETRANSIMPLOG-TRKORR = <ZTRANSIMPLOG>-CMDSTRING+7(8).
      ELSEIF <ZTRANSIMPLOG>-CMDSTRING+7(7) = 'SUBSET ' OR
             <ZTRANSIMPLOG>-CMDSTRING+7(7) = 'subset '.
        ACETRANSIMPLOG-TRKORR = <ZTRANSIMPLOG>-CMDSTRING+7(10).
      ELSE.
        ACETRANSIMPLOG-TRKORR = <ZTRANSIMPLOG>-CMDSTRING+7(10).
      ENDIF.

      ACETRANSIMPLOG-USERNAME = <ZTRANSIMPLOG>-USERNAME.
      ACETRANSIMPLOG-SYDATE = <ZTRANSIMPLOG>-SYDATE.
      ACETRANSIMPLOG-SYTIME = <ZTRANSIMPLOG>-SYTIME.
      ACETRANSIMPLOG-CLIENT = <ZTRANSIMPLOG>-CLIENT.

      REPLACE ALL OCCURRENCES OF TRANSTXT
              IN ACETRANSIMPLOG WITH REPLCHAR.
      REPLACE ALL OCCURRENCES OF TRANSSEP
              IN ACETRANSIMPLOG WITH REPLCHAR.

      CONCATENATE
                  ACETRANSIMPLOG-TRKORR
                  ACETRANSIMPLOG-USERNAME
                  ACETRANSIMPLOG-SYDATE
                  ACETRANSIMPLOG-SYTIME
                  ACETRANSIMPLOG-CLIENT
                  INTO TRANSREC
                  SEPARATED BY TRANSSEP.
      PERFORM TRANS.

    ENDLOOP.

  ENDSELECT.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACETRANSIMPLOG'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPTRANSIMPLOG' 'A' ''.
ENDFORM.                       "EXPTRANSIMPLOG

*---------------------------------------------------------------------*
*      Form  EXPBATCHAUTHLOG                                          *
*---------------------------------------------------------------------*
FORM EXPBATCHAUTHLOG.
  DATA: BEGIN OF WBATCHAUTHLOG
       ,JOBNAME TYPE TBTCP-JOBNAME
       ,PROGNAME TYPE TBTCP-PROGNAME
       ,SDLDATE TYPE TBTCP-SDLDATE
       ,SDLUNAME TYPE TBTCP-SDLUNAME
       ,AUTHCKNAM TYPE TBTCP-AUTHCKNAM
       ,END OF WBATCHAUTHLOG
       ,IBATCHAUTHLOG LIKE TABLE OF WBATCHAUTHLOG.
  FIELD-SYMBOLS <ZBATCHAUTHLOG> LIKE LINE OF
         IBATCHAUTHLOG.

  DATA: BEGIN OF ACEBATCHAUTHLOG
       ,JOBNAME LIKE TBTCP-JOBNAME
       ,PROGNAME LIKE TBTCP-PROGNAME
       ,SDLDATE LIKE TBTCP-SDLDATE
       ,SDLUNAME LIKE TBTCP-SDLUNAME
       ,AUTHCKNAM LIKE TBTCP-AUTHCKNAM.
  DATA: END OF ACEBATCHAUTHLOG.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEBATCHAUTHLOG'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Int. table Batch Auth Log'.

  PERFORM ADDB3 USING 'JOBNAME' 0 'TBTCP' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'PROGNAME' 0 'TBTCP' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'SDLDATE' 0 'TBTCP' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'SDLUNAME' 0 'TBTCP' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'AUTHCKNAM' 0 'TBTCP' '' '' '' '' '' ''.

  CONCATENATE 'ACEBATCHAUTHLOG: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  SELECT
                JOBNAME
                PROGNAME
                SDLDATE
                SDLUNAME
                AUTHCKNAM
             INTO TABLE
                  IBATCHAUTHLOG
     PACKAGE SIZE 1000
           FROM TBTCP
          WHERE SDLDATE >= CDSDATE
            AND SDLUNAME <> TBTCP~AUTHCKNAM.

    LOOP AT IBATCHAUTHLOG ASSIGNING <ZBATCHAUTHLOG>.

      ACEBATCHAUTHLOG-JOBNAME = <ZBATCHAUTHLOG>-JOBNAME.
      ACEBATCHAUTHLOG-PROGNAME = <ZBATCHAUTHLOG>-PROGNAME.
      ACEBATCHAUTHLOG-SDLDATE = <ZBATCHAUTHLOG>-SDLDATE.
      ACEBATCHAUTHLOG-SDLUNAME = <ZBATCHAUTHLOG>-SDLUNAME.
      ACEBATCHAUTHLOG-AUTHCKNAM = <ZBATCHAUTHLOG>-AUTHCKNAM.

      REPLACE ALL OCCURRENCES OF TRANSTXT
              IN ACEBATCHAUTHLOG WITH REPLCHAR.
      REPLACE ALL OCCURRENCES OF TRANSSEP
              IN ACEBATCHAUTHLOG WITH REPLCHAR.

      CONCATENATE
                  ACEBATCHAUTHLOG-JOBNAME
                  ACEBATCHAUTHLOG-PROGNAME
                  ACEBATCHAUTHLOG-SDLDATE
                  ACEBATCHAUTHLOG-SDLUNAME
                  ACEBATCHAUTHLOG-AUTHCKNAM
                  INTO TRANSREC
                  SEPARATED BY TRANSSEP.
      PERFORM TRANS.

    ENDLOOP.

  ENDSELECT.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEBATCHAUTHLOG'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPBATCHAUTHLOG' 'A' ''.
ENDFORM.                       "EXPBATCHAUTHLOG

*---------------------------------------------------------------------*
*       FORM EXPHLP                                                   *
*---------------------------------------------------------------------*
FORM EXPHLP.

  DATA: BEGIN OF HLPHEADER.
          INCLUDE STRUCTURE THEAD.
  DATA: END OF HLPHEADER.

  DATA: BEGIN OF WTOBJ
       ,OBJCT TYPE TOBJ-OBJCT
       ,END OF WTOBJ
       ,ITOBJ LIKE TABLE OF WTOBJ.
  FIELD-SYMBOLS <ZTOBJ> LIKE LINE OF ITOBJ.

  DATA: V_LENGTH TYPE X
       ,LASTPOS LIKE SY-INDEX
       ,OBJECT LIKE DOKHL-OBJECT
       ,ZFORMAT LIKE TLINE-TDFORMAT
       ,RNUM TYPE I.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEHELP'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Object help'.
  PERFORM ADDB3 USING 'HLPROW' 90 '' '' '' '' 'Help row' 'R' ''.
  PERFORM ADDB3 USING 'OBJCT' 0 'TOBJ' 'FIEL1' '' '' '' '' ''.
  PERFORM ADDB3 USING 'RFORMAT' 0 'TLINE' 'TDFORMAT' '' '' '' '' ''.
  PERFORM ADDB3 USING 'ROWNUM' 4 '' '' '' '' 'Row number' 'RNUM' ''.

  CONCATENATE 'ACEHLP: Object Help (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.


  SELECT        OBJCT
           INTO (WTOBJ-OBJCT
                )
           FROM TOBJ.

    RNUM = 0.
    OBJECT = WTOBJ-OBJCT.

    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        ID                = 'UO'
        LANGU             = SY-LANGU
        OBJECT            = OBJECT
      IMPORTING
        HEAD              = HLPHEADER
      TABLES
        LINE              = HLPLINES
      EXCEPTIONS
        NO_DOCU_ON_SCREEN = 1
        NO_DOCU_SELF_DEF  = 2
        NO_DOCU_TEMP      = 3
        RET_CODE          = 4
        OTHERS            = 5.

    CALL FUNCTION 'TEXT_INCLUDE_REPLACE'
      EXPORTING
        ALL_LEVEL = 'X'
        ENDLINE   = 99999
        HEADER    = HLPHEADER
        STARTLINE = 1
        PROGRAM   = ' '
      IMPORTING
        NEWHEADER = HLPHEADER
      TABLES
        LINES     = HLPLINES.

    CALL FUNCTION 'TEXT_CONTROL_REPLACE'
      EXPORTING
        HEADER          = HLPHEADER
        PROGRAM         = ' '
        REPLACE_COMMENT = 'X'  "Delete Comments
      IMPORTING
        NEWHEADER       = HLPHEADER
      TABLES
        LINES           = HLPLINES.

    CALL FUNCTION 'REPLACE_TEXTSYMBOL'
      EXPORTING
        STARTLINE = 1
        ENDLINE   = 99999
        LANGUAGE  = SY-LANGU
      TABLES
        LINES     = HLPLINES.

    LOOP AT HLPLINES.

      IF HLPLINES-TDLINE(1) = '&'.
        CALL FUNCTION 'GET_TEXTSYMBOL'
          EXPORTING
            LANGUAGE     = SY-LANGU
            LINE         = HLPLINES-TDLINE
            START_OFFSET = 0
          IMPORTING
            VALUE        = HLPLINES-TDLINE
            VALUE_LENGTH = V_LENGTH.

        MOVE HLPLINES-TDLINE  TO ACEHLP-HLPROW.
        MOVE WTOBJ-OBJCT      TO ACEHLP-OBJCT.
        MOVE RNUM             TO ACEHLP-ROWNUM.
        MOVE '--'             TO ACEHLP-RFORMAT.
        PERFORM TRANSHLP.
        RNUM = RNUM + 1.

      ELSE.
        PERFORM GETCLEARLINE.

        IF HLPLINES-TDFORMAT = SPACE OR
           HLPLINES-TDFORMAT = '/('  OR
           HLPLINES-TDFORMAT = '/'.
          ZFORMAT = '@@'.
        ELSE.
          ZFORMAT = HLPLINES-TDFORMAT.
        ENDIF.

        IF HLPLINES-TDFORMAT+0(1) = 'T'.
          ZFORMAT = '#T'.
        ENDIF.
        IF HLPLINES-TDFORMAT+0(1) = 'K'.
          ZFORMAT = '#K'.
        ENDIF.

        IF ZFORMAT = '#K' OR ZFORMAT = 'U1' OR ZFORMAT = 'U2' OR
           ZFORMAT = 'U5' OR ZFORMAT = 'HU' OR ZFORMAT = 'EL' OR
           ZFORMAT = 'AS' OR ZFORMAT = 'AL' OR ZFORMAT = '*'  OR
           ZFORMAT = 'UT'.
          CLEAR ACEHLP.
          MOVE WTOBJ-OBJCT    TO ACEHLP-OBJCT.
          MOVE RNUM           TO ACEHLP-ROWNUM.
          MOVE ZFORMAT        TO ACEHLP-RFORMAT.
          PERFORM TRANSHLP.
          RNUM = RNUM + 1.
        ENDIF.

        CASE ZFORMAT.
          WHEN '@@'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+LASTPOS.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
          WHEN '#K'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN '#T'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN '/:'.
          WHEN 'U1'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
          WHEN 'U2'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+2.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
          WHEN 'U5'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN 'HU'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN 'HT'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+7.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 7.
          WHEN 'EL'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN 'ER'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+7.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 7.
          WHEN 'E2'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+7.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 7.
          WHEN 'E3'.
            CLEAR ACEHLP.
            MOVE '-'        TO ACEHLP-HLPROW+7.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+10.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 10.
          WHEN 'N2'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+7.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 7.
          WHEN 'AS'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN 'B1'.
            CLEAR ACEHLP.
            MOVE 'o'        TO ACEHLP-HLPROW+4.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+7.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 7.
          WHEN 'B2'.
            CLEAR ACEHLP.
            MOVE '-'        TO ACEHLP-HLPROW+7.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+10.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 10.
          WHEN 'AL'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+7.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 7.
          WHEN 'BL'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+10.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 10.
          WHEN '*'.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
          WHEN OTHERS.
            CLEAR ACEHLP.
            MOVE HLPLINES-TDLINE TO ACEHLP-HLPROW+4.
            MOVE WTOBJ-OBJCT     TO ACEHLP-OBJCT.
            MOVE RNUM            TO ACEHLP-ROWNUM.
            MOVE ZFORMAT         TO ACEHLP-RFORMAT.
            PERFORM TRANSHLP.
            RNUM = RNUM + 1.
            LASTPOS = 4.
        ENDCASE.
      ENDIF.
    ENDLOOP.

  ENDSELECT.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEHELP'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPHLP' 'A' ''.
ENDFORM.                                                    "EXPHLP

*---------------------------------------------------------------------*
*      Form  EXPTLD                                                   *
*---------------------------------------------------------------------*
FORM EXPTLD.
  DATA: TLDDIR LIKE SAPWLDIR OCCURS 1 WITH HEADER LINE,
        COUI TYPE I,
        COUC(20) TYPE C,
        RECCOUNT TYPE I,
        STARTTLD(8) TYPE C,
        CMONTH(2) TYPE N,
        CYEAR(4) TYPE N,
        TMONTH(2) TYPE N,
        TYEAR(4) TYPE N,
        SMONTH(2) TYPE N,
        SYEAR(4) TYPE N,
        TLDTYP(1) TYPE C,
        DDATE TYPE D,
        INSTANCENAME(39) TYPE C,
        HOSTNAME(8) TYPE C,
        W_COMPONENT(40) TYPE C,
        W_PERIODTYPE(1) TYPE C,
        W_PERIODSTRT TYPE D,
        SAPRL(4) TYPE N.

  IF TLDM = 'X'.
    TLDTYP = 'M'.

    SYEAR = SY-DATUM+0(4).
    SMONTH = SY-DATUM+4(2).

    CYEAR = TLDSEL / 12.
    CMONTH = TLDSEL - CYEAR * 12.
    IF CMONTH >= SMONTH.
      CYEAR = CYEAR - 1.
      SMONTH = 12 + SMONTH - CMONTH.
    ELSE.
      SMONTH = SMONTH - CMONTH.
    ENDIF.
    SYEAR = SYEAR - CYEAR.

    TMONTH = SMONTH.
    TYEAR = SYEAR.

    CONCATENATE
                TYEAR
                TMONTH
                '00'
                INTO STARTTLD.

  ELSEIF TLDW = 'X'.
    TLDTYP = 'W'.
    DDATE = SY-DATUM - TLDSEL * 7.
    STARTTLD = DDATE.

  ELSE.
    TLDTYP = 'D'.
    DDATE = SY-DATUM - TLDSEL.
    STARTTLD = DDATE.

  ENDIF.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACETLD'.

  PERFORM OPENFILE USING 'OUTPUT'.

  PERFORM ADDB2 USING 'Y' 'Transaction Log Data'.
  PERFORM ADDB3 USING 'MANDT' 0 'SAPWLMEM' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'STARTDATE' 0 'SAPWLDIR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'HOSTID' 0 'SAPWLDIR' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'TASKTYPE' 0 'SAPWLMEM' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'ENTRY_ID' 0 'SAPWLMEM' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'ACCOUNT' 0 'SAPWLMEM' '' '' '' '' '' ''.
  PERFORM ADDB3 USING 'COUNTER' 20 '' '' '' '' 'Counter' 'Counter' ''.

  CONCATENATE 'ACETLD: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  SAPRL = SY-SAPRL.

  IF SAPRL < '0700'.
    CALL FUNCTION 'SAPWL_WORKLOAD_GET_DIRECTORY'
      TABLES
        DIRECTORY = TLDDIR.

    SORT TLDDIR BY STARTDATE DESCENDING.

    LOOP AT TLDDIR.
      IF TLDDIR-PERIODTYPE = TLDTYP AND TLDDIR-HOSTID <> 'TOTAL'
                                    AND TLDDIR-STARTDATE >= STARTTLD.
        MOVE TLDDIR-HOSTID                      TO HOSTNAME.
        MOVE TLDDIR-PERIODTYPE                  TO W_PERIODTYPE.
        MOVE TLDDIR-STARTDATE                   TO W_PERIODSTRT.

        CONCATENATE 'Information: Downloading TLD data for date'
                    W_PERIODSTRT
                    INTO ZEILE
                    SEPARATED BY SPACE.
*        PERFORM ADDB0007 USING ZEILE.

        PERFORM EXPSUBTLD USING
                          'A' TLDTYP RECCOUNT
                          HOSTNAME '' W_PERIODTYPE W_PERIODSTRT.
    IF RECCOUNT > TLDREC.
          MOVE 'Information: TLD Limit reached (<700 DIR A).'
                                    TO ZEILE.
*          PERFORM ADDB0007 USING ZEILE.
          EXIT.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ELSE.
    SELECT COMPONENT
           PERIODTYPE
           PERIODSTRT
      INTO (W_COMPONENT
           ,W_PERIODTYPE
           ,W_PERIODSTRT
           )
      FROM ('SWNCMONIINDEX')
     WHERE COMPONENT <> 'TOTAL'
       AND PERIODTYPE = TLDTYP
       AND PERIODSTRT >= STARTTLD
     ORDER BY PERIODSTRT DESCENDING.

      MOVE W_COMPONENT      TO INSTANCENAME.

      CONCATENATE 'Information: Downloading TLD data for date'
                  W_PERIODSTRT
                  INTO ZEILE
                  SEPARATED BY SPACE.
*      PERFORM ADDB0007 USING ZEILE.

      PERFORM EXPSUBTLD USING
                        'A' TLDTYP RECCOUNT
                        '' INSTANCENAME W_PERIODTYPE W_PERIODSTRT.

    IF RECCOUNT > TLDREC.
        MOVE 'Information: TLD Limit reached (>=700 A).'
                                      TO ZEILE.
*        PERFORM ADDB0007 USING ZEILE.
        EXIT.
      ENDIF.
    ENDSELECT.
  ENDIF.

  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACETLD'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPTLD' 'A' ''.


  PERFORM ADDBSET USING 'Y' '' 'M' 'ACEDLD'.
  PERFORM OPENFILE USING 'OUTPUT'.
  PERFORM ADDB2 USING 'Y' 'Database Log Data'.

  CONCATENATE 'ACEDLD: User Log (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  IF SAPRL < '0700'.
    PERFORM ADDB3 USING 'PERIODTYPE' 1 '' '' ''
                        'X' 'SAP Workload NW Collector: Period Type'
                        'Period Type' ''.
    PERFORM ADDB3 USING 'COMPONENT' 40 '' '' ''
                        'X' 'SAP Workload NW Collector: Host Name'
                        'Host / Instance' ''.
    PERFORM ADDB3 USING 'PERIODSTRT' 8 '' '' ''
                        'X' 'SAP Workload NW Collector: Date' 'Date' ''.
    PERFORM ADDB3 USING 'PROGNAME' 80 '' '' '' ''
                        'Program' 'Program' ''.
    PERFORM ADDB3 USING 'PROGTYPE' 1 '' '' '' '' 'Type' 'T' ''.
    PERFORM ADDB3 USING 'ACCOUNT' 0 'SAPWLUSTCX' '' '' '' '' '' ''.
    PERFORM ADDB3 USING 'CHNGCNT' 20 '' '' '' '' 'Counts' 'Counts' ''.

    LOOP AT TLDDIR.
      IF TLDDIR-PERIODTYPE = TLDTYP AND TLDDIR-HOSTID <> 'TOTAL'
                                    AND TLDDIR-STARTDATE >= STARTTLD.
        MOVE TLDDIR-HOSTID                      TO HOSTNAME.
        MOVE TLDDIR-PERIODTYPE                  TO W_PERIODTYPE.
        MOVE TLDDIR-STARTDATE                   TO W_PERIODSTRT.

        CONCATENATE 'Information: Downloading DLD data for date'
                    W_PERIODSTRT
                    INTO ZEILE
                    SEPARATED BY SPACE.
*        PERFORM ADDB0007 USING ZEILE.

        PERFORM EXPSUBTLD USING
                          'B' TLDTYP RECCOUNT
                          HOSTNAME '' W_PERIODTYPE W_PERIODSTRT.

        IF RECCOUNT > TLDREC.
          MOVE 'Information: TLD Limit reached (<700 DIR B).'
                                                TO ZEILE.
*          PERFORM ADDB0007 USING ZEILE.
          EXIT.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ELSE.
    PERFORM ADDB3 USING 'PERIODTYPE' 0 'SWNCMONIINDEX'
                        '' '' '' '' '' ''.
    PERFORM ADDB3 USING 'COMPONENT' 0 'SWNCMONIINDEX'
                        '' '' '' '' '' ''.
    PERFORM ADDB3 USING 'PERIODSTRT' 0 'SWNCMONIINDEX'
                        '' '' '' '' '' ''.
    PERFORM ADDB3 USING 'PROGNAME' 80 ''
                        '' '' '' 'Program' 'Program' ''.
    PERFORM ADDB3 USING 'PROGTYPE' 1 '' ''
                        '' '' 'Type' 'T' ''.
    PERFORM ADDB3 USING 'ACCOUNT' 0 'SAPWLUSTCX'
                        '' '' '' '' '' ''.
    PERFORM ADDB3 USING 'CHNGCNT' 20 ''
                        '' '' '' 'Counts' 'Counts' ''.

    SELECT COMPONENT
           PERIODTYPE
           PERIODSTRT
      INTO (W_COMPONENT
           ,W_PERIODTYPE
           ,W_PERIODSTRT
           )
      FROM ('SWNCMONIINDEX')
     WHERE COMPONENT <> 'TOTAL'
       AND PERIODTYPE = TLDTYP
       AND PERIODSTRT >= STARTTLD
     ORDER BY PERIODSTRT DESCENDING.

      MOVE W_COMPONENT                          TO INSTANCENAME.

      CONCATENATE 'Information: Downloading DLD data for date'
                  W_PERIODSTRT
                  INTO ZEILE
                  SEPARATED BY SPACE.
*      PERFORM ADDB0007 USING ZEILE.

      PERFORM EXPSUBTLD USING
                        'B' TLDTYP RECCOUNT
                        '' INSTANCENAME W_PERIODTYPE W_PERIODSTRT.

      IF RECCOUNT > TLDREC.
        MOVE 'Information: TLD Limit reached (>=700 DIR B).'
                                                TO ZEILE.
*        PERFORM ADDB0007 USING ZEILE.
        EXIT.
      ENDIF.
    ENDSELECT.
  ENDIF.


  PERFORM ADDBSET USING 'N' ADDBNR 'M' 'ACEDLD'.
  PERFORM CLOSEFILE.

  PERFORM EXECCOMMIT USING 'EXPDLD' 'A' ''.
ENDFORM.                       "EXPTLD

*---------------------------------------------------------------------*
*       FORM EXPSUBTLD                                                *
*---------------------------------------------------------------------*
FORM EXPSUBTLD USING
               RUNTYP TLDTYP RECCOUNT
               HOSTNAME INSTANCENAME PERIODTYPE PERIODSTRT.
  DATA: TLDTCD LIKE SAPWLUSTCX OCCURS 1 WITH HEADER LINE,
        TLDDAT LIKE SAPWLMEM OCCURS 1 WITH HEADER LINE,
        COUI TYPE I,
        COUC(20) TYPE C,
        ENTPROG(39) TYPE C,
        ENTTYP(1) TYPE C,
        TASKTYPE(2) TYPE C.

  IF RUNTYP = 'A'.
    CALL FUNCTION 'SAPWL_WORKLOAD_GET_STATISTIC'
      EXPORTING
        PERIODTYPE                 = PERIODTYPE
        INSTANCE                   = INSTANCENAME
        HOSTID                     = HOSTNAME
        STARTDATE                  = PERIODSTRT
        ONLY_APPLICATION_STATISTIC = ''
      TABLES
        MEMORY_STATISTIC           = TLDDAT
      EXCEPTIONS
        UNKNOWN_PERIODTYPE         = 1
        NO_DATA_FOUND              = 2
        NO_SERVER_GIVEN            = 3.
  ELSE.
    CALL FUNCTION 'SAPWL_WORKLOAD_GET_STATISTIC'
      EXPORTING
        PERIODTYPE                 = PERIODTYPE
        INSTANCE                   = INSTANCENAME
        HOSTID                     = HOSTNAME
        STARTDATE                  = PERIODSTRT
        ONLY_APPLICATION_STATISTIC = ''
      TABLES
        APPLICATION_STATISTIC      = TLDTCD
      EXCEPTIONS
        UNKNOWN_PERIODTYPE         = 1
        NO_DATA_FOUND              = 2
        NO_SERVER_GIVEN            = 3.
  ENDIF.

  CASE SY-SUBRC.
    WHEN 1.
      CONCATENATE 'Unknown type:' TLDTYP
                  'with host:' INSTANCENAME HOSTNAME
                  'and startdate:' PERIODSTRT
                  INTO ZEILE.
*      PERFORM ADDB0007 USING ZEILE.

    WHEN 2.
      CONCATENATE 'No data found with type: ' TLDTYP
                  ' / host' INSTANCENAME HOSTNAME
                  ' / startdate' PERIODSTRT
                  INTO ZEILE.
*      PERFORM ADDB0007 USING ZEILE.

    WHEN 3.
      CONCATENATE 'Unknown server' INSTANCENAME HOSTNAME
                  'with type' TLDTYP
                  'and' PERIODSTRT
                  INTO ZEILE.
*      PERFORM ADDB0007 USING ZEILE.

    WHEN OTHERS.
      IF RUNTYP = 'A'.
        LOOP AT TLDDAT.
          IF ALL_CL3 = 'X' OR ALL_CL3 = 'x' OR TLDDAT-MANDT = SY-MANDT.
            MOVE TLDDAT-TASKTYPE                TO TASKTYPE.
            MOVE TLDDAT-COUNTER                 TO COUI.
            COUC = COUI.

            REPLACE ALL OCCURRENCES OF TRANSTXT
                    IN TLDDAT-MANDT WITH REPLCHAR.
            REPLACE ALL OCCURRENCES OF TRANSSEP
                    IN TLDDAT-MANDT WITH REPLCHAR.
            REPLACE ALL OCCURRENCES OF TRANSTXT
                    IN TLDDAT-ENTRY_ID WITH REPLCHAR.
            REPLACE ALL OCCURRENCES OF TRANSSEP
                    IN TLDDAT-ENTRY_ID WITH REPLCHAR.
            REPLACE ALL OCCURRENCES OF TRANSTXT
                    IN TLDDAT-ACCOUNT WITH REPLCHAR.
            REPLACE ALL OCCURRENCES OF TRANSSEP
                    IN TLDDAT-ACCOUNT WITH REPLCHAR.

            CONCATENATE
                        TLDDAT-MANDT
                        PERIODSTRT
                        INSTANCENAME
                        TASKTYPE
                        TLDDAT-ENTRY_ID
                        TLDDAT-ACCOUNT
                        COUC
                        INTO TRANSREC
                        SEPARATED BY TRANSSEP.
            PERFORM TRANS.

            RECCOUNT = RECCOUNT + 1.

            IF RECCOUNT > TLDREC.
              MOVE 'Information: TLD Limit reached (SUB A).'
                                                TO ZEILE.
*              PERFORM ADDB0007 USING ZEILE.
              EXIT.
            ENDIF.
          ENDIF.
        ENDLOOP.
      ELSE.
        LOOP AT TLDTCD.
          MOVE TLDTCD-CHNGCNT                   TO COUI.
          COUC = COUI.

          MOVE TLDTCD-ENTRY_ID+0(72)            TO ENTPROG.
          MOVE TLDTCD-ENTRY_ID+72(1)            TO ENTTYP.

          REPLACE ALL OCCURRENCES OF TRANSTXT
                  IN TLDTCD-ACCOUNT WITH REPLCHAR.
          REPLACE ALL OCCURRENCES OF TRANSSEP
                  IN TLDTCD-ACCOUNT WITH REPLCHAR.

          CONCATENATE
                      PERIODTYPE
                      INSTANCENAME
                      PERIODSTRT
                      ENTPROG
                      ENTTYP
                      TLDTCD-ACCOUNT
                      COUC
                      INTO TRANSREC
                      SEPARATED BY TRANSSEP.
          PERFORM TRANS.

          RECCOUNT = RECCOUNT + 1.

        IF RECCOUNT > TLDREC .
            MOVE 'Information: TLD Limit reached (SUB B).'
                                                TO ZEILE.
*            PERFORM ADDB0007 USING ZEILE.
            EXIT.
          ENDIF.
        ENDLOOP.
      ENDIF.
  ENDCASE.

ENDFORM.                    "EXPSUBTLD

*---------------------------------------------------------------------*
*       FORM EXPCDSB                                                   *
*---------------------------------------------------------------------*
FORM EXPCDSB.
  DATA: ANZREC TYPE I.

  SELECT        COUNT( * )
           INTO (ANZREC)
           FROM DD02L
          WHERE TABNAME = 'BKPF'
            AND AS4VERS = 'A'
            AND TABCLASS <> 'INTTAB'.

  IF SY-SUBRC = 4.
    MOVE 'Information: CDS tables do not exist.'
                                                TO ZEILE.
    PERFORM ADDB0007 USING ZEILE.
    EXIT.
  ENDIF.

  PERFORM ADDBSET USING 'Y' '' 'M' 'ACECDSB'.

  PERFORM ADDB2 USING 'Y' 'Change Document B Segment'.
  PERFORM ADDB3 USING 'BUKRS' 4 '' '' '' '' 'Company Code' 'CoCd' ''.
  PERFORM ADDB3 USING 'GJAHR' 4 '' '' '' '' 'Year' 'Year' ''.
  PERFORM ADDB3 USING 'BLART' 2 '' '' '' '' 'DocType' 'DT' ''.
  PERFORM ADDB3 USING 'MONAT' 2 '' '' '' '' 'Month' 'MM' ''.
  PERFORM ADDB3 USING 'USNAM' 12 '' '' '' '' 'User ID' 'User ID' ''.
  PERFORM ADDB3 USING 'TCODE' 20 '' '' '' '' 'TCode' 'TCode' ''.
  PERFORM ADDB3 USING 'BSTAT' 1 '' '' '' '' 'Status' 'Status' ''.
  PERFORM ADDB3 USING 'GLVOR' 4 '' '' '' '' 'Business TCode'
                                                         'BTCode' ''.
  PERFORM ADDB3 USING 'AWTYP' 5 '' '' '' '' 'Ref Type' 'Ref Type' ''.
  PERFORM ADDB3 USING 'GRPID' 12 '' '' '' '' 'Session' 'Session' ''.
  PERFORM ADDB3 USING 'COUNT' 12 '' '' '' '' 'Count' 'Count' ''.

  CONCATENATE 'CDSB: Change Documents (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  PERFORM GENCONSTSTART USING 'M'.
  PERFORM GENCDSBSHARED.
  PERFORM GENCONSTFORM.
  PERFORM GENCDSBFORM.
  PERFORM GENABAP.

  PERFORM SUBMITTEMP USING 'Y' 'ACECDSB' 'M' 'ACECDSB'
                           'Change Document B Segment'.
ENDFORM.                    "EXPCDSB
*---------------------------------------------------------------------*
*       FORM EXPCDSC                                                  *
*---------------------------------------------------------------------*
FORM EXPCDSC.
  PERFORM ADDBSET USING 'Y' '' 'M' 'ACECDSC'.

  PERFORM ADDB2 USING 'Y' 'Change Document C Segment'.
  PERFORM ADDB3 USING 'OBJECTCLAS' 15 '' '' '' '' 'Object Class'
                                                 'Object Class' ''.
  PERFORM ADDB3 USING 'USERNAME' 12 '' '' '' '' 'User ID' 'User ID' ''.
  PERFORM ADDB3 USING 'UDATEYYYYMM' 8 '' '' '' '' 'YearMonth'
                                                        'YearMonth' ''.
  PERFORM ADDB3 USING 'TCODE' 20 '' '' '' '' 'TCode' 'TCode' ''.
  PERFORM ADDB3 USING 'CHANGE_IND' 1 '' '' '' '' 'Change Indicator'
                                                    'I' ''.
  PERFORM ADDB3 USING 'COUNT' 12 '' '' '' '' 'Count' 'Count' ''.

  CONCATENATE 'CDSC: Change Documents (' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  PERFORM GENCONSTSTART USING 'M'.
  PERFORM GENCDSCSHARED.
  PERFORM GENCONSTFORM.
  PERFORM GENCDSCFORM.
  PERFORM GENABAP.

  PERFORM SUBMITTEMP USING 'Y' 'ACECDSC' 'M' 'ACECDSC'
                           'Change Document C Segment'.

ENDFORM.                    "EXPCDSC



*---------------------------------------------------------------------*
*       FORM GENCDSBSHARED                                            *
*---------------------------------------------------------------------*
FORM GENCDSBSHARED.
ENDFORM.                    "GENCDSBSHARED

*---------------------------------------------------------------------*
*       FORM GENCDSBFORM                                              *
*---------------------------------------------------------------------*
FORM GENCDSBFORM.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: ZCOUNT TYPE i.'.
  PERFORM C1 USING '  DATA: BEGIN OF wbukrs,'.
  PERFORM C1 USING '          bukrs TYPE t001-bukrs,'.
  PERFORM C1 USING '        END OF wbukrs,'.
  PERFORM C1 USING '        ibukrs LIKE TABLE OF wbukrs.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbukrs> LIKE LINE OF ibukrs.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  TABLES: BKPF.'.
  PERFORM C1 USING '     DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '         , COUNT(12) TYPE c'.
  PERFORM C1 USING '         , BUKRS(4) TYPE c'.
  PERFORM C1 USING '         , GJAHR(4) TYPE c'.
  PERFORM C1 USING '         , BLART(2) TYPE c'.
  PERFORM C1 USING '         , MONAT(2) TYPE c'.
  PERFORM C1 USING '         , USNAM(12) TYPE c'.
  PERFORM C1 USING '         , TCODE(20) TYPE c'.
  PERFORM C1 USING '         , BSTAT(1) TYPE c'.
  PERFORM C1 USING '         , GLVOR(4) TYPE c'.
  PERFORM C1 USING '         , AWTYP(5) TYPE c'.
  PERFORM C1 USING '         , GRPID(12) TYPE c'.
  PERFORM C1 USING '         ,'.
  PERFORM C1 USING '         END OF TOUT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  IF parflag <> ''Y''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING ' SELECT        BUKRS'.
  PERFORM C1 USING '           INTO table'.
  PERFORM C1 USING '                ibukrs'.
  PERFORM C1 USING '           FROM  T001.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ibukrs ASSIGNING <zbukrs>.'.
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    SELECT BUKRS'.
  PERFORM C1 USING '           GJAHR'.
  PERFORM C1 USING '           BLART'.
  PERFORM C1 USING '           MONAT'.
  PERFORM C1 USING '           USNAM'.
  PERFORM C1 USING '           TCODE'.
  PERFORM C1 USING '           BSTAT'.
  PERFORM C1 USING '           GLVOR'.
  PERFORM C1 USING '           AWTYP'.
  PERFORM C1 USING '           GRPID'.
  PERFORM C1 USING '           COUNT( * )'.
  PERFORM C1 USING '     INTO (TOUT-BUKRS'.
  PERFORM C1 USING '          ,TOUT-GJAHR'.
  PERFORM C1 USING '          ,TOUT-BLART'.
  PERFORM C1 USING '          ,TOUT-MONAT'.
  PERFORM C1 USING '          ,TOUT-USNAM'.
  PERFORM C1 USING '          ,TOUT-TCODE'.
  PERFORM C1 USING '          ,TOUT-BSTAT'.
  PERFORM C1 USING '          ,TOUT-GLVOR'.
  PERFORM C1 USING '          ,TOUT-AWTYP'.
  PERFORM C1 USING '          ,TOUT-GRPID'.
  PERFORM C1 USING '          ,ZCOUNT'.
  PERFORM C1 USING '          )'.
  PERFORM C1 USING '     FROM  BKPF'.
  PERFORM C1 USING '    WHERE  BUKRS = <zbukrs>-BUKRS'.
  PERFORM C1 USING '      AND  BUDAT >= SELDATE'.
  PERFORM C1 USING '     GROUP BY'.
  PERFORM C1 USING '           BUKRS'.
  PERFORM C1 USING '           GJAHR'.
  PERFORM C1 USING '           BLART'.
  PERFORM C1 USING '           MONAT'.
  PERFORM C1 USING '           USNAM'.
  PERFORM C1 USING '           TCODE'.
  PERFORM C1 USING '           BSTAT'.
  PERFORM C1 USING '           GLVOR'.
  PERFORM C1 USING '           AWTYP'.
  PERFORM C1 USING '           GRPID.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      TOUT-COUNT = ZCOUNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      CONCATENATE'.
  PERFORM C1 USING '        TOUT-BUKRS'.
  PERFORM C1 USING '        TOUT-GJAHR'.
  PERFORM C1 USING '        TOUT-BLART'.
  PERFORM C1 USING '        TOUT-MONAT'.
  PERFORM C1 USING '        TOUT-USNAM'.
  PERFORM C1 USING '        TOUT-TCODE'.
  PERFORM C1 USING '        TOUT-BSTAT'.
  PERFORM C1 USING '        TOUT-GLVOR'.
  PERFORM C1 USING '        TOUT-AWTYP'.
  PERFORM C1 USING '        TOUT-GRPID'.
  PERFORM C1 USING '        TOUT-COUNT'.
  PERFORM C1 USING '        INTO trec'.
  PERFORM C1 USING '           SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      PERFORM trans.'.
  PERFORM C1 USING '    ENDSELECT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    COMMIT WORK AND WAIT.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    "GENCDSBFORM

*---------------------------------------------------------------------*
*       FORM GENCDSCSHARED                                            *
*---------------------------------------------------------------------*
FORM GENCDSCSHARED.
ENDFORM.                    "GENCDSCSHARED

*---------------------------------------------------------------------*
*       FORM GENCDSCFORM                                              *
*---------------------------------------------------------------------*
FORM GENCDSCFORM.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: ZCOUNT TYPE i.'.
  PERFORM C1 USING '  DATA: BEGIN OF wobject,'.
  PERFORM C1 USING '          object TYPE tcdob-object,'.
  PERFORM C1 USING '        END OF wobject,'.
  PERFORM C1 USING '        iobject LIKE TABLE OF wobject.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zobject> LIKE LINE OF iobject.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  TABLES: CDHDR.'.
  PERFORM C1 USING '     DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '         , COUNT(12) TYPE c'.
  PERFORM C1 USING '         , OBJECTCLAS(15) TYPE c'.
  PERFORM C1 USING '         , USERNAME(12) TYPE c'.
  PERFORM C1 USING '         , UDATE TYPE d'.
  PERFORM C1 USING '         , TCODE(20) TYPE c'.
  PERFORM C1 USING '         , CHANGE_IND(1) TYPE c'.
  PERFORM C1 USING '         ,'.
  PERFORM C1 USING '           END OF TOUT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  IF parflag <> ''Y''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING ' SELECT        OBJECT'.
  PERFORM C1 USING '          INTO table'.
  PERFORM C1 USING '               iobject'.
  PERFORM C1 USING '          FROM TCDOB.'.
  PERFORM C1 USING ' SORT iobject by object.'.
  PERFORM C1 USING ' DELETE ADJACENT DUPLICATES'.
  PERFORM C1 USING '            FROM iobject.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT iobject ASSIGNING <zobject>.'.
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '     SELECT OBJECTCLAS'.
  PERFORM C1 USING '            USERNAME'.
  PERFORM C1 USING '            UDATE'.
  PERFORM C1 USING '            TCODE'.
  PERFORM C1 USING '            CHANGE_IND'.
  PERFORM C1 USING '            COUNT( * )'.
  PERFORM C1 USING '      INTO (TOUT-OBJECTCLAS'.
  PERFORM C1 USING '           ,TOUT-USERNAME'.
  PERFORM C1 USING '           ,TOUT-UDATE'.
  PERFORM C1 USING '           ,TOUT-TCODE'.
  PERFORM C1 USING '           ,TOUT-CHANGE_IND'.
  PERFORM C1 USING '           ,ZCOUNT'.
  PERFORM C1 USING '           )'.
  PERFORM C1 USING '      FROM  CDHDR'.
  PERFORM C1 USING '     WHERE  OBJECTCLAS = <zobject>-object'.
  PERFORM C1 USING '       AND  UDATE >= SELDATE'.
  PERFORM C1 USING '      GROUP BY'.
  PERFORM C1 USING '            OBJECTCLAS'.
  PERFORM C1 USING '            USERNAME'.
  PERFORM C1 USING '            UDATE'.
  PERFORM C1 USING '            TCODE'.
  PERFORM C1 USING '            CHANGE_IND.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      TOUT-COUNT = ZCOUNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      CONCATENATE'.
  PERFORM C1 USING '        TOUT-OBJECTCLAS'.
  PERFORM C1 USING '        TOUT-USERNAME'.
  PERFORM C1 USING '        TOUT-UDATE'.
  PERFORM C1 USING '        TOUT-TCODE'.
  PERFORM C1 USING '        TOUT-CHANGE_IND'.
  PERFORM C1 USING '        TOUT-COUNT'.
  PERFORM C1 USING '        INTO trec'.
  PERFORM C1 USING '           SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      PERFORM trans.'.
  PERFORM C1 USING '    ENDSELECT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    "GENCDSCFORM

*---------------------------------------------------------------------*
*      Form  EXPTABLOG                                                *
*---------------------------------------------------------------------*
FORM EXPTABLOG.
  DATA: CHKDONE(1) TYPE C.

  CHKDONE = ' '.

  IF BC = 'X'.
*   T000 needs always to be downloaded client independent.
    IF ( ALL_CL3 = 'X' OR ALL_CL3 = 'x' ).
      PERFORM EXPTABLOGEXEC USING 'T000' CHKDONE ''.
    ELSE.
      PERFORM EXPTABLOGEXEC USING 'T000' CHKDONE ''.
    ENDIF.
  ENDIF.

ENDFORM.                    "EXPTABLOG

*---------------------------------------------------------------------*
*      Form  EXPTABLOGEXEC                                            *
*---------------------------------------------------------------------*
FORM EXPTABLOGEXEC USING CURTABNAME CHKDONE MANDTFLD.
  DATA: ANZREC TYPE I,
        COUNTFIELD TYPE I,
        MAXFIELD(5) TYPE N.

  SELECT        COUNT( * )
           INTO (ANZREC)
           FROM DD02L
          WHERE TABNAME = CURTABNAME
            AND AS4VERS = 'A'
            AND TABCLASS <> 'INTTAB'.

  IF SY-SUBRC = 4.
    CONCATENATE 'Information: ' CURTABNAME ' table do not exist.'
                INTO ZEILE.
    PERFORM ADDB0007 USING ZEILE.
    EXIT.
  ENDIF.

  SELECT        COUNT( * )
           INTO (COUNTFIELD)
           FROM DD03L
          WHERE TABNAME = CURTABNAME
            AND AS4LOCAL = 'A'.

  IF SY-SUBRC = 4.
    CONCATENATE 'Information: ' CURTABNAME ' table do not exist.'
                INTO ZEILE.
    PERFORM ADDB0007 USING ZEILE.
    EXIT.
  ENDIF.

  MAXFIELD = COUNTFIELD.

* DEF
* ===
  IF CHKDONE = ' '.
    PERFORM ADDBSET USING 'Y' '' 'M' 'ACETABLOG'.

    PERFORM ADDB2 USING 'Y' 'Table Log'.
    PERFORM ADDB3 USING 'TABNAME' 30 '' ''
                  '' '' 'Table Name' 'TabName' ''.
    PERFORM ADDB3 USING 'KEY' 100 '' '' '' '' 'Key' 'Key' ''.
    PERFORM ADDB3 USING 'USERNAME' 12 '' ''
                  '' '' 'Change User ID' 'Change User ID' ''.
    PERFORM ADDB3 USING 'LOGDATE' 8 '' ''
                  '' '' 'Change Date' 'Change Date' ''.
    PERFORM ADDB3 USING 'LOGTIME' 6 '' ''
                  '' '' 'Change Time' 'Change Time' ''.
    PERFORM ADDB3 USING 'TCODE' 30 '' '' '' '' 'TCode' 'TCode' ''.
    PERFORM ADDB3 USING 'OPTYPE' 1 '' '' '' '' 'Chg Ind' 'C' ''.
    PERFORM ADDB3 USING 'FIELDNAME' 30 '' ''
                  '' '' 'Field Name' 'FldName' ''.
    PERFORM ADDB3 USING 'SCRTEXT' 10 '' '' '' '' 'Label' 'Label' ''.
    PERFORM ADDB3 USING 'OLD' 50 '' '' '' '' 'Old Value' 'Old Value' ''.
    PERFORM ADDB3 USING 'NEW' 50 '' '' '' '' 'New Value' 'New Value' ''.
  ENDIF.

* GENERATE
* ========
  CONCATENATE 'TABLOG: Table Log:' CURTABNAME '(' FILENUM ')'
              INTO CONCAT.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  PERFORM GENCONSTSTART USING 'M'.
  PERFORM GENTABLOGSHARED USING CURTABNAME.
  PERFORM GENCONSTFORM.
  PERFORM GENTABLOGFORM USING CURTABNAME MAXFIELD MANDTFLD.
  PERFORM GENABAP.

* SUBMIT
* ======
  PERFORM SUBMITTEMP USING 'Y' 'ACETABLOG' 'M' 'ACETABLOG'
                           'Table Log'.

ENDFORM.                    "EXPTABLOGEXEC

*---------------------------------------------------------------------*
*      Form  GENTABLOGSHARED                                          *
*---------------------------------------------------------------------*
FORM GENTABLOGSHARED USING CURTABNAME.
  PERFORM C2 USING '  TABLES: ' CURTABNAME.
  PERFORM C1 USING '         ,DD03M'.
  PERFORM C1 USING '         .'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: SELDAT TYPE D'.
  PERFORM C1 USING '       ,LASTLOGDATA like DBTABLOG-LOGDATA'.
  PERFORM C1 USING '       ,LASTKEY(250) TYPE c'.
  PERFORM C1 USING '       ,CURTABNAME like DD02L-TABNAME'.
  PERFORM C1 USING '       ,CURCLI like T000-MANDT'.
  PERFORM C1 USING '       ,CURKEY  like DBTABLOG-LOGKEY'.
  PERFORM C1 USING '       ,FSCRTEXT_S like DD03M-SCRTEXT_S'.
  PERFORM C1 USING '       ,FFIELDNAME like DD03M-FIELDNAME'.
  PERFORM C1 USING '       ,TXTFLD(100) TYPE c'.
  PERFORM C1 USING '       ,NUMFIELD TYPE I'.
  PERFORM C1 USING '       .'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: LLOGDATE like DBTABLOG-LOGDATE'.
  PERFORM C1 USING '       ,LLOGTIME like DBTABLOG-LOGTIME'.
  PERFORM C1 USING '       ,LLOGKEY like DBTABLOG-LOGKEY'.
  PERFORM C1 USING '       ,LUSERNAME like DBTABLOG-USERNAME'.
  PERFORM C1 USING '       ,LDATALN like DBTABLOG-DATALN'.
  PERFORM C1 USING '       ,LLOGDATA like DBTABLOG-LOGDATA'.
  PERFORM C1 USING '       ,LOPTYPE like DBTABLOG-OPTYPE'.
  PERFORM C1 USING '       ,LTCODE like DBTABLOG-TCODE'.
  PERFORM C1 USING '       .'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '       ,TABNAME like DBTABLOG-TABNAME'.
  PERFORM C1 USING '       ,CURKEY like DBTABLOG-LOGKEY'.
  PERFORM C1 USING '       ,USERNAME like DBTABLOG-USERNAME'.
  PERFORM C1 USING '       ,LOGDATE like DBTABLOG-LOGDATE'.
  PERFORM C1 USING '       ,LOGTIME like DBTABLOG-LOGTIME'.
  PERFORM C1 USING '       ,TCODE like DBTABLOG-TCODE'.
  PERFORM C1 USING '       ,OPTYPE like DBTABLOG-OPTYPE'.
  PERFORM C1 USING '       ,FIELDNAME like DD03M-FIELDNAME'.
  PERFORM C1 USING '       ,SCRTEXT like DD03M-SCRTEXT_S'.
  PERFORM C1 USING '       ,OLD(50) TYPE c'.
  PERFORM C1 USING '       ,NEW(50) TYPE c'.
  PERFORM C1 USING '       ,'.
  PERFORM C1 USING '  END OF TOUT.'.
  PERFORM C1 USING ''.
  PERFORM C2 USING '  DATA: cREC1 like ' CURTABNAME.
  PERFORM C2 USING '       ,cREC2 like ' CURTABNAME.
  PERFORM C1 USING '         .'.
  PERFORM C1 USING '  FIELD-SYMBOLS: <CFS1> TYPE ANY'.
  PERFORM C1 USING '                ,<CFS2> TYPE ANY'.
  PERFORM C1 USING '                ,<x_struct1> TYPE x'.
  PERFORM C1 USING '                ,<x_struct2> TYPE x'.
  PERFORM C1 USING '                .'.
  PERFORM C1 USING ''.
ENDFORM.                    "GENTABLOGSHARED

*---------------------------------------------------------------------*
*      Form  GENTABLOGFORM                                           *
*---------------------------------------------------------------------*
FORM GENTABLOGFORM USING CURTABNAME NUMFIELD MANDTFLD.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  IF parflag <> ''Y''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM D3 USING '  CURTABNAME = ''' CURTABNAME '''.'.
  PERFORM C3 USING '  NUMFIELD = ' NUMFIELD '.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  SELECT       DBTABLOG~LOGDATE'.
  PERFORM C1 USING '               DBTABLOG~LOGTIME'.
  PERFORM C1 USING '               DBTABLOG~LOGKEY'.
  PERFORM C1 USING '               DBTABLOG~USERNAME'.
  PERFORM C1 USING '               DBTABLOG~DATALN'.
  PERFORM C1 USING '               DBTABLOG~LOGDATA'.
  PERFORM C1 USING '               DBTABLOG~TCODE'.
  PERFORM C1 USING '               DBTABLOG~OPTYPE'.
  PERFORM C1 USING '        INTO  (LLOGDATE'.
  PERFORM C1 USING '              ,LLOGTIME'.
  PERFORM C1 USING '              ,LLOGKEY'.
  PERFORM C1 USING '              ,LUSERNAME'.
  PERFORM C1 USING '              ,LDATALN'.
  PERFORM C1 USING '              ,LLOGDATA'.
  PERFORM C1 USING '              ,LTCODE'.
  PERFORM C1 USING '              ,LOPTYPE'.
  PERFORM C1 USING '              )'.
  PERFORM C1 USING '        FROM   DBTABLOG'.
  PERFORM C1 USING '       WHERE   DBTABLOG~TABNAME = CURTABNAME'.
  PERFORM C1 USING '         AND   DBTABLOG~LOGKEY NOT IN'.
  PERFORM C1 USING '                             (''SB'',''SE'')'.
  IF MANDTFLD <> ''.
    PERFORM C3 USING '         AND   DBTABLOG~LOGKEY LIKE '''
                     SY-MANDT '%'''.
  ENDIF.
  PERFORM C1 USING '    ORDER BY   DBTABLOG~LOGKEY'.
  PERFORM C1 USING '               DBTABLOG~LOGDATE DESCENDING'.
  PERFORM C1 USING '               DBTABLOG~LOGTIME DESCENDING'.
  PERFORM C1 USING '              .'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    MOVE LLOGKEY+0(3)         TO CURCLI.'.
  PERFORM C1 USING '    MOVE LLOGKEY              TO CURKEY.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    TOUT-TABNAME = CURTABNAME.'.
  PERFORM C1 USING '    TOUT-CURKEY = CURKEY.'.
  PERFORM C1 USING '    TOUT-LOGDATE = LLOGDATE.'.
  PERFORM C1 USING '    TOUT-LOGTIME = LLOGTIME.'.
  PERFORM C1 USING '    TOUT-USERNAME = LUSERNAME.'.
  PERFORM C1 USING '    TOUT-TCODE = LTCODE.'.
  PERFORM C1 USING '    TOUT-OPTYPE = LOPTYPE.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    IF LOPTYPE = ''U''.'.
  PERFORM C1 USING '      IF LASTKEY <> CURKEY.'.
  PERFORM C1 USING '        SELECT       SINGLE'.
  PERFORM C1 USING '                     *'.
  PERFORM C2 USING '                FROM ' CURTABNAME.
  PERFORM C1 USING '               WHERE MANDT = CURKEY.'.
  PERFORM C3 USING '        MOVE-CORRESPONDING ' CURTABNAME
                   ' TO cREC1.'.
  PERFORM C1 USING '      ELSE.'.
  PERFORM C1 USING '        MOVE-CORRESPONDING cREC2 TO cREC1.'.
  PERFORM C1 USING '      ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      assign LLOGDATA+0(*) to <x_struct1> casting.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      assign cREC2 to <x_struct2> casting.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      <x_struct2> = <x_struct1>.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      DO NUMFIELD TIMES.'.
  PERFORM C1 USING '        ASSIGN COMPONENT SY-INDEX OF'.
  PERFORM C1 USING '               STRUCTURE cREC1 TO <CFS1>.'.
  PERFORM C1 USING '        IF SY-SUBRC <> 0.'.
  PERFORM C1 USING '          CONTINUE.'.
  PERFORM C1 USING '        ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        ASSIGN COMPONENT SY-INDEX OF'.
  PERFORM C1 USING '               STRUCTURE cREC2 TO <CFS2>.'.
  PERFORM C1 USING '        IF SY-SUBRC <> 0.'.
  PERFORM C1 USING '          CONTINUE.'.
  PERFORM C1 USING '        ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        IF <CFS1> <> <CFS2>.'.
  PERFORM C1 USING '          SELECT SINGLE'.
  PERFORM C1 USING '                       SCRTEXT_S'.
  PERFORM C1 USING '                       FIELDNAME'.
  PERFORM C1 USING '                INTO  (FSCRTEXT_S'.
  PERFORM C1 USING '                      ,FFIELDNAME'.
  PERFORM C1 USING '                      )'.
  PERFORM C1 USING '                FROM   DD03M'.
  PERFORM C1 USING '                WHERE  TABNAME = CURTABNAME'.
  PERFORM C1 USING '                  AND  FLDSTAT = ''A'''.
  PERFORM C1 USING '                  AND  ROLLSTAT = ''A'''.
  PERFORM C1 USING '                  AND  DOMSTAT = ''A'''.
  PERFORM C1 USING '                  AND  TEXTSTAT = ''A'''.
  PERFORM C1 USING '                  AND  DDLANGUAGE = SY-LANGU'.
  PERFORM C1 USING '                  AND  POSITION = SY-INDEX.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          TOUT-FIELDNAME = FFIELDNAME.'.
  PERFORM C1 USING '          TOUT-SCRTEXT = FSCRTEXT_S.'.
  PERFORM C1 USING '          TOUT-OLD = <CFS2>.'.
  PERFORM C1 USING '          TOUT-NEW = <CFS1>.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '                  IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING '          REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '                  IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          CONCATENATE'.
  PERFORM C1 USING '               TOUT-TABNAME'.
  PERFORM C1 USING '               TOUT-CURKEY'.
  PERFORM C1 USING '               TOUT-USERNAME'.
  PERFORM C1 USING '               TOUT-LOGDATE'.
  PERFORM C1 USING '               TOUT-LOGTIME'.
  PERFORM C1 USING '               TOUT-TCODE'.
  PERFORM C1 USING '               TOUT-OPTYPE'.
  PERFORM C1 USING '               TOUT-FIELDNAME'.
  PERFORM C1 USING '               TOUT-SCRTEXT '.
  PERFORM C1 USING '               TOUT-OLD'.
  PERFORM C1 USING '               TOUT-NEW'.
  PERFORM C1 USING '               INTO trec'.
  PERFORM C1 USING '               SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          PERFORM trans.'.
  PERFORM C1 USING '        ENDIF.'.
  PERFORM C1 USING '      ENDDO.'.
  PERFORM C1 USING '    ELSE.'.
  PERFORM C1 USING '          TOUT-FIELDNAME = ''''.'.
  PERFORM C1 USING '          TOUT-SCRTEXT = ''''.'.
  PERFORM C1 USING '          TOUT-OLD = ''''.'.
  PERFORM C1 USING '          TOUT-NEW = ''''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '                  IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING '          REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '                  IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          CONCATENATE'.
  PERFORM C1 USING '               TOUT-TABNAME'.
  PERFORM C1 USING '               TOUT-CURKEY'.
  PERFORM C1 USING '               TOUT-USERNAME'.
  PERFORM C1 USING '               TOUT-LOGDATE'.
  PERFORM C1 USING '               TOUT-LOGTIME'.
  PERFORM C1 USING '               TOUT-TCODE'.
  PERFORM C1 USING '               TOUT-OPTYPE'.
  PERFORM C1 USING '               TOUT-FIELDNAME'.
  PERFORM C1 USING '               TOUT-SCRTEXT '.
  PERFORM C1 USING '               TOUT-OLD'.
  PERFORM C1 USING '               TOUT-NEW'.
  PERFORM C1 USING '           INTO trec'.
  PERFORM C1 USING '           SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      PERFORM trans.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    LASTKEY = CURKEY.'.
  PERFORM C1 USING '    LASTLOGDATA = LLOGDATA.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  ENDSELECT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    "GENTABLOGFORM

*---------------------------------------------------------------------*
*       FORM GETCLEARLINE                                             *
*---------------------------------------------------------------------*
FORM GETCLEARLINE.
  DATA: LLEN LIKE SY-INDEX,
        CPOS LIKE SY-INDEX,
        CPOS2 LIKE SY-INDEX,
        NPOS LIKE SY-INDEX,
        CLIN LIKE TLINE-TDLINE,
        ANZCOL TYPE I,
        CURCOL TYPE I,
        ANZST  TYPE I,
        ANZTEST TYPE I,
        CONTR(3) TYPE C,
        COMMA(3) TYPE C,
        IGNOR(3) TYPE C.
  FIELD-SYMBOLS:
        <ST>,
        <ST2>.

  LLEN = STRLEN( HLPLINES-TDLINE ).
  CPOS = 0.
  NPOS = 0.
  CLIN = ''.
  CURCOL = 0.
  CONTR = 'OFF'.
  IGNOR = 'OFF'.
  COMMA = 'OFF'.
  IF HLPLINES-TDFORMAT = 'K1' OR HLPLINES-TDFORMAT = 'T1'.
    ANZCOL = 2.
  ELSEIF HLPLINES-TDFORMAT = 'K2' OR HLPLINES-TDFORMAT = 'T2'.
    ANZCOL = 3.
  ELSEIF HLPLINES-TDFORMAT = 'K3' OR HLPLINES-TDFORMAT = 'T3'.
    ANZCOL = 5.
  ELSEIF HLPLINES-TDFORMAT = 'K4' OR HLPLINES-TDFORMAT = 'T4'.
    ANZCOL = 7.
  ELSEIF HLPLINES-TDFORMAT = 'K5' OR HLPLINES-TDFORMAT = 'T5'.
    ANZCOL = 10.
  ELSEIF HLPLINES-TDFORMAT = 'K6' OR HLPLINES-TDFORMAT = 'T6'.
    ANZCOL = 15.
  ELSE.
    ANZCOL = 5.
  ENDIF.

  WHILE CPOS < LLEN.
    ASSIGN HLPLINES-TDLINE+CPOS(1) TO <ST>.
    CPOS2 = CPOS + 1.
    ASSIGN HLPLINES-TDLINE+CPOS2(1) TO <ST2>.

    IF CONTR = 'OFF'.

      IF <ST> = '<' AND IGNOR = 'OFF'.
        CONTR = 'ON'.

      ELSE.

        IF COMMA = 'ON'.
          COMMA = 'OFF'.

        ELSEIF <ST> = ',' AND <ST2> = ','.
          COMMA = 'ON'.
          ANZST = 72 / ANZCOL * ( CURCOL + 1 ).
          ANZTEST = ( 132 - NPOS ) - ( LLEN - CPOS - 1 ).
          IF ANZST > ANZTEST.
            ANZST = ANZTEST.
          ENDIF.
          WHILE NPOS < ANZST.
            MOVE SPACE                          TO CLIN+NPOS(1).
            NPOS = NPOS + 1.
          ENDWHILE.
          CURCOL = CURCOL + 1.
        ELSE.
          MOVE <ST>                             TO CLIN+NPOS(1).
          NPOS = NPOS + 1.
        ENDIF.
      ENDIF.

    ELSE.
      IF <ST> = '('.
        IGNOR = 'ON'.
      ELSEIF <ST> = ')'.
        IGNOR = 'OFF'.
      ELSEIF <ST> = '>'.
        CONTR = 'OFF'.
      ENDIF.
    ENDIF.

    CPOS = CPOS + 1.

  ENDWHILE.

  HLPLINES-TDLINE = CLIN.

ENDFORM.                    "GETCLEARLINE


*---------------------------------------------------------------------*
*       FORM TRANSHLP                                                 *
*---------------------------------------------------------------------*
FORM TRANSHLP.
  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEHLP-HLPROW WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEHLP-HLPROW WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEHLP-OBJCT WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEHLP-OBJCT WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSTXT IN ACEHLP-RFORMAT WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN ACEHLP-RFORMAT WITH REPLCHAR.
  CONCATENATE
              ACEHLP-HLPROW
              ACEHLP-OBJCT
              ACEHLP-RFORMAT
              ACEHLP-ROWNUM
              INTO TRANSREC
              SEPARATED BY TRANSSEP.

  PERFORM TRANS.
ENDFORM.                    "TRANSHLP

*---------------------------------------------------------------------*
*       FORM EXPDYNAMIC                                               *
*---------------------------------------------------------------------*
FORM EXPDYNAMIC.
  DATA: OKFLAG(1) TYPE C
       ,TABBEZ LIKE DD02T-DDTEXT
       ,PARFLAG(1) TYPE C
       .

  PERFORM GETDYNAMIC.

  LOOP AT B0005.
    OKFLAG = 'N'.

    IF B0005-MIN = 'M'.
      OKFLAG = 'Y'.
    ENDIF.
    IF B0005-BC = 'B' AND BC = 'X'.
      OKFLAG = 'Y'.
    ENDIF.
    IF B0005-DV = 'D' AND DV = 'X'.
      OKFLAG = 'Y'.
    ENDIF.
    IF B0005-FSD = 'F' AND FSD = 'X'.
      OKFLAG = 'Y'.
    ENDIF.
    IF B0005-AGF = 'A' AND AGF = 'X'.
      OKFLAG = 'Y'.
    ENDIF.

    IF DV01 = 'X' AND B0005-SDV+1(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV02 = 'X' AND B0005-SDV+2(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV03 = 'X' AND B0005-SDV+3(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV04 = 'X' AND B0005-SDV+4(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV05 = 'X' AND B0005-SDV+5(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV06 = 'X' AND B0005-SDV+6(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV07 = 'X' AND B0005-SDV+7(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV08 = 'X' AND B0005-SDV+8(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV09 = 'X' AND B0005-SDV+9(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV10 = 'X' AND B0005-SDV+10(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV11 = 'X' AND B0005-SDV+11(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV12 = 'X' AND B0005-SDV+12(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV13 = 'X' AND B0005-SDV+13(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV14 = 'X' AND B0005-SDV+14(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV15 = 'X' AND B0005-SDV+15(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV16 = 'X' AND B0005-SDV+16(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV17 = 'X' AND B0005-SDV+17(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF DV18 = 'X' AND B0005-SDV+18(1) = 'X'.
      OKFLAG = 'Y'.
    ENDIF.

    IF TA01 = 'X' AND B0005-STAB+1(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA02 = 'X' AND B0005-STAB+2(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA03 = 'X' AND B0005-STAB+3(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA04 = 'X' AND B0005-STAB+4(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA05 = 'X' AND B0005-STAB+5(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA06 = 'X' AND B0005-STAB+6(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA07 = 'X' AND B0005-STAB+7(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA08 = 'X' AND B0005-STAB+8(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA09 = 'X' AND B0005-STAB+9(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA10 = 'X' AND B0005-STAB+10(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA11 = 'X' AND B0005-STAB+11(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA12 = 'X' AND B0005-STAB+12(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA13 = 'X' AND B0005-STAB+13(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA14 = 'X' AND B0005-STAB+14(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA15 = 'X' AND B0005-STAB+15(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA16 = 'X' AND B0005-STAB+16(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA17 = 'X' AND B0005-STAB+17(1) = 'X'.
      OKFLAG = 'Y'.
    ELSEIF TA18 = 'X' AND B0005-STAB+18(1) = 'X'.
      OKFLAG = 'Y'.
    ENDIF.

    IF OKFLAG = 'Y'.
      PERFORM ADDBSET USING 'Y' '' B0005-FTYPE B0005-TABNAME.

      SELECT SINGLE DDTEXT
               INTO TABBEZ
               FROM DD02T
              WHERE TABNAME  = B0005-TABNAME
                AND DDLANGUAGE = SY-LANGU
                AND AS4LOCAL = 'A'.

      CONCATENATE B0005-TABNAME ':'
                  INTO CONCATU.
      CONCATENATE '(' FILENUM ')'
                  INTO CONCATU2.
      CONCATENATE CONCATU TABBEZ CONCATU2
                  INTO CONCAT
                  SEPARATED BY SPACE.
      MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

      PERFORM GENCONSTSTART USING B0005-FTYPE.
      PERFORM GENDYNAMICSHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENDYNAMICFORM USING
                              B0005-FTYPE
                              B0005-TABNAME
                              B0005-LANGFIELD
                              B0005-LIMIT
                              B0005-GEN
                              B0005-MIN
                              B0005-CLI
                              B0005-BC
                              B0005-DV
                              B0005-FSD
                              B0005-AGF
                              B0005-SDV
                              B0005-STAB
                              B0005-FLDLIST
                             CHANGING
                              PARFLAG.
      PERFORM GENABAP.
      PERFORM SUBMITTEMP USING PARFLAG 'EXPDYNAMIC'
                               B0005-FTYPE B0005-TABNAME ''.
    ENDIF.
  ENDLOOP.

ENDFORM.                    "EXPDYNAMIC

*---------------------------------------------------------------------*
*       FORM GETDYNAMIC                                               *
*---------------------------------------------------------------------*
FORM GETDYNAMIC.
  DATA CO TYPE I.
  DATA STAB(18) TYPE C.
  DATA SFLD(1000) TYPE C.

* Mandatory Tables
* ================
  IF P_ONLPST = SPACE.
      PERFORM ADDB45 USING 'M' 'TOBJ' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TOBJ_OFF' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TOBJ_CD' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TOBJT' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TOBC' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TOBCT' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TSTC' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TSTCT' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TSTCP' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR02' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR03' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR04' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR06' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR10' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR11' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR12' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR13' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USR21' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USREFUS' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USOBT' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USOBT_C' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USOBX' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'USOBX_C' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TCDCOUPLES' MAXLIMIT 'NONE' 'MC'
                                                              '' '' ''.
      PERFORM ADDB45 USING 'M' 'AUTHX' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'AGR_PROF' MAXLIMIT 'NONE' 'MC' '' '' ''.
      PERFORM ADDB45 USING 'M' 'AGR_USERS' MAXLIMIT 'NONE' 'MC'
                                                              '' '' ''.
      PERFORM ADDB45 USING 'M' 'AGR_TEXTS' MAXLIMIT 'NONE' 'MC'
                                                              '' '' ''.
      PERFORM ADDB45 USING 'M' 'AGR_DEFINE' MAXLIMIT 'NONE' 'MC'
                                                              '' '' ''.
      PERFORM ADDB45 USING 'M' 'AGR_AGRS' MAXLIMIT 'NONE' 'MC' '' '' ''.
      CONCATENATE
                  'CLIENT#ADDRNUMBER#PERSNUMBER#DEPARTMENT#FUNCTION' ''
                  INTO SFLD.
      PERFORM ADDB45 USING 'M' 'ADCP' MAXLIMIT 'NONE' 'M' '' '' SFLD.
      CONCATENATE
                  'CLIENT#PERSNUMBER#NAME_FIRST#NAME_LAST#NAME_TEXT' ''
                  INTO SFLD.
      PERFORM ADDB45 USING 'M' 'ADRP' MAXLIMIT 'NONE' 'M' '' '' SFLD.
      PERFORM ADDB45 USING 'M' 'TACT' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TACTZ' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TACTT' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TBRG' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'TBRGT' MAXLIMIT 'NONE' 'M' '' '' ''.
      PERFORM ADDB45 USING 'M' 'T000' MAXLIMIT 'NONE' 'M' '' '' ''.
  ENDIF.

*   Related Table for Extended Download
*   ===================================
  IF P_ANLA1 = 'X' OR P_ANLB2 = 'X' OR P_ANLC3 = 'X' OR
     P_BKPF4 = 'X' OR P_BSEG5 = 'X' OR P_CDHDR6 = 'X' OR
     P_EKKO7 = 'X' OR P_REL7 = 'X' OR P_EKPO8 = 'X' OR
     P_KNA19 = 'X' OR P_KNB110 = 'X' OR P_LFA111 = 'X' OR
     P_LFB112 = 'X' OR P_MBEW13 = 'X' OR P_MBEW14 = 'X' OR
     P_SKA15 = 'X' OR P_SKB16 = 'X' OR P_VBAK17 = 'X' OR
     P_VBAP18 = 'X' OR P_RBKP19 = 'X' OR P_RSEG20 = 'X' OR
     P_EKBE21 = 'X' OR P_CDPO22 = 'X' OR P_MKPF23 = 'X' OR
     P_MSEG24 = 'X' OR P_MARA25 = 'X' OR P_MARC26 = 'X' OR
     P_MARM27 = 'X' OR P_MVKE28 = 'X' OR P_LFM129 = 'X' OR
     P_KNVV30 = 'X' OR P_KNKK31 = 'X' OR P_VBRK32 = 'X'.
    PERFORM ADDB45 USING 'O' 'T001W' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TVTW' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TVKO' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TSPA' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T024E' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T156' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T003' EXTLIMIT 'NONE' 'M' '' '' ''.
  ENDIF.

*   Related Table for Posting Download
*   ==================================
  IF P_DWNPST = 'X' OR P_ONLPST = 'X'.
    CONCATENATE
                'KTOPL#SAKNR#XBILK#BILKT#ERDAT#ERNAM#GVTYP#'
                'KTOKS#XLOEV#XSPEA#XSPEB'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'SKA1' EXTLIMIT 'NONE' 'M' '' '' SFLD.
    CONCATENATE
                'BUKRS#SAKNR#BEGRU#ERDAT#ERNAM#MITKZ#MWSKZ#'
                'WAERS#XGKON#XINTB#XLOEB#XNKON#XOPVW#XSPEB#XMWNO#'
                'XSALH#TOGRU'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'SKB1' EXTLIMIT 'NONE' 'M' '' '' SFLD.
    PERFORM ADDB45 USING 'M' 'USR02' MAXLIMIT 'NONE' 'MC' '' '' ''.
    PERFORM ADDB45 USING 'M' 'TSTCT' MAXLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T001W' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TVTW' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TVKO' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TSPA' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T024E' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T156' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T003T' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T003' EXTLIMIT 'NONE' 'M' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T001' EXTLIMIT 'NONE' 'M' '' '' ''.
    CONCATENATE
                'LIFNR#NAME1#KTOKK'
                ''
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'LFA1' EXTLIMIT 'NONE' '' '' '' SFLD.
    PERFORM ADDB45 USING 'O' 'T077K' EXTLIMIT 'NONE' '' '' '' ''.
    CONCATENATE
                'KUNNR#NAME1#KTOKD'
                ''
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'KNA1' EXTLIMIT 'NONE' '' '' '' SFLD.
    PERFORM ADDB45 USING 'O' 'T077D' EXTLIMIT 'NONE' '' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TBSL' EXTLIMIT 'NONE' '' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TKA01' EXTLIMIT 'NONE' '' '' '' ''.
    PERFORM ADDB45 USING 'O' 'CSKS' EXTLIMIT 'NONE' '' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T042Z' EXTLIMIT 'NONE' '' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T008' EXTLIMIT 'NONE' '' '' '' ''.
    PERFORM ADDB45 USING 'O' 'CEPC' EXTLIMIT 'NONE' '' '' '' ''.
  ENDIF.

  IF P_DWNCAT = SPACE AND P_ONLPST = SPACE.
*   Field Status
*   ============
    PERFORM ADDB45 USING 'O' 'TMODF' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TMODG' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TMODO' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TMODP' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'DD04T' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'SKB1' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T037' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T077D' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T077K' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T077S' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'T156B' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TIV00' MAXLIMIT 'NONE' 'F' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TWRF2' MAXLIMIT 'NONE' 'F' '' '' ''.

*   Object field tables
*   ===================
  DATA: FLD LIKE TOBJ-FIEL1,
        FLG(20) TYPE C.

  DATA: BEGIN OF WDD04L,
        DOMNAME TYPE DD04L-DOMNAME,
        END OF WDD04L.

  DATA: BEGIN OF WDD01L,
        ENTITYTAB TYPE DD01L-ENTITYTAB,
        END OF WDD01L.

  SELECT        OBJCT
                FIEL1
                FIEL2
                FIEL3
                FIEL4
                FIEL5
                FIEL6
                FIEL7
                FIEL8
                FIEL9
                FIEL0
                OCLSS
           INTO (WTOBJ-OBJCT
                ,WTOBJ-FIEL1
                ,WTOBJ-FIEL2
                ,WTOBJ-FIEL3
                ,WTOBJ-FIEL4
                ,WTOBJ-FIEL5
                ,WTOBJ-FIEL6
                ,WTOBJ-FIEL7
                ,WTOBJ-FIEL8
                ,WTOBJ-FIEL9
                ,WTOBJ-FIEL0
                ,WTOBJ-OCLSS
                )
           FROM TOBJ.

    DO 10 TIMES VARYING FLD FROM WTOBJ-FIEL1 NEXT WTOBJ-FIEL2.
      IF FLD <> ''.
        SELECT SINGLE TABNAME
                      CHECKTABLE
                      ROLLNAME
                 INTO (WDD03L-TABNAME
                      ,WDD03L-CHECKTABLE
                      ,WDD03L-ROLLNAME
                      )
                 FROM DD03L
                WHERE TABNAME    = 'AUTHA'
                  AND FIELDNAME  = FLD
                  AND AS4LOCAL   = 'A'.

        IF SY-SUBRC = 4.
          SELECT SINGLE TABNAME
                        CHECKTABLE
                        ROLLNAME
                   INTO (WDD03L-TABNAME
                        ,WDD03L-CHECKTABLE
                        ,WDD03L-ROLLNAME
                        )
                   FROM DD03L
                  WHERE TABNAME    = 'AUTHB'
                    AND FIELDNAME  = FLD
                    AND AS4LOCAL   = 'A'.

          IF SY-SUBRC = 4.
            CONTINUE.
          ENDIF.
        ENDIF.

        IF WTOBJ-OCLSS = 'AAAB'.
          FLG = ' X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'AM'.
          FLG = '      X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'BC_A'.
          FLG = 'X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'BC_C'.
          FLG = 'X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'BC_Z'.
          FLG = 'X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'CLAS'.
          FLG = ' X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'CO'.
          FLG = '         XX'.
        ENDIF.
        IF WTOBJ-OCLSS = 'COND'.
          FLG = '    X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'CV'.
          FLG = ' X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'ECCS'.
          FLG = '  X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'EDI'.
          FLG = ' X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'FI'.
          FLG = '  X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'FI_T'.
          FLG = '        X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'HR'.
          FLG = '       X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'IM'.
          FLG = '  X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'IS'.
          FLG = '                X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'IS-B'.
          FLG = '                X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'ISRE'.
          FLG = '                X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'IS_B'.
          FLG = '                X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'IS_H'.
          FLG = '                X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'IS_P'.
          FLG = '                X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'LC'.
          FLG = '          X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'LE_L'.
          FLG = '     X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'LE_T'.
          FLG = '    X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'LE_V'.
          FLG = '    X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'LO'.
          FLG = '   XXX'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_B'.
          FLG = '     X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_D'.
          FLG = '   X X      X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_E'.
          FLG = '   X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_G'.
          FLG = '   XXX      X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_L'.
          FLG = '     X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_R'.
          FLG = '  XX'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_S'.
          FLG = '     X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'MM_W'.
          FLG = '  X  X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'PM'.
          FLG = '           X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'PP'.
          FLG = '            X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'PS'.
          FLG = '              X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'QA'.
          FLG = '             X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'SD'.
          FLG = '    X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'TRTM'.
          FLG = '        X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'WCM'.
          FLG = ' X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'WF'.
          FLG = ' X'.
        ENDIF.
        IF WTOBJ-OCLSS = 'WG'.
          FLG = '                 X'.
        ENDIF.

        CASE WDD03L-CHECKTABLE.
          WHEN '*'.
            SELECT        DOMNAME
                     INTO (WDD04L-DOMNAME)
                     FROM DD04L
                    WHERE ROLLNAME = WDD03L-ROLLNAME
                      AND AS4LOCAL   = 'A'.

              SELECT        ENTITYTAB
                       INTO (WDD01L-ENTITYTAB)
                       FROM DD01L
                      WHERE DOMNAME = WDD04L-DOMNAME
                        AND AS4LOCAL   = 'A'.
                PERFORM ADDB45 USING 'O' WDD01L-ENTITYTAB STDLIMIT
                                             'NONE' '' '' FLG ''.
              ENDSELECT.
            ENDSELECT.

          WHEN ''.

          WHEN OTHERS.
            PERFORM ADDB45 USING 'O' WDD03L-CHECKTABLE STDLIMIT 'NONE'
                                                     '' '' FLG ''.
        ENDCASE.
      ENDIF.
    ENDDO.
  ENDSELECT.


*   Tables with authorition groups
*   ==============================
*   DOMNAME
    SELECT        TABNAME
             INTO (WDD03L-TABNAME
                  )
             FROM DD03L
            WHERE DOMNAME IN ('BRGRU'
                             ,'BERGR'
                             ,'BEGRU'
                             ,'P_GROUP'
                             ,'IAUTG'
                             ,'FC_AGDEF'
                             ,'FS_BRGRU'
                             )
              AND AS4LOCAL   = 'A'.

      SELECT      COUNT( * )
             INTO CO
             FROM DD02L
            WHERE TABNAME = WDD03L-TABNAME
              AND TABCLASS IN ('POOL'
                              ,'TRANSP'
                              ,'CLUSTER'
                              )
              AND AS4LOCAL   = 'A'.

      IF CO > 0.
        IF WDD03L-TABNAME = 'BSEC'.
          CONCATENATE 'Information:' WDD03L-TABNAME 'table'
                      'was identified due to DOMNAME selection'
                      INTO ZEILE SEPARATED BY SPACE.
          CONDENSE ZEILE.
          PERFORM ADDB0007 USING ZEILE.
        ELSE.
          PERFORM ADDB45
            USING 'O' WDD03L-TABNAME STDLIMIT 'NONE' 'A' '' '' ''.
        ENDIF.
      ENDIF.

    ENDSELECT.

*   FIELDNAME
    SELECT        TABNAME
             INTO (WDD03L-TABNAME
                  )
             FROM DD03L
            WHERE FIELDNAME IN ('SECU'
                               ,'CVBRG'
                               )
              AND AS4LOCAL   = 'A'.

      SELECT      COUNT( * )
             INTO CO
             FROM DD02L
            WHERE TABNAME = WDD03L-TABNAME
              AND TABCLASS IN ('POOL'
                              ,'TRANSP'
                              ,'CLUSTER'
                              )
              AND AS4LOCAL   = 'A'.

      IF CO > 0.
        IF WDD03L-TABNAME = 'BSEC'.
          CONCATENATE 'Information:' WDD03L-TABNAME 'table'
                      'was identified due to FIELDNAME selection'
                      INTO ZEILE SEPARATED BY SPACE.
          CONDENSE ZEILE.
          PERFORM ADDB0007 USING ZEILE.
        ELSE.
          PERFORM ADDB45
            USING 'O' WDD03L-TABNAME STDLIMIT 'NONE' 'A' '' '' ''.
        ENDIF.
      ENDIF.

    ENDSELECT.

*   ROLLNAME
    SELECT        TABNAME
             INTO (WDD03L-TABNAME
                  )
             FROM DD03L
            WHERE ROLLNAME IN ('SECU'
                              ,'AUTGR'
                              ,'BGRKL'
                              ,'BGRSE'
                              ,'BGRKP'
                              )
              AND AS4LOCAL   = 'A'.

      SELECT      COUNT( * )
             INTO CO
             FROM DD02L
            WHERE TABNAME = WDD03L-TABNAME
              AND TABCLASS IN ('POOL'
                              ,'TRANSP'
                              ,'CLUSTER'
                              )
              AND AS4LOCAL   = 'A'.

      IF CO > 0.
        IF WDD03L-TABNAME = 'BSEC'.
          CONCATENATE 'Information:' WDD03L-TABNAME 'table'
                      'was identified due to ROLLNAME selection'
                      INTO ZEILE SEPARATED BY SPACE.
          CONDENSE ZEILE.
          PERFORM ADDB0007 USING ZEILE.
        ELSE.
          PERFORM ADDB45
            USING 'O' WDD03L-TABNAME STDLIMIT 'NONE' 'A' '' '' ''.
        ENDIF.
      ENDIF.

    ENDSELECT.


*   Optional Tables
*   ===============

*   00. General
    PERFORM ADDB45 USING 'O' 'USORG' MAXLIMIT 'NONE' 'BC' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USGRP_USER' MAXLIMIT 'NONE' 'BC' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USR05' MAXLIMIT 'NONE' 'BC' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USH10' STDLIMIT 'WHERE' 'CB' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USH12' STDLIMIT 'WHERE' 'CB' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USR15' STDLIMIT 'NONE' 'CB' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USR20' STDLIMIT 'NONE' 'CB' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USR40' STDLIMIT 'NONE' 'CB' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USR41' STDLIMIT 'NONE' 'CB' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USOGR' STDLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USOTT' STDLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USOBT_CD' EXTLIMIT 'WHERE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USOBX_CD' EXTLIMIT 'WHERE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'AGR_TCODES' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TUTYPNOW' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'PRGN_CUST' STDLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'CWBNTHEAD' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'CWBNTSTXT' STDLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'CVERS' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'CVERS_REF' STDLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'PAT03' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TPFHT' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'TPFET' MAXLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'DDPRS' EXTLIMIT 'WHERE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'E070' STDLIMIT 'NONE' 'B' '' '' ''.
    CONCATENATE
                'TRKORR#AS4POS#PGMID#OBJECT#OBJ_NAME' ''
                INTO SFLD.
    PERFORM ADDB45
      USING 'O' 'V_E071EU' EXTLIMIT 'WHERE' 'B' '' '' SFLD.
    CONCATENATE
                'TABNAME#AS4VERS#PROTOKOLL' ''
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'DD09L' STDLIMIT 'WHERE' 'B' '' '' SFLD.
    CONCATENATE
                'TABNAME#AS4VERS#TABCLASS#MAINFLAG#CONTFLAG#CLIDEP' ''
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'DD02L' STDLIMIT 'WHERE' 'B' '' '' SFLD.
    PERFORM ADDB45 USING 'O' 'USL04' STDLIMIT 'NONE' 'B' '' '' ''.
    PERFORM ADDB45 USING 'O' 'USLA04' STDLIMIT 'NONE' 'B' '' '' ''.

*   01. Basis
    STAB = 'X'.
    PERFORM ADDB45 USING 'O' 'TADIR' MAXLIMIT 'WHERE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TRDIR' MAXLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DD02V' MAXLIMIT 'WHERE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'E070C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'E070CREATE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'E07T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DD01L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TPROT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSP05' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TST02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSYST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TASYS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TWSYS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DEVL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSE061N' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DLV_SYSTC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CVERS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CVERS_REF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TRNSPACE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TRNSPACETT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCSYS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TDEVC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TDDAT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCECLILY' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCECPSTAT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCEDELI' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCEQUAS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCERELE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCESYST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCESYSTT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCETARG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCETARGHDR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCETARGT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCETRAL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCETRALT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCEVERS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCEVERST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSE061N' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSALOG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCDES' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCDES_S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCDOL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCDOM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCDOMT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCNFS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCNFST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCROUTE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCSYS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCSYST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSCTOK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSFSYSH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSFSYSL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSMCONF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSPCONF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSPVERS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'TMSQCONFRM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSSRV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSSRVT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSTCRI' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSTLOCKP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMSTLOCKR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZVIRFFIDS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZFFUSERS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZFFCNTRL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZVIRFFPWD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZFFCONFIG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZVIRTCODE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' '/VIRSA/ZVRATCNFG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'OBJH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DD26S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AGR_1016B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DEVACCESS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'ADIRACCESS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TPLOG' EXTLIMIT 'WHERE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBTCO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBTCP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'TSOCM_COND_MAPP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'CRMC_PARTNER_PDD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'CRMC_PARTNER_PDT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'CRMC_PARTNER_PDP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'CRMC_PARTNER_FCT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'SE16N_CD_KEY' STDLIMIT 'WHERE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'UASE16N_CD_KEY' STDLIMIT 'WHERE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'USBAPILINK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'USZBVLNDRC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'USZBVLNDSC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'USRFLDSEL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'RFCSYSACL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'USRACL' STDLIMIT 'NONE' '' STAB '' ''.

*   02. Cross-Application
    STAB = ' X'.
    PERFORM ADDB45 USING 'O' 'SERPT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'SERPTREE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'SREPORTEXT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T005' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T005S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T005T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T006' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T006A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T016' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T022' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156SC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T158V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T800' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T801K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T803J' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCURC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TPI01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T682Z' STDLIMIT 'NONE' '' STAB '' ''.

*   03. Financial Accounting
    STAB = '  X'.
    PERFORM ADDB45 USING 'O' 'T001' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001Q' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001Q' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T007A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T011' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030R' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047N' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T056B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T059P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T179' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T856' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBAER' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBSL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TFKB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TGSB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TGSBK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'NRIV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'SKAT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030H' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T041C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T041CT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T078S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBSLT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCURD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'FAGL_SEGM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'FAGL_TLDGRP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBSLT' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'KTOPL#SAKNR#XBILK#BILKT#ERDAT#ERNAM#GVTYP#'
                'KTOKS#XLOEV#XSPEA#XSPEB'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'SKA1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'BUKRS#SAKNR#BEGRU#ERDAT#ERNAM#MITKZ#MWSKZ#'
                'WAERS#XGKON#XINTB#XLOEB#XNKON#XOPVW#XSPEB#XMWNO#'
                'XSALH#TOGRU'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'SKB1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45
      USING 'O' 'FAGL_ACTIVEC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'FAGLCOFICCODEC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'FAGLCOFIVARC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'FAGLCOFIVART' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB90' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB901' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB903' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB905' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB906' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB907' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB908' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB90T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB91T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB92' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB921' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB921T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB922' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB925' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB92T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB93' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB931' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB935' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'GB93T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'SWFDEVENA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'SWFDEVTYP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009Y' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T010O' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T010P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T014' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T014T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030Y' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T100' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T100S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T880' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCURR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'VBWF01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'VBWF02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'FAGL_SPLIT_ACTC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'FAGL_LEDGER_SCEN' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'FAGL_SCENARIO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'FAGL_SCENARIOT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G12' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G03' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G03T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G31' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G31T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'FAGL_SPLIT_FIELD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G17' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G02T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G30A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T8G30AT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'TACC_PRINCIPLE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'TACC_PRINCIPLET' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'TACC_TRGT_LDGR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T044A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T044B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T033' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T033T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
            USING 'O' 'TACC_BWBER_PR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T044L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T044KT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T044G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T056' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T056X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T044I' STDLIMIT 'NONE' '' STAB '' ''.

*   04. Procurement
    STAB = '   X'.
    CONCATENATE
                'LIFNR#LAND1#NAME1#NAME2#ORT01#ORT02#ERDAT#'
                'ERNAM#LNRZA#LOEVM#SPERR#SPERM#STKZU#XCPDK#XZEMP#'
                'SPERZ#XLFZA#NODEL#PODKZB#BEGRU#KTOKK#STCEG'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'LFA1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'LFAS' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'LIFNR#BUKRS#PERNR#ERDAT#ERNAM#SPERR#LOEVM#'
                'AKONT#BEGRU#ZAHLS#ZTERM#LNRZB#TOGRR#XLFZB#NODEL#REPRF'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'LFB1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'LIFNR#EKORG#ERDAT#ERNAM#SPERM#LOEVM#LFABC#WAERS#'
                'MINBW#ZTERM#INCO1#INCO2#WEBRE#KZAUT#EKGRP#XERSY#'
                'PRFRE#RDPRF#XERSR#LEBRE'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'LFM1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'LFBK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PCEC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T008' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T012' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T012K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T052U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T053R' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T059A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T100C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T130F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T130M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T130W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134H' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T137' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T149C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T149D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T157D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T158' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T159L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T160M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AUSP' STDLIMIT 'WHERE' '' STAB '' ''.
    CONCATENATE
                'TABNAME#FIELDNAME#ROLLNAME#DOMNAME#POSITION#'
                'INTTYPE#INTLEN#REFTABLE#REFFIELD#ENTITYTAB#'
                'DATATYPE#LENG#OUTPUTLEN#DECIMALS#DDTEXT#REPTEXT'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'DD03M' STDLIMIT 'WHERE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'T161' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161H' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161I' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T162X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T163' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T163K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T16FW' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T179' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T405' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T499S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVOID' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVTA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CABN' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CABNT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CAWN' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CAWNT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KLAH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KSML' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'LFM1' EXTLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T055' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077Y' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T078K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T079K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156HT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T161P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T163I' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T163Y' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TFMC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T055F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'MATNR#ERSDA#ERNAM#LAEDA#AENAM#VPSTA#MTART#'
                'MATKL#MEINS#MSTDV#BEGRU'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'MARA' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'EINE' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T009Y' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T027A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T027B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030R' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030Y' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T041A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T041T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T052' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T074' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T074T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T074U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T158B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T163A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T165' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T683S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T685A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T863Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBSL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBSLT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSTC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSTCT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'MARV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'ESUH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T52CC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMKW1' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMKW1T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMKK1' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMKK1T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T163KS' STDLIMIT 'NONE' '' STAB '' ''.


*   Procurement Tables with for Release Strategy
    SELECT        ENTITYTAB
             INTO (WDD03L-TABNAME
                  )
             FROM DD03M
            WHERE TABNAME in ('CEKKO',
                              'CEBAN',
                              'CESSR')
              AND FLDSTAT = 'A'
              AND ROLLSTAT = 'A'
              AND DOMSTAT = 'A'
              AND TEXTSTAT = 'A'
              AND DDLANGUAGE = 'EN'
              AND ENTITYTAB <> ''.

      SELECT      COUNT( * )
             INTO CO
             FROM DD02L
            WHERE TABNAME = WDD03L-TABNAME
              AND TABCLASS IN ('POOL'
                              ,'TRANSP'
                              ,'CLUSTER'
                              )
              AND AS4LOCAL   = 'A'.

      IF CO > 0.
        PERFORM ADDB45
          USING 'O' WDD03L-TABNAME STDLIMIT 'NONE' '' STAB '' ''.
      ENDIF.

    ENDSELECT.


*   05. Sales and Distribution
    STAB = '    X'.
    PERFORM ADDB45 USING 'O' 'C001' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'C002' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'C003' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'C004' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'C005' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'KUNNR#LAND1#NAME1#NAME2#ORT01#XCPDK#AUFSD#BEGRU#'
                'ERDAT#ERNAM#FAKSD#KNRZA#KTOKD#KUKLA#LIFSD#STCEG#'
                'SPERZ#XKNZA#CASSD#NODEL'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'KNA1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'KNAS' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'KUNNR#BUKRS#PERNR#ERDAT#ERNAM#SPERR#LOEVM#AKONT#'
                'BEGRU#KNRZB#ZAHLS#ZTERM#TOGRU#NODEL#WBRSL#VZSKZ'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'KNB1' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'KNB5' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KNKA' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'KUNNR#KKBER#KLIMK#KNKLI#SAUFT#SKFOR#SSOBL#UEDAT#'
                'XCHNG#ERNAM#ERDAT#CTLPC#DTREV#CRBLB#GRUPP#AENAM#'
                'SBDAT#KDGRP#CASHD#CASHA#CASHC#DBPAY#DBRTG#DBEKR#'
                'DBWAE#DBMON#ABSBT'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'KNKK' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'KUNNR#VKORG#VTWEG#SPART#ERNAM#ERDAT#BEGRU#'
                'VERSG#AUFSD#KALKS#KDGRP#BZIRK#KONDA#PLTYP#AUTLF#'
                'ANTLF#KZTLF#VSBED#VWERK#VKGRP#VKBUR#PRFRE#KKBER#'
                'CASSD#UEBTO#UNTTO#UEBTK#BOKRE#INCO1#INCO2'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'KNVV' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'T001B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001CM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T014' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047N' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T047T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T048L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T052' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T100C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T171' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T179' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T184' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T184L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T499S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T604' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T604C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T605' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T609A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T610NA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T610O' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T610PA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T610VA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T612B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T615' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T616' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T616U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T618' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T681A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T681V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T683' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T683S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T683U' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T683V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T685' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T685A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T685T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T685Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T687' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T691A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T691D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T691F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TINC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TPAR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVAKZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSPA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVAK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVAP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVAPT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVAU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVPA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVBVK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVCPF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVCPL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVEGR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVFK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVFM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVFS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKBZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKOS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKOV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKWZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVLA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVLK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVLP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVLS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVLSP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVUVF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVTA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVTW' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVVW' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVZBT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T014T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043GT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T055F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T077X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T078D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T079D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T691G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVAKT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVFKT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVLKT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KNAT' EXTLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T055' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBAER' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TFMC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVASP' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'MATNR#VKORG#VTWEG#KONDM#KTGRM#BONUS'
                ''
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'MVKE' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'MATNR#ERSDA#ERNAM#LAEDA#AENAM#VPSTA#MTART#'
                'MATKL#MEINS#MSTDV'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'MARA' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'KNBK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KNVP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KONA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KONH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KONP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T012' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T025' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T025K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T030A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T039' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T042I' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T071' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T681F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T682' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T682I' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T683T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T6B1' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T6B1T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBSLT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMKS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TMKSU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVCPA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVCPT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVKOT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVRRUR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'VBUK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TVTWT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSPAT' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'VKORG#VTWEG#KUNNR#MATNR#UEBTO#UEBTK'
                ''
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'KNMT' STDLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'T6B2' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T6B2T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T6B2F' STDLIMIT 'NONE' '' STAB '' ''.

*   06. Inventory
    STAB = '     X'.
    CONCATENATE
                'MATNR#ERSDA#ERNAM#LAEDA#AENAM#VPSTA#MTART#'
                'MATKL#MEINS#MSTDV'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'MARA' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'MATNR#WERKS#PSTAT#LVORM#BWTTY#MMSTA#MMSTD#MAABC'
                'EKGRP#AUSME#DISPR#DISMM#DISPO#KZDIE#WEBAZ#PERKZ'
                'BESKZ#ALTSL#PFREI#FFREI#RGEKZ#FEVOR#UEETO#UEETK'
                'UNETO#KAUTB#KORDB#MTVER#PRCTR#DISGR#COPAM#ABCIN'
                'AWSLS#XMCNG#CCFIX#MEGRU#INDUS#MATGR'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'MARC' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'MARM' EXTLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'MBEW' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T025' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134H' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T148' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T320' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T499S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TSKM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'MAKT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'NRIV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T023' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T023T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T025K' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T025L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T025T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043I' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T130S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T159B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T159C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCURM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TNRGT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T024W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001W' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T158' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T156T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T169G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T405' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T159L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T043' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
      USING 'O' 'MIGO_CUST_REFDOC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T158B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'MARV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KONX' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T130A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T141' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T141T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T399X' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T412' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T412T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T415S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T415T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T416V' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T430' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T430T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T451S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T687T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TC04' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TC04T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCA41' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCA43' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCA4T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK03' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK04' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK05' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK06' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK19A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCK19AT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB5A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB5C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB5D' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB5E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB6' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAX' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAY' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKV01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKV02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKV09' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKV10' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKZU1' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKZU3' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T137' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T130F' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T134' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AENR' STDLIMIT 'NONE' '' STAB '' ''.

*   07. Asset Accounting
    STAB = '      X'.
    PERFORM ADDB45 USING 'O' 'T085' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NAZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090ND' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090NSG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T090Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T091P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T092' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T093' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T093B_RSL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T095' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABW' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABWA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABWG' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABWK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABWU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082E' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T093C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T096' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T096T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T001' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T095A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T095B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T095T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABWT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABWH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T093T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082G' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082H' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082L' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T082M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'ANKA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'ANKB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'ANKT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABVAT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TABVO' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'BUKRS#ANLN1#ANLN2#ANLKL#ANLAR#XLOEV#XSPEB#'
                'KTOGR#XOPVW#ANLTP#ZUJHR#ZUPER#ZUGDT#AKTIV#ABGDT#'
                'DEAKT#GPLAB#LIFNR#URJHR#URWRT#TYPBZ#XVRMW#WRTMA#'
                'EHWRT#AUFLA#TXT50'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'ANLA' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'BUKRS#ANLN1#ANLN2#AFABE#BDATU#ADATU#XLOEV#'
                'XSPEB#XNEGA#XUNTA#AFABG#ZINBG#SAFBG#AFASL#NDJAR#'
                'NDPER#NAPRZ#SAPRZ#APROP#UMJAR#NDURJ#NDURP#SCHRW#'
                'AUFWTG#ANLGR#ANLGR2#VYEAR#ABGDAT_B#J_1AARVKEY#'
                'J_1AALTDAT'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'ANLB' EXTLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'BUKRS#ANLN1#ANLN2#GJAHR#AFABE#AFBLPE#AFBANZ#'
                'XAFAR#NDABJ#NDABP#KANSW#KAUFW#KINVZ#KNAFA#KSAFA#'
                'KAAFA#KMAFA#KZINW#KAUFN#KANZA#KVOST#AUFWP#NAFAP#'
                'SAFAP#AAFAP#MAFAP#ZINSP#AUFNP#AUFWB#NAFAG#SAFAG#'
                'AAFAG#MAFAG#ZINSG#AUFNG#ABGAN#ANSAZ#AUFWM#INVZM#'
                'NAFAM#SAFAM#AAFAM#MAFAM#ZINSM#AUFNM#ZUSNA#ZUSSA#'
                'ZUSAA#ZUSMA#AUFWV#INVZV#NAFAV#SAFAV#AAFAV#MAFAV#'
                'AUFNV#AUFWL#INVZL#NAFAL#SAFAL#AAFAL#MAFAL#AUFNL#'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'ANLC' EXTLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'TCJ4T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB1A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB1B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TAPRF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TAPRFT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBP1C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBP1T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBPFD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBPFK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKU' STDLIMIT 'NONE' '' STAB '' ''.

*   08. Human Resources
    STAB = '       X'.
    PERFORM ADDB45 USING 'O' 'T001P' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T503Z' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T503' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T549A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T778M' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T52IF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T51P6' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T554C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T77PQ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T77PR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T77S0' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T77UA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PA0105' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T549R' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T549S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T585A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T585B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T585C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T52CD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'LFZA' STDLIMIT 'NONE' '' STAB '' ''.

*   09. Treasury
    STAB = '        X'.
    PERFORM ADDB45 USING 'O' 'T037S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TW07' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TW08' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TW11' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TW50' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TWD01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TZBA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'VWPANLA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'VWPDEPO' STDLIMIT 'NONE' '' STAB '' ''.

*   10. Enterprise Controlling
    STAB = '         X'.
    PERFORM ADDB45 USING 'O' 'CEPC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'COBRA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'COBRB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'COKL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSLA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003O' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T821S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBP1C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCS03' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TFKB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA00' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA05' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA09' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA10' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA12' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA30' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB1A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB5B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKEL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAP' STDLIMIT 'NONE' '' STAB '' ''.

*   11. Revenue and cost controlling
    STAB = '          X'.
    PERFORM ADDB45 USING 'O' 'CEPC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'COBRA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'COBRB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'COKL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSLA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKA' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CSKB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T003O' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T821S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TBP1C' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TCS03' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TFKB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA00' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA01' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA05' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA09' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA10' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA12' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKA30' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB1A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKB5B' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKEL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKKAP' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFFH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFFL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFIH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFKO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFPO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFRU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFVC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFVU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AFVV' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AUFK' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'AUFM' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CRCO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CRHD' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CRHH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CRHS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CRTX' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'CRVD_A' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'DRAW' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'ILOAN#SWERK#GSBER#KOKR#KOSTL#PROID#BUKRS#ANLNR#'
                'AUTNR#VKORG#VTWEG#SPART'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'ILOA' STDLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45 USING 'O' 'JEST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'JSTO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KALO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KDST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KEKO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'KEPH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'MAPL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'MAST' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLAF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLAS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLFH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLFL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLKO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLKZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLMZ' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLPH' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLPO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'PLPR' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'RESB' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'RKPF' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'STAS' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'STKO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'STPN' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'STPO' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'STPU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'STZU' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T004' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TDWA' STDLIMIT 'NONE' '' STAB '' ''.

*   12. Plant Maintenance
    STAB = '           X'.
    PERFORM ADDB45 USING 'O' 'T399I' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
         USING 'O' 'SEND_REC_REL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
         USING 'O' 'SEND_REC_RELT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
         USING 'O' 'SEND_REC_REL_DEF' STDLIMIT 'NONE' '' STAB '' ''.

*   13. Production
    STAB = '            X'.
    PERFORM ADDB45 USING 'O' 'T179' STDLIMIT 'NONE' '' STAB '' ''.

*   14. Quality Management
    STAB = '             X'.

*   15. Project Management
    STAB = '              X'.
    PERFORM ADDB45 USING 'O' 'TCJ41' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TJ02' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TJ02T' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TJ04' STDLIMIT 'NONE' '' STAB '' ''.
    CONCATENATE
                'PSPNR#PSPID#POSTU#ERNAM#AENAM#VBUKR#VGSBR#'
                'VKOKR#PRCTR#WERKS#KOSTL#VERNR#BESTA#STSPR'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'PROJ' STDLIMIT 'NONE' '' STAB '' SFLD.
    CONCATENATE
                'PSPNR#POSKI#ERNAM#AENAM# POST1#VERNR#BELKZ#FAKKZ#'
                'FKOKR#AKOKR#ABUKR#PLAKZ#PKOKR#PBUKR#PGSBR#PRCTR#'
                'WERKS#KALSM#ZSCHL'
                INTO SFLD.
    PERFORM ADDB45 USING 'O' 'PRPS' STDLIMIT 'NONE' '' STAB '' SFLD.
    PERFORM ADDB45
         USING 'O' 'SEND_REC_REL' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
         USING 'O' 'SEND_REC_RELT' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45
         USING 'O' 'SEND_REC_REL_DEF' STDLIMIT 'NONE' '' STAB '' ''.

*   16. Real Estate Management
    STAB = '               X'.

*   17. Industry Solutions
    STAB = '                X'.

*   18. Diverse Areas
    STAB = '                 X'.
    PERFORM ADDB45 USING 'O' 'RSADMINC' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T437S' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'T437R' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKV13' STDLIMIT 'NONE' '' STAB '' ''.
    PERFORM ADDB45 USING 'O' 'TKV14' STDLIMIT 'NONE' '' STAB '' ''.

*   Extra tables selected for download are located in a RANGE (addtable)
*   since they have been inputted via a select-options statement
*   Only  LOW  value is filled.
    LOOP AT ADDTABLE.
      PERFORM ADDB45
        USING 'O' ADDTABLE-LOW ADDLIMIT 'NONE' 'M' '' '' ''.
    ENDLOOP.

  ENDIF.

  PERFORM EXECCOMMIT USING 'GETDYNAMIC' 'A' ''.

ENDFORM.                    "GETDYNAMIC

*---------------------------------------------------------------------*
*     FORM ADDB45                                                     *
*---------------------------------------------------------------------*
FORM ADDB45 USING FTYPE TABNAME SETLIMIT GEN MCBDFA STAB SDV FLDLIST.
  DATA: ANZREC TYPE I
       ,LANGFIELD LIKE DD03L-FIELDNAME
       ,TABNAMETEXT LIKE DD03L-TABNAME
       ,LANGFIELDTEXT LIKE DD03L-FIELDNAME
       ,DUMMYORDER LIKE DD08VV-AS4VERS
       ,POSFLD TYPE I
       ,POSFLD2 TYPE I
       ,SELFLAG(40) TYPE C.

  DATA: MIN(1) TYPE C,
        CLI(1) TYPE C,
        BC(1) TYPE C,
        DV(1) TYPE C,
        FSD(1) TYPE C,
        AGF(1) TYPE C,
        FLDTAB TYPE TABLE OF string,
        FLDVAL(30) TYPE C,
        FLDSEARCH(32) TYPE C.

  IF B0005-TABNAME = 'TVST'.
    B0005-TABNAME = B0005-TABNAME.
  ENDIF.
  IF TABNAME = 'REPOSRC'.
    IF SETLIMIT = ADDLIMIT AND STDLIMIT <> ADDLIMIT.
*     ok
    ELSE.
      EXIT.
    ENDIF.
  ENDIF.

* Check if table has a rawstring/string field
  SELECT        COUNT( * )
          INTO ANZREC
          FROM DD03L
        WHERE TABNAME    = TABNAME
          AND ( DATATYPE   = 'RAWSTRING'
            OR DATATYPE    = 'RSTR'
            OR DATATYPE    = 'STRG' )
          AND AS4LOCAL   = 'A'.

  IF ANZREC > 0.
    EXIT.
  ENDIF.

  SEARCH MCBDFA FOR 'M'.
  IF SY-SUBRC = 0. MIN = 'M'. ELSE. MIN = ''. ENDIF.
  SEARCH MCBDFA FOR 'C'.
  IF SY-SUBRC = 0. CLI = 'C'. ELSE. CLI = ''. ENDIF.
  SEARCH MCBDFA FOR 'B'.
  IF SY-SUBRC = 0. BC  = 'B'. ELSE. BC  = ''. ENDIF.
  SEARCH MCBDFA FOR 'D'.
  IF SY-SUBRC = 0. DV  = 'D'. ELSE. DV  = ''. ENDIF.
  SEARCH MCBDFA FOR 'F'.
  IF SY-SUBRC = 0. FSD = 'F'. ELSE. FSD = ''. ENDIF.
  SEARCH MCBDFA FOR 'A'.
  IF SY-SUBRC = 0. AGF = 'A'. ELSE. AGF = ''. ENDIF.

  READ TABLE B0005 WITH KEY TABNAME = TABNAME.

* ENTRY ALREADY EXISTS

  IF SY-SUBRC = 0.
    IF B0005-MIN = ''. B0005-MIN = MIN. ENDIF.
    IF B0005-CLI = ''. B0005-CLI = CLI. ENDIF.
    IF B0005-BC = ''. B0005-BC = BC. ENDIF.
    IF B0005-DV = ''. B0005-DV = DV. ENDIF.
    IF B0005-FSD = ''. B0005-FSD = FSD. ENDIF.
    IF B0005-AGF = ''. B0005-AGF = AGF. ENDIF.
    IF B0005-LIMIT < SETLIMIT. B0005-LIMIT = SETLIMIT. ENDIF.

    MOVE '                    '
                TO SELFLAG.
    POSFLD = -1.
    DO 19 TIMES.
      POSFLD2 = POSFLD + 1.
      IF POSFLD = -1.
        SELFLAG+POSFLD2(1) = 'A'.
      ELSE.
        IF STRLEN( STAB ) > POSFLD AND STAB+POSFLD(1) <> ' '.
          SELFLAG+POSFLD2(1) = 'X'.
        ELSEIF STRLEN( B0005-STAB ) > POSFLD
                             AND B0005-STAB+POSFLD(1) <> ' '.
          SELFLAG+POSFLD2(1) = 'X'.
        ENDIF.
      ENDIF.
      POSFLD = POSFLD + 1.
    ENDDO.
    B0005-STAB = SELFLAG.

    MOVE '                    '
                TO SELFLAG.
    POSFLD = -1.
    DO 19 TIMES.
      POSFLD2 = POSFLD + 1.
      IF POSFLD = -1.
        SELFLAG+POSFLD2(1) = 'A'.
      ELSE.
        IF STRLEN( SDV ) > POSFLD AND SDV+POSFLD(1) <> ' '.
          SELFLAG+POSFLD2(1) = 'X'.
        ELSEIF STRLEN( B0005-SDV ) > POSFLD
                              AND B0005-SDV+POSFLD(1) <> ' '.
          SELFLAG+POSFLD2(1) = 'X'.
        ENDIF.
      ENDIF.
      POSFLD = POSFLD + 1.
    ENDDO.
    B0005-SDV = SELFLAG.

    IF FLDLIST <> ''.
      IF B0005-FLDLIST = ''.
        CONCATENATE '#' FLDLIST '#'
                    INTO B0005-FLDLIST.
      ELSE.
        REFRESH FLDTAB.

        SPLIT FLDLIST AT '#' INTO TABLE FLDTAB.

        LOOP AT FLDTAB INTO FLDVAL.
          CONCATENATE '#' FLDVAL '#'
                      INTO FLDSEARCH.

          SEARCH B0005-FLDLIST FOR FLDSEARCH.

          IF SY-SUBRC = 0.
            CONCATENATE B0005-FLDLIST FLDVAL '#'
                        INTO B0005-FLDLIST.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.
  IF B0005-TABNAME = 'TOBJ'.
    B0005-TABNAME = B0005-TABNAME.
  ENDIF.

    MODIFY B0005 INDEX SY-TABIX.
    EXIT.
  ENDIF.

* ENTRY DOES NOT YET EXIST

* Check if table exists
  SELECT        COUNT( * )
           INTO ANZREC
           FROM DD02L
          WHERE TABNAME = TABNAME
            AND AS4VERS = 'A'
            AND TABCLASS <> 'INTTAB'.

  IF SY-SUBRC = 4.
    CONCATENATE 'Information:' TABNAME 'table does not exist.'
                INTO ZEILE
                SEPARATED BY SPACE.
    PERFORM ADDB0007 USING ZEILE.
    EXIT.
  ENDIF.

* Search for language field in table
  SELECT        COUNT( * )
           INTO ANZREC
           FROM DD03L
          WHERE TABNAME    = TABNAME
            AND DOMNAME    = 'SPRAS'
            AND KEYFLAG    = 'X'
            AND AS4LOCAL   = 'A'.

  CASE ANZREC.
    WHEN 1.
      SELECT SINGLE FIELDNAME
               INTO LANGFIELD
               FROM DD03L
              WHERE TABNAME    = TABNAME
                AND DOMNAME    = 'SPRAS'
                AND KEYFLAG    = 'X'
                AND AS4LOCAL   = 'A'.

    WHEN OTHERS.
      LANGFIELD = ''.
  ENDCASE.

* Search for related text table
  SELECT        CHECKTABLE
                FORTABLE
                FORKEY
                AS4VERS
           INTO (B0004-CHECKTABLE
                ,B0004-FORTABLE
                ,B0004-FORKEY
                ,DUMMYORDER
                )
           FROM DD08VV
          WHERE CHECKTABLE = TABNAME
            AND FRKART     = 'TEXT'
            AND AS4LOCAL   = 'A'
            AND CHECKTABLE <> 'T002'
            AND FORTABLE   <> TABNAME
       ORDER BY AS4VERS DESCENDING.

*   Text table must exist
    SELECT        COUNT( * )
             INTO ANZREC
             FROM DD02L
            WHERE TABNAME = B0004-FORTABLE
              AND AS4VERS = 'A'
              AND TABCLASS <> 'INTTAB'.

    IF SY-SUBRC = 4.
      TABNAMETEXT = ''.
    ELSE.
*     Text table field must exist
      SELECT        COUNT( * )
               INTO ANZREC
               FROM DD03L
              WHERE TABNAME   = B0004-CHECKTABLE
                AND FIELDNAME = B0004-FORKEY
                AND AS4LOCAL  = 'A'.
      IF ANZREC = 0.
        TABNAMETEXT = ''.
      ELSE.
        TABNAMETEXT = B0004-FORTABLE.
        APPEND B0004.
      ENDIF.
    ENDIF.
  ENDSELECT.

  IF SY-SUBRC = 4 OR TABNAMETEXT = ''.
    TABNAMETEXT = ''.
  ELSE.
*   Check if table has a rawstring/string field
    SELECT        COUNT( * )
            INTO ANZREC
            FROM DD03L
           WHERE TABNAME    = TABNAMETEXT
            AND ( DATATYPE     = 'RAWSTRING'
              OR DATATYPE     = 'RSTR'
              OR DATATYPE     = 'STRG' )
            AND AS4LOCAL   = 'A'.

    IF ANZREC = 0.

*     Check if table is already added
      READ TABLE B0005 WITH KEY TABNAME = TABNAMETEXT
                 TRANSPORTING NO FIELDS.

      IF SY-SUBRC <> 0.
*       Getting text language field
        SELECT        COUNT( * )
                 INTO ANZREC
                 FROM DD03L
                WHERE TABNAME    = TABNAMETEXT
                  AND DOMNAME    = 'SPRAS'
                  AND KEYFLAG    = 'X'
                  AND AS4LOCAL   = 'A'.

        IF ANZREC = 1.
          SELECT SINGLE FIELDNAME
                   INTO LANGFIELDTEXT
                   FROM DD03L
                  WHERE TABNAME    = TABNAMETEXT
                    AND DOMNAME    = 'SPRAS'
                    AND KEYFLAG    = 'X'
                    AND AS4LOCAL   = 'A'.

        ELSE.
          LANGFIELDTEXT = ''.
        ENDIF.

        CLEAR B0005.
        B0005-FTYPE = FTYPE.
        B0005-TABNAME = TABNAMETEXT.
        B0005-LANGFIELD = LANGFIELDTEXT.
        B0005-TABNAMETEXT = ''.
        B0005-LANGFIELDTEXT = ''.
        B0005-LIMIT = SETLIMIT.
        B0005-GEN = GEN.
        B0005-MIN = MIN.
        B0005-CLI = CLI.
        B0005-BC = BC.
        B0005-DV = DV.
        B0005-FSD = FSD.
        B0005-AGF = AGF.
        B0005-STAB = 'A'.
        B0005-STAB+1 = STAB.
        TRANSLATE B0005-STAB TO UPPER CASE.
        B0005-SDV = 'A'.
        B0005-SDV+1 = SDV.
        TRANSLATE B0005-SDV TO UPPER CASE.
      IF B0005-TABNAME = 'TOBJ'.
        B0005-TABNAME = B0005-TABNAME.
      ENDIF.
        APPEND B0005.
      ENDIF.
    ENDIF.
  ENDIF.

* Adding newly selected table
  CLEAR B0005.
  B0005-FTYPE = FTYPE.
  B0005-TABNAME = TABNAME.
  B0005-LANGFIELD = LANGFIELD.
  B0005-TABNAMETEXT = TABNAMETEXT.
  B0005-LANGFIELDTEXT = LANGFIELDTEXT.
  B0005-LIMIT = SETLIMIT.
  B0005-GEN = GEN.
  B0005-MIN = MIN.
  B0005-CLI = CLI.
  B0005-BC = BC.
  B0005-DV = DV.
  B0005-FSD = FSD.
  B0005-AGF = AGF.
  B0005-STAB = 'A'.
  B0005-STAB+1 = STAB.
  B0005-SDV = 'A'.
  B0005-SDV+1 = SDV.
  IF FLDLIST <> ''.
    CONCATENATE '#' FLDLIST '#'
                INTO B0005-FLDLIST.
  ELSE.
    B0005-FLDLIST = ''.
  ENDIF.
  IF B0005-TABNAME = 'TOBJ'.
    B0005-TABNAME = B0005-TABNAME.
  ENDIF.
  APPEND B0005.

ENDFORM.                                                    "ADDB45

*---------------------------------------------------------------------*
*      Form  GENDYNAMICSHARED                                         *
*---------------------------------------------------------------------*
FORM GENDYNAMICSHARED.
ENDFORM.                    "GENDYNAMICSHARED

*---------------------------------------------------------------------*
*       FORM GENDYNAMICFORM                                           *
*---------------------------------------------------------------------*
FORM GENDYNAMICFORM USING
                     PARFTYPE
                     PARTABNAME
                     PARLANGFIELD
                     PARLIMIT
                     PARGEN
                     PARMIN
                     PARCLI
                     PARBC
                     PARDV
                     PARFSD
                     PARAGF
                     PARSDV
                     PARSTAB
                     PARFLDLIST
                   CHANGING
                     PARFLAG.

  DATA: CONDFLD(4000) TYPE C,
        WHEREEXPR(4000) TYPE C,
        LENG(10) TYPE N,
        ANZREC(11) TYPE P DECIMALS 0,
        ANZBYTE(16) TYPE P,
        LIMIT TYPE I,
        ANZCHAR(20) TYPE N,
        ACEFLDCLIENT(1) TYPE C,
        ANZFLD TYPE I,
        FLDSEARCH(32) TYPE C.

    MOVE PARLIMIT                            TO LIMIT.

*   INITIALIZATE TEMP ABAP
*   ======================
    PERFORM C1 USING 'FORM PROC.'.
    PERFORM C1 USING ''.

*   GENERATE: DECLARATION TOUT
*   ==========================
    ANZCHAR = 0.
    PERFORM C1 USING ''.
    PERFORM C1 USING '  DATA: BEGIN OF TOUT'.

    ANZFLD = 0.
    SELECT        DATATYPE
                  FIELDNAME
                  LENG
                  POSITION
                  DECIMALS
             INTO (WDD03L-DATATYPE
                  ,WDD03L-FIELDNAME
                  ,WDD03L-LENG
                  ,WDD03L-POSITION
                  ,WDD03L-DECIMALS
                  )
             FROM DD03L
            WHERE TABNAME  = PARTABNAME
              AND AS4LOCAL = 'A'
         ORDER BY POSITION.

      IF PARFLDLIST <> ''.
        CONCATENATE '#' WDD03L-FIELDNAME '#'
                    INTO FLDSEARCH.

        SEARCH PARFLDLIST FOR FLDSEARCH.

        IF SY-SUBRC <> 0.
          CONTINUE.
        ENDIF.
      ENDIF.

      ANZFLD = ANZFLD + 1.
      IF WDD03L-FIELDNAME+0(1) <> '.'.
        IF WDD03L-DATATYPE = 'RAW'.
          LENG = WDD03L-LENG * 4.
        ELSEIF WDD03L-DATATYPE = 'DEC' OR  WDD03L-DATATYPE = 'CURR'.
          LENG = WDD03L-LENG + WDD03L-DECIMALS + 5.
        ELSE.
          LENG = WDD03L-LENG.
        ENDIF.

        IF LENG > 255.
          LENG = 255.
        ENDIF.

        ANZCHAR = ANZCHAR + LENG.

        CONCATENATE WDD03L-FIELDNAME '(' LENG ')'
                    INTO CONCATU2.
        CONDENSE CONCATU2 NO-GAPS.
        PERFORM C3 USING '        ,' CONCATU2 'type c'.
        PERFORM ADDB3 USING WDD03L-FIELDNAME
                            0
                            ''
                            ''
                            ''
                            ''
                            ''
                            ''
                            ''.

      ENDIF.
    ENDSELECT.

    PERFORM C1 USING '        ,             '.
    PERFORM C1 USING '        END OF TOUT.'.
    PERFORM C1 USING ''.

*   GENERATE: FILE INITIALIZING
*   ===========================

    PERFORM C1 USING '  PERFORM GETFILENAME.'.
    PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
    PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
    PERFORM C1 USING ''.

*   GENERATE: EXIT ON PARFLAG
*   =========================

    PERFORM C1 USING '  IF parflag <> ''Y''.'.
    PERFORM C1 USING '    EXIT.'.
    PERFORM C1 USING '  ENDIF.'.
    PERFORM C1 USING ''.


*   GENERATE: FILE OPEN
*   ===================

    PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
    PERFORM C1 USING ''.

*   ws definition
*   =============
    PERFORM D3 USING '  DATA: TABNAME TYPE DD03L-ROLLNAME VALUE '''
                     PARTABNAME ''','.
    PERFORM C1 USING '        LO_DYNAMIC_TABLE TYPE REF TO DATA, '.
    PERFORM C1 USING '        LO_DYNAMIC_LINE TYPE REF TO DATA. '.
    PERFORM C1 USING '  FIELD-SYMBOLS: <FS_TABLE> TYPE TABLE, '.
    PERFORM C1 USING '                 <FS> TYPE ANY.'.
    PERFORM C1 USING ''.

*   create dynamic structure
*   ========================
    PERFORM C2 USING '  CREATE DATA LO_DYNAMIC_TABLE'
                     'TYPE TABLE OF (TABNAME).'.
    PERFORM C1 USING '  ASSIGN LO_DYNAMIC_TABLE->* TO <FS_TABLE>.'.

    PERFORM C2 USING '  CREATE DATA LO_DYNAMIC_LINE'
                     'LIKE LINE OF <FS_TABLE>.'.
    PERFORM C1 USING '  ASSIGN LO_DYNAMIC_LINE->* TO <FS>.'.

*   GENERATE: SELECT
*   ================

    IF SYS_RLL = 'X' AND
       PARTABNAME <> 'TRDIR' AND
       PARTABNAME <> 'USOBX' AND
       PARTABNAME <> 'USOBX_C'.

*     select
*     ======
      PERFORM C1 USING ' SELECT         *'.
      PERFORM C1 USING '           INTO TABLE <FS_TABLE>'.
      PERFORM C1 USING '        PACKAGE SIZE 100'.

*     from
*     ====
      PERFORM C1 USING '           FROM  (TABNAME)'.
      IF ( PARCLI = 'C' AND ALL_CLI = 'X' ) OR ACEFLDCLIENT = 'Y'.
        PERFORM C1 USING '                CLIENT SPECIFIED'.
      ENDIF.

*     where
*     =====
      IF PARGEN = 'WHERE'.
        PERFORM C1 USING '          WHERE'.

        PERFORM GENVARCODE USING PARTABNAME PARGEN WHEREEXPR.

        PERFORM C1 USING WHEREEXPR.

        IF PARLANGFIELD <> '' AND PARTABNAME <> 'AGR_PROF'.
          PERFORM C3 USING '            and' PARLANGFIELD
                           '= SY-LANGU'.
        ENDIF.

      ELSE.
        IF PARLANGFIELD <> '' AND PARTABNAME <> 'AGR_PROF'.
          PERFORM C3 USING '          WHERE' PARLANGFIELD
                           '= SY-LANGU'.
        ENDIF.
      ENDIF.

      PERFORM C1 USING '          .'.
      PERFORM C1 USING '    LOOP AT <FS_TABLE> ASSIGNING <FS>.'.

      PERFORM C3 USING '      MOVE-CORRESPONDING' '<FS>' 'to TOUT.'.

    ELSE.
*            --> IF SYS_RLL = ' '.
*     select
*     ======
      PERFORM C1 USING ' SELECT * '.

*     from
*     ====
      PERFORM C1 USING '           INTO <FS>'.
      PERFORM C1 USING '           FROM  (TABNAME)'.
      IF ( PARCLI = 'C' AND ALL_CLI = 'X' ) OR ACEFLDCLIENT = 'Y'.
        PERFORM C1 USING '                CLIENT SPECIFIED'.
      ENDIF.

*     where
*     =====
      IF PARGEN = 'WHERE'.
        PERFORM C1 USING '          WHERE'.

        PERFORM GENVARCODE USING PARTABNAME PARGEN WHEREEXPR.

        PERFORM C1 USING WHEREEXPR.

        IF PARLANGFIELD <> '' AND PARTABNAME <> 'AGR_PROF'.
          PERFORM C3 USING '            and' PARLANGFIELD
                           '= SY-LANGU'.
        ENDIF.

      ELSE.
        IF PARLANGFIELD <> '' AND PARTABNAME <> 'AGR_PROF'.
          PERFORM C3 USING '          WHERE' PARLANGFIELD
                           '= SY-LANGU'.
        ENDIF.
      ENDIF.

      PERFORM C1 USING '          .'.
      PERFORM C1 USING '    MOVE-CORRESPONDING <FS> to TOUT.'.
    ENDIF.

*   GENERATE: SELECT: FIELD PROCESSING
*   ==================================

    SELECT        FIELDNAME
                  POSITION
             INTO (WDD03L-FIELDNAME
                  ,WDD03L-POSITION
                  )
             FROM DD03L
            WHERE TABNAME  = PARTABNAME
              AND AS4LOCAL = 'A'
         ORDER BY POSITION.

      IF PARFLDLIST <> ''.
        CONCATENATE '#' WDD03L-FIELDNAME '#'
                    INTO FLDSEARCH.

        SEARCH PARFLDLIST FOR FLDSEARCH.

        IF SY-SUBRC <> 0.
          CONTINUE.
        ENDIF.
      ENDIF.

      IF WDD03L-FIELDNAME = 'BNAME' OR
         WDD03L-FIELDNAME = 'UNAME' OR
         WDD03L-FIELDNAME = 'REFUSER' OR
         WDD03L-FIELDNAME = 'AGR_NAME' OR
         WDD03L-FIELDNAME = 'CHILD_AGR' OR
         WDD03L-FIELDNAME = 'PARENT_AGR' OR
         WDD03L-FIELDNAME = 'PROFILE' OR
         WDD03L-FIELDNAME = 'PROFN' OR
         WDD03L-FIELDNAME = 'OBJCT' OR
         WDD03L-FIELDNAME = 'AUTH'.
        CONCATENATE '        TOUT-' WDD03L-FIELDNAME '+0(1)'
                    INTO CONCATU.
        PERFORM C3 USING '        if' CONCATU '= '' ''.'.
        PERFORM C3 USING ' ' CONCATU '= ''_''.'.
        PERFORM C1 USING '        ENDIF.'.
      ENDIF.
    ENDSELECT.


    IF ANZFLD = 1.
      CONCATENATE '      move TOUT-' WDD03L-FIELDNAME
                  INTO CONCATU.
      PERFORM C2 USING CONCATU 'to trec.'.
    ELSE.
      PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSTXT'.
      PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
      PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSSEP'.
      PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
      PERFORM C1 USING ''.
      PERFORM C1 USING '      CONCATENATE'.

      SELECT        FIELDNAME
                    POSITION
               INTO (WDD03L-FIELDNAME
                    ,WDD03L-POSITION
                    )
               FROM DD03L
              WHERE TABNAME  = PARTABNAME
                AND AS4LOCAL = 'A'
           ORDER BY POSITION.

        IF PARFLDLIST <> ''.
          CONCATENATE '#' WDD03L-FIELDNAME '#'
                      INTO FLDSEARCH.

          SEARCH PARFLDLIST FOR FLDSEARCH.

          IF SY-SUBRC <> 0.
            CONTINUE.
          ENDIF.
        ENDIF.

        IF WDD03L-FIELDNAME+0(1) = '.'.
          " ignore
        ELSE.
          IF USR = 'X'.
            PERFORM D2 USING '        TOUT-' WDD03L-FIELDNAME.
          ELSE.
            IF ( PARTABNAME = 'ADRP'
                   AND WDD03L-FIELDNAME = 'NAME_FIRST' ) OR
               ( PARTABNAME = 'ADRP'
                   AND WDD03L-FIELDNAME = 'NAME_LAST' ) OR
               ( PARTABNAME = 'ADRP'
                   AND WDD03L-FIELDNAME = 'NAME_TEXT' ) OR
               ( PARTABNAME = 'ADCP'
                   AND WDD03L-FIELDNAME = 'DEPARTMENT' ) OR
               ( PARTABNAME = 'ADCP'
                   AND WDD03L-FIELDNAME = 'FUNCTION' ) OR
               ( PARTABNAME = 'USR03'
                   AND WDD03L-FIELDNAME = 'NAME1' ).
              PERFORM D2 USING '        ''Hidden''' ''.
            ELSEIF
               ( PARTABNAME = 'USR03'
                   AND WDD03L-FIELDNAME <> 'MANDT'
                   AND WDD03L-FIELDNAME <> 'BNAME' ).
              PERFORM D2 USING '        ''''' ''.
            ELSE.
              PERFORM D2 USING '        TOUT-' WDD03L-FIELDNAME.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDSELECT.

      PERFORM C1 USING '        INTO TREC'.
      PERFORM C1 USING '        SEPARATED BY TRANSSEP.'.
    ENDIF.

    PERFORM C1 USING '      PERFORM trans.'.


*   GENERATE: SELECT: ENDSELECT
*   ===========================

    IF SYS_RLL = 'X' AND
       PARTABNAME <> 'TRDIR' AND
       PARTABNAME <> 'USOBX' AND
       PARTABNAME <> 'USOBX_C'.

      PERFORM C1 USING '    ENDLOOP.'.
      PERFORM C1 USING ''.
    ENDIF.

    PERFORM C1 USING '  ENDSELECT.'.
    PERFORM C1 USING ''.

*   GENERATE: CLOSE & COMMIT
*   ========================

    PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
    PERFORM C1 USING ''.
    PERFORM C1 USING '  COMMIT WORK AND WAIT.'.
    PERFORM C1 USING ''.

*   GENERATE: END
*   =============

    PERFORM C1 USING 'ENDFORM.'.


*   MESSAGE IF NOT SELECTED TO DOWNLOAD
*   ===================================

    TRY.
        IF PARLANGFIELD <> '' AND PARTABNAME <> 'AGR_PROF'.
          CONCATENATE PARLANGFIELD '= SY-LANGU'
                      INTO CONDFLD
                      SEPARATED BY SPACE.
          IF PARGEN = 'WHERE'.
            PERFORM GENVARCODE USING PARTABNAME PARGEN WHEREEXPR.

            CONCATENATE CONDFLD 'AND' WHEREEXPR
                        INTO CONDFLD
                        SEPARATED BY SPACE.

            SELECT         COUNT( * )
                     INTO  (ANZREC)
                     FROM  (PARTABNAME)
                     WHERE (CONDFLD).
          ELSE.
            SELECT         COUNT( * )
                     INTO  (ANZREC)
                     FROM  (PARTABNAME)
                     WHERE (CONDFLD).
          ENDIF.
        ELSE.
          IF PARGEN = 'WHERE'.
            PERFORM GENVARCODE USING PARTABNAME PARGEN WHEREEXPR.

            SELECT        COUNT( * )
                     INTO (ANZREC)
                     FROM (PARTABNAME)
                     WHERE (WHEREEXPR).
          ELSE.
            SELECT        COUNT( * )
                     INTO (ANZREC)
                     FROM (PARTABNAME).
          ENDIF.
        ENDIF.

    CATCH CX_SY_OPEN_SQL_DB.
      CONCATENATE 'Information:' PARTABNAME 'table'
                  'has more rows than allowed by data type.'
                  INTO ZEILE SEPARATED BY SPACE.
      CONDENSE ZEILE.
      PERFORM ADDB0007 USING ZEILE.
      ANZREC = 2147483647.
    ENDTRY.

    ANZBYTE = ANZREC * ANZCHAR / 1024 / 1024.
    IF ANZBYTE > PARLIMIT.
      PARFLAG = 'N'.
      MOVE ANZBYTE                              TO TEXT.
      MOVE LIMIT                                TO TEXT2.
      CONCATENATE 'Information:' PARTABNAME 'table'
                  'was not selected for download due to size'
                  TEXT 'MB ( Limit' TEXT2 'MB).'
                  INTO ZEILE SEPARATED BY SPACE.
      CONDENSE ZEILE.
      PERFORM ADDB0007 USING ZEILE.
    ELSE.
      PARFLAG = 'Y'.
    ENDIF.
ENDFORM.                    "GENDYNAMICFORM

*---------------------------------------------------------------------*
*       FORM GENVARCODE                                               *
*---------------------------------------------------------------------*
FORM GENVARCODE USING TABNAME POS WHERECLAUSE.
  DATA CONMESS(80) TYPE C.
  DATA CONTXT(200) TYPE C.

  CASE TABNAME.
    WHEN 'DD02V'.
      MOVE '                tabclass <> ''INTTAB'''
                                                TO WHERECLAUSE.

    WHEN 'DD02L'.
      CONCATENATE
                  '                  AS4LOCAL = ''A'''
                  '              and TABCLASS <> ''INTTAB'''
                  INTO WHERECLAUSE
                  SEPARATED BY SPACE.

    WHEN 'DD09L'.
      MOVE '                AS4LOCAL = ''A'''
                                                TO WHERECLAUSE.

    WHEN 'TADIR'.
      CONCATENATE
                  '                  object <> ''DTEL'''
                  '              and object <> ''DSYS'''
                  '              and object <> ''DOMA'''
                  '              and object <> ''FUGR'''
                  '              and object <> ''DOCV'''
                  '              and object <> ''DOCT'''
                  INTO WHERECLAUSE
                  SEPARATED BY SPACE.

    WHEN 'V_E071EU'.
      CONCATENATE
                  '                  AS4DATE >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'TPLOG'.
      CONCATENATE
                  '                  SYDATE >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'USOBX_CD'.
      CONCATENATE
                  '                  MODDATE >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'USOBT_CD'.
      CONCATENATE
                  '                  MODDATE >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'DDPRS'.
      MOVE '                  PROTNAME = ''TRLOGSYSTEM'''
                                                TO WHERECLAUSE.

    WHEN 'USH10'.
      CONCATENATE
                  '                  MODDA >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'USH12'.
      CONCATENATE
                  '                  MODDA >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'SE16N_CD_KEY'.
      CONCATENATE
                  '                  SDATE >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.

    WHEN 'UASE16N_CD_KEY'.
      CONCATENATE
                  '                  SDATE >= ''' CDSDATE ''''
                  INTO WHERECLAUSE.


    WHEN 'AUSP'.
      CONCATENATE ''
                  '                  KLART = ''032'''
                  INTO WHERECLAUSE.


    WHEN 'DD03M'.
      CONCATENATE
                  'TABNAME in (''CEKKO'',''CEBAN'',''CESSR'')'
                  ' and FLDSTAT = ''A'''
                  ' and ROLLSTAT = ''A'''
                  ' and DOMSTAT = ''A'''
                  ' and TEXTSTAT = ''A'''
                  ' and DDLANGUAGE = ''EN'''
                  INTO WHERECLAUSE
                  SEPARATED BY SPACE.


    WHEN OTHERS.
      CONCATENATE 'Programming error in genvarcode case!'
                  TABNAME POS INTO CONMESS
                  SEPARATED BY SPACE.
      MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONMESS.
  ENDCASE.
ENDFORM.                    "GENVARCODE


*---------------------------------------------------------------------*
*      Form  EXPKPI                                                   *
*---------------------------------------------------------------------*
FORM EXPKPI.

   IF P_KPI004 = 'X'.
     PERFORM EXPKPISUB USING 'ACEKPI004'.
   ENDIF.

   IF P_KPI012 = 'X'.
     PERFORM EXPKPISUB USING 'ACEKPI012'.
   ENDIF.

   IF P_KPI019 = 'X'.
     PERFORM EXPKPISUB USING 'ACEKPI019'.
   ENDIF.

   IF P_KPI024 = 'X'.
     PERFORM EXPKPISUB USING 'ACEKPI024'.
   ENDIF.

   IF P_KPI027 = 'X'.
     PERFORM EXPKPISUB USING 'ACEKPI027'.
   ENDIF.

ENDFORM.                    " EXPKPI

*---------------------------------------------------------------------*
*      Form  EXPKPISUB                                                *
*---------------------------------------------------------------------*
FORM EXPKPISUB USING KTYPE.
  DATA: EXFLAG(1) TYPE C.
  REFRESH : T_SELECT,
            T_WHERE.

  CASE KTYPE.
    WHEN 'ACEKPI004'.
      PERFORM CHECKTABEXISTS USING 'EKKO' CHANGING EXFLAG.
    WHEN 'ACEKPI012'.
      PERFORM CHECKTABEXISTS USING 'BKPF' CHANGING EXFLAG.
    WHEN 'ACEKPI019'.
      PERFORM CHECKTABEXISTS USING 'LFB1' CHANGING EXFLAG.
    WHEN 'ACEKPI024'.
      PERFORM CHECKTABEXISTS USING 'KNB1' CHANGING EXFLAG.
    WHEN 'ACEKPI027'.
      PERFORM CHECKTABEXISTS USING 'BSIK' CHANGING EXFLAG.
  ENDCASE.

  CHECK EXFLAG = 'X'.

* Append Selection

  PERFORM ADDBSET USING 'Y' '' 'V' KTYPE.
  PERFORM ADDB2 USING 'Y' 'Int. table KPI'.

  CASE KTYPE.
    WHEN 'ACEKPI004'.
      PERFORM ADDB3 USING 'BSART' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'BUKRS' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'EKORG' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'EKGRP' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'STATU' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'AEDAT' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'FRGKE' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'FRGRL' 0 'EKKO' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'TOTALCNT' 18 '' '' '' '' '' 'Total Count'
                                                       'Total Count'.
    WHEN 'ACEKPI012'.
      PERFORM ADDB3 USING 'BUKRS' 0 'BKPF' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'WAERS' 0 'T001' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'TOTALCNT' 18 '' '' '' '' '' 'Total Count'
                                                       'Total Count'.
      PERFORM ADDB3 USING 'C1CNT' 18 '' '' '' '' '' 'C1 Count'
                                                    'C1 Count'.
      PERFORM ADDB3 USING 'C2CNT' 18 '' '' '' '' '' 'C2 Count'
                                                    'C2 Count'.
      PERFORM ADDB3 USING 'C3CNT' 18 '' '' '' '' '' 'C3 Count'
                                                    'C3 Count'.
      PERFORM ADDB3 USING 'C1SUM' 18 '' '' '' '' '' 'C1 Sum' 'C1 Sum'.
      PERFORM ADDB3 USING 'C2SUM' 18 '' '' '' '' '' 'C2 Sum' 'C2 Sum'.
      PERFORM ADDB3 USING 'C3SUM' 18 '' '' '' '' '' 'C3 Sum' 'C3 Sum'.
    WHEN 'ACEKPI019'.
      PERFORM ADDB3 USING 'LTYPE' 1 '' '' '' '' '' 'Line Type' 'T'.
      PERFORM ADDB3 USING 'BUKRS' 0 'BKPF' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'KTOKK' 0 'LFA1' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'TOTALCNT' 18 '' '' '' '' '' 'Total Count'
                                                       'Total Count'.
    WHEN 'ACEKPI024'.
      PERFORM ADDB3 USING 'LTYPE' 1 '' '' '' '' '' 'Line Type' 'T'.
      PERFORM ADDB3 USING 'BUKRS' 0 'BKPF' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'TOTALCNT' 18 '' '' '' '' '' 'Total Count'
                                                       'Total Count'.
    WHEN 'ACEKPI027'.
      PERFORM ADDB3 USING 'LTYPE' 1 '' '' '' '' '' 'Line Type' 'T'.
      PERFORM ADDB3 USING 'BUKRS' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'WAERS' 0 'T001' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'KTOKK' 0 'LFA1' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'BSCHL' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'ZTERM' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'ZBD1T' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'ZBD2T' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'ZBD3T' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'SHKZG' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'ZNEGP' 0 'BSIK' '' '' '' '' '' ''.
      PERFORM ADDB3 USING 'LSUM' 18 '' '' '' '' '' 'Sum' 'Sum'.
      PERFORM ADDB3 USING 'TOTALCNT' 18 '' '' '' '' '' 'Total Count'
                                                       'Total Count'.
  ENDCASE.

  CONCATENATE KTYPE ': '
              INTO CONCATU.
  CONCATENATE '(' FILENUM ')'
              INTO CONCATU2.
  CONCATENATE CONCATU CONCATU2
              INTO CONCAT
              SEPARATED BY SPACE.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  CASE KTYPE.
    WHEN 'ACEKPI004'.
      PERFORM GENCONSTSTART USING 'V'.
      PERFORM GENKPI004SHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENKPI004FORM.
      PERFORM GENABAP.
    WHEN 'ACEKPI012'.
      PERFORM GENCONSTSTART USING 'V'.
      PERFORM GENKPI012SHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENKPI012FORM.
      PERFORM GENABAP.
    WHEN 'ACEKPI019'.
      PERFORM GENCONSTSTART USING 'V'.
      PERFORM GENKPI019SHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENKPI019FORM.
      PERFORM GENABAP.
    WHEN 'ACEKPI024'.
      PERFORM GENCONSTSTART USING 'V'.
      PERFORM GENKPI024SHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENKPI024FORM.
      PERFORM GENABAP.
    WHEN 'ACEKPI027'.
      PERFORM GENCONSTSTART USING 'V'.
      PERFORM GENKPI027SHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENKPI027FORM.
      PERFORM GENABAP.
  ENDCASE.

* Fill Selection Option

  REFRESH : SEL01,SEL02,SEL03,SEL04,SEL05,
            SEL06,SEL07,SEL08,SEL09,SEL10,
            SEL11,SEL12,SEL13,SEL14,SEL15.

  CASE KTYPE.
    WHEN 'ACEKPI004'.
      SEL01[] = SKBUKRS[].
    WHEN 'ACEKPI012'.
      SEL01[] = SKBUKRS[].
    WHEN 'ACEKPI019'.
      SEL01[] = SKBUKRS[].
    WHEN 'ACEKPI024'.
      SEL01[] = SKBUKRS[].
    WHEN 'ACEKPI027'.
      SEL01[] = SKBUKRS[].
  ENDCASE.

  EXPORT SEL01 SEL02 SEL03 SEL04 SEL05
         SEL06 SEL07 SEL08 SEL09 SEL10
         SEL11 SEL12 SEL13 SEL14 SEL15
         TO MEMORY ID 'ACEWhere'.

  PERFORM SUBMITTEMP USING 'Y' KTYPE 'V' KTYPE ''.

ENDFORM.                    " EXPKPISUB

*---------------------------------------------------------------------*
*      Form  GENKPI004SHARED                                          *
*---------------------------------------------------------------------*
FORM GENKPI004SHARED.
ENDFORM.                    " GENKPI004SHARED

*---------------------------------------------------------------------*
*      Form  GENKPI004FORM                                            *
*---------------------------------------------------------------------*
FORM GENKPI004FORM.
* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: BEGIN OF wekko,'.
  PERFORM C1 USING '          bsart TYPE ekko-bsart,'.
  PERFORM C1 USING '          bukrs TYPE ekko-bukrs,'.
  PERFORM C1 USING '          ekorg TYPE ekko-ekorg,'.
  PERFORM C1 USING '          ekgrp TYPE ekko-ekgrp,'.
  PERFORM C1 USING '          statu TYPE ekko-statu,'.
  PERFORM C1 USING '          aedat TYPE ekko-aedat,'.
  PERFORM C1 USING '          frgke TYPE ekko-frgke,'.
  PERFORM C1 USING '          frgrl TYPE ekko-frgrl,'.
  PERFORM C1 USING '          lcnt TYPE i,'.
  PERFORM C1 USING '        END OF wekko,'.
  PERFORM C1 USING '        iekko LIKE TABLE OF wekko.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zekko> LIKE LINE OF iekko.'.
  PERFORM C1 USING '  '.

* For WHERE condition.These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '      , BSART(4) TYPE c'.
  PERFORM C1 USING '      , BUKRS(4) TYPE c'.
  PERFORM C1 USING '      , EKORG(4) TYPE c'.
  PERFORM C1 USING '      , EKGRP(3) TYPE c'.
  PERFORM C1 USING '      , STATU(1) TYPE c'.
  PERFORM C1 USING '      , AEDAT(8) TYPE c'.
  PERFORM C1 USING '      , FRGKE(1) TYPE c'.
  PERFORM C1 USING '      , FRGRL(1) TYPE c'.
  PERFORM C1 USING '      , TOTALCNT(15) TYPE c'.
  PERFORM C1 USING '      , END OF TOUT.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT SEL01 SEL02 SEL03'.
  PERFORM C1 USING '         SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '         SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '         SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '         FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* Stepwise SELECT
* ===============
  PERFORM C1 USING '    SELECT BSART'.
  PERFORM C1 USING '           BUKRS'.
  PERFORM C1 USING '           EKORG'.
  PERFORM C1 USING '           EKGRP'.
  PERFORM C1 USING '           STATU'.
  PERFORM C1 USING '           AEDAT'.
  PERFORM C1 USING '           FRGKE'.
  PERFORM C1 USING '           FRGRL'.
  PERFORM C1 USING '           count( * ) as lcnt'.
  PERFORM C1 USING '      INTO TABLE'.
  PERFORM C1 USING '           iekko'.
  PERFORM C1 USING '      FROM'.
  PERFORM C1 USING '           EKKO'.
  PERFORM C1 USING '      WHERE'.
  PERFORM C1 USING '           BSTYP = ''F'''.
  PERFORM C1 USING '       AND AEDAT >= SELDATE'.
  PERFORM C1 USING '       AND LOEKZ = '''''.
  PERFORM C1 USING '       AND BUKRS in SEL01'.
  PERFORM C1 USING '     GROUP BY'.
  PERFORM C1 USING '           BSART'.
  PERFORM C1 USING '           BUKRS'.
  PERFORM C1 USING '           EKORG'.
  PERFORM C1 USING '           EKGRP'.
  PERFORM C1 USING '           STATU'.
  PERFORM C1 USING '           AEDAT'.
  PERFORM C1 USING '           FRGKE'.
  PERFORM C1 USING '           FRGRL.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '    LOOP AT iekko ASSIGNING <zekko>.'.
  PERFORM C1 USING '      MOVE <zekko>-bsart     TO TOUT-BSART.'.
  PERFORM C1 USING '      MOVE <zekko>-bukrs     TO TOUT-BUKRS.'.
  PERFORM C1 USING '      MOVE <zekko>-ekorg     TO TOUT-EKORG.'.
  PERFORM C1 USING '      MOVE <zekko>-ekgrp     TO TOUT-EKGRP.'.
  PERFORM C1 USING '      MOVE <zekko>-statu     TO TOUT-STATU.'.
  PERFORM C1 USING '      MOVE <zekko>-aedat     TO TOUT-AEDAT.'.
  PERFORM C1 USING '      MOVE <zekko>-frgke     TO TOUT-FRGKE.'.
  PERFORM C1 USING '      MOVE <zekko>-frgrl     TO TOUT-FRGRL.'.
  PERFORM C1 USING '      MOVE <zekko>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      CONCATENATE '.
  PERFORM C1 USING '                TOUT-BSART'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-EKORG'.
  PERFORM C1 USING '                TOUT-EKGRP'.
  PERFORM C1 USING '                TOUT-STATU'.
  PERFORM C1 USING '                TOUT-AEDAT'.
  PERFORM C1 USING '                TOUT-FRGKE'.
  PERFORM C1 USING '                TOUT-FRGRL'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '      INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      PERFORM TRANS.'.
  PERFORM C1 USING '    ENDLOOP.'.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.

* GENERATE: END
* =============
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENKPI004FORM

*---------------------------------------------------------------------*
*      Form  GENKPI012SHARED                                          *
*---------------------------------------------------------------------*
FORM GENKPI012SHARED.
ENDFORM.                    " GENKPI012SHARED

*---------------------------------------------------------------------*
*      Form  GENKPI012FORM                                            *
*---------------------------------------------------------------------*
FORM GENKPI012FORM.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING '  DATA: BEGIN OF wbukrs,'.
  PERFORM C1 USING '          bukrs TYPE t001-bukrs,'.
  PERFORM C1 USING '          waers TYPE t001-waers,'.
  PERFORM C1 USING '        END OF wbukrs,'.
  PERFORM C1 USING '        ibukrs LIKE TABLE OF wbukrs.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbukrs> LIKE LINE OF ibukrs.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: LOOPDATE TYPE d.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: BEGIN OF wbkpf,'.
  PERFORM C1 USING '          bukrs TYPE bkpf-bukrs,'.
  PERFORM C1 USING '          belnr TYPE bkpf-belnr,'.
  PERFORM C1 USING '          gjahr TYPE bkpf-gjahr,'.
  PERFORM C1 USING '          cpudt TYPE bkpf-cpudt,'.
  PERFORM C1 USING '        END OF wbkpf,'.
  PERFORM C1 USING '        ibkpf LIKE TABLE OF wbkpf.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbkpf> LIKE LINE OF ibkpf.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: BEGIN OF wbseg,'.
  PERFORM C1 USING '          belnr TYPE bseg-belnr,'.
  PERFORM C1 USING '          xnegp TYPE bseg-xnegp,'.
  PERFORM C1 USING '          dmbtr TYPE bseg-dmbtr,'.
  PERFORM C1 USING '        END OF wbseg,'.
  PERFORM C1 USING '        ibseg LIKE TABLE OF wbseg.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbseg> LIKE LINE OF ibseg.'.
  PERFORM C1 USING '  DATA: bsegindex like sy-index.'.
  PERFORM C1 USING '  DATA: bsegcount like sy-index.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  DATA: bfirst(1) TYPE c,'.
  PERFORM C1 USING '        ltype TYPE i,'.
  PERFORM C1 USING '        chk3days(1) TYPE c,'.
  PERFORM C1 USING '        chkdate TYPE d,'.
  PERFORM C1 USING '        totalcnt TYPE sy-dbcnt,'.
  PERFORM C1 USING '        c1cnt TYPE sy-dbcnt,'.
  PERFORM C1 USING '        c2cnt TYPE sy-dbcnt,'.
  PERFORM C1 USING '        c3cnt TYPE sy-dbcnt,'.
  PERFORM C1 USING '        c1sum TYPE p decimals 2,'.
  PERFORM C1 USING '        c2sum TYPE p decimals 2,'.
  PERFORM C1 USING '        c3sum TYPE p decimals 2.'.
  PERFORM C1 USING ''.

* For WHERE condition.These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '      , BUKRS(4) TYPE c'.
  PERFORM C1 USING '      , WAERS(10) TYPE c'.
  PERFORM C1 USING '      , TOTALCNT(15) TYPE c'.
  PERFORM C1 USING '      , C1CNT(15) TYPE c'.
  PERFORM C1 USING '      , C2CNT(15) TYPE c'.
  PERFORM C1 USING '      , C3CNT(15) TYPE c'.
  PERFORM C1 USING '      , C1SUM(18) TYPE c'.
  PERFORM C1 USING '      , C2SUM(18) TYPE c'.
  PERFORM C1 USING '      , C3SUM(18) TYPE c'.
  PERFORM C1 USING '      , END OF TOUT.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT SEL01 SEL02 SEL03'.
  PERFORM C1 USING '         SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '         SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '         SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '         FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* Stepwise BUKRS LOOP
* ===================
  PERFORM C1 USING '    SELECT bukrs'.
  PERFORM C1 USING '           waers'.
  PERFORM C1 USING '          FROM t001'.
  PERFORM C1 USING '          INTO TABLE ibukrs'.
  PERFORM C1 USING '          WHERE XPROD = ''X'''.
  PERFORM C1 USING '            AND BUKRS IN SEL01.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    LOOP AT ibukrs assigning <zbukrs>.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      c1cnt = 0.'.
  PERFORM C1 USING '      c2cnt = 0.'.
  PERFORM C1 USING '      c3cnt = 0.'.
  PERFORM C1 USING '      c1sum = 0.'.
  PERFORM C1 USING '      c2sum = 0.'.
  PERFORM C1 USING '      c3sum = 0.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      SELECT count( * )'.
  PERFORM C1 USING '        INTO totalcnt'.
  PERFORM C1 USING '        FROM'.
  PERFORM C1 USING '             BKPF'.
  PERFORM C1 USING '        WHERE'.
  PERFORM C1 USING '             BUKRS = <zbukrs>-bukrs'.
  PERFORM C1 USING '         AND BSTAT = '''''.
  PERFORM C1 USING '         AND BUDAT >= SELDATE.'.
  PERFORM C1 USING ''.

* Stepwise DATE LOOP
* ==================
  PERFORM C1 USING '      loopdate =  SELDATE.'.
  PERFORM C1 USING '      DO.'.
  PERFORM C1 USING '        chkdate = loopdate.'.
  PERFORM C1 USING '        ADD 3 to chkdate.'.
  PERFORM C1 USING '        IF loopdate(6) = chkdate(6).'.
  PERFORM C1 USING '          chk3days = ''''.'.
  PERFORM C1 USING '        ELSE.'.
  PERFORM C1 USING '          chk3days = ''X''.'.
  PERFORM C1 USING '          CONCATENATE chkdate(6) ''08'''.
  PERFORM C1 USING '                      INTO chkdate.'.
  PERFORM C1 USING '        ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        SELECT BUKRS'.
  PERFORM C1 USING '               BELNR'.
  PERFORM C1 USING '               GJAHR'.
  PERFORM C1 USING '               CPUDT'.
  PERFORM C1 USING '          INTO TABLE'.
  PERFORM C1 USING '               ibkpf'.
  PERFORM C1 USING '          PACKAGE SIZE 50'.
  PERFORM C1 USING '          FROM'.
  PERFORM C1 USING '               BKPF'.
  PERFORM C1 USING '          WHERE'.
  PERFORM C1 USING '               BUKRS = <zbukrs>-bukrs'.
  PERFORM C1 USING '           AND BSTAT = '''''.
  PERFORM C1 USING '           AND BUDAT = loopdate'.
  PERFORM C1 USING '           AND CPUDT > loopdate'.
  PERFORM C1 USING '           ORDER BY'.
  PERFORM C1 USING '               BELNR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          SELECT BELNR'.
  PERFORM C1 USING '                 XNEGP'.
  PERFORM C1 USING '                 DMBTR'.
  PERFORM C1 USING '            INTO TABLE'.
  PERFORM C1 USING '                 ibseg'.
  PERFORM C1 USING '            FROM'.
  PERFORM C1 USING '                 BSEG'.
  PERFORM C1 USING '            FOR ALL ENTRIES IN'.
  PERFORM C1 USING '                 ibkpf'.
  PERFORM C1 USING '            WHERE'.
  PERFORM C1 USING '                 BUKRS = ibkpf-bukrs'.
  PERFORM C1 USING '             AND BELNR = ibkpf-belnr'.
  PERFORM C1 USING '             AND GJAHR = ibkpf-gjahr'.
  PERFORM C1 USING '             AND SHKZG = ''S''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          bsegcount = sy-dbcnt.'.
  PERFORM C1 USING '          bsegindex = 1.'.
  PERFORM C1 USING '          READ TABLE ibseg INDEX bsegindex '.
  PERFORM C1 USING '                           ASSIGNING <zbseg>.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          IF bsegcount > 0.'.
  PERFORM C1 USING '            LOOP AT ibkpf ASSIGNING <zbkpf>.'.
  PERFORM C1 USING '              bfirst = ''X''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '              WHILE bsegindex <= bsegcount and'.
  PERFORM C1 USING '                    <zbkpf>-belnr = <zbseg>-belnr.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '                IF bfirst = ''X''.'.
  PERFORM C1 USING '                  bfirst = ''''.'.
  PERFORM C1 USING '                  IF <zbkpf>-CPUDT+4(2) ='.
  PERFORM C1 USING '                     loopdate+4(2).'.
  PERFORM C1 USING '                    ltype = 1.'.
  PERFORM C1 USING '                    add 1 to c1cnt.'.
  PERFORM C1 USING '                  ELSEIF chk3days = ''X'' AND'.
  PERFORM C1 USING '                         <zbkpf>-CPUDT <= chkdate.'.
  PERFORM C1 USING '                    ltype = 2.'.
  PERFORM C1 USING '                    add 1 to c2cnt.'.
  PERFORM C1 USING '                  ELSE.'.
  PERFORM C1 USING '                    ltype = 3.'.
  PERFORM C1 USING '                    add 1 to c3cnt.'.
  PERFORM C1 USING '                  ENDIF.'.
  PERFORM C1 USING '                ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '                CASE ltype.'.
  PERFORM C1 USING '                  WHEN 1.'.
  PERFORM C1 USING '                    IF <zbseg>-xnegp = ''X''.'.
  PERFORM C1 USING '                      c1sum = c1sum -'.
  PERFORM C1 USING '                              <zbseg>-dmbtr.'.
  PERFORM C1 USING '                    ELSE.'.
  PERFORM C1 USING '                      c1sum = c1sum +'.
  PERFORM C1 USING '                              <zbseg>-dmbtr.'.
  PERFORM C1 USING '                    ENDIF.'.
  PERFORM C1 USING '                  WHEN 2.'.
  PERFORM C1 USING '                    IF <zbseg>-xnegp = ''X''.'.
  PERFORM C1 USING '                      c2sum = c2sum -'.
  PERFORM C1 USING '                              <zbseg>-dmbtr.'.
  PERFORM C1 USING '                    ELSE.'.
  PERFORM C1 USING '                      c2sum = c2sum +'.
  PERFORM C1 USING '                              <zbseg>-dmbtr.'.
  PERFORM C1 USING '                    ENDIF.'.
  PERFORM C1 USING '                  WHEN 3.'.
  PERFORM C1 USING '                    IF <zbseg>-xnegp = ''X''.'.
  PERFORM C1 USING '                      c3sum = c3sum -'.
  PERFORM C1 USING '                              <zbseg>-dmbtr.'.
  PERFORM C1 USING '                    ELSE.'.
  PERFORM C1 USING '                      c3sum = c3sum +'.
  PERFORM C1 USING '                              <zbseg>-dmbtr.'.
  PERFORM C1 USING '                    ENDIF.'.
  PERFORM C1 USING '                ENDCASE.'.
  PERFORM C1 USING '                ADD 1 TO bsegindex.'.
  PERFORM C1 USING '                READ TABLE ibseg INDEX bsegindex '.
  PERFORM C1 USING '                     ASSIGNING <zbseg>.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '              ENDWHILE.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '            ENDLOOP.'.
  PERFORM C1 USING '          ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        ENDSELECT.'.
  PERFORM C1 USING ''.

* GENERATE: ENDLOOP DATE
* ======================
  PERFORM C1 USING '        ADD 1 to LOOPDATE.'.
  PERFORM C1 USING '        IF LOOPDATE > sy-datum.'.
  PERFORM C1 USING '          EXIT.'.
  PERFORM C1 USING '        ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      ENDDO.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      MOVE <zbukrs>-bukrs  TO TOUT-BUKRS.'.
  PERFORM C1 USING '      MOVE <zbukrs>-waers  TO TOUT-WAERS.'.
  PERFORM C1 USING '      MOVE totalcnt        TO TOUT-TOTALCNT.'.
  PERFORM C1 USING '      MOVE c1cnt           TO TOUT-C1CNT.'.
  PERFORM C1 USING '      MOVE c2cnt           TO TOUT-C2CNT.'.
  PERFORM C1 USING '      MOVE c3cnt           TO TOUT-C3CNT.'.
  PERFORM C1 USING '      MOVE c1sum           TO TOUT-C1SUM.'.
  PERFORM C1 USING '      MOVE c2sum           TO TOUT-C2SUM.'.
  PERFORM C1 USING '      MOVE c3sum           TO TOUT-C3SUM.'.
  PERFORM C1 USING ''.

* GENERATE: CONCATENATE
* =====================
  PERFORM C1 USING '        CONCATENATE TOUT-BUKRS'.
  PERFORM C1 USING '                    TOUT-WAERS'.
  PERFORM C1 USING '                    TOUT-TOTALCNT'.
  PERFORM C1 USING '                    TOUT-C1CNT'.
  PERFORM C1 USING '                    TOUT-C2CNT'.
  PERFORM C1 USING '                    TOUT-C3CNT'.
  PERFORM C1 USING '                    TOUT-C1SUM'.
  PERFORM C1 USING '                    TOUT-C2SUM'.
  PERFORM C1 USING '                    TOUT-C3SUM'.
  PERFORM C1 USING '        INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.

* GENERATE: PERFORM TRANS
* =======================
  PERFORM C1 USING '       PERFORM TRANS.'.
  PERFORM C1 USING ''.

* GENERATE: ENDLOOP BUKRS
* =======================
  PERFORM C1 USING ' ENDLOOP.'.
  PERFORM C1 USING ''.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.

* GENERATE: END
* =============
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENKPI012FORM

*---------------------------------------------------------------------*
*      Form  GENKPI019SHARED                                          *
*---------------------------------------------------------------------*
FORM GENKPI019SHARED.
ENDFORM.                    " GENKPI019SHARED

*---------------------------------------------------------------------*
*      Form  GENKPI019FORM                                           *
*---------------------------------------------------------------------*
FORM GENKPI019FORM.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING '  DATA: BEGIN OF wlfa1,'.
  PERFORM C1 USING '          ktokk TYPE lfa1-ktokk,'.
  PERFORM C1 USING '          lcnt TYPE i,'.
  PERFORM C1 USING '        END OF wlfa1,'.
  PERFORM C1 USING '        ilfa1 LIKE TABLE OF wlfa1.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zlfa1> LIKE LINE OF ilfa1.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  DATA: BEGIN OF wlfx1,'.
  PERFORM C1 USING '          bukrs TYPE bkpf-bukrs,'.
  PERFORM C1 USING '          ktokk TYPE lfa1-ktokk,'.
  PERFORM C1 USING '          lcnt TYPE i,'.
  PERFORM C1 USING '        END OF wlfx1,'.
  PERFORM C1 USING '        ilfx1 LIKE TABLE OF wlfx1.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zlfx1> LIKE LINE OF ilfx1.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  DATA: SEL30DAT TYPE d'.
  PERFORM C1 USING '      .'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  SEL30DAT = sy-datum.'.
  PERFORM C1 USING '  SUBTRACT 30 FROM SEL30DAT.'.
  PERFORM C1 USING ' '.

* For WHERE condition.These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '      , LTYPE(1) TYPE c'.
  PERFORM C1 USING '      , BUKRS(4) TYPE c'.
  PERFORM C1 USING '      , KTOKK(4) TYPE c'.
  PERFORM C1 USING '      , TOTALCNT(15) TYPE c'.
  PERFORM C1 USING '      , END OF TOUT.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT SEL01 SEL02 SEL03'.
  PERFORM C1 USING '         SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '         SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '         SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '         FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* Stepwise SELECT 1
* =================
  PERFORM C1 USING '  SELECT KTOKK'.
  PERFORM C1 USING '         COUNT( * )'.
  PERFORM C1 USING '    INTO TABLE'.
  PERFORM C1 USING '         ilfa1'.
  PERFORM C1 USING '    FROM'.
  PERFORM C1 USING '         LFA1'.
  PERFORM C1 USING '    WHERE'.
  PERFORM C1 USING '        LFA1~LOEVM <> ''X'''.
  PERFORM C1 USING '    AND LFA1~ERDAT < SEL30DAT'.
  PERFORM C1 USING '    AND NOT EXISTS'.
  PERFORM C1 USING '        ( SELECT LIFNR'.
  PERFORM C1 USING '            FROM LFB1'.
  PERFORM C1 USING '           WHERE LIFNR = LFA1~LIFNR )'.
  PERFORM C1 USING '   GROUP BY'.
  PERFORM C1 USING '         KTOKK.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  LOOP AT ilfa1 ASSIGNING <zlfa1>.'.
  PERFORM C1 USING '    MOVE 1                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '    MOVE ''''              TO TOUT-BUKRS.'.
  PERFORM C1 USING '    MOVE <zlfa1>-ktokk     TO TOUT-KTOKK.'.
  PERFORM C1 USING '    MOVE <zlfa1>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    CONCATENATE TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-KTOKK'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '    INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM TRANS.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ' '.

* Stepwise SELECT 2
* =================
  PERFORM C1 USING '  SELECT BUKRS'.
  PERFORM C1 USING '         KTOKK'.
  PERFORM C1 USING '         COUNT( * ) as lcnt'.
  PERFORM C1 USING '    INTO TABLE'.
  PERFORM C1 USING '         ilfx1'.
  PERFORM C1 USING '    FROM'.
  PERFORM C1 USING '         LFA1 INNER JOIN LFB1'.
  PERFORM C1 USING '           ON LFA1~LIFNR = LFB1~LIFNR'.
  PERFORM C1 USING '    WHERE'.
  PERFORM C1 USING '          BUKRS IN SEL01'.
  PERFORM C1 USING '      AND LFA1~LOEVM <> ''X'''.
  PERFORM C1 USING '      AND LFB1~LOEVM <> ''X'''.
  PERFORM C1 USING '      AND LFA1~ERDAT < SEL30DAT'.
  PERFORM C1 USING '      AND LFB1~ERDAT < SEL30DAT'.
  PERFORM C1 USING '   GROUP BY'.
  PERFORM C1 USING '         BUKRS'.
  PERFORM C1 USING '         KTOKK.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  LOOP AT ilfx1 ASSIGNING <zlfx1>.'.
  PERFORM C1 USING '    MOVE 2                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '    MOVE <zlfx1>-bukrs     TO TOUT-BUKRS.'.
  PERFORM C1 USING '    MOVE <zlfx1>-ktokk     TO TOUT-KTOKK.'.
  PERFORM C1 USING '    MOVE <zlfx1>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    CONCATENATE TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-KTOKK'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '    INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM TRANS.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  CLEAR ilfx1.'.
  PERFORM C1 USING ' '.

* Stepwise SELECT 3
* =================
  PERFORM C1 USING '  SELECT BUKRS'.
  PERFORM C1 USING '         KTOKK'.
  PERFORM C1 USING '         COUNT( * ) as lcnt'.
  PERFORM C1 USING '    INTO TABLE'.
  PERFORM C1 USING '         ilfx1'.
  PERFORM C1 USING '    FROM'.
  PERFORM C1 USING '         LFA1 INNER JOIN LFB1'.
  PERFORM C1 USING '           ON LFA1~LIFNR = LFB1~LIFNR'.
  PERFORM C1 USING '    WHERE'.
  PERFORM C1 USING '          BUKRS IN SEL01'.
  PERFORM C1 USING '      AND LFA1~LOEVM <> ''X'''.
  PERFORM C1 USING '      AND LFB1~LOEVM <> ''X'''.
  PERFORM C1 USING '      AND LFA1~ERDAT < SEL30DAT'.
  PERFORM C1 USING '      AND LFB1~ERDAT < SEL30DAT'.
  PERFORM C1 USING '      AND NOT EXISTS'.
  PERFORM C1 USING '         ( SELECT LIFNR'.
  PERFORM C1 USING '             FROM BSIK'.
  PERFORM C1 USING '            WHERE BUKRS = LFB1~BUKRS'.
  PERFORM C1 USING '              AND LIFNR = LFB1~LIFNR )'.
  PERFORM C1 USING '      AND NOT EXISTS'.
  PERFORM C1 USING '         ( SELECT LIFNR'.
  PERFORM C1 USING '             FROM BSAK'.
  PERFORM C1 USING '            WHERE BUKRS = LFB1~BUKRS'.
  PERFORM C1 USING '              AND LIFNR = LFB1~LIFNR )'.
  PERFORM C1 USING '    GROUP BY'.
  PERFORM C1 USING '         BUKRS'.
  PERFORM C1 USING '         KTOKK.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  LOOP AT ilfx1 ASSIGNING <zlfx1>.'.
  PERFORM C1 USING '    MOVE 3                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '    MOVE <zlfx1>-bukrs     TO TOUT-BUKRS.'.
  PERFORM C1 USING '    MOVE <zlfx1>-ktokk     TO TOUT-KTOKK.'.
  PERFORM C1 USING '    MOVE <zlfx1>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    CONCATENATE TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-KTOKK'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '    INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM TRANS.'.
  PERFORM C1 USING '  ENDLOOP.'.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.

* GENERATE: END
* =============
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENKPI019FORM

*---------------------------------------------------------------------*
*      Form  GENKPI024SHARED                                          *
*---------------------------------------------------------------------*
FORM GENKPI024SHARED.
ENDFORM.                    " GENKPI024SHARED

*---------------------------------------------------------------------*
*      Form  GENKPI024FORM                                            *
*---------------------------------------------------------------------*
FORM GENKPI024FORM.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING '  DATA: BEGIN OF wknx1,'.
  PERFORM C1 USING '          bukrs TYPE bkpf-bukrs,'.
  PERFORM C1 USING '          lcnt TYPE i,'.
  PERFORM C1 USING '        END OF wknx1,'.
  PERFORM C1 USING '        iknx1 LIKE TABLE OF wknx1.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zknx1> LIKE LINE OF iknx1.'.
  PERFORM C1 USING ''.

* For WHERE condition.These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '      , LTYPE(1) TYPE c'.
  PERFORM C1 USING '      , BUKRS(4) TYPE c'.
  PERFORM C1 USING '      , TOTALCNT(15) TYPE c'.
  PERFORM C1 USING '      , END OF TOUT.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT SEL01 SEL02 SEL03'.
  PERFORM C1 USING '         SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '         SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '         SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '         FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* Stepwise SELECT 1
* =================
  PERFORM C1 USING '  SELECT BUKRS'.
  PERFORM C1 USING '         COUNT( * ) as lcnt'.
  PERFORM C1 USING '    INTO TABLE'.
  PERFORM C1 USING '         iknx1'.
  PERFORM C1 USING '    FROM'.
  PERFORM C1 USING '         KNA1 INNER JOIN KNB1'.
  PERFORM C1 USING '           ON KNA1~KUNNR = KNB1~KUNNR'.
  PERFORM C1 USING '    WHERE'.
  PERFORM C1 USING '          BUKRS IN SEL01'.
  PERFORM C1 USING '     AND (   KNA1~LOEVM = ''X'''.
  PERFORM C1 USING '          OR KNB1~LOEVM = ''X'''.
  PERFORM C1 USING '         )       '.
  PERFORM C1 USING '    GROUP BY'.
  PERFORM C1 USING '         BUKRS.'.
  PERFORM C1 USING '         '.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT iknx1 ASSIGNING <zknx1>.'.
  PERFORM C1 USING '    MOVE 1                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '    MOVE <zknx1>-bukrs     TO TOUT-BUKRS.'.
  PERFORM C1 USING '    MOVE <zknx1>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    CONCATENATE TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '    INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM TRANS.'.
  PERFORM C1 USING '  ENDLOOP.'.

* Stepwise SELECT 2
* =================
  PERFORM C1 USING '  CLEAR iknx1.'.
  PERFORM C1 USING ' '.
  PERFORM C1 USING '  SELECT BUKRS'.
  PERFORM C1 USING '         COUNT( * ) as lcnt'.
  PERFORM C1 USING '    INTO TABLE'.
  PERFORM C1 USING '         iknx1'.
  PERFORM C1 USING '    FROM'.
  PERFORM C1 USING '         KNA1 INNER JOIN KNB1'.
  PERFORM C1 USING '           ON KNA1~KUNNR = KNB1~KUNNR'.
  PERFORM C1 USING '    WHERE'.
  PERFORM C1 USING '          BUKRS IN SEL01'.
  PERFORM C1 USING '     AND (   KNA1~LOEVM = ''X'''.
  PERFORM C1 USING '          OR KNB1~LOEVM = ''X'''.
  PERFORM C1 USING '         )'.
  PERFORM C1 USING '      AND KNA1~SPERR = '''''.
  PERFORM C1 USING '      AND KNB1~SPERR = '''''.
  PERFORM C1 USING '    GROUP BY'.
  PERFORM C1 USING '         BUKRS.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT iknx1 ASSIGNING <zknx1>.'.
  PERFORM C1 USING '    MOVE 2                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '    MOVE <zknx1>-bukrs     TO TOUT-BUKRS.'.
  PERFORM C1 USING '    MOVE <zknx1>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    CONCATENATE TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '    INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM TRANS.'.
  PERFORM C1 USING '  ENDLOOP.'.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.

* GENERATE: END
* =============
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENKPI024FORM

*---------------------------------------------------------------------*
*      Form  GENKPI027SHARED                                          *
*---------------------------------------------------------------------*
FORM GENKPI027SHARED.
ENDFORM.                    " GENKPI027SHARED

*---------------------------------------------------------------------*
*      Form  GENKPI027FORM                                           *
*---------------------------------------------------------------------*
FORM GENKPI027FORM.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING '  DATA: BEGIN OF wbukrs,'.
  PERFORM C1 USING '          bukrs TYPE t001-bukrs,'.
  PERFORM C1 USING '          waers TYPE t001-waers,'.
  PERFORM C1 USING '        END OF wbukrs,'.
  PERFORM C1 USING '        ibukrs LIKE TABLE OF wbukrs.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbukrs> LIKE LINE OF ibukrs.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  DATA: BEGIN OF wbsxk,'.
  PERFORM C1 USING '          ktokk TYPE lfa1-ktokk,'.
  PERFORM C1 USING '          bschl TYPE bsik-bschl,'.
  PERFORM C1 USING '          zterm TYPE bsik-zterm,'.
  PERFORM C1 USING '          zbd1t TYPE bsik-zbd1t,'.
  PERFORM C1 USING '          zbd2t TYPE bsik-zbd2t,'.
  PERFORM C1 USING '          zbd3t TYPE bsik-zbd3t,'.
  PERFORM C1 USING '          shkzg TYPE bsik-shkzg,'.
  PERFORM C1 USING '          xnegp TYPE bsik-xnegp,'.
  PERFORM C1 USING '          lsum TYPE p decimals 2,'.
  PERFORM C1 USING '          lcnt TYPE i,'.
  PERFORM C1 USING '        END OF wbsxk,'.
  PERFORM C1 USING '        ibsxk LIKE TABLE OF wbsxk.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbsxk> LIKE LINE OF ibsxk.'.
  PERFORM C1 USING '  '.

* For WHERE condition.These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  PERFORM C1 USING '      , LTYPE(1) TYPE c'.
  PERFORM C1 USING '      , BUKRS(4) TYPE c'.
  PERFORM C1 USING '      , WAERS(4) TYPE c'.
  PERFORM C1 USING '      , KTOKK(4) TYPE c'.
  PERFORM C1 USING '      , BSCHL(2) TYPE c'.
  PERFORM C1 USING '      , ZTERM(4) TYPE c'.
  PERFORM C1 USING '      , ZBD1T(3) TYPE c'.
  PERFORM C1 USING '      , ZBD2T(3) TYPE c'.
  PERFORM C1 USING '      , ZBD3T(3) TYPE c'.
  PERFORM C1 USING '      , SHKZG(1) TYPE c'.
  PERFORM C1 USING '      , XNEGP(1) TYPE c'.
  PERFORM C1 USING '      , LSUM(19) TYPE c'.
  PERFORM C1 USING '      , TOTALCNT(15) TYPE c'.
  PERFORM C1 USING '      , END OF TOUT.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT SEL01 SEL02 SEL03'.
  PERFORM C1 USING '         SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '         SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '         SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '         FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* BUKRS LOOP
* ==========
  PERFORM C1 USING '    SELECT bukrs'.
  PERFORM C1 USING '           waers'.
  PERFORM C1 USING '      FROM t001'.
  PERFORM C1 USING '      INTO TABLE ibukrs'.
  PERFORM C1 USING '     WHERE BUKRS in sel01'.
  PERFORM C1 USING '       AND XPROD = ''X''.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '    LOOP AT ibukrs assigning <zbukrs>.'.
  PERFORM C1 USING '  '.

* Stepwise SELECT 1
* =================
  PERFORM C1 USING '      CLEAR ibsxk.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      SELECT KTOKK'.
  PERFORM C1 USING '             BSCHL'.
  PERFORM C1 USING '             ZTERM'.
  PERFORM C1 USING '             ZBD1T'.
  PERFORM C1 USING '             ZBD2T'.
  PERFORM C1 USING '             ZBD3T'.
  PERFORM C1 USING '             SHKZG'.
  PERFORM C1 USING '             XNEGP'.
  PERFORM C1 USING '             SUM( DMBTR ) as lsum'.
  PERFORM C1 USING '             count( * ) as lcnt'.
  PERFORM C1 USING '        INTO TABLE'.
  PERFORM C1 USING '             ibsxk'.
  PERFORM C1 USING '        FROM'.
  PERFORM C1 USING '             BSIK INNER JOIN LFA1'.
  PERFORM C1 USING '               ON BSIK~LIFNR = LFA1~LIFNR'.
  PERFORM C1 USING '        WHERE'.
  PERFORM C1 USING '             BUKRS = <zbukrs>-bukrs'.
  PERFORM C1 USING '         AND BSTAT = '''''.
  PERFORM C1 USING '         AND BUDAT >= SELDATE'.
  PERFORM C1 USING '         AND BSCHL in (31,32)'.
  PERFORM C1 USING '       GROUP BY'.
  PERFORM C1 USING '             KTOKK'.
  PERFORM C1 USING '             BSCHL'.
  PERFORM C1 USING '             ZTERM'.
  PERFORM C1 USING '             ZBD1T'.
  PERFORM C1 USING '             ZBD2T'.
  PERFORM C1 USING '             ZBD3T'.
  PERFORM C1 USING '             SHKZG'.
  PERFORM C1 USING '             XNEGP.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '      LOOP AT ibsxk ASSIGNING <zbsxk>.'.
  PERFORM C1 USING '        MOVE 1                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '        MOVE <zbukrs>-bukrs    TO TOUT-BUKRS.'.
  PERFORM C1 USING '        MOVE <zbukrs>-waers    TO TOUT-WAERS.'.
  PERFORM C1 USING '        MOVE <zbsxk>-ktokk     TO TOUT-KTOKK.'.
  PERFORM C1 USING '        MOVE <zbsxk>-bschl     TO TOUT-BSCHL.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zterm     TO TOUT-ZTERM.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zbd1t     TO TOUT-ZBD1T.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zbd2t     TO TOUT-ZBD2T.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zbd3t     TO TOUT-ZBD3T.'.
  PERFORM C1 USING '        MOVE <zbsxk>-shkzg     TO TOUT-SHKZG.'.
  PERFORM C1 USING '        MOVE <zbsxk>-xnegp     TO TOUT-XNEGP.'.
  PERFORM C1 USING '        MOVE <zbsxk>-lsum      TO TOUT-LSUM.'.
  PERFORM C1 USING '        MOVE <zbsxk>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        CONCATENATE'.
  PERFORM C1 USING '                TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-WAERS'.
  PERFORM C1 USING '                TOUT-KTOKK'.
  PERFORM C1 USING '                TOUT-BSCHL'.
  PERFORM C1 USING '                TOUT-ZTERM'.
  PERFORM C1 USING '                TOUT-ZBD1T'.
  PERFORM C1 USING '                TOUT-ZBD2T'.
  PERFORM C1 USING '                TOUT-ZBD3T'.
  PERFORM C1 USING '                TOUT-SHKZG'.
  PERFORM C1 USING '                TOUT-XNEGP'.
  PERFORM C1 USING '                TOUT-LSUM'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '        INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        PERFORM TRANS.'.
  PERFORM C1 USING '      ENDLOOP.'.
  PERFORM C1 USING '  '.

* Stepwise SELECT 2
* =================
  PERFORM C1 USING '      CLEAR ibsxk.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      SELECT KTOKK'.
  PERFORM C1 USING '             BSCHL'.
  PERFORM C1 USING '             ZTERM'.
  PERFORM C1 USING '             ZBD1T'.
  PERFORM C1 USING '             ZBD2T'.
  PERFORM C1 USING '             ZBD3T'.
  PERFORM C1 USING '             SHKZG'.
  PERFORM C1 USING '             XNEGP'.
  PERFORM C1 USING '             SUM( DMBTR ) as lsum'.
  PERFORM C1 USING '             count( * ) as lcnt'.
  PERFORM C1 USING '        INTO TABLE'.
  PERFORM C1 USING '             ibsxk'.
  PERFORM C1 USING '        FROM'.
  PERFORM C1 USING '             BSAK INNER JOIN LFA1'.
  PERFORM C1 USING '               ON BSAK~LIFNR = LFA1~LIFNR'.
  PERFORM C1 USING '        WHERE'.
  PERFORM C1 USING '             BUKRS = <zbukrs>-bukrs'.
  PERFORM C1 USING '         AND BSTAT = '''''.
  PERFORM C1 USING '         AND BUDAT >= SELDATE'.
  PERFORM C1 USING '         AND BSCHL in (31,32)'.
  PERFORM C1 USING '       GROUP BY'.
  PERFORM C1 USING '             KTOKK'.
  PERFORM C1 USING '             BSCHL'.
  PERFORM C1 USING '             ZTERM'.
  PERFORM C1 USING '             ZBD1T'.
  PERFORM C1 USING '             ZBD2T'.
  PERFORM C1 USING '             ZBD3T'.
  PERFORM C1 USING '             SHKZG'.
  PERFORM C1 USING '             XNEGP.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '      LOOP AT ibsxk ASSIGNING <zbsxk>.'.
  PERFORM C1 USING '        MOVE 2                 TO TOUT-LTYPE.'.
  PERFORM C1 USING '        MOVE <zbukrs>-bukrs    TO TOUT-BUKRS.'.
  PERFORM C1 USING '        MOVE <zbukrs>-waers    TO TOUT-WAERS.'.
  PERFORM C1 USING '        MOVE <zbsxk>-ktokk     TO TOUT-KTOKK.'.
  PERFORM C1 USING '        MOVE <zbsxk>-bschl     TO TOUT-BSCHL.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zterm     TO TOUT-ZTERM.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zbd1t     TO TOUT-ZBD1T.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zbd2t     TO TOUT-ZBD2T.'.
  PERFORM C1 USING '        MOVE <zbsxk>-zbd3t     TO TOUT-ZBD3T.'.
  PERFORM C1 USING '        MOVE <zbsxk>-shkzg     TO TOUT-SHKZG.'.
  PERFORM C1 USING '        MOVE <zbsxk>-xnegp     TO TOUT-XNEGP.'.
  PERFORM C1 USING '        MOVE <zbsxk>-lsum      TO TOUT-LSUM.'.
  PERFORM C1 USING '        MOVE <zbsxk>-lcnt      TO TOUT-TOTALCNT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        CONCATENATE'.
  PERFORM C1 USING '                TOUT-LTYPE'.
  PERFORM C1 USING '                TOUT-BUKRS'.
  PERFORM C1 USING '                TOUT-WAERS'.
  PERFORM C1 USING '                TOUT-KTOKK'.
  PERFORM C1 USING '                TOUT-BSCHL'.
  PERFORM C1 USING '                TOUT-ZTERM'.
  PERFORM C1 USING '                TOUT-ZBD1T'.
  PERFORM C1 USING '                TOUT-ZBD2T'.
  PERFORM C1 USING '                TOUT-ZBD3T'.
  PERFORM C1 USING '                TOUT-SHKZG'.
  PERFORM C1 USING '                TOUT-XNEGP'.
  PERFORM C1 USING '                TOUT-LSUM'.
  PERFORM C1 USING '                TOUT-TOTALCNT'.
  PERFORM C1 USING '        INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        PERFORM TRANS.'.
  PERFORM C1 USING '      ENDLOOP.'.
  PERFORM C1 USING '  '.

* BUKRS ENDLOOP
* =============
  PERFORM C1 USING '    ENDLOOP.'.
  PERFORM C1 USING '  '.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.

* GENERATE: END
* =============
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENKPI027FORM

*---------------------------------------------------------------------*
*      Form  EXPPST                                                   *
*---------------------------------------------------------------------*
FORM EXPPST.
  DATA: EXFLAG(1) TYPE C.
  REFRESH : T_SELECT,
            T_WHERE.

  PERFORM CHECKTABEXISTS USING 'BKPF' CHANGING EXFLAG.
  CHECK EXFLAG = 'X'.

* Append Selection

  PERFORM DYNAPPENDSELECT USING 'BKPF' 'BUKRS'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'BELNR'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'GJAHR'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'BLART'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'BLDAT'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'BUDAT'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'MONAT'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'CPUDT'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'WWERT'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'USNAM'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'TCODE'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'WAERS'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'KURSF'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'BSTAT'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'GLVOR'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'GRPID'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'AWTYP'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'HWAER'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'PPNAM'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'XREVERSAL'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'SNAME'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'CPUTM'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'AWKEY'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'STBLG'.
  PERFORM DYNAPPENDSELECT USING 'BKPF' 'STGRD'.

  IF P_XBKTXT = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BKPF' 'BKTXT'.
  ENDIF.

  PERFORM DYNAPPENDWHERE USING 'BKPF' 'BUKRS'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'GJAHR'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'BLART'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'BLDAT'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'BUDAT'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'MONAT'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'CPUDT'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'USNAM'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'TCODE'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'GLVOR'.
  PERFORM DYNAPPENDWHERE USING 'BKPF' 'SNAME'.

  PERFORM DYNAPPENDSELECT USING 'BSEG' 'BUKRS'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'BELNR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'GJAHR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'BUZEI'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'BSCHL'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'KOART'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'SHKZG'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'GSBER'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'DMBTR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'WRBTR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'PSWBT'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'SAKNR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'HKONT'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'KUNNR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'LIFNR'.
  PERFORM DYNAPPENDSELECT USING 'BSEG' 'XNEGP'.

  IF P_XQUAN = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'MENGE'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'MEINS'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'BPMNG'.
  ENDIF.

  IF P_XCLR = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'AUGDT'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'AUGCP'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'AUGBL'.
  ENDIF.

  IF P_XTEXT = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'SGTXT'.
  ENDIF.

  IF P_XACCS = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'KOKRS'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'KOSTL'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'AUFNR'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'PRCTR'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'FIPOS'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'KSTRG'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'PROJK'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'PAOBJNR'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'PASUBNR'.
  ENDIF.

  IF P_XSDOC = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'VBELN'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'VBEL2'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'POSN2'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ETEN2'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ANLN1'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ANLN2'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ANBWA'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'REBZG'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'REBZJ'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'REBZZ'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'REBZT'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'EBELN'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'EBELP'.
  ENDIF.

  IF P_XPAY = 'X'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ZFBDT'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ZTERM'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ZLSCH'.
    PERFORM DYNAPPENDSELECT USING 'BSEG' 'ZLSPR'.
  ENDIF.

  PERFORM ADDBSET USING 'Y' '' 'V' 'ACEBELNR'.
  PERFORM ADDB2 USING 'Y' 'Int. table Posting Document Numbers'.
  PERFORM ADDB3
          USING 'CVAL' 10 '' '' '' '' 'Code Value' 'Code Value' ''.
  PERFORM ADDB3 USING 'CID' 10 '' '' '' '' 'Code ID' 'Code ID' ''.

  PERFORM ADDBSET USING 'Y' '' 'V' 'ACEBKPF'.
  PERFORM ADDB2 USING 'Y' 'Int. table Posting Header'.

  CONCATENATE 'ACEBKPF' ': '
              INTO CONCATU.
  CONCATENATE '(' FILENUM ')'
              INTO CONCATU2.
  CONCATENATE CONCATU CONCATU2
              INTO CONCAT
              SEPARATED BY SPACE.
  MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

  PERFORM GENCONSTSTART USING 'V'.
  PERFORM GENPSTSHARED.
  PERFORM GENCONSTFORM.
  PERFORM GENPSTFORM.
  PERFORM GENABAP.

*  Fill Selection Option

  REFRESH : SEL01,SEL02,SEL03,SEL04,SEL05,
            SEL06,SEL07,SEL08,SEL09,SEL10,
            SEL11,SEL12,SEL13,SEL14,SEL15.

  SEL01[] = SXBUKRS[].
  SEL02[] = SXGJAHR[].
  SEL03[] = SXBLART[].
  SEL04[] = SXBLDAT[].
  SEL05[] = SXBUDAT[].
  SEL06[] = SXMONAT[].
  SEL07[] = SXCPUDT[].
  SEL08[] = SXUSNAM[].
  SEL09[] = SXTCODE[].
  SEL10[] = SXGLVOR[].
  SEL11[] = SXSNAME[].

  EXPORT SEL01 SEL02 SEL03 SEL04 SEL05
         SEL06 SEL07 SEL08 SEL09 SEL10
         SEL11 SEL12 SEL13 SEL14 SEL15
         TO MEMORY ID 'ACEWhere'.

  PERFORM SUBMITTEMP USING 'Y' 'POSTING' 'V' 'ACEBKPF' ''.

ENDFORM.                    " EXPPST

*---------------------------------------------------------------------*
*      Form  GENPSTSHARED                                             *
*---------------------------------------------------------------------*
FORM GENPSTSHARED.
    PERFORM C1 USING ''.
    PERFORM C1 USING 'DATA: BEGIN OF WCODE,'.
    PERFORM C1 USING '        CVAL(12) TYPE C,'.
    PERFORM C1 USING '        CID(60) TYPE C.'.
    PERFORM C1 USING 'DATA: END OF WCODE.'.
    PERFORM C1 USING ''.
    PERFORM C1 USING 'DATA ZBUKRS'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZGJAHR'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZUNAME'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZPDATE'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZTCODE'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZWAERS'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZGLVOR'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZGRPID'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZAWTYP'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZHWAER'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZAWKEY'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZSAKNR'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZHKONT'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZKUNNR'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING 'DATA ZLIFNR'.
    PERFORM C1 USING '       LIKE SORTED TABLE OF WCODE'.
    PERFORM C1 USING '       WITH UNIQUE KEY CID.'.
    PERFORM C1 USING ''.
ENDFORM.                    " GENPSTSHARED

*---------------------------------------------------------------------*
*      Form  GENPSTFORM                                               *
*---------------------------------------------------------------------*
FORM GENPSTFORM.
  DATA: LENG(10)  TYPE N.
  DATA: WHRCNT(2) TYPE N.

  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM TRAN2                             *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM TRAN2.'.
  PERFORM C1 USING '  DATA: REALTRANSBYT2 TYPE I,'.
  PERFORM C1 USING '        RECLE2 TYPE I.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  REALTRANSBYT2 = CURTRANSBYT2 + '.
  PERFORM C1 USING '                  CURTRANSRE2 * 2.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  IF REALTRANSBYT2 > FILELENG.'.
  PERFORM C1 USING '    PERFORM FILECLOS USING FILENA2.'.
  PERFORM C1 USING '    CURTRANSBYT2 = 0.'.
  PERFORM C1 USING '    CURTRANSRE2 = 0.'.
  PERFORM C1 USING '    IF NEWFILENU2 >  NEWFILENUM.'.
  PERFORM C1 USING '      NEWFILENU2 = NEWFILENU2 + 1.'.
  PERFORM C1 USING '    ELSE.'.
  PERFORM C1 USING '      NEWFILENU2 = NEWFILENUM + 1.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM GETFILENAM2.'.
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENA2 ''OUTPUT''.'.
  PERFORM C1 USING '    CONCATENATE NEWFILELIST ''2'''.
  PERFORM C1 USING '                INTO NEWFILELIST.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR1'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR2'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  RECLE2 = STRLEN( TREC ).'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  TRANSFER TREC TO FILENA2.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWTRANSBYT2 = NEWTRANSBYT2 + RECLE2.'.
  PERFORM C1 USING '  CURTRANSBYT2 = CURTRANSBYT2 + RECLE2.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWTRANSRE2 =  NEWTRANSRE2 + 1.'.
  PERFORM C1 USING '  CURTRANSRE2 =  CURTRANSRE2 + 1.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM TRANSBELNR                        *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM TRANSBELNR.'.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR1'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR2'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  TRANSFER TREC TO FILENA4.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWTRANSBYT4 = NEWTRANSBYT4 + STRLEN( TREC ).'.
  PERFORM C1 USING '  NEWTRANSRE4 =  NEWTRANSRE4 + 1.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM TRANSCODES                        *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM TRANSCODES.'.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR1'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR2'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  TRANSFER TREC TO FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWTRANSBYT3 = NEWTRANSBYT3 + STRLEN( TREC ).'.
  PERFORM C1 USING '  NEWTRANSRE3 =  NEWTRANSRE3 + 1.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM WRITECODES                        *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM WRITECODES.'.
  PERFORM C1 USING '  IF NEWFILENU2 >  NEWFILENUM.'.
  PERFORM C1 USING '    NEWFILENUM = NEWFILENU2 + 1.'.
  PERFORM C1 USING '  ELSE.'.
  PERFORM C1 USING '    NEWFILENUM = NEWFILENUM + 1.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZBUKRS INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''1''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZGJAHR INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''2''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZUNAME INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''3''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZPDATE INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''4''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZTCODE INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''5''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZWAERS INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''6''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZGLVOR INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''7''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZGRPID INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''8''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZAWTYP INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''9''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZHWAER INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''10''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZAWKEY INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''11''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZSAKNR INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''12''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZHKONT INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''13''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZKUNNR INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''14''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  LOOP AT ZLIFNR INTO WCODE.'.
  PERFORM C1 USING '    PERFORM WRITESUBCODES USING ''15''.'.
  PERFORM C1 USING '  ENDLOOP.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM WRITESUBCODES                     *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM WRITESUBCODES USING CTYPE.'.
  PERFORM C1 USING '  CONCATENATE'.
  PERFORM C1 USING '    CTYPE'.
  PERFORM C1 USING '    WCODE-CVAL'.
  PERFORM C1 USING '    WCODE-CID'.
  PERFORM C1 USING '    INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING '  PERFORM TRANSCODES.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEBJAHR                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEBJAHR USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZBUKRS WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZBUKRS ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZBUKRS INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEUNAME                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEUNAME USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZUNAME WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZUNAME ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZUNAME INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEPDATE                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEPDATE USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZPDATE WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZPDATE ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZPDATE INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODETCODE                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODETCODE USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZTCODE WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZTCODE ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZTCODE INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEWAERS                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEWAERS USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZWAERS WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZWAERS ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZWAERS INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEGLVOR                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEGLVOR USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZGLVOR WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZGLVOR ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZGLVOR INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEGRPID                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEGRPID USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZGRPID WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZGRPID ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZGRPID INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEAWTYP                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEAWTYP USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZAWTYP WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZAWTYP ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZAWTYP INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEHWAER                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEHWAER USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZHWAER WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZHWAER ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZHWAER INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEAWKEY                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEAWKEY USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZAWKEY WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZAWKEY ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZAWKEY INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODESAKNR                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODESAKNR USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZSAKNR WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZSAKNR ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZSAKNR INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEHKONT                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEHKONT USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZHKONT WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZHKONT ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZHKONT INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODEKUNNR                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODEKUNNR USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZKUNNR WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZKUNNR ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZKUNNR INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETCODELIFNR                      *'.
  PERFORM C1 USING '*----------------------------------------------*'.
  PERFORM C1 USING 'FORM GETCODELIFNR USING FLD CHANGING RES.'.
  PERFORM C1 USING '  IF FLD = ''''.'.
  PERFORM C1 USING '    RES = ''''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  READ TABLE ZLIFNR WITH TABLE KEY CID = FLD'.
  PERFORM C1 USING '       INTO WCODE TRANSPORTING CVAL.'.
  PERFORM C1 USING '  IF SY-SUBRC = 4 OR SY-SUBRC = 8.'.
  PERFORM C1 USING '    WCODE-CVAL = LINES( ZLIFNR ) + 1.'.
  PERFORM C1 USING '    CONDENSE WCODE-CVAL NO-GAPS.'.
  PERFORM C1 USING '    WCODE-CID = FLD.'.
  PERFORM C1 USING '    INSERT WCODE INTO ZLIFNR INDEX SY-TABIX.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  RES = WCODE-CVAL.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.

  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.

* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING '  DATA: BEGIN OF wbukrs,'.
  PERFORM C1 USING '          bukrs TYPE t001-bukrs,'.
  PERFORM C1 USING '        END OF wbukrs,'.
  PERFORM C1 USING '        ibukrs LIKE TABLE OF wbukrs.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zbukrs> LIKE LINE OF ibukrs.'.
  PERFORM C1 USING '  DATA: NDMBTR TYPE p decimals 2,'.
  PERFORM C1 USING '        NWRBTR TYPE p decimals 2,'.
  PERFORM C1 USING '        NDIFF TYPE p decimals 2,'.
  PERFORM C1 USING '        NKOART(11) TYPE c,'.
  PERFORM C1 USING '        NBUZEI(3) TYPE n,'.
  PERFORM C1 USING '        NBELNR(8) TYPE n VALUE 0,'.
  PERFORM C1 USING '        BJAHR(9) TYPE c.'.
  PERFORM C1 USING '  TABLES: BKPF, BSEG.'.
  PERFORM C1 USING ''.

* For WHERE condition. These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.

  LOOP AT T_SELECT WHERE TABNAME = 'BKPF'.
    SELECT  SINGLE DATATYPE
                   FIELDNAME
                   LENG
                   POSITION
                   DECIMALS
       INTO (WDD03L-DATATYPE
            ,WDD03L-FIELDNAME
            ,WDD03L-LENG
            ,WDD03L-POSITION
            ,WDD03L-DECIMALS
            )
       FROM DD03L
      WHERE TABNAME  = T_SELECT-TABNAME
        AND FIELDNAME = T_SELECT-FLDNAME
        AND AS4LOCAL = 'A'.

    IF WDD03L-FIELDNAME+0(1) <> '.'.
      IF WDD03L-DATATYPE = 'RAW'.
        LENG = WDD03L-LENG * 4.
      ELSEIF WDD03L-DATATYPE = 'DEC' OR  WDD03L-DATATYPE = 'CURR'.
        LENG = WDD03L-LENG + WDD03L-DECIMALS + 5.
      ELSE.
        LENG = WDD03L-LENG.
      ENDIF.

      IF LENG > 255.
        LENG = 255.
      ENDIF.

      IF WDD03L-FIELDNAME = 'BUKRS'.
        PERFORM C1 USING '        , BJAHR(9) TYPE c'.
        PERFORM ADDB3 USING 'BJAHR'
                    8
                    'BKPF'
                    'BJAHR'
                    ''
                    'X'
                    'Company Code @ Fiscal Year'
                    'CoCd@Yr'
                    ''.
      ENDIF.

      CONCATENATE WDD03L-FIELDNAME '(' LENG ')'
                  INTO CONCATU2.
      CONDENSE CONCATU2 NO-GAPS.
      CONCATENATE '        ,' CONCATU2 'type c'
                  INTO CONCAT
                  SEPARATED BY ' '.
      PERFORM C1 USING CONCAT.

      IF WDD03L-FIELDNAME <> 'BUKRS' AND
         WDD03L-FIELDNAME <> 'GJAHR'.
        PERFORM ADDB3 USING WDD03L-FIELDNAME
                    0
                    'BKPF'
                    ''
                    ''
                    ''
                    ''
                    ''
                    ''.
      ENDIF.
    ENDIF.
  ENDLOOP.

  PERFORM ADDB3 USING 'XDMBTR' 33 '' '' '' ''
                      'Amount in Local Currency'
                      'Amount in LC' ''.
  PERFORM ADDB3 USING 'XWRBTR' 33 '' '' '' ''
                      'Amount in document currency'
                      'Amount' ''.
  PERFORM ADDB3 USING 'XDIFF' 33 '' '' '' ''
                      'Difference in doc currency'
                      'Diff in doc curr' ''.
  PERFORM ADDB3 USING 'XKOART' 11 '' '' '' ''
                      'Summary of Account Type'
                      'Sum Acc Type' ''.
  PERFORM ADDB3 USING 'XBUZEI' 3 '' '' '' ''
                      'Number of Line Items'
                      'Num Items' ''.

  PERFORM C1 USING '        , XDMBTR(33) TYPE c'.
  PERFORM C1 USING '        , XWRBTR(33) TYPE c'.
  PERFORM C1 USING '        , XDIFF(33) TYPE c'.
  PERFORM C1 USING '        , XKOART(11) TYPE c'.
  PERFORM C1 USING '        , XBUZEI(3) TYPE c'.
  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF TOUT.'.
  PERFORM C1 USING ''.

* Build   TOU2(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOU2'.

  LOOP AT T_SELECT WHERE TABNAME = 'BSEG'.
    SELECT  SINGLE DATATYPE
                   FIELDNAME
                   LENG
                   POSITION
                   DECIMALS
       INTO (WDD03L-DATATYPE
            ,WDD03L-FIELDNAME
            ,WDD03L-LENG
            ,WDD03L-POSITION
            ,WDD03L-DECIMALS
            )
       FROM DD03L
      WHERE TABNAME  = T_SELECT-TABNAME
        AND FIELDNAME = T_SELECT-FLDNAME
        AND AS4LOCAL = 'A'.

    IF WDD03L-FIELDNAME+0(1) <> '.'.
      IF WDD03L-DATATYPE = 'RAW'.
        LENG = WDD03L-LENG * 4.
      ELSEIF WDD03L-DATATYPE = 'DEC' OR  WDD03L-DATATYPE = 'CURR'.
        LENG = WDD03L-LENG + WDD03L-DECIMALS + 5.
      ELSE.
        LENG = WDD03L-LENG.
      ENDIF.

      IF LENG > 255.
        LENG = 255.
      ENDIF.

      IF WDD03L-FIELDNAME = 'BUKRS'.
        PERFORM C1 USING '        , BJAHR(9) TYPE c'.
      ELSEIF WDD03L-FIELDNAME <> 'GJAHR'.
        CONCATENATE WDD03L-FIELDNAME '(' LENG ')'
                    INTO CONCATU2.
        CONDENSE CONCATU2 NO-GAPS.
        CONCATENATE '        ,' CONCATU2 'type c'
                    INTO CONCAT
                    SEPARATED BY ' '.
        PERFORM C1 USING CONCAT.
      ENDIF.
    ENDIF.
  ENDLOOP.

  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF TOU2.'.
  PERFORM C1 USING ''.

* Build TOU4(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOU4'.
  PERFORM C1 USING '        , CVAL(12) TYPE c'.
  PERFORM C1 USING '        , CID(60) TYPE c'.
  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF TOU4.'.
  PERFORM C1 USING ''.

* Build ITAB(All fields are as per the Dictionary def.) structure
* definition.
  PERFORM C1 USING '  DATA: BEGIN OF ITAB'.

  LOOP AT T_SELECT WHERE TABNAME = 'BKPF'.
    CONCATENATE T_SELECT-TABNAME '-' T_SELECT-FLDNAME
                INTO CONCATU2.
    CONCATENATE '        ,'  T_SELECT-FLDNAME 'LIKE' CONCATU2
                INTO CONCAT
                SEPARATED BY SPACE.
    PERFORM C1 USING CONCAT.
  ENDLOOP.

  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF ITAB.'.
  PERFORM C1 USING ''.

* Build ITAB(All fields are as per the Dictionary def.) structure
* definition.
  PERFORM C1 USING '  DATA: BEGIN OF ITA2'.

  LOOP AT T_SELECT WHERE TABNAME = 'BSEG'.
    CONCATENATE T_SELECT-TABNAME '-' T_SELECT-FLDNAME
                INTO CONCATU2.
    CONCATENATE '        ,'  T_SELECT-FLDNAME 'LIKE' CONCATU2
                INTO CONCAT
                SEPARATED BY SPACE.
    PERFORM C1 USING CONCAT.
  ENDLOOP.

  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF ITA2.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  NEWFILENU4 = NEWFILENUM - 1.'.
  PERFORM C1 USING '  PERFORM GETFILENAM4.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENA4 ''OUTPUT''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '  NEWFILELIST = ''S''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWFILENU2 = NEWFILENUM + 1.'.
  PERFORM C1 USING '  PERFORM GETFILENAM2.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENA2 ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENA2.'.
  PERFORM C1 USING '  NEWFILELIST = ''S2''.'.
  PERFORM C1 USING ''.

* GENERATE: EXIT ON PARFLAG
* =========================
  PERFORM C1 USING '  IF parflag <> ''Y''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT SEL01 SEL02 SEL03'.
  PERFORM C1 USING '         SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '         SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '         SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '         FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* Stepwise SELECT
* ===============
  PERFORM C1 USING ' SELECT        BUKRS'.
  PERFORM C1 USING '           INTO table'.
  PERFORM C1 USING '                ibukrs'.
  PERFORM C1 USING '           FROM  T001.'.
  PERFORM C1 USING ''.

* GENERATE: FILE OPEN
* ===================
  PERFORM C1 USING '  LOOP AT ibukrs ASSIGNING <zbukrs>.'.
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENA2 ''APPENDING''.'.
  PERFORM C1 USING ''.

* GENERATE: SELECT
* ================
  PERFORM C1 USING '    SELECT'.

  LOOP AT T_SELECT WHERE TABNAME = 'BKPF'.
    CLEAR CONCAT.
    WRITE T_SELECT-FLDNAME TO CONCAT+11.
    PERFORM C1 USING CONCAT.
  ENDLOOP.

* GENERATE: FROM
* ==============
  PERFORM C1 USING '      FROM BKPF'.

* GENERATE: INTO
* ==============
  PERFORM C1 USING '      INTO CORRESPONDING FIELDS OF ITAB'.

* GENERATE: WHERE
* ===============
  PERFORM C1 USING '     WHERE BUKRS = <zbukrs>-BUKRS'.

* GENERATE: WHERE(SELECT-OPTIONS)
* ===============================
  LOOP AT T_WHERE WHERE TABNAME = 'BKPF'.
    WHRCNT = WHRCNT + 1.

    CONCATENATE 'SEL' WHRCNT
                INTO CONCATU2.
    CONCATENATE '       AND' T_WHERE-FLDNAME 'IN' CONCATU2
                INTO CONCAT
                SEPARATED BY SPACE.
    PERFORM C1 USING CONCAT.
  ENDLOOP.

  PERFORM C1 USING '       .'.

* GENERATE: MOVE
* ==============
  PERFORM C1 USING '      MOVE-CORRESPONDING ITAB TO TOUT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING '      REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '              IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      NBELNR = NBELNR + 1.'.
  PERFORM C1 USING '      TOU4-CVAL = NBELNR.'.
  PERFORM C1 USING '      SHIFT TOU4-CVAL'.
  PERFORM C1 USING '            LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '      TOU4-CID = TOUT-BELNR.'.
  PERFORM C1 USING '      CONCATENATE TOU4-CVAL TOU4-CID'.
  PERFORM C1 USING '                  INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING '      PERFORM TRANSBELNR.'.
  PERFORM C1 USING '      TOUT-BELNR = TOU4-CVAL.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      CONCATENATE TOUT-BUKRS ''@'' TOUT-GJAHR'.
  PERFORM C1 USING '                  INTO BJAHR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      PERFORM GETCODEBJAHR USING BJAHR'.
  PERFORM C1 USING '                        CHANGING TOUT-BJAHR.'.
  PERFORM C1 USING '      PERFORM GETCODEUNAME USING ITAB-USNAM'.
  PERFORM C1 USING '                        CHANGING TOUT-USNAM.'.
  PERFORM C1 USING '      PERFORM GETCODEUNAME USING ITAB-SNAME'.
  PERFORM C1 USING '                        CHANGING TOUT-SNAME.'.
  PERFORM C1 USING '      PERFORM GETCODEUNAME USING ITAB-PPNAM'.
  PERFORM C1 USING '                        CHANGING TOUT-PPNAM.'.
  PERFORM C1 USING '      PERFORM GETCODEPDATE USING ITAB-BLDAT'.
  PERFORM C1 USING '                        CHANGING TOUT-BLDAT.'.
  PERFORM C1 USING '      PERFORM GETCODEPDATE USING ITAB-BUDAT'.
  PERFORM C1 USING '                        CHANGING TOUT-BUDAT.'.
  PERFORM C1 USING '      PERFORM GETCODEPDATE USING ITAB-CPUDT'.
  PERFORM C1 USING '                        CHANGING TOUT-CPUDT.'.
  PERFORM C1 USING '      PERFORM GETCODEPDATE USING ITAB-WWERT'.
  PERFORM C1 USING '                        CHANGING TOUT-WWERT.'.
  PERFORM C1 USING '      PERFORM GETCODETCODE USING ITAB-TCODE'.
  PERFORM C1 USING '                        CHANGING TOUT-TCODE.'.
  PERFORM C1 USING '      PERFORM GETCODEWAERS USING ITAB-WAERS'.
  PERFORM C1 USING '                        CHANGING TOUT-WAERS.'.
  PERFORM C1 USING '      PERFORM GETCODEGLVOR USING ITAB-GLVOR'.
  PERFORM C1 USING '                        CHANGING TOUT-GLVOR.'.
  PERFORM C1 USING '      PERFORM GETCODEGRPID USING ITAB-GRPID'.
  PERFORM C1 USING '                        CHANGING TOUT-GRPID.'.
  PERFORM C1 USING '      PERFORM GETCODEAWTYP USING ITAB-AWTYP'.
  PERFORM C1 USING '                        CHANGING TOUT-AWTYP.'.
  PERFORM C1 USING '      PERFORM GETCODEHWAER USING ITAB-HWAER'.
  PERFORM C1 USING '                        CHANGING TOUT-HWAER.'.
  PERFORM C1 USING '      PERFORM GETCODEAWKEY USING ITAB-AWKEY'.
  PERFORM C1 USING '                        CHANGING TOUT-AWKEY.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      SHIFT TOUT-BELNR'.
  PERFORM C1 USING '            LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '      SHIFT TOUT-MONAT'.
  PERFORM C1 USING '            LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '      CONDENSE TOUT-KURSF NO-GAPS.'.
  PERFORM C1 USING ''.

* GENERATE: INIT INTERNAL FIELDS
* ==============================
  PERFORM C1 USING '      NDMBTR = 0.'.
  PERFORM C1 USING '      NWRBTR = 0.'.
  PERFORM C1 USING '      NDIFF = 0.'.
  PERFORM C1 USING '      NKOART = ''           ''.'.
  PERFORM C1 USING '      NBUZEI = 0.'.
  PERFORM C1 USING ''.

* START BSEG PROCESSING ---------------------------------------------

* GENERATE: SELECT
* ================
  PERFORM C1 USING '      SELECT'.

  LOOP AT T_SELECT WHERE TABNAME = 'BSEG'.
    CLEAR CONCAT.
    WRITE T_SELECT-FLDNAME TO CONCAT+13.
    PERFORM C1 USING CONCAT.
  ENDLOOP.

* GENERATE: FROM
* ==============
  PERFORM C1 USING '        FROM BSEG'.

* GENERATE: INTO
* ==============
  PERFORM C1 USING '        INTO CORRESPONDING FIELDS OF ITA2'.

* GENERATE: WHERE
* ===============
  PERFORM C1 USING '       WHERE BUKRS = ITAB-BUKRS'.
  PERFORM C1 USING '         AND BELNR = ITAB-BELNR'.
  PERFORM C1 USING '         AND GJAHR = ITAB-GJAHR'.
  PERFORM C1 USING '       .'.

* GENERATE: MOVE
* ==============
  PERFORM C1 USING '        MOVE-CORRESPONDING ITA2 TO TOU2.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '                IN TOU2 WITH REPLCHAR.'.
  PERFORM C1 USING '        REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '                IN TOU2 WITH REPLCHAR.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        TOU2-BJAHR = TOUT-BJAHR.'.
  PERFORM C1 USING '        TOU2-BELNR = TOU4-CVAL.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '        PERFORM GETCODESAKNR USING ITA2-SAKNR'.
  PERFORM C1 USING '                          CHANGING TOU2-SAKNR.'.
  PERFORM C1 USING '        PERFORM GETCODEHKONT USING ITA2-HKONT'.
  PERFORM C1 USING '                          CHANGING TOU2-HKONT.'.
  PERFORM C1 USING '        PERFORM GETCODEKUNNR USING ITA2-KUNNR'.
  PERFORM C1 USING '                          CHANGING TOU2-KUNNR.'.
  PERFORM C1 USING '        PERFORM GETCODELIFNR USING ITA2-LIFNR'.
  PERFORM C1 USING '                          CHANGING TOU2-LIFNR.'.

  IF P_XCLR = 'X'.
    PERFORM C1 USING '        PERFORM GETCODEPDATE USING ITA2-AUGDT'.
    PERFORM C1 USING '                          CHANGING TOU2-AUGDT.'.
    PERFORM C1 USING '        PERFORM GETCODEPDATE USING ITA2-AUGCP'.
    PERFORM C1 USING '                          CHANGING TOU2-AUGCP.'.
  ENDIF.

  IF P_XPAY = 'X'.
    PERFORM C1 USING '        PERFORM GETCODEPDATE USING ITA2-ZFBDT'.
    PERFORM C1 USING '                          CHANGING TOU2-ZFBDT.'.
  ENDIF.

  PERFORM C1 USING ''.
  PERFORM C1 USING '        SHIFT TOU2-BELNR'.
  PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '        SHIFT TOU2-BUZEI'.
  PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '        SHIFT TOU2-BSCHL'.
  PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '        SHIFT TOU2-DMBTR'.
  PERFORM C1 USING '              RIGHT DELETING TRAILING ''0''.'.
  PERFORM C1 USING '        SHIFT TOU2-WRBTR'.
  PERFORM C1 USING '              RIGHT DELETING TRAILING ''0''.'.
  PERFORM C1 USING '        SHIFT TOU2-PSWBT'.
  PERFORM C1 USING '              RIGHT DELETING TRAILING ''0''.'.

  IF P_XQUAN = 'X'.
    PERFORM C1 USING '        SHIFT TOU2-MENGE'.
    PERFORM C1 USING '              RIGHT DELETING TRAILING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-BPMNG'.
    PERFORM C1 USING '              RIGHT DELETING TRAILING ''0''.'.
  ENDIF.

  IF P_XACCS = 'X'.
    PERFORM C1 USING '        SHIFT TOU2-KOKRS'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-PROJK'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-PAOBJNR'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-PASUBNR'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
  ENDIF.

  IF P_XSDOC = 'X'.
    PERFORM C1 USING '        SHIFT TOU2-POSN2'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-ETEN2'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-REBZJ'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-REBZZ'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
    PERFORM C1 USING '        SHIFT TOU2-EBELP'.
    PERFORM C1 USING '              LEFT DELETING LEADING ''0''.'.
  ENDIF.

  PERFORM C1 USING ''.
  PERFORM C1 USING '        CONDENSE TOU2-DMBTR NO-GAPS.'.
  PERFORM C1 USING '        CONDENSE TOU2-WRBTR NO-GAPS.'.
  PERFORM C1 USING '        CONDENSE TOU2-PSWBT NO-GAPS.'.

  IF P_XQUAN = 'X'.
    PERFORM C1 USING '        CONDENSE TOU2-MENGE NO-GAPS.'.
    PERFORM C1 USING '        CONDENSE TOU2-BPMNG NO-GAPS.'.
  ENDIF.

* GENERATE: UPDATE INTERNAL FIELDS
* ================================
  PERFORM C1 USING '        NBUZEI = NBUZEI + 1.'.
  PERFORM C1 USING '        IF ( TOU2-SHKZG = ''S'' AND'.
  PERFORM C1 USING '             TOU2-XNEGP <> ''X'' ) OR'.
  PERFORM C1 USING '           ( TOU2-SHKZG <> ''S'' AND'.
  PERFORM C1 USING '             TOU2-XNEGP = ''X'' ).'.
  PERFORM C1 USING '          NDMBTR = NDMBTR + ITA2-DMBTR.'.
  PERFORM C1 USING '          NWRBTR = NWRBTR + ITA2-WRBTR.'.
  PERFORM C1 USING '          CASE TOU2-KOART.'.
  PERFORM C1 USING '            WHEN ''A''.'.
  PERFORM C1 USING '              NKOART+1(1) = ''A''.'.
  PERFORM C1 USING '            WHEN ''D''.'.
  PERFORM C1 USING '              NKOART+3(1) = ''D''.'.
  PERFORM C1 USING '            WHEN ''K''.'.
  PERFORM C1 USING '              NKOART+5(1) = ''K''.'.
  PERFORM C1 USING '            WHEN ''M''.'.
  PERFORM C1 USING '              NKOART+7(1) = ''M''.'.
  PERFORM C1 USING '            WHEN ''S''.'.
  PERFORM C1 USING '              NKOART+9(1) = ''S''.'.
  PERFORM C1 USING '          ENDCASE.'.
  PERFORM C1 USING '        ELSE.'.
  PERFORM C1 USING '            DATA: NMCHEC1(45) TYPE N.'.
  PERFORM C1 USING '            DATA: NMCHEC2(45) TYPE N.'.
  PERFORM C1 USING '          MOVE NDIFF      TO NMCHEC1.'.
  PERFORM C1 USING '          MOVE ITA2-WRBTR TO NMCHEC2.'.
  PERFORM C1 USING '          TRY.'.
  PERFORM C1 USING '              NDIFF = NDIFF + ITA2-WRBTR.'.
  PERFORM C1 USING '          CATCH CX_SY_ARITHMETIC_OVERFLOW.'.
  PERFORM C1 USING '              CONCATENATE '.
  PERFORM C1 USING '               ''Posting Arithmetic Overflow:'''.
  PERFORM C1 USING '               NMCHEC1 NMCHEC2'.
  PERFORM C1 USING '                  INTO ZEILE SEPARATED BY SPACE.'.
  PERFORM C1 USING '              MESSAGE ID ''AD'' TYPE ''S'''.
  PERFORM C1 USING '                  NUMBER 10 WITH ZEILE.'.
  PERFORM C1 USING '              MESSAGE ID ''AD'' TYPE ''S'''.
  PERFORM C1 USING '                  NUMBER 10 WITH NMCHEC1.'.
  PERFORM C1 USING '              MESSAGE ID ''AD'' TYPE ''S'''.
  PERFORM C1 USING '                  NUMBER 10 WITH NMCHEC2.'.
  PERFORM C1 USING '              MESSAGE ID ''AD'' TYPE ''S'''.
  PERFORM C1 USING '                  NUMBER 10 WITH ITAB-GJAHR.'.
  PERFORM C1 USING '              MESSAGE ID ''AD'' TYPE ''S'''.
  PERFORM C1 USING '                  NUMBER 10 WITH ITAB-BELNR.'.
  PERFORM C1 USING '              MESSAGE ID ''AD'' TYPE ''S'''.
  PERFORM C1 USING '                  NUMBER 10 WITH ITAB-BUKRS.'.
  PERFORM C1 USING '            LEAVE PROGRAM.'.
  PERFORM C1 USING '          ENDTRY.'.
  PERFORM C1 USING '          CASE TOU2-KOART.'.
  PERFORM C1 USING '            WHEN ''A''.'.
  PERFORM C1 USING '              NKOART+2(1) = ''B''.'.
  PERFORM C1 USING '            WHEN ''D''.'.
  PERFORM C1 USING '              NKOART+4(1) = ''E''.'.
  PERFORM C1 USING '            WHEN ''K''.'.
  PERFORM C1 USING '              NKOART+6(1) = ''L''.'.
  PERFORM C1 USING '            WHEN ''M''.'.
  PERFORM C1 USING '              NKOART+8(1) = ''N''.'.
  PERFORM C1 USING '            WHEN ''S''.'.
  PERFORM C1 USING '              NKOART+10(1) = ''T''.'.
  PERFORM C1 USING '          ENDCASE.'.
  PERFORM C1 USING '        ENDIF.'.
  PERFORM C1 USING '        IF TOU2-XNEGP = ''X''.'.
  PERFORM C1 USING '          NKOART+0(1) = ''X''.'.
  PERFORM C1 USING '        ENDIF.'.

* GENERATE: CONCATENATE
* =====================
  PERFORM C1 USING '        CONCATENATE '.
  PERFORM C1 USING '                   TOU2-BJAHR'.

  LOOP AT T_SELECT WHERE TABNAME = 'BSEG'.
    IF T_SELECT-FLDNAME <> 'BUKRS' AND
       T_SELECT-FLDNAME <> 'GJAHR'.
      CONCATENATE '                    TOU2-' T_SELECT-FLDNAME
                  INTO CONCAT.
      PERFORM C1 USING CONCAT.
    ENDIF.
  ENDLOOP.

  PERFORM C1 USING '                    INTO TREC'.
  PERFORM C1 USING '                    SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.

* GENERATE: PERFORM TRANS
* =======================
  PERFORM C1 USING '        PERFORM TRAN2.'.
  PERFORM C1 USING ''.

* GENERATE: SELECT: ENDSELECT
* ===========================
  PERFORM C1 USING '    ENDSELECT.'.
  PERFORM C1 USING ''.

* END BSEG PROCESSING -----------------------------------------------

* GENERATE: UPDATE INTERNAL FIELDS
* ================================
  PERFORM C1 USING '    NDIFF = NDIFF - NWRBTR.'.
  PERFORM C1 USING '    IF NDIFF = 0.'.
  PERFORM C1 USING '      MOVE '''' TO TOUT-XDIFF.'.
  PERFORM C1 USING '    ELSE.'.
  PERFORM C1 USING '      MOVE NDIFF TO TOUT-XDIFF.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING '    MOVE NDMBTR TO TOUT-XDMBTR.'.
  PERFORM C1 USING '    MOVE NWRBTR TO TOUT-XWRBTR.'.
  PERFORM C1 USING '    MOVE NKOART TO TOUT-XKOART.'.
  PERFORM C1 USING '    MOVE NBUZEI TO TOUT-XBUZEI.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    SHIFT TOUT-XDMBTR'.
  PERFORM C1 USING '          RIGHT DELETING TRAILING ''0''.'.
  PERFORM C1 USING '    SHIFT TOUT-XWRBTR'.
  PERFORM C1 USING '          RIGHT DELETING TRAILING ''0''.'.
  PERFORM C1 USING '    SHIFT TOUT-XDIFF'.
  PERFORM C1 USING '          RIGHT DELETING TRAILING ''0''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    SHIFT TOUT-XDMBTR'.
  PERFORM C1 USING '          LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '    SHIFT TOUT-XWRBTR'.
  PERFORM C1 USING '          LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '    SHIFT TOUT-XDIFF'.
  PERFORM C1 USING '          LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING '    SHIFT TOUT-XBUZEI'.
  PERFORM C1 USING '          LEFT DELETING LEADING ''0''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    CONDENSE TOUT-XDMBTR NO-GAPS.'.
  PERFORM C1 USING '    CONDENSE TOUT-XWRBTR NO-GAPS.'.
  PERFORM C1 USING '    CONDENSE TOUT-XDIFF NO-GAPS.'.
  PERFORM C1 USING '    CONDENSE TOUT-XKOART NO-GAPS.'.
  PERFORM C1 USING '    CONDENSE TOUT-XBUZEI NO-GAPS.'.
  PERFORM C1 USING ''.


* GENERATE: CONCATENATE
* =====================
  PERFORM C1 USING '    CONCATENATE '.
  PERFORM C1 USING '                TOUT-BJAHR'.

  LOOP AT T_SELECT WHERE TABNAME = 'BKPF'.
    IF T_SELECT-FLDNAME <> 'BUKRS' AND
       T_SELECT-FLDNAME <> 'GJAHR'.
      CONCATENATE '                TOUT-' T_SELECT-FLDNAME
                  INTO CONCAT.
      PERFORM C1 USING CONCAT.
    ENDIF.
  ENDLOOP.

  PERFORM C1 USING '                TOUT-XDMBTR'.
  PERFORM C1 USING '                TOUT-XWRBTR'.
  PERFORM C1 USING '                TOUT-XDIFF'.
  PERFORM C1 USING '                TOUT-XKOART'.
  PERFORM C1 USING '                TOUT-XBUZEI'.
  PERFORM C1 USING '                INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.

* GENERATE: PERFORM TRANS
* =======================
  PERFORM C1 USING '    PERFORM TRANS.'.
  PERFORM C1 USING ''.

* GENERATE: SELECT: ENDSELECT
* ===========================
  PERFORM C1 USING ' ENDSELECT.'.
  PERFORM C1 USING ''.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENA2.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.

* GOING FOR NEXT STEPWISE SELECT
* ==============================
  PERFORM C1 USING '  ENDLOOP.'.

* GENERATE: END
* =============
  PERFORM C1 USING ' PERFORM FILECLOS USING FILENA4.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING ' COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING ' PERFORM WRITECODES.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING ' EXPORT NEWTRANSBYT2 TO MEMORY ID ''ACEByt2''.'.
  PERFORM C1 USING ' EXPORT NEWTRANSRE2  TO MEMORY ID ''ACERe2''.'.
  PERFORM C1 USING ' EXPORT NEWTRANSBYT3 TO MEMORY ID ''ACEByt3''.'.
  PERFORM C1 USING ' EXPORT NEWTRANSRE3  TO MEMORY ID ''ACERe3''.'.
  PERFORM C1 USING ' EXPORT NEWFILELIST  TO MEMORY ID ''ACEFList''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENPSTFORM

*---------------------------------------------------------------------*
*      Form  EXPEXT                                                   *
*---------------------------------------------------------------------*
FORM EXPEXT.
  DATA: EXFLAG(1) TYPE C.
  DATA: WA_SELECT LIKE LINE OF T_SELECT.

  PERFORM EXTPOPULATE.

  LOOP AT T_SELECT INTO WA_SELECT.
    AT NEW TABNAME.
      PERFORM CHECKTABEXISTS USING WA_SELECT-TABNAME CHANGING EXFLAG.
      CHECK EXFLAG = 'X'.

      PERFORM ADDBSET USING 'Y' '' 'V' WA_SELECT-TABNAME.
      PERFORM ADDB2 USING 'Y' ''.

      CONCATENATE WA_SELECT-TABNAME ': extended'
                  INTO CONCATU.
      CONCATENATE '(' FILENUM ')'
                  INTO CONCATU2.
      CONCATENATE CONCATU CONCATU2
                  INTO CONCAT
                  SEPARATED BY SPACE.
      MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH CONCAT.

      PERFORM GENCONSTSTART USING 'V'.
      PERFORM GENEXTSHARED.
      PERFORM GENCONSTFORM.
      PERFORM GENEXTFORM USING WA_SELECT-TABNAME.
      PERFORM GENABAP.

      PERFORM EXTFILLSELOPT USING WA_SELECT-TABNAME.

      EXPORT SEL01 SEL02 SEL03 SEL04 SEL05
             SEL06 SEL07 SEL08 SEL09 SEL10
             SEL11 SEL12 SEL13 SEL14 SEL15
             TO MEMORY ID 'ACEWhere'.

      PERFORM SUBMITTEMP USING 'Y' 'GENEXTFORM'
                               'V' WA_SELECT-TABNAME ''.
    ENDAT.

  ENDLOOP.

ENDFORM.                    " EXPEXT

*---------------------------------------------------------------------*
*      Form  GENEXTSHARED                                              *
*---------------------------------------------------------------------*
FORM GENEXTSHARED.
ENDFORM.                    " GENEXTSHARED

*---------------------------------------------------------------------*
*      Form  GENEXTFORM                                              *
*---------------------------------------------------------------------*
FORM GENEXTFORM USING TABNAME.

  DATA: ZFIELD LIKE DD03L-FIELDNAME.

  DATA: LENG(10)  TYPE N.
  DATA: WHRCNT(2) TYPE N.
  DATA: ANDPART(3) TYPE C.

* Considering the first field of the Table
  SELECT FIELDNAME
    FROM DD03L
    INTO ZFIELD
   UP TO 1 ROWS
   WHERE TABNAME = TABNAME
     AND ( FIELDNAME <> 'MANDT' AND FIELDNAME <> 'MANDANT' )
     AND AS4LOCAL = 'A'
     AND ( POSITION = '0001' OR POSITION = '0002' )
     AND KEYFLAG  = 'X'.
  ENDSELECT.

  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.

* GENERATE: DATA DECLARATION
* ==========================
  PERFORM C1 USING ''.

  IF ZFIELD = 'BUKRS'.
    PERFORM C1 USING '  DATA: BEGIN OF wbukrs,'.
    PERFORM C1 USING '          bukrs TYPE t001-bukrs,'.
    PERFORM C1 USING '        END OF wbukrs,'.
    PERFORM C1 USING '        ibukrs LIKE TABLE OF wbukrs.'.
    PERFORM C1 USING '  FIELD-SYMBOLS <zbukrs> LIKE LINE OF ibukrs.'.
  ELSEIF ZFIELD = 'OBJECTCLAS'.
    PERFORM C1 USING '  DATA: BEGIN OF wobject,'.
    PERFORM C1 USING '          object TYPE tcdob-object,'.
    PERFORM C1 USING '        END OF wobject,'.
    PERFORM C1 USING '        iobject LIKE TABLE OF wobject.'.
    PERFORM C1 USING '  FIELD-SYMBOLS <zobject> LIKE LINE OF iobject.'.
  ENDIF.

  PERFORM C1 USING ''.
  PERFORM C3 USING '  TABLES:' TABNAME '.'.
  PERFORM C1 USING ''.

* For WHERE condition.These internal tables will be passed to
* ZACE8M for dynamic WHERE condition,in case of Transactional data.
  PERFORM C1 USING '  DATA: SEL01 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL02 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL03 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL04 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL05 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL06 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL07 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL08 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL09 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL10 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL11 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL12 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL13 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL14 TYPE TABLE OF SELOPTTAB,'.
  PERFORM C1 USING '        SEL15 TYPE TABLE OF SELOPTTAB.'.
  PERFORM C1 USING ''.

* Build TOUT(All fields are TYPE C) structure definition.
  PERFORM C1 USING '  DATA: BEGIN OF TOUT'.
  LOOP AT T_SELECT WHERE TABNAME = TABNAME.
    SELECT  SINGLE DATATYPE
                   FIELDNAME
                   LENG
                   POSITION
                   DECIMALS
       INTO (WDD03L-DATATYPE
            ,WDD03L-FIELDNAME
            ,WDD03L-LENG
            ,WDD03L-POSITION
            ,WDD03L-DECIMALS
            )
       FROM DD03L
      WHERE TABNAME  = T_SELECT-TABNAME
        AND FIELDNAME = T_SELECT-FLDNAME
        AND AS4LOCAL = 'A'.

    IF WDD03L-FIELDNAME+0(1) <> '.'.
      IF WDD03L-DATATYPE = 'RAW'.
        LENG = WDD03L-LENG * 4.
      ELSEIF WDD03L-DATATYPE = 'DEC' OR  WDD03L-DATATYPE = 'CURR'.
        LENG = WDD03L-LENG + WDD03L-DECIMALS + 5.
      ELSE.
        LENG = WDD03L-LENG.
      ENDIF.

      IF LENG > 255.
        LENG = 255.
      ENDIF.

      CONCATENATE WDD03L-FIELDNAME '(' LENG ')'
                  INTO CONCATU2.
      CONDENSE CONCATU2 NO-GAPS.
      PERFORM C3 USING '        ,' CONCATU2 'type c'.
    ENDIF.

    PERFORM ADDB3 USING WDD03L-FIELDNAME
                0
                TABNAME
                ''
                ''
                ''
                ''
                ''
                ''.
  ENDLOOP.

  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF TOUT.'.
  PERFORM C1 USING ''.

* Build ITAB(All fields are as per the Dictionary def.) structure
* definition.
  PERFORM C1 USING '  DATA: BEGIN OF wseltab'.

  LOOP AT T_SELECT WHERE TABNAME = TABNAME.
    CONCATENATE T_SELECT-TABNAME '-' T_SELECT-FLDNAME
                INTO CONCATU2.
    PERFORM C4 USING '        ,'  T_SELECT-FLDNAME 'LIKE' CONCATU2.
  ENDLOOP.

  PERFORM C1 USING '        ,'.
  PERFORM C1 USING '        END OF wseltab,'.
  PERFORM C1 USING '        iseltab LIKE TABLE OF wseltab.'.
  PERFORM C1 USING '  FIELD-SYMBOLS <zseltab> LIKE LINE OF iseltab.'.
  PERFORM C1 USING ''.

* GENERATE: FILE INITIALIZING
* ===========================
  PERFORM C1 USING '  PERFORM GETFILENAME.'.
  PERFORM C1 USING '  PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '  PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.

* GENERATE: EXIT ON PARFLAG
* =========================
  PERFORM C1 USING '  IF parflag <> ''Y''.'.
  PERFORM C1 USING '    EXIT.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.

* Import FROM  MEMORY
* ==================
  PERFORM C1 USING '  IMPORT  SEL01 SEL02 SEL03'.
  PERFORM C1 USING '          SEL04 SEL05 SEL06 SEL07'.
  PERFORM C1 USING '          SEL08 SEL09 SEL10 SEL11'.
  PERFORM C1 USING '          SEL12 SEL13 SEL14 SEL15'.
  PERFORM C1 USING '          FROM MEMORY ID ''ACEWhere''.'.
  PERFORM C1 USING ''.

* Stepwise SELECT
* ===============
  IF ZFIELD = 'BUKRS'.
    PERFORM C1 USING ' SELECT        BUKRS'.
    PERFORM C1 USING '          INTO table'.
    PERFORM C1 USING '               ibukrs'.
    PERFORM C1 USING '          FROM T001.'.
    PERFORM C1 USING ''.
    PERFORM C1 USING '  LOOP AT ibukrs ASSIGNING <zbukrs>.'.
  ELSEIF ZFIELD = 'OBJECTCLAS'.
    PERFORM C1 USING ' SELECT        OBJECT'.
    PERFORM C1 USING '          INTO table'.
    PERFORM C1 USING '               iobject'.
    PERFORM C1 USING '          FROM TCDOB.'.
    PERFORM C1 USING ' SORT iobject by object.'.
    PERFORM C1 USING ' DELETE ADJACENT DUPLICATES'.
    PERFORM C1 USING '            FROM iobject.'.
    PERFORM C1 USING '  LOOP AT iobject ASSIGNING <zobject>.'.
  ENDIF.

* GENERATE: FILE OPEN
* ===================
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENAM ''APPENDING''.'.
  PERFORM C1 USING ''.

* GENERATE: SELECT
* ================
  PERFORM C1 USING '        SELECT'.

  LOOP AT T_SELECT WHERE TABNAME = TABNAME.
    PERFORM C2 USING '          ' T_SELECT-FLDNAME.
  ENDLOOP.

* GENERATE: INTO
* ==============
  PERFORM C1 USING '          INTO TABLE'.
  PERFORM C1 USING '               iseltab'.
  PERFORM C1 USING '          PACKAGE SIZE 1000'.

* GENERATE: FROM
* ==============
  PERFORM C2 USING '        FROM' TABNAME.

* GENERATE: WHERE
* ===============
  IF ZFIELD = 'BUKRS'.
    PERFORM C1 USING '        WHERE '.
    PERFORM C3 USING '              ' ZFIELD
                     '= <zbukrs>-BUKRS'.
    ANDPART = 'AND'.
  ELSEIF ZFIELD = 'OBJECTCLAS'.
    PERFORM C1 USING '        WHERE '.
    PERFORM C3 USING '              ' ZFIELD
                     '= <zobject>-object'.
    ANDPART = 'AND'.
  ELSE.
    DESCRIBE TABLE T_WHERE LINES WHRCNT.
    IF WHRCNT > 0.
      PERFORM C1 USING '        WHERE '.
    ENDIF.
    ANDPART = '   '.
  ENDIF.

* GENERATE: WHERE(SELECT-OPTIONS)
* ===============================
  WHRCNT = 0.
  LOOP AT T_WHERE WHERE TABNAME = TABNAME.
    WHRCNT = WHRCNT + 1.

    CONCATENATE 'SEL' WHRCNT
                INTO CONCATU2.
    PERFORM C5 USING  '          ' ANDPART T_WHERE-FLDNAME ' IN'
                      CONCATU2.
    ANDPART = 'AND'.
  ENDLOOP.

  PERFORM C1 USING '       .'.

* GENERATE: SUB-LOOP
* ==================
  PERFORM C1 USING '      loop at iseltab assigning <zseltab>.'.

* GENERATE: MOVE
* ==============
  PERFORM C1 USING '          MOVE-CORRESPONDING <zseltab> TO TOUT.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '          REPLACE ALL OCCURRENCES OF TRANSTXT'.
  PERFORM C1 USING '                  IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING '          REPLACE ALL OCCURRENCES OF TRANSSEP'.
  PERFORM C1 USING '                  IN TOUT WITH REPLCHAR.'.
  PERFORM C1 USING ''.

* GENERATE: CONCATENATE
* =====================
  PERFORM C1 USING '          CONCATENATE '.

  LOOP AT T_SELECT WHERE TABNAME = TABNAME.
    PERFORM D2 USING '          TOUT-' T_SELECT-FLDNAME.
  ENDLOOP.

  PERFORM C1 USING '          INTO TREC SEPARATED BY TRANSSEP.'.
  PERFORM C1 USING ''.

* GENERATE: PERFORM TRANS
* =======================
  PERFORM C1 USING '         PERFORM TRANS.'.
  PERFORM C1 USING ''.

* GENERATE: END SUB-LOOP
* ======================
  PERFORM C1 USING '      ENDLOOP.'.

* GENERATE: SELECT: ENDSELECT
* ===========================
  PERFORM C1 USING '    ENDSELECT.'.
  PERFORM C1 USING ''.

* GENERATE: CLOSE & COMMIT
* ========================
  PERFORM C1 USING '    PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    COMMIT WORK AND WAIT.'.
  PERFORM C1 USING ''.

* END LOOP
* ========
  IF ZFIELD = 'BUKRS'.
    PERFORM C1 USING '  ENDLOOP.'.
  ELSEIF ZFIELD = 'OBJECTCLAS'.
    PERFORM C1 USING '  ENDLOOP.'.
  ENDIF.

* GENERATE: END
* =============
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    " GENEXTFORM

*---------------------------------------------------------------------*
*      Form  EXTFILLSELOPT                                            *
*---------------------------------------------------------------------*
FORM EXTFILLSELOPT USING TABNAME.
  REFRESH : SEL01,SEL02,SEL03,SEL04,SEL05,
            SEL06,SEL07,SEL08,SEL09,SEL10,
            SEL11,SEL12,SEL13,SEL14,SEL15.

  CASE TABNAME.

    WHEN 'ANLA'.
      SEL01[] = SBUKRS1[].
      SEL02[] = SANLKL1[].
      SEL03[] = SXLOEV1[].

    WHEN 'ANLB'.
      SEL01[] = SBUKRS2[].
      SEL02[] = SAFABE2[].

    WHEN 'ANLC'.
      SEL01[] = SBUKRS3[].
      SEL02[] = SGJAHR3[].
      SEL03[] = SAFABE3[].

    WHEN 'BKPF'.
      SEL01[] = SBUKRS4[].
      SEL02[] = SGJAHR4[].
      SEL03[] = SBLART4[].
      SEL04[] = SBLDAT4[].
      SEL05[] = SBUDAT4[].
      SEL06[] = SMONAT4[].
      SEL07[] = SCPUDT4[].
      SEL08[] = SUSNAM4[].
      SEL09[] = STCODE4[].
      SEL10[] = SGLVOR4[].
      SEL11[] = SSNAME4[].

    WHEN 'BSEG'.
      SEL01[] = SBUKRS5[].
      SEL02[] = SGJAHR5[].

    WHEN 'CDHDR'.
      SEL01[] = SOBJCL6[].
      SEL02[] = SOBJVL6[].
      SEL03[] = SUDATE6[].

    WHEN 'EKKO'.
      SEL01[] = SBSTYP7[].
      SEL02[] = SBSART7[].
      SEL03[] = SAEDAT7[].
      SEL04[] = SERNAM7[].
      SEL05[] = SEKORG7[].
      SEL06[] = SEKGRP7[].
      SEL07[] = SBEDAT7[].

    WHEN 'EKPO'.
      SEL01[] = SEBELN8[].
      SEL02[] = SAEDAT8[].
      SEL03[] = SWERKS8[].

    WHEN 'KNA1'.
      SEL01[] = SKUNNR9[].
      SEL02[] = SKTOKD9[].

    WHEN 'KNB1'.
      SEL01[] = SKUNN10[].
      SEL02[] = SBUKR10[].

    WHEN 'LFA1'.
      SEL01[] = SLIFN11[].
      SEL02[] = SKTOK11[].

    WHEN 'LFB1'.
      SEL01[] = SLIFN12[].
      SEL02[] = SBUKR12[].

    WHEN 'MBEW'.
      SEL01[] = SMATN13[].
      SEL02[] = SBWKE13[].

    WHEN 'MBEWH'.
      SEL01[] = SMATN14[].
      SEL02[] = SBWKE14[].
      SEL03[] = SBWTA14[].
      SEL04[] = SLFGJ14[].
      SEL05[] = SLFMO14[].

    WHEN 'SKA1'.
      SEL01[] = SKTOP15[].

    WHEN 'SKB1'.
      SEL01[] = SBUKR16[].
      SEL02[] = SSAKN16[].

    WHEN 'VBAK'.
      SEL01[] = SERDA17[].
      SEL02[] = SERNA17[].
      SEL03[] = SAUDA17[].
      SEL04[] = SVBTY17[].
      SEL05[] = SAUAR17[].
      SEL06[] = SVKOR17[].
      SEL07[] = SVTWE17[].
      SEL08[] = SKALS17[].

    WHEN 'VBAP'.
      SEL01[] = SVBEL18[].

    WHEN 'RBKP'.
      SEL01[] = GJAHR19[].
      SEL02[] = BLART19[].
      SEL03[] = BUDAT19[].
      SEL04[] = USNAME19[].
      SEL05[] = BUKRS19[].

    WHEN 'RSEG'.
      SEL01[] = GJAHR20[].

    WHEN 'EKBE'.
      SEL01[] = GJAHR21[].
      SEL02[] = BUDAT21[].
      SEL03[] = WERKS21[].

    WHEN 'CDPOS'.
      SEL01[] = OBJECT22[].
      SEL02[] = TABNAM22[].
      SEL03[] = CHNGIN22[].

    WHEN 'MKPF'.
      SEL01[] = MJAHR23[].
      SEL02[] = BLDAT23[].
      SEL03[] = USNAM23[].

    WHEN 'MSEG'.
      SEL01[] = MJAHR24[].
      SEL02[] = BWART24[].

    WHEN 'MARA'.
      SEL01[] = MATNR25[].

    WHEN 'MARC'.
      SEL01[] = MATNR26[].
      SEL02[] = WERKS26[].
      SEL03[] = PSTAT26[].

    WHEN 'MARM'.

    WHEN 'MVKE'.
      SEL01[] = MATNR28[].
      SEL02[] = VKORG28[].
      SEL03[] = VTWEG28[].

    WHEN 'LFM1'.
      SEL01[] = EKORG29[].
      SEL02[] = ERDAT29[].

    WHEN 'KNVV'.
      SEL01[] = KUNNR30[].
      SEL02[] = VKORG30[].
      SEL03[] = VTWEG30[].
      SEL04[] = SPART30[].

    WHEN 'KNKK'.
      SEL01[] = KUNNR31[].
      SEL02[] = KKBER31[].

    WHEN 'VBRK'.
      SEL01[] = VBELN32[].

  ENDCASE.
ENDFORM.                    "EXTFILLSELOPT

*---------------------------------------------------------------------*
*       FORM EXTPOPULATE                                              *
*---------------------------------------------------------------------*
FORM EXTPOPULATE.
  DATA: TABNAME TYPE DD03L-TABNAME.

  REFRESH : T_SELECT,
            T_WHERE.

  TABNAME = 'ANLA'.
* ================

  IF P_ANLA1 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLKL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XLOEV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XSPEB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTOGR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XOPVW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUJHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUPER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUGDT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AKTIV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ABGDT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DEAKT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GPLAB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'URJHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'URWRT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TYPBZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XVRMW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WRTMA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EHWRT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFLA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TXT50'.

    IF P_ADTNL1 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'GEGST'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'ANLKL'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'XLOEV'.
  ENDIF.


  TABNAME = 'ANLB'.
* ================

  IF P_ANLB2 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFABE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BDATU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ADATU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XLOEV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XSPEB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XNEGA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XUNTA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFABG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZINBG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAFBG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFASL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NDJAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NDPER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAPRZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAPRZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'APROP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UMJAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NDURJ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NDURP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SCHRW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFWTG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLGR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLGR2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VYEAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ABGDAT_B'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'J_1AARVKEY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'J_1AALTDAT'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'AFABE'.
  ENDIF.

  TABNAME = 'ANLC'.
* ================

  IF P_ANLC3 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFABE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFBLPE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFBANZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XAFAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NDABJ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NDABP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KANSW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KAUFW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KINVZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNAFA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KSAFA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KAAFA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KMAFA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KZINW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KAUFN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KANZA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KVOST'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFWP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAFAP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAFAP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AAFAP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAFAP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZINSP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFNP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFWB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAFAG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAFAG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AAFAG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAFAG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZINSG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFNG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ABGAN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANSAZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFWM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INVZM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAFAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAFAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AAFAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAFAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZINSM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFNM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUSNA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUSSA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUSAA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZUSMA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFWV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INVZV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAFAV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAFAV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AAFAV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAFAV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFNV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFWL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INVZL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAFAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAFAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AAFAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAFAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFNL'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'AFABE'.
  ENDIF.

  TABNAME = 'BKPF'.
* ================

  IF P_BKPF4 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BELNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BLART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BLDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MONAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPUDT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WWERT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'USNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TCODE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KURSF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BSTAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GLVOR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GRPID'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AWTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'HWAER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PPNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XREVERSAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SNAME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPUTM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AWKEY'.

    IF P_BKTXT4 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'BKTXT'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BLART'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BLDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'MONAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'CPUDT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'USNAM'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'TCODE'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'GLVOR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'SNAME'.
  ENDIF.

  TABNAME = 'BSEG'.
* ================

  IF P_BSEG5 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BELNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUZEI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BSCHL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KOART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SHKZG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GSBER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DMBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WRBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PSWBT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAKNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'HKONT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XNEGP'.

    IF P_QUAN5 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'MENGE'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'MEINS'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'BPMNG'.
    ENDIF.

    IF P_CLR5 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'AUGDT'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'AUGCP'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'AUGBL'.
    ENDIF.

    IF P_TEXT5 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'SGTXT'.
    ENDIF.

    IF P_ACCS5 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KOKRS'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KOSTL'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'AUFNR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'PRCTR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'FIPOS'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KSTRG'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'PROJK'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'PAOBJNR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'PASUBNR'.
    ENDIF.

    IF P_SDOC5 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VBELN'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VBEL2'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'POSN2'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ETEN2'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN1'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ANLN2'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ANBWA'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'REBZG'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'REBZJ'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'REBZZ'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'REBZT'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'EBELN'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'EBELP'.
    ENDIF.

    IF P_PAY5 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ZFBDT'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ZTERM'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ZLSCH'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ZLSPR'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'GJAHR'.
  ENDIF.

  TABNAME = 'CDHDR'.
* =================

  IF P_CDHDR6 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'OBJECTCLAS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'OBJECTID'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CHANGENR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'USERNAME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UDATE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UTIME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TCODE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CHANGE_IND'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'OBJECTCLAS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'OBJECTID'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'UDATE'.
  ENDIF.

  TABNAME = 'EKKO'.
* ================

  IF P_EKKO7 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BSTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BSART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LOEKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AEDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZTERM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EKORG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EKGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WKURS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEMORY'.

    IF P_REL7 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'FRGGR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'FRGSX'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'FRGKE'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'FRGZU'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'FRGRL'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BSTYP'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BSART'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'AEDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'EKORG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'EKGRP'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BEDAT'.
  ENDIF.

  TABNAME = 'EKPO'.
* ================

  IF P_EKPO8 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LOEKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AEDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EMATN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WERKS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LGORT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATKL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTMNG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MENGE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEINS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BPRME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NETPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PEINH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NETWR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BRTWR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MWSKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INSMK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEBTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEBTK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UNTTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTTY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PSTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNTTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WEPOS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WEUNB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'REPOS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WEBRE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XERSY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MTART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AFNAM'.

    IF P_TEXT8 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'TXZ01'.
    ENDIF.

    IF P_SOURC8 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KONNR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KTPNR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ANFNR'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ANFPS'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'USEQU'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'BANFN'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'BNFPO'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'EBELN'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'AEDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'WERKS'.
  ENDIF.

  TABNAME = 'KNA1'.
* ================

  IF P_KNA19 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LAND1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAME1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAME2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ORT01'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XCPDK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFSD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FAKSD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNRZA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTOKD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUKLA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFSD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'STCEG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XKNZA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CASSD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NODEL'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'KTOKD'.
  ENDIF.

  TABNAME = 'KNB1'.
* ================

  IF P_KNB110 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PERNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LOEVM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AKONT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNRZB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZAHLS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZTERM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TOGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NODEL'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
  ENDIF.

  TABNAME = 'LFA1'.
* ================

  IF P_LFA111 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LAND1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAME1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NAME2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ORT01'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ORT02'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LNRZA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LOEVM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'STKZU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XCPDK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XZEMP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XLFZA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NODEL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PODKZB'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'KTOKK'.
  ENDIF.

  TABNAME = 'LFB1'.
* ================

  IF P_LFB112 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PERNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LOEVM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AKONT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZAHLS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZTERM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LNRZB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TOGRR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XLFZB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NODEL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'REPRF'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
  ENDIF.

  TABNAME = 'MBEW'.
* ================

  IF P_MBEW13 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWKEY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LVORM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LBKUM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SALK3'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VPRSV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VERPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'STPRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PEINH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BKLAS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SALKV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMKUM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMSAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMVPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMVER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMSTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMPEI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMBKL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VMSAV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJKUM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJSAL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJVPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJVER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJSTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJPEI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJBKL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VJSAV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LFGJA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LFMON'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTTY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'STPRV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LAEPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WLINL'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BWKEY'.
  ENDIF.

  TABNAME = 'MBEWH'.
* =================

  IF P_MBEW14 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWKEY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LFGJA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LFMON'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LBKUM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SALK3'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VPRSV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VERPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'STPRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PEINH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BKLAS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SALKV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKSAL'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BWKEY'.
  ENDIF.

  TABNAME = 'SKA1'.
* ================

  IF P_SKA15 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTOPL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAKNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XBILK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BILKT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GVTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTOKS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XLOEV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XSPEA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XSPEB'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'KTOPL'.
  ENDIF.

  TABNAME = 'SKB1'.
* ================

  IF P_SKB16 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAKNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MITKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MWSKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XGKON'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XINTB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XLOEB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XNKON'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XOPVW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XSPEB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XMWNO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XSALH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TOGRU'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'SAKNR'.
  ENDIF.

  TABNAME = 'VBAK'.
* ================

  IF P_VBAK17 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VBTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFSK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FAKSK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NETWR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VTWEG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKBUR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KALSM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KKBER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VGBEL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VGTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'STCEG_L'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LANDTX'.

    IF P_REF17 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'BSTNK'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'BSTZD'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'IHREZ'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'AUDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VBTYP'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'AUART'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VTWEG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'KALSM'.
  ENDIF.

  TABNAME = 'VBAP'.
* ================

  IF P_VBAP18 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'POSNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATWA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PMATN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATKL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PSTYV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'POSAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LFREL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FKREL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PRODH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEINS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEBTK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEBTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UNTTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FAKSP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VRKME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NETPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KONDM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTGRM'.

    IF P_TXT18 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'ARKTX'.
    ENDIF.

    IF P_SLDO18 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VBELV'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'POSNV'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VGBEL'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VGPOS'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VOREF'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'VGREF'.
    ENDIF.

    IF P_PDAT18 = 'X'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KZWI1'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KZWI2'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KZWI3'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KZWI4'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KZWI5'.
      PERFORM DYNAPPENDSELECT USING TABNAME 'KZWI6'.
    ENDIF.

    PERFORM DYNAPPENDWHERE USING TABNAME 'VBELN'.
  ENDIF.

  TABNAME = 'RBKP'.
* ================

  IF P_RBKP19 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BELNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BLART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'USNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TCODE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPUDT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPUTM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VGART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XBLNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KURSF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'RMWWR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEZNK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZFBDT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MWSKZ1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'IVTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'RBSTAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZTERM'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BLART'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'USNAM'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BUKRS'.
  ENDIF.

  TABNAME = 'RSEG'.
* ================

  IF P_RSEG20 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BELNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUZEI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWKEY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WERKS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WRBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SHKZG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MENGE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BSTME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BPMNG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BPRME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PSTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNTTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPGRM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPGRT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPGRQ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPGRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MRMOK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WEREC'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'GJAHR'.
  ENDIF.

  TABNAME = 'EKBE'.
* ================

  IF P_EKBE21 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EBELP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZEKKN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VGABE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BELNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUZEI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEWTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MENGE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BPMNG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DMBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WRBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AREWR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XWSBR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SHKZG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ELIKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WERKS'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'WERKS'.
  ENDIF.

  TABNAME = 'CDPOS'.
* ================

  IF P_CDPO22 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'OBJECTCLAS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'OBJECTID'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CHANGENR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TABNAME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TABKEY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FNAME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CHNGIND'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TEXT_CASE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VALUE_NEW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VALUE_OLD'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'OBJECTCLAS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'TABNAME'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'CHNGIND'.
  ENDIF.

  TABNAME = 'MKPF'.
* ================

  IF P_MKPF23 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MBLNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VGART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BLART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BLAUM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BLDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPUDT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPUTM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AEDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'USNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TCODE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XBLNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BKTXT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FRATH'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MJAHR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BLDAT'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'USNAM'.
  ENDIF.

  TABNAME = 'MSEG'.
* ================

  IF P_MSEG24 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MBLNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZEILE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XAUTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WERKS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LGORT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CHARG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INSMK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SOBKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KDAUF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SHKZG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DMBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BNBTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUALT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTAR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MENGE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEINS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERFMG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERFME'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MJAHR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'BWART'.
  ENDIF.

  TABNAME = 'MARA'.
* ================

  IF P_MARA25 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERSDA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LAEDA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AENAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VPSTA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MTART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATKL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEINS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MSTDV'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MATNR'.
  ENDIF.

  TABNAME = 'MARC'.
* ================

  IF P_MARC26 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WERKS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PSTAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LVORM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BWTTY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MMSTA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MMSTD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAABC'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EKGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUSME'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DISPR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DISMM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DISPO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KZDIE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WEBAZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PERKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BESKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ALTSL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PFREI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FFREI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'RGEKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FEVOR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEETO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEETK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UNETO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KAUTB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KORDB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MTVER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PRCTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DISGR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'COPAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ABCIN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AWSLS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XMCNG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CCFIX'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INDUS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATGR'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'WERKS'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'PSTAT'.
  ENDIF.

  TABNAME = 'MARM'.
* ================

  IF P_MARM27 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ATINN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BFLME_MARM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BREIT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BRGEW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CAPAUSE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EAN11'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EANNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GEWEI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GTIN_VARIANT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'HOEHE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KZWSO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LAENG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MAX_STACK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEABM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MEINH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MESRT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MESUB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MSEHI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NEST_FTR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'NUMTP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'TY2TQ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UMREN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UMREZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VOLEH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VOLUM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XBEWW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XFHDW'.

  ENDIF.

  TABNAME = 'MVKE'.
* ================

  IF P_MVKE28 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VTWEG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KONDM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTGRM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BONUS'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'MATNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VTWEG'.
  ENDIF.

  TABNAME = 'LFM1'.
* ================

  IF P_LFM129 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LIFNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EKORG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPERM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LOEVM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LFABC'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MINBW'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZTERM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INCO1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INCO2'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WEBRE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KZAUT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'EKGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XERSY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PRFRE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'RDPRF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XERSR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LEBRE'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'EKORG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'ERDAT'.
  ENDIF.

  TABNAME = 'KNVV'.
* ================

  IF P_KNVV30 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VTWEG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SPART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BEGRU'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VERSG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUFSD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KALKS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KDGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BZIRK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KONDA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PLTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AUTLF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ANTLF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KZTLF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VSBED'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VWERK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKBUR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'PRFRE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KKBER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CASSD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEBTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UNTTO'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEBTK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BOKRE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INCO1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'INCO2'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'VTWEG'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'SPART'.
  ENDIF.

  TABNAME = 'KNKK'.
* ================

  IF P_KNKK31 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KKBER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KLIMK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNKLI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SAUFT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SKFOR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SSOBL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'UEDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'XCHNG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CTLPC'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DTREV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CRBLB'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GRUPP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'AENAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'SBDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KDGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CASHD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CASHA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CASHC'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DBPAY'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DBRTG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DBEKR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DBWAE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'DBMON'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ABSBT'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'KUNNR'.
    PERFORM DYNAPPENDWHERE USING TABNAME 'KKBER'.
  ENDIF.

  TABNAME = 'VBRK'.
* ================

  IF P_VBRK32 = 'X'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VBELN'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FKART'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FKTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VBTYP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'WAERK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VKORG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VTWEG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KALSM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNUMV'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'VSBED'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FKDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BELNR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'GJAHR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'POPER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KONDA'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KDGRP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'RFBSK'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MRNKZ'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KURRF'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CPKUR'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ZLSCH'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KTGRD'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'LAND1'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'BUKRS'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERNAM'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERZET'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'ERDAT'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KUNAG'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MABER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'MANSP'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KKBER'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'KNKLI'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'CMWAE'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FKART_RL'.
    PERFORM DYNAPPENDSELECT USING TABNAME 'FKDAT_RL'.

    PERFORM DYNAPPENDWHERE USING TABNAME 'VBELN'.
  ENDIF.

ENDFORM.                    "EXTPOPULATE

*######################################################################
*######################################################################
*##                                                                  ##
*##     SUB PROCEDURES                                               ##
*##                                                                  ##
*######################################################################
*######################################################################
*---------------------------------------------------------------------*
*      Form  SUBMITTEMP                                               *
*---------------------------------------------------------------------*
FORM SUBMITTEMP USING TPARFLAG LOCATION FTYPE TABNAME TABBEZ.
  DATA: NEWTRANSREC(10) TYPE N
       ,NEWTRANSBYTE(10) TYPE N
       ,NEWTRANSRE2(10) TYPE N
       ,NEWTRANSBYT2(10) TYPE N
       ,NEWTRANSRE3(10) TYPE N
       ,NEWTRANSBYT3(10) TYPE N
       ,NEWTRANSRE4(10) TYPE N
       ,NEWTRANSBYT4(10) TYPE N
       ,NEWFILENUM(4) TYPE N
       ,NEWFILELIST(8000) TYPE C
       ,CURFILENUM(4) TYPE N
       ,LISTPOS TYPE I.

  PERFORM SAVEABAP.

  NEWTRANSBYTE = 0.
  NEWTRANSREC = 0.
  NEWFILENUM = FILENUM.

  EXPORT NEWTRANSBYTE TO MEMORY ID 'ACEByte'.
  EXPORT NEWTRANSREC TO MEMORY ID 'ACERec'.
  EXPORT NEWFILENUM TO MEMORY ID 'ACEFNum'.

  IF LOCATION = 'POSTING'.
    NEWTRANSBYT2 = 0.
    NEWTRANSRE2 = 0.
    NEWTRANSBYT3 = 0.
    NEWTRANSRE3 = 0.
    NEWTRANSBYT4 = 0.
    NEWTRANSRE4 = 0.
    NEWFILELIST = ''.
    EXPORT NEWTRANSBYT2 TO MEMORY ID 'ACEByt2'.
    EXPORT NEWTRANSRE2 TO MEMORY ID 'ACERe2'.
    EXPORT NEWTRANSBYT3 TO MEMORY ID 'ACEByt3'.
    EXPORT NEWTRANSRE3 TO MEMORY ID 'ACERe3'.
    EXPORT NEWTRANSBYT4 TO MEMORY ID 'ACEByt4'.
    EXPORT NEWTRANSRE4 TO MEMORY ID 'ACERe4'.
    EXPORT NEWFILELIST TO MEMORY ID 'ACEFList'.
  ENDIF.

  PERFORM EXECCOMMIT USING LOCATION 'A' TABNAME.

  SUBMIT (SUBREPID) WITH SP = 'S'
                    WITH PARFLAG =  TPARFLAG
                    AND RETURN.

  PERFORM EXECCOMMIT USING LOCATION 'B' TABNAME.

  IMPORT NEWTRANSREC FROM MEMORY ID 'ACERec'.
  IMPORT NEWTRANSBYTE FROM MEMORY ID 'ACEByte'.
  IMPORT NEWFILENUM FROM MEMORY ID 'ACEFNum'.

  IF LOCATION = 'POSTING'.
    IMPORT NEWTRANSRE2 FROM MEMORY ID 'ACERe2'.
    IMPORT NEWTRANSBYT2 FROM MEMORY ID 'ACEByt2'.
    IMPORT NEWTRANSRE3 FROM MEMORY ID 'ACERe3'.
    IMPORT NEWTRANSBYT3 FROM MEMORY ID 'ACEByt3'.
    IMPORT NEWTRANSRE4 FROM MEMORY ID 'ACERe4'.
    IMPORT NEWTRANSBYT4 FROM MEMORY ID 'ACEByt4'.
    IMPORT NEWFILELIST FROM MEMORY ID 'ACEFList'.
  ENDIF.

  CASE LOCATION.
    WHEN 'EXPDYNAMIC'.
      PERFORM ADDBSET USING 'N' FILENUM FTYPE TABNAME.

      CURFILENUM = FILENUM.

      WHILE CURFILENUM < NEWFILENUM.
        PERFORM ADDB2 USING 'Y' ''.

        PERFORM ADDBSET USING 'Y' '' FTYPE TABNAME.

        CURFILENUM = CURFILENUM + 1.
      ENDWHILE.

      IF TPARFLAG = 'N'.
        PERFORM ADDB2 USING 'N' ''.
      ELSE.
        PERFORM ADDB2 USING 'Y' ''.
      ENDIF.

    WHEN 'POSTING'.
      PERFORM ADDBSET USING 'Y' '' FTYPE 'ACEBSEG'.
      PERFORM ADDB2 USING 'Y' 'Int. table Posting Detail'.
      LOOP AT T_SELECT WHERE TABNAME = 'BSEG'.
        IF T_SELECT-FLDNAME = 'BUKRS'.
          PERFORM ADDB3 USING 'BJAHR'
                      8
                      'BSEG'
                      'BJAHR'
                      ''
                      'X'
                      'Company Code @ Fiscal Year'
                      'CoCd@Yr'
                      ''.
        ELSEIF T_SELECT-FLDNAME <> 'GJAHR'.
          PERFORM ADDB3 USING T_SELECT-FLDNAME
                      0
                      'BSEG'
                      ''
                      ''
                      ''
                      ''
                      ''
                      ''.
        ENDIF.
      ENDLOOP.

      LISTPOS = 2.
      WHILE LISTPOS < STRLEN( NEWFILELIST ).
        IF NEWFILELIST+LISTPOS(1) = 'S'.
          PERFORM ADDBSET USING 'Y' '' FTYPE 'ACEBKPF'.
          PERFORM ADDB2 USING 'Y' 'Int. table Posting Header'.
        ELSE.
          PERFORM ADDBSET USING 'Y' '' FTYPE 'ACEBSEG'.
          PERFORM ADDB2 USING 'Y' 'Int. table Posting Detail'.
        ENDIF.

        LISTPOS = LISTPOS + 1.
      ENDWHILE.

      ADDBTAB ='ACEBKPF'.
      PERFORM MODB2 USING NEWTRANSBYTE NEWTRANSREC.
      ADDBTAB ='ACEBSEG'.
      PERFORM MODB2 USING NEWTRANSBYT2 NEWTRANSRE2.

      PERFORM ADDBSET USING 'Y' '' FTYPE 'ACEPOSCODES'.

      PERFORM ADDB2 USING 'Y' 'Int. table Posting Codes'.

      PERFORM ADDB3 USING 'CTYPE' 6 '' '' '' '' 'Code Type'
                                                'Code Type' ''.
      PERFORM ADDB3 USING 'CVAL' 16 '' '' '' '' 'Code Value'
                                               'Code Value' ''.
      PERFORM ADDB3 USING 'CID' 60 '' '' '' '' 'Code ID'
                                               'Code ID' ''.

      ADDBTAB ='ACEPOSCODES'.
      PERFORM MODB2 USING NEWTRANSBYT3 NEWTRANSRE3.

      ADDBTAB ='ACEBELNR'.
      PERFORM MODB2 USING NEWTRANSBYT4 NEWTRANSRE4.

    WHEN OTHERS.
      CURFILENUM = FILENUM.

      WHILE CURFILENUM < NEWFILENUM.
        PERFORM ADDBSET USING 'Y' '' FTYPE TABNAME.

        PERFORM ADDB2 USING 'Y' TABBEZ.

        CURFILENUM = CURFILENUM + 1.
      ENDWHILE.

  ENDCASE.

  PERFORM MODB2 USING NEWTRANSBYTE NEWTRANSREC.
ENDFORM.                    "SUBMITTEMP

FORM SAVEABAP.
  DATA FILENAM(400) TYPE C.

  CONCATENATE PATH 'ACET.TXT'
              INTO FILENAM.

  OPEN DATASET FILENAM FOR OUTPUT
               IN LEGACY TEXT MODE
               CODE PAGE CDP
               REPLACEMENT CHARACTER REPLCHAR
               IGNORING CONVERSION ERRORS
               MESSAGE MESS.

  IF SY-SUBRC <> 0.
    MOVE SY-SUBRC                               TO TEXT.
    CONCATENATE 'File-Open-Error:' FILENAM TEXT MESS
                INTO ZEILE SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
    EXIT.
  ENDIF.

  LOOP AT CODE ASSIGNING <ZCODE>.
    TRANSFER <ZCODE> TO FILENAM.
  ENDLOOP.

  CLOSE DATASET FILENAM.

  IF SY-SUBRC <> 0.
    MOVE SY-SUBRC                               TO TEXT.
    CONCATENATE 'File-Close-Error:' FILENAM TEXT MESS
                INTO ZEILE SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
    EXIT.
  ENDIF.
ENDFORM.                    "SAVEABAP

*---------------------------------------------------------------------*
*      Form  DYNAPPENDSELECT                                          *
*---------------------------------------------------------------------*
FORM DYNAPPENDSELECT USING TABNAME FLDNAME.
  SELECT  SINGLE DATATYPE
                 FIELDNAME
                 LENG
                 POSITION
           INTO (WDD03L-DATATYPE
                ,WDD03L-FIELDNAME
                ,WDD03L-LENG
                ,WDD03L-POSITION
                )
            FROM DD03L
           WHERE TABNAME   = TABNAME
             AND FIELDNAME = FLDNAME
             AND AS4LOCAL  = 'A'.

  IF SY-SUBRC = 0.
    T_SELECT-TABNAME = TABNAME.
    T_SELECT-FLDNAME = FLDNAME.
    APPEND T_SELECT.
  ENDIF.
ENDFORM.                    "DYNAPPENDSELECT

*---------------------------------------------------------------------*
*      Form  DYNAPPENDWHERE                                          *
*---------------------------------------------------------------------*
FORM DYNAPPENDWHERE USING TABNAME FLDNAME.
  T_WHERE-TABNAME = TABNAME.
  T_WHERE-FLDNAME = FLDNAME.
  APPEND T_WHERE.
ENDFORM.                    "DYNAPPENDWHERE

*---------------------------------------------------------------------*
*       FORM EXECCOMMIT                                               *
*---------------------------------------------------------------------*
FORM EXECCOMMIT USING ACTPROC LOC ADDTEXT.
  DATA: SUBNUM(4) TYPE C.

  COMMIT WORK AND WAIT.

  IF SY-SUBRC <> 0.
    SUBNUM = SY-SUBRC.
    CONCATENATE 'Commit was not possible:  Return'
                SUBNUM
                'in procedure'
                ACTPROC
                'at location'
                LOC
                INTO ZEILE
                SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
  ENDIF.
ENDFORM.                    "EXECCOMMIT

*---------------------------------------------------------------------*
*       FORM OPENFILE                                                 *
*---------------------------------------------------------------------*
FORM OPENFILE USING OPENTYPE.
  DATA FILENAM(400) TYPE C.

  CONCATENATE PATH ADDBTYP ADDBNR FILEEXT
              INTO FILENAM.

  IF OPENTYPE = 'OUTPUT'.
    OPEN DATASET FILENAM FOR OUTPUT
                 IN LEGACY TEXT MODE
                 CODE PAGE CDP
                 REPLACEMENT CHARACTER REPLCHAR
                 IGNORING CONVERSION ERRORS
                 MESSAGE MESS.
  ELSE.
    OPEN DATASET FILENAM FOR APPENDING
                 IN LEGACY TEXT MODE
                 CODE PAGE CDP
                 REPLACEMENT CHARACTER REPLCHAR
                 IGNORING CONVERSION ERRORS
                 MESSAGE MESS.
  ENDIF.

  IF SY-SUBRC <> 0.
    MOVE SY-SUBRC                               TO TEXT.
    CONCATENATE 'File-Open-Error:' FILENAM TEXT MESS
                INTO ZEILE SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
    EXIT.
  ENDIF.
ENDFORM.                    "OPENFILE

*---------------------------------------------------------------------*
*       FORM CLOSEFILE                                                *
*---------------------------------------------------------------------*
FORM CLOSEFILE.
  DATA FILENAM(400) TYPE C.

  CONCATENATE PATH ADDBTYP ADDBNR FILEEXT
              INTO FILENAM.

  CLOSE DATASET FILENAM.

  IF SY-SUBRC <> 0.
    MOVE SY-SUBRC                               TO TEXT.
    CONCATENATE 'File-Close-Error:' FILENAM TEXT MESS
                INTO ZEILE SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
    EXIT.
  ENDIF.
ENDFORM.                    "CLOSEFILE

*---------------------------------------------------------------------*
*       FORM OPENB0003                                                *
*---------------------------------------------------------------------*
FORM OPENB0003 USING OPENTYPE TABNAME.
  DATA: INPUTSTR(12) TYPE C.

  IF OPENTYPE = 'OUTPUT'.
    OPEN DATASET FILEB3 FOR INPUT
                 IN LEGACY TEXT MODE
                 CODE PAGE CDP
                 REPLACEMENT CHARACTER REPLCHAR
                 IGNORING CONVERSION ERRORS
                 MESSAGE MESS.

    IF SY-SUBRC = 0.
      CLOSE DATASET FILEB3.
      MESSAGE ID 'AD' TYPE 'E' NUMBER 10
              WITH 'QJF files exist in the specified directory!'.
      LEAVE PROGRAM.
    ENDIF.

    OPEN DATASET FILEB3 FOR OUTPUT
                 IN LEGACY TEXT MODE
                 CODE PAGE CDP
                 REPLACEMENT CHARACTER REPLCHAR
                 IGNORING CONVERSION ERRORS
                 MESSAGE MESS.
  ELSE.
    OPEN DATASET FILEB3 FOR INPUT
                 IN LEGACY TEXT MODE
                 CODE PAGE CDP
                 REPLACEMENT CHARACTER REPLCHAR
                 IGNORING CONVERSION ERRORS
                 MESSAGE MESS.

    IF SY-SUBRC <> 0.
      CLOSE DATASET FILEB3.
      MESSAGE ID 'AD' TYPE 'E' NUMBER 10
              WITH 'B0003.QJF file does not exist!'.
      LEAVE PROGRAM.
    ENDIF.

    IF TABNAME <> '0004'.
      READ DATASET FILEB3 INTO INPUTSTR MAXIMUM LENGTH 6.

      IF INPUTSTR+2(4) <> '0004'.
        CLOSE DATASET FILEB3.
        MESSAGE ID 'AD' TYPE 'E' NUMBER 10
                WITH 'B0003.QJF file is corrupted!'.
        LEAVE PROGRAM.
      ENDIF.
    ENDIF.

    CLOSE DATASET FILEB3.

    OPEN DATASET FILEB3 FOR APPENDING
                 IN LEGACY TEXT MODE
                 CODE PAGE CDP
                 REPLACEMENT CHARACTER REPLCHAR
                 IGNORING CONVERSION ERRORS
                 MESSAGE MESS.
  ENDIF.

  IF SY-SUBRC <> 0.
    MOVE SY-SUBRC                               TO TEXT.
    CONCATENATE 'File-Open-Error B3:' FILEB3 TEXT MESS
                INTO ZEILE SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
    EXIT.
  ENDIF.
ENDFORM.                                                    "OPENB0003

*---------------------------------------------------------------------*
*       FORM CLOSEB0003                                               *
*---------------------------------------------------------------------*
FORM CLOSEB0003.
  CLOSE DATASET FILEB3.

  IF SY-SUBRC <> 0.
    MOVE SY-SUBRC                               TO TEXT.
    CONCATENATE 'File-Close-Error B3:' FILEB3 TEXT MESS
                INTO ZEILE SEPARATED BY SPACE.
    MESSAGE ID 'AD' TYPE 'S' NUMBER 10 WITH ZEILE.
    EXIT.
  ENDIF.
ENDFORM.                                                    "CLOSEB0003

*---------------------------------------------------------------------*
*       FORM ADDB0007                                                 *
*---------------------------------------------------------------------*
FORM ADDB0007 USING MESS.
  READ TABLE B0007 WITH KEY MESS = MESS.

  IF SY-SUBRC = 0.
    B0007-MESS = MESS.
    B0007-NUM = B0007-NUM + 1.
    MODIFY B0007 INDEX SY-TABIX.
  ELSE.
    CLEAR B0007.
    B0007-MESS = MESS.
    B0007-NUM = 1.
    COLLECT B0007.
  ENDIF.
ENDFORM.                                                    "ADDB0007

*---------------------------------------------------------------------*
*       FORM ADDBSET                                                  *
*---------------------------------------------------------------------*
FORM ADDBSET USING INCR NR TYP TAB.
  IF INCR = 'Y'.
    FILENUM = FILENUM + 1.
    ADDBNR = FILENUM.
  ELSE.
    ADDBNR = NR.
  ENDIF.

  ADDBTYP = TYP.
  ADDBTAB = TAB.
ENDFORM.                    "ADDBSET

*---------------------------------------------------------------------*
*       FORM ADDB2                                                    *
*---------------------------------------------------------------------*
FORM ADDB2 USING FLAG DDTEXT.
  DATA: ZDDTEXT LIKE DD02V-DDTEXT.

  IF DDTEXT = ''.
    SELECT SINGLE DDTEXT
            INTO (ZDDTEXT)
             FROM DD02V
            WHERE TABNAME = ADDBTAB
              AND DDLANGUAGE = SY-LANGU.
  ELSE.
    ZDDTEXT = DDTEXT.
  ENDIF.

  CLEAR B0002.
  B0002-NR = ADDBNR.
  B0002-TYP = ADDBTYP.
  B0002-TAB = ADDBTAB.
  B0002-DDTEXT = ZDDTEXT.
  B0002-FLAG = FLAG.
  B0002-NUMBYTE = 0.
  B0002-NUMREC = 0.
  APPEND B0002.
ENDFORM.                                                    "ADDB2

*---------------------------------------------------------------------*
*       FORM MODB2                                                    *
*---------------------------------------------------------------------*
FORM MODB2 USING TRANSBYTE TRANSREC.
  LOOP AT B0002.
    IF B0002-TAB = ADDBTAB.
      B0002-NUMBYTE = TRANSBYTE.
      B0002-NUMREC = TRANSREC.
      MODIFY B0002.
    ENDIF.
  ENDLOOP.
ENDFORM.                                                    "MODB2

*---------------------------------------------------------------------*
*       FORM ADDB3                                                    *
*---------------------------------------------------------------------*
FORM ADDB3 USING FLD LEN DDTAB DDFLD CHECKTABLE KEYFLAG
                                          DDTEXT REPTEXT DOMNAME3L.
  DATA: ZTAB LIKE DD03L-TABNAME
       ,ZFLD LIKE DD03L-FIELDNAME
       ,ZLEN LIKE DD01L-LENG
       ,ZCHECKTABLE LIKE DD03L-CHECKTABLE
       ,ZKEYFLAG LIKE DD03L-KEYFLAG
       ,ZDATATYPE LIKE DD03L-DATATYPE
       ,ZDECIMALS LIKE DD03L-DECIMALS
       ,ZROLLNAME LIKE DD03L-ROLLNAME
       ,ZDDTEXT TYPE DD04T-DDTEXT
       ,ZDDTEXT2 TYPE DD04T-DDTEXT
       ,ZREPTEXT LIKE DD04T-REPTEXT
       ,ZDOMNAME3L LIKE DD01L-DOMNAME.

  IF DDTAB = ''.
    ZTAB = ADDBTAB.
  ELSE.
    ZTAB = DDTAB.
  ENDIF.
  IF DDFLD = ''.
    ZFLD = FLD.
  ELSE.
    ZFLD = DDFLD.
  ENDIF.

  IF LEN = 0.
    SELECT SINGLE LENG
                  DATATYPE
                  KEYFLAG
                  CHECKTABLE
                  ROLLNAME
                  DOMNAME
                  DECIMALS
            INTO (ZLEN
                 ,ZDATATYPE
                 ,ZKEYFLAG
                 ,ZCHECKTABLE
                 ,ZROLLNAME
                 ,ZDOMNAME3L
                 ,ZDECIMALS
                 )
             FROM DD03L
            WHERE TABNAME = ZTAB
              AND FIELDNAME = ZFLD
              AND AS4LOCAL = 'A'.

    IF SY-SUBRC = 0.
      SELECT SINGLE DDTEXT
              INTO  ZDDTEXT
               FROM DD03T
              WHERE TABNAME = ZTAB
                AND DDLANGUAGE = SY-LANGU
                AND AS4LOCAL = 'A'
                AND FIELDNAME = ZFLD.

      SELECT SINGLE REPTEXT
                    DDTEXT
              INTO (ZREPTEXT
                   ,ZDDTEXT2)
               FROM DD04T
              WHERE ROLLNAME = ZROLLNAME
                AND DDLANGUAGE = SY-LANGU
                AND AS4LOCAL = 'A'.

      IF ZREPTEXT = ''.
        ZREPTEXT = ZDDTEXT.
      ENDIF.
      IF ZDDTEXT = ''.
        ZDDTEXT = ZDDTEXT2.
      ENDIF.
    ENDIF.

    IF ZDATATYPE = 'RAW'.
      ZLEN = ZLEN * 4.
    ELSEIF ZDATATYPE = 'DEC' OR  ZDATATYPE = 'CURR'.
      ZLEN = ZLEN + ZDECIMALS + 5.
    ENDIF.
    IF ZLEN > 255.
      ZLEN = 255.
    ENDIF.
  ELSE.
    ZLEN = LEN.
    ZCHECKTABLE = CHECKTABLE.
    ZKEYFLAG = KEYFLAG.
    ZDDTEXT = DDTEXT.
    ZREPTEXT = REPTEXT.
    ZDOMNAME3L = DOMNAME3L.
  ENDIF.

  IF ONR <> ADDBNR.
    ONR = ADDBNR.
    OPOS = 0.
  ENDIF.

  B0003-NR = ADDBNR.
  B0003-TYP = ADDBTYP.
  B0003-TAB = ADDBTAB.
  B0003-FLD = FLD.
  B0003-START = OPOS.
  B0003-LEN = ZLEN.
  B0003-CHECKTABLE = ZCHECKTABLE.
  B0003-KEYFLAG = ZKEYFLAG.
  B0003-DDTEXT = ZDDTEXT.
  B0003-REPTEXT = ZREPTEXT.
  B0003-DOMNAME3L = ZDOMNAME3L.

  PERFORM OPENB0003 USING 'APPENDING' B0003-NR.
  REPLACE ALL OCCURRENCES OF TRANSTXT IN B0003 WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN B0003 WITH REPLCHAR.
  CONCATENATE B0003-TYP
              B0003-NR
              B0003-TAB
              B0003-FLD
              B0003-START
              B0003-LEN
              B0003-CHECKTABLE
              B0003-KEYFLAG
              B0003-DDTEXT
              B0003-REPTEXT
              B0003-DOMNAME3L
              INTO TRANSREC
              SEPARATED BY TRANSSEP.

  TRANSFER TRANSREC TO FILEB3.
  PERFORM CLOSEB0003.

  OPOS = OPOS + ZLEN.
ENDFORM.                                                    "ADDB3

*---------------------------------------------------------------------*
*       FORM REPLCHARFIELD                                            *
*---------------------------------------------------------------------*
FORM REPLCHARFIELD USING FLD.
  REPLACE ALL OCCURRENCES OF TRANSTXT IN FLD WITH REPLCHAR.
  REPLACE ALL OCCURRENCES OF TRANSSEP IN FLD WITH REPLCHAR.
ENDFORM.                    "REPLCHARFIELD

*---------------------------------------------------------------------*
*      Form  CHECKTABEXISTS                                           *
*---------------------------------------------------------------------*
FORM CHECKTABEXISTS USING TABNAME CHANGING EXFLAG.
  DATA: ANZREC TYPE I
       ,TXMSG(40) TYPE C.

  SELECT   COUNT( * )
      INTO (ANZREC)
      FROM DD02L
     WHERE TABNAME = TABNAME
       AND AS4VERS = 'A'
       AND TABCLASS <> 'INTTAB'.

  IF SY-SUBRC ne 0.
    CONCATENATE 'Information: ' TABNAME ' table does not exist.'
                INTO TXMSG.
    MOVE TXMSG                                  TO ZEILE.
    PERFORM ADDB0007 USING ZEILE.
    EXFLAG = space.
  ELSE.
    EXFLAG = 'X'.
  ENDIF.
ENDFORM.                    "CHECKTABEXISTS

*---------------------------------------------------------------------*
*       FORM TRANS                                                    *
*---------------------------------------------------------------------*
FORM TRANS.
  DATA: TABIX TYPE I
       ,REALTRANSBYTE TYPE I
       ,RECLEN TYPE I
       ,FILENAM(400) TYPE C.

  READ TABLE B0002 WITH KEY NR = ADDBNR.
  TABIX = SY-TABIX.

  REALTRANSBYTE = B0002-NUMBYTE + B0002-NUMREC * 2.
  IF REALTRANSBYTE > FILELENG.
    PERFORM CLOSEFILE.

    PERFORM ADDBSET USING 'Y' '' ADDBTYP ADDBTAB.

    PERFORM ADDB2 USING 'Y' B0002-DDTEXT.

    PERFORM OPENFILE USING 'OUTPUT'.

    READ TABLE B0002 WITH KEY NR = ADDBNR.
    TABIX = SY-TABIX.
  ENDIF.

  RECLEN = STRLEN( TRANSREC ).
  B0002-NUMBYTE = B0002-NUMBYTE + RECLEN.
  B0002-NUMREC = B0002-NUMREC + 1.
  MODIFY B0002 INDEX TABIX.

  CONCATENATE PATH ADDBTYP ADDBNR FILEEXT
              INTO FILENAM.

  REPLACE ALL OCCURRENCES OF INVSTR1 IN TRANSREC WITH ' '.
  REPLACE ALL OCCURRENCES OF INVSTR2 IN TRANSREC WITH ' '.

  TRANSFER TRANSREC TO FILENAM.
ENDFORM.                    "TRANS

*---------------------------------------------------------------------*
*      Form  GENCONSTSTART                                            *
*---------------------------------------------------------------------*
FORM GENCONSTSTART USING TFTYPE.

  DATA: LV_PATH(352) TYPE C.
  LV_PATH = CL_ABAP_DYN_PRG=>QUOTE( PATH ).

  CLEAR CODE.

* HEADER
* ======
  PERFORM C3 USING 'REPORT' SUBREPID 'MESSAGE-ID AD.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*================================================='.
  PERFORM C1 USING '*     ACE-ABAP 8 for 4.7, ECC 5.0 and higher'.
  PERFORM C1 USING '*'.
  PERFORM C1 USING '* Copyright © 1996 - 2016 PricewaterhouseCoopers.'.
  PERFORM C1 USING '*              All rights reserved.'.
  PERFORM C1 USING '* PricewaterhouseCoopers refers to the network of'.
  PERFORM C1 USING '*     member firms of PricewaterhouseCoopers'.
  PERFORM C1 USING '*   International Limited, each of which is a'.
  PERFORM C1 USING '*     separate and independent legal entity.'.
  PERFORM C1 USING '*================================================='.
  PERFORM C1 USING ''.

* PARAMETER
* =========
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'PARAMETERS: SP(1)        TYPE C OBLIGATORY'.
  PERFORM C1 USING '                         DEFAULT ''I''.'.
  PERFORM C1 USING 'PARAMETERS: PARFLAG(1)   TYPE C'.
  PERFORM C1 USING '                         DEFAULT ''N''.'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING ''.

* VARIABLES
* =========
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '* VARIABLES                                      *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'DATA: PATH(100)    TYPE C'.
  PERFORM D3 USING '  VALUE ' LV_PATH ''.
  PERFORM C1 USING '     ,CDP(4)       TYPE C'.
  PERFORM D3 USING '                   VALUE ''' CDP ''''.
  PERFORM C1 USING '     ,REPLCHAR(1)  TYPE C'.
  PERFORM D3 USING '                   VALUE ''' REPLCHAR ''''.
  PERFORM C1 USING '     ,SELDATE      TYPE D'.
  PERFORM D3 USING '                   VALUE ''' CDSDATE ''''.
  PERFORM C1 USING '     ,NUM(4)       TYPE C'.
  PERFORM D3 USING '                   VALUE ''' FILENUM ''''.
  PERFORM C1 USING '     ,FILELENG     TYPE I'.
  PERFORM D3 USING '                   VALUE ''' FILELN ''''.
  PERFORM C1 USING '     ,FTYPE(1)     TYPE C'.
  PERFORM D3 USING '                   VALUE ''' TFTYPE '''.'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING ''.

* DATA DECLARATION
* ================
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '* DATA DECLARATION                               *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'DATA: FILENAM(400)'.
  PERFORM C1 USING '     ,FILENA2(400)'.
  PERFORM C1 USING '     ,FILENA4(400)'.
  PERFORM C1 USING '     ,TEXT(400)'.
  PERFORM C1 USING '     ,ZEILE(400)'.
  PERFORM C1 USING '     ,TREC(4000)'.
  PERFORM C1 USING '     ,DOWNDIR(400)'.
  PERFORM C1 USING '     ,MESS(400)'.
  PERFORM C1 USING '     ,NEWTRANSBYTE(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSREC(10) TYPE N'.
  PERFORM C1 USING '     ,CURTRANSBYTE(10) TYPE N'.
  PERFORM C1 USING '     ,CURTRANSREC(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSBYT2(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSRE2(10) TYPE N'.
  PERFORM C1 USING '     ,CURTRANSBYT2(10) TYPE N'.
  PERFORM C1 USING '     ,CURTRANSRE2(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSBYT3(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSRE3(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSBYT4(10) TYPE N'.
  PERFORM C1 USING '     ,NEWTRANSRE4(10) TYPE N'.
  PERFORM C1 USING '     ,NEWFILENUM(4) TYPE N'.
  PERFORM C1 USING '     ,NEWFILENU2(4) TYPE N'.
  PERFORM C1 USING '     ,NEWFILENU4(4) TYPE N'.
  PERFORM C1 USING '     ,NEWFILELIST(10000) TYPE C'.
  PERFORM C1 USING '     ,TRANSTXT(1) TYPE C VALUE ''"'''.
  PERFORM C1 USING '     ,TRANSSEP(1) TYPE C VALUE '''''''''.
  PERFORM C1 USING '     ,INVCHAR1 TYPE x value ''0A'''.
  PERFORM C1 USING '     ,INVCHAR2 TYPE x value ''0D'''.
  PERFORM C1 USING '     ,INVCONV TYPE ref to CL_ABAP_CONV_IN_CE'.
  PERFORM C1 USING '     ,INVXSTR TYPE xstring'.
  PERFORM C1 USING '     ,INVSTR1 TYPE string'.
  PERFORM C1 USING '     ,INVSTR2 TYPE string.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'PERFORM MAINPROG.'.
  PERFORM C1 USING ''.
ENDFORM.                    "GENCONSTSTART

*---------------------------------------------------------------------*
*      Form  GENCONSTFORM                                             *
*---------------------------------------------------------------------*
FORM GENCONSTFORM.
* MAIN PROGRAM SECTION
* ====================
  PERFORM C1 USING '*-----------------------------------------------*'.
  PERFORM C1 USING '* MAIN PROGRAM SECTION                          *'.
  PERFORM C1 USING '*-----------------------------------------------*'.
  PERFORM C1 USING 'FORM MAINPROG.'.
  PERFORM C1 USING '  IF SP = ''I''.'.
  PERFORM C1 USING '    CONCATENATE ''Do not start manually'''.
  PERFORM C1 USING '                ''this program (use ZACE8M)!'''.
  PERFORM C1 USING '                INTO MESS'.
  PERFORM C1 USING '                SEPARATED BY SPACE.'.
  PERFORM C1 USING '    MESSAGE ID ''AD'' TYPE ''S'' NUMBER 10'.
  PERFORM C1 USING '                      WITH MESS.'.
  PERFORM C1 USING '    LEAVE PROGRAM.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  INVXSTR = INVCHAR1.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  CALL METHOD CL_ABAP_CONV_IN_CE=>CREATE'.
  PERFORM C1 USING '    EXPORTING'.
  PERFORM C1 USING '      INPUT       = INVXSTR'.
  PERFORM C1 USING '      ENCODING    = ''UTF-8'''.
  PERFORM C1 USING '      REPLACEMENT = ''?'''.
  PERFORM C1 USING '      IGNORE_CERR = ABAP_TRUE'.
  PERFORM C1 USING '    RECEIVING'.
  PERFORM C1 USING '      CONV        = INVCONV.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  CALL METHOD INVCONV->READ'.
  PERFORM C1 USING '    IMPORTING'.
  PERFORM C1 USING '      DATA = INVSTR1.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  INVXSTR = INVCHAR2.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  CALL METHOD CL_ABAP_CONV_IN_CE=>CREATE'.
  PERFORM C1 USING '    EXPORTING'.
  PERFORM C1 USING '      INPUT       = INVXSTR'.
  PERFORM C1 USING '      ENCODING    = ''UTF-8'''.
  PERFORM C1 USING '      REPLACEMENT = ''?'''.
  PERFORM C1 USING '      IGNORE_CERR = ABAP_TRUE'.
  PERFORM C1 USING '    RECEIVING'.
  PERFORM C1 USING '      CONV        = INVCONV.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  CALL METHOD INVCONV->READ'.
  PERFORM C1 USING '    IMPORTING'.
  PERFORM C1 USING '      DATA = INVSTR2.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  NEWFILENUM = NUM.'.
  PERFORM C1 USING '  NEWFILELIST = ''''.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  PERFORM PROC.'.
  PERFORM C1 USING '  '.
  PERFORM C1 USING '  EXPORT NEWTRANSBYTE TO MEMORY ID ''ACEByte''.'.
  PERFORM C1 USING '  EXPORT NEWTRANSREC  TO MEMORY ID ''ACERec''.'.
  PERFORM C1 USING '  EXPORT NEWFILENUM   TO MEMORY ID ''ACEFNum''.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.

* GENERAL FORM
* ============
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETFILENAME                         *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM GETFILENAME.'.
  PERFORM C1 USING '  CONCATENATE PATH FTYPE NEWFILENUM'.
  PERFORM D3 USING '            ''' FILEEXT ''''.
  PERFORM C1 USING '              INTO FILENAM.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETFILENAM2                         *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM GETFILENAM2.'.
  PERFORM C1 USING '  CONCATENATE PATH FTYPE NEWFILENU2'.
  PERFORM D3 USING '            ''' FILEEXT ''''.
  PERFORM C1 USING '              INTO FILENA2.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM GETFILENAM4                         *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM GETFILENAM4.'.
  PERFORM C1 USING '  CONCATENATE PATH FTYPE NEWFILENU4'.
  PERFORM D3 USING '            ''' FILEEXT ''''.
  PERFORM C1 USING '              INTO FILENA4.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM FILEOPEN                            *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM FILEOPEN USING FILESPEC OPENTYPE.'.
  PERFORM C1 USING '  IF OPENTYPE = ''OUTPUT''.'.
  PERFORM C1 USING '      OPEN DATASET FILESPEC FOR OUTPUT'.
  PERFORM C1 USING '                   IN LEGACY TEXT MODE'.
  PERFORM C1 USING '                   CODE PAGE CDP'.
  PERFORM C1 USING '                   REPLACEMENT CHARACTER REPLCHAR'.
  PERFORM C1 USING '                   IGNORING CONVERSION ERRORS'.
  PERFORM C1 USING '                   MESSAGE MESS.'.
  PERFORM C1 USING '    ELSE.'.
  PERFORM C1 USING '      OPEN DATASET FILESPEC FOR APPENDING'.
  PERFORM C1 USING '                   IN LEGACY TEXT MODE'.
  PERFORM C1 USING '                   CODE PAGE CDP'.
  PERFORM C1 USING '                   REPLACEMENT CHARACTER REPLCHAR'.
  PERFORM C1 USING '                   IGNORING CONVERSION ERRORS'.
  PERFORM C1 USING '                   MESSAGE MESS.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    IF SY-SUBRC <> 0.'.
  PERFORM C1 USING '      MOVE SY-SUBRC            TO TEXT.'.
  PERFORM C1 USING '      CONCATENATE ''File-open-error:'''.
  PERFORM C1 USING '                  FILESPEC TEXT MESS'.
  PERFORM C1 USING '                  INTO ZEILE SEPARATED BY SPACE.'.
  PERFORM C1 USING '      WRITE / ZEILE.'.
  PERFORM C1 USING '      LEAVE PROGRAM.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM FILECLOS                            *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM FILECLOS USING FILESPEC.'.
  PERFORM C1 USING '    CLOSE DATASET FILESPEC.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    IF SY-SUBRC <> 0.'.
  PERFORM C1 USING '      MOVE SY-SUBRC            TO TEXT.'.
  PERFORM C1 USING '      CONCATENATE ''File-close-error:'''.
  PERFORM C1 USING '                  FILESPEC TEXT MESS'.
  PERFORM C1 USING '                  INTO ZEILE SEPARATED BY SPACE.'.
  PERFORM C1 USING '      WRITE / ZEILE.'.
  PERFORM C1 USING '      LEAVE PROGRAM.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM TRANS                               *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM TRANS.'.
  PERFORM C1 USING '  DATA: REALTRANSBYTE TYPE I,'.
  PERFORM C1 USING '        RECLEN TYPE I.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  REALTRANSBYTE = CURTRANSBYTE + CURTRANSREC * 2.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  IF REALTRANSBYTE > FILELENG.'.
  PERFORM C1 USING '    PERFORM FILECLOS USING FILENAM.'.
  PERFORM C1 USING '    CURTRANSBYTE = 0.'.
  PERFORM C1 USING '    CURTRANSREC = 0.'.
  PERFORM C1 USING '    IF NEWFILENU2 >  NEWFILENUM.'.
  PERFORM C1 USING '      NEWFILENUM = NEWFILENU2 + 1.'.
  PERFORM C1 USING '    ELSE.'.
  PERFORM C1 USING '      NEWFILENUM = NEWFILENUM + 1.'.
  PERFORM C1 USING '    ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '    PERFORM GETFILENAME.'.
  PERFORM C1 USING '    PERFORM FILEOPEN USING FILENAM ''OUTPUT''.'.
  PERFORM C1 USING '    CONCATENATE NEWFILELIST ''S'''.
  PERFORM C1 USING '                INTO NEWFILELIST.'.
  PERFORM C1 USING '  ENDIF.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR1'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING '  REPLACE ALL OCCURRENCES OF INVSTR2'.
  PERFORM C1 USING '          IN TREC WITH '' ''.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  RECLEN = STRLEN( TREC ).'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  TRANSFER TREC TO FILENAM.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWTRANSBYTE = NEWTRANSBYTE + RECLEN.'.
  PERFORM C1 USING '  CURTRANSBYTE = CURTRANSBYTE + RECLEN.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING '  NEWTRANSREC =  NEWTRANSREC + 1.'.
  PERFORM C1 USING '  CURTRANSREC =  CURTRANSREC + 1.'.
  PERFORM C1 USING 'ENDFORM.'.
  PERFORM C1 USING ''.
ENDFORM.                    "GENCONSTFORM

*---------------------------------------------------------------------*
*      Form  GENCONSTEMPTY                                            *
*---------------------------------------------------------------------*
FORM GENCONSTEMPTY.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING '*       FORM PROC                                *'.
  PERFORM C1 USING '*------------------------------------------------*'.
  PERFORM C1 USING 'FORM PROC.'.
  PERFORM C1 USING ''.
  PERFORM C1 USING 'ENDFORM.'.
ENDFORM.                    "GENCONSTEMPTY

*---------------------------------------------------------------------*
*      Form  GENABAP                                                  *
*---------------------------------------------------------------------*
FORM GENABAP.
  INSERT REPORT SUBREPID FROM CODE.
  GENERATE REPORT SUBREPID.
  WAIT UP TO 1 SECONDS.
  COMMIT WORK AND WAIT.
ENDFORM.                    "GENABAP

*---------------------------------------------------------------------*
*      Form  C1-C9 / D1-D9                                            *
*---------------------------------------------------------------------*
FORM C1 USING P1.
  APPEND P1 TO CODE.
ENDFORM.                    "CA
FORM C2 USING P1 P2.
  CONCATENATE P1 P2 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C2
FORM C3 USING P1 P2 P3.
  CONCATENATE P1 P2 P3 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C3
FORM C4 USING P1 P2 P3 P4.
  CONCATENATE P1 P2 P3 P4 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C4
FORM C5 USING P1 P2 P3 P4 P5.
  CONCATENATE P1 P2 P3 P4 P5 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C5
FORM C6 USING P1 P2 P3 P4 P5 P6.
  CONCATENATE P1 P2 P3 P4 P5 P6 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C6
FORM C7 USING P1 P2 P3 P4 P5 P6 P7.
  CONCATENATE P1 P2 P3 P4 P5 P6 P7 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C7
FORM C8 USING P1 P2 P3 P4 P5 P6 P7 P8.
  CONCATENATE P1 P2 P3 P4 P5 P6 P7 P8 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C8
FORM C9 USING P1 P2 P3 P4 P5 P6 P7 P8 P9.
  CONCATENATE P1 P2 P3 P4 P5 P6 P7 P8 P9 INTO CONCAT
              SEPARATED BY SPACE.
  APPEND CONCAT TO CODE.
ENDFORM.                    "C9
FORM D1 USING P1.
  APPEND P1 TO CODE.
ENDFORM.                    "D1
FORM D2 USING P1 P2.
  CONCATENATE P1 P2 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D2
FORM D3 USING P1 P2 P3.
  CONCATENATE P1 P2 P3 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D3
FORM D4 USING P1 P2 P3 P4.
  CONCATENATE P1 P2 P3 P4 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D4
FORM D5 USING P1 P2 P3 P4 P5.
  CONCATENATE P1 P2 P3 P4 P5 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D5
FORM D6 USING P1 P2 P3 P4 P5 P6.
  CONCATENATE P1 P2 P3 P4 P5 P6 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D6
FORM D7 USING P1 P2 P3 P4 P5 P6 P7.
  CONCATENATE P1 P2 P3 P4 P5 P6 P7 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D7
FORM D8 USING P1 P2 P3 P4 P5 P6 P7 P8.
  CONCATENATE P1 P2 P3 P4 P5 P6 P7 P8 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D8
FORM D9 USING P1 P2 P3 P4 P5 P6 P7 P8 P9.
  CONCATENATE P1 P2 P3 P4 P5 P6 P7 P8 P9 INTO CONCAT.
  APPEND CONCAT TO CODE.
ENDFORM.                    "D9

*---------------------------------------------------------------------*
*      Form  REPTESTING                                               *
*---------------------------------------------------------------------*
FORM REPTESTING.
  DATA: OLDSCRID(50) TYPE C,
        FUNCID(50) TYPE C,
        PRTROW(220),
        COLPOS TYPE I.

  MOVE SY-DATUM                                 TO STARTD.
  MOVE SY-UZEIT                                 TO STARTT.

  LINENUM = 0.

  LOOP AT RABAP.
    PERFORM REPORTEVAL USING RABAP-LOW RABAP-LOW 0 ''.
  ENDLOOP.

  PERFORM REPDETAIL.

* Init of End Date / Time
  MOVE SY-DATUM                                 TO ENDD.
  MOVE SY-UZEIT                                 TO ENDT.

  MOVE 'ACE Report Testing (dd.mm.yyyy / hh:mm:ss)'
*       01234567890123456789012345678901234567890
                                                TO PRTROW.
  MOVE STARTD+6(2)                              TO PRTROW+20(2).
  MOVE STARTD+4(2)                              TO PRTROW+23(2).
  MOVE STARTD+0(4)                              TO PRTROW+26(4).
  MOVE STARTT+0(2)                              TO PRTROW+33(2).
  MOVE STARTT+2(2)                              TO PRTROW+36(2).
  MOVE STARTT+4(2)                              TO PRTROW+39(2).
  WRITE / PRTROW COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.


  CONCATENATE 'Sys-ID:' SY-SYSID
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE / PRTROW COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.

  CONCATENATE 'Client:' SY-MANDT
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE 30 PRTROW COLOR COL_HEADING INTENSIFIED
              ON INVERSE OFF INPUT OFF.

  CONCATENATE 'SAPRel:' SY-SAPRL
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE 60 PRTROW COLOR COL_HEADING INTENSIFIED
              ON INVERSE OFF INPUT OFF.

  CONCATENATE 'Host:' SY-HOST
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE 90 PRTROW COLOR COL_HEADING INTENSIFIED
              ON INVERSE OFF INPUT OFF.

  CONCATENATE 'User:' SY-UNAME
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE 120 PRTROW COLOR COL_HEADING INTENSIFIED
              ON INVERSE OFF INPUT OFF.

  CONCATENATE 'Rep-ID:' SY-REPID
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE 150 PRTROW COLOR COL_HEADING INTENSIFIED
              ON INVERSE OFF INPUT OFF.


  CONCATENATE 'ABAP:' REPREL
              INTO PRTROW
              SEPARATED BY SPACE.
  WRITE 187 PRTROW COLOR COL_HEADING INTENSIFIED
              ON INVERSE OFF INPUT OFF.

  SKIP 1.

  PRTROW = 'SUMMARY'.
  WRITE / PRTROW COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.

  SKIP 1.

  WRITE / 'TCode / Report / Program / Include'.
  WRITE AT 111 'Type'.
  WRITE AT 129 'Std/Cust'.
  WRITE AT 139 'Obj. Key'.
  WRITE AT 152 'Last Chg'.
  WRITE AT 163 'Status'.

  SKIP 1.

  LOOP AT YREPTESTING INTO WREPTESTING.
    IF WREPTESTING-LEVEL = 0.
      WRITE / WREPTESTING-SCRID.
      IF WREPTESTING-XTYPE = 'Query'.
        WRITE AT 111 'Selected Query'.
      ELSEIF WREPTESTING-XTYPE = 'Report Writer'.
        WRITE AT 111 'Sel Report Writer'.
      ELSEIF WREPTESTING-XTYPE = 'Rep. Tree'.
        WRITE AT 111 'Sel Rep. Tree'.
      ELSEIF WREPTESTING-XTYPE = 'Rep. Tree TCode'.
        WRITE AT 111 'Sel Rep. Tree TCode'.
      ELSEIF WREPTESTING-XTYPE = 'Include'.
        WRITE AT 111 'Selected Include'.
      ELSEIF WREPTESTING-XTYPE = 'Query TCode'.
        WRITE AT 111 'Sel Query TCode'.
      ELSE.
        WRITE AT 111 WREPTESTING-XTYPE.
      ENDIF.
      WRITE AT 129 WREPTESTING-XSTDCUST.
      WRITE AT 139 WREPTESTING-XOBJKEY.
      WRITE AT 152 WREPTESTING-XLASTCHG.
      IF WREPTESTING-XTYPE = 'Query'.
        WRITE AT 163 'Query             -  no baseline possible'.
      ELSEIF WREPTESTING-XTYPE = 'Query TCode'.
        WRITE AT 163 'Query TCode       -  no baseline possible'.
      ELSEIF WREPTESTING-XTYPE = 'Report Writer'.
        WRITE AT 163 'Report Writer     -  no baseline possible'.
      ELSEIF WREPTESTING-XTYPE = 'Not Report TCode'.
        WRITE AT 163 'Not Report TCode  -  no baseline possible'.
      ELSEIF WREPTESTING-XTYPE = 'Unknown Object'.
        WRITE AT 163 'Unknown Object    -  no baseline possible'.
      ELSEIF WREPTESTING-XTYPE = 'Rep. Tree'.
        WRITE AT 163 'Report Tree       -  identify report in the tree'.
      ELSEIF WREPTESTING-XTYPE = 'Rep. Tree TCode'.
        WRITE AT 163 'Report Tree TCode -  identify report in the tree'.
      ELSEIF WREPTESTING-XSTDCUST = ''.
        WRITE AT 163 'No baseline possible'.
      ELSEIF WREPTESTING-XSTDCUST = 'Standard'.
        IF WREPTESTING-XOBJKEY = 'No Obj Key'.
          WRITE AT 163 'Unchanged standard program'.
        ELSE.
          CONCATENATE 'Changed standard program'
                      'w/ last chg'
                      WREPTESTING-XLASTCHG
                 INTO PRTROW
            SEPARATED BY SPACE.
          WRITE AT 163 PRTROW.
        ENDIF.
      ELSE.
        CONCATENATE 'Custom program'
                    'w/ last chg'
                    WREPTESTING-XLASTCHG
               INTO PRTROW
          SEPARATED BY SPACE.
        WRITE AT 163 PRTROW.
      ENDIF.
    ENDIF.
  ENDLOOP.

  SKIP 2.

  PRTROW = 'DETAIL'.

  WRITE / PRTROW COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.

  SKIP 1.

  WRITE / 'TCode / Report / Program / Include'.
  WRITE AT 111 'Type'.
  WRITE AT 129 'Std/Cust'.
  WRITE AT 139 'Obj. Key'.
  WRITE AT 152 'Last Chg'.
  WRITE AT 163 'Trnsp/Local'.

  LOOP AT YREPTESTING INTO WREPTESTING.
    IF OLDSCRID <> WREPTESTING-SCRID.
      SKIP 2.
      WRITE / WREPTESTING-SCRID.
      WRITE AT 111 WREPTESTING-XTYPE.
      WRITE AT 129 WREPTESTING-XSTDCUST.
      WRITE AT 139 WREPTESTING-XOBJKEY.
      WRITE AT 152 WREPTESTING-XLASTCHG.
      WRITE AT 163 WREPTESTING-XLOCTRANS.
      SKIP 1.
    ENDIF.

    IF WREPTESTING-TYPE = 'Function Module'.
      FUNCID = WREPTESTING-INCID.
    ELSE.
      WRITE / ''.
      COLPOS = WREPTESTING-LEVEL + 6.
      IF FUNCID = ''.
        WRITE AT COLPOS WREPTESTING-INCID.
      ELSE.
        CONCATENATE FUNCID '/' WREPTESTING-INCID
               INTO FUNCID
               SEPARATED BY SPACE.
        WRITE AT COLPOS FUNCID.
      ENDIF.
      WRITE AT 111 WREPTESTING-TYPE.
      WRITE AT 129 WREPTESTING-STDCUST.
      WRITE AT 139 WREPTESTING-OBJKEY.
      WRITE AT 152 WREPTESTING-LASTCHG.
      WRITE AT 163 WREPTESTING-LOCTRANS.
      FUNCID = ''.
    ENDIF.

    OLDSCRID = WREPTESTING-SCRID.
  ENDLOOP.

  SKIP 2.
  MOVE 'END OF Report Testing (dd.mm.yyyy / hh:mm:ss)'
*       01234567890123456789012345678901234567890123
                                                TO PRTROW.
  MOVE ENDD+6(2)                                TO PRTROW+23(2).
  MOVE ENDD+4(2)                                TO PRTROW+26(2).
  MOVE ENDD+0(4)                                TO PRTROW+29(4).
  MOVE ENDT+0(2)                                TO PRTROW+36(2).
  MOVE ENDT+2(2)                                TO PRTROW+39(2).
  MOVE ENDT+4(2)                                TO PRTROW+42(2).
  WRITE / PRTROW COLOR COL_HEADING INTENSIFIED ON INVERSE OFF INPUT OFF.
ENDFORM.                    "REPTESTING

*---------------------------------------------------------------------*
*      Form  REPORTEVAL                                               *
*---------------------------------------------------------------------*
FORM REPORTEVAL USING MAINREP SUBREP LEVEL FUNCINC.
  DATA: ANZREC TYPE I
       ,SUBC TYPE TRDIR-SUBC
       ,PGMNA TYPE TSTC-PGMNA
       ,CINFO TYPE TSTC-CINFO
       ,PARAM TYPE TSTCP-PARAM
       ,ZPARAM TYPE TSTCP-PARAM
       ,PNAME TYPE TFDIR-PNAME
       ,INCLUDE TYPE TFDIR-INCLUDE
       ,REPID(50) TYPE C
       ,FOUNDREP(50) TYPE C
       ,SEARCHSTR(50) TYPE C
       ,CHECKREP(50) TYPE C
       ,CURLEVEL TYPE I
       ,NEXTLEVEL TYPE I
       ,POS TYPE I
       ,POS2 TYPE I
       .
  DATA: CLINES TYPE TABLE OF string.
  DATA: CLIN TYPE string.
  DATA: LSPOS   TYPE I.
  DATA: RES     TYPE I.

  CURLEVEL = LEVEL.
  CHECKREP = SUBREP.

  CONCATENATE MAINREP '-' CHECKREP
         INTO REPID.

  READ TABLE ZREPTESTING WITH TABLE KEY REPID = REPID
       INTO WREPTESTING.

  IF SY-SUBRC = 0.
    EXIT.
  ENDIF.

  REPINDEX = SY-TABIX.

  LINENUM = LINENUM + 1.
  CLEAR WREPTESTING.
  WREPTESTING-REPID = REPID.
  WREPTESTING-SCRID = MAINREP.
  WREPTESTING-INCID = CHECKREP.
  WREPTESTING-LEVEL = CURLEVEL.
  WREPTESTING-ORDER = LINENUM.

  IF CURLEVEL = 0.
*
*  EVALUATING PARAMETER / VARIANT TRANSACTION
*
    SELECT SINGLE
           PARAM
      INTO PARAM
      FROM TSTCP
     WHERE TCODE = CHECKREP.

    IF SY-SUBRC = 0.
      ZPARAM = PARAM.
      IF PARAM+0(2) = '/*' OR PARAM+0(2) = '/N' OR PARAM+0(2) = '@@'
                           OR PARAM+0(1) = '@'.
        IF PARAM+0(1) = '@' AND PARAM+0(2) <> '@@'.
          PARAM = PARAM+1.
        ELSE.
          PARAM = PARAM+2.
        ENDIF.
        CONDENSE PARAM.
        IF PARAM CA ' '.
          PARAM = PARAM+0(SY-FDPOS).
        ENDIF.
        CONDENSE PARAM.

        IF PARAM = 'START_REPORT'.
*  Start Report
          IF ZPARAM CS 'REPORT='.
            POS = SY-FDPOS + 7.
            ZPARAM = ZPARAM+POS.
            IF ZPARAM CA ';'.
              POS = SY-FDPOS.
              ZPARAM = ZPARAM+0(POS).
            ENDIF.
            WREPTESTING-TYPE = 'Selected TCode'.
            INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
            NEXTLEVEL = CURLEVEL + 1.
            PERFORM REPORTEVAL USING MAINREP ZPARAM NEXTLEVEL ''.
          ELSE.
            WREPTESTING-TYPE = 'Unknown Object'.
            INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
          ENDIF.
          EXIT.
        ELSEIF PARAM = 'SA39'.
*  SA39
          IF ZPARAM CS 'PROGRAMM='.
            POS = SY-FDPOS + 9.
            ZPARAM = ZPARAM+POS.
            IF ZPARAM CA ';'.
              POS = SY-FDPOS.
              ZPARAM = ZPARAM+0(POS).
            ENDIF.
            WREPTESTING-TYPE = 'Selected TCode'.
            INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
            NEXTLEVEL = CURLEVEL + 1.
            PERFORM REPORTEVAL USING MAINREP ZPARAM NEXTLEVEL ''.
          ELSE.
            WREPTESTING-TYPE = 'Unknown Object'.
            INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
          ENDIF.
          EXIT.
        ELSE.
          WREPTESTING-TYPE = 'Selected TCode'.
          INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.

          CHECKREP = PARAM.
          CURLEVEL = CURLEVEL + 1.

          CONCATENATE MAINREP '-' CHECKREP
                 INTO REPID.

          READ TABLE ZREPTESTING WITH TABLE KEY REPID = REPID
               INTO WREPTESTING.

          IF SY-SUBRC = 0.
            EXIT.
          ENDIF.

          REPINDEX = SY-TABIX.

          LINENUM = LINENUM + 1.
          CLEAR WREPTESTING.
          WREPTESTING-REPID = REPID.
          WREPTESTING-SCRID = MAINREP.
          WREPTESTING-INCID = CHECKREP.
          WREPTESTING-LEVEL = CURLEVEL.
          WREPTESTING-ORDER = LINENUM.
        ENDIF.
      ENDIF.
    ENDIF.

*
*  REGULAR TCODE
*
    IF CHECKREP = 'SQ00' OR CHECKREP = 'SQ01' OR
       CHECKREP = 'SQ02' OR CHECKREP = 'SQ03' OR
       CHECKREP = 'SQ07' OR CHECKREP = 'SQ09' OR
       CHECKREP = 'SQ10' OR CHECKREP = 'SQ11'.
        WREPTESTING-TYPE = 'Query TCode'.
        INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
        EXIT.
    ENDIF.

    SELECT SINGLE
           CINFO
           PGMNA
      INTO (CINFO
           ,PGMNA
           )
      FROM TSTC
     WHERE TCODE = CHECKREP.

    IF SY-SUBRC = 0.
      IF PGMNA = 'RKKBRPTR'.
        WREPTESTING-TYPE = 'Rep. Tree TCode'.
        INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
        EXIT.
      ELSEIF CINFO = 80 OR CINFO = 84.
        WREPTESTING-TYPE = 'Selected TCode'.
        INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
        NEXTLEVEL = CURLEVEL + 1.
        PERFORM REPORTEVAL USING MAINREP PGMNA NEXTLEVEL ''.
      ELSE.
        WREPTESTING-TYPE = 'Not Report TCode'.
        INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
      ENDIF.
      EXIT.
    ENDIF.
  ENDIF.

*
*  EVALUATING REPORTS
*
  IF CHECKREP+0(2) = 'AQ'.
    WREPTESTING-TYPE = 'Query'.
    INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
    EXIT.
  ELSEIF CHECKREP+0(2) = 'GP'.
    WREPTESTING-TYPE = 'Report Writer'.
    INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
    EXIT.
  ELSEIF CHECKREP = 'RKKBRPTR'.
    WREPTESTING-TYPE = 'Rep. Tree'.
    INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
    EXIT.
  ENDIF.

  SELECT SINGLE
         SUBC
    INTO SUBC
    FROM TRDIR
   WHERE NAME = CHECKREP.

  IF SY-SUBRC = 0.
    IF SUBC = 'I'.
      IF FUNCINC = 'F'.
        WREPTESTING-TYPE = 'Func. Include'.
      ELSE.
        WREPTESTING-TYPE = 'Include'.
      ENDIF.
    ELSE.
      IF CURLEVEL = 0.
        WREPTESTING-TYPE = 'Selected Program'.
      ELSE.
        WREPTESTING-TYPE = 'Program'.
      ENDIF.
    ENDIF.
    INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
  ELSE.
    SELECT SINGLE
           PNAME
           INCLUDE
      INTO (PNAME
           ,INCLUDE
           )
      FROM TFDIR
     WHERE FUNCNAME = CHECKREP.
    IF SY-SUBRC = 0.
      WREPTESTING-TYPE = 'Function Module'.
      INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
      SEARCH PNAME+1 FOR '/'.
      IF SY-SUBRC = 0.
        POS = SY-FDPOS + 2.
        POS2 = SY-FDPOS + 5.
        CONCATENATE PNAME+0(POS) PNAME+POS2 'U' INCLUDE
                    INTO CHECKREP.
      ELSE.
        CONCATENATE PNAME+3 'U' INCLUDE
                    INTO CHECKREP.
      ENDIF.
      NEXTLEVEL = CURLEVEL + 1.
      PERFORM REPORTEVAL USING MAINREP CHECKREP NEXTLEVEL 'F'.
      EXIT.
    ELSE.
      WREPTESTING-TYPE = 'Unknown Object'.
      INSERT WREPTESTING INTO ZREPTESTING INDEX REPINDEX.
      EXIT.
    ENDIF.
  ENDIF.

*
*  EVALUATING REPORT-LINES
*
  READ REPORT CHECKREP INTO CLINES.

*
*  INCLUDE
*
  SEARCHSTR = 'INCLUDE'.

  SEARCH CLINES FOR SEARCHSTR.

  WHILE SY-SUBRC = 0.
    LSPOS = SY-TABIX + 1.

    READ TABLE CLINES INTO CLIN INDEX SY-TABIX.
*    WRITE / CURLEVEL.
*    WRITE AT 80 CLIN.

    PERFORM REPLINECHECK USING CLIN SEARCHSTR CHANGING RES FOUNDREP.

    IF RES = 1.
*      WRITE / CURLEVEL.
*      WRITE AT 25 FOUNDREP.

      CONCATENATE MAINREP '-' FOUNDREP
             INTO REPID.

      READ TABLE ZREPTESTING WITH TABLE KEY REPID = REPID
           INTO WREPTESTING.

      IF SY-SUBRC = 4 OR SY-SUBRC = 8.
        NEXTLEVEL = CURLEVEL + 1.
        PERFORM REPORTEVAL USING MAINREP FOUNDREP NEXTLEVEL ''.
      ENDIF.
    ENDIF.

    SEARCH CLINES FOR SEARCHSTR
           STARTING AT LSPOS.
   ENDWHILE.

*
*  CALL FUNCTION
*
  SEARCHSTR = 'CALL FUNCTION'.

  SEARCH CLINES FOR SEARCHSTR.

  WHILE SY-SUBRC = 0.
    LSPOS = SY-TABIX + 1.

    READ TABLE CLINES INTO CLIN INDEX SY-TABIX.
*    WRITE / CURLEVEL.
*    WRITE AT 80 CLIN.

    PERFORM REPLINECHECK USING CLIN SEARCHSTR CHANGING RES FOUNDREP.

    IF RES = 1.
*      WRITE / CURLEVEL.
*      WRITE AT 25 FOUNDREP.

      CONCATENATE MAINREP '-' FOUNDREP
             INTO REPID.

      READ TABLE ZREPTESTING WITH TABLE KEY REPID = REPID
           INTO WREPTESTING.

      IF SY-SUBRC = 4 OR SY-SUBRC = 8.
        NEXTLEVEL = CURLEVEL + 1.
        PERFORM REPORTEVAL USING MAINREP FOUNDREP NEXTLEVEL ''.
      ENDIF.
    ENDIF.

    SEARCH CLINES FOR SEARCHSTR
           STARTING AT LSPOS.
   ENDWHILE.

ENDFORM.                    "REPORTEVAL

*---------------------------------------------------------------------*
*      Form  REPLINECHECK                                             *
*---------------------------------------------------------------------*
FORM REPLINECHECK USING LINE SEARCHSTR CHANGING RESULT PROGNAME.
  DATA: LINCOL   TYPE I,
        TEMPSTR TYPE STRING,
        FINDSTR(1) TYPE C.

  RESULT = 0.

  TEMPSTR = LINE.
  TRANSLATE TEMPSTR TO UPPER CASE.

  "Check line starts with search string
  CONDENSE TEMPSTR.
  LINCOL = STRLEN( SEARCHSTR ).
  IF STRLEN( TEMPSTR ) < LINCOL.
    EXIT.
  ENDIF.
  IF TEMPSTR+0(LINCOL) <> SEARCHSTR.
    EXIT.
  ENDIF.
  TEMPSTR = TEMPSTR+LINCOL.

  "Check space after search string
  FINDSTR = TEMPSTR+0(1).
  IF FINDSTR <> space.
    EXIT.
  ENDIF.
  TEMPSTR = TEMPSTR+1.

  "Get string after search
  IF TEMPSTR CA '#'.
    TEMPSTR = TEMPSTR+0(SY-FDPOS).
  ENDIF.
  IF TEMPSTR CA '"'.
    TEMPSTR = TEMPSTR+0(SY-FDPOS).
  ENDIF.
  IF TEMPSTR CA '.'.
    TEMPSTR = TEMPSTR+0(SY-FDPOS).
  ENDIF.
  CONDENSE TEMPSTR.
  IF TEMPSTR CA ' '.
    TEMPSTR = TEMPSTR+0(SY-FDPOS).
  ENDIF.
  CONDENSE TEMPSTR.

  IF TEMPSTR = 'STRUCTURE' OR
     TEMPSTR = '=' OR
     TEMPSTR = 'LIKE' OR
     TEMPSTR = 'INTO' OR
     TEMPSTR = '' OR
     TEMPSTR = 'TYPE'.
    EXIT.
  ENDIF.

  IF SEARCHSTR = 'CALL FUNCTION'.
    CONDENSE  TEMPSTR.
    IF TEMPSTR+0(1) <> ''''.
      EXIT.
    ENDIF.
    LINCOL = STRLEN( TEMPSTR ) - 1.
    IF TEMPSTR+LINCOL(1) <> ''''.
      EXIT.
    ENDIF.
    LINCOL = LINCOL - 1.
    TEMPSTR = TEMPSTR+1(LINCOL).
  ENDIF.

  PROGNAME = TEMPSTR.

  RESULT = 1.
ENDFORM.

*---------------------------------------------------------------------*
*      Form  REPDETAIL                                                *
*---------------------------------------------------------------------*
FORM REPDETAIL.
  DATA: GENFLAG TYPE TADIR-GENFLAG
       ,OBJECT TYPE TADIR-OBJECT
       ,OBJ_NAME TYPE TADIR-OBJ_NAME
       ,DEVCLASS TYPE TADIR-DEVCLASS
       ,KORRFLAG TYPE TDEVC-KORRFLAG
       ,AS4DATE TYPE E070-AS4DATE
       ,UDAT TYPE TRDIR-UDAT
       ,SLEN TYPE I
       ,RCOUNT TYPE I
       ,IDX TYPE I
       ,XTYPE(16) TYPE C
       ,XSTDCUST(8) TYPE C
       ,XOBJKEY(10) TYPE C
       ,XLOCTRANS(11) TYPE C
       ,XLASTCHG(8) TYPE C
       .

  LOOP AT ZREPTESTING INTO WREPTESTING.
    IDX = SY-TABIX.

    IF WREPTESTING-TYPE = 'Program' OR
       WREPTESTING-TYPE = 'Selected Program' OR
       WREPTESTING-TYPE = 'Include' OR
       WREPTESTING-TYPE = 'Func. Include'.

      IF WREPTESTING-TYPE = 'Func. Include'.
        OBJECT = 'FUGR'.
        SLEN = STRLEN( WREPTESTING-INCID ) - 3.
        OBJ_NAME = WREPTESTING-INCID+1(SLEN).
      ELSE.
        OBJECT = 'PROG'.
        OBJ_NAME = WREPTESTING-INCID.
      ENDIF.

      SELECT SINGLE
             GENFLAG
             DEVCLASS
        INTO
            (GENFLAG
            ,DEVCLASS
            )
        FROM
             TADIR
       WHERE
             PGMID = 'R3TR'
         AND OBJECT = OBJECT
         AND OBJ_NAME = OBJ_NAME.

      IF WREPTESTING-INCID+0(1) = 'Y' OR
         WREPTESTING-INCID+0(1) = 'Z' OR
         WREPTESTING-INCID+0(2) = 'LY' OR
         WREPTESTING-INCID+0(2) = 'LZ' OR
         WREPTESTING-INCID+0(5) = 'SAPMY' OR
         WREPTESTING-INCID+0(5) = 'SAPMZ' OR
         WREPTESTING-INCID+0(5) = 'SAPLY' OR
         WREPTESTING-INCID+0(5) = 'SAPLZ'.
          IF GENFLAG = 'X'.
            WREPTESTING-STDCUST = 'Standard'.
          ELSE.
            WREPTESTING-STDCUST = 'Custom'.
          ENDIF.
      ELSE.
        WREPTESTING-STDCUST = 'Standard'.
      ENDIF.

      SELECT
             count(*)
        INTO
             RCOUNT
        FROM
             ADIRACCESS
       WHERE
             PGMID = 'R3TR'
         AND OBJECT = OBJECT
         AND OBJ_NAME = OBJ_NAME.

      IF SY-SUBRC = 0.
        WREPTESTING-OBJKEY = 'Key exists'.
      ELSEIF WREPTESTING-STDCUST = 'Custom'.
        WREPTESTING-OBJKEY = ''.
      ELSE.
        WREPTESTING-OBJKEY = 'No Obj Key'.
      ENDIF.

      SELECT SINGLE
             KORRFLAG
        INTO
             KORRFLAG
        FROM
             TDEVC
       WHERE
             DEVCLASS = DEVCLASS.

      SELECT SINGLE
             UDAT
        INTO
             UDAT
        FROM
             TRDIR
       WHERE
             NAME = WREPTESTING-INCID.

      IF WREPTESTING-STDCUST <> 'Standard' OR
         WREPTESTING-OBJKEY <> 'No Obj Key'.
        IF KORRFLAG = 'X'.
          WREPTESTING-LOCTRANS = 'Transported'.

          SELECT
                 max( AS4DATE )
            INTO
                 AS4DATE
            FROM
                 V_E071EU
           WHERE
                 PGMID = 'R3TR'
             AND OBJECT = OBJECT
             AND OBJ_NAME = OBJ_NAME.

          IF SY-SUBRC = 0 AND AS4DATE <> '00000000'.
            WREPTESTING-LASTCHG = AS4DATE.
          ELSE.
            WREPTESTING-LASTCHG = UDAT.
          ENDIF.
        ELSE.
          WREPTESTING-LOCTRANS = 'Local Obj'.

          WREPTESTING-LASTCHG = UDAT.
        ENDIF.
      ENDIF.
    ENDIF.

    MODIFY ZREPTESTING INDEX IDX FROM WREPTESTING.
  ENDLOOP.

  YREPTESTING[] = ZREPTESTING[].
  SORT YREPTESTING BY ORDER DESCENDING.

  LOOP AT YREPTESTING INTO WREPTESTING.
    IDX = SY-TABIX.

    IF XSTDCUST <> 'Custom' AND
       WREPTESTING-STDCUST <> ''.
      XSTDCUST = WREPTESTING-STDCUST.
    ENDIF.
    IF XOBJKEY <> 'Key exists' AND
       WREPTESTING-OBJKEY <> ''.
      XOBJKEY = WREPTESTING-OBJKEY.
    ENDIF.
    IF XLOCTRANS <> 'Trnsp/Local' AND
       WREPTESTING-LOCTRANS <> ''.
      IF XLOCTRANS = 'Transported' AND
         WREPTESTING-LOCTRANS = 'Local'.
        XLOCTRANS = 'Trnsp/Local'.
      ELSEIF XLOCTRANS = 'Local' AND
         WREPTESTING-LOCTRANS = 'Transported'.
        XLOCTRANS = 'Trnsp/Local'.
      ELSEIF XLOCTRANS = '' AND
        XLOCTRANS = WREPTESTING-LOCTRANS.
      ENDIF.
    ENDIF.
    IF XLASTCHG < WREPTESTING-LASTCHG.
      XLASTCHG = WREPTESTING-LASTCHG.
    ELSEIF XLASTCHG = '' AND
      WREPTESTING-LASTCHG <> ''.
      XLASTCHG = WREPTESTING-LASTCHG.
    ENDIF.
    IF XTYPE <> 'Report Writer' AND
       XTYPE <> 'Query' AND
       XTYPE <> 'Query TCode' AND
       XTYPE <> 'Not Report TCode' AND
       XTYPE <> 'Rep. Tree' AND
       XTYPE <> 'Rep. Tree TCode' AND
       WREPTESTING-TYPE <> ''.
      XTYPE = WREPTESTING-TYPE.
    ENDIF.
    IF WREPTESTING-LEVEL = 0.
       WREPTESTING-XTYPE = 'Selection'.
       WREPTESTING-XSTDCUST = XSTDCUST.
       WREPTESTING-XOBJKEY = XOBJKEY.
       WREPTESTING-XLOCTRANS = XLOCTRANS.
       WREPTESTING-XLASTCHG = XLASTCHG.
       WREPTESTING-XTYPE = XTYPE.
      MODIFY YREPTESTING INDEX IDX FROM WREPTESTING.
      XTYPE = ''.
      XSTDCUST = ''.
      XOBJKEY = ''.
      XLOCTRANS = ''.
      XLASTCHG  = ''.
    ENDIF.
  ENDLOOP.

  SORT YREPTESTING BY ORDER.
ENDFORM.                    "REPORTEVAL
