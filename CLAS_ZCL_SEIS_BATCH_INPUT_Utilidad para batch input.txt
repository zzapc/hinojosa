
class ZCL_SEIS_BATCH_INPUT definition
  public
  final
  create public .

public section.

  constants CG_MODO_SCREEN_ERROR type CHAR1 value 'E' ##NO_TEXT.
  constants CG_MODO_SCREEN type CHAR1 value 'A' ##NO_TEXT.
  constants CG_MODO_NO_SCREEN type CHAR1 value 'N' ##NO_TEXT.
  constants CG_MODO_SCREEN_DEBUG type CHAR1 value 'P' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !VP_TRANSACCION type TCODE .
  methods INIT .
  methods SET_TRANSACCION
    importing
      !VP_TRANSACCION type TCODE .
  methods GET_TRANSACCION
    returning
      value(VP_TRANSACCION) type TCODE .
  methods GET_MODO
    returning
      value(VP_MODO) type CHAR1 .
  methods SET_MODO
    importing
      !VP_MODO type CHAR1 .
  methods ADD_DYNPRO
    importing
      !VP_PROGRAMA type SIMPLE
      !VP_DYNPRO type SIMPLE
      !TP_CAMPOS type /IWBEP/T_MGW_NAME_VALUE_PAIR optional .
  methods ADD_FIELD
    importing
      !VP_CAMPO type SIMPLE
      !VP_VALOR type SIMPLE .
  methods CALL_TRANSACTION
    returning
      value(TP_MENSAJES) type TAB_BDCMSGCOLL .
protected section.
private section.

  types:
    TT_MESSTAB type STANDARD TABLE OF bdcmsgcoll .

  data TRANSACCION type TCODE .
  data MODO type CHAR1 value 'E' ##NO_TEXT.
  data BDCDATA type TAB_BDCDATA .
endclass. "ZCL_SEIS_BATCH_INPUT definition
class ZCL_SEIS_BATCH_INPUT implementation.
  METHOD add_dynpro.
    APPEND INITIAL LINE TO bdcdata ASSIGNING FIELD-SYMBOL(<fs_bdcdata>).
    <fs_bdcdata>-program  = vp_programa.
    <fs_bdcdata>-dynpro   = vp_dynpro.
    <fs_bdcdata>-dynbegin = 'X'.


    LOOP AT tp_campos ASSIGNING FIELD-SYMBOL(<fs_campos>).
      add_field( vp_campo = <fs_campos>-name
                 vp_valor = <fs_campos>-value ).

    ENDLOOP.
  ENDMETHOD.
  METHOD add_field.
    APPEND INITIAL LINE TO bdcdata ASSIGNING FIELD-SYMBOL(<fs_bdcdata>).
    <fs_bdcdata>-fnam = vp_campo.
    <fs_bdcdata>-fval = vp_valor.
  ENDMETHOD.
  METHOD call_transaction.

    CALL TRANSACTION transaccion
      USING bdcdata
      MODE modo
      MESSAGES INTO tp_mensajes.
*  MOVE sy-subrc TO subrc.

    "if Processing without screens displayed. If a breakpoint is reached in one of the called transactions,
    "processing is terminated with sy-subrc equal to 1001. The field sy-msgty contains "S", sy-msgid contains "00",
    "sy-msgno contains "344", sy-msgv1 contains "SAPMSSY3", and sy-msgv2 contains "0131".
    IF sy-subrc = '1001'.
      READ TABLE tp_mensajes TRANSPORTING NO FIELDS WITH KEY msgtyp = 'E'.
      IF sy-subrc <> 0.
        READ TABLE tp_mensajes TRANSPORTING NO FIELDS WITH KEY msgtyp = 'A'.
      ENDIF.
      IF sy-subrc <> 0.
        APPEND INITIAL LINE TO tp_mensajes ASSIGNING FIELD-SYMBOL(<fs_mensajes>).
        <fs_mensajes>-msgid   = sy-msgid.
        <fs_mensajes>-msgnr   = sy-msgno.
        <fs_mensajes>-msgtyp  = 'E'.
        <fs_mensajes>-msgv1   = sy-msgv1.
        <fs_mensajes>-msgv2   = sy-msgv2.
        <fs_mensajes>-msgv3   = sy-msgv3.
        <fs_mensajes>-msgv4   = sy-msgv4.
        <fs_mensajes>-tcode   = transaccion.
      ENDIF.
    ENDIF.

    CLEAR bdcdata.
  ENDMETHOD.
  METHOD constructor.
    transaccion = vp_transaccion.
  ENDMETHOD.
  METHOD get_modo.
    vp_modo = modo.
  ENDMETHOD.
  METHOD get_transaccion.
    vp_transaccion = transaccion.
  ENDMETHOD.
  METHOD init.
    CLEAR bdcdata.
  ENDMETHOD.
  METHOD set_modo.
    modo = vp_modo.
  ENDMETHOD.
  METHOD set_transaccion.
    transaccion = vp_transaccion.
  ENDMETHOD.
