
class ZSCL_ASSEMBLY definition
  public
  create public .

public section.

  methods GET_TIPO
    importing
      !I_KDAUF type KDAUF
      !I_KDPOS type KDPOS
    returning
      value(R_TIPO) type ZTIPO_ASSEMBLY .
  methods GET_OF
    importing
      !I_KDAUF type KDAUF
      !I_KDPOS type KDPOS
    returning
      value(R_OF) type AUFNR .
protected section.
private section.
endclass. "ZSCL_ASSEMBLY definition
class ZSCL_ASSEMBLY implementation.
  method GET_OF.
    DATA: lt_status TYPE TABLE OF jstat INITIAL SIZE 0.
    DATA: ls_status TYPE jstat.
    CLEAR: r_of.
    FIELD-SYMBOLS: <fs_atp> TYPE atpcs.

    SELECT aufnr, objnr FROM aufk INTO TABLE @DATA(lt_objnr)
      WHERE kdauf = @i_kdauf
      AND kdpos = @i_kdpos.

    DATA: lt_objnr2 LIKE LINE OF lt_objnr.
    SORT lt_objnr BY aufnr ASCENDING.
    READ TABLE lt_objnr INDEX 1 INTO lt_objnr2.
    IF sy-subrc = 0.
      r_of = lt_objnr2-aufnr.
    ENDIF.


  endmethod.
  method GET_TIPO.
    DATA: lt_status TYPE TABLE OF jstat INITIAL SIZE 0.
    DATA: ls_status TYPE jstat.
    CLEAR: r_tipo.
    FIELD-SYMBOLS: <fs_atp> TYPE atpcs.

    SELECT aufnr, objnr FROM aufk INTO TABLE @DATA(lt_objnr)
      WHERE kdauf = @i_kdauf
      AND kdpos = @i_kdpos.

    DATA: lt_objnr2 LIKE LINE OF lt_objnr.
    SORT lt_objnr BY aufnr ASCENDING.
    READ TABLE lt_objnr INDEX 1 INTO lt_objnr2.

    IF sy-subrc = 0.
        CALL FUNCTION 'STATUS_READ'
            EXPORTING
              client           = sy-mandt
              objnr            = lt_objnr2-objnr
             ONLY_ACTIVE      = 'X'
*         IMPORTING
*             OBTYP            =
*             STSMA            =
*             STONR            =
            TABLES
              status           = lt_status
            EXCEPTIONS
              object_not_found = 1
              OTHERS           = 2.

          READ TABLE lt_status INTO ls_status WITH KEY stat = 'I0001'.
          IF sy-subrc NE 0.
            r_tipo = 2. "Assembly 'Hinojosa' OF Lib, Ctec o Cerr
          ELSE.
            r_tipo = 1. "Assembly estándar
          ENDIF.
      ELSE.
          r_tipo = 3. "Assembly 'Hinojosa' OP sin OF en segmento de pedido (comportamiento estándar igual que tipo 1)
      ENDIF.
  endmethod.
endclass. "ZSCL_ASSEMBLY implementation
