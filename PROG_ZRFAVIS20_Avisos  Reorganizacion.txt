
REPORT rfavis20
       MESSAGE-ID fa
       NO STANDARD PAGE HEADING
       LINE-SIZE 79.

TABLES: avik,  *avik,                            " Kopf
        avip,                                   " Position
        bhdgd,                                  " Batch-Heading
        t053g.                                  " Avisarten

TABLES:  rfradc.
TABLES:  rfpdo2.

*eject
************************************************************************
*        Selektionsbild
************************************************************************
SELECT-OPTIONS:
         bukrs          FOR  avik-bukrs,
         koart          FOR  avik-koart,
         konto          FOR  avik-konto,
         avsid          FOR  avik-avsid.

PARAMETERS: xacon TYPE xfeld DEFAULT ''.

SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-b01.
SELECT-OPTIONS:
         erdat          FOR  avik-erdat,
         ernam          FOR  avik-ernam.
SELECTION-SCREEN END   OF BLOCK b01.
SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE text-b02.
PARAMETERS:
         varnr          LIKE rfpdo2-avisvarn MEMORY ID avl.
SELECTION-SCREEN END   OF BLOCK b02.
SELECTION-SCREEN BEGIN OF BLOCK b03 WITH FRAME TITLE text-b03.
PARAMETERS:
         xvoli          LIKE rfpdo2-avisvoli    "Vorschlagsliste
           DEFAULT 'X'.
SELECTION-SCREEN END   OF BLOCK b03.

*eject
************************************************************************
*        Interne Tabellen
************************************************************************
* ------ ... Avisarten / Löschbarkeit ----------------------------------
DATA:    BEGIN OF it053g OCCURS 5.
           INCLUDE STRUCTURE t053g.
         DATA:    END   OF it053g.

* ------ ... Löschbare Avise -------------------------------------------
DATA:    BEGIN OF tavik OCCURS 100.
DATA:      xpick(1) TYPE c.             " Avis ausgewählt
           INCLUDE STRUCTURE avik.
           DATA:    END   OF tavik.

*eject
************************************************************************
*        Strukturen
************************************************************************
* ------ .... HIDE-Felder ----------------------------------------------
DATA: BEGIN OF hide,
        bukrs    LIKE avik-bukrs,
        koart    LIKE avik-koart,
        konto    LIKE avik-konto,
        avsid    LIKE avik-avsid,
        avsrt    LIKE avik-avsrt,
        xpick(1) TYPE c,
      END   OF hide.

*eject
************************************************************************
*        Einzelfelder
************************************************************************
DATA: count_avik  TYPE i,             " selektierte Avise
      count_dele  TYPE i,             " gelöschte Avise
      count_keep  TYPE i,             " zu haltende Avise
      count_nota  TYPE i,             " noch nicht löschbare Avise
      i           TYPE i,
      lsind       LIKE sy-lsind,
      lstyp(1)    TYPE c,             " Listtyp: D=Daten,S=Statist
      ok-code(4)  TYPE c,
      spueb1(30)  TYPE c,             " Spaltenüberschrift
      spueb2(30)  TYPE c,             " Spaltenüberschrift
      spueb3(30)  TYPE c,             " Spaltenüberschrift
      spueb4(30)  TYPE c,             " Spaltenüberschrift
      spueb5(30)  TYPE c,             " Spaltenüberschrift
      varnr_saved TYPE c,
      xpick(1)    TYPE c.

DATA:    vbdia(1)       TYPE c.             " Löschen im Dialog?

DATA: lt_t001  TYPE TABLE OF t001,                       "Note2563106
      l_t001   LIKE LINE OF lt_t001,                      "Note2563106
      mess_out TYPE c.                                  "Note2563106


*eject
************************************************************************
*        Initialization
************************************************************************
INITIALIZATION.

* ------ Buchungskreis: Parmeter 'BUK' ---------------------------------
  GET PARAMETER ID 'BUK' FIELD bukrs-low.
  IF bukrs-low NE space.
    bukrs-high   = ' '.
    bukrs-option = 'EQ'.
    bukrs-sign   = 'I'.
    APPEND bukrs.
  ENDIF.

* ------ Kontoart Debitor ----------------------------------------------
  koart-low    = 'D'.
  koart-high   = ' '.
  koart-option = 'EQ'.
  koart-sign   = 'I'.
  APPEND koart.

* ------ Konto: Parameter 'KUN' ----------------------------------------
  GET PARAMETER ID 'KUN' FIELD konto-low.
  IF konto-low NE space.
    konto-high   = ' '.
    konto-option = 'EQ'.
    konto-sign   = 'I'.
    APPEND konto.
  ENDIF.

* ------ Angelegt von: SY-UNAME ----------------------------------------
  ernam-low    = sy-uname.
  ernam-high   = ' '.
  ernam-option = 'EQ'.
  ernam-sign   = 'I'.
  APPEND ernam.

*eject
************************************************************************
*        Start of Selection
************************************************************************
START-OF-SELECTION.

* ------ Default-Listvariante setzen -----------------------------------
  IF varnr IS INITIAL.
    varnr = '1'.
  ENDIF.

* ------ Batchheading --------------------------------------------------
  bhdgd-inifl = '0'.
  bhdgd-lines = sy-linsz.              " Zeilenbreite aus Report
  bhdgd-uname = sy-uname.              " Benutzername
  bhdgd-repid = sy-repid.              " Name des ABAP-Programmes
  bhdgd-line1 = sy-title.              " Titel des ABAP-Programmes
  bhdgd-separ = space.                 " Keine Listseparation

* Begin of note 2563106
* ------ Check company code authorization ------------------------------
  SELECT * FROM t001 INTO TABLE lt_t001
           WHERE bukrs IN bukrs.
  IF sy-subrc = 0.
    REFRESH bukrs.
    LOOP AT lt_t001 INTO l_t001.
      MOVE l_t001-bukrs TO bukrs-low.
      bukrs-sign = 'I'.
      bukrs-option = 'EQ'.
      APPEND bukrs.
    ENDLOOP.

    LOOP AT bukrs.
      AUTHORITY-CHECK OBJECT 'F_AVIK_BUK '
           ID 'BUKRS' FIELD bukrs-low
           ID 'ACTVT' FIELD '03'.
      IF sy-subrc NE 0.
        DELETE bukrs.
        IF mess_out IS INITIAL.
          MESSAGE s108.
          mess_out = 'X'.
        ENDIF.
      ENDIF.
    ENDLOOP.

    IF bukrs[] IS INITIAL.
      EXIT.
    ENDIF.
  ENDIF.
* End of note 2563106

* ------ Löschbare Avise einlesen --------------------------------------
  PERFORM daten_einlesen.

* ------ Vorschlagsliste / Sofort löschen ------------------------------
  IF xvoli = space.
    PERFORM avise_loeschen.
  ELSE.
    PERFORM liste_ausgeben.
  ENDIF.

*eject
*-----------------------------------------------------------------------
*       AT USER-COMMAND
*-----------------------------------------------------------------------
AT USER-COMMAND.
  CASE sy-ucomm.

* ------ Alle löschen --------------------------------------------------
    WHEN 'DEL'.
      PERFORM markierung_uebernehmen.
      PERFORM avise_loeschen.

* ------ Alle entmarkieren ---------------------------------------------
    WHEN 'MAOF'.
      LOOP AT tavik.
        CLEAR: tavik-xpick.
        MODIFY tavik.
      ENDLOOP.
      sy-lsind = sy-lsind - 1.
      PERFORM liste_ausgeben.

* ------ Alle markieren ------------------------------------------------
    WHEN 'MAON'.
      LOOP AT tavik.
        tavik-xpick = 'X'.
        MODIFY tavik.
      ENDLOOP.
      sy-lsind = sy-lsind - 1.
      PERFORM liste_ausgeben.

* ------ Anzeigen ------------------------------------------------------
    WHEN 'SEL'.
      CLEAR: avik.
      MOVE-CORRESPONDING hide TO avik.
      CHECK avik-avsid NE space.
      CALL FUNCTION 'REMADV_DISPLAY'
        EXPORTING
          i_avik   = avik
          i_rfradc = rfradc
        IMPORTING
          e_rfradc = rfradc.
* ------- Sichern nach 'Anz->Ändern' eventuell nötig -------------------
      IF rfradc-okcod EQ 'UPDA'.
        CALL FUNCTION 'REMADV_SAVE_DB_ALL'.
      ENDIF.

* ------ Zeilenaufbau wechseln -----------------------------------------
    WHEN 'ZA'.
      PERFORM variante_wechseln.
      sy-lsind = sy-lsind - 1.
      PERFORM liste_ausgeben.
  ENDCASE.

*eject
*-----------------------------------------------------------------------
*       TOP-OF-PAGE
*-----------------------------------------------------------------------
TOP-OF-PAGE.
  PERFORM top.

*eject
*-----------------------------------------------------------------------
*       TOP-OF-PAGE
*-----------------------------------------------------------------------
TOP-OF-PAGE DURING LINE-SELECTION.
  PERFORM top.

*eject
************************************************************************
*        MODULE EXIT
************************************************************************
MODULE exit.
  SET SCREEN 0.
  LEAVE SCREEN.
ENDMODULE.                    "EXIT

*eject
************************************************************************
*        MODULE PBO
************************************************************************
MODULE pbo OUTPUT.
  SET PF-STATUS 'POP'.
  SET TITLEBAR  'POP'.
ENDMODULE.                    "PBO OUTPUT

*******   FORM-Routinen ************************************************

*eject
************************************************************************
*        FORM AVISE_LOESCHEN
************************************************************************
FORM avise_loeschen.

* VBDIA = 'X' --> LÖSCHEN IM DIALOG
  CLEAR: count_dele.
  LOOP AT tavik WHERE xpick NE space.
*    *AVIK = TAVIK+1.
    MOVE-CORRESPONDING tavik TO *avik.
    CALL FUNCTION 'REMADV_AUTHORITY_CHECK'                  "note791234
      EXPORTING
        i_aktyp              = 'D'
        i_avsrt              = tavik-avsrt
        i_bukrs              = tavik-bukrs
      EXCEPTIONS
        no_authority         = 01
        error_in_advice_type = 02.
    IF sy-subrc EQ 0.
      count_dele = count_dele + 1.
    ELSE.                                                   "Note1063317
      MESSAGE ID  sy-msgid TYPE sy-msgty NUMBER sy-msgno    "Note1063317
            WITH  sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.      "Note1063317
    ENDIF.
    IF vbdia = space.
      CALL FUNCTION 'REMADV_DELETE' IN UPDATE TASK
        EXPORTING
          i_avik          = *avik
          i_popup         = space
          i_without_check = 'X'.                      "note791234
    ELSE.
      CALL FUNCTION 'REMADV_DELETE'
        EXPORTING
          i_avik          = *avik
          i_popup         = space
          i_without_check = 'X'.                      "note791234
      COMMIT WORK.
    ENDIF.
  ENDLOOP.
  COMMIT WORK.
  MESSAGE s046 WITH count_dele.
  CALL FUNCTION 'REMADV_INIT'.
  LEAVE TO TRANSACTION sy-tcode.
ENDFORM.                    "AVISE_LOESCHEN

*eject
************************************************************************
*        FORM DATEN_EINLESEN
************************************************************************
FORM daten_einlesen.
  REFRESH: tavik.

  PERFORM loeschbarkeit_pruefen.
  SELECT * FROM avik WHERE bukrs IN bukrs
                       AND koart IN koart
                       AND konto IN konto
                       AND avsid IN avsid.
    CHECK avik-ernam IN ernam.
    CHECK avik-erdat IN erdat.
    count_avik = count_avik + 1.

* ------ Avis explizit als nicht löschbar gekennzeichnet? --------------
    IF avik-xkeep NE space.
      count_keep = count_keep + 1.
    ENDIF.
    CHECK avik-xkeep EQ space.

* ------ Anzahl Tage noch nicht erreicht? ------------------------------
    LOOP AT it053g WHERE avsrt = avik-avsrt.
      EXIT.
    ENDLOOP.
    CHECK sy-subrc = 0.
    i = sy-datum - avik-erdat.
    IF it053g-anztg > 0.
      IF i <= it053g-anztg.
        count_nota = count_nota + 1.
        CHECK 1 = 2.
      ENDIF.
    ENDIF.

* ------ Aufnehmen in TAVIK --------------------------------------------
    count_dele = count_dele + 1.
    MOVE-CORRESPONDING avik TO tavik.
    tavik-xpick = 'X'.
    APPEND tavik.
  ENDSELECT.

  "si el campo chacon está marcado, ampliamos la selección de avisos para
  "detectar aquellos avisos que no han compensado factura y han generado
  "una posición a cuenta
  TYPES: BEGIN OF tipo_aviso,
           avsid TYPE avsid.
  TYPES: END OF tipo_aviso.
  TYPES: tty_aviso TYPE TABLE OF tipo_aviso.
  DATA: t_avisos  TYPE tty_aviso,
        wa_avisos TYPE LINE OF tty_aviso,
        lv_ind type sy-tabix.


  IF xacon = 'X' and tavik[] is not initial.
    SELECT avik~avsid FROM avik
      INNER JOIN avip ON avip~avsid = avik~avsid
      INTO TABLE t_avisos
      FOR ALL ENTRIES IN tavik
      WHERE avik~bukrs = tavik-bukrs AND
            avik~koart = tavik-koart AND
            avik~konto = tavik-konto AND
            avik~avsid = tavik-avsid AND
            avip~xacon EQ 'X'.

    SORT t_avisos BY avsid ASCENDING.
    DELETE ADJACENT DUPLICATES FROM t_avisos.

    IF t_avisos[] IS NOT INITIAL.
      LOOP AT tavik.
        lv_ind = sy-tabix.
        READ TABLE t_avisos INTO wa_avisos WITH KEY avsid = tavik-avsid .
        IF sy-subrc <> 0.
          DELETE tavik index lv_ind.
          count_avik = count_avik - 1.
          count_dele = count_dele - 1.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.

ENDFORM.                    "DATEN_EINLESEN

*eject
************************************************************************
*        FORM HIDE
************************************************************************
FORM hide.
  MOVE-CORRESPONDING tavik TO hide.
  hide-xpick = xpick.
  HIDE hide.
ENDFORM.                    "HIDE

*eject
************************************************************************
*        FORM LISTE_AUSGEBEN
************************************************************************
FORM liste_ausgeben.

* ------ Status, Initialisierungen -------------------------------------
  lstyp = 'D'.
  CLEAR: hide.
  SET PF-STATUS 'STDA'.
  FORMAT COLOR COL_NORMAL INTENSIFIED OFF.

* ------ Avise ---------------------------------------------------------
  LOOP AT tavik.
    xpick = tavik-xpick.
    WRITE: /   sy-vline NO-GAP,
               xpick AS CHECKBOX.

    CASE varnr.
      WHEN '1'.
        WRITE: 3 sy-vline NO-GAP,
                 tavik-bukrs,
                 sy-vline NO-GAP,
                 tavik-konto,
                 sy-vline NO-GAP,
                 tavik-avsid,
                 sy-vline NO-GAP,
                 tavik-ernam,
                 sy-vline NO-GAP,
                 tavik-erdat DD/MM/YY,
                 sy-vline NO-GAP.
      WHEN '2'.
        WRITE: 3 sy-vline NO-GAP,
                 tavik-bukrs,
                 sy-vline NO-GAP,
                 tavik-konto,
                 sy-vline NO-GAP,
                 tavik-avsid,
                 sy-vline NO-GAP,
                 tavik-avtxt,
                 sy-vline NO-GAP.
      WHEN '3'.
        WRITE: 3 sy-vline NO-GAP,
                 tavik-bukrs,
                 sy-vline NO-GAP,
                 tavik-konto,
                 sy-vline NO-GAP,
                 tavik-avsid,
                 sy-vline NO-GAP,
                 tavik-rwbtr CURRENCY tavik-waers,
                 sy-vline NO-GAP,
                 tavik-rwskt CURRENCY tavik-waers,
                 sy-vline NO-GAP.
    ENDCASE.
    PERFORM hide.
  ENDLOOP.

* ------ Abschließende Strichzeile -------------------------------------
  CASE varnr.
    WHEN '1'.
      WRITE: /   sy-vline NO-GAP,
                 sy-uline(62),
              63 sy-vline NO-GAP.
    WHEN '2'.
      WRITE: /   sy-vline NO-GAP,
                 sy-uline(65),
              66 sy-vline NO-GAP.
    WHEN '3'.
      WRITE: /   sy-vline NO-GAP,
                 sy-uline(78),
              79 sy-vline NO-GAP.
  ENDCASE.

* ------ Statistik -----------------------------------------------------
  PERFORM statistik.
  CLEAR: hide.
ENDFORM.                    "LISTE_AUSGEBEN

*eject
************************************************************************
*        FORM LOESCHBARKEIT_PRUEFEN
************************************************************************
FORM loeschbarkeit_pruefen.
  SELECT * FROM t053g APPENDING TABLE it053g.
ENDFORM.                    "LOESCHBARKEIT_PRUEFEN

*eject
************************************************************************
*        FORM MARKIERUNG_UEBERNEHMEN
************************************************************************
FORM markierung_uebernehmen.
  DO.
    READ LINE sy-index INDEX lsind FIELD VALUE xpick.
    IF sy-subrc = 0.
      CHECK hide-avsid NE space.
*     ANZKR = ANZKR + 1.
      LOOP AT tavik WHERE bukrs = hide-bukrs
                    AND   koart = hide-koart
                    AND   konto = hide-konto
                    AND   avsid = hide-avsid.
        tavik-xpick = xpick.
        MODIFY tavik.
      ENDLOOP.
    ELSE.
      EXIT.
    ENDIF.
  ENDDO.
ENDFORM.                    "MARKIERUNG_UEBERNEHMEN

*eject
************************************************************************
*        FORM STATISTIK
************************************************************************
FORM statistik.
  lstyp = 'S'.
  IF count_avik = 0.
    CALL FUNCTION 'POPUP_NO_LIST'.
  ELSE.
    NEW-PAGE.
    FORMAT COLOR COL_TOTAL INTENSIFIED.
    WRITE: /3 text-001, count_avik.
    WRITE: /3 text-004, count_dele.
    WRITE: /3 text-002, count_keep.
    WRITE: /3 text-003, count_nota.
  ENDIF.
ENDFORM.                    "STATISTIK

*eject
************************************************************************
*        FORM TOP
************************************************************************
FORM top.
  PERFORM batch-heading(rsbtchh0).
  SKIP 2.
  FORMAT COLOR COL_HEADING INTENSIFIED.
  CASE lstyp.
    WHEN 'D'.
      CLEAR: spueb1, spueb2, spueb3, spueb4, spueb5.
      CASE varnr.
        WHEN '1'.
          spueb1 = text-s01.
          spueb2 = text-s02.
          spueb3 = text-s03.
          spueb4 = text-s04.
          spueb5 = text-s05.
        WHEN '2'.
          spueb1 = text-s01.
          spueb2 = text-s02.
          spueb3 = text-s03.
          spueb4 = text-s06.
        WHEN '3'.
          spueb1 = text-s01.
          spueb2 = text-s02.
          spueb3 = text-s03.
          spueb4 = text-s07.
          spueb5 = text-s08.
      ENDCASE.
      TRANSLATE spueb1 USING '; '.
      TRANSLATE spueb2 USING '; '.
      TRANSLATE spueb3 USING '; '.
      TRANSLATE spueb4 USING '; '.
      TRANSLATE spueb5 USING '; '.
      CASE varnr.
        WHEN '1'.
          WRITE: /   sy-uline(63).
          WRITE: /   sy-vline NO-GAP,
                   3 sy-vline NO-GAP,
                   4 spueb1,
                   9 sy-vline NO-GAP,
                  10 spueb2,
                  21 sy-vline NO-GAP,
                  22 spueb3,
                  39 sy-vline NO-GAP,
                  40 spueb4(12),
                  53 sy-vline NO-GAP,
                  54 spueb5(9),
                  63 sy-vline NO-GAP.
          WRITE: /   sy-uline(63),
                  63 sy-vline NO-GAP.
        WHEN '2'.
          WRITE: /   sy-uline(66).
          WRITE: /   sy-vline NO-GAP,
                   3 sy-vline NO-GAP,
                   4 spueb1,
                   9 sy-vline NO-GAP,
                  10 spueb2,
                  21 sy-vline NO-GAP,
                  22 spueb3,
                  39 sy-vline NO-GAP,
                  40 spueb4(25),
                  66 sy-vline NO-GAP.
          WRITE: /   sy-uline(66),
                  66 sy-vline NO-GAP.
        WHEN '3'.
          WRITE: /   sy-uline(79).
          WRITE: /   sy-vline NO-GAP,
                   3 sy-vline NO-GAP,
                   4 spueb1,
                   9 sy-vline NO-GAP,
                  10 spueb2,
                  21 sy-vline NO-GAP,
                  22 spueb3,
                  39 sy-vline NO-GAP,
                  40 spueb4,
                  59 sy-vline NO-GAP,
                  60 spueb5(18),
                  79 sy-vline NO-GAP.
          WRITE: /   sy-uline(79),
                  79 sy-vline NO-GAP.
      ENDCASE.
    WHEN 'S'.
      WRITE: /3 text-sta.
  ENDCASE.
ENDFORM.                    "TOP

*eject
*---------------------------------------------------------------------*
*        FORM VARIANTE_WECHSELN                                       *
*---------------------------------------------------------------------*
*        Erfragen der Variante auf einem Popup                        *
*---------------------------------------------------------------------*
FORM variante_wechseln.

* ------ VALUES füllen mit VARNR ---------------------------------------
  varnr_saved = varnr.
  CALL SCREEN 1101 STARTING AT 10 10
                   ENDING   AT 40 13.
  IF ok-code = 'F12'.
    CLEAR: ok-code.
    varnr = varnr_saved.
  ELSE.
    varnr = rfpdo2-avisvarn.
    SET PARAMETER ID 'AVL' FIELD varnr.
  ENDIF.
ENDFORM.                    "VARIANTE_WECHSELN
