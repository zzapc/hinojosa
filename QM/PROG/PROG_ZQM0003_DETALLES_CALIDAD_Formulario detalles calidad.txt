*&---------------------------------------------------------------------*
*& Report  ZQM0003_DETALLES_CALIDAD
*&
*&---------------------------------------------------------------------*
*&
*& Formulario de detalles de calidad
*&---------------------------------------------------------------------*
REPORT zqm0003_detalles_calidad.

*********************************
* Tipos de datos
*********************************
TABLES: zvcxi_pcs_td100.

*********************************
* Variables globales
*********************************
DATA tg_alv   TYPE TABLE OF zqm0003_s_alv.
DATA: rg_alv  TYPE REF TO cl_salv_table.


*********************************
* Pantalla de selección
*********************************
SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-b01.
PARAMETERS: p_werks TYPE t001w-werks OBLIGATORY.
SELECT-OPTIONS: s_board FOR zvcxi_pcs_td100-board,
                s_flute FOR zvcxi_pcs_td100-flute.
SELECTION-SCREEN END OF BLOCK b01.



*********************************
* Eventos
*********************************
START-OF-SELECTION.
  PERFORM f_start_of_selection.

END-OF-SELECTION.
  PERFORM f_mostrar_alv.





*********************************
* Rutinas
*********************************
*&---------------------------------------------------------------------*
*&      Form  F_START_OF_SELECTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_start_of_selection .
  CLEAR: tg_alv.


  SELECT zvcxi_pcs_td100~gbogv, zvcxi_pcs_td100~valfr, zvcxi_pcs_td100~valto, zvcxi_pcs_td100~board, zvcxi_pcs_td100~flute,
         zvcxi_pcs_td110~gbopv, zvcxi_pcs_td110~werks, zvcxi_pcs_td110~apboa
    INTO TABLE @DATA(tl_td110)
    FROM zvcxi_pcs_td110 INNER JOIN zvcxi_pcs_td100 ON zvcxi_pcs_td100~gbogv = zvcxi_pcs_td110~gbogv
    WHERE zvcxi_pcs_td110~werks =  @p_werks AND
          zvcxi_pcs_td100~board IN @s_board AND
          zvcxi_pcs_td100~flute IN @s_flute AND
          zvcxi_pcs_td100~mboar = 'S'.
  CHECK sy-subrc = 0.

  SELECT gbogv, idest, langu, descr
    INTO TABLE @DATA(tl_td101)
    FROM zvcxi_pcs_td101
    FOR ALL ENTRIES IN @tl_td110
    WHERE gbogv = @tl_td110-gbogv AND
          langu = @sy-langu.


  SELECT gbopv, iclat, clava
    INTO TABLE @DATA(tl_td112)
    FROM zvcxi_pcs_td112
    FOR ALL ENTRIES IN @tl_td110
    WHERE gbopv = @tl_td110-gbopv AND
          iclat IN ('BTC', 'ETC').

  SELECT gbopv, iclat, clavc
    INTO TABLE @DATA(tl_td116)
    FROM zvcxi_pcs_td116
    FOR ALL ENTRIES IN @tl_td110
    WHERE gbopv = @tl_td110-gbopv AND
          iclat IN ('ALLOWED_PRINT', 'OBS').

  SELECT zvcxi_pcs_td102~gbogv, zvcxi_pcs_td102~bpaid, zvcxi_pcs_td102~bpmat, makt~maktx
    INTO TABLE @DATA(tl_td102)
    FROM zvcxi_pcs_td102 LEFT OUTER JOIN makt ON makt~matnr = zvcxi_pcs_td102~bpmat
    FOR ALL ENTRIES IN @tl_td110
    WHERE zvcxi_pcs_td102~gbogv = @tl_td110-gbogv AND
          zvcxi_pcs_td102~bpaid IN ('L1', 'M1', 'L2', 'M2', 'L3').

  DATA tl_flute_rg TYPE RANGE OF zvcxi_pcs_td100-flute.
  DATA wl_flute_rg LIKE LINE OF tl_flute_rg.

  LOOP AT tl_td110 ASSIGNING FIELD-SYMBOL(<fs_td110>).
    APPEND INITIAL LINE TO tg_alv ASSIGNING FIELD-SYMBOL(<fs_alv>).
    MOVE-CORRESPONDING <fs_td110> TO <fs_alv>.

    wl_flute_rg = VALUE #( sign = 'I' option = 'EQ' low = <fs_td110>-flute ).
    COLLECT wl_flute_rg INTO tl_flute_rg.



    LOOP AT tl_td101 ASSIGNING FIELD-SYMBOL(<fs_td0101>) WHERE gbogv = <fs_td110>-gbogv.
      CASE <fs_td0101>-idest.
        WHEN 'CUDES'.
          <fs_alv>-descr_ref_cliente  = <fs_td0101>-descr.
        WHEN 'GLDES'.
          <fs_alv>-descr_ref          = <fs_td0101>-descr.
        WHEN 'PLDES'.
          <fs_alv>-descr_ref_planta   = <fs_td0101>-descr.
        WHEN 'SLDSC'.
          <fs_alv>-descr_venta        = <fs_td0101>-descr.
      ENDCASE.
    ENDLOOP.

    LOOP AT tl_td112 ASSIGNING FIELD-SYMBOL(<fs_td112>) WHERE gbopv = <fs_td110>-gbopv.
      CASE <fs_td112>-iclat.
        WHEN 'BTC'.
          <fs_alv>-mullen = <fs_td112>-clava.
        WHEN 'ETC'.
          <fs_alv>-ect = <fs_td112>-clava.
      ENDCASE.
    ENDLOOP.

    LOOP AT tl_td116 ASSIGNING FIELD-SYMBOL(<fs_td116>) WHERE gbopv = <fs_td110>-gbopv.
      CASE <fs_td116>-iclat.
        WHEN 'ALLOWED_PRINT'.
          <fs_alv>-impr_permitidas = <fs_td116>-clavc.
        WHEN 'OBS'.
          <fs_alv>-observaciones = <fs_td116>-clavc.
      ENDCASE.
    ENDLOOP.

    LOOP AT tl_td102 ASSIGNING FIELD-SYMBOL(<fs_td102>) WHERE gbogv = <fs_td110>-gbogv.
      CASE <fs_td102>-bpaid.
        WHEN 'L1'.
          <fs_alv>-matnr_l1 = <fs_td102>-bpmat.
          <fs_alv>-maktx_l1 = <fs_td102>-maktx.
        WHEN 'L2'.
          <fs_alv>-matnr_l2 = <fs_td102>-bpmat.
          <fs_alv>-maktx_l2 = <fs_td102>-maktx.
        WHEN 'L3'.
          <fs_alv>-matnr_l3 = <fs_td102>-bpmat.
          <fs_alv>-maktx_l3 = <fs_td102>-maktx.
        WHEN 'M1'.
          <fs_alv>-matnr_m1 = <fs_td102>-bpmat.
          <fs_alv>-maktx_m1 = <fs_td102>-maktx.
        WHEN 'M2'.
          <fs_alv>-matnr_m2 = <fs_td102>-bpmat.
          <fs_alv>-maktx_m2 = <fs_td102>-maktx.
      ENDCASE.

    ENDLOOP.
  ENDLOOP.



  "GRAMAJE
  IF tg_alv IS NOT INITIAL.
    SELECT matnr, matkl, meins, zzgramaje
      INTO TABLE @DATA(tl_mara)
      FROM mara
      FOR ALL ENTRIES IN @tg_alv
      WHERE matnr = @tg_alv-matnr_l1.
    SELECT matnr, matkl, meins, zzgramaje
      APPENDING TABLE @tl_mara
      FROM mara
      FOR ALL ENTRIES IN @tg_alv
      WHERE matnr = @tg_alv-matnr_l2.
    SELECT matnr, matkl, meins, zzgramaje
      APPENDING TABLE @tl_mara
      FROM mara
      FOR ALL ENTRIES IN @tg_alv
      WHERE matnr = @tg_alv-matnr_l3.
    SELECT matnr, matkl, meins, zzgramaje
      APPENDING TABLE @tl_mara
      FROM mara
      FOR ALL ENTRIES IN @tg_alv
      WHERE matnr = @tg_alv-matnr_m1.
    SELECT matnr, matkl, meins, zzgramaje
      APPENDING TABLE @tl_mara
      FROM mara
      FOR ALL ENTRIES IN @tg_alv
      WHERE matnr = @tg_alv-matnr_m2.
    SORT tl_mara BY matnr.
    DELETE ADJACENT DUPLICATES FROM tl_mara COMPARING matnr.


    "Obtengo factor
    SELECT werks, flute, bpaid, bpfac
      INTO TABLE @DATA(tl_td212)
      FROM zvcxi_pcs_td212
      FOR ALL ENTRIES IN @tg_alv
      WHERE flute = @tg_alv-flute AND
            werks = @tg_alv-werks AND
            bpaid IN ('L1', 'L2', 'L3', 'M1', 'M2').

    "Obtener material almidón
    DATA vl_gramaje_alm TYPE zv_gramaje.
    DATA: tl_allocvaluesnum  TYPE TABLE OF bapi1003_alloc_values_num,
          tl_allocvalueschar TYPE TABLE OF bapi1003_alloc_values_char,
          tl_allocvaluescurr TYPE TABLE OF bapi1003_alloc_values_curr,
          tl_return          TYPE TABLE OF bapiret2.

    DATA vl_objectkey TYPE bapi1003_key-object.
    SELECT SINGLE stmat
      FROM zvcxi_pcs_td250
      INTO @DATA(vl_stmat)
      WHERE starc = 'REG' AND
            werks = @p_werks.

    IF sy-subrc = 0.
      CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
        EXPORTING
          input        = vl_stmat
        IMPORTING
          output       = vl_objectkey
        EXCEPTIONS
          length_error = 1
          OTHERS       = 2.
    ENDIF.
    IF sy-subrc = 0.
      CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
        EXPORTING
          objectkey       = vl_objectkey
          objecttable     = 'MARA'
          classnum        = 'HP_AVGCO'
          classtype       = '001'
        TABLES
          allocvaluesnum  = tl_allocvaluesnum
          allocvalueschar = tl_allocvalueschar
          allocvaluescurr = tl_allocvaluescurr
          return          = tl_return.
    ENDIF.

    IF tl_allocvaluesnum IS NOT INITIAL.
      "Gramos por m2
      READ TABLE tl_allocvaluesnum ASSIGNING FIELD-SYMBOL(<fs_allocvaluesnum>) WITH KEY charact = 'HP_AVG_CONS'.
      IF sy-subrc = 0.
        vl_gramaje_alm = <fs_allocvaluesnum>-value_from.
      ENDIF.

      "Porcentaje cobertura
      READ TABLE tl_allocvaluesnum ASSIGNING <fs_allocvaluesnum> WITH KEY charact = 'HP_SLDCO'.
      IF sy-subrc = 0.
        vl_gramaje_alm = vl_gramaje_alm * <fs_allocvaluesnum>-value_from / 100.
      ENDIF.
    ENDIF.

    "Factor almidón y factor canal
    SELECT flute, werks, arbpl, starf, bgwht, valfr
      FROM zvcxi_pcs_td211
      INTO TABLE @DATA(tl_td211)
      WHERE werks = @p_werks AND
            flute IN @tl_flute_rg.
    SORT tl_td211 BY flute werks arbpl starf valfr DESCENDING.

  ENDIF.


  IF tl_mara IS NOT INITIAL.
    "Espesor
    SELECT matnr, hoehe
      INTO TABLE @DATA(tl_marm)
      FROM marm
      FOR ALL ENTRIES IN @tl_mara
      WHERE matnr = @tl_mara-matnr AND
            meinh = @tl_mara-meins.

    "Gramaje reciclado
    SELECT matkl, zznoreciclado
      INTO TABLE @DATA(tl_ztmm0049)
      FROM ztmm0049
        FOR ALL ENTRIES IN @tl_mara
      WHERE matkl = @tl_mara-matkl.
  ENDIF.




  DATA: vl_gramaje_alm_aux   TYPE zv_gramaje,
        vl_gramaje_papel     TYPE zv_gramaje,
        vl_gramaje_sum       TYPE zv_gramaje,
        vl_gramaje_reciclado TYPE zv_gramaje,
        vl_espesor           type p DECIMALS 3.

  DATA tl_papeles LIKE tl_mara.
  LOOP AT tg_alv ASSIGNING <fs_alv>.
    CLEAR: vl_gramaje_sum, vl_gramaje_alm_aux, vl_gramaje_reciclado, vl_espesor.
    CLEAR tl_papeles.

    "L1
    READ TABLE tl_mara ASSIGNING FIELD-SYMBOL(<fs_mara>) WITH KEY matnr = <fs_alv>-matnr_l1.
    IF sy-subrc = 0.
      READ TABLE tl_td212 ASSIGNING FIELD-SYMBOL(<fs_td212>) WITH KEY flute = <fs_alv>-flute
                                                                      bpaid = 'L1'.
      IF sy-subrc = 0.
        vl_gramaje_papel = <fs_mara>-zzgramaje * <fs_td212>-bpfac.
        ADD vl_gramaje_papel TO vl_gramaje_sum.

        READ TABLE tl_ztmm0049 ASSIGNING FIELD-SYMBOL(<fs_ztmm0049>) WITH KEY matkl = <fs_mara>-matkl.
        IF sy-subrc = 0.
          vl_gramaje_reciclado = vl_gramaje_reciclado + vl_gramaje_papel * ( ( 100 - <fs_ztmm0049>-zznoreciclado ) / 100 ).
        ENDIF.
      ENDIF.

      READ TABLE tl_marm ASSIGNING FIELD-SYMBOL(<fs_marm>) WITH KEY matnr = <fs_alv>-matnr_l1.
      IF sy-subrc = 0.
        ADD <fs_marm>-hoehe TO vl_espesor.
      ENDIF.

      APPEND <fs_mara> TO tl_papeles.
    ENDIF.

    "L2
    READ TABLE tl_mara ASSIGNING <fs_mara> WITH KEY matnr = <fs_alv>-matnr_l2.
    IF sy-subrc = 0.
      READ TABLE tl_td212 ASSIGNING <fs_td212> WITH KEY flute = <fs_alv>-flute
                                                        bpaid = 'L2'.
      IF sy-subrc = 0.
        vl_gramaje_papel = <fs_mara>-zzgramaje * <fs_td212>-bpfac.
        ADD vl_gramaje_papel TO vl_gramaje_sum.

        READ TABLE tl_ztmm0049 ASSIGNING <fs_ztmm0049> WITH KEY matkl = <fs_mara>-matkl.
        IF sy-subrc = 0.
          vl_gramaje_reciclado = vl_gramaje_reciclado + vl_gramaje_papel * ( ( 100 - <fs_ztmm0049>-zznoreciclado ) / 100 ).
        ENDIF.
      ENDIF.

      READ TABLE tl_marm ASSIGNING <fs_marm> WITH KEY matnr = <fs_alv>-matnr_l2.
      IF sy-subrc = 0.
        ADD <fs_marm>-hoehe TO vl_espesor.
      ENDIF.

      APPEND <fs_mara> TO tl_papeles.
    ENDIF.

    "L3
    READ TABLE tl_mara ASSIGNING <fs_mara> WITH KEY matnr = <fs_alv>-matnr_l3.
    IF sy-subrc = 0.
      READ TABLE tl_td212 ASSIGNING <fs_td212> WITH KEY flute = <fs_alv>-flute
                                                        bpaid = 'L3'.
      IF sy-subrc = 0.
        vl_gramaje_papel = <fs_mara>-zzgramaje * <fs_td212>-bpfac.
        ADD vl_gramaje_papel TO vl_gramaje_sum.

        READ TABLE tl_ztmm0049 ASSIGNING <fs_ztmm0049> WITH KEY matkl = <fs_mara>-matkl.
        IF sy-subrc = 0.
          vl_gramaje_reciclado = vl_gramaje_reciclado + vl_gramaje_papel * ( ( 100 - <fs_ztmm0049>-zznoreciclado ) / 100 ).
        ENDIF.
      ENDIF.

      READ TABLE tl_marm ASSIGNING <fs_marm> WITH KEY matnr = <fs_alv>-matnr_l3.
      IF sy-subrc = 0.
        ADD <fs_marm>-hoehe TO vl_espesor.
      ENDIF.

      APPEND <fs_mara> TO tl_papeles.
    ENDIF.

    "M1
    READ TABLE tl_mara ASSIGNING <fs_mara> WITH KEY matnr = <fs_alv>-matnr_m1.
    IF sy-subrc = 0.
      READ TABLE tl_td212 ASSIGNING <fs_td212> WITH KEY flute = <fs_alv>-flute
                                                        bpaid = 'M1'.
      IF sy-subrc = 0.
        vl_gramaje_papel = <fs_mara>-zzgramaje * <fs_td212>-bpfac.
        ADD vl_gramaje_papel TO vl_gramaje_sum.

        READ TABLE tl_ztmm0049 ASSIGNING <fs_ztmm0049> WITH KEY matkl = <fs_mara>-matkl.
        IF sy-subrc = 0.
          vl_gramaje_reciclado = vl_gramaje_reciclado + vl_gramaje_papel * ( ( 100 - <fs_ztmm0049>-zznoreciclado ) / 100 ).
        ENDIF.
      ENDIF.

      READ TABLE tl_marm ASSIGNING <fs_marm> WITH KEY matnr = <fs_alv>-matnr_m1.
      IF sy-subrc = 0.
        ADD <fs_marm>-hoehe TO vl_espesor.
      ENDIF.


      APPEND <fs_mara> TO tl_papeles.
    ENDIF.

    "M2
    READ TABLE tl_mara ASSIGNING <fs_mara> WITH KEY matnr = <fs_alv>-matnr_m2.
    IF sy-subrc = 0.
      READ TABLE tl_td212 ASSIGNING <fs_td212> WITH KEY flute = <fs_alv>-flute
                                                        bpaid = 'M2'.
      IF sy-subrc = 0.
        vl_gramaje_papel = <fs_mara>-zzgramaje * <fs_td212>-bpfac.
        ADD vl_gramaje_papel TO vl_gramaje_sum.

        READ TABLE tl_ztmm0049 ASSIGNING <fs_ztmm0049> WITH KEY matkl = <fs_mara>-matkl.
        IF sy-subrc = 0.
          vl_gramaje_reciclado = vl_gramaje_reciclado + vl_gramaje_papel * ( ( 100 - <fs_ztmm0049>-zznoreciclado ) / 100 ).
        ENDIF.
      ENDIF.

      READ TABLE tl_marm ASSIGNING <fs_marm> WITH KEY matnr = <fs_alv>-matnr_m2.
      IF sy-subrc = 0.
        ADD <fs_marm>-hoehe TO vl_espesor.
      ENDIF.


      APPEND <fs_mara> TO tl_papeles.
    ENDIF.

    "Factor almidón y factor canal
    READ TABLE tl_td211 ASSIGNING FIELD-SYMBOL(<fs_td211>) WITH KEY flute = <fs_alv>-flute.
    IF sy-subrc = 0.
      vl_gramaje_alm_aux = vl_gramaje_alm * <fs_td211>-starf.
      ADD <fs_td211>-bgwht TO vl_espesor.
    ENDIF.

    <fs_alv>-gramaje = vl_gramaje_sum + vl_gramaje_alm_aux.
    <fs_alv>-espesor = vl_espesor.

    IF <fs_alv>-gramaje <> 0.
      <fs_alv>-porc_fibra_rec = ( vl_gramaje_reciclado + vl_gramaje_alm_aux ) / <fs_alv>-gramaje * 100.
    ENDIF.

  ENDLOOP.



ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  F_MOSTRAR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_mostrar_alv .

  TRY .
      cl_salv_table=>factory( IMPORTING r_salv_table = rg_alv
                                CHANGING  t_table    = tg_alv ).

    CATCH  cx_salv_msg INTO DATA(rg_exc_msg).
      MESSAGE rg_exc_msg->get_text( ) TYPE 'E'.
      RETURN.
  ENDTRY.

  rg_alv->get_layout( )->set_key( VALUE salv_s_layout_key( report = sy-repid ) ).
  rg_alv->get_layout( )->set_save_restriction( if_salv_c_layout=>restrict_none ).
  rg_alv->get_layout( )->set_default( abap_true ).
  rg_alv->get_columns( )->set_optimize( ).
  rg_alv->get_functions( )->set_all( 'X' ).
  rg_alv->display( ).
ENDFORM.
