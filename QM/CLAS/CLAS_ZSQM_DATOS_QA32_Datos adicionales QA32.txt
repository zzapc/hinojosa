
class ZSQM_DATOS_QA32 definition
  public
  final
  create public .

public section.

  class-methods GET_DATOS_ADD
    changing
      value(WA_STRUCT) type ANY .
protected section.
private section.
endclass. "ZSQM_DATOS_QA32 definition
class ZSQM_DATOS_QA32 implementation.
  METHOD get_datos_add.

**********************************************************************
* Parámetros locales
**********************************************************************

    DATA: lo_utils_mto TYPE REF TO zcl_utils_mto.

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************


**** UA

    ASSIGN COMPONENT 'ZZLENUM' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<campo>).
    IF sy-subrc = 0.

*** PRUEFLOS

      ASSIGN COMPONENT 'PRUEFLOS' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<li>).
      IF sy-subrc = 0.
        SELECT SINGLE lenum INTO <campo> FROM zswm_uas_accione WHERE prueflos EQ <li>.
      ENDIF.
    ENDIF.

**** MATNR

    ASSIGN COMPONENT 'MATNR' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<matnr>).
    IF sy-subrc = 0.

*** WERKS

      ASSIGN COMPONENT 'WERK' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<werks>).
      IF sy-subrc = 0.
        SELECT SINGLE cuobj INTO @DATA(lv_cuobj) FROM marc WHERE matnr EQ @<matnr> AND werks EQ @<werks>.
        IF sy-subrc = 0.
          SELECT prqty, shuty INTO TABLE @DATA(it_td151) FROM yhp_idx_td151 WHERE cuobj EQ @lv_cuobj.
          IF sy-subrc = 0.

** ZZCAJAS_PAQ, ZZPISOS_ALT, ZZPAQ_BASE.

            ASSIGN COMPONENT 'ZZCAJAS_PAQ' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<caj>).
            ASSIGN COMPONENT 'ZZPISOS_ALT' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<pis>).
            ASSIGN COMPONENT 'ZZPAQ_BASE' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<paq>).
            LOOP AT it_td151 ASSIGNING FIELD-SYMBOL(<td151>).
              CASE <td151>-shuty.
                WHEN 'STACK'.
                  IF <pis> IS ASSIGNED.
                    <pis> = <td151>-prqty.
                  ENDIF.
                WHEN 'GROUP'.
                  IF <caj> IS ASSIGNED.
                    <caj> = <td151>-prqty.
                  ENDIF.
                WHEN 'UNIT'.
                  IF <paq> IS ASSIGNED.
                    <paq> = <td151>-prqty.
                  ENDIF.
                WHEN OTHERS.
              ENDCASE.
            ENDLOOP.
          ENDIF.
        ENDIF.

*--> INI FCARDONA 15.12.2022 - Rellenar campo orden

** AUFNR

        ASSIGN COMPONENT 'AUFNR' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_aufnr>).
        IF ( sy-subrc EQ 0 ).

* CHARG

          ASSIGN COMPONENT 'CHARG' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_charg>).
          IF ( sy-subrc EQ 0 ).

* ORIGEN

            IF ( <matnr> CP 'CO*' OR <matnr> CP 'SE*' ).

              IF <fs_aufnr> IS INITIAL AND <fs_charg> IS NOT INITIAL.
                SELECT SINGLE aufnr
                  INTO @<fs_aufnr>
                  FROM mseg
                  WHERE werks = @<werks>   AND
                        matnr = @<matnr>  AND
                        charg = @<fs_charg>  AND
                        bwart = '101'        AND
                        aufnr <> ''.

* ZZKUNNR

*--> INI FCARDONA 30.10.2023 - Cliente en QA32 /// Datos MTO

                IF ( sy-subrc EQ 0 AND <fs_aufnr> IS ASSIGNED ).

                  ASSIGN COMPONENT 'KUNNR' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fv_kunnr>).
                  IF ( sy-subrc EQ 0 ).

                    CLEAR: lo_utils_mto.

                    lo_utils_mto ?= zcl_utils_mto=>s_get_instance_4_aufnr( i_aufnr = <fs_aufnr> ).

                    IF ( lo_utils_mto IS BOUND ).

                      IF ( lo_utils_mto->_s_vbak-kunnr IS NOT INITIAL ).

                        MOVE lo_utils_mto->_s_vbak-kunnr TO <fv_kunnr>.

                        ASSIGN COMPONENT 'ZZKUNNR1' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fv_zzkunnr1>).
                        IF ( sy-subrc EQ 0 ).

                          MOVE lo_utils_mto->_s_vbak-kunnr TO <fv_zzkunnr1>.

                        ENDIF.

                        ASSIGN COMPONENT 'ZZNAME1' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fv_zzname1>).
                        IF ( sy-subrc EQ 0 ).

                          SELECT SINGLE name1
                            FROM kna1
                            INTO @<fv_zzname1>
                           WHERE kunnr EQ @<fv_kunnr>.

                        ENDIF.

                      ENDIF.

                    ENDIF.

                  ENDIF.

                ENDIF.

*<-- FIN FCARDONA 30.10.2023 - Cliente en QA32

              ENDIF.

*--> INI FCARDONA 24.01.2023 - Rellenar campo origen y motivo

              ASSIGN COMPONENT 'BWART' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_bwart>).
              IF ( sy-subrc EQ 0 ).

                IF ( <fs_bwart> = '349' ).

                  ASSIGN COMPONENT 'ZZQMORIGEN' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_qmorigen>).
                  IF ( sy-subrc EQ 0 ).
                    MOVE 'DEV' TO <fs_qmorigen>.
                  ENDIF.

                  IF ( <campo> IS ASSIGNED AND <matnr> IS ASSIGNED AND <werks> IS ASSIGNED AND <fs_charg> IS ASSIGNED ).

                    SELECT SINGLE MAX( wdatu ), wenum, wepos
                      FROM ltap
                      INTO (@DATA(lv_wdatu), @DATA(lv_wenum), @DATA(lv_wepos))
                     WHERE matnr EQ @<matnr>
                       AND charg EQ @<fs_charg>
                       AND werks EQ @<werks>
                       AND vlenr EQ @<campo>
                       AND nlenr EQ @<campo>
                       AND bestq EQ 'Q'
                      GROUP BY wenum, wepos.

                    IF ( lv_wenum IS NOT INITIAL AND lv_wepos IS NOT INITIAL ).

                      SELECT SINGLE vbelv
                        FROM vbfa
                        INTO @DATA(lv_vbelv)
                       WHERE vbeln    EQ @lv_wenum
                         AND posnn    EQ @lv_wepos
                         AND vbtyp_v  EQ 'H'
                         AND matnr    EQ @<matnr>
                         AND bwart    EQ '657'.

                      IF ( sy-subrc EQ 0 AND lv_vbelv IS NOT INITIAL ).

                        ASSIGN COMPONENT 'ZZAUGRU' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_augru>).
                        IF ( sy-subrc EQ 0 ).

                          SELECT SINGLE augru
                            FROM vbak
                            INTO @<fs_augru>
                           WHERE vbeln EQ @lv_vbelv.

                          IF ( <fs_augru> IS NOT INITIAL ).

                            ASSIGN COMPONENT 'ZZBEZEI' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_bezei>).
                            IF ( sy-subrc EQ 0 ).

                              SELECT SINGLE bezei
                                FROM tvaut
                                INTO @<fs_bezei>
                               WHERE spras EQ 'S'
                                 AND augru EQ @<fs_augru>.

                            ENDIF.

                          ENDIF.

                        ENDIF.

                      ENDIF.
**NLC.16.11.2023.Añadimos entrega en QA32 cuando el lote inspección tenga su origen en una devolución (mov.657).
                      IF ( lv_vbelv IS NOT INITIAL ).

                        ASSIGN COMPONENT 'ZZENTREGA' OF STRUCTURE wa_struct TO FIELD-SYMBOL(<fs_vbelv>).
                        IF ( sy-subrc EQ 0 ).
                          SELECT SINGLE vbelv
                            FROM vbfa
                            INTO @<fs_vbelv>
                           WHERE vbeln    EQ @lv_wenum
                             AND posnn    EQ @lv_wepos
                             AND vbtyp_v  EQ 'T'
                             AND matnr    EQ @<matnr>
                             AND bwart    EQ '657'.
                        ENDIF. "De IF ( sy-subrc EQ 0 ).

                      ENDIF. "De IF ( lv_vbelv IS NOT INITIAL ).
**Fin.NLC.16.11.2023.Añadimos entrega en QA32 cuando el lote inspección tenga su origen en una devolución (mov.657).
                    ENDIF.

                  ENDIF.

                ELSE.

                  ASSIGN COMPONENT 'ZZQMORIGEN' OF STRUCTURE wa_struct TO <fs_qmorigen>.
                  IF ( sy-subrc EQ 0 ).
                    MOVE 'PRO' TO <fs_qmorigen>.
                  ENDIF.

                ENDIF.

              ENDIF.

*<-- FIN FCARDONA 24.01.2023 - Rellenar campo origen y motivo

            ENDIF.

          ENDIF.

        ENDIF.

*<-- FIN FCARDONA 15.12.2022 - Rellenar campo orden

      ENDIF.
    ENDIF.

    UNASSIGN: <caj>,
              <pis>,
              <paq>,
              <campo>,
              <li>,
              <matnr>,
              <werks>,
              <fv_kunnr>, "FCC 30.10.2023 - Cliente en QA32.
              <fs_vbelv> "NLC 16.11.2023 - Entrega en QA32.
              .

  ENDMETHOD.
endclass. "ZSQM_DATOS_QA32 implementation
