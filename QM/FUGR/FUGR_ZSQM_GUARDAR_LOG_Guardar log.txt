FUNCTION zsqm_guardar_log.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_EXTNUMBER) TYPE  BALNREXT OPTIONAL
*"     VALUE(I_OBJECT) TYPE  BALOBJ_D OPTIONAL
*"     VALUE(I_SUBOBJECT) TYPE  BALSUBOBJ OPTIONAL
*"  TABLES
*"      T_RETURN STRUCTURE  BAPIRET2
*"----------------------------------------------------------------------

  DATA: t_return1 TYPE TABLE OF bapiret2,
        wa_return TYPE bapiret2.

  DATA: ls_s_log      TYPE  bal_s_log,
        ls_log_handle TYPE  balloghndl,
        ls_s_msg      TYPE bal_s_msg.

  DATA:  ta_loghandle TYPE bal_t_logh.

  t_return1[] = t_return[].

* Cargamos los datos del LOG
  ls_s_log-extnumber       = i_extnumber.
  ls_s_log-object          = i_object.
  ls_s_log-subobject       = i_subobject.


  ls_s_log-aldate    = sy-datum.
  ls_s_log-altime    = sy-uzeit.
  ls_s_log-aluser    = sy-uname.
  ls_s_log-altcode   = sy-tcode.
  ls_s_log-alprog    = sy-repid.

* Creamos el fichero del LOG
  CALL FUNCTION 'BAL_LOG_CREATE'
    EXPORTING
      i_s_log      = ls_s_log
    IMPORTING
      e_log_handle = ls_log_handle
    EXCEPTIONS
      OTHERS       = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

* Metemos todos los mensajes en el LOG
  LOOP AT t_return1 INTO wa_return.
    CLEAR ls_s_msg.

    ls_s_msg-msgty = wa_return-type.
    ls_s_msg-msgid = wa_return-id.
    ls_s_msg-msgno = wa_return-number.
    ls_s_msg-msgv1 = wa_return-message_v1.
    ls_s_msg-msgv2 = wa_return-message_v2.
    ls_s_msg-msgv3 = wa_return-message_v3.
    ls_s_msg-msgv4 = wa_return-message_v4.

    CASE wa_return-type.
      WHEN 'E'.
        ls_s_msg-probclass = '1'.
      WHEN 'W'.
        ls_s_msg-probclass = '2'.
      WHEN 'I'.
        ls_s_msg-probclass = '3'.
      WHEN 'S'.
        ls_s_msg-probclass = '4'.
    ENDCASE.

*   Añadimos el mensaje al LOG
    CALL FUNCTION 'BAL_LOG_MSG_ADD'
      EXPORTING
        i_log_handle = ls_log_handle
        i_s_msg      = ls_s_msg
      EXCEPTIONS
        OTHERS       = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ENDLOOP.

* Guardamos el LOG
  REFRESH ta_loghandle.
  APPEND ls_log_handle TO ta_loghandle.

  CALL FUNCTION 'BAL_DB_SAVE'
    EXPORTING
      i_client         = sy-mandt
      i_in_update_task = ''
      i_save_all       = ''
      i_t_log_handle   = ta_loghandle
*      IMPORTING
*     E_NEW_LOGNUMBERS =
    EXCEPTIONS
      log_not_found    = 1
      save_not_allowed = 2
      numbering_error  = 3
      OTHERS           = 4.

* Refrescamos el log de incidencias
  CALL FUNCTION 'BAL_LOG_REFRESH'
    EXPORTING
      i_log_handle  = ls_log_handle
    EXCEPTIONS
      log_not_found = 1
      OTHERS        = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*  CALL FUNCTION 'BAL_DB_SAVE'
*    EXPORTING
*      i_save_all = 'X'
*    EXCEPTIONS
*      OTHERS     = 1.
*  IF sy-subrc <> 0.
*    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.




ENDFUNCTION.
