FUNCTION zsqm06_fm_8dreport.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_VIQMEL) LIKE  VIQMEL STRUCTURE  VIQMEL
*"     VALUE(I_CUSTOMIZING) LIKE  V_TQ85 STRUCTURE  V_TQ85
*"     VALUE(I_MANUM) LIKE  QMSM-MANUM
*"     VALUE(I_FBCALL)
*"  EXPORTING
*"     VALUE(E_QNQMASM0) LIKE  QNQMASM0 STRUCTURE  QNQMASM0
*"     VALUE(E_QNQMAQMEL0) LIKE  QNQMAQMEL0 STRUCTURE  QNQMAQMEL0
*"     VALUE(E_BUCH) TYPE  QKZ
*"  TABLES
*"      TI_IVIQMFE STRUCTURE  WQMFE
*"      TI_IVIQMUR STRUCTURE  WQMUR
*"      TI_IVIQMSM STRUCTURE  WQMSM
*"      TI_IVIQMMA STRUCTURE  WQMMA
*"      TI_IHPA STRUCTURE  IHPA
*"      TE_CONTAINER STRUCTURE  SWCONT OPTIONAL
*"      TE_LINES STRUCTURE  TLINE OPTIONAL
*"  EXCEPTIONS
*"      ACTION_STOPPED
*"----------------------------------------------------------------------
*** Copia función QM06_FM_TASK_CREATE_8DREPORT.
* If you want to use your own form, change Workpaper '8D_C' in your
* notification customizing

  SELECT SINGLE pdf_form FROM t390 INTO @DATA(g_8d_form)
                        WHERE pm_appl    = 'N'
                        AND   workpaper  = 'ZQM1'.
  IF sy-subrc <> 0.
    MESSAGE s610(qm) WITH 'ZQM1' 'QM_8D_REPORT_SND'.
    RAISE action_stopped.
  ENDIF.


  CLEAR wa_8d_itcpo.

  SORT ti_iviqmsm BY qsmnum manum.
  SORT ti_iviqmur BY qurnum urnum.

*-----------------------------------------------------------------------
* Übernahme der Daten aus der Meldung
*-----------------------------------------------------------------------

  MOVE i_viqmel     TO viqmel.

*  MOVE ti_iviqmfe[] TO g_viqmfe[].
  CLEAR g_viqmfe. REFRESH g_viqmfe.                         "note 717595
  LOOP AT ti_iviqmfe.
    MOVE-CORRESPONDING ti_iviqmfe TO g_viqmfe.
    APPEND g_viqmfe.
  ENDLOOP.

*  MOVE ti_iviqmur[] TO g_viqmur[].
  CLEAR g_viqmur.                                           "note 1302624
  REFRESH g_viqmur.
  LOOP AT ti_iviqmur.
    MOVE-CORRESPONDING ti_iviqmur TO g_viqmur_wa.
    APPEND g_viqmur_wa TO g_viqmur.
  ENDLOOP.

*  MOVE TI_IVIQMSM[] TO G_VIQMSM[].
  CLEAR g_viqmsm.                                           "note 938827
  REFRESH g_viqmsm.
  LOOP AT ti_iviqmsm.
    MOVE-CORRESPONDING ti_iviqmsm TO g_viqmsm_wa.
    APPEND g_viqmsm_wa TO g_viqmsm.
  ENDLOOP.

  MOVE ti_ihpa[]    TO g_ihpa[].

  DELETE g_viqmfe WHERE kzloesch = c_x.

*-----------------------------------------------------------------------
* Initialisieren der Felder und Tabellen
*-----------------------------------------------------------------------
  PERFORM initialise_data_8d_report.

*-----------------------------------------------------------------------
* Für welche Fehler soll ein 8D-Report gedruckt werden?
*-----------------------------------------------------------------------
  PERFORM choose_fenum.

*-----------------------------------------------------------------------
* Partner bestimmen, zu dem gesendet werden soll
*-----------------------------------------------------------------------
  PERFORM choose_partner.

*-----------------------------------------------------------------------
* Nachlesen der Empfängerdaten.
*-----------------------------------------------------------------------
  PERFORM read_receiver_data.

*-----------------------------------------------------------------------
* Nachlesen der Absenderdaten
*-----------------------------------------------------------------------
  PERFORM read_sender_data.

*-----------------------------------------------------------------------
* Nachlesen von Obejktdaten zur Meldung (Material...)
*-----------------------------------------------------------------------
  PERFORM read_notification_data.

*-----------------------------------------------------------------------
* Benutzerparameter nachlesen
*-----------------------------------------------------------------------
  wa_8d_itcpo-tdimmed =  '*'.                             "note 1073905
  wa_8d_itcpo-tddelete = '*'.                             "note 1073905

*
*  CALL FUNCTION 'GET_TEXT_PRINT_PARAMETERS'
*    EXPORTING
*      options       = wa_8d_itcpo
*    IMPORTING
*      newoptions    = wa_8d_itcpo
*    EXCEPTIONS
*      canceled      = 1
*      archive_error = 2
*      device        = 3
*      OTHERS        = 4.
*
*  IF sy-subrc <> 0.
** stop processing
*    MESSAGE s170(qm).
*    RAISE action_stopped.
*  ENDIF.

* Daten sollen aus dem aktuellen Programm übernammen werden
  wa_8d_itcpo-tdprogram = sy-repid.

* Wenn Kennzeichen 'Druckvorschau' nicht sitzt, wird Meldung gesichert
* und gedruckt
*  IF wa_8d_itcpo-tdpreview IS INITIAL.
*
*    CALL FUNCTION 'POPUP_TO_CONFIRM'
*      EXPORTING
*        titlebar       = text-041
*        text_question  = text-040
*        text_button_1  = 'Ja'(101)
*        text_button_2  = 'Nein'(102)
*        default_button = '1'
*      IMPORTING
*        answer         = g_answer
*      EXCEPTIONS
*        text_not_found = 1
*        OTHERS         = 2.
*    IF sy-subrc EQ 0.
*
*      IF g_answer = '1'.
** continue and save after processing
*        MESSAGE s118(qm) WITH text-hea.
*        MOVE c_x TO e_buch.
*      ELSE.
** stop processing
*        MESSAGE s170(qm).
*        RAISE action_stopped.
*      ENDIF.
*    ENDIF.
*
*  ENDIF.

*-----------------------------------------------------------------------
* Formulardruck wird geöffnet
*-----------------------------------------------------------------------

* Read text symbol in language of receiver.
  SET LANGUAGE g_langu.

* Drucke für alle ausgwählten Fehlerpostionen jeweils einen 8D-Report
  LOOP AT g_viqmfe INTO g_viqmfe_wa
                   WHERE mark = c_x.

*-----------------------------------------------------------------------
* Initialisieren der Felder und Tabellen
*-----------------------------------------------------------------------
    PERFORM initialise_data_8d_report.

    DATA: fn_name TYPE funcname.

    CALL FUNCTION 'FP_FUNCTION_MODULE_NAME'
      EXPORTING
        i_name     = g_8d_form    " Form
      IMPORTING
        e_funcname = fn_name
*       e_interface_type     =
*       ev_funcname_inbound  =
      .
*    CATCH cx_fp_api_repository.    "
*    CATCH cx_fp_api_usage.    "
*    CATCH cx_fp_api_internal.    "



    DATA: l_params TYPE ssfctrlop,
          l_output TYPE ssfcompop.

*    l_params- = 'X'.

l_output-TDTITLE = viqmel-aufnr.

    CALL FUNCTION fn_name
      EXPORTING
*       archive_index      =
*       archive_index_tab  =
*       archive_parameters = l<
        control_parameters = l_params
*       mail_appl_obj      =
*       mail_recipient     =
*       mail_sender        =
        output_options     = l_output
        user_settings      = ''
        i_qmnum            = viqmel-qmnum
*    IMPORTING
*       document_output_info =
*       job_output_info    =
*       job_output_options =
      EXCEPTIONS
        formatting_error   = 1
        internal_error     = 2
        send_error         = 3
        user_canceled      = 4
        OTHERS             = 5.
    IF sy-subrc <> 0.
*   MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

  ENDLOOP.


ENDFUNCTION.
