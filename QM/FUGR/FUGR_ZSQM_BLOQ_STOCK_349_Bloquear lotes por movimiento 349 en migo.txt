FUNCTION zsqm_bloq_stock_349.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  TABLES
*"      IT_LOTES STRUCTURE  ZSQM002
*"----------------------------------------------------------------------


  DATA lt_lotes TYPE TABLE OF ty_lotes.
  TRY .
      lt_lotes[] = it_lotes[].
    CATCH cx_root.

  ENDTRY.

  SORT lt_lotes ASCENDING.
  DELETE ADJACENT DUPLICATES FROM lt_lotes COMPARING matnr charg werks lgort.

  DATA: wa_head       TYPE bapi2017_gm_head_01,
        goodsmvt_code TYPE bapi2017_gm_code,
        lv_matdoc     TYPE bapi2017_gm_head_ret-mat_doc,
        lv_matyear    TYPE bapi2017_gm_head_ret-doc_year,
        it_item       TYPE TABLE OF bapi2017_gm_item_create,
        it_return     TYPE TABLE OF bapiret2.

  CLEAR: wa_head, goodsmvt_code, lv_matdoc, lv_matyear, it_item[], it_return[].

  "Construimos el mensaje
  DATA lv_mensaje TYPE char255.
  DATA lv_resp TYPE c.
  LOOP AT lt_lotes ASSIGNING FIELD-SYMBOL(<fs>) GROUP BY ( matnr = <fs>-matnr ).
    lv_mensaje = |¿Desea bloquear todo el stock de la referencia { <fs>-matnr }?|.
    CLEAR: lv_resp.
    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
*       TITLEBAR              = ' '
*       DIAGNOSE_OBJECT       = ' '
        text_question         = lv_mensaje
        text_button_1         = 'Si'(001)
*       ICON_BUTTON_1         = ' '
        text_button_2         = 'No'(002)
*       ICON_BUTTON_2         = ' '
*       DEFAULT_BUTTON        = '1'
        display_cancel_button = ' '
*       USERDEFINED_F1_HELP   = ' '
*       START_COLUMN          = 25
*       START_ROW             = 6
*       POPUP_TYPE            =
*       IV_QUICKINFO_BUTTON_1 = ' '
*       IV_QUICKINFO_BUTTON_2 = ' '
      IMPORTING
        answer                = lv_resp
*     TABLES
*       PARAMETER             =
      EXCEPTIONS
        text_not_found        = 1
        OTHERS                = 2.
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.
    IF lv_resp EQ '1'.
      LOOP AT GROUP <fs> ASSIGNING FIELD-SYMBOL(<lotes>).
        APPEND INITIAL LINE TO it_item ASSIGNING FIELD-SYMBOL(<item>).
        <item>-material = <lotes>-matnr.
        <item>-plant = <lotes>-werks.
        <item>-batch = <lotes>-charg.
        <item>-stge_loc = <lotes>-lgort.
        <item>-move_type = '344'.
        <item>-entry_qnt = <lotes>-clabs.

      ENDLOOP.

      wa_head-pstng_date = sy-datum.
      wa_head-doc_date = sy-datum.
      wa_head-pr_uname = sy-uname.
      goodsmvt_code-gm_code = '04'.
      wa_head-header_txt = 'Bloqueo calidad automático'.

      CALL FUNCTION 'ZSQM_CONTABILIZAR_MOV' IN UPDATE TASK
        EXPORTING
          i_head  = wa_head
          i_code  = goodsmvt_code
        TABLES
          it_item = it_item.

*      CALL FUNCTION 'BAPI_GOODSMVT_CREATE' "STARTING NEW TASK 'T1' DESTINATION 'NONE' PERFORMING p_results ON END OF TASK
*        EXPORTING
*          goodsmvt_header  = wa_head
*          goodsmvt_code    = goodsmvt_code
**         TESTRUN          = ' '
**         GOODSMVT_REF_EWM =
*        IMPORTING
**         GOODSMVT_HEADRET =
*          materialdocument = lv_matdoc
*          matdocumentyear  = lv_matyear
*        TABLES
*          goodsmvt_item    = it_item
**         GOODSMVT_SERIALNUMBER         =
*          return           = it_return
**         GOODSMVT_SERV_PART_DATA       =
**         EXTENSIONIN      =
*        .
*
**      WAIT UNTIL gv_exec = 'X'.
*      SET UPDATE TASK LOCAL .
*      COMMIT WORK.
    ENDIF.

  ENDLOOP.




ENDFUNCTION.
