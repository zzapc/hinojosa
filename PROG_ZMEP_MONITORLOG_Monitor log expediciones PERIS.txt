*&---------------------------------------------------------------------*
*& Report  ZSSDD099                                                    *
* GAPSD099 - Programa para cargar nuevas ofertas y precios             *
*----------------------------------------------------------------------*
* Autor : Rodolfo Malea.SEIS                                           *
* Date : 05.12.2023                                                    *
*----------------------------------------------------------------------*
REPORT zmep_monitorlog.

"""""""""""""""""
" Constantes
"""""""""""""""""

CONSTANTS: cg_dynpro_main TYPE sy-dynnr VALUE '0100',
           cg_dynpro_zlog TYPE sy-dynnr VALUE '0110'.


"""""""""""""""""
" Tipos de datos
"""""""""""""""""
TYPES: BEGIN OF st_lin_alv.
         INCLUDE TYPE zmonitorlog_s_alv.
       TYPES END OF st_lin_alv.



"""""""""""""""""""""""
" Control pestañas
""""""""""""""""""""""
CONSTANTS: BEGIN OF c_c_ficha,
             tab1 LIKE sy-ucomm VALUE 'Zlog',
           END OF c_c_ficha.

CONTROLS:  c_ficha TYPE TABSTRIP.
DATA: BEGIN OF g_c_ficha,
        subscreen   LIKE sy-dynnr,
        prog        LIKE sy-repid VALUE sy-repid,
        pressed_tab LIKE sy-ucomm VALUE c_c_ficha-tab1,
      END OF g_c_ficha.

"""""""""""""""""
" Includes
"""""""""""""""""
INCLUDE zseis_patron_alv.

"""""""""""""""""
" Variables globalres
"""""""""""""""""

DATA: vg_ntra TYPE zmep_trans_cab-numtransporte.



"""""""""""""""""
" Pantalla de selección
"""""""""""""""""
SELECT-OPTIONS: s_ntra FOR vg_ntra.




""""""""""""""""""""""
"Rutinas
""""""""""""""""""""""

*&---------------------------------------------------------------------*
*&      Form  f_initialization.
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_initialization.

  vg_ventana_inicial            = cg_dynpro_main.
  vg_no_justif_cols             = 'X'.
  vg_alv_protegido_por_defecto  = 'X'.

  PERFORM f_config_dynpro USING  cg_dynpro_main ''  'T01' 'STA_0100' ' ' 'X'.
  PERFORM f_config_subscreen USING  cg_dynpro_main cg_dynpro_zlog 'CC_ALV_ZLOG' 'T11' ' '.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CREAR_CATALOGO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_crear_catalogo TABLES it_catalogo TYPE lvc_t_fcat USING vp_dynnr.

**  wa_layout-info_fname = 'COLOR'.
**  wa_layout-sel_mode = 'A'.


  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZMONITORLOG_S_ALV'
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = it_catalogo[]
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_PRE_LLENAR_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_pre_llenar_datos.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  F_LLENAR_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_llenar_datos TABLES tp_alv TYPE tt_lin_alv_patron USING vp_dynpro.
  DATA: wl_alv         TYPE zmonitorlog_s_alv,
        tl_transportes TYPE zperis_t_trans_cab.
  DATA(rl_peris_dpc_imp) = NEW zcl_peris_dpc_imp( ).
  CASE vp_dynpro.
    WHEN cg_dynpro_main.



    WHEN cg_dynpro_zlog.
      TRY.
          DATA(tl_datos_monitor) =  rl_peris_dpc_imp->monitorlog_getlist( ).
        CATCH /iwbep/cx_mgw_busi_exception.
          CLEAR tl_datos_monitor.
      ENDTRY.

      LOOP AT tl_datos_monitor ASSIGNING FIELD-SYMBOL(<fs_datos>).
        MOVE-CORRESPONDING <fs_datos> TO wl_alv.
        PERFORM f_append_dato  TABLES   tp_alv  USING wl_alv.
      ENDLOOP.
  ENDCASE.

ENDFORM.


MODULE c_ficha_active_tab_set OUTPUT.
  c_ficha-activetab = g_c_ficha-pressed_tab.
  CASE g_c_ficha-pressed_tab.
    WHEN c_c_ficha-tab1.
      g_c_ficha-subscreen = cg_dynpro_zlog.
    WHEN OTHERS.
  ENDCASE.
ENDMODULE.

MODULE c_ficha_active_tab_get INPUT.
  okcode = sy-ucomm.
  CASE okcode.
    WHEN c_c_ficha-tab1.
      g_c_ficha-pressed_tab = c_c_ficha-tab1.
    WHEN OTHERS.
  ENDCASE.


ENDMODULE.
