FUNCTION Z_NUEVO_MODO.
*"--------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(TCODE) TYPE  ANY OPTIONAL
*"     REFERENCE(REPID) TYPE  ANY OPTIONAL
*"     REFERENCE(PARAMETROS) TYPE  ANY OPTIONAL
*"     REFERENCE(EJEC) TYPE  ABAP_BOOL DEFAULT 'X'
*"     REFERENCE(MAX_SESIONES) TYPE  I OPTIONAL
*"     REFERENCE(SKIP_SCREEN) TYPE  ABAP_BOOL DEFAULT ''
*"--------------------------------------------------------------------
DATA: i_user_info TYPE TABLE OF uinfo2 WITH HEADER LINE.
  DATA: l_parametros TYPE string,
        using_tab    TYPE TABLE OF bdcdata WITH HEADER LINE,
        spagpa_tab   TYPE TABLE OF rfc_spagpa WITH HEADER LINE,
        mess_tab     TYPE TABLE OF bdcmsgcoll WITH HEADER LINE,
        l_tcode      TYPE tcode,
        l_its,
        l_terminal   TYPE string,
        l_par        TYPE text40,
        l_valor      TYPE text40.

  IF max_sesiones > 0.
    IF sy-batch IS INITIAL AND sy-binpt IS INITIAL.
      CALL FUNCTION 'GUI_IS_ITS'
        IMPORTING
          return = l_its.
      IF l_its IS INITIAL.
        CALL METHOD cl_gui_frontend_services=>get_computer_name
          CHANGING
            computer_name        = l_terminal
          EXCEPTIONS
            cntl_error           = 1
            error_no_gui         = 2
            not_supported_by_gui = 3
            OTHERS               = 4.
        IF sy-subrc = 0.
          cl_gui_cfw=>flush( ).
        ENDIF.

        CALL FUNCTION 'TH_LONG_USR_INFO'
          EXPORTING
            user      = sy-uname
          TABLES
            user_info = i_user_info.
        DELETE i_user_info WHERE terminal <> l_terminal.
        IF lines(  i_user_info ) > max_sesiones.
          IF NOT tcode IS INITIAL.
            IF NOT parametros IS INITIAL.
              SPLIT parametros AT '=' INTO l_par l_valor.
              CONDENSE l_par NO-GAPS.
              DATA(l_long) = strlen( l_par ).
              IF strlen( l_par ) <= 20.
                SET PARAMETER ID l_par(l_long) FIELD l_valor.
              ENDIF.
              CALL TRANSACTION tcode AND SKIP FIRST SCREEN.
            ELSE.
              CALL TRANSACTION tcode.
            ENDIF.
          ELSE.
            spagpa_tab-parid = 'RID'.
            spagpa_tab-parval = repid.
            APPEND spagpa_tab.
            CALL FUNCTION 'ABAP4_CALL_TRANSACTION'
              STARTING NEW TASK 'test'
              EXPORTING
                tcode                   = 'SE38'
                skip_screen             = 'X'
              TABLES
                spagpa_tab              = spagpa_tab
              EXCEPTIONS
                call_transaction_denied = 1
                tcode_invalid           = 2
                OTHERS                  = 3.
            IF sy-subrc NE 0.
              MESSAGE 'Error llamando SE38' TYPE 'S'.
            ENDIF.
          ENDIF.
          RETURN.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

  IF NOT tcode IS INITIAL.
    l_tcode = tcode.
    l_parametros = parametros.

    IF skip_screen IS INITIAL.
      CALL FUNCTION 'TH_CREATE_MODE'
        EXPORTING
          transaktion    = l_tcode
          del_on_eot     = 1
          parameters     = l_parametros
*         PROCESS_DARK   = ''
*         INHERIT_STAT_TRANS_ID       = 0
*     IMPORTING
*         MODE           =
        EXCEPTIONS
          max_sessions   = 1
          internal_error = 2
          no_authority   = 3
          OTHERS         = 4.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.
    ELSE.
      CALL FUNCTION 'ABAP4_CALL_TRANSACTION'
        STARTING NEW TASK 'test'
        EXPORTING
          tcode                   = l_tcode
          skip_screen             = 'X'
        EXCEPTIONS
          call_transaction_denied = 1
          tcode_invalid           = 2
          OTHERS                  = 3.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.
    ENDIF.
  ELSEIF NOT repid IS INITIAL.
    spagpa_tab-parid = 'RID'.
    spagpa_tab-parval = repid.
    APPEND spagpa_tab.
    CALL FUNCTION 'ABAP4_CALL_TRANSACTION'
      STARTING NEW TASK 'test'
      EXPORTING
        tcode                   = 'SE38'
        skip_screen             = 'X'
*       MODE_VAL                = 'A'
*       UPDATE_VAL              = 'A'
* IMPORTING
*       SUBRC                   =
      TABLES
*       USING_TAB               =
        spagpa_tab              = spagpa_tab
*       MESS_TAB                =
      EXCEPTIONS
        call_transaction_denied = 1
        tcode_invalid           = 2
        OTHERS                  = 3.
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.
  ELSE.

  ENDIF.





ENDFUNCTION.
