report ZAG_TEST_DMS_BADI_INSTANCE.

data LS_RETURN  type BAPIRET2.
data LT_DRAD    type standard table of BAPI_DOC_DRAD.
data LT_DOC_KEY type table of ZVCXI_XCS_S_DOC_KEY.

parameters P_MATNR type MARA-MATNR.

start-of-selection.

  select single CUOBJ from MARC
    into @data(LF_CUOBJ)
    where MATNR eq @P_MATNR.

  check LF_CUOBJ is not initial.
  try.

      data(LF_GVCIN) = /VCXI/CL_VKCR_GATEWAY=>GET_GVCIN_BY_CUOBJ( IF_CUOBJ = LF_CUOBJ ).

      check LF_GVCIN is not initial.
      data(LR_SVC) = /VCXI/CL_VKSRA_SVC=>GET_INSTANCE( IF_GVCIN = LF_GVCIN ).

      check LR_SVC is bound.
      data(LT_SVCEL) = LR_SVC->GET_SVC_ELEMENTS( IF_ID = 'DOC_MGR' ).

      check LT_SVCEL is not initial.
      data(LR_SVCEL_DOC_MGR) = cast /VCXI/CL_VKSRA_SVC_ELEMENT( LT_SVCEL[ 1 ] ).

      check LR_SVCEL_DOC_MGR is bound.
      data(LT_DOC_MGR_CHILDREN) = LR_SVCEL_DOC_MGR->/VCXI/IF_CKX_OBJECT_H~GET_CHILDREN( ).

      select * from DRAD
        into table @data(LT_DRAD_LINE)
        where OBJKY eq @P_MATNR.

      loop at LT_DOC_MGR_CHILDREN into data(LR_OBJECT).

        data(LR_SVCEL_DOC) = cast /VCXI/CL_VKSRA_SVC_ELEMENT( LR_OBJECT ).

        check LR_SVCEL_DOC is bound.
        data(LR_CLSEA) = cast ZCL_VCXI_XCSS_EA_DOC( LR_SVCEL_DOC->GET_CLSEA( ) ).

        check LR_CLSEA is bound.
        data LS_DOC_KEY type ZVCXI_XCS_S_DOC_KEY.
        LR_CLSEA->GET_DOC_KEY( importing EF_DOKNR = LS_DOC_KEY-DOKNR
                                         EF_DOKTL = LS_DOC_KEY-DOKTL
                                         EF_DOKVR = LS_DOC_KEY-DOKVR ).

        select single DOKAR from DRAW
          into LS_DOC_KEY-DOKAR
          where DOKNR eq LS_DOC_KEY-DOKNR
            and DOKVR eq LS_DOC_KEY-DOKVR.

        check LS_DOC_KEY is not initial.
        LT_DOC_KEY = value #( base LT_DOC_KEY ( LS_DOC_KEY ) ).

        read table LT_DRAD_LINE with key DOKNR = LS_DOC_KEY-DOKNR transporting no fields.
        check SY-SUBRC is not initial.

        refresh LT_DRAD.
        LT_DRAD = value #( base LT_DRAD ( OBJECTTYPE = YCL_RF_TPM_BL_TP=>C_OBJ_MARA
                                          OBJECTKEY  = P_MATNR ) ).

        call function 'BAPI_DOCUMENT_SAVEOBJECTLINKS'
          exporting
            DOCUMENTTYPE    = LS_DOC_KEY-DOKAR
            DOCUMENTNUMBER  = LS_DOC_KEY-DOKNR
            DOCUMENTPART    = LS_DOC_KEY-DOKTL
            DOCUMENTVERSION = LS_DOC_KEY-DOKVR
          importing
            RETURN          = LS_RETURN
          tables
            OBJECTLINKS     = LT_DRAD
          exceptions
            others          = 1.
        if LS_RETURN-TYPE eq 'E'.
          call function 'BAPI_TRANSACTION_ROLLBACK'.
        else.
          call function 'BAPI_TRANSACTION_COMMIT'
            exporting
              WAIT = ABAP_TRUE.
        endif.

        call function 'BAPI_DOCUMENT_SETSTATUS'
          exporting
            DOCUMENTTYPE    = LS_DOC_KEY-DOKAR
            DOCUMENTNUMBER  = LS_DOC_KEY-DOKNR
            DOCUMENTPART    = LS_DOC_KEY-DOKTL
            DOCUMENTVERSION = LS_DOC_KEY-DOKVR
            STATUSEXTERN    = 'FR'
            STATUSINTERN    = 'FR'
          exceptions
            others          = 1.
        if SY-SUBRC is initial.
          call function 'BAPI_TRANSACTION_ROLLBACK'.
        else.
          call function 'BAPI_TRANSACTION_COMMIT'
            exporting
              WAIT = ABAP_TRUE.
        endif.

      endloop.


    catch CX_SY_MOVE_CAST_ERROR /VCXI/CX_CKX CX_ROOT.
  endtry.
