*&---------------------------------------------------------------------*
*& Report  ZTESTPCONT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
report ZTESTPCONT.
data: LS_KOMK type KOMK,
      LS_KOMP type KOMP.
data: begin of TKOMV occurs 50.
        include structure KOMV.
      data: end of TKOMV.
data: begin of TKOMVD occurs 50.       "Belegkonditionen
        include structure KOMVD.
      data: end of TKOMVD.

data  LS_COMM_HEAD_I         type KOMK.
data: LT_KOMV  type KOMV_TAB,
      LT_KOMVD type KOMVD_T.

*concatenate LS_JHAGA-POS_NR LS_JHAGA-GRUPPABRNR into LV_VBDPAPOSNR.
*clear LS_KOMK.
*LS_KOMK-MANDT                         = SY-MANDT.
*LS_KOMK-KALSM                         = ZV1000. "ls_jhaga-kalsm.
*LS_KOMK-KAPPL                         = 'V1'. "'JA'.
*LS_KOMK-WAERK                         = 'EUR'. "ls_jhaga-waerg.
*LS_KOMK-KNUMV                         = LS_JHAK-KNUMV.
*LS_KOMP-KPOSN                         = LV_VBDPAPOSNR.
LS_COMM_HEAD_I-BELNR = 20004323. "E_INVOICE_HEADER-VBELN.
LS_COMM_HEAD_I-KNUMV = 0000115745. "E_INVOICE_HEADER-KNUMV.

call function 'RV_PRICE_PRINT_HEAD'
  exporting
    COMM_HEAD_I = LS_COMM_HEAD_I
  tables
    TKOMV       = LT_KOMV
    TKOMVD      = LT_KOMVD.

IF sy-subrc eq 0.

ENDIF.

DATA:lv_vbak TYPE TABLE OF vbak,
      lw_vbak TYPE vbak. DATA: pr_kappl(01)
            TYPE c VALUE 'V'. DATA: print_mwskz.   SELECT * FROM vbak            INTO CORRESPONDING FIELDS OF lw_vbak            WHERE vbeln EQ slp-vbelv.   ENDSELECT.   IF komk-knumv NE lw_vbak-knumv.     CLEAR komk.     komk-mandt = sy-mandt.
komk-kalsm = lw_vbak-kalsm. *    komk-fkart = lw_vbak-fkart.     komk-kappl = pr_kappl.     IF vbdkr-kappl NE space. *      komk-kappl = lw_vbak-kappl.     ENDIF.     komk-waerk = lw_vbak-waerk.     komk-knumv = lw_vbak-knumv.     komk-vbtyp =
lw_vbak-vbtyp.     komk-bukrs = lw_vbak-BUKRS_VF.     komk-land1 = lw_vbak-KVGR1.     komk-vkorg = lw_vbak-vkorg.     komk-vtweg = lw_vbak-vtweg.     komk-spart = lw_vbak-spart.     komk-hwaer = lw_vbak-WAERK.     komk-prsdt = lw_vbak-erdat.
komk-kurst = lw_vbak-kurst.     komk-FKART = lw_vbak-FKARA.     komk-kurrf_dat = lw_vbak-AUDAT.   ENDIF.   komp-kposn = lw_vbak-VTWEG.   komp-kursk = lw_vbak-kurst.   komp-kursk_dat = lw_vbak-ERDAT.   IF lw_vbak-vbtyp CA 'HKNOT6'.     IF
lw_vbak-HITYP_PR CA ' A'.       komp-shkzg = 'X'.     ENDIF.   ELSE.     IF  lw_vbak-HITYP_PR CA 'BX'.       komp-shkzg = 'X'.     ENDIF.   ENDIF.   CALL FUNCTION 'RV_PRICE_PRINT_ITEM'     EXPORTING       comm_head_i = komk       comm_item_i = komp
 language    = nast-spras     IMPORTING       comm_head_e = komk       comm_item_e = komp     TABLES       tkomv       = tkomv       tkomvd      = tkomvd.
*    CALL FUNCTION 'RV_PRICE_PRINT_REFRESH'
*      TABLES
*        tkomv                             = lt_komv.

*    CALL FUNCTION 'RV_PRICE_PRINT_ITEM'
*      EXPORTING
*        comm_head_i                       = ls_komk
*        comm_item_i                       = ls_komp
*        language                          = nast-spras
*      IMPORTING
*        comm_head_e                       = ls_komk
*        comm_item_e                       = ls_komp
*      TABLES
*        tkomv                             = lt_komv
*        tkomvd                            = lt_komvd.
