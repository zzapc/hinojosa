*&---------------------------------------------------------------------*
*& Report  ZTEST_CARGAR_PLASTICO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZTEST_CARGAR_PLASTICO.

TABLES: rcgfiletr.
" Constantes
CONSTANTS: lc_fileformat_binary        LIKE rlgrap-filetype
                                       VALUE 'BIN'.
DATA: flg_stay   TYPE boolean.

CONSTANTS: lc_tr TYPE trkorr VALUE 'BEPK...'.


PARAMETERS: p_tr     TYPE trkorr OBLIGATORY DEFAULT lc_tr,
            p_front  LIKE rcgfiletr-ftfront DEFAULT 'c:/temp/' OBLIGATORY,
            lv_fdata LIKE rcgfiletr-ftfront,
            lv_fcofi LIKE rcgfiletr-ftfront,
            lv_bdata LIKE rcgfiletr-ftappl,
            lv_bcofi LIKE rcgfiletr-ftappl,
            p_ftype  LIKE rcgfiletr-ftftype DEFAULT lc_fileformat_binary NO-DISPLAY,
            p_iefow  LIKE rcgfiletr-iefow NO-DISPLAY.

DATA: lv_front LIKE rcgfiletr-ftfront,
      lv_back  LIKE rcgfiletr-ftappl,
      lv_dir   TYPE string.

DATA: lv_fd    LIKE stpa-file,
      lv_fc    LIKE stpa-file.

AT SELECTION-SCREEN OUTPUT.

  LOOP AT SCREEN.

    IF screen-name(3) EQ 'LV_'.

      screen-input = '0'.
      MODIFY SCREEN.

    ENDIF.
  ENDLOOP.

  CALL FUNCTION 'TRINT_FI_GET_DIRECTORY_NAMES'
    IMPORTING
      ev_data_dir          = lv_fd
      ev_cofiles_dir       = lv_fc
    EXCEPTIONS
      get_dir_trans_failed = 1
      build_path_failed    = 2
      OTHERS               = 3.

  lv_fdata = p_front.
  lv_fcofi = p_front.
  lv_bdata = lv_fd.
  lv_bcofi = lv_fc.

  IF p_tr NE lc_tr.
    CONCATENATE  p_front 'R' p_tr+4(7) '.' p_tr(3) INTO lv_fdata.
    CONCATENATE  p_front p_tr+3(7) '.' p_tr(3) INTO lv_fcofi.
*    IF sy-subrc EQ 0.
    IF lv_bcofi CA '\'.
      CONCATENATE  lv_fd '\R' p_tr+4(7) '.' p_tr(3) INTO lv_bdata.
      CONCATENATE  lv_fc '\' p_tr+3(7) '.' p_tr(3) INTO lv_bcofi.
    ELSE.
      CONCATENATE  lv_fd '/R' p_tr+4(7) '.' p_tr(3) INTO lv_bdata.
      CONCATENATE  lv_fc '/' p_tr+3(7) '.' p_tr(3) INTO lv_bcofi.
    ENDIF.
  ENDIF.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_front.

  CALL METHOD cl_gui_frontend_services=>directory_browse
    EXPORTING
      window_title    = 'Select Folder Path'
*     initial_folder  = 'c:\'
    CHANGING
      selected_folder = lv_dir.

  CONCATENATE lv_dir '\' INTO p_front.

AT SELECTION-SCREEN ON p_tr.

  DATA: l TYPE i.
  l = strlen( p_tr ).
  IF l NE 10.
    MESSAGE e398(00) WITH 'Incorrect transport request'.
  ENDIF.

START-OF-SELECTION.

* data file
  PERFORM upload
       USING
          lv_fdata
          lv_bdata
          p_iefow
          p_ftype
       CHANGING
          flg_stay.

  IF flg_stay IS INITIAL.
    WRITE: / 'Data file uploaded succesfully'.
  ELSE.
    WRITE: / 'Error uploading data file'.
  ENDIF.

*  if fld_stay
*  cofiles file
  PERFORM upload
     USING
        lv_fcofi
        lv_bcofi
        p_iefow
        p_ftype
     CHANGING
        flg_stay.

  IF flg_stay IS INITIAL.
    WRITE: / 'Cofiles uploaded succesfully'.
  ELSE.
    WRITE: / 'Error uploading cofiles file'.
  ENDIF.

*&---------------------------------------------------------------------*
*&      Form  upload
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->I_FTFRONT        text
*      -->I_FTAPPL         text
*      -->I_FLG_OVERWRITE  text
*      -->I_FTFTYPE        text
*      <--X_FLG_STAY       text
*----------------------------------------------------------------------*
FORM upload
      USING
        i_ftfront       LIKE rcgfiletr-ftfront
        i_ftappl        LIKE rcgfiletr-ftappl
        i_flg_overwrite LIKE rcgfiletr-iefow
        i_ftftype       LIKE rcgfiletr-ftftype
      CHANGING
        x_flg_stay      TYPE boolean.

  TYPES: t_line(1) TYPE x.
  DATA: i_tab   TYPE STANDARD TABLE OF t_line,
        i_wa(1) TYPE x.

  DATA: lv_fn TYPE string,
        lv_fl TYPE i.

  lv_fn = i_ftfront.

  CALL METHOD cl_gui_frontend_services=>gui_upload
    EXPORTING
      filename                = lv_fn
      filetype                = 'BIN'
*     header_length           = l_header_length
    IMPORTING
      filelength              = lv_fl
    CHANGING
      data_tab                = i_tab[]
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      not_supported_by_gui    = 17
      error_no_gui            = 18
      OTHERS                  = 19.

  OPEN DATASET i_ftappl FOR OUTPUT IN BINARY MODE.
  LOOP AT i_tab INTO i_wa.
    TRANSFER i_wa TO i_ftappl.
  ENDLOOP.
  CLOSE DATASET i_ftappl.

  IF sy-subrc NE 0.
    x_flg_stay = 'X'.
  ELSE.
    CLEAR x_flg_stay.
  ENDIF.


ENDFORM.                    "upload
