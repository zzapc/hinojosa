*&---------------------------------------------------------------------*
*& Report  ZTEST1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
report ZTEST1.
* Data declarations.
data:I_BAPI_VIEW like ORDER_VIEW.
data:SALES_DOCUMENTS like SALES_KEY occurs 0 with header line.
*ORDER_OUT
data:ORDER_ITEMS_OUT like BAPISDIT occurs 0 with header line.
data:ORDER_HEADERS_OUT like BAPISDHD occurs 0 with header line.
data:ORDER_HEADER_INX like BAPISDH1X.
***ORDER_IN
data:ORDER_ITEM_IN like BAPISDITM occurs 0 with header line.
data:ORDER_HEADER_IN like BAPISDH1 occurs 0 with header line.
data:ORDER_ITEM_INX like BAPISDITMX occurs 0 with header line.
data:SCHEDULE_LINES like BAPISCHDL occurs 0 with header line.
data:SCHEDULE_LINESX like BAPISCHDLX occurs 0 with header line.
data: I_HDR type BAPISDH1.
data: ITAB_ITEM          like BAPISDITEM  occurs 0 with header line.
data: ITAB_CH like ITAB_ITEM  occurs 0 with header line,
      SL_ITAB like BAPISDITEM.
data: S_ORDER_HEADER_IN like BAPISDH1.
data: S_ORDER_HEADER_INX like BAPISDH1X.
data: begin of I_ORDER_ITEM_IN occurs 0.
        include structure BAPISDITM.
      data: end   of I_ORDER_ITEM_IN.
data: begin of I_ORDER_ITEM_INX occurs 0.
        include structure BAPISDITMX.
      data: end   of I_ORDER_ITEM_INX.
data: begin of IT_RETURN occurs 0.
        include structure BAPIRET2.
      data: end of IT_RETURN.
data: begin of I_SCHED occurs 10.
        include structure BAPISCHDL.
      data: end of I_SCHED.
data: begin of I_SCHEDX occurs 10.
        include structure BAPISCHDLX.
      data: end of I_SCHEDX.
data : ZMSG(50) type C.
data: S_TVAK  type TVAK,
      F_POSNR type POSNR.
data: LR_IDAT_SVC type ref to YCL_TEST,
      LS_RETURN   type BAPIRET2.
* Parameters
selection-screen : begin of block ORDER with frame title TEXT-001.
selection-screen skip.
parameters: P_VBELN type VBAP-VBELN obligatory.
selection-screen : end of block ORDER.



CREATE OBJECT LR_IDAT_SVC.
try.
    call method LR_IDAT_SVC->GET_DETAILS_ORDER
      exporting
        IF_VBELN  = P_VBELN
      importing
        ET_RETURN = LS_RETURN.
  catch /VCXI/CX_CKX .
endtry.




*ORDER_HEADER_IN-SD_DOC_CAT  = 'C'.
*ORDER_HEADER_INX-UPDATEFLAG = 'U'.
*
*
*I_BAPI_VIEW-HEADER = 'X'.
*I_BAPI_VIEW-ITEM = 'X'.
*SALES_DOCUMENTS-VBELN = P_VBELN.
*append SALES_DOCUMENTS.
*
****GET LIST OF SALESORDER
*call function 'BAPISDORDER_GETDETAILEDLIST'
*  exporting
*    I_BAPI_VIEW       = I_BAPI_VIEW
*  tables
*    SALES_DOCUMENTS   = SALES_DOCUMENTS
*    ORDER_HEADERS_OUT = ORDER_HEADERS_OUT
*    ORDER_ITEMS_OUT   = ORDER_ITEMS_OUT.
*
*
*""GET CONFIG THE ITEMS IN SMRTVC
*"GET CONFIGURACION DE SVC DEL PRODUCTO PARA SABER SI HAY VALOR EN EL CAMPO REFVE
*"GET CUBOJ
*data: LF_CUOBJ type CUOBJ.
**LF_CUOBJ = ORDER_ITEMS_OUT-c CUOBJ.
*
**    "1) Get GUID of VC Instance from CUOBJ
*data(LF_GVCIN_POS) = /VCXI/CL_VKCR_GATEWAY=>GET_GVCIN_BY_CUOBJ( LF_CUOBJ ).
*
**    **fin de codito test
*
*select single * into S_TVAK from TVAK where AUART eq 'ZOF'.
*sort ORDER_ITEMS_OUT by ITM_NUMBER descending.
*read table ORDER_ITEMS_OUT into data(LS_VBAP) index 1.
*F_POSNR = LS_VBAP-ITM_NUMBER + S_TVAK-INCPO.
*
*
*loop at ORDER_ITEMS_OUT into data(SL_ORDER_ITEMS_OUT) where REA_FOR_RE = 'Z4' .
**   Header update indicator
*  S_ORDER_HEADER_INX-UPDATEFLAG = 'U'.
*
*  I_ORDER_ITEM_IN-ITM_NUMBER    = F_POSNR .
*  I_ORDER_ITEM_IN-MATERIAL      = SL_ORDER_ITEMS_OUT-MATERIAL.
*  I_ORDER_ITEM_IN-TARGET_QTY    = SL_ORDER_ITEMS_OUT-TARGET_QTY.
*  I_ORDER_ITEM_IN-SALES_UNIT    = SL_ORDER_ITEMS_OUT-SALES_UNIT.
*  I_ORDER_ITEM_IN-VAL_TYPE      = SL_ORDER_ITEMS_OUT-VAL_TYPE.
*
*  I_ORDER_ITEM_INX-UPDATEFLAG   = 'I'.
*  I_ORDER_ITEM_INX-ITM_NUMBER   = F_POSNR.
*  I_ORDER_ITEM_INX-MATERIAL     = SL_ORDER_ITEMS_OUT-MATERIAL.
*  I_ORDER_ITEM_INX-TARGET_QTY   = 'X'.
*  I_ORDER_ITEM_INX-SALES_UNIT   = SL_ORDER_ITEMS_OUT-SALES_UNIT.
*  I_ORDER_ITEM_INX-VAL_TYPE     =  'X'.
*
*  append: I_ORDER_ITEM_IN, I_ORDER_ITEM_INX.
*endloop.
*
*call function 'BAPI_SALESORDER_CHANGE'
*  exporting
*    SALESDOCUMENT     = P_VBELN
*    ORDER_HEADER_IN   = S_ORDER_HEADER_IN
*    ORDER_HEADER_INX  = S_ORDER_HEADER_INX
*    BEHAVE_WHEN_ERROR = 'P'
*  tables
*    RETURN            = IT_RETURN
*    ORDER_ITEM_IN     = I_ORDER_ITEM_IN
*    ORDER_ITEM_INX    = I_ORDER_ITEM_INX.
*
*if SY-SUBRC eq 0.
*  commit work.
*endif.
*
*
*loop at IT_RETURN.
*  write / IT_RETURN-MESSAGE.
*endloop.
