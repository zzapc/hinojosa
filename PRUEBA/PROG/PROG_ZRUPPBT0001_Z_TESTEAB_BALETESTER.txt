*&---------------------------------------------------------------------*
*& Report  Z_TESTEAB_BALETESTER
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zruppbt0001.

DATA: ls_qals_imp        TYPE qals,
      ls_rmqed_imp       TYPE rmqed,
      ls_qals            TYPE qals,
      lv_kzskiplot       TYPE qals-insmk,
      lv_prueflos        TYPE qals-prueflos,
      lv_subrc           TYPE sy-subrc,
      lv_skip_to_stock   TYPE qals-kzskiplot,
      lv_date            TYPE date,
      lv_time            TYPE time,
      lv_moisture        TYPE string,
      lv_plastic         TYPE string,
      lv_ashes           TYPE string,
      lv_lignin          TYPE string,
      lv_mositure_eva(1) TYPE c,
      lv_plastic_eva(1)  TYPE c,
      lv_ashes_eva(1)    TYPE c,
      lv_lignin_eva(1)   TYPE c,
      lv_codi_barres     TYPE string,
      lv_matnr           TYPE string,
      lv_charg           TYPE string,
      ls_mch1            TYPE mch1,
      lv_entradamp       TYPE string,
      ls_ztmm0006        TYPE ztmm0006,
      lt_bale_results    TYPE TABLE OF ztbale_results,
      ls_bale_results    TYPE ztbale_results,
      lv_mail(1)         TYPE c.


DATA: lt_char_requirements TYPE STANDARD TABLE OF bapi2045d1,
      ls_char_requirements TYPE bapi2045d1,
      lt_results_detail    TYPE STANDARD TABLE OF bapi2045d2,
      lt_char_results      TYPE STANDARD TABLE OF bapi2045d2,
      ls_char_results      TYPE bapi2045d2,
      lt_return            TYPE TABLE OF bapiret2,
      ls_return            TYPE bapiret2.

*   variables envio mail.
DATA: lt_addr           TYPE bcsy_smtpa,
      lo_send_email     TYPE REF TO cl_bcs,
      lo_document       TYPE REF TO cl_document_bcs,
      lo_recipient      TYPE REF TO if_recipient_bcs,
      lv_sent_to_all    TYPE os_boolean,
      lo_sender         TYPE REF TO cl_cam_address_bcs,
      lv_sender         TYPE adr6-smtp_addr,
      lv_subject        TYPE so_obj_des,
      lt_message        TYPE soli_tab,
      ls_message        TYPE soli,
      ls_zte80_messages TYPE zte80_messages.

lv_date = sy-datum.
lv_time = sy-uzeit.
lv_moisture = '10'.
lv_plastic = '5'.
lv_ashes = '0'.
lv_lignin = '0'.
lv_codi_barres = '000000000001500005415AR00001'.
ls_qals_imp-werk      = '3020'.
ls_qals_imp-ktextlos  = '3'. "Posición muestra

lv_matnr = lv_codi_barres+0(18).
lv_charg = lv_codi_barres+18(10).

ls_qals_imp-lifnr     = '101694'. "Proveedor entrada MP
ls_qals_imp-matnr     = lv_matnr. "Material MP
ls_qals_imp-charg     = lv_charg. "Lote MP
ls_qals_imp-art       = '89'.
ls_qals_imp-herkunft  = '89'.
ls_qals_imp-losmenge  = '1'.

ls_rmqed_imp-dbs_steuer = '01'.
ls_rmqed_imp-dbs_flag   = 'X'.
ls_rmqed_imp-dbs_edunk  = 'X'.
ls_rmqed_imp-dbs_fdunk  = 'X'.
ls_rmqed_imp-dbs_noerr  = 'X'.
ls_rmqed_imp-dbs_nowrn  = 'X'.
ls_rmqed_imp-dbs_noauf  = 'X'.

*   recuperamos los destinatios del mail.
SELECT * FROM ztmes_mail
  INTO TABLE @DATA(t_mail)
  WHERE interface = 'MP'.

READ TABLE t_mail INTO DATA(ls_mails) WITH KEY werks = ls_qals_imp-werk.
IF sy-subrc = 0.

  IF ls_mails-mail_1 NE space.
    APPEND ls_mails-mail_1 TO lt_addr.
  ENDIF.
  IF ls_mails-mail_2 NE space.
    APPEND ls_mails-mail_2 TO lt_addr.
  ENDIF.
  IF ls_mails-mail_3 NE space.
    APPEND ls_mails-mail_3 TO lt_addr.
  ENDIF.
  IF ls_mails-mail_4 NE space.
    APPEND ls_mails-mail_4 TO lt_addr.
  ENDIF.
  IF ls_mails-mail_5 NE space.
    APPEND ls_mails-mail_5 TO lt_addr.
  ENDIF.

ENDIF.

SELECT SINGLE * FROM mch1
            INTO ls_mch1
            WHERE matnr = lv_matnr AND
                  charg = lv_charg.

lv_entradamp = ls_mch1-licha+0(10).

SELECT SINGLE * FROM ztmm0006
          INTO ls_ztmm0006
          WHERE zentrada = lv_entradamp.


CALL FUNCTION 'QPL1_INITIALIZE'
  EXPORTING
    i_lot_data_only = 'X'.

CALL FUNCTION 'QPL1_INSPECTION_LOT_CREATE'
  EXPORTING
    qals_imp        = ls_qals_imp
    rmqed_imp       = ls_rmqed_imp
  IMPORTING
    e_kzskiplot     = lv_kzskiplot
    e_prueflos      = lv_prueflos
    e_qals          = ls_qals
    subrc           = lv_subrc
    e_skip_to_stock = lv_skip_to_stock.

IF lv_subrc <= '4'.

  CALL FUNCTION 'QPL1_UPDATE_MEMORY'
    EXPORTING
      i_qals  = ls_qals
      i_updkz = 'I'
      i_rmqed = ls_rmqed_imp.

  CALL FUNCTION 'QPL1_INSPECTION_LOTS_POSTING'
    EXPORTING
      i_mode = ' '.

  COMMIT WORK AND WAIT.

  CALL FUNCTION 'BAPI_INSPOPER_GETDETAIL'
    EXPORTING
      insplot                = lv_prueflos
      inspoper               = '0010'
      read_char_requirements = 'X'
      char_filter_no         = '1'
      char_filter_tcode      = 'QE11'
      max_insppoints         = '100'
      insppoint_from         = '0'
*    IMPORTING
*     return                 = lt_return2
    TABLES
      char_requirements      = lt_char_requirements.

  LOOP AT lt_char_requirements INTO DATA(ls_value).

    ls_char_results-insplot   = ls_value-insplot.
    ls_char_results-inspoper  = ls_value-inspoper.
    ls_char_results-inspchar  = ls_value-inspchar.
    ls_char_results-closed    = 'X'.
    ls_char_results-evaluated = 'X'.

    IF     ls_value-mstr_char = '00001009'.
      ls_char_results-mean_value = lv_moisture.
    ELSEIF ls_value-mstr_char = '00001010'.
      ls_char_results-mean_value = lv_plastic.
    ELSEIF ls_value-mstr_char = '00001011'.
      ls_char_results-mean_value = lv_ashes.
    ELSEIF ls_value-mstr_char = '00001012'.
      ls_char_results-mean_value = lv_lignin.
    ENDIF.

    APPEND ls_char_results TO lt_char_results.

  ENDLOOP.

  CALL FUNCTION 'BAPI_INSPOPER_RECORDRESULTS'
    EXPORTING
      insplot      = lv_prueflos
      inspoper     = '0010'
    TABLES
      char_results = lt_char_results
      returntable  = lt_return.

  COMMIT WORK AND WAIT.

  READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.

  IF sy-subrc = 0. "missatge de error no se han registrat les caracteristiques correctament

*         Cuerpo del mail
    CONCATENATE 'Bale Tester - Muestra' lv_codi_barres 'Error en la grabación de resultados' INTO ls_message.
    APPEND ls_message TO lt_message.

*         Crear documento
    CONDENSE lv_codi_barres.
    CONCATENATE 'BT Muestra' lv_codi_barres 'Error' INTO lv_subject RESPECTING BLANKS.

    lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                     i_subject =  lv_subject
                                                     i_text    =  lt_message ).
*         Enviar documento al email
    lo_send_email->set_document( lo_document ).

    lv_sender = 'sap@hinojosa.es'.

    lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
    lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
    LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr>).
      lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr> ).
      lo_send_email->add_recipient( i_recipient = lo_recipient ).
    ENDLOOP.


*         Enviar email
    TRY.
        lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
      CATCH cx_send_req_bcs .

    ENDTRY.

    COMMIT WORK AND WAIT.

  ELSE.

    CALL FUNCTION 'BAPI_INSPOPER_GETDETAIL'
      EXPORTING
        insplot           = lv_prueflos
        inspoper          = '0010'
        read_char_results = 'X'
        char_filter_no    = '1   '
        char_filter_tcode = 'QE11'
        max_insppoints    = 100
        insppoint_from    = 0
      TABLES
        char_results      = lt_results_detail.

*         Inicialización de la clase
    lo_send_email = cl_bcs=>create_persistent( ).

    lv_mositure_eva = 'A'.
    lv_plastic_eva  = 'A'.
    lv_ashes_eva    = 'A'.
    lv_lignin_eva   = 'A'.

    LOOP AT lt_results_detail INTO DATA(ls_results_detail).

      IF ls_results_detail-evaluation = 'R'. "Característica fuera de valoraciones

        lv_mail = 'X'.
*         Cuerpo del mail
        LOOP AT lt_char_requirements INTO ls_char_requirements WHERE inspchar = ls_results_detail-inspchar.
          CONCATENATE ls_char_requirements-char_descr ' =' ls_results_detail-mean_value ' (' ls_char_requirements-up_tol_lmt ' ).' INTO ls_message.

          IF ls_char_requirements-mstr_char = '00001009'.
            lv_mositure_eva = ls_results_detail-evaluation.
          ENDIF.
          IF ls_char_requirements-mstr_char = '00001010'.
            lv_plastic_eva = ls_results_detail-evaluation.
          ENDIF.
          IF ls_char_requirements-mstr_char = '00001011'.
            lv_ashes_eva = ls_results_detail-evaluation.
          ENDIF.
          IF ls_char_requirements-mstr_char = '00001012'.
            lv_lignin_eva = ls_results_detail-evaluation.

          ENDIF.
        ENDLOOP.

        APPEND ls_message TO lt_message.

      ENDIF.

    ENDLOOP.

    IF lv_mail = 'X'.

*         crear documento
      CONDENSE lv_codi_barres.
      CONCATENATE 'BT Muestra ' lv_codi_barres ' Error' INTO lv_subject RESPECTING BLANKS.

      lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                       i_subject =  lv_subject
                                                       i_text    =  lt_message ).
*         Enviar documento al email
      lo_send_email->set_document( lo_document ).

      lv_sender = 'sap@hinojosa.es'.

      lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
      lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
      LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr2>).
        lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr2> ).
        lo_send_email->add_recipient( i_recipient = lo_recipient ).
      ENDLOOP.


*         Enviar email
      TRY.
          lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
        CATCH cx_send_req_bcs .

      ENDTRY.

    ENDIF.

    COMMIT WORK AND WAIT.

    "Grabamos registros en la tabla ZTBALE_RESULTS estén fuera o dentro de las valoraciones

    ls_bale_results-insp_lote    = lv_prueflos.
    ls_bale_results-entrada_mp   = lv_entradamp.
    ls_bale_results-centro       = ls_qals_imp-werk.
    ls_bale_results-fecha_med    = lv_date.
    ls_bale_results-hora_med     = lv_time.
    ls_bale_results-pos_med      = ls_qals_imp-ktextlos.
    ls_bale_results-cod_barras   = lv_codi_barres.
    ls_bale_results-matnr        = lv_matnr.
    ls_bale_results-lote_mp      = lv_charg.
    ls_bale_results-humedad      = lv_moisture.
    ls_bale_results-ind_hum      = lv_mositure_eva.
    ls_bale_results-impropios    = lv_plastic.
    ls_bale_results-ind_imp      = lv_plastic_eva.
    ls_bale_results-cenizas      = lv_ashes.
    ls_bale_results-ind_cen      = lv_ashes_eva.
    ls_bale_results-lignina      = lv_lignin.
    ls_bale_results-ind_lig      = lv_lignin_eva.
    ls_bale_results-cod_prov     = ls_ztmm0006-lifnr.
    ls_bale_results-albaran      = ls_ztmm0006-xblnr.
    ls_bale_results-matricula    = ls_ztmm0006-zmatricula1.


    MODIFY ztbale_results FROM ls_bale_results.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.

  ENDIF.


ELSE. "no se ha creat lot de inspecció

*         Cuerpo del mail
  CONCATENATE 'Bale Tester  Muestra' lv_codi_barres 'Error en la creación del lote de inspección.' INTO ls_message.
  APPEND ls_message TO lt_message.

*         Crear documento
  CONDENSE lv_codi_barres.
  CONCATENATE 'BT Muestra' lv_codi_barres 'Error' INTO lv_subject RESPECTING BLANKS.

  lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                   i_subject =  lv_subject
                                                   i_text    =  lt_message ).
*         Enviar documento al email
  lo_send_email->set_document( lo_document ).

  lv_sender = 'sap@hinojosa.es'.

  lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
  lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
  LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr3>).
    lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr3> ).
    lo_send_email->add_recipient( i_recipient = lo_recipient ).
  ENDLOOP.


*         Enviar email
  TRY.
      lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
    CATCH cx_send_req_bcs .

  ENDTRY.

  COMMIT WORK AND WAIT.

ENDIF.
