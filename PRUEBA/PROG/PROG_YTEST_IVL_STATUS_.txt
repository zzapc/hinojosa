*&---------------------------------------------------------------------*
*& Report  YTEST_IVL_STATUS
*&
*&---------------------------------------------------------------------*
*& Check SmartVC Configuration Status
*& This report can check the status before and after processing of the
*& VC.
*& It can run as background job and automatically update/save the
*& configuration once processed.
*&---------------------------------------------------------------------*
report YTEST_IVL_STATUS.

*** Declarations
tables: MARA, MARC, VBAK, VBAP.

data: GF_STATE type /VCXI/VKSR_ELMST.
data: 0100F_UCOMM type SY-UCOMM.
data: GR_STATUS type ref to ZCL_VCXI_XCC_STATUS,
      GR_CX_CKX type ref to /VCXI/CX_CKX.
types GBSTA_RANGE type range of VBUP-GBSTA.
data LV_GBRANGE type GBSTA_RANGE.
types VBELN_RANGE type range of VBAK-VBELN.
data LV_VBELN type VBELN_RANGE.
data LS_RANGE_VBELN type VBELN_RANGE.

*** Select Options for Material Master
selection-screen begin of block B1 with frame title TEXT-001.
parameters:     PA_MAT as checkbox user-command MAT.
select-options: SO_MATNR for MARA-MATNR modif id MAT.
selection-screen end of block B1.

*** Select Options for Sales Documents
selection-screen begin of block B2 with frame title TEXT-002.
parameters:     PA_SDD as checkbox user-command SDD.
select-options: SO_VBELN for VBAK-VBELN modif id SDD.
*                  SO_PRDCO for VBAP-ZZPRDCO modif id SDD. --------------------------------------------------------------------------------------------DESCOMENTAR
selection-screen end of block B2.

** Output related Parameters
selection-screen begin of block B3 with frame title TEXT-003.
select-options: SO_STATE for GF_STATE.
selection-screen skip.
parameters: PA_ALV  radiobutton group R1 default 'X' user-command R1,
            PA_LIST radiobutton group R1,
            PA_PROC as checkbox modif id ALV, " Processing
            PA_COAR as checkbox modif id LIS, " Process and Save all red
            PA_CORN as checkbox modif id LIS, " Proc. and Save "Refill needed"
            PA_COGR as checkbox modif id LIS. " Proc. and Save Green VC
selection-screen begin of line.
selection-screen comment (20) TEXT-006 modif id LIS.
parameters:     PA_RMID type SY-MSGID modif id LIS.
selection-screen comment (20) TEXT-007 modif id LIS.
parameters:     PA_RMNO type SY-MSGNO modif id LIS.
selection-screen end of line.
selection-screen end of block B3.


***----------------------------------------------------------------------------
*** I N I T I A L I Z A T I O N
***----------------------------------------------------------------------------
initialization.

***----------------------------------------------------------------------------
*** A T   S E L E C T I O N  - S C R E E N   O U T P U T
***----------------------------------------------------------------------------
at selection-screen output.
  if PA_ALV ne ABAP_TRUE.
    clear: PA_PROC.
  endif.
  if PA_LIST ne ABAP_TRUE.
    clear: PA_COAR,
           PA_CORN,
           PA_RMID,
           PA_RMNO.
  endif.
  loop at screen.
    case SCREEN-GROUP1.
      when 'MAT'.    "Material
        if PA_MAT ne ABAP_TRUE.
          SCREEN-INPUT = 0.
        endif.
      when 'SDD'.    "Sales Document
        if PA_SDD ne ABAP_TRUE.
          SCREEN-INPUT = 0.
        endif.
      when 'ALV'.    "ALV Output
        if PA_ALV ne ABAP_TRUE.
          SCREEN-ACTIVE = 0.
        endif.
      when 'LIS'.    "List Output
        if PA_LIST ne ABAP_TRUE.
          SCREEN-ACTIVE = 0.
        endif.
    endcase.
    modify screen.
  endloop.

***----------------------------------------------------------------------------
*** S T A R T - O F - S E L E C T I O N
***----------------------------------------------------------------------------
start-of-selection.

  try.
      create object GR_STATUS.

***----------------------------------------------------------------------------
***   Select Data for Processing
      if PA_MAT = ABAP_TRUE.
        GR_STATUS->SELECTION_MAT( II_MATNR = SO_MATNR[]
                                  II_MTART = value #( ) "SO_MTART[]
                                  II_MATKL = value #( )"SO_MATKL[]
                                  II_LVORM = value #( )"SO_LVORM[]
                                  II_WERKS = value #( )"SO_WERKS[]
                                  II_STDPD = value #( )"SO_STDPD[]
                                  II_BESKZ = value #( )"SO_BESKZ[]
                                  II_SOBSL = value #( )"SO_SOBSL[]
                                  II_LVOWK = value #( )"SO_LVOWK[]
                                  ).
      endif.

      if PA_SDD = ABAP_TRUE.

        select distinct
        VBAK~VBELN
        into table @data(LT_VBELN)
        from VBAK inner join VBAP on VBAK~VBELN eq VBAP~VBELN
        where
          VBAK~VBELN  in @SO_VBELN
*          and vbap-zzprdco in so_prdco.-----------------------------------------------------------------------------------------------------------------------DESCOMENTAR
        order by VBAK~VBELN.

        loop at LT_VBELN into data(LS_VBELN).
          append initial line to LV_VBELN assigning field-symbol(<LS_RANGE_LINE>).
          <LS_RANGE_LINE>-SIGN = 'I'.
          <LS_RANGE_LINE>-OPTION = 'EQ'.
          <LS_RANGE_LINE>-LOW = LS_VBELN-VBELN.
        endloop.


        GR_STATUS->SELECTION_SDOC( II_VBELN = LV_VBELN
                                    II_ERDAT = value #( )"SO_ERDAT[]
                                    II_ERNAM = value #( )"SO_ERNAM[]
                                    II_VBTYP = value #( )"SO_VBTYP[]
                                    II_AUART = value #( )"SO_AUART[]
                                    II_MATSD = value #( )"SO_MATSD[]
                                    II_WRKSD = value #( )"SO_WRKSD[]
                                    II_GBSTA = LV_GBRANGE
                                    II_ABGRU = value #( )"SO_ABGRU[]
                                    ).

      endif.
*
*
****   Check Status
      GR_STATUS->CHECK_STATUS( IF_PROC  = PA_PROC
                               IF_LIST  = PA_LIST
                               II_STATE = SO_STATE[] ).

***----------------------------------------------------------------------------
***   Either List Processing or User Interaction via ALV GRID
      if PA_ALV eq 'X'.
**     Call ALV screen
        call screen 0100.
      else.
**     List Output
        GR_STATUS->LIST_PROCESSING( IF_PAMAT = PA_MAT
                                    IF_COAR  = PA_COAR
                                    IF_CORN  = PA_CORN
                                    IF_COGR  = PA_COGR
                                    IF_RMID  = PA_RMID
                                    IF_RMNO  = PA_RMNO
                                    II_STATE = SO_STATE[] ).
      endif.

    catch /VCXI/CX_CKX into GR_CX_CKX.
      GR_CX_CKX->SHOW_MESSAGE( ).
  endtry.


*&---------------------------------------------------------------------*
*& Module 0100_PBO OUTPUT
*&---------------------------------------------------------------------*
*& PBO for Screen 0100
*&---------------------------------------------------------------------*
module 0100_PBO output.

  set pf-status '0100'.
  set titlebar '0100'.

  GR_STATUS->DISPLAY_ALV( ).

endmodule.

*&---------------------------------------------------------------------*
*& Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*  Process User Command of Screen 0100
*----------------------------------------------------------------------*
module USER_COMMAND_0100 input.

  case 0100F_UCOMM.
    when 'END'.
      leave program.
    when 'BACK' or 'CANCEL'.
      leave to screen 0.
  endcase.

endmodule.
