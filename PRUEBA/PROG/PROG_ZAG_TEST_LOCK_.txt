report ZAG_TEST_LOCK.

***data LF_WAIT_TIMES type I.
***select single LOW from TVARVC
***  into LF_WAIT_TIMES
***  where NAME eq 'YHP_MM_DMS_LINK WAIT_TIMES'
***    and TYPE eq 'P'
***    and NUMB eq 0000.

select single MANDT, MATNR, WERKS from MARC
  into @data(LS_MARC)
  where MATNR eq 'COINFL00001234'.

data LF_GARG type EQEGRAARG.
move LS_MARC to LF_GARG.

data LT_ENQUEUE type table of SEQG3.
data LF_NUMBER type SYST_TABIX.

***do LF_WAIT_TIMES time.
call function 'ENQUEUE_READ'
  exporting
    GNAME                 = 'MARC'
    GARG                  = LF_GARG
  importing
    NUMBER                = LF_NUMBER
  tables
    ENQ                   = LT_ENQUEUE
  exceptions
    COMMUNICATION_FAILURE = 1
    SYSTEM_FAILURE        = 2
    others                = 3.
if LF_NUMBER gt 0.
  wait up to 1 seconds.
else.
  exit.
endif.
***enddo.

***try.
***
****** Get current CUOBJ
***    data LF_CUOBJ type CUOBJ.
***    call function 'CE_I_HAS_ACTUAL_INSTANCE'
***      importing
***        INSTANCE = LF_CUOBJ
***      exceptions
***        others   = 1.
***    if LF_CUOBJ is initial.
***      select single CUOBJ from MARC
***        into LF_CUOBJ
***        where MATNR eq 'COINFL00001234'.
***    endif.
***
****** Get GUID for VC Instance by CUOBJ
***    check LF_CUOBJ is not initial.
***    data(LV_GVCIN) = /VCXI/CL_VKCR_GATEWAY=>GET_GVCIN_BY_CUOBJ( IF_CUOBJ = LF_CUOBJ ).
***
********** Get Context Manager by GUID of VC Instance
*******    check LV_GVCIN is not initial.
*******
*******    data(LR_CNTMGR) = /VCXI/CL_VKCR_GATEWAY=>GET_CNTMGR_BY_GVCIN( IF_GVCIN = IF_GVCIN ).
*******
*******    check LR_CNTMGR is bound.
*******    data(RF_LOCKED) = LR_CNTMGR->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).
***
****** Is Configuration locked
***    check LV_GVCIN is not initial.
***    data(LF_LOCKED_GATE) =  /VCXI/CL_VKCR_GATEWAY=>IS_LOCKED( IF_GVCIN = LV_GVCIN ).
***
******    data(LR_SVC) = /VCXI/CL_VKSRA_SVC=>GET_INSTANCE( IF_GVCIN = LV_GVCIN ).
***
***    data LF_DCONF     type /VCXI/VKCR_DCONF.
***    data LF_CHANGENR  type CDCHANGENR.
***    data(LF_GUID) = /VCXI/CL_VKSR_RUNTIME=>ENCRYPT_GUID( IF_GVCIN    = LV_GVCIN
***                                                         IF_DCONF    = LF_DCONF
***                                                         IF_CHANGENR = LF_CHANGENR ).
***
***    data(LR_RUNTIME) = cast /VCXI/CL_VKSR_RUNTIME( /VCXI/CL_VKSR_RUNTIME=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ) ).
***
***    data(LF_LOCKED) =  LR_RUNTIME->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).
***
***  catch CX_ROOT.
***endtry.
