*&---------------------------------------------------------------------*
*& Report  ZAG_TEST_POPUP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
report ZAG_TEST_POPUP.

parameters P_MATNR type MARA-MATNR.

***data(LT_FIELDS)   = value TY_SVAL( ( TABNAME = 'RSVAR' FIELDNAME = 'VARiante' VALUE = SPACE ) ).

data(LT_FIELDS)   = value TY_SVAL( ( TABNAME   = 'RSVAR'
                                     FIELDNAME = 'VARIANT'
                                     FIELD_OBL = ABAP_TRUE )

                                   ( TABNAME = 'VARIT'
                                     FIELDNAME = 'VTEXT' )   ).


call function 'POPUP_GET_VALUES'
  exporting
    POPUP_TITLE = 'Save Variant'
  tables
    FIELDS      = LT_FIELDS.


data: begin of VARIANT_TABLE occurs 30,
        VARIANT       like RSVAR-VARIANT,
        TEXT          like VARIT-VTEXT,
        ENVIR         like VARID-ENVIRONMNT,
        ENAME         like VARID-ENAME,
        AENAME        like VARID-AENAME,
        AEDAT         like VARID-AEDAT,
        MLANGU        like VARID-MLANGU,
        PROTECTED     like VARID-PROTECTED,
        SELSCREEN(80).                  "<= 20 Bilder
data: end of VARIANT_TABLE.


***data LF_VAR type RSVAR-VARIANT.
***data LF_VTEXT type RSVAR-VTEXT.
***call function 'RS_VARIANT_CATALOG'
***  exporting
***    REPORT               = SY-REPID
***    NEW_TITLE            = 'var test'
***  importing
***    SEL_VARIANT          = LF_VAR
***    SEL_VARIANT_TEXT     = LF_VTEXT
****  tables
****   BELONGING_DYNNR      =
***  exceptions
***    NO_REPORT            = 1
***    REPORT_NOT_EXISTENT  = 2
***    REPORT_NOT_SUPPLIED  = 3
***    NO_VARIANTS          = 4
***    NO_VARIANT_SELECTED  = 5
***    VARIANT_NOT_EXISTENT = 6
***    others               = 7.
***if SY-SUBRC <> 0.
***endif.

***ranges V_RANGE for VARID-VARIANT occurs 10.
***data LV_DYNPRO type SY-DYNNR.
***data: L_SYSVAR_ONLY.
***perform GET_CATALOG_INFO in program SAPLSVAR tables   V_RANGE
***                                                    VARIANT_TABLE
***                                           using    SY-REPID
***                                                    LV_DYNPRO
***                                                    L_SYSVAR_ONLY.
***
***
***perform SEND_ALV in program SAPLSVAR tables VARIANT_TABLE using SPACE.
***
***break-point.


***data LV_VARIANT type RSVAR-VARIANT.
***call function 'RS_VARIANT_SAVE_FROM_SELSCREEN'
***  exporting
***    CURR_REPORT   = SY-REPID
***  importing
***    VARIANT       = LV_VARIANT
***  exceptions
***    ERROR_MESSAGE = 1
***    others        = 2.


***data LS_CAT type RSVCAT.
***call function 'RS_ALL_VARIANTS_4_1_REPORT'
***  exporting
***    PROGRAM             = SY-REPID
****   TEXT                = ' '
***  importing
***    CAT                 = LS_CAT
**** TABLES
****   VAR_TXT             =
***  exceptions
***    REPORT_NOT_EXISTENT = 1
***    others              = 2.
***if SY-SUBRC <> 0.
**** Implement suitable error handling here
***endif.
