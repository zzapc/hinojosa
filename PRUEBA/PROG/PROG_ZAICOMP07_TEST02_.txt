*&---------------------------------------------------------------------*
*& Report  ZAICOMP07_TEST02
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
report ZAICOMP07_TEST02.

types: begin of T_KEYFIELDS,         " Key fields for codition records
         FNAME  type FIELDNAME,      " Key field name
         FVALUE type CHAR30,         " field value
       end of T_KEYFIELDS.

data:
  LS_T685        type T685,
  LS_KEYFIELDS   type T_KEYFIELDS,
  LT_KEYFIELDS   type table of T_KEYFIELDS,
  LS_T682I       type T682I,
  LT_T682I       type table of T682I,
  LS_DD03L       type DD03L,
  LT_DD03L       type table of DD03L,
  LF_KAPPL       type KAPPL value 'V',
  LF_KSCHL       type KSCHL value 'ZPRC',
  LF_KVEWE       type KVEWE value 'A',
  LF_FVALUE      type C length 52,
  LF_TABNAME     type TABNAME,
  LF_KEYNOTFOUND type C,
  LF_INITWHERE   type C length 100,
  LF_WHERECOND   type C length 300,
  LF_KBETR       type KBETR,
  LF_KNUMH       type KNUMH,
  LF_KDGRP       type KDGRP,
  LS_SALES_HD    type BAPISDHD.

*** Prepare the key fields
*** Application
append value #( FNAME = 'KAPPL' FVALUE = 'A' ) to LT_KEYFIELDS.

*** Condition Type
append value #( FNAME = 'KSCHL' FVALUE = 'ZKRC' ) to LT_KEYFIELDS.

*** Sales Orgnization
append value #( FNAME = 'VKORG' FVALUE = '2001' ) to LT_KEYFIELDS.

*** Sales Division
append value #( FNAME = 'VTWEG' FVALUE = '10' ) to LT_KEYFIELDS.

*** Plant
append value #( FNAME = 'WERKS' FVALUE = '2001' ) to LT_KEYFIELDS.

*** Customer / Sold-to-party
append value #( FNAME = 'KUNNR' FVALUE = '0000101044' ) to LT_KEYFIELDS.

*** Material
append value #( FNAME = 'MATNR' FVALUE = 'COINNI00000261' ) to LT_KEYFIELDS.

*** Incoterms
append value #( FNAME = 'INCO1' FVALUE = 'DAP' ) to LT_KEYFIELDS.

*** Release Status
append value #( FNAME = 'KFRST' FVALUE = SPACE ) to LT_KEYFIELDS.

*** Get the details about condition type
call function 'SD_COND_T685_SELECT'
  exporting
    CTS_KAPPL = 'V'        "Application
    CTS_KSCHL = 'ZPRC'     "Condition type
    CTS_KVEWE = 'A'        "Use
  importing
    CTS_T685  = LS_T685.   "Conditions: Types


*** Get the Access sequence details
select * from T682I into table LT_T682I
                         where KVEWE = LF_KVEWE
                           and KAPPL = LF_KAPPL
                           and KOZGF = LS_T685-KOZGF.
sort LT_T682I by KOTABNR.
delete adjacent duplicates from LT_T682I comparing KOTABNR.

sort LT_T682I by KOLNR.

*** Build the initial where condition for condition tables
concatenate `'` LF_KAPPL `'` into LF_FVALUE.
concatenate 'KAPPL' '=' LF_FVALUE into LF_INITWHERE
                         separated by SPACE.

concatenate `'` LF_KSCHL `'` into LF_FVALUE.
concatenate LF_INITWHERE
            'AND'
            'KSCHL'
            '='
            LF_FVALUE
       into LF_INITWHERE
separated by SPACE.

*** Loop the condition tables
loop at LT_T682I into LS_T682I.
  clear: LF_TABNAME,LT_DD03L,LF_KEYNOTFOUND,LF_WHERECOND,LF_KBETR.

  concatenate LS_T682I-KVEWE LS_T682I-KOTABNR into LF_TABNAME.

*** Key fields of tabname
*** Get the key field information from DD03L table
  select * from DD03L into table LT_DD03L
                           where TABNAME = LF_TABNAME
                             and KEYFLAG = ABAP_TRUE.
*** Remove the client field as it is passed default
  delete LT_DD03L where FIELDNAME = 'MANDT'.

*** Remove the application as we already build above
  read table LT_DD03L into LS_DD03L with key FIELDNAME = 'KAPPL'.
  if SY-SUBRC eq 0.
    delete LT_DD03L index SY-TABIX.
  else.
    continue.
  endif.

*** Remove the Condition type
  read table LT_DD03L into LS_DD03L with key FIELDNAME = 'KSCHL'.
  if SY-SUBRC eq 0.
    delete LT_DD03L index SY-TABIX.
  else.
    continue.
  endif.

*** Remove the valid to field as have given select query
  read table LT_DD03L into LS_DD03L with key FIELDNAME = 'DATBI'.
  if SY-SUBRC eq 0.
    delete LT_DD03L index SY-TABIX.
  else.
    continue.
  endif.

*** Initiate the building of dynamic where condition
  LF_WHERECOND = LF_INITWHERE.

  loop at LT_DD03L into LS_DD03L.
*** Concatenate the fields and values for key
    read table LT_KEYFIELDS into LS_KEYFIELDS
                         with key FNAME = LS_DD03L-FIELDNAME.
    if SY-SUBRC eq 0.
      concatenate `'` LS_KEYFIELDS-FVALUE `'` into LF_FVALUE.

      concatenate LF_WHERECOND
                  'AND'
                  LS_KEYFIELDS-FNAME
                  '='
                  LF_FVALUE
             into LF_WHERECOND
     separated by SPACE.
    else.
      LF_KEYNOTFOUND = 'X'.
      exit.
    endif.
  endloop.

*** Skip the search in table if any of the key field missing
  if LF_KEYNOTFOUND is initial and SY-SUBRC eq 0.

*** Retrieve the condition record number
    select single KNUMH from (LF_TABNAME)
                        into LF_KNUMH
                       where (LF_WHERECOND)
                         and DATBI >= SY-DATUM.
    if SY-SUBRC eq 0.
      select * from KONM into table @data(LT_KONM)
        where KNUMH eq @LF_KNUMH.
      CL_DEMO_OUTPUT=>DISPLAY( LT_KONM ).
      exit.
    endif.
  endif.
endloop.
