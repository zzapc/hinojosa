*&---------------------------------------------------------------------*
*& Report  YPRUEBA5
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT yprueba5.

TABLES marc.

START-OF-SELECTION.

  SELECT SINGLE * FROM marc
    INTO marc
   WHERE matnr = 'COINFL00001126'.

  data: LS_INOB   type INOB.

  move marc-cuobj  to LS_INOB-CUOBJ.
  move 'MARA'    to LS_INOB-ROBTAB. " also for sd positions
  move marc-STDPD  to LS_INOB-ROBJEK.

    move 'MARC'   to LS_INOB-OBTAB.
    move marc-MATNR to LS_INOB-OBJEK(18).
    move marc-WERKS to LS_INOB-OBJEK+18(4).

  call function 'CE_C_PROCESSING'
    exporting
      INSTANCE                       = marc-cuobj
*     REFERENCE_INSTANCE             =
      DATE                           = SY-DATUM
      DISPLAY                        = ' '
      OBJECT_ID                      = LS_INOB-ROBTAB
      OBJECT                         = LS_INOB-ROBJEK
      OWNER_ID                       = LS_INOB-OBTAB
*     HEADER_SCREEN                  =
      PLANT                          = marc-WERKS
      NO_DIALOG                      = ABAP_TRUE
*     MATERIAL_VARIANT               =
*     NO_F8                          = ' '
*     NO_F11                         = ' '
      SUB_TYPE                       = '05'
*     SIMULATION                     = ' '
      TYPE                           = 'E'
*     EFFECTIVITY                    =
*     INITIALIZATION                 = ' '
*     CALLED_FROM_SALES              = ' '
*     BOM_APPLICATION                =
*     IS_BUSINESS_OBJECT             =
*     IV_PROFILE_COUNTER             =
*   IMPORTING
*     RETURN_WITH_FUNCTIONKEY        =
*     NEW_INSTANCE                   =
*   TABLES
*     APPLICATION_INPUT              =
*     APPLICATION_OUTPUT             =
    exceptions
      INTERNAL_ERROR                 = 1
      INSTANCE_NOT_FOUND             = 2
      REFERENCE_INSTANCE_NOT_FOUND   = 3
      INSTANCE_IS_A_CLASSIFICATION   = 4
      NO_PLANT                       = 5
      NO_QUANTITY                    = 6
      NO_CONNECTION_TO_CONFIGURATION = 7
      MATERIAL_VARIANT_NOT_ALLOWED   = 8
      INTERNAL_ERROR_ECM             = 9
      EOASL_NOT_ALLOWED              = 10
      MAXASL_NOT_ALLOWED             = 11
      XC_UNPROCESSED_DATA            = 12
      XC_FAILURE_PROCESSING_DATA     = 13
      NO_BOM                         = 14
      NO_KNOWLEDGE_BASE_FOUND        = 15
      ORDER_BOM_ERROR                = 16
      others                         = 17.
  if SY-SUBRC <> 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.



  DATA lt_config TYPE  ibco2_instance_tab2.
*** Check if configuration is inconsistend or locked
  CALL FUNCTION 'CUCB_GET_CONFIGURATION'
    EXPORTING
      instance                     = marc-cuobj
    IMPORTING
      configuration                = lt_config
    EXCEPTIONS
      invalid_input                = 1
      invalid_instance             = 2
      instance_is_a_classification = 3
      OTHERS                       = 4.

  BREAK-POINT.
*  if SY-SUBRC <> 0.
*    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
*  endif.
*
*  call function 'DEQUEUE_EMMARAE'
*    exporting
*      MANDT = SY-MANDT
*      MATNR = S_MARC-MATNR.
*
*  if IF_BAPI_UPD = ABAP_TRUE.
*    call function 'BAPI_TRANSACTION_COMMIT'
*      exporting
*        WAIT = ABAP_TRUE.
*  endif.
*
*  read table LT_CONFIG into LS_CONFIG index 1.
*  case LS_CONFIG-CONF-CSTATUS.
*    when '2'.
*
****   Material &1 is locked after Configuration update.
*      message id 'YRF_MBQ' type 'E' number '115' into LF_MSGTXT
*        with S_MARC-MATNR.
*      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
*
*    when '5'.
*
****   Material &1 is inconsistent after Configuration update.
*      message id 'YRF_MBQ' type 'E' number '116' into LF_MSGTXT
*        with S_MARC-MATNR.
*      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
*  endcase.
*
*endmethod.
