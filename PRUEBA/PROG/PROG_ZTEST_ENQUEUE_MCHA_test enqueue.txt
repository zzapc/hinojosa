*&---------------------------------------------------------------------*
*& Report  ZTEST_ENQUEUE_MCHA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZTEST_ENQUEUE_MCHA.


SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-003.
SELECTION-SCREEN SKIP 1.
PARAMETER: p_werks LIKE ztpp0041-werks. "Centro
PARAMETER: p_aufnr type aufnr .
PARAMETER: p_charg type charg_d.
PARAMETER: p_matnr type matnr.
PARAMETER: p_mode type char1.
PARAMETER: p_scope type char1.
PARAMETER: p_colle type char1.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN END OF BLOCK b2.



START-OF-SELECTION.

    CALL FUNCTION 'ENQUEUE_ESORDER'
      EXPORTING
*       MODE_AUFK      = 'E'
*       MANDT          = SY-MANDT
        aufnr          = p_aufnr
*       X_AUFNR        = ' '
*       _SCOPE         = '2'
*       _WAIT          = ' '
*       _COLLECT       = ' '
      EXCEPTIONS
        foreign_lock   = 1
        system_failure = 2
        OTHERS         = 3.
IF sy-subrc <> 0.
  write |Bloqueooooooooo AUFNR  okkkkk. Sy-subrc={ sy-subrc }|.
  exit.
  else.
  write |NNNNOOOOO Bloqueo AUFNR!!!!. sy-sbr { sy-subrc }|.

ENDIF.


CALL FUNCTION 'ENQUEUE_ESORDER'
* EXPORTING
*   MODE_AUFK            = 'E'
*   MANDT                = SY-MANDT
*   AUFNR                =
*   X_AUFNR              = ' '
*   _SCOPE               = '2'
*   _WAIT                = ' '
*   _COLLECT             = ' '
* EXCEPTIONS
*   FOREIGN_LOCK         = 1
*   SYSTEM_FAILURE       = 2
*   OTHERS               = 3
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


CALL FUNCTION 'ENQUEUE_EMMCH1E'
 EXPORTING
   MODE_MCH1            = 'E'
   MANDT                = SY-MANDT
   MATNR                = p_matnr
   CHARG                = p_charg
   X_MATNR              = ' '
   X_CHARG              = ' '
   _SCOPE               = '2'
   _WAIT                = ' '
   _COLLECT             = ' '
 EXCEPTIONS
   FOREIGN_LOCK         = 1
   SYSTEM_FAILURE       = 2
   OTHERS               = 3
          .
IF sy-subrc <> 0.
  write |Bloqueooooooooo  okkkkk. Sy-subrc={ sy-subrc }|.
  exit.
  else.
  write |NNNNOOOOO Bloqueo!!!!. sy-sbr { sy-subrc }|.

ENDIF.


    CALL FUNCTION 'ENQUEUE_EMMCHA'
      EXPORTING
        matnr          = p_matnr
        werks          = p_werks
        charg          = p_charg
      EXCEPTIONS
        foreign_lock   = 1
        system_failure = 2
        OTHERS         = 99.
IF sy-subrc <> 0.
  write |Bloqueooooooooo  okkkkk. Sy-subrc={ sy-subrc }|.
  exit.
  else.
  write |NNNNOOOOO Bloqueo!!!!. sy-sbr { sy-subrc }|.

ENDIF.

*CALL FUNCTION 'ENQUEUE_EMMCHA'
* EXPORTING
*   MODE_MCHA            = p_mode "'E'
*   MANDT                = SY-MANDT
*   MATNR                = p_matnr
*   WERKS                = p_werks
*   CHARG                = p_charg
*   X_MATNR              = ' '
*   X_WERKS              = ' '
*   X_CHARG              = ' '
*   _SCOPE               = p_scope " '2'
*   _WAIT                = p_wait "' '
*   _COLLECT             = p_colle
* EXCEPTIONS
*   FOREIGN_LOCK         = 1
*   SYSTEM_FAILURE       = 2
*   OTHERS               = 3
*          .

CALL FUNCTION 'FLUSH_ENQUEUE'
 EXCEPTIONS
   FOREIGN_LOCK         = 1
   SYSTEM_FAILURE       = 2
   OTHERS               = 3
          .
IF sy-subrc <> 0.
  write |Bloqueooooooooo. Sy-subrc={ sy-subrc }|.
  exit.
  else.
  write |NNNNOOOOO Bloqueo. sy-sbr { sy-subrc }|.

ENDIF.

*VB_BATCH_DETERMINE
