*&---------------------------------------------------------------------*
*& Report  YPRUEBA_FTP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT yprueba_ftp5.

DATA i_tabla TYPE TABLE OF string.

i_tabla = VALUE #( ( `linea1` ) ( `linea2` ) ).
DATA(o_ftp) = NEW zcl_ap_ftp(
                                   user = 'dlpuser'
                                   password = 'rNrKYTX9g7z3RgJRmxWuGHbeu'
                                   host = 'ftp.dlptest.com'
*
*user = 'apprpa@hinojosagroup.es'
*                                   password = '<<%xv+B='
*                                   host = '10.200.26.99 6543'

                                    ).


o_ftp->grabar_fichero( EXPORTING directorio = '/HPX_RPA_ALB_OUT_PRO/ERRORES'
                                   fichero = 'prueba_borrar_error.txt'
binario = 'X'
                                   i_tabla = i_tabla
                                   no_desconectar = 'X'
IMPORTING message = DATA(l_msg) ).
WRITE : / l_msg.

IF l_msg IS INITIAL.
*  o_ftp->lista_ficheros( EXPORTING
*                                    directorio = '/HPX_RPA_ALB_OUT_PRO/ERRORES'
*                                    no_desconectar = 'X'
*  IMPORTING message = l_msg
*    i_ficheros = DATA(i_ficheros) ).
*  WRITE : / l_msg.
*
*  IF NOT line_exists( i_ficheros[ filename = 'prueba_borrar_error.txt' ] ).
*    cl_demo_output=>display( i_ficheros ).
*  ELSE.
    CLEAR i_tabla.
    o_ftp->leer_fichero( EXPORTING
                                       directorio = '/HPX_RPA_ALB_OUT_PRO/ERRORES'
                                       fichero = 'prueba_borrar_error.txt'
    binario = 'X'
                                       IMPORTING message = l_msg
                                         xstring = DATA(xstring)
                                         i_tabla = i_tabla ).

    zcl_ap_ficheros=>grabar_xstring( fichero = 'd:\prueba_ftp.txt' xstring = xstring ).
    BREAK-POINT.
*  ENDIF.
ENDIF.
