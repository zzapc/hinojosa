FUNCTION zsd_if_omp_get_latestdispdate.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(VP_VBELN) TYPE  VBELN_VA
*"     REFERENCE(VP_POSNR) TYPE  POSNR_VA
*"  EXPORTING
*"     REFERENCE(VP_DATETIME) TYPE  ZIF_OMP_DATETIME
*"----------------------------------------------------------------------
  CLEAR vp_datetime.

  SELECT SINGLE *
    FROM vbap
    INTO @DATA(wl_vbap)
    WHERE vbeln = @vp_vbeln AND
          posnr = @vp_posnr.
  CHECK sy-subrc = 0.
  "
  " Obtenemos fecha fin extrema de la OF
  "
  SELECT SINGLE *
    FROM afpo
    INTO @DATA(wl_afpo)
    WHERE kdauf = @vp_vbeln AND
          kdpos = @vp_posnr.
  CHECK sy-subrc = 0.

  SELECT SINGLE *
    FROM afko
    INTO @DATA(wl_afko)
    WHERE aufnr = @wl_afpo-aufnr.
  CHECK sy-subrc = 0.


  DATA: vl_fecha TYPE dats,
        vl_hora  TYPE tims.

  vl_fecha = wl_afko-gltrp.
  vl_hora = wl_afko-gluzp.

  "
  " Obtenemos días de ruta.
  "
  SELECT SINGLE *
    FROM tvro
    INTO @DATA(wl_tvro)
    WHERE route = @wl_vbap-route.
  CHECK sy-subrc = 0.

  "
  " Obtenemos calendario.
  "
  SELECT SINGLE *
    FROM tvst
    INTO @DATA(wl_tvst)
    WHERE vstel = @wl_vbap-vstel.
  CHECK sy-subrc = 0.

  "
  " Calculamos fecha inicial y fecha final para saber los dias festivos entre ambos.
  "
  DATA: vl_date_from        TYPE scal-date,
        vl_date_to          TYPE scal-date,
        tl_holidays         TYPE TABLE OF iscal_day,
        vl_factory_calendar TYPE scal-fcalid,
        vl_holiday_count    TYPE i,
        vl_dias_tmp         TYPE char10,
        vl_dias             TYPE i.

  CALL FUNCTION 'CONVERSION_EXIT_TSTRG_OUTPUT'
    EXPORTING
      input  = wl_tvro-traztd
    IMPORTING
      output = vl_dias_tmp.
  REPLACE ALL OCCURRENCES OF ',' IN vl_dias_tmp WITH '.'.
  vl_dias = vl_dias_tmp.

  vl_date_from = vl_fecha.
  CALL FUNCTION 'CALCULATE_DATE'
    EXPORTING
      days        = vl_dias
*     MONTHS      = '0'
      start_date  = vl_fecha
    IMPORTING
      result_date = vl_date_to.
  "
  " Ajustamos a calendiario fabrica.
  "
  vl_factory_calendar = wl_tvst-fabkl.
  vl_holiday_count = 99999.
  WHILE vl_holiday_count <> 0.

    CLEAR tl_holidays.
    CALL FUNCTION 'HOLIDAY_GET'
      EXPORTING
*       holiday_calendar           = vl_holiday_calendar
        factory_calendar           = vl_factory_calendar
        date_from                  = vl_date_from
        date_to                    = vl_date_to
*     IMPORTING
*       YEAR_OF_VALID_FROM         =
*       YEAR_OF_VALID_TO           =
*       RETURNCODE                 =
      TABLES
        holidays                   = tl_holidays
      EXCEPTIONS
        factory_calendar_not_found = 1
        holiday_calendar_not_found = 2
        date_has_invalid_format    = 3
        date_inconsistency         = 4
        OTHERS                     = 5.
    IF sy-subrc <> 0.
      CLEAR tl_holidays.
    ENDIF.

    vl_holiday_count = lines( tl_holidays ).

    IF vl_holiday_count IS NOT INITIAL.
      CALL FUNCTION 'CALCULATE_DATE'
        EXPORTING
          days        = 1
          start_date  = vl_date_to
        IMPORTING
          result_date = vl_date_from.


      CALL FUNCTION 'CALCULATE_DATE'
        EXPORTING
          days        = vl_holiday_count
*         MONTHS      = '0'
          start_date  = vl_date_to
        IMPORTING
          result_date = vl_date_to.
    ENDIF.
  ENDWHILE.



  "
  " Componemos la fecha final.
  "
  CALL FUNCTION 'ZSD_IF_OMP_COMP_DATETIME'
    EXPORTING
      vp_fecha    = vl_date_to
      vp_hora     = vl_hora
    IMPORTING
      vp_datetime = vp_datetime.



ENDFUNCTION.
