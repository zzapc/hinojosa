
class ZCL_SI_UQMPAP_BALE_TESTER_IN_S definition
  public
  create public .

public section.

  interfaces ZII_SI_UQMPAP_BALE_TESTER_IN_S .
protected section.
private section.
endclass. "ZCL_SI_UQMPAP_BALE_TESTER_IN_S definition
class ZCL_SI_UQMPAP_BALE_TESTER_IN_S implementation.
  METHOD zii_si_uqmpap_bale_tester_in_s~si_uqmpap_bale_tester_in_sftp.

    DATA: ls_qals_imp        TYPE qals,
          ls_rmqed_imp       TYPE rmqed,
          ls_qals            TYPE qals,
          lv_kzskiplot       TYPE qals-insmk,
          lv_prueflos        TYPE qals-prueflos,
          lv_subrc           TYPE sy-subrc,
          lv_skip_to_stock   TYPE qals-kzskiplot,
          lv_date            TYPE z_fecha,
          lv_time            TYPE z_hora,
          lv_moisture        TYPE string,
          lv_plastic         TYPE string,
          lv_ashes           TYPE string,
          lv_lignin          TYPE string,
          lv_mositure_eva(1) TYPE c,
          lv_plastic_eva(1)  TYPE c,
          lv_ashes_eva(1)    TYPE c,
          lv_lignin_eva(1)   TYPE c,
          lv_codi_barres     TYPE z_codigo_barras,
          lv_codi_barres_0   TYPE z_codigo_barras,
          lv_matnr           TYPE string,
          lv_charg           TYPE string,
          ls_mch1            TYPE mch1,
          lv_entradamp       TYPE string,
          ls_ztmm0006        TYPE ztmm0006,
          lt_bale_results    TYPE TABLE OF ztmmbt_0001,
          ls_bale_results    TYPE ztmmbt_0001,
          lv_mail(1)         TYPE c,
          lt_ftp             TYPE TABLE OF zdt_uqmpap_bale_tester_in_sftp,
          lv_leng            TYPE i.


    DATA: lt_char_requirements TYPE STANDARD TABLE OF bapi2045d1,
          ls_char_requirements TYPE bapi2045d1,
          lt_results_detail    TYPE STANDARD TABLE OF bapi2045d2,
          lt_char_results      TYPE STANDARD TABLE OF bapi2045d2,
          ls_char_results      TYPE bapi2045d2,
          lt_return            TYPE TABLE OF bapiret2,
          ls_return            TYPE bapiret2.

*   variables envio mail.
    DATA: lt_addr           TYPE bcsy_smtpa,
          lo_send_email     TYPE REF TO cl_bcs,
          lo_document       TYPE REF TO cl_document_bcs,
          lo_recipient      TYPE REF TO if_recipient_bcs,
          lv_sent_to_all    TYPE os_boolean,
          lo_sender         TYPE REF TO cl_cam_address_bcs,
          lv_sender         TYPE adr6-smtp_addr,
          lv_subject        TYPE so_obj_des,
          lt_message        TYPE soli_tab,
          ls_message        TYPE soli,
          ls_zte80_messages TYPE zte80_messages.


    DATA(o_log) = NEW zcl_ap_log( object = 'BALE_TESTER'
                                  report = 'ZCL_SI_UQMPAP_BALE_TESTER_IN_S'
                                  clave  = zcl_ap_proxy=>get_msgguid( ) ).

    lt_ftp = input-mt_uqmpap_bale_tester_in_sftp-items.

    LOOP AT lt_ftp INTO DATA(ls_ftp).

      o_log->log( message  = 'Inicio proceso'
                  msgv1    = ls_ftp-codigodebarras
                  msgv2    = ls_ftp-estado
                  msgv3    = ls_ftp-plant
                  msgty    = 'I' ).

      IF ls_ftp-estado EQ 'OK'. "Tratamos solo registros que tengan estado OK

        CLEAR ls_message.
        CLEAR lt_message.

*   recuperamos los destinatios del mail.
        SELECT * FROM ztmes_mail
          INTO TABLE @DATA(t_mail)
          WHERE interface = 'MP' OR interface = 'CAL'.

        DATA l_email TYPE string.
        LOOP AT t_mail INTO DATA(ls_mails) WHERE werks = ls_ftp-plant.
          IF sy-subrc = 0.

            IF ls_mails-mail_1 NE space.
              APPEND ls_mails-mail_1 TO lt_addr.
              __add_lista l_email ls_mails-mail_1.
            ENDIF.
            IF ls_mails-mail_2 NE space.
              APPEND ls_mails-mail_2 TO lt_addr.
              __add_lista l_email ls_mails-mail_2.
            ENDIF.
            IF ls_mails-mail_3 NE space.
              APPEND ls_mails-mail_3 TO lt_addr.
              __add_lista l_email ls_mails-mail_3.
            ENDIF.
            IF ls_mails-mail_4 NE space.
              APPEND ls_mails-mail_4 TO lt_addr.
              __add_lista l_email ls_mails-mail_4.
            ENDIF.
            IF ls_mails-mail_5 NE space.
              APPEND ls_mails-mail_5 TO lt_addr.
              __add_lista l_email ls_mails-mail_5.
            ENDIF.

          ENDIF.
        ENDLOOP.

*         Inicialización de la clase
        lo_send_email = cl_bcs=>create_persistent( ).


        IF ls_ftp-codigodebarras IS INITIAL. "Si el codigo de barras nos llega vacío

*         Cuerpo del mail
          ls_message = 'Bale Tester - Código de barras vacío'.
          APPEND ls_message TO lt_message.

*         Crear documento
          lv_subject = 'Error código de barras'.

          lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                           i_subject =  lv_subject
                                                           i_text    =  lt_message ).
*         Enviar documento al email
          lo_send_email->set_document( lo_document ).

          lv_sender = 'sap@hinojosa.es'.

          lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
          lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
          LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr>).
            lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr> ).
            lo_send_email->add_recipient( i_recipient = lo_recipient ).
          ENDLOOP.


*         Enviar email
          TRY.
              lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).

              o_log->log( message  = |Se envía mail con error { lv_subject }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'I' ).

            CATCH cx_send_req_bcs INTO DATA(o_bcs).
              o_log->log( message  = |Error enviando mail { o_bcs->get_text( ) }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'E' ).
          ENDTRY.

          COMMIT WORK AND WAIT.
          CONTINUE.

        ENDIF.

        IF ls_ftp-plant IS INITIAL. "Si la planta llega vacia

*         Cuerpo del mail
          ls_message = 'Bale Tester - Código de planta vacío'.
          APPEND ls_message TO lt_message.

*         Crear documento
          lv_subject = 'Error codigo de planta'.

          lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                           i_subject =  lv_subject
                                                           i_text    =  lt_message ).
*         Enviar documento al email
          lo_send_email->set_document( lo_document ).

          lv_sender = 'sap@hinojosa.es'.

          lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
          lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
          LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr0>).
            lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr0> ).
            lo_send_email->add_recipient( i_recipient = lo_recipient ).
          ENDLOOP.


*         Enviar email
          TRY.
              lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
              o_log->log( message  = |Se envía mail con error { lv_subject }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'I' ).
            CATCH cx_send_req_bcs INTO o_bcs.
              o_log->log( message  = |Error enviando mail { o_bcs->get_text( ) }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'E' ).

          ENDTRY.

          COMMIT WORK AND WAIT.
          CONTINUE.

        ENDIF.

        lv_date = ls_ftp-date.
        lv_time = ls_ftp-time.
        lv_moisture = ls_ftp-moisture.
        lv_plastic = ls_ftp-plastic.
        lv_ashes = ls_ftp-ashes.
        lv_lignin = ls_ftp-lignin.
        lv_codi_barres = ls_ftp-codigodebarras.
        ls_qals_imp-werk = ls_ftp-plant.
        ls_qals_imp-ktextlos = ls_ftp-parada.

        lv_leng = strlen( lv_codi_barres ).

        IF lv_leng NE '28'. "Si el codigo de barras es diferente de 28, no podran estar bien material y lote

*         Cuerpo del mail
          ls_message = 'Bale Tester - Código de barras incorrecto'.
          APPEND ls_message TO lt_message.

*         Crear documento
          CONCATENATE 'Código de barras ' lv_codi_barres ' incorrecto' INTO lv_subject RESPECTING BLANKS.

          lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                           i_subject =  lv_subject
                                                           i_text    =  lt_message ).
*         Enviar documento al email
          lo_send_email->set_document( lo_document ).

          lv_sender = 'sap@hinojosa.es'.

          lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
          lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
          LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr4>).
            lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr4> ).
            lo_send_email->add_recipient( i_recipient = lo_recipient ).
          ENDLOOP.


*         Enviar email
          TRY.
              lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
              o_log->log( message  = |Se envía mail con error { lv_subject }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'I' ).
            CATCH cx_send_req_bcs INTO o_bcs.
              o_log->log( message  = |Error enviando mail { o_bcs->get_text( ) }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'E' ).


          ENDTRY.

          COMMIT WORK AND WAIT.
          CONTINUE.

        ELSE.

          "Recuperamos materia y lote del codigo de barras
          lv_matnr = lv_codi_barres+0(18).
          lv_charg = lv_codi_barres+18(10).

        ENDIF.

        ls_rmqed_imp-dbs_steuer = '01'.
        ls_rmqed_imp-dbs_flag   = 'X'.
        ls_rmqed_imp-dbs_edunk  = 'X'.
        ls_rmqed_imp-dbs_fdunk  = 'X'.
        ls_rmqed_imp-dbs_noerr  = 'X'.
        ls_rmqed_imp-dbs_nowrn  = 'X'.
        ls_rmqed_imp-dbs_noauf  = 'X'.

        SELECT SINGLE * FROM mch1
                    INTO ls_mch1
                    WHERE matnr = lv_matnr AND
                          charg = lv_charg.

        lv_entradamp = ls_mch1-licha+0(10).

        SELECT SINGLE * FROM ztmm0006
                  INTO ls_ztmm0006
                  WHERE zentrada = lv_entradamp.

        ls_qals_imp-lifnr     = ls_ztmm0006-lifnr. "Proveedor entrada MP
        ls_qals_imp-matnr     = lv_matnr. "Material MP
        ls_qals_imp-charg     = lv_charg. "Lote MP
        ls_qals_imp-art       = '89'.
        ls_qals_imp-herkunft  = '89'.
        ls_qals_imp-losmenge  = '1'.


        CALL FUNCTION 'QPL1_INITIALIZE'
          EXPORTING
            i_lot_data_only = 'X'.

        CALL FUNCTION 'QPL1_INSPECTION_LOT_CREATE'
          EXPORTING
            qals_imp        = ls_qals_imp
            rmqed_imp       = ls_rmqed_imp
          IMPORTING
            e_kzskiplot     = lv_kzskiplot
            e_prueflos      = lv_prueflos
            e_qals          = ls_qals
            subrc           = lv_subrc
            e_skip_to_stock = lv_skip_to_stock.

        IF lv_subrc <= '4'.

          CALL FUNCTION 'QPL1_UPDATE_MEMORY'
            EXPORTING
              i_qals  = ls_qals
              i_updkz = 'I'
              i_rmqed = ls_rmqed_imp.

          CALL FUNCTION 'QPL1_INSPECTION_LOTS_POSTING'
            EXPORTING
              i_mode = ' '.

          COMMIT WORK AND WAIT.

          CALL FUNCTION 'BAPI_INSPOPER_GETDETAIL'
            EXPORTING
              insplot                = lv_prueflos
              inspoper               = '0010'
              read_char_requirements = 'X'
              char_filter_no         = '1'
              char_filter_tcode      = 'QE11'
              max_insppoints         = '100'
              insppoint_from         = '0'
*    IMPORTING
*             return                 = lt_return2
            TABLES
              char_requirements      = lt_char_requirements.

          LOOP AT lt_char_requirements INTO DATA(ls_value).

            ls_char_results-insplot   = ls_value-insplot.
            ls_char_results-inspoper  = ls_value-inspoper.
            ls_char_results-inspchar  = ls_value-inspchar.
            ls_char_results-closed    = 'X'.
            ls_char_results-evaluated = 'X'.

*APC20250102 Nos aseguramos que el valor de la tolerancia es una cantidad válida
            IF ls_value-up_tol_lmt CS ','.
              REPLACE ALL OCCURRENCES OF '.' IN ls_value-up_tol_lmt WITH ``.
              REPLACE ',' IN ls_value-up_tol_lmt WITH '.'.
            ENDIF.
            CONDENSE ls_value-lw_tol_lmt NO-GAPS.

            IF     ls_value-mstr_char = '00001009'.
              ls_char_results-mean_value = lv_moisture.
              ls_bale_results-lim_hum = ls_value-up_tol_lmt.
            ELSEIF ls_value-mstr_char = '00001010'.
              ls_char_results-mean_value = lv_plastic.
              ls_bale_results-lim_imp = ls_value-up_tol_lmt.
            ELSEIF ls_value-mstr_char = '00001011'.
              ls_char_results-mean_value = lv_ashes.
              ls_bale_results-lim_cen = ls_value-up_tol_lmt.
            ELSEIF ls_value-mstr_char = '00001012'.
              ls_char_results-mean_value = lv_lignin.
              ls_bale_results-lim_lig = ls_value-up_tol_lmt.
            ENDIF.

            APPEND ls_char_results TO lt_char_results.

          ENDLOOP.

          CALL FUNCTION 'BAPI_INSPOPER_RECORDRESULTS'
            EXPORTING
              insplot      = lv_prueflos
              inspoper     = '0010'
            TABLES
              char_results = lt_char_results
              returntable  = lt_return.


          LOOP AT lt_return ASSIGNING FIELD-SYMBOL(<msg>).
            o_log->log( message  = <msg>-message
                        msgv1    = ls_ftp-codigodebarras
                        msgv2    = ls_ftp-estado
                        msgv3    = ls_ftp-plant
                        msgty    = <msg>-type ).
          ENDLOOP.

          COMMIT WORK AND WAIT.

          READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.

          IF sy-subrc = 0. "missatge de error no se han registrat les caracteristiques correctament

*         Cuerpo del mail
            CONCATENATE 'Bale Tester - Muestra' lv_codi_barres 'Error en la grabación de resultados' INTO ls_message.
            APPEND ls_message TO lt_message.

*         Crear documento
            CONDENSE lv_codi_barres.
            CONCATENATE 'BT Muestra' lv_codi_barres 'Error' INTO lv_subject RESPECTING BLANKS.

            lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                             i_subject =  lv_subject
                                                             i_text    =  lt_message ).
*         Enviar documento al email
            lo_send_email->set_document( lo_document ).

            lv_sender = 'sap@hinojosa.es'.

            lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
            lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
            LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr1>).
              lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr1> ).
              lo_send_email->add_recipient( i_recipient = lo_recipient ).
            ENDLOOP.


*         Enviar email
            TRY.
                lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
                o_log->log( message  = |Se envía mail con error { lv_subject }|
                            msgv1    = ls_ftp-codigodebarras
                            msgv2    = ls_ftp-estado
                            msgv3    = ls_ftp-plant
                            msgty    = 'I' ).
              CATCH cx_send_req_bcs INTO o_bcs.
                o_log->log( message  = |Error enviando mail { o_bcs->get_text( ) }|
                            msgv1    = ls_ftp-codigodebarras
                            msgv2    = ls_ftp-estado
                            msgv3    = ls_ftp-plant
                            msgty    = 'E' ).


            ENDTRY.

            COMMIT WORK AND WAIT.

          ELSE.

            CALL FUNCTION 'BAPI_INSPOPER_GETDETAIL'
              EXPORTING
                insplot           = lv_prueflos
                inspoper          = '0010'
                read_char_results = 'X'
                char_filter_no    = '1   '
                char_filter_tcode = 'QE11'
                max_insppoints    = 100
                insppoint_from    = 0
              TABLES
                char_results      = lt_results_detail.

*         Inicialización de la clase
            lo_send_email = cl_bcs=>create_persistent( ).

            lv_mositure_eva = 'A'.
            lv_plastic_eva  = 'A'.
            lv_ashes_eva    = 'A'.
            lv_lignin_eva   = 'A'.

            LOOP AT lt_results_detail INTO DATA(ls_results_detail).

              IF ls_results_detail-evaluation = 'R'. "Característica fuera de valoraciones

                lv_mail = 'X'.
*         Cuerpo del mail
                LOOP AT lt_char_requirements INTO ls_char_requirements WHERE inspchar = ls_results_detail-inspchar.
                  CONCATENATE ls_char_requirements-char_descr ' =' ls_results_detail-mean_value ' (' ls_char_requirements-up_tol_lmt ' ).' INTO ls_message.

                  IF ls_char_requirements-mstr_char = '00001009'.
                    lv_mositure_eva = ls_results_detail-evaluation.
                  ENDIF.
                  IF ls_char_requirements-mstr_char = '00001010'.
                    lv_plastic_eva = ls_results_detail-evaluation.
                  ENDIF.
                  IF ls_char_requirements-mstr_char = '00001011'.
                    lv_ashes_eva = ls_results_detail-evaluation.
                  ENDIF.
                  IF ls_char_requirements-mstr_char = '00001012'.
                    lv_lignin_eva = ls_results_detail-evaluation.

                  ENDIF.
                ENDLOOP.

                APPEND ls_message TO lt_message.

              ENDIF.

            ENDLOOP.

            IF lv_mail = 'X'.

*         crear documento
              CONDENSE lv_codi_barres.
              CONCATENATE 'BT Muestra ' lv_codi_barres ' Error' INTO lv_subject RESPECTING BLANKS.

              lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                               i_subject =  lv_subject
                                                               i_text    =  lt_message ).
*         Enviar documento al email
              lo_send_email->set_document( lo_document ).

              lv_sender = 'sap@hinojosa.es'.

              lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
              lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
              LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr2>).
                lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr2> ).
                lo_send_email->add_recipient( i_recipient = lo_recipient ).
              ENDLOOP.


*         Enviar email
              TRY.
                  lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
                  o_log->log( message  = |Se envía mail con error { lv_subject }|
                              msgv1    = ls_ftp-codigodebarras
                              msgv2    = ls_ftp-estado
                              msgv3    = ls_ftp-plant
                              msgty    = 'I' ).
                CATCH cx_send_req_bcs INTO o_bcs.
                  o_log->log( message  = |Error enviando mail { o_bcs->get_text( ) }|
                              msgv1    = ls_ftp-codigodebarras
                              msgv2    = ls_ftp-estado
                              msgv3    = ls_ftp-plant
                              msgty    = 'E' ).


              ENDTRY.

            ENDIF.

            COMMIT WORK AND WAIT.

            "Grabamos registros en la tabla ZTBALE_RESULTS estén fuera o dentro de las valoraciones

            ls_bale_results-insp_lote    = lv_prueflos.
            ls_bale_results-entrada_mp   = lv_entradamp.
            ls_bale_results-centro       = ls_qals_imp-werk.
            ls_bale_results-fecha_med    = lv_date.
            ls_bale_results-hora_med     = lv_time.
*APC20250207 Guardamos fecha y hora en formato estándar
            ls_bale_results-fecha_med_std  = zcl_ap_fechas=>string2fecha( lv_date ).
            ls_bale_results-hora_med_std   = zcl_ap_fechas=>string2hora( lv_time ).
            ls_bale_results-pos_med      = ls_qals_imp-ktextlos.
            ls_bale_results-cod_barras   = lv_codi_barres.
            ls_bale_results-matnr        = lv_matnr.
            ls_bale_results-lote_mp      = lv_charg.
            ls_bale_results-humedad      = lv_moisture.
            ls_bale_results-ind_hum      = lv_mositure_eva.
            ls_bale_results-impropios    = lv_plastic.
            ls_bale_results-ind_imp      = lv_plastic_eva.
            ls_bale_results-cenizas      = lv_ashes.
            ls_bale_results-ind_cen      = lv_ashes_eva.
            ls_bale_results-lignina      = lv_lignin.
            ls_bale_results-ind_lig      = lv_lignin_eva.
            ls_bale_results-cod_prov     = ls_ztmm0006-lifnr.
            ls_bale_results-albaran      = ls_ztmm0006-xblnr.
            ls_bale_results-matricula    = ls_ztmm0006-zmatricula1.


            MODIFY ztmmbt_0001 FROM ls_bale_results.

            CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
              EXPORTING
                wait = 'X'.

          ENDIF.


        ELSE. "no se ha creat lot de inspecció

*         Cuerpo del mail
          CONCATENATE 'Bale Tester  Muestra' lv_codi_barres 'Error en la creación del lote de inspección.' INTO ls_message.
          APPEND ls_message TO lt_message.

*         Crear documento
          CONDENSE lv_codi_barres.
          CONCATENATE 'BT Muestra' lv_codi_barres 'Error' INTO lv_subject RESPECTING BLANKS.

          lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                           i_subject =  lv_subject
                                                           i_text    =  lt_message ).
*         Enviar documento al email
          lo_send_email->set_document( lo_document ).

          lv_sender = 'sap@hinojosa.es'.

          lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
          lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
          LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr3>).
            lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr3> ).
            lo_send_email->add_recipient( i_recipient = lo_recipient ).
          ENDLOOP.


*         Enviar email
          TRY.
              lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
              o_log->log( message  = |Se envía mail con error { lv_subject }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'I' ).
            CATCH cx_send_req_bcs INTO o_bcs.
              o_log->log( message  = |Error enviando mail { o_bcs->get_text( ) }|
                          msgv1    = ls_ftp-codigodebarras
                          msgv2    = ls_ftp-estado
                          msgv3    = ls_ftp-plant
                          msgty    = 'E' ).


          ENDTRY.

          COMMIT WORK AND WAIT.

        ENDIF.

      ENDIF.

      o_log->log( message  = 'Fin proceso'
                  msgv1    = ls_ftp-codigodebarras
                  msgv2    = ls_ftp-estado
                  msgv3    = ls_ftp-plant
                  msgty    = 'I' ).

    ENDLOOP.

  ENDMETHOD.
endclass. "ZCL_SI_UQMPAP_BALE_TESTER_IN_S definition
endclass. "ZCL_SI_UQMPAP_BALE_TESTER_IN_S implementation
