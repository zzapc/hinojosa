*&---------------------------------------------------------------------*
*&  Include           ZDYN_WS_SYNC
*&---------------------------------------------------------------------*
INCLUDE zdyn_cl_msg===================ccmac.

DATA:
  gt_ebeln         TYPE STANDARD TABLE OF ebeln,
  gt_objectid      TYPE STANDARD TABLE OF cdobjectv,
  gs_glgrp         TYPE string,
  gt_messages      TYPE bapiret2_t,
  gt_messages_full LIKE zdyn_cl_msg=>mt_messages,
  gt_msg           TYPE TABLE OF bal_s_msg,
  gc_log_object    TYPE balobj_d,
  gc_log_subobject TYPE balsubobj,
  gb_ok            TYPE abap_bool,
  gs_pw            TYPE string,
  gs_pw_clear      TYPE string,
  gs_key           TYPE string,
  gs_user          TYPE string,
  gc_ok_code       TYPE ok,
  gc_tcode         TYPE tcode,

  gs_rf_file_name TYPE string,
  gs_rt_file_name TYPE string,
  gs_rt_file_path TYPE string,
  gs_md_file_path TYPE string,
  gs_sd_file_path TYPE string,
  gs_test_xml     TYPE string,
*{   INSERT         D2EK938793                                        1
  gs_sp_file_path TYPE string,
*}   INSERT
  gt_test_xml     TYPE STANDARD TABLE OF string,
  go_file         TYPE REF TO zdyn_cl_file.

FORM restrict_select.
  DATA: restrict TYPE sscr_restrict,
        opt_list TYPE sscr_opt_list,
        ass      TYPE sscr_ass.
* Défine select-options modes (aka option list)
* - ALL standard - all options allowed
  CLEAR opt_list.
  MOVE 'ALL' TO opt_list-name.
  MOVE 'X' TO: opt_list-options-bt,
               opt_list-options-cp,
               opt_list-options-eq,
               opt_list-options-ge,
               opt_list-options-gt,
               opt_list-options-le,
               opt_list-options-lt,
               opt_list-options-nb,
               opt_list-options-ne,
               opt_list-options-np.
  APPEND opt_list TO restrict-opt_list_tab.
* - EQU only equality allowed (list of values)
  CLEAR opt_list.
  MOVE 'EQU' TO opt_list-name.
  MOVE 'X' TO opt_list-options-eq.
  APPEND opt_list TO restrict-opt_list_tab.
* Affect modes to parameters or block of parameters
* ALL by default
  CLEAR ass.
  MOVE: 'A'          TO ass-kind,
        '*'          TO ass-sg_main,
        'ALL'        TO ass-op_main.
  APPEND ass TO restrict-ass_tab.
* EQU to internal material number
  CLEAR ass.
  MOVE: 'S'          TO ass-kind,
        'SEL_COMP'    TO ass-name,
        'I'          TO ass-sg_main, " no exclusion
        'EQU'        TO ass-op_main. " only value list
  APPEND ass TO restrict-ass_tab.
* Call  FM
  CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
    EXPORTING
      restriction = restrict
    EXCEPTIONS
      OTHERS      = 0.
ENDFORM.                    " restrict_select

*&---------------------------------------------------------------------*
*&      Form  SHOW_VERSION
*&---------------------------------------------------------------------*
FORM show_version USING ic_lic_component TYPE zdyn_lic_d_component
                        ic_module        TYPE sta_text.

  DATA: lst_lic  TYPE zdyn_lic_s_license,
        lc_txt1  TYPE sta_text,
        lc_txt2  TYPE sta_text,
        lc_txt3  TYPE sta_text,
        lt_dummy TYPE bapiret2_t.

  zdyn_lic_cl_checker=>check_license( EXPORTING ic_product       = ic_lic_component
                                      IMPORTING es_license       = lst_lic
                                      CHANGING  ct_messages      = lt_dummy ).

  CONCATENATE ic_module zdyn_if_product_info=>con_version INTO lc_txt1 SEPARATED BY space.
  CONCATENATE 'License Key'(key) lst_lic-lic_key INTO lc_txt3 SEPARATED BY space.
  CASE lst_lic-lic_type.
    WHEN 'D'.
      lc_txt2 = 'Demo license'(l_d).
    WHEN 'F'.
      lc_txt2 = 'Full license'(l_f).
    WHEN 'T'.
      WRITE lst_lic-expr_date TO lc_txt1.
      CONCATENATE 'Test license expires'(l_t) lc_txt1 INTO lc_txt2 SEPARATED BY space.
    WHEN OTHERS.
      CLEAR lc_txt3.
  ENDCASE.

  CALL FUNCTION 'POPUP_TO_INFORM'
    EXPORTING
      titel = 'Version Info'(ver)
      txt1  = lc_txt1
      txt2  = lc_txt2
      txt3  = lc_txt3.

ENDFORM.
