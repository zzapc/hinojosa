*&---------------------------------------------------------------------*
*&  Include           ZDYN_WS_IDP_SYNC_SEL
*&---------------------------------------------------------------------*

SELECTION-SCREEN BEGIN OF BLOCK cfg WITH FRAME TITLE text-img.

SELECTION-SCREEN PUSHBUTTON /10(50) gc_bgen USER-COMMAND cfggen VISIBLE LENGTH 8.
SELECTION-SCREEN PUSHBUTTON 22(50) gc_bpdm USER-COMMAND cfgpdm VISIBLE LENGTH 8.
SELECTION-SCREEN PUSHBUTTON 34(50) gc_barc USER-COMMAND cfgarc VISIBLE LENGTH 8.
SELECTION-SCREEN PUSHBUTTON 46(50) gc_bver USER-COMMAND cfgver VISIBLE LENGTH 3.

SELECTION-SCREEN END OF BLOCK cfg.

SELECTION-SCREEN BEGIN OF BLOCK communication WITH FRAME TITLE text-com.

PARAMETERS:
  psysid LIKE zdyn_idp_tmap-sysid DEFAULT sy-sysid NO-DISPLAY,
  puser  LIKE zdyn_idp_tmap-username.

SELECTION-SCREEN COMMENT /33(30) gid.
SELECTION-SCREEN SKIP.

PARAMETERS:
  pmsglv TYPE zdyn_ws_dmessage_level AS LISTBOX VISIBLE LENGTH 17,
  papplg TYPE lmon_aplog AS CHECKBOX.

SELECTION-SCREEN END OF BLOCK communication.

SELECTION-SCREEN BEGIN OF BLOCK action WITH FRAME TITLE text-act.

SELECTION-SCREEN BEGIN OF LINE.

PARAMETERS pauth RADIOBUTTON GROUP act USER-COMMAND actn.

SELECTION-SCREEN COMMENT 4(20) text-pwd.

PARAMETERS pidp RADIOBUTTON GROUP act.

SELECTION-SCREEN COMMENT 28(20) text-idp.

PARAMETERS pmeta RADIOBUTTON GROUP act.

SELECTION-SCREEN COMMENT 52(20) text-met.

SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK action.



****************************************************************
* Retrieve document
SELECTION-SCREEN BEGIN OF BLOCK rt WITH FRAME TITLE text-rso.


SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF BLOCK rt_file WITH FRAME TITLE text-tst.

PARAMETERS:     prt_fdbk TYPE c AS CHECKBOX MODIF ID rso.
PARAMETERS:     prt_satt TYPE zdyn_ws_dskip_attach_add AS CHECKBOX MODIF ID rso.
PARAMETERS:     prt_http TYPE zdyn_ws_dskip_http_test AS CHECKBOX MODIF ID rso.
PARAMETERS:     prf_file TYPE c AS CHECKBOX MODIF ID rso USER-COMMAND rff.
PARAMETERS:     prf_fnam TYPE zdyn_ddfilename LOWER CASE MODIF ID rff.
PARAMETERS:     prt_file TYPE c AS CHECKBOX MODIF ID rso USER-COMMAND rtf.
PARAMETERS:     prt_path TYPE iwp_path_string LOWER CASE MODIF ID rtf.

SELECTION-SCREEN END OF BLOCK rt_file.

SELECTION-SCREEN END OF BLOCK rt.

****************************************************************


*-----------------------------------------------------------------
* Show/hide areas dependend on selected values
*-----------------------------------------------------------------
AT SELECTION-SCREEN OUTPUT.

  CONCATENATE icon_configuration(3) '\Q' 'General configuration'(GEN) '@'
              INTO gc_bgen.
  CONCATENATE icon_mapped_relation(3) '\Q' 'PD mapping'(PDM) '@'
              INTO gc_bpdm.
  CONCATENATE icon_viewer_optical_archive(3) '\Q' 'Archive link settings'(ARC) '@'
              INTO gc_barc.
  CONCATENATE icon_information(3) '\Q' 'Version Info'(VER) '@'
              INTO gc_bver.

*AT SELECTION-SCREEN ON p_cust.
  PERFORM read_config.
  PERFORM screen_adjust.
  PERFORM restrict_select.

AT SELECTION-SCREEN ON puser.
  PERFORM read_config.

AT SELECTION-SCREEN ON RADIOBUTTON GROUP act.

  PERFORM screen_adjust.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR prf_fnam.
  gs_rf_file_name = prf_fnam.
  go_file->get_file_name( EXPORTING is_file_name = gs_rf_file_name
                          IMPORTING es_file_name = gs_rf_file_name ).
  prf_fnam = gs_rf_file_name.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR prt_path.
  gs_rt_file_path = prt_path.
  go_file->get_file_path( EXPORTING is_file_path = gs_rt_file_path
                          IMPORTING es_file_path = gs_rt_file_path ).
  prt_path = gs_rt_file_path.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR puser.
  PERFORM gid_value_help.


AT SELECTION-SCREEN.

  CLEAR: gc_tcode.
  CASE sy-ucomm.
    WHEN 'CFGGEN'.
      gc_tcode = con_ta_gen.
    WHEN 'CFGPDM'.
      gc_tcode = con_ta_map.
    WHEN 'CFGARC'.
      gc_tcode = con_ta_arc.
    WHEN 'CFGVER'.
      PERFORM show_version USING con_lic_component con_module.
      CLEAR sy-ucomm.
    WHEN OTHERS.
*  nothing
  ENDCASE.

  IF NOT gc_tcode IS INITIAL.
    PERFORM authority_check.
    CHECK NOT gc_tcode IS INITIAL.
    CALL TRANSACTION gc_tcode.
  ELSEIF NOT sy-ucomm IS INITIAL.
    IF puser IS INITIAL.
      CLEAR sy-ucomm.
      MESSAGE e386(so).
    ENDIF.
  ENDIF.

*INITIALIZATION.
*
*  gc_tcode = con_ta_main.
*  PERFORM authority_check.
*  CLEAR gc_tcode.

*&---------------------------------------------------------------------*
*&      Form  SCREEN_ADJUST
*&---------------------------------------------------------------------*
FORM screen_adjust .

  CHECK pidp IS INITIAL.
  LOOP AT SCREEN.
    IF screen-group1 = 'RSO'.
      IF pidp IS INITIAL.
        screen-active = 0.
      ELSE.
        screen-active = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDIF.
    IF screen-group1 = 'RT'.
      IF pidp IS INITIAL.
        screen-active = 0.
      ELSE.
        screen-active = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDIF.
    IF screen-group1 = 'RTF'.
      IF pidp IS INITIAL OR prt_file IS INITIAL.
        screen-active = 0.
      ELSE.
        screen-active = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDIF.
    IF screen-group1 = 'RFF'.
      IF pidp IS INITIAL OR prf_file IS INITIAL.
        screen-active = 0.
      ELSE.
        screen-active = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  AUTHORITY_CHECK
*&---------------------------------------------------------------------*
FORM authority_check .

  CALL FUNCTION 'AUTHORITY_CHECK_TCODE'
    EXPORTING
      tcode  = gc_tcode
    EXCEPTIONS
      ok     = 0
      OTHERS = 1.
  IF sy-subrc NE 0.
    MESSAGE s172(00) WITH gc_tcode.
    CLEAR gc_tcode.
    EXIT.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_CONFIG
*&---------------------------------------------------------------------*

FORM read_config .

  IF puser IS NOT INITIAL.
    IF puser <> gst_config-username.
* take care that there is only one combination of apikey, username and bukrs
      SELECT SINGLE * FROM zdyn_idp_tgen INTO CORRESPONDING FIELDS OF gst_config
                      WHERE sysid    = sy-sysid
                        AND username = puser.
      IF sy-subrc = 0.
        gs_user = gst_config-username.

        gs_pw = gst_config-password.
        gs_pw_clear = gs_pw.
*    gs_pw_clear = cl_http_utility=>if_http_utility~decode_base64( encoded = gs_pw ).
*    new user -> new document type
        CLEAR gs_doctype.
        CLEAR gt_metadata.
      ENDIF.
    ENDIF.
    gid = gst_config-id.
  ELSE.
    CLEAR: gst_config, gid.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GID_VALUE_HELP
*&---------------------------------------------------------------------*
FORM gid_value_help .

  DATA: lt_return TYPE STANDARD TABLE OF ddshretval,
        ls_field  TYPE dynpread,
        lt_fields TYPE STANDARD TABLE OF dynpread.

  FIELD-SYMBOLS: <ret> TYPE ddshretval.

  CALL FUNCTION 'F4IF_FIELD_VALUE_REQUEST'
    EXPORTING
      tabname     = 'ZDYN_IDP_TMAP'
      fieldname   = 'USERNAME'
      dynpprog    = sy-cprog
      dynpnr      = sy-dynnr
      dynprofield = 'PUSER'
    TABLES
      return_tab  = lt_return.
  IF lt_return IS NOT INITIAL.
    READ TABLE lt_return INDEX 1 ASSIGNING <ret>.
    puser = <ret>-fieldval.
    PERFORM read_config.
    CLEAR lt_fields.
    ls_field-fieldname = 'GID'.
    ls_field-fieldvalue = gid.
    APPEND ls_field TO lt_fields.

    CALL FUNCTION 'DYNP_VALUES_UPDATE'
      EXPORTING
        dyname     = sy-cprog
        dynumb     = sy-dynnr
      TABLES
        dynpfields = lt_fields.
  ENDIF.

ENDFORM.
