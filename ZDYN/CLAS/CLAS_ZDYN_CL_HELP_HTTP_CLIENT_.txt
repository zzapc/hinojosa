"INCLUDE zdyn_cl_scenario_test=========ccmac.
INCLUDE zdyn_cl_scenario_test=========ccmac.
class ZDYN_CL_HELP_HTTP_CLIENT definition
  public
  inheriting from ZDYN_CL_HTTP_CLIENT
  create public .

public section.

  types:
    BEGIN OF yst_exp_value,
        id      TYPE i,
        method  TYPE string,
        param   TYPE string,
        value   TYPE string,
        val_ref TYPE REF TO data,
        ok      TYPE abap_bool,
      END OF yst_exp_value .
  types:
*  types:
    yt_exp_values TYPE STANDARD TABLE OF yst_exp_value .

  data MC_APPEND_URL_NAME type STRING .
  data MC_APPEND_URL_VALUE type STRING .
  data MC_APPEND_URL_URL type STRING .
  data MC_CREATE_ABS_PROTOCOL type STRING .
  data MC_CREATE_ABS_HOST type STRING .
  data MC_CREATE_ABS_PORT type STRING .
  data MC_CREATE_ABS_PATH type STRING .
  data MC_CREATE_ABS_QUERY type STRING .
  data MC_CREATE_ABS_STATEFUL type STRING .
  data MC_CREATE_ABS_URL type STRING .
  data MB_CLOSE type ABAP_BOOL .
  data MB_CLOSED type ABAP_BOOL .
  data MB_RECEIVE type ABAP_BOOL .
  data MB_RECEIVED type ABAP_BOOL .
  data MB_SEND type ABAP_BOOL .
  data MB_SENT type ABAP_BOOL .
  data MO_HTTP_REQUEST type ref to ZDYN_CL_HELP_HTTP_REQUEST .
  data MO_HTTP_RESPONSE type ref to ZDYN_CL_HELP_HTTP_RESPONSE .
  data MB_GET_LAST_ERROR type ABAP_BOOL .
  data MC_GET_LAST_CODE type STRING .
  data MC_GET_LAST_MESSAGE type STRING .
  data MC_GET_LAST_MESSAGE_CLASS type STRING .
  data MC_GET_LAST_MESSAGE_NUMBER type STRING .

  methods SET_SCENARIO
    importing
      !IR_SCENARIO type ref to DATA .
  methods CONSTRUCTOR
    importing
      !IC_RFCDEST type RFCDEST optional
      !IS_URL type STRING optional
      !IR_SCENARIO type ref to DATA
    exceptions
      ERROR_OCCURRED .

  methods CREATE_HTTP_CLIENT
    redefinition .
  methods IF_HTTP_CLIENT~APPEND_FIELD_URL
    redefinition .
  methods IF_HTTP_CLIENT~CLOSE
    redefinition .
  methods IF_HTTP_CLIENT~CREATE_ABS_URL
    redefinition .
  methods IF_HTTP_CLIENT~GET_LAST_ERROR
    redefinition .
  methods IF_HTTP_CLIENT~RECEIVE
    redefinition .
  methods IF_HTTP_CLIENT~SEND
    redefinition .
  methods ZDYN_IF_HTTP_CLIENT~CALL_HTTP
    redefinition .
  methods IF_HTTP_CLIENT~CREATE_REL_URL
    redefinition .
protected section.
PRIVATE SECTION.

  DATA mr_scenario TYPE REF TO data .
endclass. "ZDYN_CL_HELP_HTTP_CLIENT definition
class ZDYN_CL_HELP_HTTP_CLIENT implementation.
METHOD constructor.

  super->constructor( EXPORTING ic_rfcdest = ic_rfcdest
                                is_url     = is_url ).

  set_scenario( ir_scenario ).
  create_http_client( ).

ENDMETHOD.
METHOD create_http_client.

  CREATE OBJECT: mo_http_request,
                 mo_http_response.

  request   = mo_http_request.
  response  = mo_http_response.

  mo_http_request->mr_scenario  = mr_scenario.
  mo_http_response->mr_scenario = mr_scenario.

ENDMETHOD.
METHOD if_http_client~append_field_url.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'APPEND_FIELD_URL'.

**************************************************************
* Verify input data
  check_input <st_scenario> 'NAME'   name.
  check_input <st_scenario> 'VALUE'  value.

*************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'URL' url.

*************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD if_http_client~close.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'CLOSE'.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD if_http_client~create_abs_url.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'CREATE_ABS_URL'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'PROTOCOL'     protocol.
  check_input <st_scenario> 'HOST'         host.
  check_input <st_scenario> 'PORT'         port.
  check_input <st_scenario> 'PATH'         path.
  check_input <st_scenario> 'QUERYSTRING'  querystring.
  check_input <st_scenario> 'STATEFUL'     stateful.

*************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'URL' url.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD if_http_client~create_rel_url.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'CREATE_REL_URL'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'PATH'         path.
  check_input <st_scenario> 'QUERYSTRING'  querystring.
  check_input <st_scenario> 'STATEFUL'     stateful.

*************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'URL' url.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD if_http_client~get_last_error.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

**************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_LAST_ERROR'.

**************************************************************
** Return expected values for further processing
  set_output <st_scenario> 'CODE' code.
  set_output <st_scenario> 'MESSAGE' message.

* Those parameters are not always available
*  set_output <st_scenario> 'MESSAGE_CLASS' message_class.
*  set_output <st_scenario> 'MESSAGE_NUMBER' message_number.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD if_http_client~receive.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'RECEIVE'.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD if_http_client~send.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'SEND'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'TIMEOUT'  timeout.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD set_scenario.

  mr_scenario = ir_scenario.

ENDMETHOD.
METHOD zdyn_if_http_client~call_http.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'CALL_HTTP'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_METHOD'  ic_method.
  check_input <st_scenario> 'IS_INPUT'   is_input.
  check_input <st_scenario> 'IS_URL'     is_url.

*************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'EI_RETURN_CODE'  ei_return_code.
  set_output <st_scenario> 'ES_MEDIA_TYPE'   es_media_type.
  set_output <st_scenario> 'ES_RESULT'       es_result.
  set_output <st_scenario> 'EX_XSTRING'      ex_xstring.

  IF ei_return_code >= 300.
    sy-msgty = 'E'.
    sy-msgno = '666'.
    sy-msgid = 'TEST'.
    sy-msgv1 = 'Test message'.
  ENDIF.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
