INCLUDE zdyn_cl_msg===================ccmac.
class ZDYN_CL_OUT_DOCS_DISPLAY definition
  public
  create public .

public section.

  types:
    yt_vtdoc TYPE STANDARD TABLE OF zdyn_ws_sdoc_disp .

  data MO_ALV type ref to CL_SALV_TABLE .
  data MT_DOCS type YT_VTDOC read-only .

  methods REFRESH .
  methods DISPLAY_LIST
    changing
      !CO_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  methods GET_LIST
    importing
      !IT_SEL_DOC_TYPE type ANY optional
      !IT_SEL_ID type ANY optional
      !IT_SEL_SOLD_TO type ANY optional
      !IT_SEL_CREATION_DATE type ANY optional .
protected section.

  methods ON_CLICK
    for event LINK_CLICK of CL_SALV_EVENTS_TABLE
    importing
      !ROW
      !COLUMN .
private section.
endclass. "ZDYN_CL_OUT_DOCS_DISPLAY definition
class ZDYN_CL_OUT_DOCS_DISPLAY implementation.
METHOD display_list.

  DATA: lo_columns TYPE REF TO cl_salv_columns_table,
        lo_column  TYPE REF TO cl_salv_column_table,
        lo_events  TYPE REF TO cl_salv_events_table,
        lx_root    TYPE REF TO cx_root,
        ls_msg     TYPE string.

  IF cl_salv_table=>is_offline( ) EQ if_salv_c_bool_sap=>false.
    CREATE OBJECT co_container
      EXPORTING
        container_name = 'CONTAINER'.
  ENDIF.

  TRY.
      cl_salv_table=>factory( EXPORTING r_container     = co_container
                                        container_name  = 'CONTAINER'
                              IMPORTING r_salv_table    = mo_alv
                              CHANGING  t_table         = mt_docs ).

      lo_columns = mo_alv->get_columns( ).

      lo_column ?= lo_columns->get_column( 'DOC_TYPE' ).
      lo_column->set_output_length( 15 ).

      lo_column ?= lo_columns->get_column( 'ID' ).
      lo_column->set_output_length( 14 ).
      lo_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
      lo_events = mo_alv->get_event( ).
      SET HANDLER on_click FOR lo_events.

      lo_column ?= lo_columns->get_column( 'KUNAG' ).
      lo_columns->set_column_position( columnname = 'KUNAG'
                                       position   = 5 ).
      lo_column->set_output_length( 11 ).
      lo_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
      lo_events = mo_alv->get_event( ).
      SET HANDLER on_click FOR lo_events.

      lo_column ?= lo_columns->get_column( 'DESCRIPTION' ).
      lo_column->set_output_length( 17 ).

      lo_column ?= lo_columns->get_column( 'CREATION_DATE' ).
      lo_column->set_output_length( 11 ).

      lo_column ?= lo_columns->get_column( 'CREATION_TIME' ).
      lo_column->set_edit_mask( value = '__:__:__' ).
      lo_column->set_output_length( 9 ).

      lo_column ?= lo_columns->get_column( 'BUKRS' ).
      lo_column->set_visible( abap_false ).

      lo_column ?= lo_columns->get_column( 'SPRAS' ).
      lo_column->set_visible( abap_false ).

      lo_column ?= lo_columns->get_column( 'CLIENT' ).
      lo_column->set_visible( abap_false ).

      mo_alv->display( ).

    CATCH cx_root INTO lx_root.
      ls_msg = lx_root->get_text( ).
      MESSAGE e000(zdyn_ws) WITH ls_msg.
  ENDTRY.

ENDMETHOD.
METHOD get_list.

  DATA: lt_sel_doc_type      TYPE RANGE OF zdyn_ws_tdoc-doc_type,
        lt_sel_id            TYPE RANGE OF zdyn_ws_tdoc-id,
        lt_sel_sold_to       TYPE RANGE OF zdyn_ws_sdoc_disp-kunag,
        lt_sel_creation_date TYPE RANGE OF zdyn_ws_tdoc-creation_date.

  lt_sel_doc_type       = it_sel_doc_type.
  lt_sel_id             = it_sel_id.
  lt_sel_sold_to        = it_sel_sold_to.
  lt_sel_creation_date  = it_sel_creation_date.

  SELECT vtdoc~doc_type vtdoc~description vtdoc~id vtdoc~creation_date vtdoc~creation_time vbrk~kunag vbrk~bukrs
      FROM zdyn_ws_vtdoc AS vtdoc JOIN vbrk ON vbrk~vbeln = vtdoc~id
      INTO CORRESPONDING FIELDS OF TABLE mt_docs
      WHERE vtdoc~doc_type      IN lt_sel_doc_type
        AND vtdoc~id            IN lt_sel_id
        AND vbrk~kunag          IN lt_sel_sold_to
        AND vtdoc~creation_date IN lt_sel_creation_date.

ENDMETHOD.
METHOD on_click.

  DATA lst_doc  LIKE LINE OF mt_docs.

  CHECK row > 0.
  READ TABLE mt_docs INTO lst_doc INDEX row.
  CHECK sy-subrc = 0.

  CASE column.
    WHEN 'ID'.
      CALL FUNCTION 'AUTHORITY_CHECK_TCODE'
        EXPORTING
          tcode  = 'VF03'
        EXCEPTIONS
          ok     = 0
          OTHERS = 1.
      IF sy-subrc <> 0.
        MESSAGE s172(00) WITH 'VF03'.
        RETURN.
      ENDIF.

      SET PARAMETER ID 'VF' FIELD lst_doc-id.
      CALL TRANSACTION 'VF03' AND SKIP FIRST SCREEN.
    WHEN 'KUNAG'.
      CALL FUNCTION 'AUTHORITY_CHECK_TCODE'
        EXPORTING
          tcode  = 'XD03'
        EXCEPTIONS
          ok     = 0
          OTHERS = 1.
      IF sy-subrc <> 0.
        MESSAGE s172(00) WITH 'XD03'.
        RETURN.
      ENDIF.

      SET PARAMETER ID 'KUN' FIELD lst_doc-kunag.
      SET PARAMETER ID 'BUK' FIELD lst_doc-bukrs.
      CALL TRANSACTION 'XD03' AND SKIP FIRST SCREEN.
    WHEN OTHERS.
*  do nothing
  ENDCASE.

ENDMETHOD.
METHOD refresh.

  mo_alv->refresh( ).

ENDMETHOD.
