INCLUDE zdyn_cl_scenario_test=========ccmac.

class ZDYN_CL_HELP_BAPI definition
  public
  inheriting from ZDYN_CL_BAPI
  create public .

public section.

  class-data MR_SCENARIO type ref to DATA .

  class-methods SET_SCENARIO
    importing
      !IR_SCENARIO type ref to DATA .
  class-methods SET_HELP_MO .

  methods ARCHIVE_CREATE_LINK
    redefinition .
  methods ARCHIVE_EXTERNAL_DATA
    redefinition .
  methods ARCHIVE_GET_CONNECTIONS
    redefinition .
  methods ARCHIVE_GET_DATA
    redefinition .
  methods ARCHIVE_PREPARE
    redefinition .
  methods BAPISDORDER_GETDETAILEDLIST
    redefinition .
  methods BAPI_COMPANYCODE_GETDETAIL
    redefinition .
  methods BAPI_PO_GETDETAIL
    redefinition .
  methods EBY_PDBO_RFC_DATA_RECEIVE
    redefinition .
  methods FI_PRINT_ZTERM
    redefinition .
  methods GET_ACCOUNT_DETERMINATION
    redefinition .
  methods GET_ADDRESS
    redefinition .
  methods GET_BANK_DETAILS
    redefinition .
  methods GET_BANK_NAME
    redefinition .
  methods GET_BILLING_DOC
    redefinition .
  methods GET_BILLING_DOC_PDF_NAST
    redefinition .
  methods GET_BSEG
    redefinition .
  methods GET_BSID_BSAD
    redefinition .
  methods GET_COMPANY_CODES
    redefinition .
  methods GET_COMPANY_DETAILS
    redefinition .
  methods GET_CONTROLLING_AREA
    redefinition .
  methods GET_COST_CENTERS
    redefinition .
  methods GET_CURRENCY_TEXTS
    redefinition .
  methods GET_CURRENT_TIMESTAMP
    redefinition .
  methods GET_CUSTOMERS
    redefinition .
  methods GET_CUSTOMER_BANKS
    redefinition .
  methods GET_CUSTOMER_DETAILS
    redefinition .
  methods GET_CUSTOMER_TAX_CODE
    redefinition .
  methods GET_DUEDATE
    redefinition .
  methods GET_EMAIL_FROM_ADR6
    redefinition .
  methods GET_EXCHANGE_RATE
    redefinition .
  methods GET_GL_ACCOUNTS
    redefinition .
  methods GET_GL_ACCOUNT_DETAILS
    redefinition .
  methods GET_IBAN
    redefinition .
  methods GET_IDOC_CONTROL_RECORD
    redefinition .
  methods GET_KONV
    redefinition .
  methods GET_LOCAL_CURRENCY
    redefinition .
  methods GET_NAPR
    redefinition .
  methods GET_NAST
    redefinition .
  methods GET_ORDERS
    redefinition .
  methods GET_PAYMENT_TERMS
    redefinition .
  methods GET_SALES_DOCUMENTS
    redefinition .
  methods GET_SALES_DOCUMENTS2
    redefinition .
  methods GET_SALES_DOC_NUMBERS
    redefinition .
  methods GET_SWIFT
    redefinition .
  methods GET_TAX_CODES
    redefinition .
  methods GET_TAX_CODE_TEXT
    redefinition .
  methods GET_TEXTS
    redefinition .
  methods GET_TEXT_FROM_DOMAIN
    redefinition .
  methods GET_VBAK
    redefinition .
  methods GET_VBRP
    redefinition .
  methods GET_VENDORS
    redefinition .
  methods GET_VENDOR_BANKS
    redefinition .
  methods GET_WBS_ELEMENTS
    redefinition .
  methods IDOC_INBOUND_XML_VIA_HTTP
    redefinition .
  methods IS_OBJECT_MODIFIED
    redefinition .
  methods GET_VBRPS
    redefinition .
protected section.
private section.
endclass. "ZDYN_CL_HELP_BAPI definition
class ZDYN_CL_HELP_BAPI implementation.
METHOD archive_create_link.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'ARCHIVE_CREATE_LINK'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IST_ARC' ist_arc.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RB_OK' rb_ok.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD archive_external_data.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'ARCHIVE_EXTERNAL_DATA'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IST_ARC'    ist_arc.
  check_input_ref <st_scenario> 'IT_CONTENT' it_content.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'EC_ARC_DOC_ID' ec_arc_doc_id.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD archive_get_connections.

  DATA: lb_exception TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'ARCHIVE_GET_CONNECTIONS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_SAP_OBJECT' ic_sap_object.
  check_input <st_scenario> 'IC_OBJECT_ID'  ic_object_id.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_CONNECTIONS' et_connections.

**************************************************************
* Verify exception
  set_output <st_scenario> 'NOT_FOUND' lb_exception.
  IF lb_exception = abap_true.
    RAISE not_found.
  ENDIF.

  set_output <st_scenario> 'SYSTEM_ERROR' lb_exception.
  IF lb_exception = abap_true.
    RAISE system_error.
  ENDIF.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD archive_get_data.

  DATA: lb_exception TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'ARCHIVE_GET_DATA'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_ARCHIVE_ID' ic_archive_id.
  check_input <st_scenario> 'IC_DOC_TYPE'   ic_doc_type.
  check_input <st_scenario> 'IC_ARC_DOC_ID' ic_arc_doc_id.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_DATA' et_data.

**************************************************************
* Verify exception
  set_output <st_scenario> 'ERROR_OCCURRED' lb_exception.
  IF lb_exception = abap_true.
    RAISE error_occurred.
  ENDIF.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD archive_prepare.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'ARCHIVE_PREPARE'.

**************************************************************
* Verify input data (name from scenario)
  check_input_ref <st_scenario> 'CST_ARC_1' cst_arc.

**************************************************************
* Return expected values for further processing (name from scenario)
  set_output_ref <st_scenario> 'CST_ARC_2' cst_arc.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD bapi_companycode_getdetail.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'BAPI_COMPANYCODE_GETDETAIL'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_COMPANYCODE_ID' ic_companycode_id.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_COMPANYCODE_DETAIL'   est_companycode_detail.
  set_output_ref <st_scenario> 'EST_COMPANYCODE_ADDRESS'  est_companycode_address.
  set_output_ref <st_scenario> 'EST_RETURN'               est_return.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD bapi_po_getdetail.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'BAPI_PO_GETDETAIL'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_PO_NUMBER' ic_po_number.
  check_input <st_scenario> 'IB_ITEMS'     ib_items.
  check_input <st_scenario> 'IB_HISTORY'   ib_history.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ES_HEADER'              es_header.
  set_output_ref <st_scenario> 'ET_ITEMS'               et_items.
  set_output_ref <st_scenario> 'ET_ITEM_HISTORY'        et_item_history.
  set_output_ref <st_scenario> 'ET_ITEM_HISTORY_TOTALS' et_item_history_totals.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD bapisdorder_getdetailedlist.
*CALL METHOD SUPER->BAPISDORDER_GETDETAILEDLIST
*  EXPORTING
*    IT_SALES_DOCUMENTS = IT_SALES_DOCUMENTS
*    IST_VIEW           = IST_VIEW
*  IMPORTING
*    et_headers         = et_headers
*    et_items           = et_items
*    et_conditions      = et_conditions
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'BAPISDORDER_GETDETAILEDLIST'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SALES_DOCUMENTS'  it_sales_documents.
  check_input_ref <st_scenario> 'IST_VIEW'            ist_view.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_HEADERS'     et_headers.
  set_output_ref <st_scenario> 'ET_ITEMS'       et_items.
  set_output_ref <st_scenario> 'ET_CONDITIONS'  et_conditions.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD eby_pdbo_rfc_data_receive.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'EBY_PDBO_RFC_DATA_RECEIVE'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_OBJ'   ic_obj.
  check_input <st_scenario> 'IC_ENV'   ic_env.
  check_input <st_scenario> 'IC_MAPID' ic_mapid.

  check_input_ref <st_scenario> 'IT_EXTDATA'    it_extdata.
  check_input_ref <st_scenario> 'IT_ARCHIVING'  it_archiving.
  check_input_ref <st_scenario> 'IT_CONTENT'    it_content.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ES_BO_HDR'    es_bo_hdr.
  set_output_ref <st_scenario> 'ES_STATUS'    es_status.
  set_output_ref <st_scenario> 'ET_MESSAGES'  et_messages.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD fi_print_zterm.

  DATA: lb_exception TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'FI_PRINT_ZTERM'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_ZTERM'     ic_zterm.
  check_input_ref <st_scenario> 'IT_SEL_LANGU' it_sel_langu.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_TEXTS' et_texts.

**************************************************************
* Verify exception
  set_output <st_scenario> 'ERROR_OCCURRED' lb_exception.
  IF lb_exception = abap_true.
    RAISE error_occurred.
  ENDIF.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_account_determination.
*CALL METHOD SUPER->GET_ACCOUNT_DETERMINATION
*  EXPORTING
*    IC_COMPANY_CODE = IC_COMPANY_CODE
*    ic_zlsch_set    = ic_zlsch_set
*  IMPORTING
*    et_rules        = et_rules
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_ACCOUNT_DETERMINATION'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_COMPANY_CODE' ic_company_code.
  check_input_ref <st_scenario> 'IT_ZLSCH'        it_zlsch.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_RULES'   et_rules.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_address.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_ADDRESS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_ADDRESS_NO' ic_address_no.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_ADDRESS'  est_address.
  set_output     <st_scenario> 'EI_SUBRC'     ei_subrc.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_bank_details.
*CALL METHOD SUPER->GET_BANK_DETAILS
*  EXPORTING
*    IC_COMPANY_CODE = IC_COMPANY_CODE
*    IC_BANK_KEY     = IC_BANK_KEY
*    IC_ACCOUNT_ID   = IC_ACCOUNT_ID
*  IMPORTING
*    est_house_bank  = est_house_bank
*    est_account     = est_account
*    est_bank_master = est_bank_master
*  EXCEPTIONS
*    error_occurred  = 1
*    others          = 2
*        .
*IF SY-SUBRC <> 0.
** Implement suitable error handling here
*ENDIF.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_BANK_DETAILS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_COMPANY_CODE' ic_company_code.
  check_input <st_scenario> 'IC_BANK_KEY'     ic_bank_key.
  check_input <st_scenario> 'IC_ACCOUNT_ID'   ic_account_id.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_HOUSE_BANK'   est_house_bank.
  set_output_ref <st_scenario> 'EST_ACCOUNT'      est_account.
  set_output_ref <st_scenario> 'EST_BANK_MASTER'  est_bank_master.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_bank_name.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_BANK_NAME'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_COUNTRY_KEY' ic_country_key.
  check_input <st_scenario> 'IC_KEYS'        ic_keys.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RC_NAME' rc_name.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
  method GET_BILLING_DOC.
CALL METHOD SUPER->GET_BILLING_DOC
  EXPORTING
    IC_DOC_NUMBER     = IC_DOC_NUMBER
    IC_DATA_SELECTION = IC_DATA_SELECTION
    IC_PARTNER        = IC_PARTNER
    IC_PARTNER_ROLE   = IC_PARTNER_ROLE
    IC_LANGU          = IC_LANGU
  IMPORTING
    est_data          = est_data
  EXCEPTIONS
    records_not_found = 1
    error_occurred    = 2
    others            = 3
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.
  endmethod.
  method GET_BILLING_DOC_PDF_NAST.
CALL METHOD SUPER->GET_BILLING_DOC_PDF_NAST
  EXPORTING
    IST_NAST       = IST_NAST
    IC_SMARTFORM   = IC_SMARTFORM
    ic_langu       = ic_langu
  IMPORTING
    et_data        = et_data
    ei_bin_length  = ei_bin_length
    ex_stream      = ex_stream
  EXCEPTIONS
    error_occurred = 1
    others         = 2
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.
  endmethod.
METHOD get_bseg.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_BSEG'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_DOC_NUM'      ic_doc_num.
  check_input <st_scenario> 'IC_ACCOUNT_TYPE' ic_account_type.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_BSEG'  est_bseg.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_bsid_bsad.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_BSID_BSAD'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_DOC_NUM'      ic_doc_num.
  check_input <st_scenario> 'IC_COMP_CODE'    ic_comp_code.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_BSEG'  est_bseg.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_company_codes.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_COMPANY_CODES'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT' it_sel_opt.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_COMPANY_CODES' et_company_codes.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_company_details.
*CALL METHOD SUPER->GET_COMPANY_DETAILS
*  EXPORTING
*    IC_COMPANY_CODE = IC_COMPANY_CODE
*  IMPORTING
*    est_company     = est_company
*  EXCEPTIONS
*    error_occurred  = 1
*    others          = 2
*        .
*IF SY-SUBRC <> 0.
** Implement suitable error handling here
*ENDIF.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_COMPANY_DETAILS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_COMPANY_CODE' ic_company_code.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_COMPANY'   est_company.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_controlling_area.

  DATA: lb_exception  TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CONTROLLING_AREA'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_COMP_CODE' ic_comp_code.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'EC_CTRL_AREA' ec_ctrl_area.

**************************************************************
* Verify exception
  set_output <st_scenario> 'ERROR_OCCURRED' lb_exception.
  IF lb_exception = abap_true.
    RAISE error_occurred.
  ENDIF.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_cost_centers.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_COST_CENTERS'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_COMP_CODE'  ic_comp_code.
  check_input     <st_scenario> 'IC_CTRL_AREA'  ic_ctrl_area.
  check_input_ref <st_scenario> 'IT_SEL_OPT'    it_sel_opt.
  check_input_ref <st_scenario> 'IT_SEL_LANGU'  it_sel_langu.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_COST_CENTERS' et_cost_centers.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_currency_texts.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CURRENCY_TEXTS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT'    it_sel_opt.
  check_input_ref <st_scenario> 'IT_SEL_LANGU'  it_sel_langu.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_TEXTS' et_texts.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_current_timestamp.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CURRENT_TIMESTAMP'.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RD_TIMESTAMP' rd_timestamp.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_customer_banks.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CUSTOMER_BANKS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_CUSTOMER' ic_customer.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_BANKS' et_banks.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_customer_details.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CUSTOMER_DETAILS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_CUSTOMER' ic_customer.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_DETAILS'   est_details.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_customer_tax_code.
*CALL METHOD SUPER->GET_CUSTOMER_TAX_CODE
*  EXPORTING
*    IC_NUMBER =
*  RECEIVING
*    RST_CODES =
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CUSTOMER_TAX_CODE'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_NUMBER' ic_number.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'RST_CODES'  rst_codes.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_customers.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_CUSTOMERS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT'        it_sel_opt.
  check_input_ref <st_scenario> 'IT_SEL_COMP_CODES' it_sel_comp_codes.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_CUSTOMERS' et_customers.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_duedate.
*CALL METHOD SUPER->GET_DUEDATE
*  EXPORTING
*    ID_BASELINE_DATE   =
*    II_DISCOUNT_DAYS_1 =
*    II_DISCOUNT_DAYS_2 =
*    II_DISCOUNT_DAYS_3 =
**  IMPORTING
**    ed_duedate         =
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_DUEDATE'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'ID_BASELINE_DATE'   id_baseline_date.
  check_input <st_scenario> 'II_DISCOUNT_DAYS_1' ii_discount_days_1.
  check_input <st_scenario> 'II_DISCOUNT_DAYS_2' ii_discount_days_2.
  check_input <st_scenario> 'II_DISCOUNT_DAYS_3' ii_discount_days_3.

**************************************************************
* Return expected values for further processing
  set_output     <st_scenario> 'ED_DUEDATE' ed_duedate.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_email_from_adr6.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_EMAIL_FROM_ADR6'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_ADRNR' ic_adrnr.
  check_input <st_scenario> 'IC_PERNR' ic_pernr.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RS_EMAIL' rs_email.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_exchange_rate.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_EXCHANGE_RATE'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_FOREIGN_CURRENCY' ic_foreign_currency.
  check_input <st_scenario> 'IC_LOCAL_CURRENCY'   ic_local_currency.

**************************************************************
* Return expected values for further processing
  set_output  <st_scenario> 'EC_EXCHANGE_RATE' ec_exchange_rate.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_gl_account_details.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_GL_ACCOUNT_DETAILS'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_CHART_OF_ACCOUNTS' ic_chart_of_accounts.
  check_input     <st_scenario> 'IC_GL_ACCOUNT'        ic_gl_account.
  check_input_ref <st_scenario> 'IT_SEL_LANGU'         it_sel_langu.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_DETAILS' est_details.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_gl_accounts.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_GL_ACCOUNTS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT'        it_sel_opt.
  check_input     <st_scenario> 'IC_COMP_CODE'      ic_comp_code.
  check_input_ref <st_scenario> 'IT_SEL_COMP_CODES' it_sel_comp_codes.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_GL_ACCOUNTS' et_gl_accounts.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_iban.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_IBAN'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_BANKS' ic_banks.
  check_input <st_scenario> 'IC_BANKL' ic_bankl.
  check_input <st_scenario> 'IC_BANKN' ic_bankn.
  check_input <st_scenario> 'IC_BKONT' ic_bkont.

**************************************************************
* Return expected values for further processing
  set_output_ref  <st_scenario> 'EST_IBAN'  est_iban.
  set_output      <st_scenario> 'EC_IBAN'   ec_iban.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_idoc_control_record.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_IDOC_CONTROL_RECORD'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IS_EXTERNAL_DOC_ID' is_external_doc_id.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ES_RECORD' es_record.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
method GET_KONV.
*CALL METHOD SUPER->GET_KONV
*  EXPORTING
*    IN_COND_NUMB = IN_COND_NUMB
*  IMPORTING
*    et_konv      = et_konv
*    et_komv      = et_komv
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_KONV'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IN_COND_NUMB' IN_COND_NUMB.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_KONV'  et_konv.
  set_output_ref <st_scenario> 'ET_KOMV'  et_komv.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

  endmethod.
METHOD get_local_currency.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_LOCAL_CURRENCY'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_COMP_CODE' ic_comp_code.

**************************************************************
* Return expected values for further processing
  set_output  <st_scenario> 'RC_CURRENCY' rc_currency.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_napr.
*CALL METHOD SUPER->GET_NAPR
*  EXPORTING
*    IC_OUTPUT_TYPE  = IC_OUTPUT_TYPE
*    IC_APPLICATION  = IC_APPLICATION
*    IC_TRANS_MEDIUM = IC_TRANS_MEDIUM
*  RECEIVING
*    RC_SMARTFORM    = RC_SMARTFORM
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_NAPR'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_OUTPUT_TYPE'  ic_output_type.
  check_input <st_scenario> 'IC_APPLICATION'  ic_application.
  check_input <st_scenario> 'IC_TRANS_MEDIUM' ic_trans_medium.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RC_SMARTFORM'   rc_smartform.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_nast.
*CALL METHOD SUPER->GET_NAST
*  EXPORTING
*    IC_DOC_NUMBER  = IC_DOC_NUMBER
*    IC_APPLICATION = IC_APPLICATION
*    ic_output_type = ic_output_type
*  IMPORTING
*    est_nast       = est_nast
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_NAST'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_DOC_NUMBER'   ic_doc_number.
  check_input <st_scenario> 'IC_APPLICATION'  ic_application.
  check_input <st_scenario> 'IC_OUTPUT_TYPE'  ic_output_type.

**************************************************************
* Return expected values for FURTHER PROCESsing
  set_output_ref <st_scenario> 'EST_NAST' est_nast.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_orders.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_ORDERS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_COMP_CODES' it_sel_comp_codes.
  check_input_ref <st_scenario> 'IT_SEL_OPT'        it_sel_opt.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_ORDERS' et_orders.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_payment_terms.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_PAYMENT_TERMS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT' it_sel_opt.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_TERMS' et_terms.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
  method GET_SALES_DOC_NUMBERS.
*CALL METHOD SUPER->GET_SALES_DOC_NUMBERS
**  EXPORTING
**    it_sel_sales_doc   =
**    it_sel_doc_type    =
**    it_sel_comp_code   =
**    it_sel_customer    =
**    it_sel_application =
**    it_sel_msg_type    =
**    it_dyn_sel         =
**    it_sel_create_date =
**    ib_use_register    = ABAP_TRUE
**  IMPORTING
**    et_sales_docs      =
*    .
  endmethod.
METHOD get_sales_documents.

  DATA: lb_exception TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_SALES_DOCUMENTS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_SALES_DOC' it_sel_sales_doc.
  check_input     <st_scenario> 'ID_CREATE_DATE'   id_create_date.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_SALES_DOCS' et_sales_docs.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_sales_documents2.

  DATA: lb_exception TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_SALES_DOCUMENTS2'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_SALES_DOC' it_sel_sales_doc.
  check_input     <st_scenario> 'ID_CREATE_DATE'   id_create_date.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_SALES_DOCS' et_sales_docs.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_swift.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_SWIFT'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_BANKS' ic_banks.
  check_input <st_scenario> 'IC_BANKL' ic_bankl.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RC_SWIFT' rc_swift.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_tax_code_text.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_TAX_CODE_TEXT'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_TAX_CODE'   ic_tax_code.
  check_input     <st_scenario> 'IC_PROCEDURE'  ic_procedure.
  check_input_ref <st_scenario> 'IT_SEL_LANGU'  it_sel_langu.

**************************************************************
* Return expected values for further processing
  set_output  <st_scenario> 'EC_TEXT'  ec_text.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_tax_codes.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_TAX_CODES'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT'        it_sel_opt.
  check_input_ref <st_scenario> 'IT_SEL_COMP_CODES' it_sel_comp_codes.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_TAX_CODES' et_tax_codes.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_text_from_domain.
*CALL METHOD SUPER->GET_TEXT_FROM_DOMAIN
*  EXPORTING
*    IC_DOMAIN = IC_DOMAIN
*    IC_VALUE  = IC_VALUE
*    ic_langu  = ic_langu
*  IMPORTING
*    ec_text   = ec_text
*    ec_rc     = ec_rc
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_TEXT_FROM_DOMAIN'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_DOMAIN' ic_domain.
  check_input <st_scenario> 'IC_VALUE'  ic_value.
  check_input <st_scenario> 'IC_LANGU'  ic_langu.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'EC_TEXT'  ec_text.
  set_output <st_scenario> 'EC_RC'    ec_rc.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_texts.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_TEXTS'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_NUMBER' ic_number.
  check_input     <st_scenario> 'IC_LANGU'  ic_langu.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_LINES' et_lines.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_vbak.
*CALL METHOD SUPER->GET_VBAK
*  EXPORTING
*    IN_DOC_NUMBER = IN_DOC_NUMBER
*  IMPORTING
*    et_vbak       = et_vbak
*    .

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_VBAK'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IN_DOC_NUMBER' in_doc_number.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_VBAK'  et_vbak.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_vbrp.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_VBRP'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_DOC_NUMBER' ic_doc_number.
  check_input <st_scenario> 'IC_ITM_NUMBER' ic_itm_number.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'EST_VBRP'   est_vbrp.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_vbrps.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_VBRPS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_DOC_NUMBER' ic_doc_number.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_VBRP'   et_vbrp.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_vendor_banks.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_VENDOR_BANKS'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_VENDOR' ic_vendor.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_BANKS' et_banks.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_vendors.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_VENDORS'.

*************************************************************
* Verify input data
  check_input_ref <st_scenario> 'IT_SEL_OPT'        it_sel_opt.
  check_input     <st_scenario> 'IC_COMP_CODE'      ic_comp_code.
  check_input_ref <st_scenario> 'IT_SEL_COMP_CODES' it_sel_comp_codes.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_VENDORS' et_vendors.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD get_wbs_elements.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'GET_WBS_ELEMENTS'.

*************************************************************
* Verify input data
  check_input     <st_scenario> 'IC_COMP_CODE'      ic_comp_code.
  check_input_ref <st_scenario> 'IT_SEL_COMP_CODES' it_sel_comp_codes.
  check_input_ref <st_scenario> 'IT_SEL_OPT'        it_sel_opt.

**************************************************************
* Return expected values for further processing
  set_output_ref <st_scenario> 'ET_WBS_ELEMENTS' et_wbs_elements.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD idoc_inbound_xml_via_http.

  DATA: lb_exception  TYPE abap_bool.
  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'IDOC_INBOUND_XML_VIA_HTTP'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IS_XML'         is_xml.
  check_input <st_scenario> 'IS_REMOTE_ADDR' is_remote_addr.

**************************************************************
* Verify exception
  set_output <st_scenario> 'ERROR_OCCURRED' lb_exception.
  IF lb_exception = abap_true.
    RAISE error_occurred.
  ENDIF.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD is_object_modified.

  FIELD-SYMBOLS: <st_scenario> TYPE zdyn_stru_scenario.

  ASSIGN mr_scenario->* TO <st_scenario>.

*************************************************************
* Verify if we are in the expected place in the process
  check_method <st_scenario> 'IS_OBJECT_MODIFIED'.

*************************************************************
* Verify input data
  check_input <st_scenario> 'IC_OBJECT_ID'    ic_object_id.
  check_input <st_scenario> 'IC_OBJECT_CLASS' ic_object_class.
  check_input <st_scenario> 'ID_DATE'         id_date.

**************************************************************
* Return expected values for further processing
  set_output <st_scenario> 'RB_RESULT' rb_result.

**************************************************************
* Switch to the next step
  next_method <st_scenario>.

ENDMETHOD.
METHOD set_help_mo.

  CREATE OBJECT mo TYPE zdyn_cl_help_bapi.

ENDMETHOD.
METHOD set_scenario.

  mr_scenario = ir_scenario.

ENDMETHOD.
