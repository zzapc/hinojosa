*---------------------------------------------------------------------*
*       FORM DEVICE_OPTIONS_FILL                                      *
*---------------------------------------------------------------------*
*       fills options (=parameter) for the output of the message.
*       copied from SAPFM06P (some changes made).
*       see also include RVADOPFO.
*---------------------------------------------------------------------*
*  <--  CS_ITCPO  options
*       DEVICE   printer, fax, ... (but not: screen)
*       DIALOG   options incomplete -> open dialog to enter these
*---------------------------------------------------------------------*
FORM device_options_fill CHANGING cs_itcpo      LIKE   itcpo
                                  cs_recipient  LIKE   swotobjid
                                  cs_sender     LIKE   swotobjid
                                  cf_device     LIKE   itcpp-tddevice
                                  cf_xdialog    TYPE   c
                                  cs_fp_outputparams TYPE sfpoutputparams.
  DATA:  ls_snast         LIKE   snast,
*         ls_comm_values   TYPE   szadr_comm_values,
*         lf_comm_type     TYPE   ad_comm,
         lf_programm      TYPE   tdprogram,
         lf_tddest        TYPE   rspopname,                 "696327
         lf_tdcovtitle    TYPE   syprtxt,                   "696327
         lf_tdtitle       TYPE   tdtitle.                   "696327

* get data from NAST
  CLEAR cs_itcpo.
  MOVE-CORRESPONDING nast TO cs_itcpo.
* these ITCPO-fields will be set on initial:
*         tdpageslct   Druck: Druckseitenauswahl
*         tdnewid      Druck: Neuer Spool-Auftrag (Liste)
*         tdtitle      Druck: Titel für Deckblatt
*         tdlifetime   Druck: Spool-Verweildauer
*         tdiexit      SAPscript: sofortiger Exit nach Drucken/Faxen
*         tdtest       test

* the following ITCPO-fields will moved implicitly:
*         tdcovtitle                  Druck: Text für Deckblatt
*         tdreceiver                  Druck: Empfänger
*         tddivision                  Druck: Abteilung im Deckblatt
*         tdautority                  Druck: Berechtigung
*         tdarmod                     Druck: Archivierungsmodus
*         tdschedule                  Sendezeit Anforderung
  cs_itcpo-tdcover    = nast-tdocover. "Druck: SAP-Deckblatt (flag)
  cs_itcpo-tdcopies   = nast-anzal.    "Druck: Anzahl Ausdrucke(!)
  cs_itcpo-tddataset  = nast-dsnam.    "Druck: Name
  cs_itcpo-tdsuffix1  = nast-dsuf1.    "Druck: Suffix 1
  cs_itcpo-tdsuffix2  = nast-dsuf2.    "Druck: Suffix2
  cs_itcpo-tdimmed    = nast-dimme.    "Druck: Sofort ausgeben (flag)
  cs_itcpo-tddelete   = nast-delet.    "Druck: Löschen nach Ausgabe
  cs_itcpo-tdsenddate = nast-vsdat.    "Gewunschtes Sendedatum
  cs_itcpo-tdsendtime = nast-vsura.    "Gewunschte Sendezeit
  cs_itcpo-tdprogram  = sy-repid.      "Programmname
  cs_itcpo-tddest     = nast-ldest.    "Spool: Output device      630540
* fill an empty title with the document number
  IF cs_itcpo-tdcovtitle IS INITIAL.
    CONCATENATE nast-objky+4(10) nast-objky+14(4) INTO
                              cs_itcpo-tdcovtitle SEPARATED BY space.
  ENDIF.
  lf_tddest = cs_itcpo-tddest.                              "696327
  lf_tdcovtitle = lf_tdtitle = cs_itcpo-tdcovtitle.         "696327
  cs_itcpo-tdtitle = cs_itcpo-tdcovtitle.
* trigger to get OTF data for Supplier Workplace printing
  IF nast-sort1 = c_sort_swp.
    cs_itcpo-tdgetotf = c_signx.
  ENDIF.
** determine data depending on message type
  CASE nast-nacha.
*   printout
    WHEN c_nacha_drucker.
      cf_device = c_device_printer.
      IF ( nast-ldest = space ).
        cf_xdialog = 'X'.
      ELSE.
        cs_itcpo-tddest = nast-ldest.  "printer name
      ENDIF.
*   telefax
    WHEN c_nacha_telefax.
      cs_itcpo-tdfaxuser = nast-usnam. " user for sending problems
      cf_device = c_device_telefax.
      IF ( nast-telfx = space ).
        cf_xdialog = 'X'.
      ELSE.
        cs_itcpo-tdtelenum  = nast-telfx.  "telefax number
        IF nast-tland IS INITIAL.
          SET COUNTRY cs_itcpo-tdteleland.
        ELSE.
          cs_itcpo-tdteleland = nast-tland.
        ENDIF.
        cs_itcpo-tdsenddate = nast-vsdat.
        cs_itcpo-tdsendtime = nast-vsura.
      ENDIF.

*   TELETEX NOT SUPPLIED!
*   when c_nacha_teletex.  "ACHTUNG: device 'TELETEX' existiert nicht!
*     device = c_device_teletex.  "ex. nicht!
*     if ( nast-teltx = space ).
*       xdialog = 'X'.
*     else.
*       CS_ITCPO-tdtelenum  = nast-teltx.
*      if nast-tland is initial.
*        set country CS_ITCPO-tdteleland.
*      else.
*        CS_ITCPO-tdteleland = nast-tland.
*      endif.
*     itcpo-tdsenddate = nast-vsdat.
*     itcpo-tdsendtime = nast-vsura.
*     endif.

*   TELEX NOT SUPPLIED!
*   when c_nacha_telex.
*     device = c_device_telex.
*     if ( nast-telx1 = space ).
*       xdialog = 'X'.
*     else.
*     if nast-tland is initial.
*        set country CS_ITCPO-tdteleland.
*      else.
*        CS_ITCPO-tdteleland = nast-tland.
*      endif.
*     itcpo-tdsenddate = nast-vsdat.
*     itcpo-tdsendtime = nast-vsura.
*       CS_ITCPO-tdtelenum  = nast-telx1.
*       CS_ITCPO-tdteleland = lfa1-land1.
*    endif.

*   external send
    WHEN c_nacha_intmail.
      IF nast-adrnr IS INITIAL.
        nast-adrnr = lfa1-adrnr.
      ENDIF.
*   ... use stratagy to get communication type
      CALL FUNCTION 'ADDR_GET_NEXT_COMM_TYPE'
           EXPORTING
              strategy           = nast-tcode
*             ADDRESS_TYPE       =
*             ADDRESS_NUMBER     = VBDKA-ADRNR
*             PERSON_NUMBER      = VBDKA-ADRNP
              address_number     = nast-adrnr " needed for medium 5
*             person_number      = addr_key-persnumber
           IMPORTING
                comm_type          = gf_comm_type
                comm_values        = gs_comm_values
*        TABLES
*             STRATEGY_TABLE     =
           EXCEPTIONS
                address_not_exist  = 1
                person_not_exist   = 2
                no_comm_type_found = 3
                internal_error     = 4
                parameter_error    = 5
                OTHERS             = 6.
      IF sy-subrc <> 0.
        PERFORM protocol USING sy-msgid sy-msgty sy-msgno
                               sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
* convert communication data
      MOVE-CORRESPONDING nast TO ls_snast.
      MOVE sy-repid           TO lf_programm.
      CALL FUNCTION 'CONVERT_COMM_TYPE_DATA'
        EXPORTING
          pi_comm_type              = gf_comm_type
          pi_comm_values            = gs_comm_values
*         pi_screen                 = us_screen
*         PI_NEWID                  =
          pi_country                = lfa1-land1
          pi_repid                  = lf_programm
          pi_snast                  = ls_snast
        IMPORTING
          pe_itcpo                  = cs_itcpo              "696327
          pe_device                 = cf_device
          pe_mail_recipient         = cs_recipient
          pe_mail_sender            = cs_sender
        EXCEPTIONS
          comm_type_not_supported   = 1
          recipient_creation_failed = 2
          sender_creation_failed    = 3
          OTHERS                    = 4.
      IF sy-subrc <> 0.
        PERFORM protocol USING sy-msgid sy-msgty sy-msgno
                               sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
      cs_itcpo-tdcovtitle = lf_tdcovtitle.                  "696327
      cs_itcpo-tdtitle    = lf_tdtitle.                     "696327
      IF NOT lf_tddest IS INITIAL.                          "696327
        cs_itcpo-tddest   = lf_tddest.                      "696327
      ENDIF.                                                "696327

      IF fp_outputparams-device = 'MAIL'.                   "885787
*     Check validity of email address to avoid cancellation with TD463
        CALL FUNCTION 'SX_ADDRESS_TO_DEVTYPE'               "831984
          EXPORTING
            recipient_id            = cs_recipient
            sender_id               = cs_sender
          EXCEPTIONS
            err_invalid_route       = 1
            err_system              = 2
            OTHERS                  = 3.
        IF sy-subrc <> 0.
          PERFORM protocol USING sy-msgid sy-msgty sy-msgno
                                 sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        ENDIF.
      ENDIF.
    WHEN OTHERS.
      cf_device = c_device_printer.
  ENDCASE.

* output on screen to preview before printing
  IF ( g_xscreen = 'X' ).
    cs_itcpo-tdpreview = 'X'.          " Keine Druckbildansicht zulassen
    cs_itcpo-tdnoprint = 'X'.          " Keine Druckausgabe bei Preview
  ENDIF.

" 1438081 and 1489677 changes below
**To support fax and e-Mail
  if g_xscreen is initial
     and ( nast-nacha eq c_nacha_telefax OR nast-tdarmod = 2  or  nast-nacha eq c_nacha_intmail ).

* Setting output parameters only if communication type is fax or email.
    if nast-nacha  eq 5.
      IF ( gf_comm_type EQ 'FAX' OR gf_comm_type EQ 'INT' ).
        cs_fp_outputparams-getpdf  = abap_true.
      ENDIF.
    ELSE.
      cs_fp_outputparams-getpdf = abap_true.
    ENDIF.
* Specific setting for FAX
    IF nast-nacha EQ 2.
* Setting output parameters
      cs_fp_outputparams-device = 'TELEFAX'.
      IF nast-telfx EQ space.
        cs_fp_outputparams-nodialog = ' '.
      ENDIF.
    ENDIF.
  endif.

* To handle print and archive scenario "1489677
  IF nast-tdarmod EQ 3.
*    fp_outputparams-getpdf = abap_true.    "2365824
    cs_fp_outputparams-getpdf = abap_true.  "2365824
  ENDIF.
ENDFORM.                    "DEVICE_OPTIONS_FILL
