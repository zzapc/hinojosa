FUNCTION zeic_usex_transfer.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_STR_CHECK) LIKE  /COCKPIT/SCHECKDATA STRUCTURE
*"        /COCKPIT/SCHECKDATA
*"  TABLES
*"      C_TAB_ITEM STRUCTURE  /COCKPIT/TITEM
*"      C_TAB_ACCOUNT STRUCTURE  /COCKPIT/TACCT
*"      C_TAB_TAX STRUCTURE  /COCKPIT/TTAX
*"      E_TAB_MESSAGES STRUCTURE  BAPIRET2
*"      C_TAB_ACCT_ASSIGN STRUCTURE  /COCKPIT/TACCAS OPTIONAL
*"      CT_WHTAX STRUCTURE  /COCKPIT/SWHTAX OPTIONAL
*"  CHANGING
*"     REFERENCE(C_STR_HEADER) LIKE  /COCKPIT/THDR STRUCTURE
*"        /COCKPIT/THDR
*"  EXCEPTIONS
*"      ERROR_OCCURED
*"----------------------------------------------------------------------
*@US@aa         => Signiture of Creator, e.g. HH for Harry Hirsch
*@CU@aaa...     => Customer Name
*@K1@ ... *@K9@ => Keywords for Implemented Functionality

  DATA: lt_asig_cuenta   TYPE TABLE OF zeic_asig_cuenta,
        le_asig_cuenta   TYPE          zeic_asig_cuenta,
        ls_ttax          TYPE          /cockpit/ttax,
        l_linea          TYPE          i,
        le_cockpit_tacct TYPE          /cockpit/tacct,
        l_tabix          TYPE          sy-tabix,
        ls_tab_item      TYPE          /cockpit/titem.

* Dummy entry for user exit cross reference check
  IF con_exit_transfer IS INITIAL.
  ENDIF.

*>>> START OF IMPLEMENTATION >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*

*Mapeo del campo tipo de factura

  IF c_str_header-invoice_ind <> 'X'.
    CLEAR c_str_header-invoice_ind.
  ENDIF.


  DATA: ls_errors TYPE /cockpit/terrors,
        lt_errors TYPE TABLE OF /cockpit/terrors.

  CALL FUNCTION '/COCKPIT/ERROR_CLASS_GET'
    EXPORTING
      i_guid    = c_str_header-invoice_guid
    TABLES
      et_errors = lt_errors.

  LOOP AT lt_errors INTO ls_errors WHERE check_type EQ '0005'.
    c_str_header-follow_up = 'DU'.
    EXIT.
  ENDLOOP.

*Fecha de contabilización
*  c_str_header-pstng_date = sy-datum.
  c_str_header-pstng_date = c_str_header-doc_date.

  CALL FUNCTION 'ZEIC_CUENTAS'
    EXPORTING
      i_bukrs            = c_str_header-comp_code
      i_lifnr            = c_str_header-vendor_no
    TABLES
      t_cuentas          = lt_asig_cuenta
    EXCEPTIONS
      reparto_incorrecto = 1
      OTHERS             = 2.

  IF lt_asig_cuenta IS NOT INITIAL.

    READ TABLE lt_asig_cuenta INTO le_asig_cuenta INDEX 1.

    LOOP AT c_tab_account INTO le_cockpit_tacct.

      CLEAR l_tabix.

      l_tabix = sy-tabix.

      le_cockpit_tacct-gl_account = le_asig_cuenta-saknr.
      le_cockpit_tacct-costcenter = le_asig_cuenta-kostl.

      MODIFY c_tab_account FROM le_cockpit_tacct INDEX l_tabix.

    ENDLOOP.
  ENDIF.


  IF c_str_header-zeic_suplidos IS NOT INITIAL.
    READ TABLE c_tab_account INTO le_cockpit_tacct INDEX 1.
    le_cockpit_tacct-net_amount = c_str_header-zeic_suplidos.
    DESCRIBE TABLE c_tab_account LINES l_linea.
    le_cockpit_tacct-pos_no = l_linea + 1.
    CLEAR:le_cockpit_tacct-tax_code,
          le_cockpit_tacct-tax_amount,
          le_cockpit_tacct-tax_base_amount,
          le_cockpit_tacct-tax_rate,
          le_cockpit_tacct-taxjurcode.
    APPEND le_cockpit_tacct TO c_tab_account.
  ENDIF.

  IF c_str_header-zeic_imp_irpf IS NOT INITIAL.
    ADD c_str_header-zeic_imp_irpf TO c_str_header-gross_amount.
  ENDIF.


*<<< END OF IMPLEMENTATION <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*

ENDFUNCTION.
