FUNCTION zz_coci_print_rollo.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(DEST_NAME) LIKE  RCTC51-CSDES
*"  TABLES
*"      SCOME STRUCTURE  COME
*"      SCOMH STRUCTURE  COMH
*"      SCOMP STRUCTURE  RCOMP
*"----------------------------------------------------------------------

  DATA: ls_scomh TYPE comh.
  DATA: ls_scome TYPE come.
  DATA: lv_atinn TYPE atinn.
* GST - 22/04/2015 ->
*  DATA: ls_rollo TYPE zspp_etiq_rollo.
  DATA: ls_rollo TYPE zspp_etiq_rollo_scada.
  DATA: lv_num TYPE i.
* GST - 22/04/2015 <-

* GST - 22/05/2015 ->
DATA: lv_object            TYPE objnum,
      lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num,
      lt_alloc_values_char TYPE tt_bapi1003_alloc_values_char,
      lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr,
      lt_return            TYPE bapiret2_tab,
      ls_alloc_values_num  TYPE bapi1003_alloc_values_num.
* GST - 22/05/2015 <-


  CLEAR ls_rollo.

* MATERIAL
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'PPPI_MATERIAL'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-matnr = ls_scome-atwrt.
  ENDIF.

* NUMERO DE ORDEN
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'PPPI_PROCESS_ORDER'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-aufnr = ls_scome-atwrt.
  ENDIF.

* CLIENTE
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'ZPPI_CLIENTE'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-kunnr = ls_scome-atwrt.
  ENDIF.

* DIAMETRO
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'ZPPI_DIAMETRO'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-diametro = ls_scome-atwrt.
  ENDIF.

* LOTE
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
* GST - 22/04/2015 ->
*  WHERE atnam = 'ZPPI_LOTE'.
  WHERE atnam = 'PPPI_BATCH'.
* GST - 22/04/2015 <-

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-charg = ls_scome-atwrt.
  ENDIF.

* NUMERO DE PEDIDO
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'ZPPI_NUMERO_PEDIDO'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-pedido = ls_scome-atwrt.
  ENDIF.

* POSICION DE PEDIDO
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'ZPPI_POSICION_PEDIDO'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-posicion = ls_scome-atwrt.
  ENDIF.

* TORNADA
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'ZPPI_TORNADA'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    ls_rollo-tornada = ls_scome-atwrt.
  ENDIF.

* GST - 22/04/2015 ->
* PESO:
  CLEAR lv_atinn.
  SELECT SINGLE atinn INTO lv_atinn
  FROM cabn
  WHERE atnam = 'ZPPI_PESO'.

  CLEAR ls_scome.
  READ TABLE scome INTO ls_scome
  WITH KEY atinn = lv_atinn.
  IF sy-subrc = 0 .
    clear lv_num.
    ls_rollo-peso = ls_scome-atwrt.
    lv_num = trunc( ls_rollo-peso ).
    write lv_num to ls_rollo-zpeso.
*    ls_rollo-zpeso = ls_scome-atwrt.
  ENDIF.
* GST - 22/04/2015 <-

* GST - 22/05/2015 ->
* Recuperamos la velocidad máquina de la clasificación:
    CLEAR lv_object.
    CLEAR: lt_alloc_values_num, lt_alloc_values_char, lt_alloc_values_curr, lt_return.
    REFRESH: lt_alloc_values_num, lt_alloc_values_char, lt_alloc_values_curr, lt_return.

    CONCATENATE ls_rollo-matnr ls_rollo-charg INTO lv_object.

    CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
      EXPORTING
        objectkey       = lv_object
        objecttable     = 'MCH1'
        classnum        = 'Z_ROLLO'
        classtype       = '023'
*       KEYDATE         = SY-DATUM
*       UNVALUATED_CHARS       = ' '
*       LANGUAGE        = SY-LANGU
* IMPORTING
*       STATUS          =
*       STANDARDCLASS   =
      TABLES
        allocvaluesnum  = lt_alloc_values_num
        allocvalueschar = lt_alloc_values_char
        allocvaluescurr = lt_alloc_values_curr
        return          = lt_return.

    LOOP AT lt_alloc_values_num INTO ls_alloc_values_num.
      CASE ls_alloc_values_num-charact.
        WHEN 'Z_VELOCIDAD_MAQUINA'.
          ls_rollo-zvelocidad = ls_alloc_values_num-value_from.
      ENDCASE.
    ENDLOOP.
* GST - 22/05/2015 <-

  CALL FUNCTION 'ZMFPP_ETIQ_ROLLO_SCADA'
    EXPORTING
      i_rollo = ls_rollo.


ENDFUNCTION.
