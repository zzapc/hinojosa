*&---------------------------------------------------------------------*
*& Report  ZRE80_BOBINA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zre80_bobina.

TABLES mch1.

DATA: lv_answer TYPE c,
      lv_error  TYPE c,
      lv_nosend TYPE flag,
      l_msg     TYPE string.

TYPES: BEGIN OF ty_datos,
         charg TYPE charg_d,
       END OF ty_datos.

DATA lt_charg TYPE TABLE OF ty_datos.
DATA ls_charg TYPE ty_datos.


SELECTION-SCREEN BEGIN OF BLOCK bloque1 WITH FRAME TITLE text-001.

SELECTION-SCREEN SKIP.

PARAMETERS: p_werks TYPE werks_d DEFAULT '3000' OBLIGATORY.

SELECT-OPTIONS so_charg FOR mch1-charg DEFAULT ' '.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN END OF BLOCK bloque1.

AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    IF screen-name EQ 'P_WERKS'.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.

START-OF-SELECTION.

  CLEAR lv_answer.

  IF so_charg-low IS INITIAL AND so_charg-high IS INITIAL.

    CALL FUNCTION 'POPUP_TO_DISPLAY_TEXT'
      EXPORTING
        titel     = 'Selección de lotes incorrecta'
        textline1 = 'Seleccione al menos un lote'.
*       TEXTLINE2 = ' '
*       START_COLUMN       = 25
*       START_ROW = 6

  ELSE.

    SELECT charg
       FROM mchb
       INTO TABLE lt_charg
       WHERE charg IN so_charg AND werks = p_werks AND clabs NE 0.

    SORT lt_charg BY charg.
    DELETE ADJACENT DUPLICATES FROM lt_charg COMPARING charg.

    IF lt_charg IS INITIAL.

*      CALL FUNCTION 'POPUP_TO_DISPLAY_TEXT'
*        EXPORTING
*          titel     = 'Selección de lotes incorrecta'
*          textline1 = 'Lote no existente'.

     MESSAGE 'Lote erróneo, inexistente o sin stock' TYPE 'I' DISPLAY LIKE 'E'.

    ELSE.

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          titlebar              = 'Mensaje de confirmación'
          text_question         = 'Los datos de las bobinas se enviarán a E80'
          text_button_1         = 'Aceptar'
          icon_button_1         = 'ICON_CHECKED'
          text_button_2         = 'Cancelar'
          icon_button_2         = 'ICON_CANCEL'
          default_button        = '2'
          display_cancel_button = ''
          start_column          = 25
          start_row             = 10
        IMPORTING
          answer                = lv_answer
        EXCEPTIONS
          text_not_found        = 1
          OTHERS                = 2.

      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

    ENDIF.

    IF lv_answer = 1.

      LOOP AT lt_charg INTO ls_charg.

        lv_error = 0.

        CALL FUNCTION 'Z_E80_ENVIO_STOCK_BOBINA'
          EXPORTING
            i_werks          = p_werks
            i_charg          = ls_charg-charg
            i_par_origen     = '0'
          IMPORTING
            e_nosend         = lv_nosend
          EXCEPTIONS
            lote_inexistente = 1.

        IF sy-subrc <> 0.

          lv_error = 1.
          CONCATENATE 'Lote' ls_charg-charg 'erróneo, inexistente o sin stock' INTO l_msg SEPARATED BY space.
          MESSAGE l_msg TYPE 'S' DISPLAY LIKE 'E'.

        ELSEIF lv_nosend = 'X'.

          lv_error = 1.
          MESSAGE 'No se permite esta operación en la ubicación de la bobina' TYPE 'I' DISPLAY LIKE 'E'.

        ENDIF.

      ENDLOOP.

      IF lv_error = 0.

        l_msg = 'Los datos de las bobinas se han enviado correctamente'.
        MESSAGE l_msg TYPE 'S'.

      ENDIF.

    ENDIF.

  ENDIF.
