FUNCTION zfm_excel_send_email .
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_EXCEL) TYPE  ICMDATA OPTIONAL
*"     VALUE(I_HEADER) TYPE  CGPL_OBJECT_TEXT OPTIONAL
*"     VALUE(I_ATTACH_NAME) TYPE  CGPL_OBJECT_TEXT OPTIONAL
*"     VALUE(FULL_PATH) TYPE  EPSF-EPSPATH OPTIONAL
*"  EXPORTING
*"     VALUE(EV_SENT_STATUS) TYPE  I
*"  TABLES
*"      IT_BODYTX STRUCTURE  TLINE OPTIONAL
*"      IT_EMAIL TYPE  ZTTPP0001
*"----------------------------------------------------------------------

*       DECLARACIÓN DE VARIABLES
*--------------------------------------------------------------------*
  DATA:
    lt_content_bin        TYPE        solix_tab,
    lr_document           TYPE REF TO cl_document_bcs,
    lr_send_request       TYPE REF TO cl_bcs,
    lv_attachment_subject TYPE        sood-objdes,
    lr_sender             TYPE REF TO cl_sapuser_bcs,
    lo_receiver           TYPE REF TO if_recipient_bcs,
    lv_send_result        TYPE        c,
    lit_body              TYPE        soli_tab,
    lwa_email             TYPE        ad_smtpadr,
    l_line                TYPE        string.

  DATA lo_message TYPE REF TO cl_bcs_message.
  DATA lx_bcs_send TYPE REF TO cx_bcs_send.
  DATA lv_err_text TYPE string.
  DATA lv_main_doc TYPE string.
  DATA lv_alt_doc TYPE string.
  DATA lv_attachment TYPE xstring.
  DATA ls_file TYPE bcss_file.
  DATA lt_to TYPE TABLE OF string.
  DATA lt_cc TYPE TABLE OF string.
  DATA lt_bcc TYPE TABLE OF string.
  DATA lv_address TYPE string.
  DATA lv_subject TYPE bcs_subject.
  DATA lv_filename TYPE bcs_filename.
*--------------------------------------------------------------------*
*     LÓGICA DE LA FUNCIÓN
*--------------------------------------------------------------------*
* >>> Variables para envío con clase local
  DATA: it_fdscr TYPE tt_fdscr,
        it_recip TYPE tt_recip,
        lv_subj type so_obj_des,
        it_mess  TYPE tt_mess.
  DATA: gr_email_dispatcher TYPE REF TO lcl_email_dispatcher.
  "file attributes
  DATA: BEGIN OF file,
          mtime(6) TYPE p,
          date     LIKE sy-datum,
          time(10) TYPE c,
        END OF file.

  IF full_path IS NOT INITIAL.
    APPEND full_path TO it_fdscr.

    LOOP AT it_email INTO lv_address.
      APPEND lv_address TO it_recip.
    ENDLOOP.

    MOVE i_header to lv_subj.


    "------------------------ crear mensaje de contenido
    APPEND 'Este mensaje ha sido generado automáticamente para enviar un fichero.' TO it_mess.
    APPEND 'Compruebe los adjuntos.' TO it_mess.
    APPEND INITIAL LINE TO it_mess.
    APPEND 'Por favor no responda a este mensaje pues la respuesta no será recibida.' TO it_mess.
    APPEND INITIAL LINE TO it_mess.

    "------------------------ crate and dispatch message
    CREATE OBJECT gr_email_dispatcher
      EXPORTING
        im_subject   = lv_subj
        im_tab_mess  = it_mess
        im_tab_fdscr = it_fdscr
        im_tab_recip = it_recip.

  ELSE.
    TRY.
        "Create persistent send request
        lr_send_request = cl_bcs=>create_persistent( ).

        CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
          EXPORTING
            buffer     = i_excel
          TABLES
            binary_tab = lt_content_bin.

        "Set subject for attachment
        lv_attachment_subject = i_attach_name.

        MOVE i_header TO lv_subject.

        CREATE OBJECT lo_message.
        lo_message->set_subject( lv_subject ).
        lo_message->set_main_doc( lv_main_doc ).

        MOVE i_attach_name TO lv_filename.
        lo_message->add_attachment(
          iv_doctype = 'XLS'
          iv_filename     = lv_filename
          iv_contents_bin = i_excel )."lt_content_bin ).

        LOOP AT it_email INTO lv_address.
          lo_message->add_recipient( lv_address ).
        ENDLOOP.

        lo_message->set_send_immediately( 'X' ).
        lo_message->send( ).
        lo_message->show_send_log( ).

        IF sy-subrc IS NOT INITIAL.
          ev_sent_status = 2.
        ENDIF.
    ENDTRY.
  ENDIF.

ENDFUNCTION.
