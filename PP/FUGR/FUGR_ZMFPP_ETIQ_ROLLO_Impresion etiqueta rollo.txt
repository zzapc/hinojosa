FUNCTION zmfpp_etiq_rollo.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_ROLLO) TYPE  ZSPP_ETIQ_ROLLO OPTIONAL
*"     VALUE(I_REIMP_PESO) TYPE  XFLAG OPTIONAL
*"     VALUE(I_NODIALOG) TYPE  FPNODIALOG OPTIONAL
*"----------------------------------------------------------------------

  DATA: lv_auart      TYPE aufart,
        lv_sfcpf      TYPE co_prodprf,
        ls_aufk       TYPE aufk,
        ls_etiq_rollo TYPE zstpp_etiq_rollo.

* Chequear que la orden es de tipo rollo:
  CLEAR: lv_auart, lv_sfcpf.

  DATA l_impresion TYPE abap_bool.

  SELECT SINGLE sfcpf INTO lv_sfcpf
    FROM caufv
    WHERE aufnr = i_rollo-aufnr.

  CHECK lv_sfcpf = 'ZI01'.

* Seleccionar datos de la orden de proceso:
  CLEAR ls_aufk.
  SELECT SINGLE * INTO ls_aufk
    FROM aufk
    WHERE aufnr = i_rollo-aufnr.

  IF ls_aufk IS NOT INITIAL.

    IF i_rollo-kunnr IS NOT INITIAL AND i_rollo-pedido IS NOT INITIAL AND i_rollo-posicion IS NOT INITIAL.
      CLEAR ls_etiq_rollo.
      PERFORM dat_etiq_rollo USING i_rollo
                                   i_rollo-kunnr
                                   i_rollo-pedido
                                   i_rollo-posicion
                                   ls_aufk
* GST - 29/04/2015 ->
                                   i_reimp_peso
* GST - 29/04/2015 <-
                              CHANGING ls_etiq_rollo.
      PERFORM imprimir_etiq_rollo USING ls_etiq_rollo
* GST - 23/11/2015 ->
                                        i_nodialog.
* GST - 23/11/2015 <-
      l_impresion = abap_true.
    ELSE.

      " Cliente/Pedido/Posición (1):
      IF ls_aufk-zzkunnr1 IS NOT INITIAL AND ls_aufk-zzebeln1 IS NOT INITIAL AND ls_aufk-zzebelp1 IS NOT INITIAL.
        CLEAR ls_etiq_rollo.
        CONDENSE: ls_aufk-zzkunnr1, ls_aufk-zzebeln1, ls_aufk-zzebelp1.
        PERFORM dat_etiq_rollo USING i_rollo
                                     ls_aufk-zzkunnr1
                                     ls_aufk-zzebeln1
                                     ls_aufk-zzebelp1
                                     ls_aufk
* GST - 29/04/2015 ->
                                     i_reimp_peso
* GST - 29/04/2015 <-
                                CHANGING ls_etiq_rollo.
        PERFORM imprimir_etiq_rollo USING ls_etiq_rollo
* GST - 23/11/2015 ->
                                          i_nodialog.
* GST - 23/11/2015 <-
        l_impresion = abap_true.
      ENDIF.

      " Cliente/Pedido/Posición (2):
      IF ls_aufk-zzkunnr2 IS NOT INITIAL AND ls_aufk-zzebeln2 IS NOT INITIAL AND ls_aufk-zzebelp2 IS NOT INITIAL.
        CLEAR ls_etiq_rollo.
        CONDENSE: ls_aufk-zzkunnr2, ls_aufk-zzebeln2, ls_aufk-zzebelp2.
        PERFORM dat_etiq_rollo USING i_rollo
                                     ls_aufk-zzkunnr2
                                     ls_aufk-zzebeln2
                                     ls_aufk-zzebelp2
                                     ls_aufk
* GST - 29/04/2015 ->
                                     i_reimp_peso
* GST - 29/04/2015 <-
                                CHANGING ls_etiq_rollo.
        PERFORM imprimir_etiq_rollo USING ls_etiq_rollo
* GST - 23/11/2015 ->
                                          i_nodialog.
* GST - 23/11/2015 <-
        l_impresion = abap_true.
      ENDIF.

      " Cliente/Pedido/Posición (3):
      IF ls_aufk-zzkunnr3 IS NOT INITIAL AND ls_aufk-zzebeln3 IS NOT INITIAL AND ls_aufk-zzebelp3 IS NOT INITIAL.
        CLEAR ls_etiq_rollo.
        CONDENSE: ls_aufk-zzkunnr3, ls_aufk-zzebeln3, ls_aufk-zzebelp3.
        PERFORM dat_etiq_rollo USING i_rollo
                                     ls_aufk-zzkunnr3
                                     ls_aufk-zzebeln3
                                     ls_aufk-zzebelp3
                                     ls_aufk
* GST - 29/04/2015 ->
                                     i_reimp_peso
* GST - 29/04/2015 <-
                                CHANGING ls_etiq_rollo.
        PERFORM imprimir_etiq_rollo USING ls_etiq_rollo
* GST - 23/11/2015 ->
                                          i_nodialog.
* GST - 23/11/2015 <-
        l_impresion = abap_true.
      ENDIF.

    ENDIF.

    IF l_impresion EQ abap_false.
      MESSAGE 'No se encuentran datos de cliente o pedido en orden de fabricación. No se imprime etiqueta' TYPE 'I'.
    ENDIF.
  ELSE.
    MESSAGE 'Orden de fabricación en blanco´.No se imprime etiqueta' TYPE 'I'.
  ENDIF.

ENDFUNCTION.
