FUNCTION ZSBC000_GET_MODELO.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_CUOBJ) TYPE  CUOBJ
*"  EXPORTING
*"     VALUE(E_VALUES) TYPE  YHP_IDX_S_BOX_VE
*"----------------------------------------------------------------------

DATA: lf_ivemo_box TYPE        /vcxi/vksc_ivemo VALUE 'IDX_BOX'.
    TRY.
        DATA(lf_gvcin) = /vcxi/cl_vkcr_gateway=>get_gvcin_by_cuobj( if_cuobj = i_cuobj ).
        DATA(rr_svc) = /vcxi/cl_vksra_svc=>get_instance( if_gvcin = lf_gvcin ).
      CATCH /vcxi/cx_ckx.

    ENDTRY.

*                   CATCH /vcxi/cx_ckx.  " .
    IF lf_gvcin IS NOT INITIAL.
      TRY.
          DATA(lt_values) = /vcxi/cl_vkcr_gateway=>get_value_all( if_gvcin = lf_gvcin ).
        CATCH /vcxi/cx_ckx.    "
      ENDTRY.
    ENDIF.

*   Comprobamos si el material está configurado
    READ TABLE lt_values WITH KEY atnam = 'HP_CONSISTENT'
                             atwrt = abap_true TRANSPORTING NO FIELDS.
    IF sy-subrc = 0.
      DATA(lt_svcel) = rr_svc->get_svc_elements( if_id = 'COMP_P1'
                                           if_inuse = abap_true ).

      DATA: lr_svcel TYPE REF TO /vcxi/cl_vksra_svc_element.

*** Get Bag Components VE
      LOOP AT lt_svcel INTO DATA(lr_object).

        TRY.
            MOVE lr_object ?TO lr_svcel.
          CATCH cx_sy_move_cast_error.
            CLEAR: lr_svcel.
        ENDTRY.

***   Value Extraction
        TRY.
          call function 'YHP_IDX_CLEAR_MBOARD'.

***       Get Value Extraction
            DATA(lr_valex) = rr_svc->get_valex( if_ivemo        = lf_ivemo_box
                                          ir_svc_element  = lr_svcel ).
            CHECK lr_valex IS BOUND.

***       Dereferencing of extracted data
            ASSIGN lr_valex->* TO FIELD-SYMBOL(<s_box_ve>).
          CATCH /vcxi/cx_ckx.
            CLEAR: lr_valex.
            RETURN.
        ENDTRY.

        e_values = <s_box_ve>.

*      append initial line to LT_BOX_CNF assigning <S_BOX_CNF>.
*      move-corresponding <S_BOX_VE> to <S_BOX_CNF>.

      ENDLOOP.

    endif.




ENDFUNCTION.
