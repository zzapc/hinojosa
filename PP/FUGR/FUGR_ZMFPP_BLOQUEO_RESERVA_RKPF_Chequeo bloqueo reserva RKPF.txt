FUNCTION ZMFPP_BLOQUEO_RESERVA_RKPF.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(RSNUM) TYPE  RSNUM
*"  EXPORTING
*"     REFERENCE(DESBLOQUEO) TYPE  XFLAG
*"     REFERENCE(ESPERA) TYPE  XFLAG
*"----------------------------------------------------------------------

  DATA: lv_desbl_reserv TYPE xflag,
        lv_cont         TYPE i,
        lv_garg_reserv  TYPE eqegraarg,
        lt_enq          TYPE pssct_seqg3.

  CLEAR: lv_cont, lv_garg_reserv, lv_desbl_reserv.
  CLEAR: desbloqueo, espera.

  CONCATENATE sy-mandt rsnum INTO lv_garg_reserv.
  REFRESH: lt_enq.
  CLEAR: lt_enq, lv_desbl_reserv.

    CALL FUNCTION 'ENQUEUE_READ'
    EXPORTING
      gclient = sy-mandt
      gname   = 'RKPF'
      garg    = lv_garg_reserv
*     GUNAME  = SY-UNAME
*     LOCAL   = ' '
*     FAST    = ' '
*     GARGNOWC                    = ' '
*     IMPORTING
*     NUMBER  =
*     SUBRC   =
    TABLES
      enq     = lt_enq
*     EXCEPTIONS
*     COMMUNICATION_FAILURE       = 1
*     SYSTEM_FAILURE              = 2
*     OTHERS  = 3
    .

*    IF sy-subrc <> 0.
** Implement suitable error handling here
*    ENDIF.

  IF lt_enq[] IS INITIAL.
    CLEAR espera.
    desbloqueo = 'X'.
  ELSE.
    espera = 'X'.
    WHILE (  lv_desbl_reserv  <> 'X' ).

      REFRESH: lt_enq.
      CLEAR: lt_enq, lv_desbl_reserv.

      WAIT UP TO 1 SECONDS.

      CALL FUNCTION 'ENQUEUE_READ'
        EXPORTING
          gclient = sy-mandt
          gname   = 'RKPF'
          garg    = lv_garg_reserv
*         GUNAME  = SY-UNAME
*         LOCAL   = ' '
*         FAST    = ' '
*         GARGNOWC                    = ' '
*     IMPORTING
*         NUMBER  =
*         SUBRC   =
        TABLES
          enq     = lt_enq
*     EXCEPTIONS
*         COMMUNICATION_FAILURE       = 1
*         SYSTEM_FAILURE              = 2
*         OTHERS  = 3
        .

*    IF sy-subrc <> 0.
** Implement suitable error handling here
*    ENDIF.

      IF lt_enq[] IS INITIAL.
        lv_desbl_reserv = 'X'.
        desbloqueo = 'X'.
      ELSE.
        CLEAR lv_desbl_reserv.
        CLEAR desbloqueo.
      ENDIF.

      lv_cont = lv_cont + 1.

      IF lv_cont >= 30.
        CLEAR desbloqueo.
        EXIT.
      ENDIF.
    ENDWHILE.

  ENDIF.

ENDFUNCTION.
