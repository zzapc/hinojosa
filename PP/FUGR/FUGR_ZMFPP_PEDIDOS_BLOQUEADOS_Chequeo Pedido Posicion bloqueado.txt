FUNCTION zmfpp_pedidos_bloqueados.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(IS_HEADER_DIALOG) TYPE  CAUFVD
*"  EXPORTING
*"     REFERENCE(O_ERROR) TYPE  XFLAG
*"----------------------------------------------------------------------

  DATA: ls_vbep  TYPE vbep,
        lv_spebe TYPE spebe,
        ls_vbak  TYPE vbak,
        ls_eket  TYPE eket,
        ls_ekpo  TYPE ekpo.

  IF  is_header_dialog-zzkunnr1 IS NOT INITIAL OR is_header_dialog-zzebeln1 IS NOT INITIAL
    OR is_header_dialog-zzebelp1 IS NOT INITIAL.
    IF is_header_dialog-zzkunnr1 IS INITIAL OR is_header_dialog-zzebeln1 IS INITIAL
      OR is_header_dialog-zzebelp1 IS INITIAL.
      o_error = 'X'.
      MESSAGE e001(zpp).
    ENDIF.
  ENDIF.

  IF is_header_dialog-zzkunnr2 IS NOT INITIAL OR is_header_dialog-zzebeln2 IS NOT INITIAL
    OR is_header_dialog-zzebelp2 IS NOT INITIAL.
    IF is_header_dialog-zzkunnr2 IS INITIAL OR is_header_dialog-zzebeln2 IS INITIAL
      OR is_header_dialog-zzebelp2 IS INITIAL.
      o_error = 'X'.
      MESSAGE e001(zpp).
    ENDIF.
  ENDIF.

  IF  is_header_dialog-zzkunnr3 IS NOT INITIAL OR is_header_dialog-zzebeln3 IS NOT INITIAL
    OR is_header_dialog-zzebelp3 IS NOT INITIAL.
    IF is_header_dialog-zzkunnr3 IS INITIAL OR is_header_dialog-zzebeln3 IS INITIAL
      OR is_header_dialog-zzebelp3 IS INITIAL.
      o_error = 'X'.
      MESSAGE e001(zpp).
    ENDIF.
  ENDIF.


  IF is_header_dialog-zzebeln1 IS NOT INITIAL AND is_header_dialog-zzebelp1 IS NOT INITIAL.

    CLEAR: ls_vbep.
    SELECT SINGLE * INTO ls_vbep
      FROM vbep
      WHERE vbeln = is_header_dialog-zzebeln1
      AND posnr = is_header_dialog-zzebelp1
      AND etenr = '1'.

    IF ls_vbep IS NOT INITIAL. " Ventas
      CLEAR lv_spebe.
      IF ls_vbep-lifsp IS NOT INITIAL.
        SELECT SINGLE spebe INTO lv_spebe
         FROM tvls
         WHERE lifsp = ls_vbep-lifsp.

        IF lv_spebe = 'X'. " Mensaje de error
          o_error = 'X'.
          MESSAGE e013(zpp).
        ELSE.
          " Comprobar bloqueo posición de reparto (VBAK):
          CLEAR: ls_vbak, lv_spebe.
          SELECT SINGLE * INTO ls_vbak
            FROM vbak
            WHERE vbeln = ls_vbep-vbeln.
          IF ls_vbak-lifsk IS NOT INITIAL.
            SELECT SINGLE spebe INTO lv_spebe
              FROM tvls
              WHERE lifsp = ls_vbak-lifsk.
            IF lv_spebe = 'X'. " Mensaje de error
              o_error = 'X'.
              MESSAGE e013(zpp).
            ENDIF.
          ENDIF.
        ENDIF.
      ELSE.
        " Comprobar bloqueo posición de reparto (VBAK):
        CLEAR: ls_vbak, lv_spebe.
        SELECT SINGLE * INTO ls_vbak
          FROM vbak
          WHERE vbeln = ls_vbep-vbeln.
        IF ls_vbak-lifsk IS NOT INITIAL.
          SELECT SINGLE spebe INTO lv_spebe
            FROM tvls
            WHERE lifsp = ls_vbak-lifsk.
          IF lv_spebe = 'X'. " Mensaje de error
            o_error = 'X'.
            MESSAGE e013(zpp).
          ENDIF.
        ENDIF.
      ENDIF.

    ELSE. " Compras
      CLEAR ls_eket.
      SELECT SINGLE * INTO ls_eket
        FROM eket
        WHERE ebeln = is_header_dialog-zzebeln1
        AND ebelp = is_header_dialog-zzebelp1+1(5)
        AND etenr = '1'.

      IF ls_eket IS NOT INITIAL.
        CLEAR: ls_ekpo.
        SELECT SINGLE * INTO ls_ekpo
          FROM ekpo
          WHERE ebeln = ls_eket-ebeln
          AND ebelp = ls_eket-ebelp.
        IF ls_ekpo IS NOT INITIAL.
          IF ls_ekpo-zzbloq_plan = 'X'. " Mensaje de error
            o_error = 'X'.
            MESSAGE e013(zpp).
          ELSE.
            IF ls_ekpo-loekz <> 'L' AND ls_ekpo-eglkz <> 'X' AND ls_ekpo-zzabgru IS INITIAL
              AND ls_ekpo-retpo <> 'X'. " Todo ok
            ELSE.
              o_error = 'X'.
              MESSAGE e013(zpp).
            ENDIF.
          ENDIF.
        ELSE. " Mensaje de error - Pedido/posición no existe
          o_error = 'X'.
          MESSAGE e014(zpp).
        ENDIF.

      ENDIF.

    ENDIF.
  ENDIF.

  IF is_header_dialog-zzebeln2 IS NOT INITIAL AND is_header_dialog-zzebelp2 IS NOT INITIAL.

    CLEAR: ls_vbep.
    SELECT SINGLE * INTO ls_vbep
      FROM vbep
      WHERE vbeln = is_header_dialog-zzebeln2
      AND posnr = is_header_dialog-zzebelp2
      AND etenr = '1'.

    IF ls_vbep IS NOT INITIAL. " Ventas
      CLEAR lv_spebe.
      IF ls_vbep-lifsp IS NOT INITIAL.
        SELECT SINGLE spebe INTO lv_spebe
         FROM tvls
         WHERE lifsp = ls_vbep-lifsp.

        IF lv_spebe = 'X'. " Mensaje de error
          o_error = 'X'.
          MESSAGE e013(zpp).
        ELSE.
          " Comprobar bloqueo posición de reparto (VBAK):
          CLEAR: ls_vbak, lv_spebe.
          SELECT SINGLE * INTO ls_vbak
            FROM vbak
            WHERE vbeln = ls_vbep-vbeln.
          IF ls_vbak-lifsk IS NOT INITIAL.
            SELECT SINGLE spebe INTO lv_spebe
              FROM tvls
              WHERE lifsp = ls_vbak-lifsk.
            IF lv_spebe = 'X'. " Mensaje de error
              o_error = 'X'.
              MESSAGE e013(zpp).
            ENDIF.
          ENDIF.
        ENDIF.
      ELSE.
        " Comprobar bloqueo posición de reparto (VBAK):
        CLEAR: ls_vbak, lv_spebe.
        SELECT SINGLE * INTO ls_vbak
          FROM vbak
          WHERE vbeln = ls_vbep-vbeln.
        IF ls_vbak-lifsk IS NOT INITIAL.
          SELECT SINGLE spebe INTO lv_spebe
            FROM tvls
            WHERE lifsp = ls_vbak-lifsk.
          IF lv_spebe = 'X'. " Mensaje de error
            o_error = 'X'.
            MESSAGE e013(zpp).
          ENDIF.
        ENDIF.
      ENDIF.

    ELSE. " Compras
      CLEAR ls_eket.
      SELECT SINGLE * INTO ls_eket
        FROM eket
        WHERE ebeln = is_header_dialog-zzebeln2
        AND ebelp = is_header_dialog-zzebelp2+1(5)
        AND etenr = '1'.

      IF ls_eket IS NOT INITIAL.
        CLEAR: ls_ekpo.
        SELECT SINGLE * INTO ls_ekpo
          FROM ekpo
          WHERE ebeln = ls_eket-ebeln
          AND ebelp = ls_eket-ebelp.
        IF ls_ekpo IS NOT INITIAL.
          IF ls_ekpo-zzbloq_plan = 'X'. " Mensaje de error
            o_error = 'X'.
            MESSAGE e013(zpp).
          ELSE.
            IF ls_ekpo-loekz <> 'L' AND ls_ekpo-eglkz <> 'X' AND ls_ekpo-zzabgru IS INITIAL
              AND ls_ekpo-retpo <> 'X'. " Todo ok
            ELSE.
              o_error = 'X'.
              MESSAGE e013(zpp).
            ENDIF.
          ENDIF.
        ELSE. " Mensaje de error - Pedido/posición no existe
          o_error = 'X'.
          MESSAGE e014(zpp).
        ENDIF.

      ENDIF.

    ENDIF.
  ENDIF.

  IF is_header_dialog-zzebeln3 IS NOT INITIAL AND is_header_dialog-zzebelp3 IS NOT INITIAL.

    CLEAR: ls_vbep.
    SELECT SINGLE * INTO ls_vbep
      FROM vbep
      WHERE vbeln = is_header_dialog-zzebeln3
      AND posnr = is_header_dialog-zzebelp3
      AND etenr = '1'.

    IF ls_vbep IS NOT INITIAL. " Ventas
      CLEAR lv_spebe.
      IF ls_vbep-lifsp IS NOT INITIAL.
        SELECT SINGLE spebe INTO lv_spebe
         FROM tvls
         WHERE lifsp = ls_vbep-lifsp.

        IF lv_spebe = 'X'. " Mensaje de error
          o_error = 'X'.
          MESSAGE e013(zpp).
        ELSE.
          " Comprobar bloqueo posición de reparto (VBAK):
          CLEAR: ls_vbak, lv_spebe.
          SELECT SINGLE * INTO ls_vbak
            FROM vbak
            WHERE vbeln = ls_vbep-vbeln.
          IF ls_vbak-lifsk IS NOT INITIAL.
            SELECT SINGLE spebe INTO lv_spebe
              FROM tvls
              WHERE lifsp = ls_vbak-lifsk.
            IF lv_spebe = 'X'. " Mensaje de error
              o_error = 'X'.
              MESSAGE e013(zpp).
            ENDIF.
          ENDIF.
        ENDIF.
      ELSE.
        " Comprobar bloqueo posición de reparto (VBAK):
        CLEAR: ls_vbak, lv_spebe.
        SELECT SINGLE * INTO ls_vbak
          FROM vbak
          WHERE vbeln = ls_vbep-vbeln.
        IF ls_vbak-lifsk IS NOT INITIAL.
          SELECT SINGLE spebe INTO lv_spebe
            FROM tvls
            WHERE lifsp = ls_vbak-lifsk.
          IF lv_spebe = 'X'. " Mensaje de error
            o_error = 'X'.
            MESSAGE e013(zpp).
          ENDIF.
        ENDIF.
      ENDIF.

    ELSE. " Compras
      CLEAR ls_eket.
      SELECT SINGLE * INTO ls_eket
        FROM eket
        WHERE ebeln = is_header_dialog-zzebeln3
        AND ebelp = is_header_dialog-zzebelp3+1(5)
        AND etenr = '1'.

      IF ls_eket IS NOT INITIAL.
        CLEAR: ls_ekpo.
        SELECT SINGLE * INTO ls_ekpo
          FROM ekpo
          WHERE ebeln = ls_eket-ebeln
          AND ebelp = ls_eket-ebelp.
        IF ls_ekpo IS NOT INITIAL.
          IF ls_ekpo-zzbloq_plan = 'X'. " Mensaje de error
            o_error = 'X'.
            MESSAGE e013(zpp).
          ELSE.
            IF ls_ekpo-loekz <> 'L' AND ls_ekpo-eglkz <> 'X' AND ls_ekpo-zzabgru IS INITIAL
              AND ls_ekpo-retpo <> 'X'. " Todo ok
            ELSE.
              o_error = 'X'.
              MESSAGE e013(zpp).
            ENDIF.
          ENDIF.
        ELSE. " Mensaje de error - Pedido/posición no existe
          o_error = 'X'.
          MESSAGE e014(zpp).
        ENDIF.

      ENDIF.

    ENDIF.
  ENDIF.

ENDFUNCTION.
