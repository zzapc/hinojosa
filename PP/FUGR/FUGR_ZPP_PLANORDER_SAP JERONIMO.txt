FUNCTION zpp_planorder.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  EXPORTING
*"     VALUE(T_PLANORDER) TYPE  ZTTPP_PLANORDER
*"----------------------------------------------------------------------
  TYPES:  BEGIN  OF ty_orden,
            aufnr           TYPE aufnr,
            objnr           TYPE j_objnr,
            zzcolor         TYPE zzcod_color,
            ktext           TYPE auftext,
            zzespesor       TYPE zespesor,
            zzgrampla       TYPE zgrampla,
            zzplalgnt       TYPE zplalgnt,
            zzplaannt       TYPE zplaannt,
            gamng           TYPE gamng,
            zzlargfab       TYPE zzlargfab,
            zzacnhofab      TYPE zzacnhofab,
            zzebeln4        TYPE zzebeln4,
            zzebelp4        TYPE zzebelp4,
            zzfirst         TYPE zzfirst,
            zzkunnr4        TYPE zzkunnr4,
            zzlienzo        TYPE  zzlienzo,
            zzcoex          TYPE  zzcoex,
            zzttocorona     TYPE  zzttocorona,
            zzteji          TYPE  zzteji,
            zzadignifugo    TYPE  zzadignifugo,
            zzaduv          TYPE  zzaduv,
            zzadantest      TYPE  zzadantest,
            zzadanthum      TYPE  zzadanthum,
            zzadespum       TYPE  zzadespum,
            zzlargminfab    TYPE zzlargminfab,
            zzlargmaxfab    TYPE zzlargmaxfab,
            plnbez          TYPE matnr,
            zzaptoalim      TYPE zaptoalim,
            zztratos        TYPE ztratos,
            zzaditiv        TYPE zaditiv,
            zzref           TYPE zref,
            zzpesoteopl     TYPE zzpesoteopl,
            zzimpresion	    TYPE zzimpresion,
            zzconductividad	TYPE zzconductividad,
          END    OF ty_orden.

  TYPES: ttyp_orden TYPE STANDARD TABLE OF ty_orden.

  TYPES:  BEGIN  OF ty_jest,
            objnr TYPE j_objnr,
            stat  TYPE j_status,
            inact TYPE j_inact,
            txt04 TYPE j_txt04,
          END    OF ty_jest.

  DATA: lt_status  TYPE TABLE OF ty_orden,
        lt_mostrar TYPE TABLE OF ty_orden,
        lt_ordenes TYPE TABLE OF ty_orden,
        lt_jest    TYPE TABLE OF ty_jest.

  DATA: ls_planorder TYPE zspp_planorder.

  DATA: lv_edatu TYPE edatu.

  FIELD-SYMBOLS: <fs_orden> TYPE ty_orden.

  REFRESH: lt_ordenes,lt_jest.

  SELECT   a~aufnr
           objnr
           zzcolor
           ktext
           zzespesor
           zzgrampla
           zzplalgnt
           zzplaannt
           gamng
           zzlargfab
           zzacnhofab
           zzebeln4
           zzebelp4
           zzfirst
           zzkunnr4
           zzlienzo
           zzcoex
           zzttocorona
           zzteji
           zzadignifugo
           zzaduv
           zzadantest
           zzadanthum
           zzadespum
           zzlargminfab
           zzlargmaxfab
           plnbez
           zzaptoalim
           zztratos
           zzaditiv
           zzref
           zzpesoteopl
           a~zzimpresion
           zzconductividad
    FROM caufv  AS a
    INNER JOIN mara AS b ON b~matnr = a~plnbez
    INNER JOIN marc ON marc~matnr = a~plnbez AND marc~werks = '4000'
    INTO TABLE lt_ordenes
    WHERE autyp = '40' AND auart = 'ZC01' AND a~werks = '4000'.

  IF lt_ordenes[] IS NOT INITIAL.
    SELECT objnr stat inact txt04 FROM jest AS a
      INNER JOIN tj02t AS b ON a~stat = b~istat
      INTO TABLE lt_jest
      FOR ALL ENTRIES IN lt_ordenes
      WHERE objnr = lt_ordenes-objnr
        AND ( stat  = 'I0002')
        AND inact = abap_false
        AND spras = 'S'.
  ENDIF.

  LOOP AT lt_ordenes ASSIGNING <fs_orden>.
    READ TABLE lt_jest ASSIGNING FIELD-SYMBOL(<fs_jest>) WITH KEY objnr = <fs_orden>-objnr
                                                                  stat  = 'I0002'
                                                                  inact = ''.
    IF sy-subrc = 0.
      APPEND <fs_orden> TO lt_status.
    ENDIF.
  ENDLOOP.


  IF lt_status[] IS NOT INITIAL.
    LOOP AT lt_status ASSIGNING <fs_orden>.
      CLEAR ls_planorder.
      ls_planorder-n_order = <fs_orden>-aufnr.
      ls_planorder-color = <fs_orden>-zzcolor.

*    Nombre de cliente
      SELECT SINGLE name1 INTO ls_planorder-client_name
        FROM kna1
        WHERE kunnr EQ <fs_orden>-zzkunnr4.

*    Fecha
      SELECT SINGLE edatu INTO lv_edatu
        FROM vbep
        WHERE vbeln EQ <fs_orden>-zzebeln4 AND posnr EQ <fs_orden>-zzebelp4.

      WRITE lv_edatu TO ls_planorder-delivery_date.

      ls_planorder-comments = <fs_orden>-ktext.
      ls_planorder-thick = <fs_orden>-zzespesor.
      ls_planorder-grammage = <fs_orden>-zzgrampla.
      ls_planorder-length = <fs_orden>-zzplalgnt.
      ls_planorder-width = <fs_orden>-zzplaannt.
      ls_planorder-quantity = <fs_orden>-gamng.
      ls_planorder-length_made = <fs_orden>-zzlargfab.
      ls_planorder-width_made = <fs_orden>-zzacnhofab.
      ls_planorder-quantity_made = <fs_orden>-gamng.
      ls_planorder-pose_die = '1'.
      ls_planorder-ml_by_plate = <fs_orden>-zzlargfab.
      ls_planorder-kg_order = <fs_orden>-zzpesoteopl * <fs_orden>-gamng.
      ls_planorder-treatment = <fs_orden>-zztratos.
      ls_planorder-reference = <fs_orden>-zzref.
      ls_planorder-apto = <fs_orden>-zzaptoalim.
      ls_planorder-nuevo = <fs_orden>-zzfirst.
      ls_planorder-articulo = <fs_orden>-plnbez.
      ls_planorder-sales_order = <fs_orden>-zzebeln4.
      ls_planorder-pos_sales_order = <fs_orden>-zzebelp4.

*  Descripcion del material.
      SELECT SINGLE maktx INTO ls_planorder-mat_description
        FROM makt
        WHERE matnr EQ <fs_orden>-plnbez AND spras = 'S'.

      ls_planorder-aditive = <fs_orden>-zzaditiv.


**   7000018598 AÑADIR CAMPOS ZZPLANORDER
      ls_planorder-largomin = <fs_orden>-zzlargminfab.
      ls_planorder-largomax = <fs_orden>-zzlargmaxfab.

      IF <fs_orden>-zzttocorona EQ 'X'.
        ls_planorder-corona = 'SI'.
      ELSE.
        ls_planorder-corona = 'NO'.
      ENDIF.

      IF <fs_orden>-zzteji EQ 'X'.
        ls_planorder-tejido = 'SI'.
      ELSE.
        ls_planorder-tejido = 'NO'.
      ENDIF.

      APPEND ls_planorder TO t_planorder.

    ENDLOOP.
  ENDIF.


ENDFUNCTION.
