
class ZCLPP_SEGUIMIENTO_PEDIDOS definition
  public
  final
  create public .

public section.

  types:
    begin of TY_STOCK,
         werks type werks_d,
         matnr type matnr,
         kunnr type kunnr,
*         de    type qvcode,
         kg_de_a type zmenge_ciclo,
         kg_de_r type zmenge_ciclo,
*         clabs type zmenge_ciclo,
    END OF ty_stock .
  types:
    tty_stock type STANDARD TABLE OF ty_stock .

  class-data GT_STOCK type TTY_STOCK .

  class-methods GET_STOCK
    importing
      !I_WERKS type WERKS_D
      !I_KUNNR type KUNNR
      !I_MATNR type MATNR
      !I_LGORT type LGORT_D
    exporting
      !O_KG_DE_A type ZMENGE_CICLO
      !O_KG_DE_R type ZMENGE_CICLO .
  class-methods GET_CARACTERISTICAS_BOBINA
    importing
      !I_MATNR type MATNR
      !I_CHARG type CHARG_D
    exporting
      !O_KUNNR type KUNNR
      !O_VBELN type VBELN
      !O_POSNR type POSNR
      !O_DE type CHAR13
      !O_HSDAT type DATUM
      !O_UBICACION type CHAR13 .
  class-methods GET_STOCK_MATERIAL
    importing
      !I_WERKS type WERKS_D
      !I_KUNNR type KUNNR
      !I_MATNR type MATNR
      !I_LGORT type LGORT_D .
protected section.
private section.
endclass. "ZCLPP_SEGUIMIENTO_PEDIDOS definition
class ZCLPP_SEGUIMIENTO_PEDIDOS implementation.
***********************************************
* Obtener stock de centro, cliente y material *
***********************************************

 METHOD get_stock.

   CLEAR: o_kg_de_a , o_kg_de_r.

   TRY.
       DATA(ls_stock) = gt_stock[ matnr = i_matnr
                                  kunnr = i_kunnr ] .
       o_kg_de_a = ls_stock-kg_de_a.
       o_kg_de_r = ls_stock-kg_de_r.
     CATCH cx_root .

       CALL METHOD zclpp_seguimiento_pedidos=>get_stock_material
         EXPORTING
           i_werks = i_werks
           i_kunnr = i_kunnr
           i_matnr = i_matnr
           i_lgort = i_lgort.
       TRY.

           ls_stock = gt_stock[ matnr = i_matnr
                                kunnr = i_kunnr ] .
           o_kg_de_a = ls_stock-kg_de_a.
           o_kg_de_r = ls_stock-kg_de_r.
         CATCH cx_root .
       ENDTRY.


   ENDTRY.


*      IF line_exists( gt_stock[ matnr = i_matnr
*                                kunnr = i_kunnr ] ).
**        data(ls_stock= =
*        ASSIGN gt_stock[ matnr = i_matnr
*                         kunnr = i_kunnr ] TO FIELD-SYMBOL(<fs_stock>).
*
*
**   SELECT b~mtart   , a~matnr  , b~matkl , b~zzcalidad , b~zzgramaje , b~zzancho ,
**          b~zzlargo , a~werks  , a~lgort , a~charg     , b~meins     ,
**          a~clabs   , a~cumlm  , a~cinsm , a~ceinm     , a~cspem     , a~cretm ,
**          a~cvmla   , a~cvmum  , a~cvmin , a~cvmei     , a~cvmsp     , a~cvmre ,
**          a~ersda   , a~laeda
*   SELECT  werks ,  a~matnr , a~charg , clabs
*         INTO  TABLE @DATA(lt_stock_sql)
*         FROM mchb AS a
*         INNER JOIN mara AS b ON b~matnr = a~matnr
*         WHERE "a~matnr = @i_matnr"IN @is_matnr and
*             a~werks = @i_werks
*         AND a~lgort = @i_lgort "IN @is_lgort
**              AND a~charg IN so_charg "GST - 23/03/2015
*             AND b~mtart = 'ZPAP' "IN so_mtart
**              AND b~matkl IN so_matkl
**              AND b~zzcalidad IN so_zzcal
**              AND b~zzgramaje IN so_zzgra
**              AND b~zzancho IN so_zzanc
*         AND ( a~clabs <> 0 OR a~cumlm <> 0 OR a~cinsm <> 0
*               OR a~ceinm <> 0 OR a~cspem <> 0 OR a~cretm <> 0
*       OR a~cretm <> 0 ).
*
*
*   LOOP AT lt_stock_sql INTO DATA(ls_stock_sql).
*
*     CALL METHOD zclpp_seguimiento_pedidos=>get_caracteristicas_bobina
*       EXPORTING
*         i_matnr = ls_stock_sql-matnr
*         i_charg = ls_stock_sql-charg
*       IMPORTING
*         o_kunnr = DATA(l_kunnr)
*         o_de    = DATA(l_de)
*       .
*
*     IF line_exists( gt_stock[ matnr = i_matnr kunnr = l_kunnr ] ).
**        data(ls_stock= =
*       ASSIGN gt_stock[ matnr = i_matnr kunnr = l_kunnr ] TO FIELD-SYMBOL(<fs_stock>).
*     ELSE.
*       APPEND INITIAL LINE TO gt_stock ASSIGNING <fs_stock>.
*       <fs_stock>-matnr = i_matnr.
*       <fs_stock>-kunnr = l_kunnr.
*     ENDIF.
*
*     CASE l_de.
**       WHEN 'DE A'. o_kg_de_a = o_kg_de_a + ls_stock_sql-clabs.
**       WHEN 'DE R'. o_kg_de_r = o_kg_de_r + ls_stock_sql-clabs.
*       WHEN 'DE A'. <fs_stock>-kg_de_a = <fs_stock>-kg_de_a + ls_stock_sql-clabs.
*       WHEN 'DE R'. <fs_stock>-kg_de_r = <fs_stock>-kg_de_r + ls_stock_sql-clabs.
*       WHEN OTHERS. CONTINUE.
*     ENDCASE.
*
**     APPEND INITIAL LINE TO gt_stock ASSIGNING FIELD-SYMBOL(<fs_stock>).
**      <fs_stock>-werks    = i_werks.
**      <fs_stock>-kunnr    = l_kunnr.
**      <fs_stock>-matnr    = l_kunnr.
*
**         begin of TY_STOCK,
**         werks type werks_d,
**         matnr type matnr,
**         kunnr type kunnr,
**         de    type qvcode,
**         charg type charg_d,
**         clabs type zmenge_ciclo,
**    END OF ty_stock .
*
*
*   ENDLOOP.



 ENDMETHOD.
  METHOD get_caracteristicas_bobina.

    DATA: lv_object            TYPE objnum,
          lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num,
          lt_alloc_values_char TYPE tt_bapi1003_alloc_values_char,
          lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr,
          ls_alloc_values_num  TYPE bapi1003_alloc_values_num,
          lt_return            TYPE bapiret2_tab,
          ls_alloc_values_char TYPE bapi1003_alloc_values_char,
          lv_num               TYPE i,
          lv_fec_n             TYPE n LENGTH 8.

    REFRESH: lt_alloc_values_num, lt_alloc_values_char.
    REFRESH: lt_alloc_values_curr, lt_return.
    CLEAR: lv_object, ls_alloc_values_char.
    CLEAR: lt_alloc_values_num, lt_alloc_values_char.
    CLEAR: lt_alloc_values_curr, lt_return.

    CLEAR:  o_kunnr,
            o_ubicacion, "DTM
            o_vbeln,
            o_posnr,
            o_de,
            o_hsdat.

    CONCATENATE i_matnr i_charg INTO lv_object.

    CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
      EXPORTING
        objectkey       = lv_object
        objecttable     = 'MCH1'
        classnum        = 'Z_BOBINA'
        classtype       = '023'
      TABLES
        allocvaluesnum  = lt_alloc_values_num
        allocvalueschar = lt_alloc_values_char
        allocvaluescurr = lt_alloc_values_curr
        return          = lt_return.

    TRY.

        o_kunnr = lt_alloc_values_char[ charact = 'Z_CLIENTE' ]-value_neutral.
        CONDENSE o_kunnr.

      CATCH cx_root.

    ENDTRY.

        TRY.

        o_ubicacion = lt_alloc_values_char[ charact = 'Z_UBIC_HPAP' ]-value_neutral.

      CATCH cx_root.

    ENDTRY.

    TRY.
        o_de = lt_alloc_values_char[ charact = 'LOBM_UDCODE' ]-value_neutral.
        CONDENSE o_de.

      CATCH cx_root.

    ENDTRY.

  ENDMETHOD.
  METHOD get_stock_material.

    SELECT  werks ,  a~matnr , a~charg , clabs
      INTO  TABLE @DATA(lt_stock_sql)
      FROM mchb AS a
      INNER JOIN mara AS b ON b~matnr = a~matnr
      WHERE a~matnr = @i_matnr  AND
          a~werks = @i_werks
      AND a~lgort = @i_lgort
      AND b~mtart = 'ZPAP' "IN so_mtart
      AND ( a~clabs <> 0 OR a~cumlm <> 0 OR a~cinsm <> 0 OR
            a~ceinm <> 0 OR a~cspem <> 0 OR a~cretm <> 0 OR
            a~cretm <> 0 ).


    LOOP AT lt_stock_sql INTO DATA(ls_stock_sql).

      CALL METHOD zclpp_seguimiento_pedidos=>get_caracteristicas_bobina
        EXPORTING
          i_matnr = ls_stock_sql-matnr
          i_charg = ls_stock_sql-charg
        IMPORTING
          o_kunnr = DATA(l_kunnr)
          o_de    = DATA(l_de).

      IF line_exists( gt_stock[ matnr = i_matnr
                                kunnr = l_kunnr ] ).
*        data(ls_stock= =
        ASSIGN gt_stock[ matnr = i_matnr
                         kunnr = l_kunnr ] TO FIELD-SYMBOL(<fs_stock>).
      ELSE.
        APPEND INITIAL LINE TO gt_stock ASSIGNING <fs_stock>.
        <fs_stock>-matnr = i_matnr.
        <fs_stock>-kunnr = l_kunnr.
      ENDIF.

      CASE l_de.
*       WHEN 'DE A'. o_kg_de_a = o_kg_de_a + ls_stock_sql-clabs.
*       WHEN 'DE R'. o_kg_de_r = o_kg_de_r + ls_stock_sql-clabs.
        WHEN 'DE A'. <fs_stock>-kg_de_a = <fs_stock>-kg_de_a + ls_stock_sql-clabs.
        WHEN 'DE R'. <fs_stock>-kg_de_r = <fs_stock>-kg_de_r + ls_stock_sql-clabs.
        WHEN OTHERS. CONTINUE.
      ENDCASE.


    ENDLOOP.


  ENDMETHOD.
