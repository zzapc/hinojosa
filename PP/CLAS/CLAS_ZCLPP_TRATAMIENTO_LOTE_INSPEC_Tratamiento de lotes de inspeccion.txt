
class ZCLPP_TRATAMIENTO_LOTE_INSPEC definition
  public
  final
  create public .

public section.

  constants GC_CARACT_HUMEDAD type QMERKNR value '00001007' ##NO_TEXT.
  constants GC_ESTADO_LIB type J_STATUS value 'I0002' ##NO_TEXT.

  class-methods ASIGNAR_HUMEDAD_9
    importing
      !I_PRUEFLOS type QPLOS
    exporting
      !OT_RETURN type BAPIRET2_T .
  class-methods ASIGNAR_DE_P
    importing
      !I_PRUEFLOS type QPLOS
      !I_WERKS type WERKS_D
    exporting
      !OS_RETURN type BAPIRETURN1 .
  class-methods CONVERTIR_A_NUM
    importing
      !I_CHAR30 type CHAR30 .
  class-methods GET_LOTE_INSP_DESDE_LOTE
    importing
      !I_WERKS type WERKS_D
      !I_CHARG type CHARG_D
    returning
      value(O_PRUEFLOS) type QPLOS .
protected section.
private section.
endclass. "ZCLPP_TRATAMIENTO_LOTE_INSPEC definition
class ZCLPP_TRATAMIENTO_LOTE_INSPEC implementation.
  METHOD asignar_de_p.
    DATA: ls_data   TYPE bapi2045ud,
          l_bapiret TYPE bapireturn1.

* Actualizamos la decisión de empleo del lote de inspeccióna "P" Pulper.
    CLEAR: ls_data.
    ls_data-insplot         = i_prueflos.
    ls_data-ud_selected_set = 'DE'.
    ls_data-ud_plant        = i_werks.
    ls_data-ud_code_group   = 'DE'.
    ls_data-ud_code         = 'P'.
    ls_data-ud_recorded_by_user = sy-uname.
    ls_data-ud_recorded_on_date = sy-datum.
    ls_data-ud_recorded_at_time = sy-uzeit.
    ls_data-ud_force_completion = 'X'.

    CALL FUNCTION 'BAPI_INSPLOT_SETUSAGEDECISION'
      EXPORTING
        number  = i_prueflos
        ud_data = ls_data
*       LANGUAGE       =
      IMPORTING
        return  = OS_RETURN.
    IF OS_RETURN-type <> 'E'. " Si no hay error
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
      else.
        ROLLBACK WORK.
    ENDIF.




  ENDMETHOD.
  METHOD asignar_humedad_9.
    DATA: lt_char_results TYPE STANDARD TABLE OF bapi2045d2,
          l_prueflos      TYPE bapi2045l2-insplot,
          lt_return       TYPE  bapiret2_t,
          ls_return       TYPE bapiret2.

    CLEAR:  lt_char_results[].

    SELECT SINGLE merknr FROM qamv
      INTO  @DATA(l_merknr)
      WHERE prueflos  = @i_prueflos AND
            verwmerkm = @gc_caract_humedad.

    APPEND INITIAL LINE TO lt_char_results ASSIGNING FIELD-SYMBOL(<fs_caract>).
    <fs_caract>-insplot     = i_prueflos.
    <fs_caract>-inspoper    = '0010'.
    <fs_caract>-closed      = 'X'.
    <fs_caract>-evaluated   = 'X'.
    <fs_caract>-inspchar    = l_merknr.
    <fs_caract>-mean_value  = '9'.

    l_prueflos = i_prueflos.


    CALL FUNCTION 'BAPI_INSPOPER_RECORDRESULTS'
      EXPORTING
        insplot      = l_prueflos
        inspoper     = '0010'
*       insppointdata  = lv_insppointdata
**        HANDHELD_APPLICATION       = ' '
      IMPORTING
        return       = ls_return
      TABLES
        char_results = lt_char_results      "1. Resultado de inspección nivel de característica
**        SAMPLE_RESULTS =                   "2.  Resultado de inspección nivel de muestra
**        single_results = t_isingle_results "3.  Resultado inspección nivel de valor individual
        returntable  = ot_return.

    IF line_exists( ot_return[ type = 'E' ] ).
      ROLLBACK WORK.
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
    ENDIF.

  ENDMETHOD.
  method CONVERTIR_A_NUM.
  endmethod.
  METHOD get_lote_insp_desde_lote.

    SELECT SINGLE prueflos
      FROM qals
      INNER JOIN jest ON qals~objnr = qals~objnr
      INTO @o_prueflos
      WHERE qals~werk  = @i_werks AND
            qals~charg = @i_charg AND
            jest~stat  = @gc_estado_lib AND " Estado LIB
            jest~inact = ' '.

  ENDMETHOD.
