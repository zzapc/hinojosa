*&---------------------------------------------------------------------*
*&      Form  AUTHORITY_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM authority_check .

  AUTHORITY-CHECK OBJECT 'M_IS_WERKS'
    FOR USER sy-uname ID 'WERKS' FIELD p_werks.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_data .

  DATA: ls_uslock     TYPE bapislockd,
        ls_bapiaddr3  TYPE bapiaddr3,
        lt_bapiret TYPE TABLE OF bapiret2.

  SELECT *
    FROM usr21
    INTO @data(ls_usr21)
   WHERE addrnumber EQ ( SELECT addrnumber FROM usr21 WHERE bname EQ @sy-uname ) ORDER BY bname.

    CALL FUNCTION 'BAPI_USER_GET_DETAIL'
      EXPORTING
        username             = ls_usr21-bname
        cache_results        = 'X'
     IMPORTING
*       LOGONDATA            =
*       DEFAULTS             =
        address              = ls_bapiaddr3
*       COMPANY              =
*       SNC                  =
*       REF_USER             =
*       ALIAS                =
*       UCLASS               =
*       LASTMODIFIED         =
        islocked             = ls_uslock
*       IDENTITY             =
*       ADMINDATA            =
*       DESCRIPTION          =
      TABLES
*       PARAMETER            =
*       PROFILES             =
*       ACTIVITYGROUPS       =
        return               = lt_bapiret
*       ADDTEL               =
*       ADDFAX               =
*       ADDTTX               =
*       ADDTLX               =
*       ADDSMTP              =
*       ADDRML               =
*       ADDX400              =
*       ADDRFC               =
*       ADDPRT               =
*       ADDSSF               =
*       ADDURI               =
*       ADDPAG               =
*       ADDCOMREM            =
*       PARAMETER1           =
*       GROUPS               =
*       UCLASSSYS            =
*       EXTIDHEAD            =
*       EXTIDPART            =
*       SYSTEMS              =
              .

    CHECK ls_uslock-local_lock NE 'L'.
    CHECK ls_uslock-glob_lock NE 'L'.

    CHECK ls_usr21-addrnumber EQ ls_bapiaddr3-addr_no.

    move ls_usr21-bname TO gs_data-bname.

    IF ( ls_uslock-wrng_logon EQ 'L' ).
      MOVE '@06@' TO gs_data-xuuflag_alv.
    ENDIF.

    APPEND gs_data TO gt_data.

    CLEAR gs_data.

  ENDSELECT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_COLUMNS_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_columns_alv .


  DATA lr_columns       TYPE REF TO cl_salv_columns_table.
  DATA lr_column        TYPE REF TO cl_salv_column_table.

* Set columns options
  lr_columns = gr_table->get_columns( ).
  lr_columns->set_optimize( abap_true ).

*  TRY.
*      lr_column ?= lr_columns->get_column( 'MATKL' ).
*      lr_column->set_long_text( CONV #( text-c01 ) ).
*      lr_column->set_medium_text( CONV #( text-c01 ) ).
*      lr_column->set_short_text( CONV #( text-c01 ) ).
*      lr_column->set_tooltip( CONV #( text-c01 ) ).
*      lr_column->set_edit_mask( space ).
*      lr_column->set_optimized( ).
*  CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
*  ENDTRY.
*
*  TRY.
*      lr_column ?= lr_columns->get_column( 'WGBEZ' ).
*      lr_column->set_long_text( CONV #( text-c02 ) ).
*      lr_column->set_medium_text( CONV #( text-c02 ) ).
*      lr_column->set_short_text( CONV #( text-c02 ) ).
*      lr_column->set_tooltip( CONV #( text-c02 ) ).
*      lr_column->set_edit_mask( space ).
*      lr_column->set_optimized( ).
*  CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
*  ENDTRY.

  TRY.
      lr_column ?= lr_columns->get_column( 'CONTADOR' ).
      lr_column->set_long_text( CONV #( text-c03 ) ).
      lr_column->set_medium_text( CONV #( text-c03 ) ).
      lr_column->set_short_text( CONV #( text-c03 ) ).
      lr_column->set_tooltip( CONV #( text-c03 ) ).
      lr_column->set_edit_mask( space ).
      lr_column->set_optimized( ).
  CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
  ENDTRY.

ENDFORM.
*&---------------------------------------------------------------------*
*&  Include           ZPPFLD0001_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SHOW_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM show_alv .

  DATA lr_functions     TYPE REF TO cl_salv_functions_list.
  DATA lr_display       TYPE REF TO cl_salv_display_settings.
  DATA lr_layout        TYPE REF TO cl_salv_layout.
  DATA ls_key           TYPE salv_s_layout_key.
  DATA lr_selections    TYPE REF TO cl_salv_selections.
  DATA lr_events        TYPE REF TO cl_salv_events_table.
  DATA lr_event_handler TYPE REF TO lcl_event_handler.

  TRY.

    cl_salv_table=>factory(
      IMPORTING
        r_salv_table = gr_table
      CHANGING
        t_table      = gt_data ).

  CATCH cx_salv_msg.                                  "#EC NO_HANDLER

  ENDTRY.

  gr_table->set_screen_status(
    report        = sy-repid
    pfstatus      = space
    set_functions = gr_table->c_functions_all ).

* Functions
  lr_functions = gr_table->get_functions( ).

* Activate ALV generic Functions
  lr_functions->set_all( abap_true ).

* Display settings
  lr_display = gr_table->get_display_settings( ).
  lr_display->set_striped_pattern( cl_salv_display_settings=>true ).

* Layout settings
  lr_layout = gr_table->get_layout( ).
  ls_key-report = sy-repid.
  lr_layout->set_key( ls_key ).
  lr_layout->set_default( abap_true ).
  lr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).

* Selections
  lr_selections = gr_table->get_selections( ).
  lr_selections->set_selection_mode( if_salv_c_selection_mode=>none ).

  PERFORM set_columns_alv.

*  Events
  lr_events = gr_table->get_event( ).

  CREATE OBJECT lr_event_handler.
  SET HANDLER lr_event_handler->on_link_click   FOR lr_events.

  gr_table->display( ).


ENDFORM.
