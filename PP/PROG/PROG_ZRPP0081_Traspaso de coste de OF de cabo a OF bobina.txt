*&---------------------------------------------------------------------*
*& Report  ZRPP0060
*& Tiquet 68809 - 10/2021 - CMS
*&---------------------------------------------------------------------*
*& Traspaso de costes de producción de cabo.
*&
*&---------------------------------------------------------------------*
REPORT zrpp0081.

INCLUDE zrpp0081_top.
INCLUDE zrpp0081_class.
INCLUDE zrpp0081_status.
INCLUDE zrpp0081_forms.
INCLUDE zrpp0081_user_command.

INITIALIZATION.


  SELECT SINGLE parva FROM usr05
        INTO p_werks
        WHERE bname = sy-uname AND
        parid = 'WRK'.

  CALL FUNCTION 'CALCULATE_DATE'
    EXPORTING
      days        = '0'
      months      = '-1'
      start_date  = sy-datum
    IMPORTING
      result_date = g_fecha.

* DTM - Se obtiene el último día del mes anterior al actual

  CLEAR: lv_fecha.

  CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
    EXPORTING
      day_in            = g_fecha
    IMPORTING
      last_day_of_month = lv_fecha
    EXCEPTIONS
      day_in_no_date    = 1
      OTHERS            = 2.

  p_fecha = lv_fecha.

* DTM

**  p_mjahr = g_fecha(4).
**  p_monat = g_fecha+4(2).

AT SELECTION-SCREEN.

* DTM - Si se ha cambiado la fecha manualmente, la volvemos a calcular
  IF p_fecha NE lv_fecha.

    CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
      EXPORTING
        day_in            = p_fecha
      IMPORTING
        last_day_of_month = p_fecha
      EXCEPTIONS
        day_in_no_date    = 1
        OTHERS            = 2.

  ENDIF.

  gv_mjahr = p_fecha(4).
  gv_monat = p_fecha+4(2).

* DTM

  IF p_werks <> '3000' AND
     p_werks <> '3020'.
    MESSAGE |Centro incorrecto.| TYPE 'E' DISPLAY LIKE 'I'.
    RETURN.
  ENDIF.

* DTM

**  IF p_monat < 1 OR
**     p_monat > 12.
**    MESSAGE |Período contable incorrecto.| TYPE 'E' DISPLAY LIKE 'I'.
**    RETURN.
**  ENDIF.

*DTM

  IF gv_monat < 1 OR
     gv_monat > 12.
    MESSAGE |Período contable incorrecto.| TYPE 'E' DISPLAY LIKE 'I'.
    RETURN.
  ENDIF.

* DTM

* DTM - Se comprueba si el período contable está abierto

  CLEAR: gt_konto[]. REFRESH: gt_konto.

  CALL FUNCTION 'BKK_GL_FI_PERIOD_CHECK'
    EXPORTING
      i_bukrs = p_werks
      i_koart = '+'
      i_budat = p_fecha
    TABLES
      t_konto = gt_konto.

* DTM

**  g_fecha = |{ p_mjahr }{ p_monat }01|.
  g_fecha = |{ gv_mjahr }{ gv_monat }01|. "DTM

  CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
    EXPORTING
      day_in            = p_fecha "g_fecha
    IMPORTING
      last_day_of_month = p_fecha "g_fecha
    EXCEPTIONS
      day_in_no_date    = 1
      OTHERS            = 2.

  IF sy-subrc <> 0.
    MESSAGE |Ejercicio y período incorrectos.| TYPE 'E' DISPLAY LIKE 'I'.
    RETURN.
  ENDIF.

  IF p_fecha >= sy-datum. "g_fecha
    MESSAGE |Seleccionar período anterior al actual.| TYPE 'E' DISPLAY LIKE 'I'.
    RETURN.
  ENDIF.

START-OF-SELECTION.

  CASE sy-batch.
    WHEN ' '. "Interactiu


      CASE p_reproc.
        WHEN ' '.
**          CALL METHOD zclpp_traspaso_costes_cabos=>obtener_consumos_cabos
**            EXPORTING
**              i_werks              = p_werks
**              i_mjahr              = p_mjahr
**              i_mes                = p_monat
**            IMPORTING
**              ot_desglose_coste_of = gt_desglose_coste_of.

* DTM

          CALL METHOD zclpp_traspaso_costes_cabos=>obtener_consumos_cabos
            EXPORTING
              i_werks              = p_werks
              i_mjahr              = gv_mjahr "DTM
              i_mes                = gv_monat "DTM
            IMPORTING
              ot_desglose_coste_of = gt_desglose_coste_of.

* DTM


          IF gt_desglose_coste_of IS INITIAL.
            MESSAGE |No existe datos para esta selección.| TYPE 'I'.
            RETURN.

* DTM - Se eliminan los que tengan cantidad 0 Kg

          ELSE.

            DELETE gt_desglose_coste_of WHERE menge_cabo EQ 0.

* DTM

          ENDIF.

          CALL SCREEN 0100.

        WHEN 'X'.
          CALL METHOD zclpp_traspaso_costes_cabos=>get_reproceso
            EXPORTING
              i_werks      = p_werks
            IMPORTING
              ot_reproceso = gt_desglose_coste_of.

* DTM - Se eliminan los que tengan cantidad 0 Kg

          DELETE gt_desglose_coste_of WHERE menge_rollo EQ 0.

* DTM

          CALL SCREEN 0100.

        WHEN OTHERS.
      ENDCASE.

    WHEN 'X'. "Batch

**      CALL METHOD zclpp_traspaso_costes_cabos=>proceso_batch_mensual
**        EXPORTING
**          i_werks = p_werks
**          i_mjahr = p_mjahr
**          i_mes   = p_monat.

      CALL METHOD zclpp_traspaso_costes_cabos=>proceso_batch_mensual
        EXPORTING
          i_werks = p_werks
          i_mjahr = gv_mjahr
          i_mes   = gv_monat.
    WHEN OTHERS.
  ENDCASE.
