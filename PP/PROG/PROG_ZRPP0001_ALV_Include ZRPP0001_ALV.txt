*&---------------------------------------------------------------------*
*&  Include           ZRPP0001_ALV
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  ALV_MOSTRAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_mostrar .

  DATA: ls_lvc_s_layo TYPE lvc_s_layo,
        ls_variant    TYPE disvariant.

* Variante
  PERFORM alv_prepare_variant CHANGING ls_variant.
* Preparamos el catálogo de campos
  PERFORM alv_prepare_fielcat.
* Preparamos el layout
  PERFORM alv_prepare_layout CHANGING ls_lvc_s_layo.

* Mostramos el ALV
  CALL METHOD gcl_grid->set_table_for_first_display
    EXPORTING
      i_buffer_active    = ' '
      i_bypassing_buffer = 'X'
      is_layout          = ls_lvc_s_layo
      i_structure_name   = 'GT_LISTADO1'
      is_variant         = ls_variant
      i_save             = 'A'
    CHANGING
      it_outtab          = gt_listado1[]
      it_fieldcatalog    = gt_fieldcat.

ENDFORM.                    " ALV_MOSTRAR
*&---------------------------------------------------------------------*
*&      Form  alv_prepare_variant
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PS_VARIANT text
*----------------------------------------------------------------------*
FORM alv_prepare_variant CHANGING ps_variant TYPE disvariant .

  IF gs_variant IS NOT INITIAL.
    ps_variant = gs_variant.
  ELSE.
    CLEAR ps_variant.
    ps_variant-report = sy-repid.
  ENDIF.

ENDFORM.                    "alv_prepare_variant
*&---------------------------------------------------------------------*
*&      Form  alv_prepare_fielcat
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM alv_prepare_fielcat.

  DATA: ls_fcat TYPE lvc_s_fcat.
  DATA: lv_tabix TYPE sytabix.


  REFRESH: gt_fieldcat_ant, gt_fieldcat.

* Pasar tabla interna al formato del fieldcat
  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      i_program_name         = sy-repid
      i_internal_tabname     = 'GT_LISTADO1'
      i_inclname             = sy-repid
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = gt_fieldcat_ant
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.

* Pasar el anterior fieldcat al formato del nuevo
  CALL FUNCTION 'LVC_TRANSFER_FROM_SLIS'
    EXPORTING
      it_fieldcat_alv = gt_fieldcat_ant
    IMPORTING
      et_fieldcat_lvc = gt_fieldcat
    TABLES
      it_data         = gt_listado1
    EXCEPTIONS
      it_data_missing = 1
      OTHERS          = 2.

** Recorremos el catálogo de campos modificandolo

  LOOP AT gt_fieldcat INTO ls_fcat.
    lv_tabix = sy-tabix.
    CASE ls_fcat-fieldname.
      WHEN 'VBELN'.
        ls_fcat-seltext   = text-t01.
        ls_fcat-scrtext_l = text-t01.
        ls_fcat-scrtext_m = text-t01.
        ls_fcat-scrtext_s = text-t01.
        ls_fcat-reptext   = text-t01.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'POSNR'.
        ls_fcat-seltext   = text-t02.
        ls_fcat-scrtext_l = text-t02.
        ls_fcat-scrtext_m = text-t02.
        ls_fcat-scrtext_s = text-t02.
        ls_fcat-reptext   = text-t02.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'MATNR'.
        ls_fcat-seltext   = text-t03.
        ls_fcat-scrtext_l = text-t03.
        ls_fcat-scrtext_m = text-t03.
        ls_fcat-scrtext_s = text-t03.
        ls_fcat-reptext   = text-t03.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'MAKTX'.
        ls_fcat-seltext   = text-t17.
        ls_fcat-scrtext_l = text-t17.
        ls_fcat-scrtext_m = text-t17.
        ls_fcat-scrtext_s = text-t17.
        ls_fcat-reptext   = text-t17.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'AUART'.
        ls_fcat-seltext   = text-t04.
        ls_fcat-scrtext_l = text-t04.
        ls_fcat-scrtext_m = text-t04.
        ls_fcat-scrtext_s = text-t04.
        ls_fcat-reptext   = text-t04.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'AUFNR'.
        ls_fcat-seltext   = text-t05.
        ls_fcat-scrtext_l = text-t05.
        ls_fcat-scrtext_m = text-t05.
        ls_fcat-scrtext_s = text-t05.
        ls_fcat-reptext   = text-t05.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'KUNNR'.
        ls_fcat-seltext   = text-t06.
        ls_fcat-scrtext_l = text-t06.
        ls_fcat-scrtext_m = text-t06.
        ls_fcat-scrtext_s = text-t06.
        ls_fcat-reptext   = text-t06.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'WERKS'.
        ls_fcat-seltext   = text-t07.
        ls_fcat-scrtext_l = text-t07.
        ls_fcat-scrtext_m = text-t07.
        ls_fcat-scrtext_s = text-t07.
        ls_fcat-reptext   = text-t07.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'CY_SEQNR'.
        ls_fcat-seltext   = text-t08.
        ls_fcat-scrtext_l = text-t08.
        ls_fcat-scrtext_m = text-t08.
        ls_fcat-scrtext_s = text-t08.
        ls_fcat-reptext   = text-t08.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'ICON'.
        ls_fcat-seltext   = text-t09.
        ls_fcat-scrtext_l = text-t09.
        ls_fcat-scrtext_m = text-t09.
        ls_fcat-scrtext_s = text-t09.
        ls_fcat-reptext   = text-t09.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'TYPE_RET'.
        ls_fcat-seltext   = text-t10.
        ls_fcat-scrtext_l = text-t10.
        ls_fcat-scrtext_m = text-t10.
        ls_fcat-scrtext_s = text-t10.
        ls_fcat-reptext   = text-t10.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'TYPE_RET'.
        ls_fcat-seltext   = text-t11.
        ls_fcat-scrtext_l = text-t11.
        ls_fcat-scrtext_m = text-t11.
        ls_fcat-scrtext_s = text-t11.
        ls_fcat-reptext   = text-t11.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'TIPO'.
        ls_fcat-seltext   = text-t16.
        ls_fcat-scrtext_l = text-t16.
        ls_fcat-scrtext_m = text-t16.
        ls_fcat-scrtext_s = text-t16.
        ls_fcat-reptext   = text-t16.
*        ls_fcat-hotspot = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
    ENDCASE.
  ENDLOOP.


ENDFORM.                    "alv_prepare_fielcat
*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_prepare_layout CHANGING ls_lvc_s_layo TYPE lvc_s_layo.

* Para que muestre el ancho de las columnas optimizado
  ls_lvc_s_layo-cwidth_opt = 'X'.
  ls_lvc_s_layo-sel_mode   = 'A'.

ENDFORM.                    " ALV_PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESH_TABLE_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_refresh_table_display .

  DATA: ls_stable TYPE lvc_s_stbl,
        ls_layout	TYPE lvc_s_layo.

*Refresh layout
  CLEAR ls_layout.
  CALL METHOD gcl_grid->get_frontend_layout
    IMPORTING
      es_layout = ls_layout.

  PERFORM alv_prepare_layout CHANGING ls_layout.

  CALL METHOD gcl_grid->set_frontend_layout
    EXPORTING
      is_layout = ls_layout.

*Refresh data
  CLEAR ls_stable.
  ls_stable-row = 'X'.
  ls_stable-col = 'X'.
  CALL METHOD gcl_grid->refresh_table_display
    EXPORTING
      is_stable = ls_stable
    EXCEPTIONS
      finished  = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
  ENDIF.

ENDFORM.                    " ALV_REFRESH_TABLE_DISPLAY
