*&---------------------------------------------------------------------*
*&  Include           ZRPP0002_ALV
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  ALV_MOSTRAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_mostrar .

  DATA: ls_lvc_s_layo TYPE lvc_s_layo,
        ls_variant    TYPE disvariant.

* Variante
  PERFORM alv_prepare_variant CHANGING ls_variant.
* Preparamos el catálogo de campos
  PERFORM alv_prepare_fielcat.
* Preparamos el layout
  PERFORM alv_prepare_layout CHANGING ls_lvc_s_layo.

* Mostramos el ALV
  CALL METHOD gcl_grid->set_table_for_first_display
    EXPORTING
      i_buffer_active    = ' '
      i_bypassing_buffer = 'X'
      is_layout          = ls_lvc_s_layo
      i_structure_name   = 'GT_CONSUMO'
      is_variant         = ls_variant
      i_save             = 'A'
    CHANGING
      it_outtab          = gt_consumo[]
      it_fieldcatalog    = gt_fieldcat.

ENDFORM.                    " ALV_MOSTRAR

*&---------------------------------------------------------------------*
*&      Form  alv_prepare_variant
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PS_VARIANT text
*----------------------------------------------------------------------*
FORM alv_prepare_variant CHANGING ps_variant TYPE disvariant .

  IF gs_variant IS NOT INITIAL.
    ps_variant = gs_variant.
  ELSE.
    CLEAR ps_variant.
    ps_variant-report = sy-repid.
  ENDIF.

ENDFORM.                    "alv_prepare_variant

*&---------------------------------------------------------------------*
*&      Form  alv_prepare_fielcat
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM alv_prepare_fielcat.

  DATA: ls_fcat TYPE lvc_s_fcat.
  DATA: lv_tabix TYPE sytabix.


  REFRESH: gt_fieldcat_ant, gt_fieldcat.

* Pasar tabla interna al formato del fieldcat
  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      i_program_name         = sy-repid
      i_internal_tabname     = 'GT_CONSUMO'
      i_inclname             = sy-repid
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = gt_fieldcat_ant
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.

* Pasar el anterior fieldcat al formato del nuevo
  CALL FUNCTION 'LVC_TRANSFER_FROM_SLIS'
    EXPORTING
      it_fieldcat_alv = gt_fieldcat_ant
    IMPORTING
      et_fieldcat_lvc = gt_fieldcat
    TABLES
      it_data         = gt_consumo
    EXCEPTIONS
      it_data_missing = 1
      OTHERS          = 2.

** Recorremos el catálogo de campos modificandolo

  LOOP AT gt_fieldcat INTO ls_fcat.
    lv_tabix = sy-tabix.
    CASE ls_fcat-fieldname.
*      WHEN 'VBELN'.
*        ls_fcat-seltext   = text-t01.
*        ls_fcat-scrtext_l = text-t01.
*        ls_fcat-scrtext_m = text-t01.
*        ls_fcat-scrtext_s = text-t01.
*        ls_fcat-reptext   = text-t01.
*        ls_fcat-hotspot = 'X'.
*        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'COMP_MENGE_FAB'.
        ls_fcat-no_out = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'COMP_MEINS_FAB'.
        ls_fcat-no_out = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'COMP_MENGE_TOT'.
        ls_fcat-no_out = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'COMP_MEINS_TOT'.
        ls_fcat-no_out = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'COMP_PORCENTAJE'.
        ls_fcat-no_out = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'ICON'.
        ls_fcat-seltext   = text-t01.
        ls_fcat-scrtext_l = text-t01.
        ls_fcat-scrtext_m = text-t01.
        ls_fcat-scrtext_s = text-t01.
        ls_fcat-reptext   = text-t01.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'TYPE_RET'.
        ls_fcat-seltext   = text-t02.
        ls_fcat-scrtext_l = text-t02.
        ls_fcat-scrtext_m = text-t02.
        ls_fcat-scrtext_s = text-t02.
        ls_fcat-reptext   = text-t02.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'MSG_RET'.
        ls_fcat-seltext   = text-t03.
        ls_fcat-scrtext_l = text-t03.
        ls_fcat-scrtext_m = text-t03.
        ls_fcat-scrtext_s = text-t03.
        ls_fcat-reptext   = text-t03.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
      WHEN 'NO_RESB'.
        ls_fcat-no_out = 'X'.
        MODIFY gt_fieldcat FROM ls_fcat INDEX lv_tabix.
    ENDCASE.
  ENDLOOP.

  LOOP AT gt_fieldcat INTO ls_fcat WHERE fieldname = 'PROCESADO'.
    lv_tabix = sy-tabix.
    DELETE gt_fieldcat INDEX lv_tabix.
  ENDLOOP.

ENDFORM.                    "alv_prepare_fielcat

*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_prepare_layout CHANGING ls_lvc_s_layo TYPE lvc_s_layo.

* Para que muestre el ancho de las columnas optimizado
  ls_lvc_s_layo-cwidth_opt = 'X'.
  ls_lvc_s_layo-sel_mode   = 'A'.

ENDFORM.                    " ALV_PREPARE_LAYOUT

*&---------------------------------------------------------------------*
*&      Form  ALV_PROC_SELEC_LIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_proc_selec_lin.

  DATA: lt_return TYPE bapiret2_t.
  DATA: ls_ord_cons    LIKE         gt_ord_cons,
        ls_ord_cons_2  like         gt_ord_cons_2,
        ls_consumo     LIKE LINE OF gt_consumo,
        ls_consumo_aux LIKE LINE OF gt_consumo,
        ls_return      TYPE         bapiret2,
        ls_return_roll LIKE         bapiret2.
  DATA: lv_error(1),
        lv_materialdocument TYPE bapi2017_gm_head_ret-mat_doc,
        lv_matdocumentyear  TYPE bapi2017_gm_head_ret-doc_year,
        lv_index            LIKE sy-tabix.

********************************************************************************
** CONSUMOS CONTRA RESERVA DE LA ORDEN *****************************************
********************************************************************************
  " Vamos a hacer un documento de material por orden (reserva):
  CLEAR ls_ord_cons.
  LOOP AT gt_ord_cons INTO ls_ord_cons.
    CLEAR: lt_return, lv_error, lv_materialdocument, lv_matdocumentyear.
    REFRESH lt_return.
    " Creación documento material:
    PERFORM mov_consumo TABLES lt_return
                        USING ls_ord_cons
                        CHANGING lv_error
                                 lv_materialdocument
                                 lv_matdocumentyear.
    " Actualización de las líneas del listado:
    IF lv_error = 'X'. " Error en la creación del documento de material
      CLEAR ls_return_roll.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
        IMPORTING
          return = ls_return_roll.

      " Actualizamos los datos del listado tras ejecución:
      CLEAR ls_return.
      READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.
* GST - 22/10/2014 ->
*      LOOP AT gt_consumo INTO ls_consumo WHERE aufnr = ls_ord_cons-aufnr
*                                         AND charg_fab = ls_ord_cons-charg
*                                         AND procesado <> 'X'.
*        lv_index = sy-tabix.
*        ls_consumo-icono = '@0A@'. " Icono rojo -> Tratamiento erróneo
*        ls_consumo-tipo = ls_return-type.
*        ls_consumo-mensaje = ls_return-message.
*        MODIFY gt_consumo FROM ls_consumo INDEX lv_index.
*        PERFORM alv_refresh_table_display.
*      ENDLOOP.
      CLEAR ls_consumo_aux.
      LOOP AT gt_consumo_aux INTO ls_consumo_aux WHERE no_resb <> 'X'.  "WHERE aufnr = ls_ord_cons-aufnr
        "AND charg_fab = ls_ord_cons-charg
        "AND procesado <> 'X'.
        CLEAR ls_consumo.
        READ TABLE gt_consumo INTO ls_consumo WITH KEY matnr_fab = ls_consumo_aux-matnr_fab
                                                       charg_fab = ls_consumo_aux-charg_fab
                                                       aufnr = ls_consumo_aux-aufnr
                                                       comp_cons = ls_consumo_aux-comp_cons
                                                       comp_charg_cons = ls_consumo_aux-comp_charg_cons.
        lv_index = sy-tabix.
        IF ls_consumo IS NOT INITIAL AND ls_consumo-no_resb <> 'X'.
          ls_consumo-icono = '@0A@'. " Icono rojo -> Tratamiento erróneo
          ls_consumo-tipo = ls_return-type.
          ls_consumo-mensaje = ls_return-message.
          MODIFY gt_consumo FROM ls_consumo INDEX lv_index.
*          PERFORM alv_refresh_table_display.
        ENDIF.
      ENDLOOP.

* GST - 22/10/2014 <-

    ELSEIF lv_error <> 'X' AND lv_error <> 'D' . " No ha habido error en la creación del documento de material
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

* GST - 22/10/2014 ->
*      " Actualizamos los datos del listado tras ejecución:
*      LOOP AT gt_consumo INTO ls_consumo WHERE aufnr = ls_ord_cons-aufnr
*                                         AND charg_fab = ls_ord_cons-charg
*                                         AND procesado <> 'X'.
*        lv_index = sy-tabix.
*        ls_consumo-procesado = 'X'.
*        ls_consumo-icono = '@08@'. " Icono verde -> Tratamiento correcto
*        ls_consumo-tipo = 'S'.
*        CONCATENATE 'Se ha creado doc. material' lv_materialdocument ', Año' lv_matdocumentyear INTO ls_consumo-mensaje
*                    SEPARATED BY space.
*        MODIFY gt_consumo FROM ls_consumo INDEX lv_index.
*        PERFORM alv_refresh_table_display.
*      ENDLOOP.

      CLEAR ls_consumo_aux.
      LOOP AT gt_consumo_aux INTO ls_consumo_aux WHERE no_resb <> 'X'.  "WHERE aufnr = ls_ord_cons-aufnr
        "AND charg_fab = ls_ord_cons-charg
        "AND procesado <> 'X'.
        CLEAR ls_consumo.
        READ TABLE gt_consumo INTO ls_consumo WITH KEY matnr_fab = ls_consumo_aux-matnr_fab
                                                       charg_fab = ls_consumo_aux-charg_fab
                                                       aufnr = ls_consumo_aux-aufnr
                                                       comp_cons = ls_consumo_aux-comp_cons
                                                       comp_charg_cons = ls_consumo_aux-comp_charg_cons.
        lv_index = sy-tabix.
        IF ls_consumo IS NOT INITIAL AND ls_consumo-no_resb <> 'X'.
          ls_consumo-procesado = 'X'.
          ls_consumo-icono = '@08@'. " Icono verde -> Tratamiento correcto
          ls_consumo-tipo = 'S'.
          CONCATENATE 'Se ha creado doc. material' lv_materialdocument ', Año' lv_matdocumentyear INTO ls_consumo-mensaje
                      SEPARATED BY space.
          MODIFY gt_consumo FROM ls_consumo INDEX lv_index.
*          PERFORM alv_refresh_table_display.
        ENDIF.
      ENDLOOP.
* GST - 22/10/2014 <-
    ENDIF.
  ENDLOOP.

*******************************************************************************
** CONSUMOS CONTRA ORDEN ******************************************************
*******************************************************************************

  " Vamos a hacer un documento de material por orden (reserva):
  CLEAR ls_ord_cons_2.
  LOOP AT gt_ord_cons_2 INTO ls_ord_cons_2.
    CLEAR: lt_return, lv_error, lv_materialdocument, lv_matdocumentyear.
    REFRESH lt_return.
    " Creación documento material:
    PERFORM mov_consumo_2 TABLES lt_return
                          USING ls_ord_cons_2
                          CHANGING lv_error
                                   lv_materialdocument
                                   lv_matdocumentyear.

    IF lv_error = 'X'. " Error en la creación del documento de material
      CLEAR ls_return_roll.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
        IMPORTING
          return = ls_return_roll.
      CLEAR ls_return.
      READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.
* GST - 24/10/2014 ->
* Eliminar dumps:
      CLEAR ls_consumo_aux.
      LOOP AT gt_consumo_aux INTO ls_consumo_aux WHERE no_resb = 'X'.  "WHERE aufnr = ls_ord_cons-aufnr
        "AND charg_fab = ls_ord_cons-charg
        "AND procesado <> 'X'.
        CLEAR ls_consumo.
        READ TABLE gt_consumo INTO ls_consumo WITH KEY aufnr = ls_consumo_aux-aufnr
                                                       charg_fab = ls_consumo_aux-charg_fab
                                                       comp_cons = ls_consumo_aux-comp_cons
                                                       comp_charg_cons = ls_consumo_aux-comp_charg_cons.
        lv_index = sy-tabix.
        IF ls_consumo IS NOT INITIAL AND ls_consumo-no_resb = 'X'.
          ls_consumo-icono = '@0A@'. " Icono rojo -> Tratamiento erróneo
          ls_consumo-tipo = ls_return-type.
          ls_consumo-mensaje = ls_return-message.
          MODIFY gt_consumo FROM ls_consumo INDEX lv_index.
        ENDIF.
      ENDLOOP.
* GST - 24/10/2014 <-
*      LOOP AT gt_consumo INTO ls_consumo WHERE aufnr = ls_ord_cons-aufnr
*                                         AND charg_fab = ls_ord_cons-charg.
*        WRITE:/ ls_consumo-matnr_fab,
*                ls_consumo-desc_matnr_fab,
*                ls_consumo-charg_fab,
*                ls_consumo-menge_fab,
*                ls_consumo-meins_fab,
*                ls_consumo-aufnr,
*                ls_consumo-comp_cons,
*                ls_consumo-desc_comp_cons,
*                ls_consumo-comp_charg_cons,
*                ls_consumo-comp_menge_cons,
*                ls_consumo-comp_meins_cons,
*                ls_return-type,
*                20 ls_return-message.
*      ENDLOOP.

    ELSEIF lv_error <> 'X' AND lv_error <> 'D' . " No ha habido error en la creación del documento de material
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
* GST - 24/10/2014 ->
* Eliminar dumps:
      CLEAR ls_consumo_aux.
      LOOP AT gt_consumo_aux INTO ls_consumo_aux WHERE no_resb = 'X'.  "WHERE aufnr = ls_ord_cons-aufnr
        "AND charg_fab = ls_ord_cons-charg
        "AND procesado <> 'X'.
        CLEAR ls_consumo.
        READ TABLE gt_consumo INTO ls_consumo WITH KEY charg_fab = ls_consumo_aux-charg_fab
                                                       aufnr = ls_consumo_aux-aufnr
                                                       comp_cons = ls_consumo_aux-comp_cons
                                                       comp_charg_cons = ls_consumo_aux-comp_charg_cons.
        lv_index = sy-tabix.
        IF ls_consumo IS NOT INITIAL AND ls_consumo-no_resb = 'X'.
          ls_consumo-procesado = 'X'.
          ls_consumo-icono = '@08@'. " Icono verde -> Tratamiento correcto
          ls_consumo-tipo = 'S'.
          CONCATENATE 'Se ha creado doc. material' lv_materialdocument ', Año' lv_matdocumentyear INTO ls_consumo-mensaje
                      SEPARATED BY space.
          MODIFY gt_consumo FROM ls_consumo INDEX lv_index.
        ENDIF.
      ENDLOOP.
* GST - 24/10/2014 <-
*      LOOP AT gt_consumo INTO ls_consumo WHERE aufnr = ls_ord_cons-aufnr
*                                   AND charg_fab = ls_ord_cons-charg.
*        ls_consumo-tipo = 'S'.
*        CONCATENATE 'Se ha creado doc. material' lv_materialdocument ', Año' lv_matdocumentyear INTO ls_consumo-mensaje
*                    SEPARATED BY space.
*        WRITE:/ ls_consumo-matnr_fab,
*                ls_consumo-desc_matnr_fab,
*                ls_consumo-charg_fab,
*                ls_consumo-menge_fab,
*                ls_consumo-meins_fab,
*                ls_consumo-aufnr,
*                ls_consumo-comp_cons,
*                ls_consumo-desc_comp_cons,
*                ls_consumo-comp_charg_cons,
*                ls_consumo-comp_menge_cons,
*                ls_consumo-comp_meins_cons,
*                ls_consumo-tipo,
*                20 ls_consumo-mensaje.
*      ENDLOOP.
    ENDIF.

  ENDLOOP.

  " Cálculo y actualización % FSC en característica:
  PERFORM f_act_porcentajes.

  " Actualización listado:
  PERFORM alv_refresh_table_display.

  " Después de realizar los consumos actualizamos la tabla Z
  " con la nueva fecha y hora inicio de ejecución:
  PERFORM act_tabla_z.

ENDFORM.                    " ALV_PROC_SELEC_LIN

*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESH_TABLE_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_refresh_table_display .

  DATA: ls_stable TYPE lvc_s_stbl,
        ls_layout	TYPE lvc_s_layo.

*Refresh layout
  CLEAR ls_layout.
  CALL METHOD gcl_grid->get_frontend_layout
    IMPORTING
      es_layout = ls_layout.

  PERFORM alv_prepare_layout CHANGING ls_layout.

  CALL METHOD gcl_grid->set_frontend_layout
    EXPORTING
      is_layout = ls_layout.

*Refresh data
  CLEAR ls_stable.
  ls_stable-row = 'X'.
  ls_stable-col = 'X'.
  CALL METHOD gcl_grid->refresh_table_display
    EXPORTING
      is_stable = ls_stable
    EXCEPTIONS
      finished  = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
  ENDIF.

ENDFORM.                    " ALV_REFRESH_TABLE_DISPLAY
