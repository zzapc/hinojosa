*&---------------------------------------------------------------------*
*& Report  ZRPP0054
*&
*&---------------------------------------------------------------------*
*& Visualización de datos del secuenciador (ZTPP0009)
*&
*&---------------------------------------------------------------------*
REPORT zrpp0054.

INCLUDE zrpp0054_top.
INCLUDE zrpp0054_class.
INCLUDE zrpp0054_forms.
INCLUDE zrpp0054_status_0100o01.


INITIALIZATION.
* parámetro de usuario para campo centro de la pantalla de selección
  SELECT SINGLE parva FROM usr05
    INTO p_werks
    WHERE bname = sy-uname
    AND parid EQ 'WRK'.
  IF sy-subrc <> 0.
    MESSAGE i129(zpp) DISPLAY LIKE 'E' .
  ENDIF.
  PERFORM get_default_layout " using gs_test-restrict
                            CHANGING p_lay06.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_lay06.
  PERFORM f4_layouts USING if_salv_c_layout=>restrict_none CHANGING p_lay06.


START-OF-SELECTION.

  DATA: lt_ztpp0009 TYPE STANDARD TABLE OF ztpp0009.

  CLEAR lt_ztpp0009[].

  CALL METHOD zcl_secuenciador=>obtener_datos_sequenciador_30v
    EXPORTING
      i_werks     = p_werks
    IMPORTING
      ot_ztpp0009 = lt_ztpp0009.

  gt_ztpp0009[] = CORRESPONDING #( lt_ztpp0009 ).

  PERFORM set_colors.

  TRY.
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = gr_alv
        CHANGING
          t_table      = gt_ztpp0009 ).
    CATCH cx_salv_msg.                                  "#EC NO_HANDLER
  ENDTRY.

  gr_alv->set_screen_status(
    pfstatus      =  'SALV_STANDARD'
    report        =  'ZRPP0054'
    set_functions = gr_alv->c_functions_all ) .


  DATA(gr_layout) = gr_alv->get_layout( ).
  key-report = sy-repid.
  gr_layout->set_key( key ).
  gr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
  gr_layout->set_default( abap_true ).
  gr_layout->set_initial_layout( p_lay06 ).

* Formatear columnas iconos de observaciones com HOTSPOT.
  DATA(gr_columns) = gr_alv->get_columns( ).

  gr_column ?= gr_columns->get_column( 'ZICON_OBS_POPE' ).
  gr_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).

  gr_column ?= gr_columns->get_column( 'ZICON_OBSERVA' ).
  gr_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).

  gr_column ?= gr_columns->get_column( 'ICON_PARO' ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).
  gr_column ?= gr_columns->get_column( 'ICON_ESTADO' ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).
  gr_column ?= gr_columns->get_column( 'ICON_CALIDAD' ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).
  gr_column ?= gr_columns->get_column( 'ICON_GRAMAJE' ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).
  gr_column ?= gr_columns->get_column( 'ICON_ANCHO' ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).
  gr_column ?= gr_columns->get_column( 'ZICON_BOP_PAR' ).
  gr_column->set_alignment( if_salv_c_alignment=>centered ).

  gr_column ?= gr_columns->get_column( 'ZZEBELN1' ).
  gr_column->set_alignment( if_salv_c_alignment=>right ).
  gr_column ?= gr_columns->get_column( 'ZZEBELN2' ).
  gr_column->set_alignment( if_salv_c_alignment=>right ).
  gr_column ?= gr_columns->get_column( 'ZZEBELN3' ).
  gr_column->set_alignment( if_salv_c_alignment=>right ).

*-- events
  gr_events = gr_alv->get_event( ).
  CREATE OBJECT event_handler.
  SET HANDLER event_handler->on_user_command FOR gr_events.
  SET HANDLER event_handler->on_link_click FOR gr_events.

*-- Selection
  gr_selections = gr_alv->get_selections( ).
  gr_selections->set_selection_mode(
                     if_salv_c_selection_mode=>row_column ).

  DATA:   lo_cols_tab TYPE REF TO cl_salv_columns_table.

  lo_cols_tab = gr_alv->get_columns( ).
  lo_cols_tab->set_optimize( ).
  TRY.
      lo_cols_tab->set_color_column( 'COLOR' ).

    CATCH cx_salv_data_error.                           "#EC NO_HANDLER
  ENDTRY.

END-OF-SELECTION.

  IF zcl_secuenciador=>gc_time_alv_pope > 0. " g_af_timer GT 0.
    CREATE OBJECT g_timer.
    CREATE OBJECT g_receiver.
    SET HANDLER g_receiver->handle_finished FOR g_timer.
    g_timer->interval = zcl_secuenciador=>gc_time_alv_pope.
    CALL METHOD g_timer->run.
  ENDIF.

  gr_alv->display( ).
