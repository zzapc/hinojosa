*&---------------------------------------------------------------------*
*&  Include           ZRPP0043_I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  CAMBIO_MATNR  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cambio_matnr INPUT.
  DATA: lt_marm TYPE STANDARD TABLE OF marm,
        wa_marm TYPE marm,
        wa_mara TYPE mara.

  CLEAR: gv_matnr_int, gv_peso, gv_gramaje, gv_gramaje_ext, gt_mast, wa_marc.
  REFRESH: gt_mast.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = gv_matnr
    IMPORTING
      output = gv_matnr_int.

* verificamos el material.
  SELECT SINGLE * FROM mara
    INTO wa_mara
    WHERE matnr = gv_matnr_int.
  IF sy-subrc <> 0.
    CLEAR: gv_matnr.
    MESSAGE e275(zpp). "El material no existe
  ELSEIF wa_mara-mtart <> 'ZPLP'.
    MESSAGE e279(zpp).
  ENDIF.

* verificamos que el material existe para el centro 4000
  SELECT SINGLE * FROM marc
    INTO wa_marc
    WHERE matnr = gv_matnr_int AND
          werks = gv_werks.
  IF sy-subrc <> 0.
    CLEAR: gv_matnr.
    MESSAGE e266(zpp) WITH gv_matnr gv_werks. "El material & no existe en el centro &

  ELSE.
    FIND FIRST OCCURRENCE OF 'A' IN wa_marc-pstat .
    IF sy-subrc <> 0.
      MESSAGE e267(zpp) WITH gv_matnr gv_werks. "El material & en el centro & no tiene la vista de Prep.del trabajo creada
    ELSE.

      FIND FIRST OCCURRENCE OF 'D' IN wa_marc-pstat .
      IF sy-subrc <> 0.
        MESSAGE e268(zpp) WITH gv_matnr gv_werks. "El material & en el centro & no tiene la vista de Planificación creada
      ELSE.

        SELECT * FROM mast
          INTO TABLE gt_mast
          WHERE matnr = gv_matnr_int AND
                werks = gv_werks AND
                stlan = '1'.

        IF sy-subrc <> 0.
          MESSAGE e269(zpp) WITH gv_matnr gv_werks. "El material & en el centro & no tiene listas de materiales de tipo 1
        ELSE.

*         obtenemos la descripción del material
          SELECT SINGLE maktx FROM makt
            INTO gv_maktx
            WHERE spras = sy-langu AND
                  matnr = gv_matnr_int.

*         obtenemos el grameje del material
          SELECT SINGLE zzgrampla FROM mara
            INTO gv_gramaje
            WHERE matnr = gv_matnr_int.

          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
            EXPORTING
              input  = gv_gramaje
            IMPORTING
              output = gv_gramaje_ext.

*         obtenemos el peso del material
          SELECT * FROM marm
            INTO TABLE lt_marm
            WHERE matnr = gv_matnr_int.

          READ TABLE lt_marm INTO wa_marm WITH KEY meinh = 'GR'.
          IF sy-subrc <> 0.
            READ TABLE lt_marm INTO wa_marm WITH KEY meinh = 'KG'.
          ENDIF.

          IF wa_marm IS NOT INITIAL.
            gv_peso = wa_marm-umren / wa_marm-umrez.
          ENDIF.

          IF wa_marm-meinh <> 'KG'.
            gv_peso = gv_peso / 1000.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE gv_okcode.
    WHEN 'BACK'.
      CLEAR: gv_okcode, gv_bloquear_tab.
      LEAVE PROGRAM.

    WHEN 'RECETAS'.
      CLEAR: gv_okcode.

      gv_bloquear_tab = 'X'.

      IF gv_matnr IS INITIAL.
        MESSAGE e271(zpp) . "Debe informar el material
      ELSE.
        PERFORM obtener_recetas.
        LEAVE TO SCREEN 0200.
      ENDIF.

  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  DATA: error   TYPE xfeld.

  CASE gv_okcode.
    WHEN 'BACK'.
      CLEAR: gv_okcode, gv_matnr, gv_matnr_int, gv_peso, gv_gramaje,
             gv_gramaje_ext, gv_maktx, gt_recetas, gt_recetas_creadas,
             gv_bloquear_tab, gt_messages.
      REFRESH: gt_recetas, gt_recetas_creadas, gt_messages.

      CALL SCREEN '0100'.

    WHEN 'CREAR'.
      CLEAR: gv_okcode, error.

      gv_bloquear_tab = 'X'.

*     verificaciones de la versión
      IF lv_v001 = 'X'.
        READ TABLE gt_recetas INTO wa_recetas WITH KEY version_ppal = 'X'.
        IF sy-subrc = 0.
          error = 'X'.
          MESSAGE e274(zpp) . "La versión de fabricación principal ya existe
        ENDIF.
      ELSE.
*        READ TABLE gt_recetas INTO wa_recetas WITH KEY version_ppal = 'X'.
*        IF sy-subrc <> 0.
*          error = 'X'.
*          MESSAGE e273(zpp). "Debe informar una versión de fabricación principal.
*        ENDIF.
      ENDIF.

*     si todo es correcto, pasamos a crear la receta
      IF error = ''.
        PERFORM crear_recetas.
      ENDIF.


    WHEN 'ADD'.
      CLEAR: wa_recetas, gv_okcode.
      CLEAR: gv_bloquear_tab.
      APPEND wa_recetas TO gt_recetas.


    WHEN 'DELETE'.
      CLEAR: gv_okcode.

  ENDCASE.
ENDMODULE.


MODULE tc_recetas_modify INPUT.
  MODIFY gt_recetas
    FROM wa_recetas
    INDEX tc_recetas-current_line.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CAMBIO_LINEA  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cambio_linea INPUT.
  DATA: wa_ztpp0018 TYPE ztpp0018.

  SET PARAMETER ID 'ZLIN' FIELD wa_recetas-linea.

  SELECT SINGLE * FROM ztpp0018
    INTO wa_ztpp0018
    WHERE werks = gv_werks AND
          linea = wa_recetas-linea.
  IF sy-subrc <> 0.
    MESSAGE w277(zpp). "La línea indicada no existe
    CLEAR: wa_recetas-linea.

  ELSE.

    CLEAR:  pt_modos.
    REFRESH: pt_modos.

    PERFORM get_modos USING wa_recetas-linea
                            gv_werks
                      CHANGING pt_modos.


    MODIFY gt_recetas
        FROM wa_recetas
        INDEX tc_recetas-current_line.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CAMBIO_MODO  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE matchcode_modo INPUT.
  DATA: lt_return_tab TYPE STANDARD TABLE OF ddshretval,
        ls_return_tab LIKE LINE OF lt_return_tab.


  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'MODO'
      value_org       = 'S'
    TABLES
      value_tab       = pt_modos
      return_tab      = lt_return_tab
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.

  IF sy-subrc = 0.
    READ TABLE lt_return_tab INTO ls_return_tab INDEX 1.
    IF sy-subrc = 0.
      wa_recetas-modo = ls_return_tab-fieldval.

      MODIFY gt_recetas
       FROM wa_recetas
       INDEX tc_recetas-current_line.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  DESCRIPCION_RECETA  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE descripcion_receta INPUT.

  CLEAR: wa_recetas-nombre_modo.

  SELECT SINGLE nombre_modo FROM  ztpp0019_t
    INTO wa_recetas-nombre_modo
    WHERE linea = wa_recetas-linea AND
          werks = gv_werks AND
          modo =  wa_recetas-modo AND
          spras = sy-langu.

  CONCATENATE gv_matnr
              wa_recetas-linea
              wa_recetas-nombre_modo
              gv_gramaje_ext
              'g'
        INTO wa_recetas-descripcion SEPARATED BY space.


  MODIFY gt_recetas
    FROM wa_recetas
    INDEX tc_recetas-current_line.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  VERSION_PPAL  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE version_ppal INPUT.
  IF lv_v001 = 'X' .
    MESSAGE w274(zpp). "La versión de fabricación principal ya existe
  ELSE.
*
    IF lv_v001 = '' AND wa_recetas-version_ppal = 'X'.
      wa_recetas-version = 'V001'.
      lv_v001 = 'X'.
    ELSE.
      wa_recetas-version = ' '.
      lv_v001 = ''.
    ENDIF.

    MODIFY gt_recetas
     FROM wa_recetas
     INDEX tc_recetas-current_line.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  DESCRIPCION_VERSION  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE descripcion_version INPUT.

  CONCATENATE wa_recetas-linea wa_recetas-nombre_modo gv_gramaje_ext
   INTO wa_recetas-descripcion_version SEPARATED BY space.


  MODIFY gt_recetas
    FROM wa_recetas
    INDEX tc_recetas-current_line.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  MATCHCODE_ALTERNATIVA  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE matchcode_alternativa INPUT.

  CLEAR: lt_return_tab.
  REFRESH: lt_return_tab.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
*     DDIC_STRUCTURE  = 'MAST'
      retfield        = 'STLAL'
      value_org       = 'S'
    TABLES
      value_tab       = pt_alternativas
      return_tab      = lt_return_tab
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.

  IF sy-subrc = 0.
    READ TABLE lt_return_tab INTO ls_return_tab INDEX 1.
    IF sy-subrc = 0.
*      wa_recetas-stlal = ls_return_tab-fieldval.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = ls_return_tab-fieldval
        IMPORTING
          output = wa_recetas-stlal.

      MODIFY gt_recetas
       FROM wa_recetas
       INDEX tc_recetas-current_line.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ELIMINAR  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE eliminar INPUT.
  IF mark = 'X' AND gv_okcode = 'DELETE'.
    gv_bloquear_tab = 'X'.
    DELETE gt_recetas INDEX "FROM wa_recetas.
    tc_recetas-current_line.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CAMBIO_STLAL  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cambio_stlal INPUT.

  READ TABLE pt_alternativas INTO wa_alternativas WITH KEY stlal = wa_recetas-stlal.
  IF sy-subrc <> 0.
    MESSAGE w276(zpp). "La alternativa indicada no existe
    CLEAR: wa_recetas-stlal.
  ENDIF.

  MODIFY gt_recetas
      FROM wa_recetas
      INDEX tc_recetas-current_line.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CAMBIO_MODO  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cambio_modo INPUT.

  CLEAR: pt_modos. REFRESH: pt_modos.

  PERFORM get_modos USING wa_recetas-linea
                          gv_werks
                  CHANGING pt_modos.

  READ TABLE pt_modos INTO wa_modos WITH KEY linea = wa_recetas-linea
                                             werks = gv_werks
                                             modo = wa_recetas-modo.

  IF sy-subrc <> 0.
    MESSAGE w278(zpp). "El modo indicado no existe
    CLEAR: wa_recetas-modo.
  ENDIF.

  MODIFY gt_recetas
      FROM wa_recetas
      INDEX tc_recetas-current_line.
ENDMODULE.
