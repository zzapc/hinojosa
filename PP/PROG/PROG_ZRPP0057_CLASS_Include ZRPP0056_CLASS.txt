*&---------------------------------------------------------------------*
*&  Include           ZRPP0056_CLASS
*&---------------------------------------------------------------------*
*DATA: " g_application TYPE REF TO lcl_event_handler,
*       gs_toolbar    TYPE        stb_button.


CLASS lcl_event_handler300 DEFINITION.
  PUBLIC SECTION.

    METHODS handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.

    METHODS handle_data_changed
                  FOR EVENT data_changed OF cl_gui_alv_grid
      IMPORTING er_data_changed e_onf4 e_onf4_before
                  e_onf4_after e_ucomm.

    METHODS handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.

ENDCLASS.                    "lcl_event_receiver DEFINITION

CLASS lcl_event_handler300 IMPLEMENTATION.

  METHOD handle_toolbar.

*    IF g_tp_300 = 'A'.
*      CLEAR gs_toolbar.
*      MOVE  'SAVE'                     TO gs_toolbar-function.
*      MOVE  text-010                   TO gs_toolbar-quickinfo.
*      MOVE  text-010                   TO gs_toolbar-text.
*      MOVE space                       TO gs_toolbar-disabled.
*      MOVE '@2L@'                      TO gs_toolbar-icon.
*      APPEND gs_toolbar                TO e_object->mt_toolbar.
*    ENDIF.
*
*    IF g_tp_300 = 'M' .
*
*      CLEAR gs_toolbar.
*      MOVE  'BORRAR'                   TO gs_toolbar-function.
*      MOVE  text-020                   TO gs_toolbar-quickinfo.
*      MOVE  text-020                   TO gs_toolbar-text.
*      MOVE space                       TO gs_toolbar-disabled.
*      MOVE '@11@'                      TO gs_toolbar-icon.
*      APPEND gs_toolbar                TO e_object->mt_toolbar.
*
*    ENDIF.


  ENDMETHOD.                    "handle_toolbar


  METHOD handle_data_changed.

*    perform handle_data_change300 using er_data_changed.

    DATA: lt_modi      TYPE TABLE OF lvc_s_modi,
          l_kg_totales TYPE menge_d,
          l_str        TYPE string,
          l_htype      TYPE char4.
    .

    lt_modi = er_data_changed->mt_mod_cells .

* Actualizamos tabla interna con los kg informados
    LOOP AT lt_modi INTO DATA(ls_modi).
      ASSIGN gt_materia_prima300[ ls_modi-row_id ] TO FIELD-SYMBOL(<fs>).
      IF sy-subrc = 0.

* Validamos que sea un valor numérico.
        CALL FUNCTION 'NUMERIC_CHECK'
          EXPORTING
            string_in  = ls_modi-value
          IMPORTING
            string_out = l_str
            htype      = l_htype.
        IF l_htype = 'NUMC'.
          <fs>-kg_ciclo = ls_modi-value.
        ELSE.
          MESSAGE e322(zpp). "Informe valores numéricos para informar kg.
        ENDIF.

      ENDIF.
    ENDLOOP.

    DATA: l_num_reg_with_kg TYPE n,
          l_tot_porc        TYPE zporc_mat_rec.
* Sumamos kg. para calcular porcentajes.
    CLEAR: l_kg_totales , l_num_reg_with_kg.
    LOOP AT gt_materia_prima300 INTO DATA(ls_mp) WHERE kg_ciclo > 0.
      l_kg_totales = l_kg_totales + ls_mp-kg_ciclo.
      IF ls_mp-kg_ciclo > 0.
        l_num_reg_with_kg = sy-tabix.
      ENDIF.

    ENDLOOP.

* Calculamos porcentaje e informamos tabla interna.
    LOOP AT gt_materia_prima300 ASSIGNING FIELD-SYMBOL(<fs_mp>).

      IF <fs_mp>-kg_ciclo = 0.
        CLEAR <fs_mp>-porc_ciclo.
      ELSEIF <fs_mp>-kg_ciclo > 0.
        <fs_mp>-porc_ciclo = ( <fs_mp>-kg_ciclo * 100 ) / l_kg_totales.
        l_tot_porc = l_tot_porc + <fs_mp>-porc_ciclo.
      ENDIF.

    ENDLOOP.

* Si el total del porcentaje no es 100%, al último material le sumamos/restamos lo que falte/sobre hasta el 100%
    IF l_tot_porc <> 100.
      ASSIGN gt_materia_prima300[ l_num_reg_with_kg ] TO <fs_mp>.
      <fs_mp>-porc_ciclo = <fs_mp>-porc_ciclo + ( 100 - l_tot_porc ).
    ENDIF.

  ENDMETHOD.                    "handle_data_changed

  METHOD handle_user_command.
*    DATA: l_rc TYPE char02.
*
*    gs_dyn300-ok_code = e_ucomm.
*    CASE gs_dyn300-ok_code.
*      WHEN 'SAVE'.
*        PERFORM save USING l_rc.
*        IF l_rc = '00'.
*          PERFORM free_grid_container_leave.
*
*        ENDIF.
*      WHEN 'BORRAR'.
*        PERFORM borrar_receta_300.
*        gs_dyn300-grid->free( ).
*        gs_dyn300-container->free( ).
*        LEAVE TO SCREEN 0.

*      WHEN OTHERS.
*    ENDCASE.

  ENDMETHOD.                    "handle_user_command


ENDCLASS.                    "lcl_application IMPLEMENTATION

**************************************************
* ALV SALV_TABLE para pantalla consulta (0200)   *
**************************************************
CLASS lcl_handle_events200 DEFINITION.
  PUBLIC SECTION.
    METHODS:
      on_user_command FOR EVENT added_function OF cl_salv_events
        IMPORTING e_salv_function.

ENDCLASS.                    "lcl_handle_events DEFINITION

CLASS lcl_handle_events200 IMPLEMENTATION.
  METHOD on_user_command.
    PERFORM handle_user_command200 USING e_salv_function.
  ENDMETHOD.                    "on_user_command

ENDCLASS.                    "lcl_handle_events IMPLEMENTATION



*---------------------------------------------------------------------*
*       CLASS lcl_handle_events2 DEFINITION  para POPUP RCETAS STANDARD
*---------------------------------------------------------------------*
* #5.1 define a local class for handling events of cl_salv_table
*---------------------------------------------------------------------*
CLASS lcl_handle_pop_std DEFINITION.
  PUBLIC SECTION.
    METHODS:
      on_user_command2 FOR EVENT added_function OF cl_salv_events
        IMPORTING e_salv_function.

    METHODS: on_link_click   FOR EVENT link_click OF
                  cl_salv_events_table
      IMPORTING row column.

ENDCLASS.                    "lcl_handle_events DEFINITION

*---------------------------------------------------------------------*
* #5.2 implement the events for handling the events of cl_salv_table
*---------------------------------------------------------------------*
CLASS lcl_handle_pop_std IMPLEMENTATION.
  METHOD on_user_command2.
    DATA:
      lr_selections  TYPE REF TO cl_salv_selections,

      lt_rows        TYPE salv_t_row,
      lv_row         TYPE i,
      lv_no_selected LIKE sy-tfill.

*   execute function
    CASE e_salv_function.
      WHEN 'CONTINUE'
        OR 'CONT'.                     "pressing ENTER behaves different, means RS_CUA_GET_STATUS returns UCOMM only 4 digts long
*       get selected line
        lr_selections = gs_popup_rec_std-go_alv->get_selections( ).
        lt_rows = lr_selections->get_selected_rows( ).
        DESCRIBE TABLE lt_rows LINES lv_no_selected.

        IF lv_no_selected IS INITIAL.
*         no selection made
          MESSAGE i323(zpp). "Seleccione una receta para continuar.
        ELSE.
          READ TABLE lt_rows INTO lv_row INDEX 1.
*         only valid lines
          IF lv_row IS NOT INITIAL.
*           get guid of selected line

            gs_popup_rec_std-go_alv->close_screen( ).

            TRY.
                g_rec_popup = gt_popup_rec_std[ lv_row ]-id_receta.
              CATCH cx_root .
                MESSAGE e324(zpp). "Receta no encontrada
            ENDTRY.
          ENDIF.
        ENDIF.

      WHEN 'CANC'.
*       leave popup
*       - (currently) not supported via code &AC1
        gs_popup_rec_std-go_alv->close_screen( ).
      WHEN 'CONS'.
        lr_selections = gs_popup_rec_std-go_alv->get_selections( ).
        lt_rows = lr_selections->get_selected_rows( ).
        DESCRIBE TABLE lt_rows LINES lv_no_selected.

        IF lv_no_selected IS INITIAL.
*         no selection made
          MESSAGE i323(zpp). "Seleccione una receta para continuar.
        ELSE.
          LOOP AT lt_rows INTO lv_row.
            PERFORM invocar_consulta_receta_std USING lv_row.
          ENDLOOP.
*         only valid lines
*          READ TABLE lt_rows INTO lv_row INDEX 1.
*          IF lv_row IS NOT INITIAL.
*            PERFORM invocar_consulta_receta_std USING lv_row.
*          ENDIF.
        ENDIF.

      WHEN OTHERS.
*       currently no further commands supported

    ENDCASE.

  ENDMETHOD.

  METHOD on_link_click.

    READ TABLE gt_popup_rec_std INTO DATA(ls) INDEX row.
    IF sy-subrc = 0.

      SET PARAMETER ID: 'ZID_RECETA' FIELD ls-id_receta,
                        'ZWERKS'     FIELD ls-werks.


      CALL TRANSACTION 'ZPP0049_CON_STD'.

*      CLEAR: ls-id_receta , ls-werks.
      SET PARAMETER ID: 'ZID_RECETA' FIELD space,
                        'ZWERKS'     FIELD space.
    ENDIF.

  ENDMETHOD.                    "on_link_click

ENDCLASS.
