*&---------------------------------------------------------------------*
*& Report  ZRPP0068
*& CMS 24-06-2020
*&---------------------------------------------------------------------*
*& Informe de desviación de recetas reales vs teóricas por rango de fechas
*&  Tx. ZPP0068
*&
*&---------------------------------------------------------------------*
REPORT zrpp0068.


INCLUDE zrpp0068_top.
INCLUDE zrpp0068_class.
INCLUDE zrpp0068_f01.
INCLUDE zrpp0068_status_0100o01.

INCLUDE zrpp0068_user_command_0100i01.

* Obtención del centro asociado al Usuario
INITIALIZATION.

  SELECT SINGLE parva FROM usr05
    INTO p_werks
    WHERE bname = sy-uname AND
          parid = 'WRK'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR s_rec-low.

*Se realizan las búsquedas y se anexan los valores a la tabla interna
  SELECT id_receta , z40~zcalidad , descrip , descrip_rec , fecha_ini , hora_ini , fecha_fin , hora_fin
     FROM ztpp0040 AS z40
      INNER JOIN ztpp0035 AS z35 ON z35~werks = z40~werks AND z35~zcalidad = z40~zcalidad
    INTO TABLE @DATA(it_recetasf4)
        WHERE z40~werks EQ @p_werks
        ORDER BY fecha_ini DESCENDING , hora_ini DESCENDING.

*Buscamos solo los que sean del país Perú (PE)

*Se hace uso de la función que convoca al matchcode y transforma nuestra tabla interna
  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'ID_RECETA'
      window_title    = 'Recetas MP'
      value_org       = 'S'
    TABLES
      value_tab       = it_recetasf4
      return_tab      = it_match
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.

  IF sy-subrc = 0.
    TRY.
        s_rec = VALUE #( sign = 'I' option = 'EQ' low = it_match[ 1 ]-fieldval ).
      CATCH cx_root .
        CLEAR s_rec.
    ENDTRY.
  ENDIF.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_lay06.
  PERFORM buscar_variante CHANGING p_lay06.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_cali.
*  PERFORM buscar_variante CHANGING p_lay06.
  PERFORM buscar_calidades  CHANGING p_cali.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR s_rec-high.

*Se realizan las búsquedas y se anexan los valores a la tabla interna
  SELECT id_receta , z40~zcalidad , descrip , descrip_rec , fecha_ini , hora_ini , fecha_fin , hora_fin
     FROM ztpp0040 AS z40
      INNER JOIN ztpp0035 AS z35 ON z35~werks = z40~werks AND z35~zcalidad = z40~zcalidad
    INTO TABLE @DATA(it_recetasf4)
        WHERE z40~werks EQ @p_werks
  ORDER BY fecha_ini DESCENDING , hora_ini DESCENDING.

*Se hace uso de la función que convoca al matchcode y transforma nuestra tabla interna
  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'ID_RECETA'
      window_title    = 'Recetas MP'
      value_org       = 'S'
    TABLES
      value_tab       = it_recetasf4
      return_tab      = it_match
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.

  IF sy-subrc = 0.
    TRY.
        s_rec = VALUE #( sign = 'I' option = 'EQ' high = it_match[ 1 ]-fieldval ).
      CATCH cx_root .
        CLEAR s_rec.
    ENDTRY.
  ENDIF.

AT SELECTION-SCREEN.
* Campo centro abierto, validación:
  IF p_werks <> '3000' AND p_werks <> '3020'.
    MESSAGE 'Seleccione un centro correcto' TYPE 'E' DISPLAY LIKE 'I'.
    RETURN.
  ENDIF.

  IF s_fec  IS INITIAL.
    MESSAGE 'Informar fecha lanzamiento a pulper.' TYPE 'E' DISPLAY LIKE 'I'.
    EXIT.
  ENDIF.

  IF p_cali  IS INITIAL.
    MESSAGE 'Informar calidad.' TYPE 'E' DISPLAY LIKE 'I'.
    EXIT.
  ENDIF.

START-OF-SELECTION.
  PERFORM obtener_datos.

END-OF-SELECTION.
  IF gt_datos IS NOT INITIAL.

    CALL SCREEN 0100.
  ELSE.
    MESSAGE |No se han encontrado datos| TYPE 'I'. "DISPLAY LIKE 'I'.
  ENDIF.
