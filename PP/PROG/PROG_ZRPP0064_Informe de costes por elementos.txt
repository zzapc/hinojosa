*&---------------------------------------------------------------------*
*& Report  ZRPP0064
*&
*&---------------------------------------------------------------------*
*& Informe de costes por elementos
*& CMS 31/01/2020
*&---------------------------------------------------------------------*
REPORT zrpp0064.

INCLUDE zrpp0064_class.

TABLES: mara.

TYPES: BEGIN OF ty_salida,
         matnr     TYPE matnr,
         mtart     TYPE mtart,
         matkl     TYPE matkl,
         zzgramaje TYPE zgramaje,
         zzancho   TYPE zancho,
         maktx     TYPE maktx,
         bwdat     TYPE bwdat, " Materia prima” = KST001
         kst001    TYPE kstel, " Materia prima” = KST001
         kst003    TYPE kstel, " Material auxiliar” = KST003
         kst005    TYPE kstel, " Máquina” = KST005
         kst007    TYPE kstel, " Mano de obra directa” = KST007
         kst009    TYPE kstel, " Indirectos” = KST009
         kst011    TYPE kstel, " Recargos” = KST0011
         kst013    TYPE kstel, " Recargos” = KST0011
         kst015    TYPE kstel, " Recargos” = KST0011
         kst017    TYPE kstel, " Recargos” = KST0011
         kst019    TYPE kstel, " Recargos” = KST0011
         kst021    TYPE kstel, " Recargos” = KST0011
         ktotal    TYPE kstel, " Total
       END OF ty_salida.

**  Elemento de coste 1 “Materia prima” = KST001
**•	Elemento de coste 2 “Material auxiliar” = KST003
**•	Elemento de coste 3 “Máquina” = KST005
**•	Elemento de coste 4 “Mano de obra directa” = KST007
**•	Elemento de coste 5 “Indirectos” = KST009
**•	Elemento de coste 6 “Recargos” = KST0011
**•	Elemento de coste 7 “Recargos” = KST0013
**•	Elemento de coste 8 “Recargos” = KST0015
**•	Elemento de coste 9 “Recargos” = KST0017
**•	Elemento de coste 10 “Recargos” = KST0019
**•	Elemento de coste 11 “Recargos” = KST0021


DATA: gt_salida TYPE STANDARD TABLE OF ty_salida.
DATA: g_error   TYPE flag.

DATA: "gt_datos TYPE ztpp_recetas_detalle_lotes,
  gr_alv  TYPE REF TO cl_salv_table,
  gt_rows TYPE salv_t_row,
  wa_rows TYPE int4.

*CLASS lcl_event_handler DEFINITION DEFERRED.

DATA: event_handler     TYPE REF TO lcl_event_handler.
DATA: gr_events         TYPE REF TO cl_salv_events_table.
DATA: gr_functions      TYPE REF TO cl_salv_functions.
DATA: gr_selections     TYPE REF TO cl_salv_selections.
DATA: key TYPE salv_s_layout_key.


SELECTION-SCREEN BEGIN OF BLOCK b4 WITH FRAME TITLE text-003.
SELECTION-SCREEN SKIP 1.
PARAMETER: p_werks LIKE ztpp0041-werks. "Centro

SELECT-OPTIONS: s_matkl FOR mara-matkl. " obligatory.
SELECT-OPTIONS: s_matnr FOR mara-matnr. " obligatory.

PARAMETER: p_fecha  TYPE datum.

*SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN END OF BLOCK b4.

SELECTION-SCREEN BEGIN OF BLOCK b2.
PARAMETER:
p_lay06 LIKE disvariant-variant.

SELECTION-SCREEN END OF BLOCK b2.


AT SELECTION-SCREEN.

  IF p_werks IS INITIAL.
    MESSAGE 'Obligatorio informar centro' TYPE 'E'.
    RETURN.
  ENDIF.

  IF s_matkl IS INITIAL AND s_matnr IS INITIAL.
    MESSAGE 'Obligatorio informar material o grupo de artículos' TYPE 'E'.
    RETURN.
  ENDIF.

  IF p_fecha IS INITIAL.
    MESSAGE 'Obligatorio informar Fecha de costes' TYPE 'E'.
    RETURN.

  ENDIF.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_lay06.
  PERFORM buscar_variante CHANGING p_lay06.

START-OF-SELECTION.
  PERFORM obtener_datos.
  CHECK g_error = ' '.
*END-OF-SELECTION.
  PERFORM mostrar_datos.



FORM obtener_datos.

*         mtart  type mtart,
*         matkl  type matkl,
*         ZZCALIDAD  type ZCALIDAD,
*         ZZGRAMAJE  type ZGRAMAJE,
*         ZZancho  type Zancho,


* Filtro materiales según selección de material y grupo de artículos.
  SELECT m~matnr   , t~maktx   , mtart , matkl ,
         zzcalidad , zzgramaje , zzancho INTO TABLE @DATA(lt_mat)
    FROM mara AS m
    INNER JOIN makt AS t ON m~matnr = t~matnr
    INNER JOIN marc AS c ON m~matnr = c~matnr
    WHERE m~matnr IN @s_matnr  AND
          m~matkl IN @s_matkl  AND
          t~spras =  @sy-langu AND
          c~werks =  @p_werks  AND
          c~lvorm =  ' '       AND
          c~ncost =  ' '.


  IF lt_mat[] IS INITIAL.

    MESSAGE |No se han encontrado materiales para la selección de material/grupo de artículo| TYPE 'I' .
    g_error = 'X'.
    EXIT.
  ENDIF.

* Con los materiales seleccionados en lt_mat buscamos la cabecera de costes
* y sus correspondientes registros de detalle.
* 67603 - 20/07/2021 - CMS - Ampliación de campos de costes
  SELECT k~matnr , k~bwdat , h~kst001 , h~kst003 , h~kst005 , h~kst007 , h~kst009 , h~kst011 , h~kst013 , h~kst015 , h~kst017 , h~kst019 , h~kst021
    INTO CORRESPONDING FIELDS OF TABLE @gt_salida
    FROM keko AS k
    INNER JOIN keph AS h ON k~kalnr = h~kalnr AND
                            k~kadky = h~kadky
    FOR ALL ENTRIES IN @lt_mat
    WHERE werks   = @p_werks        AND
          matnr   = @lt_mat-matnr AND
          kadat   <= @p_fecha     AND
          bidat   >= @p_fecha     AND
          feh_sta = 'FR'          AND
          kkzst   = ' '.

  LOOP AT gt_salida ASSIGNING FIELD-SYMBOL(<fs_salida>).

    TRY.
        DATA(ls_mat) = lt_mat[ matnr = <fs_salida>-matnr ].
*        data(ls_mat) = lt_mat[ matnr = <fs_salida>-matnr ]-maktx.
        MOVE-CORRESPONDING ls_mat TO <fs_salida>.
*        <fs_salida>-maktx = lt_mat[ matnr = <fs_salida>-matnr ]-maktx.
        <fs_salida>-ktotal = <fs_salida>-kst001 +
                             <fs_salida>-kst003 +
                             <fs_salida>-kst005 +
                             <fs_salida>-kst007 +
                             <fs_salida>-kst009 +
                             <fs_salida>-kst011 +
                             <fs_salida>-kst013 +
                             <fs_salida>-kst015 +
                             <fs_salida>-kst017 +
                             <fs_salida>-kst019 +
                             <fs_salida>-kst021.
      CATCH cx_root .
    ENDTRY.

  ENDLOOP.

ENDFORM.


FORM mostrar_datos.

  DATA: lr_functions TYPE REF TO cl_salv_functions_list,
        lo_column2   TYPE REF TO cl_salv_column_table,
        lo_column    TYPE REF TO cl_salv_column,
        lo_columns   TYPE REF TO cl_salv_columns_table.

  TRY.
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = gr_alv
        CHANGING
          t_table      = gt_salida ).
    CATCH cx_salv_msg.                                  "#EC NO_HANDLER
  ENDTRY.

*  gr_alv->set_screen_status(
*    pfstatus      =  'SALV_STANDARD'
*    report        =  'ZRPP0054'
*    set_functions = gr_alv->c_functions_all ) .

  DATA(gr_layout) = gr_alv->get_layout( ).
  key-report = sy-repid.
  gr_layout->set_key( key ).
  gr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
  gr_layout->set_default( abap_true ).
  gr_layout->set_initial_layout( p_lay06 ).



  lo_columns = gr_alv->get_columns( ).

  TRY.
*      lo_column2 ?= lo_columns->get_column( 'MATNR' ).
*      lo_column2->set_cell_type( if_salv_c_cell_type=>hotspot ).

      lo_column ?= lo_columns->get_column( 'MATNR' ).
      lo_column->set_short_text( 'Material' ).
      lo_column->set_medium_text( 'Material' ).
      lo_column->set_long_text( 'Material' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'MAKTX' ).
      lo_column->set_short_text( 'Desc.Mat.' ).
      lo_column->set_medium_text( 'Desc. Material' ).
      lo_column->set_long_text( 'Descripción de Material' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'BWDAT' ).
      lo_column->set_short_text( 'F.valorac.' ).
      lo_column->set_medium_text( 'Fecha valoración' ).
      lo_column->set_long_text( 'Fecha valoración' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST001' ).
      lo_column->set_short_text( 'MPR' ).
      lo_column->set_medium_text( 'Materia prima' ).
      lo_column->set_long_text( 'Materia prima' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST003' ).
      lo_column->set_short_text( 'AUX' ).
      lo_column->set_medium_text( 'Materiales auxiliar.' ).
      lo_column->set_long_text( 'Materiales auxiliares' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'KST005' ).
      lo_column->set_short_text( 'MAQ' ).
      lo_column->set_medium_text( 'Horas máquina' ).
      lo_column->set_long_text( 'Horas máquina' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST007' ).
      lo_column->set_short_text( 'MOD' ).
      lo_column->set_medium_text( 'Mano de obra directa' ).
      lo_column->set_long_text( 'Mano de obra directa' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'KST009' ).
      lo_column->set_short_text( 'ENE' ).
      lo_column->set_medium_text( 'Energía' ).
      lo_column->set_long_text( 'Energía' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST011' ).
      lo_column->set_short_text( 'DEP' ).
      lo_column->set_medium_text( 'Depuradora' ).
      lo_column->set_long_text( 'Depuradora' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST013' ).
      lo_column->set_short_text( 'RES' ).
      lo_column->set_medium_text( 'Residuos' ).
      lo_column->set_long_text( 'Residuos' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST015' ).
      lo_column->set_short_text( 'VAP' ).
      lo_column->set_medium_text( 'Vapor' ).
      lo_column->set_long_text( 'Vapor' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST017' ).
      lo_column->set_short_text( 'IND' ).
      lo_column->set_medium_text( 'Indirectos' ).
      lo_column->set_long_text( 'Indirectos' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST019' ).
      lo_column->set_short_text( 'CPR' ).
      lo_column->set_medium_text( 'Consumibles de prod.' ).
      lo_column->set_long_text( 'Consumibles de producción' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KST021' ).
      lo_column->set_short_text( 'AMO' ).
      lo_column->set_medium_text( 'Amortización' ).
      lo_column->set_long_text( 'Amortización' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'KTOTAL' ).
      lo_column->set_short_text( 'Total' ).
      lo_column->set_medium_text( 'Total' ).
      lo_column->set_long_text( 'Total' ).
    CATCH cx_root .
  ENDTRY.

*  gr_column ?= gr_columns->get_column( 'ZICON_OBSERVA' ).
*  gr_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
*  gr_column->set_alignment( if_salv_c_alignment=>right ).

*-- events
  gr_events = gr_alv->get_event( ).
  CREATE OBJECT event_handler.
  SET HANDLER event_handler->on_user_command FOR gr_events.
*  SET HANDLER event_handler->on_link_click FOR gr_events.

**... §3.1 activate ALV generic Functions
  lr_functions = gr_alv->get_functions( ).
  lr_functions->set_all( 'X' ).

*-- Selection
*  gr_selections = gr_alv->get_selections( ).
*  gr_selections->set_selection_mode(
*                     if_salv_c_selection_mode=>row_column ).

  DATA:   lo_cols_tab TYPE REF TO cl_salv_columns_table.

  lo_cols_tab = gr_alv->get_columns( ).
  lo_cols_tab->set_optimize( ).
*  TRY.
*      lo_cols_tab->set_color_column( 'COLOR' ).
*
*    CATCH cx_salv_data_error.                           "#EC NO_HANDLER
*  ENDTRY.


  gr_alv->display( ).

ENDFORM.

FORM buscar_variante  CHANGING p_vari TYPE disvariant-variant.

  DATA: ls_variant TYPE disvariant,
        l_exit     TYPE char1.

  ls_variant-report = sy-repid.

  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
    EXPORTING
      is_variant = ls_variant
      i_save     = 'A'
*     it_default_fieldcat =
    IMPORTING
      e_exit     = l_exit
      es_variant = ls_variant
    EXCEPTIONS
      not_found  = 2.
  IF sy-subrc = 2.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF l_exit EQ space.
      p_vari = ls_variant-variant.
    ENDIF.
  ENDIF.

ENDFORM.                    " BUSCAR_VARIANTE
