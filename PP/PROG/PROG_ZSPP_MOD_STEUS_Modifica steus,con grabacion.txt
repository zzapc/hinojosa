*&---------------------------------------------------------------------*
*& Report  ZSPP_MOD_STEUS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zspp_mod_steus.

INCLUDE zincbatc.
DATA gt_messtab TYPE TABLE OF bdcmsgcoll.
DATA gt_return TYPE TABLE OF bapiret2.

DATA lv_auf_op(16) TYPE c. "Concatenación de OF + VORNR CON CEROS!!!
PARAMETERS p_modo TYPE c DEFAULT 'E' OBLIGATORY.
SELECT-OPTIONS so_auf FOR lv_auf_op NO INTERVALS OBLIGATORY.

START-OF-SELECTION.

  CHECK so_auf[] IS NOT INITIAL.
  DATA: lv_aufnr TYPE aufnr,
        lv_vornr TYPE vornr.

  CLEAR: gt_messtab[], gt_messtab.

  LOOP AT so_auf INTO DATA(wa_auf).

    SELECT SINGLE aufnr, vornr
      INTO @DATA(wa_valors)
      FROM afko AS t1 INNER JOIN afvc AS t2 ON t1~plnnr EQ t2~plnnr
      WHERE aufnr EQ @wa_auf-low(12)
      AND vornr EQ @wa_auf-low+12(4).

    IF sy-subrc <> 0.
      MESSAGE e398(00) WITH 'No existe la orden/op' wa_auf-low(12) '/' wa_auf-low+12(4).
      EXIT.
    ENDIF.

    lv_aufnr = wa_auf-low(12).
    lv_vornr = wa_auf-low+12(4).

    CLEAR: bdc_tab, bdc_tab[].
    CLEAR: messtab[], messtab.

    PERFORM bdc_dynpro      USING 'SAPLCOKO1' '0110'.

    PERFORM bdc_field       USING 'BDC_CURSOR' 'CAUFVD-AUFNR'.
    PERFORM bdc_field       USING 'BDC_OKCODE' '/00'.
    PERFORM bdc_field       USING 'CAUFVD-AUFNR' lv_aufnr.
    PERFORM bdc_dynpro      USING 'SAPLCOKO1' '0115'.

    PERFORM bdc_field       USING 'BDC_OKCODE' '=VGUE'.
    PERFORM bdc_dynpro      USING 'SAPLCOVG' '0100'.

    PERFORM bdc_field       USING 'BDC_CURSOR' 'AFVGD-VORNR(01)'.
    PERFORM bdc_field       USING 'BDC_OKCODE' '=AUFS'.
    PERFORM bdc_dynpro      USING 'SAPLCO05' '0100'.

    PERFORM bdc_field       USING 'BDC_CURSOR' 'RCOSU-VORNR'.
    PERFORM bdc_field       USING 'BDC_OKCODE' '=MORE'.
    PERFORM bdc_field       USING 'RCOSU-VORNR' lv_vornr.
    PERFORM bdc_dynpro      USING 'SAPLCOVG' '0100'.

    PERFORM bdc_field       USING 'BDC_CURSOR' 'AFVGD-STEUS(01)'.
    PERFORM bdc_field       USING 'BDC_OKCODE' '=BU'.
    PERFORM bdc_field       USING 'AFVGD-STEUS(01)' 'PP03'.

    CALL TRANSACTION 'CO02' USING  bdc_tab
                            MODE   p_modo
                            UPDATE 'S'
                            MESSAGES INTO messtab.

  ENDLOOP.

  IF gt_messtab[] IS NOT INITIAL.

    CALL FUNCTION 'CCONVERT_BDCMSGCOLL_TO_BAPIRET2'
      TABLES
        imt_bdcmsgcoll = gt_messtab    " Collecting Messages in the SAP System
        ext_return     = gt_return.    " Return Parameter(s)

    CALL FUNCTION 'ZSBC_VENTANA_LOGSBAPI'
      EXPORTING
        mensajes = gt_return.
  ELSE.
    MESSAGE s398(00) WITH 'Proceso finalizado sin errores'.
  ENDIF.
