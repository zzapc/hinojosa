*&---------------------------------------------------------------------*
*&  Include           ZRPP0033_CLASS
*&---------------------------------------------------------------------*

************************************************
* dynpro 100
************************************************

CLASS lcl_application_100 DEFINITION.

  PUBLIC SECTION.
    METHODS handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.


*   Evento para detectar accion botonera
    METHODS handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.


*   Evento para navegar
    METHODS handle_hotspot_click
                  FOR EVENT hotspot_click OF cl_gui_alv_grid
      IMPORTING e_row_id e_column_id es_row_no.


ENDCLASS.



CLASS lcl_application_100  IMPLEMENTATION.

  METHOD handle_toolbar.
    CLEAR gs_toolbar_100.
    MOVE  'DETALLE'                   TO gs_toolbar_100-function.
    MOVE  text-001                    TO gs_toolbar_100-quickinfo.
    MOVE  text-001                    TO gs_toolbar_100-text.
    MOVE space                        TO gs_toolbar_100-disabled.
    APPEND gs_toolbar_100             TO e_object->mt_toolbar.


    CLEAR gs_toolbar_100.
    MOVE  'CREAR_ORDEN'               TO gs_toolbar_100-function.
    MOVE  text-002                    TO gs_toolbar_100-quickinfo.
    MOVE  text-002                    TO gs_toolbar_100-text.
    MOVE space                        TO gs_toolbar_100-disabled.
    APPEND gs_toolbar_100             TO e_object->mt_toolbar.


  ENDMETHOD.


*&---------------------------------------------------------------------*
*         METHOD handle_user_command
*----------------------------------------------------------------------*
  METHOD handle_user_command.

    DATA: index_rows       TYPE         lvc_t_row,
          lt_sel_rows      TYPE         lvc_t_roid,
          ls_selected_line LIKE LINE OF lt_sel_rows.

    DATA: lv_error TYPE xfeld.
    DATA: lv_extnumber TYPE balnrext.
    DATA: num_reg TYPE sy-tabix.
    DATA: lv_answer    TYPE c.
    DATA: lv_obsoletos TYPE xfeld,
          lv_cant_zplp TYPE cs_e_mnglg.

    CASE e_ucomm.
      WHEN 'DETALLE'.
        CALL METHOD gr_grid_100->get_selected_rows(
          IMPORTING
            et_row_no     = lt_sel_rows
            et_index_rows = index_rows ).

        CALL METHOD cl_gui_cfw=>flush.

        DESCRIBE TABLE lt_sel_rows LINES num_reg.
        IF num_reg > 1.
          MESSAGE i000(0k) WITH text-023. "Seleccione un único pedido para ver su detalle

        ELSE.
          READ TABLE lt_sel_rows INTO ls_selected_line INDEX 1.
          READ TABLE gt_datos_pedidos INTO wa_datos_pedidos INDEX ls_selected_line-row_id.

          IF wa_datos_pedidos-pte_decision <> ''.
            LEAVE TO SCREEN 200.
          ELSEIF wa_datos_pedidos-orden_zpmp IS NOT INITIAL OR  wa_datos_pedidos-orden_zplp IS NOT INITIAL.
            MESSAGE i000(0k) WITH text-024. "El pedido ya ha sido tratado.
          ELSE.
            MESSAGE i000(0k) WITH text-018 text-019. "La orden seleccionada no tiene detalle para mostrar.
            "Si lo desea, puede crear la orden.
          ENDIF.
        ENDIF.

      WHEN 'CREAR_ORDEN'.
        CALL METHOD gr_grid_100->get_selected_rows(
          IMPORTING
            et_row_no     = lt_sel_rows
            et_index_rows = index_rows ).

        CALL METHOD cl_gui_cfw=>flush.

        LOOP AT lt_sel_rows INTO ls_selected_line.
          READ TABLE gt_datos_pedidos INTO wa_datos_pedidos INDEX ls_selected_line-row_id.

          CHECK wa_datos_pedidos-cubierto_lotes IS INITIAL.

          IF wa_datos_pedidos-pte_decision IS INITIAL.
            PERFORM crea_orden USING gt_sel_100
                               CHANGING wa_datos_pedidos
                                        lv_obsoletos
                                        lv_cant_zplp
                                        gt_messages.

          ELSE.
            CALL FUNCTION 'POPUP_TO_CONFIRM'
              EXPORTING
                titlebar              = text-022 "Confirmación creación orden
*               DIAGNOSE_OBJECT       = ' '
                text_question         = text-032 "Existencia de obsoletos, aún así, ¿quiere continuar con la creación de la orden?
                text_button_1         = 'Sí'(033)
*               ICON_BUTTON_1         = ' '
                text_button_2         = 'No'(034)
*               ICON_BUTTON_2         = ' '
                default_button        = '2'
                display_cancel_button = ''
*               USERDEFINED_F1_HELP   = ' '
*               START_COLUMN          = 25
*               START_ROW             = 6
*               POPUP_TYPE            =
*               IV_QUICKINFO_BUTTON_1 = ' '
*               IV_QUICKINFO_BUTTON_2 = ' '
              IMPORTING
                answer                = lv_answer
*           TABLES
*               parameter             = lt_param
              EXCEPTIONS
                text_not_found        = 1
                OTHERS                = 2.
            IF sy-subrc <> 0.
*           Implement suitable error handling here
            ENDIF.

            IF lv_answer IS INITIAL OR lv_answer = '1'.
*             cambiamos el tratamiento para que cree las órdenes del ZPMP y del ZPLP sin más.
              wa_datos_pedidos-obsoletos_zpmp = ''.
              wa_datos_pedidos-obsoletos_zplp = ''.

              PERFORM crea_orden USING gt_sel_100
                                 CHANGING wa_datos_pedidos
                                          lv_obsoletos
                                          lv_cant_zplp
                                          gt_messages.
            ENDIF.
          ENDIF.

          " ins - cvivo - 60914
          IF wa_datos_pedidos-orden_zplp IS NOT INITIAL AND wa_datos_pedidos-verid IS INITIAL.
            SELECT SINGLE mkal~verid mkal~text1 FROM mkal
            INNER JOIN afpo
            ON afpo~verid EQ mkal~verid
            AND afpo~matnr EQ mkal~matnr
            INTO (wa_datos_pedidos-verid, wa_datos_pedidos-text1 )
            WHERE afpo~aufnr EQ wa_datos_pedidos-orden_zplp.
          ENDIF.

          MODIFY gt_datos_pedidos FROM wa_datos_pedidos INDEX ls_selected_line-row_id.
        ENDLOOP.

        LEAVE TO SCREEN '0100'.

      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.

* Para navegar
  METHOD handle_hotspot_click.
    DATA: index_rows       TYPE         lvc_t_row,
          lt_sel_rows      TYPE         lvc_t_roid,
          ls_selected_line LIKE LINE OF lt_sel_rows.

    READ TABLE gt_datos_pedidos INDEX es_row_no-row_id INTO  wa_datos_pedidos.
    IF sy-subrc = 0.

      CASE e_column_id.
        WHEN 'VBELN'.
          IF wa_datos_pedidos-vbeln IS NOT INITIAL.
            IF wa_datos_pedidos-tipo = 'PV'.
              FREE MEMORY ID 'AUN'.
              SET PARAMETER ID 'AUN' FIELD wa_datos_pedidos-vbeln.
              CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN.
            ELSE.
              FREE MEMORY ID 'BES'.
              SET PARAMETER ID 'BES' FIELD wa_datos_pedidos-vbeln.
              CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.
            ENDIF.
          ENDIF.

        WHEN 'ORDEN_ZPMP'.
          IF wa_datos_pedidos-orden_zpmp IS NOT INITIAL.
            FREE MEMORY ID 'BR1'.
            SET PARAMETER ID 'BR1' FIELD wa_datos_pedidos-orden_zpmp.
            CALL TRANSACTION 'COR3' AND SKIP FIRST SCREEN.
          ENDIF.

        WHEN 'ORDEN_ZPLP'.
          IF wa_datos_pedidos-orden_zplp IS NOT INITIAL.
            FREE MEMORY ID 'BR1'.
            SET PARAMETER ID 'BR1' FIELD wa_datos_pedidos-orden_zplp.
            CALL TRANSACTION 'COR3' AND SKIP FIRST SCREEN.
          ENDIF.

      ENDCASE.
    ENDIF.

  ENDMETHOD.                    "handle_hotspot_click

ENDCLASS.







***********************************************
* dynpro 200
************************************************

CLASS lcl_application_pmp DEFINITION.

  PUBLIC SECTION.
    METHODS handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.


*   Evento para detectar accion botonera
    METHODS handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.


*   Evento para actualizar los datos antes de que se modifique la tabla
    METHODS handle_data_changed
                  FOR EVENT data_changed OF cl_gui_alv_grid
      IMPORTING er_data_changed e_onf4
                  e_onf4_before e_onf4_after e_ucomm.
ENDCLASS.



CLASS lcl_application_pmp  IMPLEMENTATION.

  METHOD handle_toolbar.
    IF gt_obsoletos_pmp[] IS NOT INITIAL.
      IF ( wa_datos_pedidos-obsoletos_zpmp = 'X' AND wa_datos_pedidos-obsoletos_zplp = '' ) OR
         ( wa_datos_pedidos-obsoletos_zpmp = 'X' AND wa_datos_pedidos-obsoletos_zplp = 'X' AND
           wa_datos_pedidos-orden_zpmp IS INITIAL ).

        CLEAR gs_toolbar_pmp.
        MOVE  'CREARORDEN'               TO gs_toolbar_pmp-function.
        MOVE  text-002                   TO gs_toolbar_pmp-quickinfo.
        MOVE  text-002                   TO gs_toolbar_pmp-text.
        MOVE space                       TO gs_toolbar_pmp-disabled.
        APPEND gs_toolbar_pmp            TO e_object->mt_toolbar.
      ENDIF.
    ENDIF.

  ENDMETHOD.


*&---------------------------------------------------------------------*
*         METHOD handle_user_command
*----------------------------------------------------------------------*
  METHOD handle_user_command.

    DATA: index_rows       TYPE         lvc_t_row,
          lt_sel_rows      TYPE         lvc_t_roid,
          ls_selected_line LIKE LINE OF lt_sel_rows.

    DATA: lv_error TYPE xfeld.
    DATA: lv_extnumber TYPE balnrext.
    DATA: num_reg TYPE sy-tabix.
    DATA: lv_orden_zpmp TYPE  plnum,
          lv_orden_zplp TYPE  plnum.

    DATA: lv_cant_orden TYPE wmeng,
          lv_zplp       TYPE matnr.

    DATA: lv_obsoletos TYPE xfeld,
          lv_cant_zplp TYPE cs_e_mnglg.

    DATA: wa_datos TYPE zsrpp0033.

    CASE e_ucomm.
      WHEN 'CREARORDEN'.
        PERFORM crea_orden USING gt_sel_zpmp
                           CHANGING wa_datos_pedidos
                                    lv_obsoletos
                                    lv_cant_zplp
                                    gt_messages.

        CHECK gt_messages[] IS INITIAL.

        READ TABLE gt_datos_pedidos INTO wa_datos WITH KEY vbeln = wa_datos_pedidos-vbeln
                                                           posnr = wa_datos_pedidos-posnr.

        MODIFY gt_datos_pedidos FROM wa_datos_pedidos INDEX sy-tabix.

        IF lv_obsoletos = 'X'. "recalcular obsoletos en funcion de la cantidad de la orden del ZPMP
          wa_datos_pedidos-cant_zplp = lv_cant_zplp.

*         como ya se ha creado la orden del ZPMP, eliminamos los registros de los obsoletos para que el botón de
*         crear orden en el alv del obsoleto del ZPMP no aparezca.
          CLEAR: gt_obsoletos_pmp.
          REFRESH: gt_obsoletos_pmp.

        ELSE.
          LEAVE TO SCREEN '0100'.
        ENDIF.
    ENDCASE.

  ENDMETHOD.


* cuando se modifica el campo de selección del registro de obsoletos
  METHOD handle_data_changed.
    PERFORM f_get_modified_rows USING er_data_changed.

  ENDMETHOD.                    "handle_hotspot_click

ENDCLASS.






CLASS lcl_application_plp DEFINITION.

  PUBLIC SECTION.
    METHODS handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.


*   Evento para detectar accion botonera
    METHODS handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.


*   Evento para actualizar los datos antes de que se modifique la tabla
    METHODS handle_data_changed
                  FOR EVENT data_changed OF cl_gui_alv_grid
      IMPORTING er_data_changed e_onf4
                  e_onf4_before e_onf4_after e_ucomm.
ENDCLASS.



CLASS lcl_application_plp IMPLEMENTATION.

  METHOD handle_toolbar.

    IF gt_obsoletos_plp[] IS NOT INITIAL.
      IF ( wa_datos_pedidos-obsoletos_zpmp = ' ' AND wa_datos_pedidos-obsoletos_zplp = 'X' ) OR
         ( wa_datos_pedidos-obsoletos_zpmp = 'X' AND wa_datos_pedidos-obsoletos_zplp = 'X' AND
           wa_datos_pedidos-orden_zpmp IS NOT INITIAL ).
        CLEAR gs_toolbar_plp.
        MOVE  'CREARORDEN'               TO gs_toolbar_plp-function.
        MOVE  text-002                   TO gs_toolbar_plp-quickinfo.
        MOVE  text-002                   TO gs_toolbar_plp-text.
        MOVE space                       TO gs_toolbar_plp-disabled.
        APPEND gs_toolbar_plp            TO e_object->mt_toolbar.
      ENDIF.
    ENDIF.

  ENDMETHOD.


*&---------------------------------------------------------------------*
*         METHOD handle_user_command
*----------------------------------------------------------------------*
  METHOD handle_user_command.

    DATA: wa_datos     TYPE zsrpp0033,
          lv_obsoletos TYPE xfeld,
          lv_cant_zplp TYPE cs_e_mnglg.

    CASE e_ucomm.
      WHEN 'CREARORDEN'.
        IF ( wa_datos_pedidos-obsoletos_zpmp = ' ' AND wa_datos_pedidos-obsoletos_zplp = 'X' ).
          PERFORM crea_orden USING gt_sel_zplp
                             CHANGING wa_datos_pedidos
                                      lv_obsoletos
                                      lv_cant_zplp
                                      gt_messages.

          CHECK gt_messages[] IS INITIAL.

          READ TABLE gt_datos_pedidos INTO wa_datos WITH KEY vbeln = wa_datos_pedidos-vbeln
                                                             posnr = wa_datos_pedidos-posnr.
          MODIFY gt_datos_pedidos FROM wa_datos_pedidos INDEX sy-tabix.

          IF lv_obsoletos = 'X'. "recalcular obsoletos en funcion de la cantidad de la orden del ZPMP
            wa_datos_pedidos-cant_zplp = lv_cant_zplp.
          ENDIF.

          LEAVE TO SCREEN '0100'.

        ELSEIF ( wa_datos_pedidos-obsoletos_zpmp = 'X' AND wa_datos_pedidos-obsoletos_zplp = 'X' ).
          IF wa_datos_pedidos-orden_zpmp IS NOT INITIAL.
            wa_datos_pedidos-obsoletos_zpmp = ''.
            wa_datos_pedidos-obsoletos_zplp = 'X'.
            wa_datos_pedidos-cubierto_lotes = ''.
            wa_datos_pedidos-reconvertido = 'X'.

            PERFORM crea_orden USING gt_sel_zplp
                               CHANGING wa_datos_pedidos
                                        lv_obsoletos
                                        lv_cant_zplp
                                        gt_messages.

            CHECK gt_messages[] IS INITIAL.

            READ TABLE gt_datos_pedidos INTO wa_datos WITH KEY vbeln = wa_datos_pedidos-vbeln
                                                               posnr = wa_datos_pedidos-posnr.
            MODIFY gt_datos_pedidos FROM wa_datos_pedidos INDEX sy-tabix.

            LEAVE TO SCREEN '0100'.
          ENDIF.
        ENDIF.


      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.


* cuando se modifica el campo de selección del registro de obsoletos
  METHOD handle_data_changed.
    PERFORM f_get_modified_rows_plp USING er_data_changed.

  ENDMETHOD.                    "handle_hotspot_click

ENDCLASS.
