*&---------------------------------------------------------------------*
*&  Include           ZRPP0054_FORMS
*&---------------------------------------------------------------------*

FORM f_refresh.

  DATA: lt_ztpp0009 TYPE STANDARD TABLE OF ztpp0009.

  CLEAR lt_ztpp0009[].

  CALL METHOD zcl_secuenciador=>obtener_datos_sequenciador_30v
    EXPORTING
      i_werks     = p_werks
    IMPORTING
      ot_ztpp0009 = lt_ztpp0009.

  gt_ztpp0009[] = CORRESPONDING #( lt_ztpp0009 ).

  PERFORM set_colors.

  gr_alv->refresh( ).
  cl_gui_cfw=>flush( ).

ENDFORM.

FORM get_default_layout "using i_restrict type salv_de_layout_restriction
                     CHANGING c_layout TYPE disvariant-variant.

  DATA: ls_layout TYPE salv_s_layout_info,
        ls_key    TYPE salv_s_layout_key.

  ls_key-report = sy-repid.

  ls_layout = cl_salv_layout_service=>get_default_layout(
    s_key    = ls_key
*    restrict = i_restrict
     ).

  c_layout = ls_layout-layout.

ENDFORM.                    " get_default_layout

FORM f4_layouts USING i_restrict TYPE salv_de_layout_restriction
             CHANGING c_layout TYPE disvariant-variant.

  DATA: ls_layout TYPE salv_s_layout_info,
        ls_key    TYPE salv_s_layout_key.

  ls_key-report = sy-repid.

  ls_layout = cl_salv_layout_service=>f4_layouts(
    s_key    = ls_key
    restrict = i_restrict ).

  c_layout = ls_layout-layout.

ENDFORM.                    " f4_layouts

FORM visualizar_zpp0004.
  DATA:    lr_datum        TYPE trgr_date.
  DATA:    lr_aufnr        TYPE RANGE OF aufnr.

  CLEAR gt_rows[].
  gt_rows = gr_selections->get_selected_rows( ).

* Se debe haber seleccionado sólo un registro.
  IF lines( gt_rows ) <> 1.
    MESSAGE e298(zpp).
  ENDIF.

  CALL METHOD zcl_secuenciador=>obtener_of_bobina
    EXPORTING
      i_aufnr_rollo   = gt_ztpp0009[ gt_rows[ 1 ] ]-aufnr
    IMPORTING
      ot_aufnr_bobina = DATA(ls_of_bobinas).

  lr_datum  = VALUE #( ( sign = 'I' option = 'BT'  low = '20190101' high = '99991231' ) ).

  lr_aufnr = VALUE #( FOR <ls_itab> IN ls_of_bobinas ( sign = 'I' option = 'EQ' low = <ls_itab>-aufnr ) ).

  SUBMIT zrpp0014_bis
    WITH pwerks EQ p_werks
    WITH sbudat EQ lr_datum
    WITH saufnr IN lr_aufnr
    WITH pvari  EQ '/NETA_SECDOR'
    AND RETURN.


ENDFORM.

FORM set_colors.

  DATA: gs_colinfo TYPE LINE OF lvc_t_scol.

  INCLUDE <color>.

  LOOP AT gt_ztpp0009 ASSIGNING FIELD-SYMBOL(<fs_datos>).

* Si kg.fabricados > kg.notificados, pintamos de rojo AUFNR
    DELETE <fs_datos>-color WHERE fname = 'NUM_FABR' OR
                                  fname = 'KG_FABRICACION'.
    IF <fs_datos>-gamng < <fs_datos>-kg_fabricados.
      CLEAR gs_colinfo.
      PERFORM colorear_celda USING 'AUFNR' '6'
                            CHANGING gs_colinfo.
      APPEND gs_colinfo TO <fs_datos>-color.
    ENDIF.

* Pintamos amarillo ordenes desdobladas.
    DELETE <fs_datos>-color WHERE fname = 'NUM_FABR' OR
                                  fname = 'KG_FABRICACION'.

    IF <fs_datos>-num_fabr > 0 AND
       <fs_datos>-num_fabr < 100.
      CLEAR gs_colinfo.
      PERFORM colorear_celda USING 'NUM_FABR' '5'
                            CHANGING gs_colinfo.
      APPEND gs_colinfo TO <fs_datos>-color.
      PERFORM colorear_celda USING 'KG_FABRICACION' '5'
                           CHANGING gs_colinfo.

      APPEND gs_colinfo TO <fs_datos>-color.

    ELSEIF <fs_datos>-num_fabr > 99.
      CLEAR gs_colinfo.
      PERFORM colorear_celda USING 'NUM_FABR' '3'
                            CHANGING gs_colinfo.
      APPEND gs_colinfo TO <fs_datos>-color.
      PERFORM colorear_celda USING 'KG_FABRICACION' '3'
                           CHANGING gs_colinfo.

      APPEND gs_colinfo TO <fs_datos>-color.
    ENDIF.


  ENDLOOP.

ENDFORM.

FORM colorear_celda  USING    p_columna    TYPE lvc_fname
                             p_color      TYPE int1
                    CHANGING ls_cellcolor TYPE lvc_s_scol.

  CLEAR ls_cellcolor.
  ls_cellcolor-fname = p_columna.
  ls_cellcolor-color-col = p_color.
  ls_cellcolor-color-int = '0'.

ENDFORM.
