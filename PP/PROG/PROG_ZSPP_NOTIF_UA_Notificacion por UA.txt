*&---------------------------------------------------------------------*
*& Report  ZSPP_NOTIF_UA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zspp_notif_ua.

DATA lv_ua TYPE ablad.
DATA lv_aufnr TYPE aufnr.

SELECT-OPTIONS so_ua FOR lv_ua.
SELECT-OPTIONS so_aufnr FOR lv_aufnr.

START-OF-SELECTION.


  SELECT DISTINCT t1~aufnr, ablad, t3~rueck, t3~rmzhl
    INTO TABLE @DATA(it_datos)
    FROM mseg AS t1 INNER JOIN afwi AS t2 ON t1~mblnr = t2~mblnr AND t1~mjahr = t2~mjahr AND t1~zeile = t2~mblpo
    INNER JOIN afru AS t3 ON t2~rueck = t3~rueck AND t2~rmzhl = t3~rmzhl
    WHERE ablad IN @so_ua
    AND bwart EQ '101'
    AND t1~aufnr IN @so_aufnr.

  PERFORM show_alv USING it_datos 'Nº de notificación por UA'.

FORM show_alv USING it_datos TYPE STANDARD TABLE
                  VALUE(i_title) TYPE lvc_title.

  DATA: l_alv_table   TYPE REF TO cl_salv_table.
  DATA: l_layout      TYPE REF TO cl_salv_layout.
  DATA: key           TYPE salv_s_layout_key.
  DATA: lr_selections TYPE REF TO cl_salv_selections.
  DATA: lo_display    TYPE REF TO cl_salv_display_settings.

  TRY.
      CALL METHOD cl_salv_table=>factory
        IMPORTING
          r_salv_table = l_alv_table
        CHANGING
          t_table      = it_datos.
    CATCH cx_salv_msg .
      RETURN.
  ENDTRY.

  l_layout = l_alv_table->get_layout( ).
  key-report = sy-repid.
  l_layout->set_key( key ).
  l_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).

*... Set columns name
  DATA: noms    TYPE scrtext_s,
        nom     TYPE lvc_ddict,
        nomm    TYPE scrtext_m,
        noml    TYPE scrtext_l,
        long    TYPE lvc_outlen,
        columna TYPE lvc_fname.
  TRY.
      DATA: lc_tabdescr TYPE REF TO cl_abap_structdescr,
            lr_data     TYPE REF TO data,
            lt_fields   TYPE ddfields,
            ls_dfies    TYPE dfies.

      CREATE DATA lr_data LIKE LINE OF it_datos.
      lc_tabdescr ?= cl_abap_structdescr=>describe_by_data_ref( lr_data ).
      lt_fields = cl_salv_data_descr=>read_structdescr( lc_tabdescr ).
*      it_fieldcat = CORRESPONDING #( lt_fields ).
      LOOP AT lt_fields ASSIGNING FIELD-SYMBOL(<fields>).
        columna = <fields>-fieldname.
        SELECT SINGLE reptext, scrtext_s, scrtext_m, scrtext_l
          FROM dd04t
          WHERE rollname = @<fields>-rollname
          AND ddlanguage = @sy-langu
          INTO ( @nom, @noms, @nomm, @noml ).

*        nom = noms = nomm = noml = <fields>-fieldname.
*        l_alv_table->get_columns( )->get_column( columnname =  columna )->set_fixed_header_text( nom ).
        l_alv_table->get_columns( )->get_column( columnname =  columna )->set_short_text( value = noms ).
        l_alv_table->get_columns( )->get_column( columnname =  columna )->set_medium_text( value = nomm ).
        l_alv_table->get_columns( )->get_column( columnname =  columna )->set_long_text( value = noml ).
      ENDLOOP.

    CATCH cx_salv_not_found.
  ENDTRY.

*... Set selection mode
  lr_selections = l_alv_table->get_selections( ).
  lr_selections->set_selection_mode( if_salv_c_selection_mode=>row_column ).


*... Enable Generic ALV functions
  DATA: l_functions TYPE REF TO cl_salv_functions_list.
  l_functions = l_alv_table->get_functions( ).
*gr_functions->set_default( ).
  l_functions->set_all( ).

  lo_display = l_alv_table->get_display_settings( ).
  lo_display->set_striped_pattern( 'X' ).

*   Title to ALV
  IF i_title IS NOT INITIAL.
    lo_display->set_list_header( i_title ).
  ENDIF.

  l_alv_table->display( ).

ENDFORM. " SHOW_ALV
