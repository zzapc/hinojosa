*&---------------------------------------------------------------------*
*&  Include           ZRPP0054_CLASS
*&---------------------------------------------------------------------*

CLASS lcl_event_handler DEFINITION.

  PUBLIC SECTION.
    METHODS:
      on_user_command FOR EVENT added_function OF cl_salv_events
        IMPORTING e_salv_function,
      set_layout
        CHANGING
          co_alv TYPE REF TO cl_salv_table.

*    METHODS: on_click FOR EVENT added_function OF cl_salv_events.
    METHODS: on_link_click   FOR EVENT link_click OF
                  cl_salv_events_table
      IMPORTING row column.
ENDCLASS.                    "lcl_event_handler definition

CLASS lcl_event_handler IMPLEMENTATION.

  METHOD on_user_command.

*    CASE e_salv_function.
*      WHEN 'REFRESH'.
*        PERFORM f_refresh.
*      WHEN 'FABRIC'.
*        PERFORM visualizar_zpp0004.
*      when 'HELP'.
*        CALL FUNCTION 'ZMFPP_VENTANA_LEYENDA_ICONOS'.
*      WHEN OTHERS.
*
*    ENDCASE.

  ENDMETHOD.                    "on_user_command

  METHOD set_layout.
*
    DATA: lo_layout  TYPE REF TO cl_salv_layout,
          lf_variant TYPE slis_vari,
          ls_key     TYPE salv_s_layout_key.
*
*   get layout object
    lo_layout = gr_alv->get_layout( ).
*
*   set Layout save restriction
*   1. Set Layout Key .. Unique key identifies the Differenet ALVs
    ls_key-report = sy-repid.
    lo_layout->set_key( ls_key ).
*   2. Remove Save layout the restriction.
    lo_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
*
*   set initial Layout
    lf_variant = 'DEFAULT'.
    lo_layout->set_initial_layout( lf_variant ).
*
  ENDMETHOD.

  METHOD on_link_click.
    DATA: l_mjahr TYPE mjahr.
    DATA: l_mblnr TYPE mblnr.

    TRY.

        DATA(ls_datos_nook) = gt_no_ok[ row ].
        CASE column.
          WHEN 'CHARG_BOBINA'.

            SET PARAMETER ID 'MAT' FIELD ls_datos_nook-matnr_bobina.
            SET PARAMETER ID 'WRK' FIELD ls_datos_nook-werks.
            IF ls_datos_nook-nueva_de <> 'Pulper'.
              SET PARAMETER ID 'LAG' FIELD ls_datos_nook-lgort.
            ELSE.
              SET PARAMETER ID 'LAG' FIELD space.
            ENDIF.
            SET PARAMETER ID 'CHA' FIELD ls_datos_nook-charg_bobina.

            CALL TRANSACTION 'MSC3N' AND SKIP FIRST SCREEN .

          WHEN 'CHARG_ROLLO'.
            SET PARAMETER ID 'LAG' FIELD space.

            SET PARAMETER ID 'MAT' FIELD ls_datos_nook-matnr_rollo.
            SET PARAMETER ID 'WRK' FIELD ls_datos_nook-werks.
            SET PARAMETER ID 'CHA' FIELD ls_datos_nook-charg_rollo.

            CALL TRANSACTION 'MSC3N' AND SKIP FIRST SCREEN .

          WHEN 'CHANGENR'.
            CHECK ls_datos_nook-nueva_de = 'Pulper'.
            l_mblnr = ls_datos_nook-changenr.
            l_mjahr = ls_datos_nook-fecha_modif(4).
            CALL FUNCTION 'MIGO_DIALOG'
              EXPORTING
                i_action            = 'A04'
                i_refdoc            = 'R02'
                i_notree            = 'X'
                i_no_auth_check     = ' '
                i_deadend           = 'X'
                i_skip_first_screen = 'X'
                i_okcode            = 'OK_GO'
                i_mblnr             = l_mblnr
                i_mjahr             = l_mjahr.

        ENDCASE.
      CATCH cx_root .
    ENDTRY.

  ENDMETHOD.
*  METHOD on_click.

  "Get Selected lines
*    CLEAR gt_rows[].
*    gt_rows = gr_selections->get_selected_rows( ).
*
*    IF lines( gt_rows ) > 1.
*      MESSAGE e298(zpp).
*    ENDIF.
*
*    BREAK-POINT.
  "Check there is at least one line selected
*    READ TABLE gt_rows INTO wa_rows INDEX 1.
*    IF sy-subrc <> 0.
*      MESSAGE i000(zf) WITH 'Select at least one line'.
*    ENDIF.
*
*    CLEAR v_nb.
*    LOOP AT gt_rows INTO wa_rows.
*      READ TABLE itab INTO itab INDEX wa_rows.
*      CHECK sy-subrc = 0.
*      v_nb = v_nb + 1.
*    ENDLOOP. "lt_rows
*
*    v_nb_lines = v_nb.
*
*    CLEAR v_message.
*    CONCATENATE 'Number of selected lines:' v_nb_lines INTO v_message SEPARATED BY space.
*
*    MESSAGE  v_message TYPE 'I'.

*  ENDMETHOD.                    "on_click
ENDCLASS.                    "lcl_event_handler implementation

CLASS lcl_receiver DEFINITION.
  PUBLIC SECTION.
    METHODS:
      handle_finished FOR EVENT finished OF cl_gui_timer.
ENDCLASS.                    "lcl_receiver DEFINITION

DATA: g_receiver TYPE REF TO lcl_receiver,
      g_timer    TYPE REF TO cl_gui_timer,
      g_counter  TYPE i.

*----------------------------------------------------------------------*
*       CLASS lcl_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_receiver IMPLEMENTATION.
  METHOD handle_finished.

    cl_gui_cfw=>set_new_ok_code( new_code = 'REFRESH' ).

    CALL METHOD g_timer->run.

  ENDMETHOD.                    "handle_finished
ENDCLASS.                    "lcl_receiver IMPLEMENTATION
