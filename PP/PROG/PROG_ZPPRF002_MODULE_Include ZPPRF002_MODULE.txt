*&---------------------------------------------------------------------*
*&  Include           ZPPRF002_MODULE
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  CODIGO_DE_BARRAS  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*

MODULE process_barcode INPUT.

  DATA: l_clabs TYPE labst, l_meins TYPE meins.

  DATA l_error TYPE abap_bool.

  CHECK g_barcode IS NOT INITIAL.



  DATA(l_len) = strlen( g_barcode ).

  DATA(l_len_charg) = l_len - 10.

  g_charg = g_barcode+l_len_charg(10).

  g_matnr = |{ g_barcode(l_len_charg) ALPHA = OUT }|.

  SELECT SINGLE maktx INTO g_maktx FROM makt WHERE matnr = g_barcode(l_len_charg) AND spras = sy-langu.

  SELECT SINGLE  mchb~clabs mara~meins t001l~lgort t001l~lgobe
                INTO ( l_clabs, l_meins, g_lgort_origen, g_lgobe )

                FROM mchb INNER JOIN t001l
                                  ON mchb~lgort = t001l~lgort
                          INNER JOIN mara
                                  ON mchb~matnr = mara~matnr
                WHERE mchb~matnr = g_barcode(l_len_charg)
                  AND mchb~werks = g_werks
                  AND mchb~charg = g_charg
                  AND mchb~clabs > 0.
  IF sy-subrc NE 0.
    MESSAGE 'Lote no se encuentra disponible' TYPE 'S' DISPLAY LIKE 'E'.
    RETURN.
  ENDIF.

  g_peso = l_clabs.

  g_peso_text = |{ g_peso } KG|.

  SET SCREEN 200.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.

  CASE sy-ucomm.
    WHEN 'CANC'.
      PERFORM limpiar_campos.
      SET SCREEN 100.
    WHEN 'EXEC'.
      PERFORM reubicar.
  ENDCASE.


ENDMODULE.
MODULE user_command_0100 INPUT.

  CASE sy-ucomm.
    WHEN 'CANC'.
      PERFORM limpiar_campos.
      SET SCREEN 0.
  ENDCASE.


ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.

  SET PF-STATUS '100'.

  DATA: lt_values TYPE vrm_values.

*   (almacenes 1000 a 1019, 1022 y 1023)

  DATA: l_lgort      TYPE l_lgort VALUE '1000',
        l_name_lgort TYPE lgobe.



  SELECT * INTO TABLE @DATA(lt_lgort) FROM t001l WHERE werks = @g_werks.


  TRY.
      g_lgort_origen_txt = lt_lgort[ lgort = g_lgort_origen ]-lgobe.
    CATCH cx_sy_itab_line_not_found.
  ENDTRY.

  DO 20 TIMES.
    TRY.
        l_name_lgort = lt_lgort[ lgort = l_lgort ]-lgobe.
      CATCH cx_sy_itab_line_not_found.
    ENDTRY.


    IF NOT line_exists( lt_values[ key = l_lgort ] ).
      APPEND VALUE vrm_value( key  = l_lgort
                              text = l_name_lgort ) TO lt_values.
      ADD 1 TO l_lgort.
    ENDIF.
  ENDDO.
  TRY.
      IF NOT line_exists( lt_values[ key = '1022' ] ).

        APPEND VALUE vrm_value( key   = '1022'
                                 text = lt_lgort[ lgort = '1022' ]-lgobe ) TO lt_values.
      ENDIF.
    CATCH cx_sy_itab_line_not_found.
  ENDTRY.
  TRY.
      IF NOT line_exists( lt_values[ key = '1023' ] ).

        APPEND VALUE vrm_value( key   = '1023'
                                 text = lt_lgort[ lgort = '1023' ]-lgobe ) TO lt_values.
      ENDIF.
    CATCH cx_sy_itab_line_not_found.

  ENDTRY.


  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      id              = 'G_LGORT_DSTINO'
      values          = lt_values
    EXCEPTIONS
      id_illegal_name = 0
      OTHERS          = 0.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS '100'.
*  SET TITLEBAR 'xxx'.
  IF g_werks IS INITIAL.
    SELECT SINGLE parva INTO g_werks FROM usr05
                                    WHERE bname = sy-uname AND parid = 'WRK'.
  ENDIF.
ENDMODULE.
