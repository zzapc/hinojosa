*&---------------------------------------------------------------------*
*& Report  ZRPP0055
*&
*&---------------------------------------------------------------------*
*& Extracción de datos de la tabla del secuenciador_ ZTPP0009
*& para enviar correo-e con excel de datos adjunto.
*&---------------------------------------------------------------------*
REPORT zrpp0055.


DATA: lo_document        TYPE REF TO  cl_document_bcs VALUE IS INITIAL, "document object
      i_text             TYPE         bcsy_text, "Table for body
      w_text             LIKE LINE OF i_text, "work area for message bo
      lo_send_request    TYPE REF TO  cl_bcs VALUE IS INITIAL,
      lv_string          TYPE         string,
      lv_data_string     TYPE         string,
      lv_xstring         TYPE         xstring,
      lo_sender          TYPE REF TO  if_sender_bcs VALUE IS INITIAL,
      lo_recipient       TYPE REF TO  if_recipient_bcs VALUE IS INITIAL,
      lit_binary_content TYPE         solix_tab,
      l_index_alpha      TYPE char3,
      l_num_fab_alpha    TYPE char3,
      l_gamng            TYPE char10,
      l_kg_fabricados    TYPE char10,
      l_kg_fabricacion   TYPE char10,
      l_rollos           TYPE char10,
      l_rollos_notif     TYPE char10,
      l_tornadas         TYPE char10,
      gt_ztpp0009        TYPE STANDARD TABLE OF ztpp0009,
      gt_xstring         TYPE xstring.


INCLUDE zrpp0055_class.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
PARAMETER: p_werks LIKE ztpp0009-werks. "Centro
SELECTION-SCREEN END OF BLOCK b1.

START-OF-SELECTION.

  SELECT *
    FROM ztpp0009
*    INTO TABLE @DATA(gt_ztpp0009)
    INTO TABLE @gt_ztpp0009
    WHERE werks = @p_werks.

END-OF-SELECTION.

  CLASS cl_bcs DEFINITION LOAD.

  lo_send_request = cl_bcs=>create_persistent( ).

  w_text-line = |Datos del secuenciador, a fecha: { sy-datum }|.
  APPEND w_text TO i_text.
  CLEAR w_text.
*  w_text-line = 'SAPNuts.com is the best SAP ABAP learning portal'.
*  APPEND w_text TO i_text.
*  CLEAR w_text.
*Create Email document
  lo_document = cl_document_bcs=>create_document( "create document
  i_type = 'TXT' "Type of document HTM, TXT etc
  i_text =  i_text "email body internal table
  i_subject = 'Datos secuenciador' ). "email subject here p_sub input parameter

* Pass the document to send request
  lo_send_request->set_document( lo_document ).

  CONCATENATE 'Status'     'ObsPl'     'ObsPr' 'Orden'       'Fab'    'Kg a fab' 'Roll.a fab'
              'Texto breve de material'   'Ancho' 'Fecha prog' 'Hora progr'
              'Paro P'  'H paro'   'Fecha inicial' 'Hora inicial' 'CCalidad' 'CGramaje' 'CAncho' 'BobPart'
              'Pedido1' 'Posicion1' 'Ancho1' 'Cliente1' 'Nombre cliente1'
              'Pedido2' 'Posicion2' 'Ancho2' 'Cliente2' 'Nombre cliente2'
              'Pedido3' 'Posicion3' 'Ancho3' 'Cliente3' 'Nombre cliente3'
              'Obs' 'ObsPr'
            INTO lv_string
        SEPARATED BY cl_abap_char_utilities=>horizontal_tab.
  CONCATENATE lv_data_string lv_string INTO lv_data_string SEPARATED BY cl_abap_char_utilities=>newline.
  CLEAR: lv_string.

  LOOP AT gt_ztpp0009 INTO DATA(ls_9).
    l_index_alpha       = ls_9-zindex.
    l_num_fab_alpha     = ls_9-num_fabr.
    l_gamng             = ls_9-gamng.
    l_kg_fabricados     = ls_9-kg_fabricados.
    l_kg_fabricacion    = ls_9-kg_fabricacion.
    l_rollos            = ls_9-rollos.
    l_rollos_notif      = ls_9-rollos_notif.
    l_tornadas          = ls_9-tornadas.

    CONCATENATE ls_9-icon_estado     ls_9-zicon_observa     ls_9-zicon_obs_pope
                ls_9-aufnr           l_num_fab_alpha        l_kg_fabricacion
                l_rollos             ls_9-maktx             ls_9-zzancho
                ls_9-fecha_prog      ls_9-hora_prog         ls_9-icon_paro
                ls_9-horas_paro      ls_9-fecha_final       ls_9-hora_final
                ls_9-icon_calidad    ls_9-icon_gramaje      ls_9-icon_ancho      ls_9-zicon_bop_par
                ls_9-zzebeln1 ls_9-zzebelp1     ls_9-zzancho1          ls_9-kunnr1          ls_9-name1
                ls_9-zzebeln2 ls_9-zzebelp2     ls_9-zzancho2          ls_9-kunnr2          ls_9-name2
                ls_9-zzebeln3 ls_9-zzebelp3     ls_9-zzancho3          ls_9-kunnr3          ls_9-name3
                ls_9-observaciones    ls_9-observ_pope
              INTO lv_string
          SEPARATED BY cl_abap_char_utilities=>horizontal_tab.

    CONCATENATE lv_data_string lv_string INTO lv_data_string SEPARATED BY cl_abap_char_utilities=>newline.
    CLEAR: lv_string.

  ENDLOOP.

**Convert string to xstring
  CALL FUNCTION 'HR_KR_STRING_TO_XSTRING'
    EXPORTING
      codepage_to      = 'UTF-8'
      unicode_string   = lv_data_string
*     OUT_LEN          =
    IMPORTING
      xstring_stream   = lv_xstring
    EXCEPTIONS
      invalid_codepage = 1
      invalid_string   = 2
      OTHERS           = 3.
  IF sy-subrc <> 0.
    IF sy-subrc = 1 .

    ELSEIF sy-subrc = 2 .
      WRITE:/ 'invalid string ' .
      EXIT.
    ENDIF.
  ENDIF.



  PERFORM prepare_fielcat.

***Xstring to binary
  CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
    EXPORTING
*     buffer     = lv_xstring
      buffer     = gt_xstring
    TABLES
      binary_tab = lit_binary_content.

  DATA  l_attsubject   TYPE sood-objdes.
**add attachment name
  CLEAR l_attsubject .
  CONCATENATE 'Datos secuenciador_' p_werks '_' sy-datum INTO l_attsubject.
* Create Attachment
  TRY.
    data: lv_size TYPE SOOD-OBJLEN.
      lv_size = xstrlen( gt_xstring ).

      lo_document->add_attachment( EXPORTING
*                                      i_attachment_type = 'XLS'
                                      i_attachment_type = 'XLS'
                                      i_attachment_size = lv_size
                                      i_attachment_subject = l_attsubject
                                      i_att_content_hex = lit_binary_content  ).
*          CATCH cx_document_bcs INTO lx_document_bcs.

  ENDTRY.

*Set Sender
  TRY.
      lo_sender = cl_sapuser_bcs=>create( sy-uname ). "sender is the logged in user
* Set sender to send request
      lo_send_request->set_sender(
      EXPORTING
      i_sender = lo_sender ).
*    CATCH CX_ADDRESS_BCS.
****Catch exception here
  ENDTRY.
**Set recipient


  CASE p_werks.
    WHEN '3000'.
      LOOP AT zcl_secuenciador=>gct_destinatarios_3000 INTO DATA(l_dest).

        lo_recipient = cl_cam_address_bcs=>create_internet_address( l_dest ). "Here Recipient is email input p_email
        TRY.
            lo_send_request->add_recipient(
                EXPORTING
                i_recipient = lo_recipient
                i_express = 'X' ).
        ENDTRY.
      ENDLOOP.

    WHEN '3020'.
      LOOP AT zcl_secuenciador=>gct_destinatarios_3020 INTO l_dest.

        lo_recipient = cl_cam_address_bcs=>create_internet_address( l_dest ). "Here Recipient is email input p_email
        TRY.
            lo_send_request->add_recipient(
                EXPORTING
                i_recipient = lo_recipient
                i_express = 'X' ).
        ENDTRY.


      ENDLOOP.
    WHEN OTHERS.

  ENDCASE.

****  lo_recipient = cl_cam_address_bcs=>create_internet_address( 'carles.maldonado@external.udefine.net' ). "Here Recipient is email input p_email
****  TRY.
****      lo_send_request->add_recipient(
****          EXPORTING
****          i_recipient = lo_recipient
****          i_express = 'X' ).
*****  CATCH CX_SEND_REQ_BCS INTO BCS_EXCEPTION .
******Catch exception here
****  ENDTRY.

  TRY.
** Send email
      lo_send_request->send(
      EXPORTING
      i_with_error_screen = 'X' ).
      COMMIT WORK.
      IF sy-subrc = 0.
        WRITE :/ 'Envío realizado correctamente.'.
      ENDIF.
*    CATCH CX_SEND_REQ_BCS INTO BCS_EXCEPTION .
*catch exception here
  ENDTRY.

  COMMIT WORK AND WAIT.
