*&---------------------------------------------------------------------*
*&  Include           ZRPP0046_CLASS
*&---------------------------------------------------------------------*
CLASS lcl_application_100 DEFINITION.

  PUBLIC SECTION.
    METHODS handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.


*   Evento para detectar accion botonera
    METHODS handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.


*   Evento para navegar
    METHODS handle_hotspot_click
                  FOR EVENT hotspot_click OF cl_gui_alv_grid
      IMPORTING e_row_id e_column_id es_row_no.



*   mostrar cabecera
    METHODS top_of_page FOR EVENT top_of_page OF cl_gui_alv_grid
      IMPORTING e_dyndoc_id.

ENDCLASS.



CLASS lcl_application_100  IMPLEMENTATION.

  METHOD handle_toolbar.
    CLEAR gs_toolbar_100.
    MOVE  'MODIFICAR'                     TO gs_toolbar_100-function.
*    MOVE  icon_activate              TO gs_toolbar_100-icon.
    MOVE  text-006                   TO gs_toolbar_100-quickinfo.
    MOVE  text-006                   TO gs_toolbar_100-text.
    MOVE space                       TO gs_toolbar_100-disabled.
    APPEND gs_toolbar_100                TO e_object->mt_toolbar.

  ENDMETHOD.


*&---------------------------------------------------------------------*
*         METHOD handle_user_command
*----------------------------------------------------------------------*
  METHOD handle_user_command.

    DATA: index_rows       TYPE         lvc_t_row,
          lt_sel_rows      TYPE         lvc_t_roid,
          ls_selected_line LIKE LINE OF lt_sel_rows.

    DATA: lv_error TYPE xfeld.
    DATA: lv_extnumber TYPE balnrext.
    DATA: num_reg TYPE sy-tabix.
    DATA: lv_answer    TYPE c.
    FIELD-SYMBOLS: <wa_mostrar> TYPE zerpp0045.


    CASE e_ucomm.
      WHEN 'MODIFICAR'.

        CALL METHOD o_alv->get_selected_rows(
          IMPORTING
            et_row_no     = lt_sel_rows
            et_index_rows = index_rows ).

        CALL METHOD cl_gui_cfw=>flush.

        DESCRIBE TABLE  lt_sel_rows LINES num_reg.
        IF num_reg = 0.
          MESSAGE i000(0k) WITH text-011.
        ELSEIF num_reg >= 1.

          CALL FUNCTION 'POPUP_TO_CONFIRM'
            EXPORTING
              titlebar              = text-007
*             DIAGNOSE_OBJECT       = ' '
              text_question         = text-008
              text_button_1         = text-009 "Sí
*             ICON_BUTTON_1         = ' '
              text_button_2         = text-010 "No'
*             ICON_BUTTON_2         = ' '
              default_button        = '2'
              display_cancel_button = ''
*             USERDEFINED_F1_HELP   = ' '
*             START_COLUMN          = 25
*             START_ROW             = 6
*             POPUP_TYPE            =
*             IV_QUICKINFO_BUTTON_1 = ' '
*             IV_QUICKINFO_BUTTON_2 = ' '
            IMPORTING
              answer                = lv_answer
*           TABLES
*             parameter             = lt_param
            EXCEPTIONS
              text_not_found        = 1
              OTHERS                = 2.
          IF sy-subrc <> 0.
*           Implement suitable error handling here
          ENDIF.

          IF lv_answer IS INITIAL OR lv_answer = '1'.
            DESCRIBE TABLE lt_sel_rows LINES num_reg.
            IF num_reg = 0.
              MESSAGE i000(0k) WITH text-011. "Debe seleccionar la versión a modificar
            ELSEIF num_reg > 1.
              MESSAGE i000(0k) WITH text-012. "Debe seleccionar una única versión para modificar
            ELSE.
              READ TABLE lt_sel_rows INTO ls_selected_line INDEX 1.
              READ TABLE gt_recetas INTO wa_recetas INDEX ls_selected_line-row_id.

              PERFORM modificar_version USING wa_recetas.

              CALL METHOD o_alv->refresh_table_display.

               CALL METHOD o_docu->INITIALIZE_DOCUMENT.


              CALL METHOD o_alv->list_processing_events
                EXPORTING
                  i_event_name = 'TOP_OF_PAGE'
                  i_dyndoc_id  = o_docu.
            ENDIF.
          ENDIF.
        ENDIF.

      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.

* Para navegar
  METHOD handle_hotspot_click.
*    DATA: index_rows       TYPE         lvc_t_row,
*          lt_sel_rows      TYPE         lvc_t_roid,
*          ls_selected_line LIKE LINE OF lt_sel_rows.
*
*    CALL METHOD gr_grid_300->get_selected_rows(
*      IMPORTING
*        et_row_no     = lt_sel_rows
*        et_index_rows = index_rows ).
*
*    CALL METHOD cl_gui_cfw=>flush.
*
**    READ TABLE lt_sel_rows INTO ls_selected_line INDEX 1.
**    READ TABLE gt_datos_300 INTO wa_datos_sel INDEX ls_selected_line-row_id.
*    READ TABLE gt_datos_300 INTO wa_datos_sel INDEX e_row_id-index.
*    CASE e_column_id.
*      WHEN 'AUFNR'.
*        FREE MEMORY ID 'BR1'.
*        SET PARAMETER ID 'BR1' FIELD wa_datos_sel-aufnr.
*        CALL TRANSACTION 'COR3' AND SKIP FIRST SCREEN.
*
*    ENDCASE.


  ENDMETHOD.                    "handle_hotspot_click



* mostrar cabecera
  METHOD top_of_page.

    DATA: lv_space TYPE c LENGTH 6,
          text     TYPE sdydo_text_element.

    clear:  text.
    lv_space = '      '.

    CONCATENATE text-c01 wa_ppal-version '-' wa_ppal-descripcion_version INTO text
    SEPARATED BY space.

    CALL METHOD o_docu->add_text
      EXPORTING
        text         = text
        sap_style    = cl_dd_document=>heading
        sap_color    = cl_dd_document=>list_heading_int
        sap_fontsize = cl_dd_document=>medium.

    CALL METHOD o_docu->new_line.

    CLEAR text.
    CONCATENATE text-c03 wa_ppal-receta '      ' text-c04 wa_ppal-stlal INTO text SEPARATED BY space
    RESPECTING BLANKS.

    CALL METHOD o_docu->add_text
      EXPORTING
        text         = text
        sap_style    = cl_dd_document=>EXTRA_LARGE "heading
        sap_color    = cl_dd_document=>list_heading_int
        sap_fontsize = cl_dd_document=>small.

*    CALL METHOD o_docu->set_document_background
*      EXPORTING
*        picture_id = 'HEADER1'.

    " object uploaded by oaer transaction
    CALL METHOD o_docu->display_document
      EXPORTING
        reuse_control = 'X'
        parent        = o_ref1.


  ENDMETHOD. .
ENDCLASS.
