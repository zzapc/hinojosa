*&---------------------------------------------------------------------*
*&  Include           ZRPP0048_CLASSES
*&---------------------------------------------------------------------*

CLASS event_class DEFINITION.

  PUBLIC SECTION.

    CLASS-METHODS: handle_double_click FOR EVENT double_click OF cl_gui_alv_grid
      IMPORTING e_row e_column es_row_no,
      toolbar FOR EVENT toolbar OF  cl_gui_alv_grid
        IMPORTING e_object,
      user_command FOR EVENT user_command OF cl_gui_alv_grid
        IMPORTING e_ucomm,
      button_click FOR EVENT button_click OF cl_gui_alv_grid IMPORTING es_col_id es_row_no.

ENDCLASS.


CLASS event_class IMPLEMENTATION.

  METHOD button_click.

*    READ TABLE gt_docs into gs_docs INDEX es_row_no-.
    DATA lt_row TYPE lvc_t_roid.

    APPEND es_row_no TO lt_row.

    lo_alv->set_selected_rows( it_row_no = lt_row ).

    PERFORM obsv_charg.

  ENDMETHOD.

  METHOD handle_double_click.
    "Mostrar ALV con la linea seleccionada
*     ZTPP0027-
*ZTPP0027-TPBEZ
*ZTPP0027-TNDR_TRKID
*ZTPP0027-TNDR_CRNM
*ZTPP0027-ALLOWED_TWGT

    lo_alv->get_selected_rows( IMPORTING et_row_no = DATA(lt_row) ).

    IF lt_row[] IS INITIAL.
      MESSAGE 'Seleccione una linea para imprimir'(004) TYPE 'S' DISPLAY LIKE 'W'.
      RETURN.
    ENDIF.

    READ TABLE lt_row INTO DATA(ls_row) INDEX 1.


    READ TABLE gt_docs INTO  gs_docs INDEX ls_row-row_id.
    CALL SCREEN 200 STARTING AT 10 10 ENDING AT  100 20.

    lo_alv->refresh_table_display( ).

    "segun lo que se pulse o seleccione

    "usar la info para refrescar datos
    "grabarlos
    "o
    "no hacer nada, o remostrar el ALV

*     READ TABLE it_dd02l INTO wa_dd02l INDEX e_row-index.
*
*      if sy-subrc = 0.
*
*        select * FROM dd03l INTO CORRESPONDING FIELDS OF TABLE it_dd03l
*                                 WHERE tabname eq wa_dd02l-tabname.
*
*      endif.
*
*      call SCREEN 101.

  ENDMETHOD.

  METHOD toolbar.

    DATA wa_tool LIKE LINE OF e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-function = 'FILL'.
    wa_tool-text     = 'Datos transporte/Observaciones'.
    wa_tool-icon     = icon_transport.
    APPEND wa_tool TO e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-butn_type = '3'.
    APPEND wa_tool TO e_object->mt_toolbar.
    CLEAR wa_tool.

*    wa_tool-function = 'OBSVGEN'.
*    wa_tool-text     = 'Observaciones generales'.
*    wa_tool-icon     = icon_annotation.
*    APPEND wa_tool TO e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-function = 'OBSV'.
    wa_tool-text     = 'Observaciones en bobinas'.
    wa_tool-icon     = icon_annotation.
    APPEND wa_tool TO e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-butn_type = '3'.
    APPEND wa_tool TO e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-function = 'PRINT'.
    wa_tool-text     = 'Imprimir doc.transporte'.
    wa_tool-icon     = icon_print.
    APPEND wa_tool TO e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-butn_type = '3'.
    APPEND wa_tool TO e_object->mt_toolbar.

    CLEAR wa_tool.
    wa_tool-function = 'ELIMINAR'.
    wa_tool-text     = 'Eliminar doc.transporte'.
    wa_tool-icon     = icon_delete.
    APPEND wa_tool TO e_object->mt_toolbar.

  ENDMETHOD.

  METHOD user_command.

    IF e_ucomm EQ 'PRINT'.

      PERFORM print_transport_document.

    ELSEIF e_ucomm EQ 'FILL'.
      handle_double_click( ).

    ELSEIF e_ucomm EQ 'OBSV'.
      PERFORM obsv_charg.

    ELSEIF e_ucomm EQ 'OBSVGEN'.
      PERFORM obsv_generales.

    ELSEIF e_ucomm EQ 'ELIMINAR'.
      PERFORM eliminar.
    ENDIF.

  ENDMETHOD.

ENDCLASS.
