*&---------------------------------------------------------------------*
*&  Include           ZRPP0007_ALV
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  F_ALV_MOSTRAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_mostrar .

  DATA: ls_lvc_s_layo TYPE lvc_s_layo,
        ls_variant    TYPE disvariant.

* Variante
  PERFORM alv_prepare_variant CHANGING ls_variant.
* Preparamos el catálogo de campos
  PERFORM alv_prepare_fielcat.
* Preparamos el layout
  PERFORM alv_prepare_layout CHANGING ls_lvc_s_layo.

* Mostramos el ALV
  CALL METHOD gcl_grid->set_table_for_first_display
    EXPORTING
      i_buffer_active    = ' '
      i_bypassing_buffer = 'X'
      is_layout          = ls_lvc_s_layo
      i_structure_name   = 'GT_DATOS'
      is_variant         = ls_variant
      i_save             = 'A'
    CHANGING
      it_outtab          = gt_datos[]
      it_fieldcatalog    = gt_fieldcat.

ENDFORM.                    " F_ALV_MOSTRAR
*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_VARIANT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_VARIANT  text
*----------------------------------------------------------------------*
FORM alv_prepare_variant  CHANGING ps_variant TYPE disvariant .

  IF gs_variant IS NOT INITIAL.
    ps_variant = gs_variant.
  ELSE.
    CLEAR ps_variant.
    ps_variant-report = sy-repid.
  ENDIF.

ENDFORM.                    " ALV_PREPARE_VARIANT
*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_prepare_fielcat .

  DATA: ls_fcat TYPE lvc_s_fcat.
  DATA: lv_tabix TYPE sytabix.


  REFRESH: gt_fieldcat_ant, gt_fieldcat.

* Pasar tabla interna al formato del fieldcat
  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      i_program_name         = sy-repid
      i_internal_tabname     = 'GT_DATOS'
      i_inclname             = sy-repid
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = gt_fieldcat_ant
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.

* Pasar el anterior fieldcat al formato del nuevo
  CALL FUNCTION 'LVC_TRANSFER_FROM_SLIS'
    EXPORTING
      it_fieldcat_alv = gt_fieldcat_ant
    IMPORTING
      et_fieldcat_lvc = gt_fieldcat
    TABLES
      it_data         = gt_datos
    EXCEPTIONS
      it_data_missing = 1
      OTHERS          = 2.


  DELETE gt_fieldcat WHERE fieldname = 'AUFNR' OR
                           fieldname = 'RSNUM' OR
                           fieldname = 'RSPOS'.

ENDFORM.                    " ALV_PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_LVC_S_LAYO  text
*----------------------------------------------------------------------*
FORM alv_prepare_layout  CHANGING ls_lvc_s_layo TYPE lvc_s_layo.

* Para que muestre el ancho de las columnas optimizado
  ls_lvc_s_layo-cwidth_opt = 'X'.
  ls_lvc_s_layo-sel_mode   = 'A'.

ENDFORM.                    " ALV_PREPARE_LAYOUT


*&---------------------------------------------------------------------*
*&      Form  F_ALV_MOSTRAR_50
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_mostrar_50 .

  DATA: ls_lvc_s_layo TYPE lvc_s_layo,
        ls_variant    TYPE disvariant.

  CREATE OBJECT g_application.

  SET HANDLER g_application->handle_toolbar      FOR  gcl_grid_50.
  SET HANDLER g_application->handle_data_changed       FOR  gcl_grid_50.
  SET HANDLER g_application->handle_user_command       FOR  gcl_grid_50.

* Variante
  PERFORM alv_prepare_variant_50 CHANGING ls_variant.
* Preparamos el catálogo de campos
  PERFORM alv_prepare_fielcat_50.
* Preparamos el layout
  PERFORM alv_prepare_layout_50 CHANGING ls_lvc_s_layo.

* Mostramos el ALV
  CALL METHOD gcl_grid_50->set_table_for_first_display
    EXPORTING
      i_structure_name = 'GT_MOV_ACUMUL'
      is_layout        = ls_lvc_s_layo
      is_variant       = ls_variant
      i_save           = 'A'  "'U'
      i_default        = 'X'
*     it_toolbar_excluding = lti_exc
    CHANGING
      it_outtab        = gt_sel[]
      it_fieldcatalog  = gt_fieldcat_50.

  SET HANDLER g_application->handle_toolbar      FOR  gcl_grid_50.
  SET HANDLER g_application->handle_data_changed       FOR  gcl_grid_50.
  SET HANDLER g_application->handle_user_command       FOR  gcl_grid_50.

ENDFORM.                    " F_ALV_MOSTRAR_50


*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_VARIANT_50
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_VARIANT  text
*----------------------------------------------------------------------*
FORM alv_prepare_variant_50 CHANGING ps_variant TYPE disvariant .

  IF gs_variant IS NOT INITIAL.
    ps_variant = gs_variant.
  ELSE.
    CLEAR ps_variant.
    ps_variant-report = sy-repid.
  ENDIF.

ENDFORM.                    " ALV_PREPARE_VARIANT_50


*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_FIELCAT_50
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_prepare_fielcat_50 .

  DATA: ls_fcat TYPE lvc_s_fcat.
  DATA: lv_tabix TYPE sytabix.


  REFRESH: gt_fieldcat_ant, gt_fieldcat.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = 'ZSPP0007_GRID'
    CHANGING
      ct_fieldcat      = gt_fieldcat_50.

  DELETE gt_fieldcat_50 WHERE fieldname = 'AUFNR' OR
                              fieldname = 'RSNUM' OR
                              fieldname = 'RSPOS' ."OR
                              "fieldname = 'MEINS'.

ENDFORM.                    " ALV_PREPARE_FIELCAT_50


*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_LAYOUT_50
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_LVC_S_LAYO  text
*----------------------------------------------------------------------*
FORM alv_prepare_layout_50  CHANGING ls_lvc_s_layo TYPE lvc_s_layo.

* Para que muestre el ancho de las columnas optimizado
  ls_lvc_s_layo-cwidth_opt = 'X'.
  ls_lvc_s_layo-sel_mode   = 'A'.


ENDFORM.                    " ALV_PREPARE_LAYOUT_50
