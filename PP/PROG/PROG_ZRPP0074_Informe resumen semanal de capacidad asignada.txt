*&---------------------------------------------------------------------*
*& Report  ZRPP0074
*&
*&---------------------------------------------------------------------*
*& Informe resumen semanal de capacidad asignada
*& 19-10-2020
*&---------------------------------------------------------------------*
REPORT zrpp0074.

TABLES : ztpp0072.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-003.
SELECTION-SCREEN SKIP 1.
PARAMETER: p_werks LIKE ztpp0072-werks OBLIGATORY. "Centro
*PARAMETER: p_ejer TYPE mjahr OBLIGATORY.
SELECT-OPTIONS: p_sem FOR ztpp0072-semana.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN END OF BLOCK b1.

INITIALIZATION.
  DATA: l_aaaass  TYPE kweek,
        l_aaaass2 TYPE kweek.
  DATA: l_datum TYPE datum.

  SELECT SINGLE parva FROM usr05
    INTO p_werks
    WHERE bname = sy-uname AND
          parid = 'WRK'.

  CALL FUNCTION 'DATE_GET_WEEK'
    EXPORTING
      date         = sy-datum
    IMPORTING
      week         = l_aaaass
    EXCEPTIONS
      date_invalid = 1
      OTHERS       = 2.
  IF sy-subrc = 0.

    l_datum = sy-datum + 7.

    CALL FUNCTION 'DATE_GET_WEEK'
      EXPORTING
        date         = l_datum
      IMPORTING
        week         = l_aaaass2
      EXCEPTIONS
        date_invalid = 1
        OTHERS       = 2.
    p_sem[]  = VALUE #( ( sign = 'I' option = 'EQ'  low = l_aaaass high = l_aaaass2 ) ).
  ENDIF.

START-OF-SELECTION.

  CALL METHOD zclpp_capacidad_asignada=>get_informe_resumen
    EXPORTING
      i_werks          = p_werks
      it_kweek         = p_sem[]
    IMPORTING
      ot_repartos_asig = DATA(gt_datos_rep_asig).

  IF gt_datos_rep_asig IS INITIAL.
    MESSAGE |No se han encontrado datos.| TYPE 'I'.
  ENDIF.

  DATA: g_alv TYPE REF TO   cl_salv_table.


  CALL METHOD cl_salv_table=>factory
    EXPORTING
      list_display = if_salv_c_bool_sap=>false
    IMPORTING
      r_salv_table = g_alv
    CHANGING
      t_table      = gt_datos_rep_asig.

  PERFORM tunning_alv.

  g_alv->display( ).


FORM tunning_alv.
  DATA: lr_columns TYPE REF TO cl_salv_columns,
        lr_column  TYPE REF TO cl_salv_column_table.
  DATA: lr_functions  TYPE REF TO cl_salv_functions_list.
  DATA: lv_key        TYPE salv_s_layout_key,
        lo_layout     TYPE REF TO cl_salv_layout.

  lv_key-report = sy-repid.
  lo_layout = g_alv->get_layout( ).
  lo_layout->set_key( lv_key ).
  lo_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
  lo_layout->set_default( abap_true ).

  lr_functions = g_alv->get_functions( ).
  lr_functions->set_all( 'X' ).


  lr_columns = g_alv->get_columns( ).
  lr_columns->set_optimize( 'X' ).

  TRY.
      lr_column ?= lr_columns->get_column( columnname = 'CANT_PEND' ).
      lr_column->set_short_text( value  = 'Cant.pend' ).
      lr_column->set_medium_text( value  = 'Cant.pendiente' ).
      lr_column->set_long_text( value  = 'Cantidad pendiente' ).
    CATCH cx_salv_not_found .
  ENDTRY.

  TRY.
      lr_column ?= lr_columns->get_column( columnname = 'FECHA_ENT' ).
      lr_column->set_short_text( value  = 'F.entrega' ).
      lr_column->set_medium_text( value  = 'Fecha entrega' ).
      lr_column->set_long_text( value  = 'Fecha entrega' ).
    CATCH cx_salv_not_found .
  ENDTRY.

  TRY.
      lr_column ?= lr_columns->get_column( columnname = 'MENGE' ).
      lr_column->set_short_text( value  = 'Cant.repar' ).
      lr_column->set_medium_text( value  = 'Cant.reparto' ).
      lr_column->set_long_text( value  = 'Cantidad reparto' ).
    CATCH cx_salv_not_found .
  ENDTRY.

  TRY.
      lr_column ?= lr_columns->get_column( columnname = 'VBELN' ).
      lr_column->set_short_text( value  = 'Pedido' ).
      lr_column->set_medium_text( value  = 'Pedido' ).
      lr_column->set_long_text( value  = 'Pedido' ).
    CATCH cx_salv_not_found .
  ENDTRY.

  TRY.
      lr_column ?= lr_columns->get_column( columnname = 'DESC_CLI' ).
      lr_column->set_short_text( value  = 'Desc.clien' ).
      lr_column->set_medium_text( value  = 'Descrip. cliente' ).
      lr_column->set_long_text( value  = 'Descripción cliente' ).
    CATCH cx_salv_not_found .
  ENDTRY.


ENDFORM.
