*&---------------------------------------------------------------------*
*& Report  ZRPP0053
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zrpp0053.

TABLES: stpo, stko, mast, tvarvc.

DATA: i_stko TYPE stko_api01,
      quan   TYPE kmpmg,
      datuv  TYPE datuv_bi,
      t_stpo TYPE TABLE OF stpo_api03 WITH HEADER LINE.

RANGES: r_posnr FOR stpo-posnr.

SELECTION-SCREEN BEGIN OF BLOCK 1.
PARAMETERS p_werks TYPE werks_d OBLIGATORY.
SELECT-OPTIONS s_matnr FOR mast-matnr OBLIGATORY.
SELECTION-SCREEN SKIP.
PARAMETERS p_datuv TYPE dats OBLIGATORY DEFAULT sy-datum.
PARAMETERS p_posnr TYPE sposn OBLIGATORY.
PARAMETERS p_perc TYPE hrprozt OBLIGATORY.
SELECTION-SCREEN END OF BLOCK 1.

START-OF-SELECTION.

  CALL FUNCTION 'CALO_INIT_API'
    EXCEPTIONS
      log_object_not_found     = 1
      log_sub_object_not_found = 2
      other_error              = 3
      OTHERS                   = 4.

  WRITE p_datuv TO datuv.

  SELECT * FROM tvarvc
    WHERE name EQ 'ZRPP0053_POSNR'
    INTO TABLE @DATA(t_tvarc).

  LOOP AT t_tvarc INTO tvarvc.
    r_posnr-sign = tvarvc-sign.
    r_posnr-option = tvarvc-opti.
    r_posnr-low = tvarvc-low.
    r_posnr-high = tvarvc-high.
    APPEND r_posnr.
  ENDLOOP.

  SELECT * FROM mast
    WHERE werks EQ @p_werks
      AND matnr IN @s_matnr
    INTO TABLE @DATA(t_mast).

  LOOP AT t_mast INTO mast.

    CLEAR: quan, t_stpo, t_stpo[], i_stko.

    SELECT SUM( stpo~menge )
      INTO quan
      FROM stpo
      INNER JOIN stas
      ON ( stas~stlty EQ stpo~stlty AND
           stas~stlnr EQ stpo~stlnr AND
           stas~stlkn EQ stpo~stlkn )
      WHERE stpo~stlnr EQ mast-stlnr
        AND stas~stlal EQ mast-stlal
        AND stas~lkenz EQ space
        AND stpo~posnr IN r_posnr.

    t_stpo-id_item_no = p_posnr.                    "Item identification
    quan  = ( quan * p_perc ).
    WRITE quan TO t_stpo-comp_qty.
    APPEND t_stpo.

    CALL FUNCTION 'CSAP_MAT_BOM_MAINTAIN'
      EXPORTING
        material      = mast-matnr
        plant         = p_werks
        bom_usage     = mast-stlan
        alternative   = mast-stlal
        fl_bom_create = ' '
        fl_new_item   = ' '
        valid_from    = datuv
        i_stko        = i_stko
      TABLES
        t_stpo        = t_stpo[].

    IF sy-subrc <> 0.
* Implement suitable error handling here
    ELSE.
      WRITE: / 'Lista de material  ',  mast-matnr, ' alternativa ', mast-stlal, ' modificada con cantidad ', t_stpo-comp_qty.
    ENDIF.

  ENDLOOP.
