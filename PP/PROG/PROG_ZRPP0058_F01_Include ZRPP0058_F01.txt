*----------------------------------------------------------------------*
***INCLUDE ZRPP0058_F01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  OBTENER_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM obtener_datos .

  DATA: lr_rec TYPE zrrid_receta,
        lr_lot TYPE zppr_charg_d,
*        lr_fec TYPE trgr_date,
        lr_fet TYPE trgr_date.

  CLEAR: lr_rec[] , lr_lot[]. " , lr_fec[].
  lr_rec[] = s_rec[].
  lr_lot[] = s_lote[].
*  lr_fec[] = s_fec[].
  lr_fet[] = s_fet[].


  CALL METHOD zclpp_consumo_recetas_mp=>obtener_lotes_mp_x_receta
    EXPORTING
      i_werks          = p_werks
      ir_recetas       = lr_rec
      ir_charg         = lr_lot
*      ir_fecha_fab     = lr_fec " ZTPP00041-FECHA_INS: Lanzamiento a pulper
      ir_fecha_turno   = lr_fet " ZTPP0041-FECHA_FABR: Fecha "turno"
      i_t1             = p_t1
      i_t2             = p_t2
      i_t3             = p_t3
    IMPORTING
      ot_detalle_lotes = gt_datos.

ENDFORM.


FORM mostrar_datos.

  DATA: lr_functions TYPE REF TO cl_salv_functions_list,
        lo_column2   TYPE REF TO cl_salv_column_table,

        lo_column    TYPE REF TO cl_salv_column,
        lo_columns   TYPE REF TO cl_salv_columns_table.

  TRY.
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = gr_alv
        CHANGING
          t_table      = gt_datos ).
    CATCH cx_salv_msg.                                  "#EC NO_HANDLER
  ENDTRY.

*  gr_alv->set_screen_status(
*    pfstatus      =  'SALV_STANDARD'
*    report        =  'ZRPP0054'
*    set_functions = gr_alv->c_functions_all ) .

  DATA(gr_layout) = gr_alv->get_layout( ).
  key-report = sy-repid.
  gr_layout->set_key( key ).
  gr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
  gr_layout->set_default( abap_true ).
  gr_layout->set_initial_layout( p_lay06 ).

  lo_columns = gr_alv->get_columns( ).

  TRY.
      lo_column2 ?= lo_columns->get_column( 'MBLNR' ).
      lo_column2->set_cell_type( if_salv_c_cell_type=>hotspot ).

      lo_column ?= lo_columns->get_column( 'MBLNR' ).
*      lo_column->set_short_text( 'D' ).
      lo_column->set_medium_text( 'Doc. material' ).
      lo_column->set_long_text( 'Desc. receta' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'MJAHR' ).
      lo_column->set_short_text( 'Ejercicio' ).
      lo_column->set_medium_text( 'Ejercicio' ).
      lo_column->set_long_text( 'Ejercicio' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'DESCRIP_REC' ).
      lo_column->set_short_text( 'Desc. rec' ).
      lo_column->set_medium_text( 'Desc. receta' ).
      lo_column->set_long_text( 'Desc. receta' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'DESC_MOTIVO' ).
      lo_column->set_short_text( 'Desc. mot.' ).
      lo_column->set_medium_text( 'Desc. motivo' ).
      lo_column->set_long_text( 'Desc. motivo' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'PRECIO_MED_VAR' ).
      lo_column->set_short_text( 'Val. PMV' ).
      lo_column->set_medium_text( 'Valoración PMV' ).
      lo_column->set_long_text( 'Valoración PMV' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'PRECIO_COMPRA' ).
      lo_column->set_short_text( 'Val.compra' ).
      lo_column->set_medium_text( 'Valoración compra' ).
      lo_column->set_long_text( 'Valoración compra' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'FECHA_FABR' ).
      lo_column->set_short_text( 'F. turno' ).
      lo_column->set_medium_text( 'Fecha turno' ).
      lo_column->set_long_text( 'Fecha turno' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'FECHA_M311' ).
      lo_column->set_short_text( 'F. pulper' ).
      lo_column->set_medium_text( 'Fecha pulper' ).
      lo_column->set_long_text( 'F. pulper' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'HORA_M311' ).
      lo_column->set_short_text( 'H. pulper' ).
      lo_column->set_medium_text( 'Hora pulper' ).
      lo_column->set_long_text( 'Hora pulper' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'CHARG' ).
      lo_column->set_short_text( 'Lote MP' ).
      lo_column->set_medium_text( 'Lote MP' ).
      lo_column->set_long_text( 'Lote MP' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'KG_REALES' ).
      lo_column->set_short_text( 'Peso' ).
      lo_column->set_medium_text( 'Peso' ).
      lo_column->set_long_text( 'Peso' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'MAKTX' ).
      lo_column->set_short_text( 'Desc. Mat.' ).
      lo_column->set_medium_text( 'Desc. Material' ).
      lo_column->set_long_text( 'Desc. Material' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'ID_RECETA' ).
      lo_column->set_short_text( 'Receta' ).
      lo_column->set_medium_text( 'Receta' ).
      lo_column->set_long_text( 'Receta' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'DESC_MAT' ).
      lo_column->set_short_text( 'Desc. mat.' ).
      lo_column->set_medium_text( 'Desc. material' ).
      lo_column->set_long_text( 'Desc. material' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'DIF_DIES' ).
      lo_column->set_short_text( 'Antigüedad' ).
      lo_column->set_medium_text( 'Antigüedad' ).
      lo_column->set_long_text( 'Antigüedad' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'LIFNR' ).
      lo_column->set_short_text( 'Proveedor' ).
      lo_column->set_medium_text( 'Proveedor' ).
      lo_column->set_long_text( 'Proveedor' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'NAME1_GP' ).
      lo_column->set_short_text( 'Nom. prov.' ).
      lo_column->set_medium_text( 'Nombre proveedor' ).
      lo_column->set_long_text( 'Nombre proveedor' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'BUDAT' ).
      lo_column->set_short_text( 'F. compra' ).
      lo_column->set_medium_text( 'Fecha compra' ).
      lo_column->set_long_text( 'Fecha compra' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'DESC_CALIDAD' ).
      lo_column->set_short_text( 'Desc. cal.' ).
      lo_column->set_medium_text( 'Desc. calidad' ).
      lo_column->set_long_text( 'Desc. calidad' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'MATNR_EQUIV' ).
      lo_column->set_short_text( 'Mat. equiv' ).
      lo_column->set_medium_text( 'Material equivalente' ).
      lo_column->set_long_text( 'Material equivalente' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'DESC_MAT_EQUIV' ).
      lo_column->set_short_text( 'Des.mat.eq' ).
      lo_column->set_medium_text( 'Desc. mat. equiv.' ).
      lo_column->set_long_text( 'Descripción mat. equivalente' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'LOTE_MP_HERMANO' ).
      lo_column->set_short_text( 'L. hermano' ).
      lo_column->set_medium_text( 'Lote hermano' ).
      lo_column->set_long_text( 'Lote hermano' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'IND_SIN_ETIQ' ).
      lo_column->set_short_text( 'Ind. s/etq' ).
      lo_column->set_medium_text( 'Ind. sin etiqueta' ).
      lo_column->set_long_text( 'Ind. sin etiqueta' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'VALOR_PRESU' ).
      lo_column->set_short_text( 'Val. ppto.' ).
      lo_column->set_medium_text( 'Valoración ppto.' ).
      lo_column->set_long_text( 'Valoración presupuesto' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'DIF_PMV_PRESU' ).
      lo_column->set_short_text( 'Dif. ppto' ).
      lo_column->set_medium_text( 'Dif. presupuesto' ).
      lo_column->set_long_text( 'Diferencia presupuesto' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'IND_CONSUMO' ).
      lo_column->set_short_text( 'Ind. cons' ).
      lo_column->set_medium_text( 'Ind. consumo' ).
      lo_column->set_long_text( 'Ind. consumo' ).

    CATCH cx_root .
  ENDTRY.


*-- events
  gr_events = gr_alv->get_event( ).
  CREATE OBJECT event_handler.
  SET HANDLER event_handler->on_user_command FOR gr_events.
  SET HANDLER event_handler->on_link_click FOR gr_events.

**... §3.1 activate ALV generic Functions
  lr_functions = gr_alv->get_functions( ).
  lr_functions->set_all( 'X' ).


*-- Selection
  DATA:   lo_cols_tab TYPE REF TO cl_salv_columns_table.

  lo_cols_tab = gr_alv->get_columns( ).
  lo_cols_tab->set_optimize( ).
  TRY.
      lo_cols_tab->set_color_column( 'COLOR' ).

    CATCH cx_salv_data_error.                           "#EC NO_HANDLER
  ENDTRY.


  gr_alv->display( ).

ENDFORM.


FORM buscar_variante  CHANGING p_vari TYPE disvariant-variant.

  DATA: ls_variant TYPE disvariant,
        l_exit     TYPE char1.

  ls_variant-report = sy-repid.

  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
    EXPORTING
      is_variant = ls_variant
      i_save     = 'A'
*     it_default_fieldcat =
    IMPORTING
      e_exit     = l_exit
      es_variant = ls_variant
    EXCEPTIONS
      not_found  = 2.
  IF sy-subrc = 2.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF l_exit EQ space.
      p_vari = ls_variant-variant.
    ENDIF.
  ENDIF.

ENDFORM.                    " BUSCAR_VARIANTE
