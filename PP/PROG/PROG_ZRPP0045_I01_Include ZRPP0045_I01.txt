*&---------------------------------------------------------------------*
*&  Include           ZRPP0045_I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE gv_okcode.
    WHEN 'BACK'.
      CLEAR: gv_okcode.
      LEAVE PROGRAM.

    WHEN 'RECETAS'.
      CLEAR: gv_okcode.
*      IF gv_matnr IS INITIAL.
*        MESSAGE e271(zpp) . "Debe informar el material
*      ELSE.
      PERFORM obtener_recetas.
      LEAVE TO SCREEN 0200.
*      ENDIF.

  ENDCASE.
ENDMODULE.
**&---------------------------------------------------------------------*
**&      Module  GET_MODO  INPUT
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*MODULE get_modo INPUT.
**   recuperamos los modos
*  SELECT * FROM ztpp0019
*    INTO TABLE t_modos
*    WHERE linea = gv_linea AND
*          werks = gv_werks.
*
**   recuperamos las descripciones de los modos
*  IF t_modos[] IS NOT INITIAL.
*    SELECT * FROM ztpp0019_t
*      INTO TABLE t_descripcion_modos
*      FOR ALL ENTRIES IN t_modos
*      WHERE linea = t_modos-linea AND
*            werks = t_modos-werks AND
*            spras = sy-langu.
*  ENDIF.
*ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  CASE gv_okcode.
    WHEN 'BACK'.
      CLEAR: gv_okcode.
      SET SCREEN 0.
      LEAVE SCREEN.
  ENDCASE.
ENDMODULE.
