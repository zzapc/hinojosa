*&---------------------------------------------------------------------*
*&  Include           ZRPP0031_O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  DATA lr_columns TYPE REF TO cl_salv_columns_table.

  SET PF-STATUS '0100'.
*  SET TITLEBAR 'xxx'.

* Si no esta creado el SALV, creamos
  IF calv_const_post IS NOT BOUND.
    TRY.
        CREATE OBJECT calv_const_post
          EXPORTING
            container_name              = gc_container_salv
          EXCEPTIONS
            cntl_error                  = 1
            cntl_system_error           = 2
            create_error                = 3
            lifetime_error              = 4
            lifetime_dynpro_dynpro_link = 5
            OTHERS                      = 6.
        IF sy-subrc <> 0.
          MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                     WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        ENDIF.

      CATCH cx_salv_msg .
    ENDTRY.

    CALL METHOD cl_salv_table=>factory
      EXPORTING
        r_container  = calv_const_post
      IMPORTING
        r_salv_table = g_salv
      CHANGING
        t_table      = gt_utillajes.

  ENDIF.

* Optimizamos columnas
  lr_columns = g_salv->get_columns( ).
  lr_columns->set_optimize( 'X' ).

* Ocultamos columnas
  PERFORM hide_columns USING g_salv.

* Mostramos SALV
  g_salv->display( ).
ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS '0100'.
  SET TITLEBAR 'TITLE_200'.

* Si no esta creado el ALV, creamos
  IF g_custom_container IS INITIAL.
*   Creamos el container principal
    CREATE OBJECT g_custom_container
      EXPORTING
        container_name = gc_container_alv.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid
      EXPORTING
        i_parent = g_custom_container.

*   Para los eventos
    CREATE OBJECT g_application.
    SET HANDLER g_application->handle_data_changed          FOR g_grid.
    SET HANDLER g_application->handle_data_changed_finished FOR g_grid.
    SET HANDLER g_application->handle_toolbar               FOR g_grid.
    SET HANDLER g_application->handle_user_command          FOR g_grid.

*   Cuando es editable -> para que escuche los eventos: ENTER...
    CALL METHOD g_grid->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

*   Mostramos el ALV
    PERFORM mostrar_alv.

* Refrescamos el ALV
  ELSE.
    PERFORM refrescar_alv.
  ENDIF.
ENDMODULE.
