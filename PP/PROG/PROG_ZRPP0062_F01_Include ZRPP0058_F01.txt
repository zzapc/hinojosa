*----------------------------------------------------------------------*
***INCLUDE ZRPP0058_F01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  OBTENER_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM obtener_datos .

  data: lr_lotes type ZPPR_CHARG_D,
        lr_rec   type ZRRID_RECETA.

  lr_lotes[] = s_lote[].
  lr_rec[]   = s_rec[].

  gt_datos = zclpp_recetas_reparto_pulper=>obtener_datos_trazabilidad(
        i_werks        = p_werks
        ir_lotes_rollo = lr_lotes
        ir_recetas     = lr_rec
         ).

ENDFORM.


FORM mostrar_datos.

  DATA: lr_functions TYPE REF TO cl_salv_functions_list,
        lo_column2   TYPE REF TO cl_salv_column_table,

        lo_column    TYPE REF TO cl_salv_column,
        lo_columns   TYPE REF TO cl_salv_columns_table.

  TRY.
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = gr_alv
        CHANGING
          t_table      = gt_datos ).
    CATCH cx_salv_msg.                                  "#EC NO_HANDLER
  ENDTRY.

*  gr_alv->set_screen_status(
*    pfstatus      =  'SALV_STANDARD'
*    report        =  'ZRPP0054'
*    set_functions = gr_alv->c_functions_all ) .

  DATA(gr_layout) = gr_alv->get_layout( ).
  key-report = sy-repid.
  gr_layout->set_key( key ).
  gr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
  gr_layout->set_default( abap_true ).
*  gr_layout->set_initial_layout( p_lay06 ).

  lo_columns = gr_alv->get_columns( ).

  TRY.
      lo_column2 ?= lo_columns->get_column( 'ID_RECETA' ).
      lo_column2->set_cell_type( if_salv_c_cell_type=>hotspot ).

      lo_column ?= lo_columns->get_column( 'ID_RECETA' ).
      lo_column->set_short_text( 'Receta' ).
      lo_column->set_medium_text( 'Receta' ).
      lo_column->set_long_text( 'Receta' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'MATNR_FAB' ).
      lo_column->set_short_text( 'Mat. fabr.' ).
      lo_column->set_medium_text( 'Material fabricado' ).
      lo_column->set_long_text( 'Material fabricado' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'MAKTX_FAB' ).
      lo_column->set_short_text( 'Desc. fab.' ).
      lo_column->set_medium_text( 'Descr. mat. fabr.' ).
      lo_column->set_long_text( 'Descripción material fabricado' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'LOTE_FAB' ).
      lo_column->set_short_text( 'Lote fabr.' ).
      lo_column->set_medium_text( 'Lote fabricado' ).
      lo_column->set_long_text( 'Lote fabricado' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'KG_LOTE_FAB' ).
      lo_column->set_short_text( 'Kg.Lot fab' ).
      lo_column->set_medium_text( 'Kg lote fabricado' ).
      lo_column->set_long_text( 'Kg. lote fabricado' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'UNI_LOTE_FAB' ).
      lo_column->set_short_text( 'UMB' ).
      lo_column->set_medium_text( 'UMB' ).
      lo_column->set_long_text( 'UMB' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'FECHA_FAB_ROLLO' ).
      lo_column->set_short_text( 'F.fab.roll' ).
      lo_column->set_medium_text( 'F. fab rollo' ).
      lo_column->set_long_text( 'Fecha fabricación rollo' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'HORA_FAB_ROLLO' ).
      lo_column->set_short_text( 'H.fab.roll' ).
      lo_column->set_medium_text( 'H. fab rollo' ).
      lo_column->set_long_text( 'Hora fabricación rollo' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'MATNR_MP' ).
      lo_column->set_short_text( 'Mat. MP' ).
      lo_column->set_medium_text( 'Material MP' ).
      lo_column->set_long_text( 'Material MP' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'MAKTX_MP' ).
      lo_column->set_short_text( 'Desc. MP' ).
      lo_column->set_medium_text( 'Desc. mat. MP' ).
      lo_column->set_long_text( 'Descripción material MP' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'LOTE_MP' ).
      lo_column->set_short_text( 'Lote MP' ).
      lo_column->set_medium_text( 'Lote MP' ).
      lo_column->set_long_text( 'Lote MP' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'KG_CONSU_MP' ).
      lo_column->set_short_text( 'Kg.cons MP' ).
      lo_column->set_medium_text( 'Kg. consumidos MP' ).
      lo_column->set_long_text( 'Kg. consumidos MP' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'MATNR_MP' ).
      lo_column->set_short_text( 'Mat. MP' ).
      lo_column->set_medium_text( 'Material MP' ).
      lo_column->set_long_text( 'Material MP' ).
    CATCH cx_root .
  ENDTRY.
  TRY.
      lo_column ?= lo_columns->get_column( 'UNI_CONSU_MP' ).
      lo_column->set_short_text( 'UMB' ).
      lo_column->set_medium_text( 'UMB' ).
      lo_column->set_long_text( 'UMB' ).
    CATCH cx_root .
  ENDTRY.

    TRY.
      lo_column ?= lo_columns->get_column( 'DESCRIP_REC' ).
      lo_column->set_short_text( 'Desc. rec' ).
      lo_column->set_medium_text( 'Desc. receta' ).
      lo_column->set_long_text( 'Desc. receta' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'ZCALIDAD' ).
      lo_column->set_short_text( 'Calidad' ).
      lo_column->set_medium_text( 'Calidad' ).
      lo_column->set_long_text( 'Calidad' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'FECHA_CON_PUL_261' ).
      lo_column->set_short_text( 'F.consumo' ).
      lo_column->set_medium_text( 'Fecha consumo' ).
      lo_column->set_long_text( 'Fecha consumo' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'HORA_CON_PUL_261' ).
      lo_column->set_short_text( 'H.consumo' ).
      lo_column->set_medium_text( 'Hora consumo' ).
      lo_column->set_long_text( 'Hora consumo' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'FECHA_TRAS_PUL_311' ).
      lo_column->set_short_text( 'F. pulper' ).
      lo_column->set_medium_text( 'Fecha pulper' ).
      lo_column->set_long_text( 'Fecha pulper' ).
    CATCH cx_root .
  ENDTRY.


  TRY.
      lo_column ?= lo_columns->get_column( 'HORA_TRAS_PUL_311' ).
      lo_column->set_short_text( 'H. pulper' ).
      lo_column->set_medium_text( 'Hora pulper' ).
      lo_column->set_long_text( 'Hora pulper' ).
    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'LIFNR' ).
      lo_column->set_short_text( 'Proveedor' ).
      lo_column->set_medium_text( 'Proveedor' ).
      lo_column->set_long_text( 'Proveedor' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'NAME1_GP' ).
      lo_column->set_short_text( 'Nom. prov.' ).
      lo_column->set_medium_text( 'Nombre proveedor' ).
      lo_column->set_long_text( 'Nombre proveedor' ).

    CATCH cx_root .
  ENDTRY.

  TRY.
      lo_column ?= lo_columns->get_column( 'BUDAT' ).
      lo_column->set_short_text( 'F. compra' ).
      lo_column->set_medium_text( 'Fecha compra' ).
      lo_column->set_long_text( 'Fecha compra' ).

    CATCH cx_root .
  ENDTRY.


*  gr_column->set_alignment( if_salv_c_alignment=>right ).

*-- events
  gr_events = gr_alv->get_event( ).
  CREATE OBJECT event_handler.
*  SET HANDLER event_handler->on_user_command FOR gr_events.
  SET HANDLER event_handler->on_link_click FOR gr_events.

**... §3.1 activate ALV generic Functions
  lr_functions = gr_alv->get_functions( ).
  lr_functions->set_all( 'X' ).

*-- Selection
*  gr_selections = gr_alv->get_selections( ).
*  gr_selections->set_selection_mode(
*                     if_salv_c_selection_mode=>row_column ).

  DATA:   lo_cols_tab TYPE REF TO cl_salv_columns_table.

  lo_cols_tab = gr_alv->get_columns( ).
  lo_cols_tab->set_optimize( ).
*  TRY.
*      lo_cols_tab->set_color_column( 'COLOR' ).
*
*    CATCH cx_salv_data_error.                           "#EC NO_HANDLER
*  ENDTRY.


  gr_alv->display( ).

ENDFORM.
