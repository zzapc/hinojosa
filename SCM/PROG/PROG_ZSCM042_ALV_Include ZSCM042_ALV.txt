*&---------------------------------------------------------------------*
*&  Include           ZSCM042_ALV
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form ALV_DISPLAY
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM alv_display USING    p_container_name  TYPE scrfname
                          p_structname      TYPE dd02l-tabname
                          p_title           TYPE lvc_title
                 CHANGING pt_outtab         TYPE ANY TABLE
                          pref_container    TYPE REF TO cl_gui_custom_container
                          pref_alv          TYPE REF TO cl_gui_alv_grid
                          ps_variant        TYPE disvariant
                          ps_layout         TYPE lvc_s_layo
                          pt_fieldcat       TYPE lvc_t_fcat
                          pt_toolbar_exclu  TYPE ui_functions.

  DATA: BEGIN OF ls_stable,
          row TYPE c VALUE 'X',
          col TYPE c VALUE 'X',
        END OF ls_stable.

  IF pref_alv IS INITIAL.
    IF cl_gui_alv_grid=>offline( ) IS INITIAL.

      CREATE OBJECT pref_container
        EXPORTING
          container_name = p_container_name
        EXCEPTIONS
          OTHERS         = 1.
      IF sy-subrc NE 0.
*"
      ENDIF.

      CREATE OBJECT pref_alv
        EXPORTING
          i_parent = pref_container
        EXCEPTIONS
          OTHERS   = 1.
      IF sy-subrc NE 0.
*"
      ENDIF.

      CALL METHOD pref_alv->register_edit_event
        EXPORTING
          i_event_id = cl_gui_alv_grid=>mc_evt_modified
        EXCEPTIONS
          error      = 1
          OTHERS     = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

*      CALL METHOD pref_alv->register_delayed_event
*        EXPORTING
*          i_event_id = cl_gui_alv_grid=>mc_evt_delayed_change_select.

      CASE p_structname.
        WHEN g_structname.
          CREATE OBJECT obj_event_receiver.
          SET HANDLER obj_event_receiver->handle_toolbar        FOR pref_alv.  "Botones ALV
          SET HANDLER obj_event_receiver->handle_user_command   FOR pref_alv.
          SET HANDLER obj_event_receiver->handle_data_changed_finished  FOR pref_alv.
          SET HANDLER obj_event_receiver->handle_data_changed_2000      FOR pref_alv.
          "SET HANDLER obj_event_receiver->handle_delayed_changed_sel_cb FOR pref_alv.

        WHEN g_structname2100.
          CREATE OBJECT obj_event_receiver_2100.
          SET HANDLER obj_event_receiver_2100->handle_data_changed_2100 FOR pref_alv.
        WHEN OTHERS.
      ENDCASE.

      PERFORM alv_fieldcatalog USING p_structname
                               CHANGING pt_fieldcat.

      PERFORM alv_layout USING p_structname
                               p_title
                         CHANGING ps_layout.

      PERFORM alv_toolbar USING p_structname
                          CHANGING pt_toolbar_exclu.

*      ps_variant-report = sy-repid.
*      ps_variant-handle = '0001'.

      CALL METHOD pref_alv->set_table_for_first_display
        EXPORTING
          i_bypassing_buffer   = 'X'
          is_variant           = ps_variant
          i_save               = 'A'
          is_layout            = ps_layout
          it_toolbar_excluding = pt_toolbar_exclu
        CHANGING
          it_outtab            = pt_outtab
          it_fieldcatalog      = pt_fieldcat
        EXCEPTIONS
          OTHERS               = 1.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

    ENDIF.
  ELSE.
    CALL METHOD pref_alv->refresh_table_display
      EXPORTING
        is_stable = ls_stable.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ALV_FIELDCATALOG
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> G_STRUCTNAME
*&      <-- GT_FIELDCAT
*&---------------------------------------------------------------------*
FORM alv_fieldcatalog  USING p_structname   TYPE dd02l-tabname
                       CHANGING pt_fieldcat TYPE lvc_t_fcat.

  FIELD-SYMBOLS: <fs_fieldcat> TYPE LINE OF lvc_t_fcat.

  FREE pt_fieldcat.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
*     i_buffer_active        = abap_true
      i_structure_name       = p_structname
      i_bypassing_buffer     = abap_true
*     I_INTERNAL_TABNAME     = gt_outtab
    CHANGING
      ct_fieldcat            = pt_fieldcat
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF sy-subrc <> 0.
*   Implement suitable error handling here
  ENDIF.

  CASE p_structname.
    WHEN g_structname.  "ALV principal - Camiones/Entregas a desviar.
      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'SEL'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-checkbox = 'X'.
        <fs_fieldcat>-edit = 'X'.
      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'CANT_DESVIO'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-edit = 'X'.
      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'VKORG'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-tech = 'X'.
      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'VGBEL'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-tech = 'X'.
      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'VGPOS'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-tech = 'X'.
      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'UECHA'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-tech = 'X'.
      ENDIF.

    WHEN g_structname2100.  "Popup-ALV - Nuevos Destinatarios.
      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'KUNWE_DEST'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-edit = 'X'.
      ENDIF.

*      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'LGORT_DEST'.
*      IF sy-subrc EQ 0.
*        <fs_fieldcat>-edit = 'X'.
*      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'FLAGCM'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-tech = 'X'.
      ENDIF.

      READ TABLE pt_fieldcat ASSIGNING <fs_fieldcat> WITH KEY fieldname = 'FLAGCM_DEST'.
      IF sy-subrc EQ 0.
        <fs_fieldcat>-tech = 'X'.
      ENDIF.
    WHEN OTHERS.
  ENDCASE.

*  LOOP AT pt_fieldcat ASSIGNING FIELD-SYMBOL(<fs_fieldcat>).
*
*    CASE <fs_fieldcat>-fieldname.
*      WHEN ''.
*        <fs_fieldcat>-coltext = TEXT-f01.
*        <fs_fieldcat>-tooltip = TEXT-f01.
*        <fs_fieldcat>-seltext = TEXT-f01.
*
*        WHEN OTHERS.
*      ENDCASE.
*    ENDIF.
*
*  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ALV_LAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GS_LAYOUT
*&---------------------------------------------------------------------*
FORM alv_layout   USING p_structname   TYPE dd02l-tabname
                        p_title        TYPE lvc_title
                  CHANGING ps_layout   TYPE lvc_s_layo.

  CLEAR ps_layout.

  IF p_title IS NOT INITIAL.
    ps_layout-grid_title  = p_title.
  ENDIF.

  ps_layout-cwidth_opt  = 'X'.
*  ps_layout-sel_mode    = 'A'.  "Column/row selection
  ps_layout-no_rowmark  = 'X'.  "Disable standard ALV col. for row selection.
*  ps_layout-zebra       = 'X'.
*  ps_layout-no_toolbar  = 'X'.
*  ps_layout-ctab_fname  = 'COLORTAB'.
  ps_layout-stylefname  = 'STYLETAB'.

  IF p_structname EQ g_structname2100.
    ps_layout-no_toolbar  = 'X'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ALV_TOOLBAR
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GT_TOOLBAR_EXCLU
*&---------------------------------------------------------------------*
FORM alv_toolbar  USING p_structname   TYPE dd02l-tabname
                  CHANGING pt_tb_exclu TYPE ui_functions.

  FREE pt_tb_exclu.

  APPEND cl_gui_alv_grid=>mc_fg_edit  TO pt_tb_exclu. "Function Group Edit buttons.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_FIX_CWIDTH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_PREF_ALV  text
*----------------------------------------------------------------------*
FORM alv_fix_cwidth  CHANGING pref_alv TYPE REF TO cl_gui_alv_grid.

  DATA: ls_layout TYPE lvc_s_layo.

  "Ajuste ancho cols: el layout cambia a cwidth_opt = '1' y no sale correctamente el ancho en algunas columnas al refrescar.
  CALL METHOD pref_alv->get_frontend_layout
    IMPORTING
      es_layout = ls_layout.

  ls_layout-cwidth_opt = 'X'.

  CALL METHOD pref_alv->set_frontend_layout
    EXPORTING
      is_layout = ls_layout.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESH_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GREF_ALV  text
*----------------------------------------------------------------------*
FORM alv_refresh_display  CHANGING pref_alv TYPE REF TO cl_gui_alv_grid.

  DATA: BEGIN OF ls_stable,
          row TYPE c VALUE 'X',
          col TYPE c VALUE 'X',
        END OF ls_stable.

  PERFORM alv_fix_cwidth CHANGING pref_alv.

  CALL METHOD pref_alv->refresh_table_display
    EXPORTING
      is_stable = ls_stable.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GT_OUTTAB  text
*      <--P_GT_OUTTAB2100  text
*      <--P_GREF_ALV  text
*----------------------------------------------------------------------*
FORM alv_refresh_data  CHANGING pt_outtab     TYPE ty_tab_outtab
                                pt_outtab2100 TYPE ty_tab_outtab2100
                                pref_alv      TYPE REF TO cl_gui_alv_grid.
  FREE: pt_outtab,
        pt_outtab2100.

  PERFORM get_data CHANGING pt_outtab.
  PERFORM alv_refresh_display CHANGING pref_alv.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_COL_NOEDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_FIELD   text
*      <--P_STYLETAB  text
*----------------------------------------------------------------------*
FORM set_col_noedit  USING    p_fieldname TYPE lvc_s_styl-fieldname
                     CHANGING pt_styletab TYPE lvc_t_styl.

  DATA: ls_styl TYPE lvc_s_styl.

  ls_styl-fieldname = p_fieldname.
  "No editable + no mostrar matchcode:
  ls_styl-style     = cl_gui_alv_grid=>mc_style_disabled + cl_gui_alv_grid=>mc_style_f4_no.
  INSERT ls_styl INTO TABLE pt_styletab.
  CLEAR ls_styl.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_COL_EDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_FIELD   text
*      <--P_STYLETAB  text
*----------------------------------------------------------------------*
FORM set_col_edit  USING    p_fieldname TYPE lvc_s_styl-fieldname
                   CHANGING pt_styletab TYPE lvc_t_styl.

  DATA: ls_styl TYPE lvc_s_styl.

  ls_styl-fieldname = p_fieldname.
  ls_styl-style     = cl_gui_alv_grid=>mc_style_enabled.
  INSERT ls_styl INTO TABLE pt_styletab.
  CLEAR ls_styl.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_COL_NOF4
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_FIELD   text
*      <--P_STYLETAB  text
*----------------------------------------------------------------------*
FORM set_col_nof4  USING    p_fieldname TYPE lvc_s_styl-fieldname
                   CHANGING pt_styletab TYPE lvc_t_styl.

  DATA: ls_styl TYPE lvc_s_styl.

  ls_styl-fieldname = p_fieldname.
  ls_styl-style     = cl_gui_alv_grid=>mc_style_f4_no.
  INSERT ls_styl INTO TABLE pt_styletab.

  CLEAR ls_styl.

ENDFORM.
