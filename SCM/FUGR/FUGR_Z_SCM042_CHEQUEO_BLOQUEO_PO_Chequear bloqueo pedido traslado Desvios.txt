FUNCTION z_scm042_chequeo_bloqueo_po .
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_EBELN) TYPE  EBELN
*"     REFERENCE(I_UNAME) TYPE  SYST_UNAME DEFAULT SY-UNAME
*"     REFERENCE(I_MODE) TYPE  MODUS_D DEFAULT 1
*"     REFERENCE(I_TIMES) TYPE  INT1 DEFAULT 10
*"     REFERENCE(I_SECONDS) TYPE  INT1 DEFAULT 1
*"  EXPORTING
*"     REFERENCE(ET_RETURN) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
* JGM 04.2024 GAPCM042 Aplicativo Gestión de Desvíos.
*
*--------------------------------------------------------------------*
  DATA: lv_mode TYPE modus_d.

  IF i_ebeln IS NOT INITIAL.

    IF i_mode IS NOT INITIAL.
      lv_mode = i_mode.
    ELSE.
      lv_mode = 1.
    ENDIF.

    CASE lv_mode.
      WHEN 1.
        DATA: ls_seqg3 TYPE seqg3,
              lt_enq   TYPE TABLE OF seqg3.

        DATA: lv_times TYPE i VALUE '10',
              lv_secs  TYPE i VALUE '1',
              lv_count TYPE i.

        IF i_times IS NOT INITIAL.
          lv_times = i_times.
        ENDIF.
        IF i_seconds IS NOT INITIAL.
          lv_secs = i_seconds.
        ENDIF.

        CLEAR ls_seqg3.
        IF i_uname IS NOT INITIAL.
          ls_seqg3-guname = i_uname.
        ELSE.
          ls_seqg3-guname = sy-uname.
        ENDIF.
        ls_seqg3-gname  = 'EKKO'.
        ls_seqg3-garg   = sy-mandt && i_ebeln.

        DO lv_times TIMES.
          FREE lt_enq.

          CALL FUNCTION 'ENQUEUE_READ'
            EXPORTING
*             GCLIENT               = SY-MANDT
              gname                 = ls_seqg3-gname
              garg                  = ls_seqg3-garg
              guname                = ls_seqg3-guname
            TABLES
              enq                   = lt_enq
            EXCEPTIONS
              communication_failure = 1
              system_failure        = 2
              OTHERS                = 3.

          IF sy-subrc EQ 0 AND lt_enq IS INITIAL.
**            PERFORM fill_return USING 'I' '00' '398' '-test-NO-HAY Bloqueo PO: ' i_ebeln  lv_count space CHANGING et_return.

            IF lv_count IS NOT INITIAL.
              "Espera desbloqueo OK".
              PERFORM fill_return USING 'I' 'ZSCM042' '022' i_ebeln space space space CHANGING et_return.
            ENDIF.

            EXIT.
          ELSE.
            DATA(ls_enq) = lt_enq[ 1 ].
            WAIT UP TO lv_secs SECONDS.

            ADD 1 TO lv_count.
**            PERFORM fill_return USING 'I' '00' '398' '-test Bloqueo: ' i_ebeln  ls_enq-gobj  ls_enq-gmode CHANGING et_return.
**            PERFORM fill_return USING 'I' '00' '398' '-test-BLOQUEADA PO: ' i_ebeln  lv_count space CHANGING et_return.
          ENDIF.
        ENDDO.

      WHEN OTHERS.
        "Con enqueue_* del objeto de bloqueo, en modo V y wait=X, se hace un chequeo y espera estándar hasta que
        "se libere automáticamente el posible autobloqueo previo de la PO por las funciones Z de WM, en caso de haberlo.
        "
        "El sy-uname es el mismo user actual que acaba de modificar la PO al momento de este chequeo.
        "
        "Parámetros del sistema en tcode RZ11:
        "- enque/delay_max: Máximo tiempo de espera, 5 segundos por defecto.
        "- enque/delay_max_refine: Veces por segundo para intentar, 1 por defecto.
        "  Con enque/delay_max = 5 entonces lo intentará 1 vez por segundo durante 5 segundos -> 5 veces en total.
        "- enque/delay_jitter: Para prevenir bloqueos mutuos o deadlocks. 400ms por defecto.

        CALL FUNCTION 'ENQUEUE_EMEKKOE'
          EXPORTING
            mode_ekko      = 'V'  "Chequeo de colisiones para bloqueo tipo E. Solo chequea, no bloquea.
            mode_ekpo      = 'V'
*           MANDT          = SY-MANDT
            ebeln          = i_ebeln
*           EBELP          =
*           X_EBELN        = ' '
*           X_EBELP        = ' '
*           _SCOPE         = '2'
            _wait          = 'X'  "Esperar liberación de bloqueo, 5 segs por defecto (en lugar de DO y WAIT UP TO).
*           _COLLECT       = ' '
          EXCEPTIONS
            foreign_lock   = 1
            system_failure = 2
            OTHERS         = 3.

        IF sy-subrc EQ 0.
          "Espera desbloqueo OK".
          PERFORM fill_return USING 'I' 'ZSCM042' '022' i_ebeln space space space CHANGING et_return.
        ELSE.
          "Aviso, excedida espera desbloqueo".
          PERFORM fill_return USING 'W' 'ZSCM042' '023' i_ebeln space space space CHANGING et_return.
        ENDIF.
    ENDCASE.

  ENDIF.

ENDFUNCTION.
