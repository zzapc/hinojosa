FUNCTION z_scm042_bloquear_pos_pedido.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IT_PED_POS) TYPE  TDT_VBELN_POSNR
*"     VALUE(I_LIFSP) TYPE  LIFSP_EP DEFAULT 'ZC'
*"  EXPORTING
*"     VALUE(ET_RETURN) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
* JGM 05.2024 GAPCM042 Aplicativo Gestión de Desvíos:
* Variante modificada de la FM Z_SCM042_RECHAZAR_POS_PEDIDO.
* -Asignarle un bloqueo de entrega a nivel de reparto VBEP-LIFSP = 'ZC'.
* -Actualizar estatus global VBUP-GBSTA = 'C'.
*--------------------------------------------------------------------*
  CONSTANTS:
    lc_lifsp_zc TYPE vbep-lifsp VALUE 'ZC'.

  DATA: ls_order_header_in  TYPE bapisdh1,
        ls_order_header_inx TYPE bapisdh1x,
        ls_order_items_in   TYPE bapisditm,
        ls_order_items_inx  TYPE bapisditmx,
        ls_schedule_lines   TYPE bapischdl,
        ls_schedule_linesx  TYPE bapischdlx.

  DATA: lt_order_items_in  TYPE TABLE OF bapisditm,
        lt_order_items_inx TYPE TABLE OF  bapisditmx,
        lt_schedule_lines  TYPE TABLE OF bapischdl,
        lt_schedule_linesx TYPE TABLE OF bapischdlx.

  DATA: lt_ped_pos TYPE tdt_vbeln_posnr,
        lt_return  TYPE bapiret2_tt.

  DATA: lv_salesdocument TYPE bapivbeln-vbeln,
        lv_lifsp         TYPE lifsp_ep.
  DATA: lr_type_error TYPE RANGE OF bapi_mtype.


  IF i_lifsp IS NOT INITIAL.
    lv_lifsp = i_lifsp.
  ELSE.
    lv_lifsp = lc_lifsp_zc.
  ENDIF.

  lr_type_error = VALUE #( sign = 'I' option = 'EQ' ( low = 'E' ) ( low = 'A' ) ).

  lt_ped_pos = it_ped_pos.

  SORT lt_ped_pos BY vbeln posnr.

  "Datos repartos.
  SELECT vbeln, posnr, etenr
    INTO TABLE @DATA(lt_vbep)
    FROM vbep
    FOR ALL ENTRIES IN @lt_ped_pos
    WHERE vbeln EQ @lt_ped_pos-vbeln.
  IF sy-subrc EQ 0.
    SORT lt_vbep BY vbeln posnr etenr.
  ENDIF.

  LOOP AT lt_ped_pos ASSIGNING FIELD-SYMBOL(<fs_ped_pos>).

    AT NEW vbeln.
      lv_salesdocument = <fs_ped_pos>-vbeln.

      "Cabecera:
      CLEAR ls_order_header_in.
      ls_order_header_inx-updateflag = 'U'.
    ENDAT.

    "Posiciones:
    ls_order_items_in-itm_number = <fs_ped_pos>-posnr.

    APPEND ls_order_items_in TO lt_order_items_in.
    CLEAR ls_order_items_in.

    ls_order_items_inx-updateflag = 'U'.
    ls_order_items_inx-itm_number = <fs_ped_pos>-posnr.

    APPEND ls_order_items_inx TO lt_order_items_inx.
    CLEAR ls_order_items_inx.

    "Posiciones de reparto.
    LOOP AT lt_vbep INTO DATA(ls_vbep) WHERE vbeln EQ lv_salesdocument AND posnr EQ <fs_ped_pos>-posnr.
      ls_schedule_lines-itm_number = ls_vbep-posnr.
      ls_schedule_lines-sched_line = ls_vbep-etenr.
      ls_schedule_lines-req_dlv_bl = lv_lifsp.

      APPEND ls_schedule_lines TO lt_schedule_lines.
      CLEAR ls_schedule_lines.

      ls_schedule_linesx-updateflag = 'U'.
      ls_schedule_linesx-itm_number = ls_vbep-posnr.
      ls_schedule_linesx-sched_line = ls_vbep-etenr.
      ls_schedule_linesx-req_dlv_bl = 'X'.

      APPEND ls_schedule_linesx TO lt_schedule_linesx.
      CLEAR ls_schedule_linesx.
    ENDLOOP.
    IF sy-subrc NE 0.
      "No existen posiciones reparto a bloquear, entrega".
      PERFORM fill_return USING 'E' 'ZSCM042' '045' <fs_ped_pos>-vbeln <fs_ped_pos>-posnr space space CHANGING et_return.
      RETURN.
    ENDIF.

    AT END OF vbeln.
      CALL FUNCTION 'BAPI_SALESORDER_CHANGE'
        EXPORTING
          salesdocument    = lv_salesdocument
          order_header_inx = ls_order_header_inx
        TABLES
          return           = lt_return
          order_item_in    = lt_order_items_in
          order_item_inx   = lt_order_items_inx
          schedule_lines   = lt_schedule_lines
          schedule_linesx  = lt_schedule_linesx.

      LOOP AT lt_return TRANSPORTING NO FIELDS WHERE type IN lr_type_error.
        EXIT.
      ENDLOOP.
      IF sy-subrc EQ 0.
        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
      ELSE.
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            wait = 'X'.

        "Bloqueadas posiciones reparto pedido cliente".
        PERFORM fill_return USING 'S' 'ZSCM042' '044' lv_salesdocument space space space CHANGING et_return.
      ENDIF.

      "Mensajes de error de la bapi.
      DELETE lt_return WHERE type NOT IN lr_type_error.
      APPEND LINES OF lt_return TO et_return.

      FREE: lt_return,
            lt_order_items_in,
            lt_order_items_inx.
      FREE: lt_schedule_lines,
            lt_schedule_linesx.
    ENDAT.
  ENDLOOP.

ENDFUNCTION.
