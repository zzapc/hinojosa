
class ZCL_SI_SMILE80_ERROR_IN_SMILE definition
  public
  create public .

public section.

  interfaces ZII_SI_SMILE80_ERROR_IN_SMILE .
protected section.
private section.
endclass. "ZCL_SI_SMILE80_ERROR_IN_SMILE definition
class ZCL_SI_SMILE80_ERROR_IN_SMILE implementation.
  METHOD zii_si_smile80_error_in_smile~si_smile80_error_in_smile_to_s.
*** **** INSERT IMPLEMENTATION HERE **** ***

    UPDATE zte80_messages SET
    estado       = '1'
    id_mensaje   = input-mt_smile80_error_in_smile_to_s-document-body-processed_message_id
    fecha_err    = sy-datum
    hora_err     = sy-uzeit
    reason_code  = input-mt_smile80_error_in_smile_to_s-document-body-reason_code
    reason_text  = input-mt_smile80_error_in_smile_to_s-document-body-reason_text

    WHERE id_mensaje = input-mt_smile80_error_in_smile_to_s-document-body-processed_message_id.

*   variables envio mail.
    DATA: lt_addr           TYPE bcsy_smtpa,
          lo_send_email     TYPE REF TO cl_bcs,
          lo_document       TYPE REF TO cl_document_bcs,
          lo_recipient      TYPE REF TO if_recipient_bcs,
          lv_sent_to_all    TYPE os_boolean,
          lo_sender         TYPE REF TO cl_cam_address_bcs,
          lv_sender         TYPE adr6-smtp_addr,
          lv_subject        TYPE so_obj_des,
          lt_message        TYPE soli_tab,
          ls_message        TYPE soli,
          ls_zte80_messages TYPE zte80_messages.

*------------------------------------------------------------------------------------------

*   recuperamos los destinatios del mail en caso de que la interface genere errores.
    SELECT * FROM ztmes_mail
      INTO TABLE @DATA(t_mail)
      WHERE interface = 'E80'.

    SELECT SINGLE * FROM zte80_messages INTO ls_zte80_messages WHERE id_mensaje = input-mt_smile80_error_in_smile_to_s-document-body-processed_message_id.

    READ TABLE t_mail INTO DATA(ls_mails) WITH KEY werks = ls_zte80_messages-centro.
    IF sy-subrc = 0.

      IF ls_mails-mail_1 NE space.
        APPEND ls_mails-mail_1 TO lt_addr.
      ENDIF.
      IF ls_mails-mail_2 NE space.
        APPEND ls_mails-mail_2 TO lt_addr.
      ENDIF.
      IF ls_mails-mail_3 NE space.
        APPEND ls_mails-mail_3 TO lt_addr.
      ENDIF.
      IF ls_mails-mail_4 NE space.
        APPEND ls_mails-mail_4 TO lt_addr.
      ENDIF.
      IF ls_mails-mail_5 NE space.
        APPEND ls_mails-mail_5 TO lt_addr.
      ENDIF.

*         Inicialización de la clase
      lo_send_email = cl_bcs=>create_persistent( ).


*         cuerpo del mail
      APPEND ls_message TO lt_message.
      CONCATENATE '<P> ID mensaje =' ls_zte80_messages-id_mensaje '</P>'
        INTO ls_message SEPARATED BY space.
      APPEND ls_message TO lt_message.

      CONCATENATE '<P> Tipo mensaje =' ls_zte80_messages-tipo_mensaje '</P>'
       INTO ls_message SEPARATED BY space.
      APPEND ls_message TO lt_message.

      CONCATENATE '<P> Numero de documento =' ls_zte80_messages-numero_de_dcmnt '</P>'
       INTO ls_message SEPARATED BY space.
      APPEND ls_message TO lt_message.

      CONCATENATE '<P> Reason code =' ls_zte80_messages-reason_code '</P>'
       INTO ls_message SEPARATED BY space.
      APPEND ls_message TO lt_message.

      CONCATENATE '<P> Reason text =' ls_zte80_messages-reason_text '</P>'
       INTO ls_message SEPARATED BY space.
      APPEND ls_message TO lt_message.


*         Crear documento
      lv_subject = 'Error integración SAP – E80'.

      lo_document =  cl_document_bcs=>create_document( i_type    =  'HTM'
                                                       i_subject =  lv_subject
                                                       i_text    =  lt_message ).
*         Enviar documento al email
      lo_send_email->set_document( lo_document ).

      lv_sender = 'sap@hinojosa.es'.

      lo_sender = cl_cam_address_bcs=>create_internet_address( lv_sender  ).
      lo_send_email->set_sender( i_sender = lo_sender ).

*         Añadir destinatarios al email
      LOOP AT lt_addr ASSIGNING FIELD-SYMBOL(<fs_addr>).
        lo_recipient = cl_cam_address_bcs=>create_internet_address( <fs_addr> ).
        lo_send_email->add_recipient( i_recipient = lo_recipient ).
      ENDLOOP.


*         Enviar email
      TRY.
          lv_sent_to_all = lo_send_email->send( i_with_error_screen = 'X' ).
        CATCH cx_send_req_bcs .
      ENDTRY.

      COMMIT WORK.

    ENDIF.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.

  ENDMETHOD.
endclass. "ZCL_SI_SMILE80_ERROR_IN_SMILE definition
endclass. "ZCL_SI_SMILE80_ERROR_IN_SMILE implementation
