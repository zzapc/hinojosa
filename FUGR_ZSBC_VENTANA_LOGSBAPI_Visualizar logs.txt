FUNCTION ZSBC_VENTANA_LOGSBAPI.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(MENSAJES) TYPE  BAPIRET2_TT OPTIONAL
*"----------------------------------------------------------------------
* En modo BatchInput no debe saltar la ventana
  CHECK sy-binpt EQ space.

* Variables para la creacion del log de incidencias
  DATA:
    l_log_handle TYPE balloghndl,
    mylog_handle TYPE bal_t_logh,
    l_s_log      TYPE bal_s_log,
    l_s_msg      TYPE bal_s_msg,
    l_msgno      TYPE symsgno,
    ls_mensajes  TYPE bapiret2.

* Creamos el log de incidencias
  l_s_log-extnumber  = 'Application Log Demo'(001).
  CALL FUNCTION 'BAL_LOG_CREATE'
    EXPORTING
      i_s_log      = l_s_log
    IMPORTING
      e_log_handle = l_log_handle
    EXCEPTIONS
      OTHERS       = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  LOOP AT mensajes INTO ls_mensajes.
    l_s_msg-msgid = ls_mensajes-id.
    l_s_msg-msgno = ls_mensajes-number.
    l_s_msg-msgty = ls_mensajes-type.
    l_s_msg-msgv1 = ls_mensajes-message_v1.
    l_s_msg-msgv2 = ls_mensajes-message_v2.
    l_s_msg-msgv3 = ls_mensajes-message_v3.
    l_s_msg-msgv4 = ls_mensajes-message_v4.
    l_s_msg-probclass = '3'.

* Añadimos la incidencia al log
    CALL FUNCTION 'BAL_LOG_MSG_ADD'
      EXPORTING
        i_log_handle = l_log_handle
        i_s_msg      = l_s_msg
      EXCEPTIONS
        OTHERS       = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ENDLOOP.

* Creamos el popup con el log de incidencias
  DATA l_s_display_profile TYPE bal_s_prof.

  CALL FUNCTION 'BAL_DSP_PROFILE_POPUP_GET'
    IMPORTING
      e_s_display_profile = l_s_display_profile
    EXCEPTIONS
      OTHERS              = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  l_s_display_profile-use_grid = 'X'.
  l_s_display_profile-disvariant-report = sy-repid.

* Mostramos el log de incidencias
  APPEND l_log_handle TO mylog_handle.
  CALL FUNCTION 'BAL_DSP_LOG_DISPLAY'
    EXPORTING
      i_s_display_profile = l_s_display_profile
      i_t_log_handle      = mylog_handle
    EXCEPTIONS
      OTHERS              = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

* Refrescamos el log de incidencias
  CALL FUNCTION 'BAL_LOG_REFRESH'
    EXPORTING
      i_log_handle  = l_log_handle
    EXCEPTIONS
      log_not_found = 1
      OTHERS        = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.





ENDFUNCTION.
