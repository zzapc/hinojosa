FUNCTION zborrar_lote.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_MATNR) TYPE  MATNR
*"     VALUE(I_CHARG) TYPE  CHARG_D
*"     VALUE(I_CENTRO) TYPE  WERKS_D
*"  EXPORTING
*"     VALUE(E_ERROR) TYPE  XFELD
*"  TABLES
*"      T_MESSAGES STRUCTURE  BAPIRET2
*"----------------------------------------------------------------------

  DATA: wa_ymcha  TYPE mcha,
        lt_return TYPE bapiret2_tab,
        ls_return TYPE bapiret2.

  DATA: gs_messages TYPE bapiret2.

  DATA: lv_extnumber TYPE balnrext.

  wa_ymcha-matnr = i_matnr.
  wa_ymcha-werks = i_centro.
  wa_ymcha-charg = i_charg.
  wa_ymcha-lvorm = 'X'.

  CALL FUNCTION 'VB_CHANGE_BATCH'
    EXPORTING
      ymcha                       = wa_ymcha
*     YUPDMCHA                    =
*     CHANGE_LGORT                =
*     BYPASS_LOCK                 = ' '
*     BYPASS_POST                 = ' '
*     PREPARE_POST                = ' '
*     X_BNCOM                     =
*     KZCLA                       =
*     XKCFC                       =
*     CLASS                       =
*     NO_CHECK_OF_QM_CHAR         = ' '
*     REF_MATNR                   =
*     REF_CHARG                   =
*     REF_WERKS                   =
*     SET_OLD_BATCH               = 'X'
*     BUFFER_REFRESH              =
*     NO_CHANGE_DOCUMENT          = ' '
*     GRUND                       = ' '
*     NO_CFC_CALLS                = ' '
*     BATCH_DEL_FLAGS             = ' '
*     SEND_SYS                    = ' '
*               IMPORTING
*     YMCHA                       =
*     EMKPF                       =
    TABLES
*     CHAR_OF_BATCH               =
*     CHANGED_BATCH               =
*     ZIMSEG                      =
      return                      = t_messages
    EXCEPTIONS
      no_material                 = 1
      no_batch                    = 2
      no_plant                    = 3
      material_not_found          = 4
      plant_not_found             = 5
      lock_on_material            = 6
      lock_on_plant               = 7
      lock_on_batch               = 8
      lock_system_error           = 9
      no_authority                = 10
      batch_not_exist             = 11
      no_class                    = 12
      error_in_classification     = 13
      error_in_valuation_change   = 14
      error_in_status_change      = 15
      region_of_origin_not_found  = 16
      country_of_origin_not_found = 17
      OTHERS                      = 18.
  IF sy-subrc <> 0.
*   Implement suitable error handling here
  ENDIF.

  CLEAR ls_return.
  READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.
  IF ls_return IS NOT INITIAL. " Error act. característica
    e_error = 'X'.

    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*       IMPORTING
*         RETURN        =
      .

*   REGISTRAR ERROR EN CASO DE NO CREACION DEL PEDIDO DE COMPRAS
    LOOP AT lt_return INTO ls_return WHERE type  = 'E'.
      CLEAR gs_messages.
      gs_messages = ls_return.
      APPEND gs_messages TO t_messages.
    ENDLOOP.


    CONCATENATE 'Material' i_matnr 'Lote' i_charg INTO lv_extnumber SEPARATED BY space.

    CALL FUNCTION 'ZMFPP_GUARDAR_LOG'
      EXPORTING
        objeto    = 'ZSAP_MES'
        subobjeto = 'ZBORRAR_LOTE'
        mensajes  = t_messages[]
        extnumber = lv_extnumber.

  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.

*   GUARDAR LOGS CON EL PEDIDO DE COMPRAS CREADO
    READ TABLE lt_return INTO ls_return WITH KEY type = 'S'.
    CLEAR gs_messages.
    gs_messages = ls_return.
    APPEND gs_messages TO t_messages.

  ENDIF.





ENDFUNCTION.
