*&---------------------------------------------------------------------*
*& Include          ZSEI_MIG_00018_V2_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form get_data_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GT_ALV
*&---------------------------------------------------------------------*
FORM get_data_alv  CHANGING lt_alv TYPE tyt_alv.

  DATA: lt_ukmbp_cms_sgm TYPE STANDARD TABLE OF ukmbp_cms_sgm,
        lt_alv_aux       TYPE STANDARD TABLE OF ty_alv,
        ls_alv_aux       TYPE ty_alv,
        ls_ukmbp_cms_sgm TYPE ukmbp_cms_sgm.

  FIELD-SYMBOLS: <fs_alv> TYPE ty_alv.

  CLEAR: lt_alv.
  SELECT but000~partner, but000~name_org1, ukmbp_cms~risk_class
    INTO CORRESPONDING FIELDS OF TABLE @lt_alv_aux
    FROM but000
    INNER JOIN ukmbp_cms ON but000~partner = ukmbp_cms~partner
    WHERE but000~partner IN @s_partne.

  IF lt_alv_aux IS NOT INITIAL.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE lt_ukmbp_cms_sgm
      FROM ukmbp_cms_sgm
      FOR ALL ENTRIES IN lt_alv_aux
      WHERE partner EQ lt_alv_aux-partner
        AND credit_sgmnt EQ p_sgment.


    LOOP AT lt_alv_aux ASSIGNING <fs_alv>.
      CLEAR: ls_ukmbp_cms_sgm.
      READ TABLE lt_ukmbp_cms_sgm INTO ls_ukmbp_cms_sgm WITH KEY partner = <fs_alv>-partner.
      IF sy-subrc EQ 0.
        <fs_alv>-credit_sgmnt = ls_ukmbp_cms_sgm-credit_sgmnt.
        <fs_alv>-credit_limit = ls_ukmbp_cms_sgm-credit_limit.
        <fs_alv>-xblocked = ls_ukmbp_cms_sgm-xblocked.
        <fs_alv>-new_risk_class = p_clrisk.
        <fs_alv>-new_credit_limit = ls_ukmbp_cms_sgm-credit_limit.
        <fs_alv>-new_xblocked = ls_ukmbp_cms_sgm-xblocked.
*        ls_alv_aux = <fs_alv>.
        APPEND <fs_alv> TO lt_alv.
      ENDIF.
    ENDLOOP.

    SORT lt_alv BY partner.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Module STATUS_0100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'ZSTATUS_0100'.
  SET TITLEBAR 'TITLE'.

  IF o_alv IS INITIAL.
    PERFORM initialize_alv.
  ELSE.
    PERFORM refresh_alv.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE gv_okcode.

    WHEN 'BACK' OR '&F03' OR '&F12'.
      SET SCREEN 0.

    WHEN '&F15'.
      LEAVE PROGRAM.

    WHEN 'SAVE'.
      PERFORM update_credit.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Form initialize_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM initialize_alv.

  CREATE OBJECT o_alv EXPORTING i_parent = cl_gui_custom_container=>screen0.

  PERFORM set_fieldcat CHANGING gt_fieldcat.
  PERFORM set_layout   CHANGING gs_layout.
  g_variant-report = g_repid.

  o_alv->set_table_for_first_display(
    EXPORTING
      is_variant                    = g_variant
      i_save                        = g_save
      is_layout                     = gs_layout
    CHANGING
      it_outtab                     = gt_alv
      it_fieldcatalog               = gt_fieldcat
*        it_sort                       =
*        it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4 ).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_fieldcat
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GT_FIELDCAT
*&---------------------------------------------------------------------*
FORM set_fieldcat  CHANGING lt_fieldcat TYPE lvc_t_fcat.

  DATA: ls_fieldcat TYPE lvc_s_fcat.

  CLEAR: lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'PARTNER'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'BUT000'.
  ls_fieldcat-ref_field = 'PARTNER'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'NAME_ORG1'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'BUT000'.
  ls_fieldcat-ref_field = 'NAME_ORG1'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'RISK_CLASS'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS'.
  ls_fieldcat-ref_field = 'RISK_CLASS'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'CREDIT_SGMNT'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS_SGM'.
  ls_fieldcat-ref_field = 'CREDIT_SGMNT'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'CREDIT_LIMIT'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS_SGM'.
  ls_fieldcat-ref_field = 'CREDIT_LIMIT'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'XBLOCKED'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS_SGM'.
  ls_fieldcat-ref_field = 'XBLOCKED'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'NEW_RISK_CLASS'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS'.
  ls_fieldcat-ref_field = 'RISK_CLASS'.
  ls_fieldcat-coltext   = TEXT-003.
  ls_fieldcat-edit     = 'X'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'NEW_CREDIT_LIMIT'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS_SGM'.
  ls_fieldcat-ref_field = 'CREDIT_LIMIT'.
  ls_fieldcat-coltext   = TEXT-004.
  ls_fieldcat-edit     = 'X'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR: ls_fieldcat.
  ls_fieldcat-fieldname = 'NEW_XBLOCKED'.
  ls_fieldcat-tabname   = 'GT_ALV'.
  ls_fieldcat-ref_table = 'UKMBP_CMS_SGM'.
  ls_fieldcat-ref_field = 'XBLOCKED'.
  ls_fieldcat-coltext   = TEXT-005.
  ls_fieldcat-edit     = 'X'.
  APPEND ls_fieldcat TO lt_fieldcat.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_layout
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GS_LAYOUT
*&---------------------------------------------------------------------*
FORM set_layout  CHANGING ls_layout TYPE lvc_s_layo.

  ls_layout-cwidth_opt = abap_true.
  ls_layout-zebra      = abap_true.
  ls_layout-sel_mode   = 'A'.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form update_credit
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM update_credit.

  DATA: ls_alv           TYPE ty_alv,
        ls_selected_rows TYPE lvc_s_row,
        lt_selected_rows TYPE lvc_t_row,
        ls_log           TYPE bapiret2.

  DATA: lo_facade       TYPE REF TO cl_ukm_facade,
        lo_partner      TYPE REF TO cl_ukm_business_partner,
        lo_bupa_factory TYPE REF TO cl_ukm_bupa_factory.

  DATA: xl_ukm_s_bp_cms TYPE ukm_s_bp_cms.

  DATA: lt_ro_business_partner TYPE REF TO cl_ukm_business_partner.

  DATA: lo_account TYPE REF TO cl_ukm_account.

  DATA: xl_bp_credit_sgm TYPE ukm_s_bp_cms_sgm.


  IF o_alv IS NOT INITIAL.
    CALL METHOD o_alv->check_changed_data.
  ENDIF.

  "Obtenemos las lineas seleccionadas en el ALV
  CALL METHOD o_alv->get_selected_rows IMPORTING et_index_rows = lt_selected_rows.

  CLEAR: ls_selected_rows.
  LOOP AT lt_selected_rows INTO ls_selected_rows.
    CLEAR: ls_alv.
    READ TABLE gt_alv INTO ls_alv INDEX ls_selected_rows-index.
    IF sy-subrc EQ 0.

      lo_facade = cl_ukm_facade=>create( i_activity = cl_ukm_cnst_eventing=>bp_maintenance ).
      lo_bupa_factory = lo_facade->get_bupa_factory( ).

* perfil de crédito
      lo_partner = lo_bupa_factory->get_business_partner( i_partner = ls_alv-partner ).

      lo_partner->get_bp_cms( IMPORTING es_bp_cms = xl_ukm_s_bp_cms ).
      xl_ukm_s_bp_cms-risk_class = ls_alv-new_risk_class. "'002'.
      lo_partner->set_bp_cms( EXPORTING is_bp_cms = xl_ukm_s_bp_cms ).


      IF ( ls_alv-credit_limit NE ls_alv-new_credit_limit ) OR ( ls_alv-xblocked NE ls_alv-new_xblocked ).
* cuenta de crédito
        lo_account = lo_bupa_factory->get_credit_account( i_partner       = ls_alv-partner
                                                          i_credit_sgmnt  = ls_alv-credit_sgmnt ).

* segmento de crédito
        lo_account->get_bp_cms_sgm( IMPORTING es_bp_cms_sgm = xl_bp_credit_sgm ).
        IF ls_alv-credit_limit NE ls_alv-new_credit_limit.
          xl_bp_credit_sgm-credit_limit = ls_alv-new_credit_limit.
        ENDIF.
        IF ls_alv-xblocked NE ls_alv-new_xblocked.
          xl_bp_credit_sgm-xblocked = ls_alv-new_xblocked.
        ENDIF.

        lo_account->set_bp_cms_sgm( EXPORTING is_bp_cms_sgm = xl_bp_credit_sgm ).

        lo_bupa_factory->save_all( i_upd_task = abap_false ).
      ENDIF.
    ENDIF.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*     EXPORTING
*       WAIT          = WAIT
      IMPORTING
        return = ls_log.

  ENDLOOP.

  PERFORM get_data_alv CHANGING gt_alv.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form refresh_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM refresh_alv .

  gs_stable-row = abap_true.
  gs_stable-col = abap_true.

  CALL METHOD o_alv->refresh_table_display
    EXPORTING
      is_stable = gs_stable.

ENDFORM.
