*&---------------------------------------------------------------------*
*& Include          ZSEI_MIG_00016_FORM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form f4_for_variant
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f4_for_variant .
  g_variant-report = sy-repid.
  CALL FUNCTION 'LVC_VARIANT_F4'
    EXPORTING
      is_variant    = g_variant
      i_save        = g_save
    IMPORTING
      e_exit        = g_exit
      es_variant    = gx_variant
    EXCEPTIONS
      not_found     = 1
      program_error = 2
      OTHERS        = 3.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF g_exit = space.
      p_vari = gx_variant-variant.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form pai_of_selection_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM pai_of_selection_screen .
  IF NOT p_vari IS INITIAL.

    gx_variant-report  = sy-repid.
    gx_variant-variant = p_vari.

    CALL FUNCTION 'LVC_VARIANT_EXISTENCE_CHECK'
      EXPORTING
        i_save     = g_save
      CHANGING
        cs_variant = gx_variant.

    g_variant = gx_variant.

  ELSE.

    PERFORM variant_init.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form variant_init
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM variant_init .
  CLEAR gx_variant.

  g_repid           = sy-repid.
  g_save            = 'A'.
  gx_variant-report = g_repid.

  CALL FUNCTION 'LVC_VARIANT_DEFAULT_GET'
    EXPORTING
      i_save        = g_save
    CHANGING
      cs_variant    = gx_variant
    EXCEPTIONS
      wrong_input   = 1
      not_found     = 2
      program_error = 3
      OTHERS        = 4.
  IF sy-subrc = 0.
    p_vari = gx_variant-variant.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_data .
  DATA: wl_index TYPE sy-tabix.

  REFRESH: gt_kna1.
  SELECT kunnr lifnr                               "#EC CI_NO_TRANSFORM
     FROM kna1
     INTO CORRESPONDING FIELDS OF TABLE gt_kna1
     WHERE kunnr IN r_kunnr.

  IF sy-subrc <> 0.
    MESSAGE TEXT-000 TYPE 'E'.
  ELSE.
    REFRESH: gt_cvi_cust_link.
    SELECT partner_guid customer
      FROM cvi_cust_link
      INTO CORRESPONDING FIELDS OF TABLE gt_cvi_cust_link
      FOR ALL ENTRIES IN gt_kna1
      WHERE customer = gt_kna1-kunnr.
    IF sy-subrc = 0.
      REFRESH: gt_but000.
      SELECT partner partner_guid
        FROM but000
        INTO CORRESPONDING FIELDS OF TABLE gt_but000
        FOR ALL ENTRIES IN gt_cvi_cust_link
        WHERE partner_guid = gt_cvi_cust_link-partner_guid.
    ENDIF.
    REFRESH: gt_cust.
    LOOP AT gt_kna1 INTO gs_kna1.
      CLEAR: gs_cust.
      CONCATENATE gs_kna1-kunnr '%' INTO gs_cust-tdname.
      CONDENSE gs_cust-tdname NO-GAPS.
      APPEND gs_cust TO gt_cust.
    ENDLOOP.

    READ TABLE gt_cust TRANSPORTING NO FIELDS INDEX 1.
    IF sy-subrc = 0.
      REFRESH: gt_stxh_cust.
      SELECT tdobject tdname tdid tdspras
        FROM stxh
        INTO CORRESPONDING FIELDS OF TABLE gt_stxh_cust
*        FOR ALL ENTRIES IN gt_cust
        WHERE tdobject = c_object_0001 "'KNKK'
          AND tdid     = c_id_0001. "'0001'.
*          AND tdname   LIKE gt_cust-tdname.
      CLEAR: wl_index.
      LOOP AT gt_stxh_cust INTO gs_stxh_cust.
        wl_index = sy-tabix.
        LOOP AT gt_kna1 INTO gs_kna1 WHERE kunnr = gs_stxh_cust-tdname(10).
          EXIT.
        ENDLOOP.
        IF sy-subrc <> 0.
          DELETE gt_stxh_cust INDEX wl_index.
        ENDIF.
      ENDLOOP.
      READ TABLE gt_stxh_cust TRANSPORTING NO FIELDS INDEX 1.
      IF sy-subrc = 0.

      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form copiar_textos
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM copiar_textos .

  DATA: lv_error TYPE flag.
  DATA: lv_texto_error TYPE char255.
  DATA: ls_thead TYPE thead.

  LOOP AT gt_stxh_cust INTO gs_stxh_cust.
    CLEAR: lv_error.
    CLEAR: lv_texto_error.
    CLEAR: gs_alv.
    CLEAR: gs_lines_0001, gv_name_0001.
    REFRESH: gt_lines_0001.

    gs_alv-kunnr = gs_stxh_cust-tdname(10).
    gs_alv-id_orig = c_id_0001.
    gs_alv-spras_orig = gs_stxh_cust-tdspras.
    gs_alv-name_orig = gs_stxh_cust-tdname.
    gs_alv-object_orig = c_object_0001.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        id                      = c_id_0001
        language                = gs_stxh_cust-tdspras
        name                    = gs_stxh_cust-tdname
        object                  = c_object_0001
      TABLES
        lines                   = gt_lines_0001
      EXCEPTIONS
        id                      = 1
        language                = 2
        name                    = 3
        not_found               = 4
        object                  = 5
        reference_check         = 6
        wrong_access_to_archive = 7
        OTHERS                  = 8.
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ELSE.
      CLEAR: gs_lines_carga, gv_name_carga.
      REFRESH: gt_lines_carga.
      CLEAR: ls_thead.

      ls_thead-tdspras = gs_stxh_cust-tdspras.
      ls_thead-tdobject = c_object_carga.
      LOOP AT gt_cvi_cust_link INTO gs_cvi_cust_link WHERE customer = gs_stxh_cust-tdname(10).
        CLEAR: gs_but000.
        READ TABLE gt_but000 INTO gs_but000 WITH KEY partner_guid = gs_cvi_cust_link-partner_guid.
        IF sy-subrc = 0.
          ls_thead-tdname = gs_but000-partner.
          CONCATENATE 'Z' gs_stxh_cust-tdname+10(4) INTO ls_thead-tdid.
          CONDENSE ls_thead-tdid NO-GAPS.

          CLEAR: lv_error.
          gs_alv-partner = gs_but000-partner.
          gs_alv-id_dest = ls_thead-tdid.
          gs_alv-spras_dest = ls_thead-tdspras.
          gs_alv-name_dest = ls_thead-tdname.
          gs_alv-object_dest = ls_thead-tdobject.

          EXIT.
        ELSE.
* Error no se encuentra partner para ese cliente
          lv_error = 'X'.
          CONCATENATE '@5C@' 'Error no se encuentra partner para el cliente' gs_stxh_cust-tdname(10)
                       INTO gs_alv-texto SEPARATED BY space.
          APPEND gs_alv TO gt_alv.
          EXIT.
        ENDIF.
      ENDLOOP.

      IF lv_error NE 'X'.
        CALL FUNCTION 'SAVE_TEXT'
          EXPORTING
            header          = ls_thead
            insert          = 'X'
            savemode_direct = 'X'
          TABLES
            lines           = gt_lines_0001
          EXCEPTIONS
            id              = 1
            language        = 2
            name            = 3
            object          = 4
            OTHERS          = 5.
        IF sy-subrc <> 0.
* Implement suitable error handling here
          lv_error = 'X'.
          MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                  INTO lv_texto_error
                  WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          CONCATENATE '@5C@' 'Partner' gs_alv-partner 'Error: ' lv_texto_error
                       INTO gs_alv-texto SEPARATED BY space.
          APPEND gs_alv TO gt_alv.
          ROLLBACK WORK.
        ELSE.
          CLEAR: lv_error.
          CONCATENATE '@5B@' 'Copia correcta del texto'
                       INTO gs_alv-texto SEPARATED BY space.
          APPEND gs_alv TO gt_alv.
          COMMIT WORK.
        ENDIF.
      ENDIF.

    ENDIF.

  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form create_and_display_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_and_display_alv .

  PERFORM alv_layout.
  PERFORM alv_field_catalog.
  PERFORM alv_display.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form alv_layout
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM alv_layout .
  gs_layout-zebra      = 'X'.
  gs_layout-sel_mode   = 'A'.
ENDFORM.

*---------------------------------------------------------------------*
*      Form  ALV_FIELD_CATALOG
*---------------------------------------------------------------------*
FORM alv_field_catalog.
  CLEAR: gt_fieldcat.


  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'KUNNR'.
  gs_fieldcat-ref_table = 'KNA1'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'PARTNER'.
  gs_fieldcat-ref_table = 'BUT000'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'ID_ORIG'.
  gs_fieldcat-scrtext_s = TEXT-001.
  gs_fieldcat-coltext   = TEXT-001.
  gs_fieldcat-seltext   = TEXT-001.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'OBJECT_ORIG'.
  gs_fieldcat-scrtext_s = TEXT-002.
  gs_fieldcat-coltext   = TEXT-002.
  gs_fieldcat-seltext   = TEXT-002.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'NAME_ORIG'.
  gs_fieldcat-scrtext_s = TEXT-003.
  gs_fieldcat-coltext   = TEXT-003.
  gs_fieldcat-seltext   = TEXT-003.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'SPRAS_ORIG'.
  gs_fieldcat-scrtext_s = TEXT-004.
  gs_fieldcat-coltext   = TEXT-004.
  gs_fieldcat-seltext   = TEXT-004.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'ID_DEST'.
  gs_fieldcat-scrtext_s = TEXT-005.
  gs_fieldcat-coltext   = TEXT-005.
  gs_fieldcat-seltext   = TEXT-005.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'OBJECT_DEST'.
  gs_fieldcat-scrtext_s = TEXT-006.
  gs_fieldcat-coltext   = TEXT-006.
  gs_fieldcat-seltext   = TEXT-006.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'NAME_DEST'.
  gs_fieldcat-scrtext_s = TEXT-007.
  gs_fieldcat-coltext   = TEXT-007.
  gs_fieldcat-seltext   = TEXT-007.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'SPRAS_DEST'.
  gs_fieldcat-scrtext_s = TEXT-008.
  gs_fieldcat-coltext   = TEXT-008.
  gs_fieldcat-seltext   = TEXT-008.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'TEXTO'.
  gs_fieldcat-scrtext_s = TEXT-009.
  gs_fieldcat-coltext   = TEXT-009.
  gs_fieldcat-seltext   = TEXT-009.
  gs_fieldcat-outputlen = 125.
  APPEND gs_fieldcat TO gt_fieldcat.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY
*&---------------------------------------------------------------------*
FORM alv_display.

  g_repid = sy-cprog.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC' ##FM_SUBRC_OK
    EXPORTING
      i_callback_program      = g_repid
      i_callback_user_command = 'USER_COMMAND'
      is_layout_lvc           = gs_layout
      i_default               = 'X'
      i_save                  = 'A'
      it_fieldcat_lvc         = gt_fieldcat
      is_variant              = g_variant
    TABLES
      t_outtab                = gt_alv[]
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  STATUS_SET
*---------------------------------------------------------------------*
FORM status_set USING rt_extab TYPE slis_t_extab.
  ##STAT_UNDEF  SET PF-STATUS 'STANDARD_FULLSCREEN'.
ENDFORM.
