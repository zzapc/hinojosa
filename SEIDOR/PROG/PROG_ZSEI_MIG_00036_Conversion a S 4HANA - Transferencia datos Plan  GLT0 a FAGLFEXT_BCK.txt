*&---------------------------------------------------------------------*
*& Report ZSEI_MIG_00036    ****  Version 1.1  ***
*&
*&---------------------------------------------------------------------*
*&                          S/4HANA
*& Copy Planing Data from classical GLT0 planning into FAGLFLEX_BCK
*&
*&  Purpose: Re-Use the planning data from classical GLT0 G/L ledger
*&           in re-activated planning from SAP ERP G/L accounting
*&                      - Pilot Note 2924568 --
*&
*&*&---------------------------------------------------------------------*

REPORT ZSEI_MIG_00036.

*Constants

Constants: cd_target_table TYPE TABNAME VALUE 'FAGLFLEXT_BCK'.

* Data declaration
TYPE-POOLS: SLIS, icon.

TYPES: BEGIN OF tt_ledger,
         RLDNR TYPE RLDNR,
       END OF tt_ledger.


TYPES: BEGIN OF tt_attr_count,
         RLDNR      TYPE RLDNR,
         RRCTY      TYPE RRCTY,
         RVERS      TYPE RVERS,
         RYEAR      TYPE GJAHR,
         BUKRS      TYPE BUKRS,
         DATA_EXIST TYPE CHAR1,
         VSPKZ      TYPE VSPKZ,
         EPSKZ      TYPE EPSKZ,
         NOT_MAINT  TYPE EPSKZ,
         NO_UPDATE  TYPE CHAR1,
         NO_NORANGE TYPE CHAR1,
         REC_COUNT TYPE  i,
       END OF tt_attr_count.

TYPES: BEGIN OF tt_source_ldr,
         RLDNR      TYPE RLDNR,
         RVERS      TYPE RVERS,
       END OF tt_source_ldr.

TYPES: BEGIN OF tt_source_ldr_help,
         RLDNR      TYPE RLDNR,
       END OF tt_source_ldr_help.

TYPES: BEGIN OF tt_source_ver_help,
         RVERS LIKE  GLU1-RVERS,
       END OF tt_source_ver_help.

TYPES: BEGIN OF tt_doctype,
         DOCTY TYPE DOCTY,
       END OF tt_doctype.

TYPES: BEGIN OF tt_output1,
         TESTRUN TYPE CATS_PARTEST,
         RLDNR1 LIKE T881-RLDNR,
         RVERS1 LIKE GLU1-RVERS,
         TABLE1 LIKE T881-TAB,
         RLDNR2 LIKE T881-RLDNR,
         RVERS2 LIKE GLU1-RVERS,
         TABLE2 LIKE T881-TAB,
         RYEAR  LIKE BKPF-GJAHR,
         RBUKRS LIKE T001-BUKRS,
         NO_REC TYPE i,
         RATING     LIKE ICON-ID,
         ZTEXT  LIKE GLFUNCA-SGTXT,
       END OF tt_output1.

DATA: gt_si TYPE TABLE OF rglsi,
      gs_si TYPE rglsi.


DATA: gs_glu1 TYPE GLU1,
      gd_repid LIKE SY-REPID,
      gt_fieldcat TYPE SLIS_T_FIELDCAT_ALV,
      gs_outtab TYPE tt_output1,
      gt_outtab TYPE TABLE OF tt_output1,
      gd_ind LIKE sy-tabix,
      gd_tabix LIKE SY-TABIX,
      gd_exist TYPE CHAR1,
      gd_text1 TYPE CHAR100,
      gs1_layout TYPE slis_layout_alv.


DATA: BEGIN OF gt_fields_lst OCCURS 5.
INCLUDE  STRUCTURE help_value.
DATA: END   OF gt_fields_lst.

DATA: h_selectfield LIKE help_info-fieldname.

DATA: gt_ledger_source_help TYPE TABLE OF tt_source_ldr_help,
      gs_ledger_source_help TYPE tt_source_ldr_help,
      gt_version_source_help TYPE TABLE OF tt_source_ver_help,
      gs_version_source_help TYPE tt_source_ver_help,
      gt_ledger_target_help TYPE TABLE OF tt_source_ldr_help,
      gs_ledger_target_help TYPE tt_source_ldr_help,
      gt_version_target_help TYPE TABLE OF tt_source_ver_help,
      gs_version_target_help TYPE tt_source_ver_help,
      gt_doctype TYPE TABLE OF tt_doctype,
      gs_doctype TYPE tt_doctype.


DATA: gs_glt0 LIKE GLT0_BCK,
      gt_sum_stat  TYPE TABLE OF tt_attr_count,
      gs_sum_stat  TYPE tt_attr_count,
      gt_source_ledger TYPE TABLE OF tt_source_ldr,
      gs_source_ledger TYPE tt_source_ldr,
      gt_target_ledger TYPE TABLE OF tt_source_ldr,
      gs_faglflext TYPE FAGLFLEXT,
      gt_faglflext TYPE TABLE OF FAGLFLEXT,
      gt_t889a TYPE TABLE OF FAGL_T889A,
      gs_t889a TYPE FAGL_T889A,
      gt_t894  TYPE TABLE OF T894,
      gs_t894  TYPE T894,
      gs_t895  TYPE T895,
      gt_t895  TYPE TABLE OF T895.



*SELECTION-SCREEN END OF A

SELECTION-SCREEN BEGIN OF BLOCK a WITH FRAME TITLE atx01.
*Source Ledger GLT0
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) ptx01 FOR FIELD p1_rldnr.
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS p1_rldnr TYPE rldnr OBLIGATORY.
SELECTION-SCREEN END OF LINE.

* Source Version
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) ptx02 FOR FIELD p1_rvers.
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS p1_rvers LIKE GLFUNCT-RVERS OBLIGATORY.
SELECTION-SCREEN END OF LINE.

*Company Code
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) ptx05 FOR FIELD p_rbukrs.
SELECTION-SCREEN POSITION 30.
SELECT-OPTIONS p_rbukrs FOR gs_glu1-rbukrs.
SELECTION-SCREEN END OF LINE.

*Fiscal Year
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) ptx06 FOR FIELD p_ryear.
SELECTION-SCREEN POSITION 30.
SELECT-OPTIONS p_ryear FOR gs_glu1-ryear.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK a.


SELECTION-SCREEN BEGIN OF BLOCK b WITH FRAME TITLE atx02.
*Ledger FAGLFLEXT_BCK
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(30) ptx03 FOR FIELD p2_rldnr.
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS p2_rldnr TYPE rldnr OBLIGATORY.
SELECTION-SCREEN END OF LINE.

*Version
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) ptx04 FOR FIELD p2_rvers.
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS p2_rvers LIKE GLFUNCT-RVERS OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK b.
*SELECTION-SCREEN END OF B

SELECTION-SCREEN BEGIN OF BLOCK c WITH FRAME TITLE atx03.

* Test-Run indicator
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS p_test AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 3(60) ptx10 FOR FIELD p_test.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS p_yeardp AS CHECKBOX DEFAULT ''.
SELECTION-SCREEN COMMENT 3(45) ptx11 FOR FIELD p_yeardp.

PARAMETERS p_docty TYPE docty .
SELECTION-SCREEN COMMENT 53(30) ptx12 FOR FIELD p_docty.


SELECTION-SCREEN END OF LINE.


SELECTION-SCREEN END OF BLOCK c.



INITIALIZATION.

  gd_repid = SY-REPID.
  PERFORM FIELDCAT_INIT USING gt_fieldcat[].


* Texts
  atx01 = 'Source Selection - Classical Plan Data' .
  atx02 = 'Target Selection - New G/L Plan Data' .
  atx03 = 'Processing Options' .


  ptx01 = 'Plan Ledger (GLT0)'.
  ptx02 = 'Version'.
  ptx03 = 'Plan Ledger(FAGLFLEXT [BCK])'.
  ptx04 = 'Version'.
  ptx05 = 'Company Code'.
  ptx06 = 'Fiscal Year'.

  ptx10 = 'Test-Run'.
  ptx11 = 'Consider fiscal-year-dependent plan parameters'.
  ptx12 = 'Plan Document Type'.

  PERFORM CHECK_BASEDATA.

*****************************************************
AT SELECTION-SCREEN.
*****************************************************
* CHECK parameters

* Ledger (Source)
  READ TABLE gt_ledger_source_help WITH KEY RLDNR = p1_rldnr TRANSPORTING NO FIELDS.
  IF SY-SUBRC <> 0.
    MESSAGE E016(GU) WITH 'Ledger' p1_rldnr 'does not exist in GLT0'.
  ENDIF.
* Version (Source)
  READ TABLE gt_source_ledger WITH KEY RLDNR = p1_rldnr RVERS = p1_rvers
            TRANSPORTING NO FIELDS.
  IF SY-SUBRC <> 0.
    MESSAGE E016(GU) WITH 'Version' p1_rvers 'does not exist in GLT0 for ledger' p1_rldnr.
  ENDIF.

* Ledger (Target)
  READ TABLE gt_ledger_target_help WITH KEY RLDNR = p2_rldnr TRANSPORTING NO FIELDS.
  IF SY-SUBRC <> 0.
    MESSAGE E016(GU) WITH 'No plan version for target ledger' p2_rldnr 'maintained!'.
  ENDIF.

* Version (Target)
  READ TABLE gt_version_target_help WITH KEY RVERS = p2_rvers TRANSPORTING NO FIELDS.
  IF SY-SUBRC <> 0.
    MESSAGE E016(GU) WITH 'Plan version' p2_rvers 'not maintained!'.
  ENDIF.

* Document Type
  IF p_yeardp IS NOT INITIAL.
    READ TABLE gt_t889a WITH KEY DOCTY = p_docty INTO gs_t889a.
    IF SY-SUBRC <> 0.
      SELECT * FROM T895 INTO TABLE gt_t895
        WHERE RLDNR EQ p2_rldnr
          AND RVERS = p2_rvers
          AND BUKRS IN p_rbukrs
          AND RYEAR IN p_ryear
          AND EPSKZ = 'X'.
      IF SY-SUBRC = 0.
        MESSAGE E016(GU) WITH 'Please enter a valid plan document type!'.
      ELSE.
        MESSAGE W016(GU) WITH 'Please enter a valid plan document type!'.
      ENDIF.
    ENDIF.
  ENDIF.


*****************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p1_rldnr.
*****************************************************
  REFRESH gt_fields_lst. CLEAR gt_fields_lst.
  gt_fields_lst-tabname = 'T881'.
  gt_fields_lst-fieldname = 'RLDNR'.
  gt_fields_lst-selectflag = 'X'.
  APPEND gt_fields_lst.
*
  CALL FUNCTION 'HELP_VALUES_GET_NO_DD_NAME'
    EXPORTING
      selectfield = h_selectfield
      display     = ' '
      titel       = ptx01
    IMPORTING
      ind         = GD_IND
    TABLES
      fields      = gt_fields_lst
      full_table  = gt_ledger_source_help
    EXCEPTIONS
      OTHERS      = 1.
  IF gd_ind NE 0 AND sy-subrc = 0.
    READ TABLE gt_ledger_source_help INTO gs_ledger_source_help INDEX gd_ind.
    IF SY-SUBRC = 0.
      p1_rldnr = gs_ledger_source_help-rldnr.
    ENDIF.
  ENDIF.
*
*****************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p1_rvers.
*****************************************************
  REFRESH gt_fields_lst. CLEAR gt_fields_lst.
  gt_fields_lst-tabname = 'T894'.
  gt_fields_lst-fieldname = 'RVERS'.
  gt_fields_lst-selectflag = 'X'.
  APPEND gt_fields_lst.
*
  CALL FUNCTION 'HELP_VALUES_GET_NO_DD_NAME'
    EXPORTING
      selectfield = h_selectfield
      display     = ' '
      titel       = ptx02
    IMPORTING
      ind         = GD_IND
    TABLES
      fields      = gt_fields_lst
      full_table  = gt_version_source_help
    EXCEPTIONS
      OTHERS      = 1.

  IF gd_ind NE 0 AND sy-subrc = 0.
    READ TABLE gt_version_source_help INTO gs_version_source_help INDEX gd_ind.
    IF SY-SUBRC = 0.
      p1_rvers = gs_version_source_help-rvers.
    ENDIF.
  ENDIF.

*****************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p2_rldnr.
*****************************************************
  REFRESH gt_fields_lst. CLEAR gt_fields_lst.
  gt_fields_lst-tabname = 'T881'.
  gt_fields_lst-fieldname = 'RLDNR'.
  gt_fields_lst-selectflag = 'X'.
  APPEND gt_fields_lst.
*
  CALL FUNCTION 'HELP_VALUES_GET_NO_DD_NAME'
    EXPORTING
      selectfield = h_selectfield
      display     = ' '
      titel       = ptx03
    IMPORTING
      ind         = GD_IND
    TABLES
      fields      = gt_fields_lst
      full_table  = gt_ledger_target_help
    EXCEPTIONS
      OTHERS      = 1.
  IF gd_ind NE 0 AND sy-subrc = 0.
    READ TABLE gt_ledger_target_help INTO gs_ledger_target_help INDEX gd_ind.
    IF SY-SUBRC = 0.
      p2_rldnr = gs_ledger_target_help-rldnr.
    ENDIF.
  ENDIF.
*
*****************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p2_rvers.
*****************************************************
  REFRESH gt_fields_lst. CLEAR gt_fields_lst.
  gt_fields_lst-tabname    = 'T894'.
  gt_fields_lst-fieldname  = 'RVERS'.
  gt_fields_lst-selectflag = 'X'.
  APPEND gt_fields_lst.
*
  CALL FUNCTION 'HELP_VALUES_GET_NO_DD_NAME'
    EXPORTING
      selectfield = h_selectfield
      display     = ' '
      titel       = ptx04
    IMPORTING
      ind         = GD_IND
    TABLES
      fields      = gt_fields_lst
      full_table  = gt_version_target_help
    EXCEPTIONS
      OTHERS      = 1.

  IF gd_ind NE 0 AND sy-subrc = 0.
    READ TABLE gt_version_target_help INTO gs_version_target_help INDEX gd_ind.
    IF SY-SUBRC = 0.
      p2_rvers = gs_version_target_help-rvers.
    ENDIF.
  ENDIF.


*****************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_docty.
*****************************************************
* Plan Document Type

  REFRESH gt_fields_lst. CLEAR gt_fields_lst.
  gt_fields_lst-tabname = 'FAGL_T889A'.
  gt_fields_lst-fieldname = 'DOCTY'.
  gt_fields_lst-selectflag = 'X'.
  APPEND gt_fields_lst.
*
  CALL FUNCTION 'HELP_VALUES_GET_NO_DD_NAME'
    EXPORTING
      selectfield = h_selectfield
      display     = ' '
      titel       = ptx12
    IMPORTING
      ind         = GD_IND
    TABLES
      fields      = gt_fields_lst
      full_table  = gt_doctype
    EXCEPTIONS
      OTHERS      = 1.
  IF gd_ind NE 0 AND sy-subrc = 0.
    READ TABLE gt_t889a INTO gs_t889a INDEX gd_ind.
    IF SY-SUBRC = 0.
      p_docty = gs_t889a-docty.
    ENDIF.
  ENDIF.



********************************************
START-OF-SELECTION.
********************************************

* Pre-Selection
  SELECT DISTINCT rrcty ryear rldnr rvers bukrs COUNT( * ) AS rec_count
    FROM GLT0_BCK
    INTO CORRESPONDING FIELDS OF TABLE gt_sum_stat
    WHERE RLDNR  = p1_rldnr
      AND RRCTY  = '1'
      AND RVERS  = p1_rvers
      AND RYEAR  IN p_ryear
      AND BUKRS IN p_rbukrs
    GROUP BY RRCTY RLDNR RVERS RYEAR BUKRS
    ORDER BY RYEAR DESCENDING RRCTY RLDNR BUKRS.

* Check if Data already exist ibn target table
  LOOP AT gt_sum_stat INTO gs_sum_stat.
    gd_tabix = SY-TABIX.
    CLEAR gd_exist.
    gs_sum_stat-rldnr = p2_rldnr.
    gs_sum_stat-rvers = p2_rvers.
    PERFORM CHECK_DATA_EXIST USING gs_sum_stat CHANGING gs_sum_stat-data_exist.
    PERFORM CHECK_DOCTYPE USING gs_sum_stat CHANGING gs_sum_stat-no_norange.
    IF p_yeardp IS NOT INITIAL.
      SELECT SINGLE * FROM T895 INTO gs_t895
             WHERE RLDNR = gs_sum_stat-rldnr
               AND RVERS = gs_sum_stat-rvers
               AND BUKRS = gs_sum_stat-bukrs
               AND RYEAR = gs_sum_stat-ryear.
      IF SY-SUBRC = 0.
        gs_sum_stat-vspkz = gs_t895-vspkz.
        gs_sum_stat-epskz = gs_t895-epskz.
        IF gs_t895-vspkz IS NOT INITIAL.
          gs_sum_stat-no_update = 'X'.
        ELSE.
          CLEAR gs_sum_stat-no_update.
        ENDIF.
      ELSE.
        gs_sum_stat-no_update = 'X'.
        gs_sum_stat-not_maint = 'X'.
      ENDIF.
    ELSE.
      CLEAR: gs_sum_stat-no_update, gs_sum_stat-epskz, gs_sum_stat-vspkz.
    ENDIF.
    MODIFY gt_sum_stat INDEX GD_TABIX FROM gs_sum_stat
           TRANSPORTING data_exist epskz vspkz no_update not_maint no_norange.
  ENDLOOP.

  IF p_yeardp IS INITIAL.
* NOT considering the Year Dependent plan parameters
    LOOP AT gt_sum_stat INTO gs_sum_stat.
      REFRESH gt_faglflext.
      SELECT * FROM GLT0_BCK INTO gs_glt0
       WHERE RLDNR = gs_sum_stat-rldnr
         AND RRCTY = gs_sum_stat-rrcty
         AND RVERS = gs_sum_stat-rvers
         AND BUKRS = gs_sum_stat-bukrs
         AND RYEAR = gs_sum_stat-ryear.
        CLEAR gs_faglflext.
        MOVE-CORRESPONDING gs_glt0 TO gs_faglflext.
        gs_faglflext-rbukrs = gs_glt0-bukrs.
        gs_faglflext-rldnr = p2_rldnr.
        gs_faglflext-rvers = p2_rvers.
        gs_faglflext-activ = 'GLPL'.
        IF gs_sum_stat-data_exist IS INITIAL.
          COLLECT gs_faglflext INTO gt_faglflext.
          gd_text1 = 'Planning data succesfully posted in target ledger'.
          gs_outtab-rating = '3'.
        ELSE.
          gd_text1 = 'Planning data exist in CCode/Year in target ledger'.
          gs_outtab-rating = '1'.
        ENDIF.
        gs_outtab-testrun = p_test.
        gs_outtab-rldnr1 = gs_sum_stat-rldnr.
        gs_outtab-rvers1 = gs_sum_stat-rvers.
        gs_outtab-table1 = 'GLT0_BCK'.
        gs_outtab-rldnr2 = gs_faglflext-rldnr.
        gs_outtab-rvers2 = gs_faglflext-rvers.
        gs_outtab-table2 = 'FAGLFLEXT_BCK'.
        gs_outtab-ryear = gs_faglflext-ryear.
        gs_outtab-rbukrs = gs_faglflext-rbukrs.
        gs_outtab-no_rec = 1.
        gs_outtab-ztext = gd_text1.
        COLLECT gs_outtab INTO gt_outtab.
      ENDSELECT.
      IF p_test IS INITIAL.
        CALL FUNCTION 'G_UPDATE_TOTALS'
          EXPORTING
            i_tabname      = 'FAGLFLEXT'
          TABLES
            t_totals_table = gt_faglflext.
        COMMIT WORK.
      ENDIF.
    ENDLOOP.
  ELSE.
* Considering the Year Dependent plan parameters
    LOOP AT gt_sum_stat INTO gs_sum_stat.
      REFRESH gt_faglflext.
      SELECT * FROM GLT0_BCK INTO gs_glt0
       WHERE RLDNR = gs_sum_stat-rldnr
         AND RRCTY = gs_sum_stat-rrcty
         AND RVERS = gs_sum_stat-rvers
         AND BUKRS = gs_sum_stat-bukrs
         AND RYEAR = gs_sum_stat-ryear.
        CLEAR gs_faglflext.
        MOVE-CORRESPONDING gs_glt0 TO gs_faglflext.
        gs_faglflext-rbukrs = gs_glt0-bukrs.
        gs_faglflext-rldnr = p2_rldnr.
        gs_faglflext-rvers = p2_rvers.
        gs_faglflext-activ = 'GLPL'.


        IF gs_sum_stat-data_exist IS INITIAL.
          gd_text1 = 'Planning data succesfully posted in target ledger'.
        ELSE.
          gd_text1 = 'Planning data exist in CCode/Year in target ledger'.
          gs_sum_stat-no_update = 'X'.
        ENDIF.

        IF gs_sum_stat-vspkz IS NOT INITIAL.
          gd_text1 = 'Version Locked Against Changes (Year dep.plan param.)'.
          gs_sum_stat-no_update = 'X'.
        ENDIF.

        IF gs_sum_stat-not_maint IS NOT INITIAL.
          gd_text1 = 'Year Dependent plan parameters are not maintained!'.
          gs_sum_stat-no_update = 'X'.
        ENDIF.

        IF gs_sum_stat-no_update IS INITIAL.
          COLLECT gs_faglflext INTO gt_faglflext.
          gs_outtab-rating = '3'.
        ELSE.
          gs_outtab-rating = '1'.
        ENDIF.

        gs_outtab-testrun = p_test.
        gs_outtab-rldnr1 = gs_sum_stat-rldnr.
        gs_outtab-rvers1 = gs_sum_stat-rvers.
        gs_outtab-table1 = 'GLT0_BCK'.
        gs_outtab-rldnr2 = gs_faglflext-rldnr.
        gs_outtab-rvers2 = gs_faglflext-rvers.
        gs_outtab-table2 = 'FAGLFLEXT_BCK'.
        gs_outtab-ryear = gs_faglflext-ryear.
        gs_outtab-rbukrs = gs_faglflext-rbukrs.
        gs_outtab-no_rec = 1.
        gs_outtab-ztext = gd_text1.
        COLLECT gs_outtab INTO gt_outtab.
      ENDSELECT.
      IF p_test IS INITIAL AND gs_sum_stat-no_update IS INITIAL.
        IF gs_sum_stat-epskz IS NOT INITIAL.
          REFRESH gt_si.
          CLEAR gs_si.
          PERFORM GET_DOCNO USING gs_sum_stat CHANGING gs_si-docnr.
          IF gs_si-docnr IS NOT INITIAL.
            gs_si-docct  = 'P'.
            gs_si-cpudt  = sy-datum.
            gs_si-cputm  = sy-uzeit.
            gs_si-usnam  = sy-uname.
            gs_si-docty  = p_docty.
            gs_si-sionly = ' '.
            gs_si-docnr = '10000'.
            APPEND gs_si TO gt_si.
            CALL FUNCTION 'G_POSTING_FAGLFLEXT'
              TABLES
                RFAGLFLEXT = gt_faglflext
                SI         = gt_si.
            COMMIT WORK.
          ELSE.
            MESSAGE E016(GU) WITH 'Unexpected Error with DocType' gs_t889a-docty.
          ENDIF.
        ELSE.
          CALL FUNCTION 'G_UPDATE_TOTALS'
            EXPORTING
              i_tabname      = 'FAGLFLEXT'
            TABLES
              t_totals_table = gt_faglflext.
          COMMIT WORK.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDIF.

* Update protocol tables T800HIST*
  perform update_t800hist.

* Output List
  gs1_layout-lights_fieldname  = 'RATING'.

  CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM = gd_repid
      IS_LAYOUT          = gs1_layout
      IT_FIELDCAT        = GT_FIELDCAT[]
    TABLES
      T_OUTTAB           = GT_OUTTAB.

  EXIT.


*&---------------------------------------------------------------------*
*&      Form  CHECK_BASEDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CHECK_BASEDATA .

  DATA lt_gl_ldr TYPE TABLE OF tt_ledger.

* Get available ledger in GLT0
  SELECT DISTINCT rldnr rvers FROM GLT0_BCK
    INTO CORRESPONDING FIELDS OF TABLE gt_source_ledger
    WHERE RRCTY = '1'
    ORDER BY RLDNR RVERS.

* Get G/L ledger
  SELECT RLDNR FROM T881 INTO TABLE lt_gl_ldr
    WHERE GLFLEX EQ '1'.

* Plan Document Type
  SELECT * FROM FAGL_T889A INTO TABLE gt_t889a.

  LOOP AT gt_t889a INTO gs_t889a.
    gs_doctype-docty = gs_t889a-docty.
    COLLECT gs_doctype INTO gt_doctype.
  ENDLOOP.
  IF SY-SUBRC = 0.
    READ TABLE gt_t889a INTO gs_t889a INDEX 1.
  ENDIF.


* Plan Version
  IF lt_gl_ldr[] IS NOT INITIAL.
    SELECT * FROM t894 INTO TABLE gt_t894
    FOR ALL ENTRIES in lt_gl_ldr
    WHERE RLDNR = lt_gl_ldr-rldnr.
  ENDIF.

* Fill F4HELP Source
  REFRESH: gt_ledger_source_help, gt_version_source_help.
  LOOP AT gt_source_ledger INTO gs_source_ledger.
    gs_ledger_source_help-rldnr = gs_source_ledger-rldnr.
    gs_version_source_help-rvers = gs_source_ledger-rvers.
    COLLECT gs_ledger_source_help INTO gt_ledger_source_help.
    COLLECT gs_version_source_help INTO gt_version_source_help.
  ENDLOOP.

* Fill F4HELP Target
  REFRESH: gt_ledger_target_help, gt_version_target_help.
  LOOP AT gt_t894 INTO gs_t894.
    gs_ledger_target_help-rldnr = gs_t894-rldnr.
    gs_version_target_help-rvers = gs_t894-rvers.
    COLLECT gs_ledger_target_help  INTO gt_ledger_target_help.
    COLLECT gs_version_target_help INTO gt_version_target_help.
  ENDLOOP.

ENDFORM.                    " CHECK_BASEDATA
*&---------------------------------------------------------------------*
*&      Form  FIELDCAT_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_FIELDCAT[]  text
*----------------------------------------------------------------------*
FORM FIELDCAT_INIT USING RT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV.

  DATA: LS_FIELDCAT TYPE SLIS_FIELDCAT_ALV.
  DATA: POS TYPE I VALUE 1.

  clear ls_fieldcat.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'TESTRUN'.
  ls_fieldcat-seltext_l     = 'Test-Run'.
  ls_fieldcat-seltext_m     = 'Test-Run'.
  ls_fieldcat-seltext_s     = 'Test-Run'.
  ls_fieldcat-outputlen     = 9.
  ls_fieldcat-just          = 'C'.
  LS_FIELDCAT-KEY           = 'X'.
  APPEND LS_FIELDCAT TO  RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'TABLE1'.
  ls_fieldcat-ref_fieldname = 'TAB'.
  LS_FIELDCAT-REF_TABNAME   = 'T881'.
  ls_fieldcat-seltext_l     = 'Source Table'.
  ls_fieldcat-seltext_m     = 'Source Table'.
  ls_fieldcat-seltext_s     = 'Source Table'.
  ls_fieldcat-outputlen     = 12.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'RLDNR1'.
  ls_fieldcat-ref_fieldname = 'RLDNR'.
  ls_fieldcat-seltext_l     = 'Source Ledger'.
  ls_fieldcat-seltext_m     = 'Source Ledger'.
  LS_FIELDCAT-REF_TABNAME   = 'T881'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'RVERS1'.
  ls_fieldcat-ref_fieldname = 'RVERS'.
  ls_fieldcat-seltext_l     = 'Source Version'.
  ls_fieldcat-seltext_m     = 'Source Version'.
  LS_FIELDCAT-REF_TABNAME   = 'GLFUNCT'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'TABLE2'.
  ls_fieldcat-ref_fieldname = 'TAB'.
  LS_FIELDCAT-REF_TABNAME   = 'T881'.
  ls_fieldcat-outputlen     = 14.
  ls_fieldcat-seltext_l     = 'Receiver Table'.
  ls_fieldcat-seltext_m     = 'Receiver Table'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'RLDNR2'.
  ls_fieldcat-ref_fieldname = 'RLDNR'.
  LS_FIELDCAT-REF_TABNAME   = 'T881'.
  ls_fieldcat-seltext_l     = 'Target Ledger'.
  ls_fieldcat-seltext_m     = 'Target Ledger'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'RVERS2'.
  ls_fieldcat-ref_fieldname = 'RVERS'.
  LS_FIELDCAT-REF_TABNAME   = 'GLFUNCT'.
  ls_fieldcat-seltext_l     = 'Target Version'.
  ls_fieldcat-seltext_m     = 'Target Version'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'RYEAR'.
  ls_fieldcat-ref_fieldname = 'GJAHR'.
  LS_FIELDCAT-REF_TABNAME   = 'BKPF'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'RBUKRS'.
  ls_fieldcat-ref_fieldname = 'BUKRS'.
  LS_FIELDCAT-REF_TABNAME   = 'T001'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

  clear ls_fieldcat.
  POS = POS + 1.
  LS_FIELDCAT-COL_POS       =  POS.
  LS_FIELDCAT-FIELDNAME     = 'ZTEXT'.
  ls_fieldcat-ref_fieldname = 'SGTXT'.
  LS_FIELDCAT-REF_TABNAME   = 'GLFUNCA'.
  APPEND LS_FIELDCAT TO RT_FIELDCAT.

ENDFORM.   "fieldcat_init
*&---------------------------------------------------------------------*
*&      Form  CHECK_DATA_EXIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GS_SUM_STAT  text
*      <--P_GD_EXIST     text
*----------------------------------------------------------------------*
FORM CHECK_DATA_EXIST  USING    P_GS_SUM_STAT TYPE tt_attr_count
                       CHANGING P_GD_EXIST TYPE CHAR1.

  DATA ls_faglflext TYPE FAGLFLEXT.

  SELECT * FROM (cd_target_table) INTO CORRESPONDING FIELDS OF ls_faglflext
    WHERE RLDNR  =  p_gs_sum_stat-rldnr
      AND RVERS  = p_gs_sum_stat-rvers
      AND RRCTY  = '1'
      AND RYEAR  = p_gs_sum_stat-ryear
      AND rbukrs = p_gs_sum_stat-bukrs
      AND activ  = 'GLPL'
      AND ( TSLVT <> 0 OR
            TSL01 <> 0 OR
            TSL02 <> 0 OR
            TSL03 <> 0 OR
            TSL04 <> 0 OR
            TSL05 <> 0 OR
            TSL06 <> 0 OR
            TSL07 <> 0 OR
            TSL08 <> 0 OR
            TSL09 <> 0 OR
            TSL10 <> 0 OR
            TSL11 <> 0 OR
            TSL12 <> 0 OR
            TSL13 <> 0 OR
            TSL14 <> 0 OR
            TSL15 <> 0 OR
            TSL16 <> 0 OR
            HSLVT <> 0 OR
            HSL01 <> 0 OR
            HSL02 <> 0 OR
            HSL03 <> 0 OR
            HSL04 <> 0 OR
            HSL05 <> 0 OR
            HSL06 <> 0 OR
            HSL07 <> 0 OR
            HSL08 <> 0 OR
            HSL09 <> 0 OR
            HSL10 <> 0 OR
            HSL11 <> 0 OR
            HSL12 <> 0 OR
            HSL13 <> 0 OR
            HSL14 <> 0 OR
            HSL15 <> 0 OR
            HSL16 <> 0 OR
            KSLVT <> 0 OR
            KSL01 <> 0 OR
            KSL02 <> 0 OR
            KSL03 <> 0 OR
            KSL04 <> 0 OR
            KSL05 <> 0 OR
            KSL06 <> 0 OR
            KSL07 <> 0 OR
            KSL08 <> 0 OR
            KSL09 <> 0 OR
            KSL10 <> 0 OR
            KSL11 <> 0 OR
            KSL12 <> 0 OR
            KSL13 <> 0 OR
            KSL14 <> 0 OR
            KSL15 <> 0 OR
            KSL16 <> 0 OR
            KSLVT <> 0 OR
            MSL01 <> 0 OR
            MSL02 <> 0 OR
            MSL03 <> 0 OR
            MSL04 <> 0 OR
            MSL05 <> 0 OR
            MSL06 <> 0 OR
            MSL07 <> 0 OR
            MSL08 <> 0 OR
            MSL09 <> 0 OR
            MSL10 <> 0 OR
            MSL11 <> 0 OR
            MSL12 <> 0 OR
            MSL13 <> 0 OR
            MSL14 <> 0 OR
            MSL15 <> 0 OR
            MSL16 <> 0 ).

    EXIT.
  ENDSELECT.
  IF SY-SUBRC = 0.
    p_gd_exist = 'X'.
  ELSE.
    CLEAR p_gd_exist.
  ENDIF.

ENDFORM.                    " CHECK_DATA_EXIST

*&---------------------------------------------------------------------*
*&      Form  CHECK_DATA_EXIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM POST_WITH_LI.

ENDFORM.                    "POST_WITH_LI

*&---------------------------------------------------------------------*
*&      Form  CHECK_DOCTYPE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GS_SUM_STAT  text
*      <--P_GS_SUM_STAT_NO_NORANGE  text
*----------------------------------------------------------------------*
FORM CHECK_DOCTYPE  USING    P_GS_SUM_STAT TYPE tt_attr_count
                    CHANGING P_GS_SUM_STAT_NO_NORANGE TYPE CHAR1.

  DATA ls_nriv TYPE NRIV.
  DATA: ld_plact LIKE t889-plact.

  ls_nriv-object    = 'FAGL_PL_LC'.
  ls_nriv-subobject = p_gs_sum_stat-bukrs.
  CLEAR p_gs_sum_stat_no_norange.

  CALL FUNCTION 'NUMBER_GET_INFO'
    EXPORTING
      object             = ls_nriv-object
      subobject          = ls_nriv-subobject
      toyear             = p_gs_sum_stat-ryear
      nr_range_nr        = gs_t889a-norng
    IMPORTING
      interval           = ls_nriv
    EXCEPTIONS
      object_not_found   = 1
      interval_not_found = 2.
  CASE sy-subrc.
    WHEN 1.
      p_gs_sum_stat_no_norange = '1'.
    WHEN 2.
      p_gs_sum_stat_no_norange = '2'.
  ENDCASE.

ENDFORM.                    " CHECK_DOCTYPE

*&---------------------------------------------------------------------*
*&      Form  ET_DOCNO
*&---------------------------------------------------------------------*

FORM GET_DOCNO USING P_GS_SUM_STAT TYPE tt_attr_count
            CHANGING P_DOCNO      TYPE BELNR_D.

  DATA: ls_nriv TYPE NRIV,
        ld_plact LIKE t889-plact,
        ld_return LIKE INRI-RETURNCODE.

  ls_nriv-object    = 'FAGL_PL_LC'.
  ls_nriv-subobject = p_gs_sum_stat-bukrs.

  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      object      = ls_nriv-object
      subobject   = ls_nriv-subobject
      toyear      = p_gs_sum_stat-ryear
      nr_range_nr = gs_t889a-norng
    IMPORTING
      number      = p_docno
      returncode  = ld_return.

ENDFORM.                    " CHECK_DOCTYPE


*---------------------------------------------------------------------*
*       FORM UPDATE_T800HIST                                          *
*---------------------------------------------------------------------*
FORM update_T800HIST.

  DATA: lt_rsparams TYPE STANDARD TABLE OF rsparams.

  check p_test EQ space.

*Get selection parameters
  CALL FUNCTION 'RS_REFRESH_FROM_SELECTOPTIONS'
  EXPORTING
    CURR_REPORT           = sy-repid
  TABLES
    SELECTION_TABLE       = lt_rsparams.

* Delete all initial paremeters and select options
  delete lt_rsparams where kind = 'P'
                       and low  is initial.

  delete lt_rsparams where kind = 'S'
                       and sign is initial.

* Delete all unnecessary selection parameters
  delete lt_rsparams where
         selname = 'P_TEST'.

*Update them in T800HISTH and T800HISTP
  CALL FUNCTION 'G_UPDATE_T800HIST'
    EXPORTING
      I_OBJNAME           = sy-repid
    TABLES
      T_RSPARAMS          = lt_rsparams.

endform.
