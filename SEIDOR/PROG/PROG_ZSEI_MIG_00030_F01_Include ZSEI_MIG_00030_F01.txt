*&---------------------------------------------------------------------*
*& Include          ZSEI_MIG_00030_F01
*&---------------------------------------------------------------------*

FORM get_excel.
  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename                = p_file
      i_begin_col             = p_be_col
      i_begin_row             = p_be_row
      i_end_col               = p_en_col
      i_end_row               = p_en_row
    TABLES
      intern                  = t_excel
    EXCEPTIONS
      inconsistent_parameters = 1
      upload_ole              = 2
      OTHERS                  = 3.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.

"Recorrer la tabla t_excel, las casillas del excel llegan en 3 campos diferentes dentro de la tabla: row, column y value
"Los registros teoricamente ya vienen ordenados solo queda loopearlos, y mirar el valor de la columna, dependiendo del valor
"pondremos el value en una columna o en otra de la tabla de resultado final.
"Link util: https://solutionsapproblems.com/example-program-abap-to-import-excel-and-save-in-table-transparent-sap/

FORM tratar_datos.

  DATA: ls_ukm_s_bp_cms_sgm_upd TYPE ukm_s_bp_cms_sgm_upd,
        lt_ukm_s_bp_cms_sgm_upd TYPE TABLE OF ukm_s_bp_cms_sgm_upd,
        lt_ukm_s_bp_cms_sgm_all TYPE TABLE OF ukm_s_bp_cms_sgm_all,
        lt_return               TYPE TABLE OF bapiret2,
        ls_return               TYPE bapiret2,
        lv_cont                 TYPE i.
  "FIELD-SYMBOLS : <fs_intermedio_bapi> TYPE any.

  SELECT ctlpc FROM zfiorigen_riesgo INTO TABLE t_origen.

  LOOP AT t_excel.
    lv_cont = 0.
    IF wg_cont <> t_excel-row.
      IF wg_cont = '0000'.
        wg_cont = t_excel-row.
      ELSE.
        APPEND tt_riesgos TO t_riesgos.
        CLEAR tt_riesgos.
        wg_cont = t_excel-row.
      ENDIF.
    ENDIF.



    CASE t_excel-col.
      WHEN '01'.
        tt_riesgos-bu_partner = t_excel-value.

      WHEN '02'.
        tt_riesgos-ukm_credit_sgmnt = t_excel-value.

      WHEN '03'.
*        tt_riesgos-zzctlpc = t_excel-value.
*        READ TABLE t_origen INTO tt_origen WITH KEY ctlpc = tt_riesgos-zzctlpc.

      WHEN '04'.
*        tt_riesgos-zzriesg_asum = t_excel-value.

      WHEN OTHERS.
    ENDCASE.

  ENDLOOP.
  APPEND tt_riesgos TO t_riesgos.

  CLEAR tt_riesgos.


  LOOP AT t_riesgos INTO tt_riesgos.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = tt_riesgos-bu_partner
      IMPORTING
        output = tt_riesgos-bu_partner.


*       Comprobamos que no tenga fallos
*      call badi BUPA_FURTHER_CHECKS->CHECK_CENTRAL
    CALL FUNCTION 'BAPI_BUPA_FS_CHECK'
      EXPORTING
        businesspartner = tt_riesgos-bu_partner
*       RESET_IN_ERROR_CASE       =
      TABLES
        return          = lt_return.

    LOOP AT lt_return INTO ls_return WHERE type = 'E'.
      tt_riesgos-log = ls_return-message.
      tt_riesgos-semaforo = icon_red_light.
    ENDLOOP.
    IF ls_return IS NOT INITIAL.
      lv_cont = 1.
      APPEND tt_riesgos TO t_final.
      CONTINUE.
    ENDIF.


*     leemos los segmentos y hacemos un read table comparandolo con el que extraemos de la tabla del excel
    CALL FUNCTION 'UKM_DB_UKMBP_CMS_SGM_ALL_READ'
      EXPORTING
        i_partner         = tt_riesgos-bu_partner
      TABLES
        et_bp_cms_sgm_all = lt_ukm_s_bp_cms_sgm_all
      EXCEPTIONS
        not_found         = 1
        OTHERS            = 2.

    READ TABLE lt_ukm_s_bp_cms_sgm_all ASSIGNING FIELD-SYMBOL(<fs_ukm_s_bp_cms_sgm_all>)
                                                      WITH KEY credit_sgmnt = tt_riesgos-ukm_credit_sgmnt.

    "<fs_intermedio_bapi> = <fs_ukm_s_bp_cms_sgm_all>.

    IF sy-subrc EQ 0.
*      READ TABLE lt_ukm_s_bp_cms_sgm_all ASSIGNING FIELD-SYMBOL(<fs_ukm_s_bp_cms_sgm_all_1>)
*                                                      WITH KEY credit_sgmnt = tt_riesgos-ukm_credit_sgmnt zzctlpc = tt_riesgos-zzctlpc.
*      IF sy-subrc EQ 0.
      MOVE-CORRESPONDING <fs_ukm_s_bp_cms_sgm_all> TO ls_ukm_s_bp_cms_sgm_upd.
*      ls_ukm_s_bp_cms_sgm_upd = <fs_ukm_s_bp_cms_sgm_all>.
      ls_ukm_s_bp_cms_sgm_upd-partner = tt_riesgos-bu_partner.
*      ls_ukm_s_bp_cms_sgm_upd-zzriesg_asum = tt_riesgos-zzriesg_asum.
*      ls_ukm_s_bp_cms_sgm_upd-zzctlpc = tt_riesgos-zzctlpc.
      ls_ukm_s_bp_cms_sgm_upd-change_id = 'U'.
      ls_ukm_s_bp_cms_sgm_upd-limit_chg_date = sy-datum.
      APPEND ls_ukm_s_bp_cms_sgm_upd TO lt_ukm_s_bp_cms_sgm_upd.
      tt_riesgos-semaforo = icon_green_light.
*      ELSE.
*        tt_riesgos-semaforo = icon_red_light.
*        lv_cont = 1.
*        tt_riesgos-log = TEXT-011.
*        APPEND tt_riesgos TO t_final.
*        CONTINUE.
*      ENDIF.


    ELSE.
      tt_riesgos-semaforo = icon_red_light.
      lv_cont = 1.
      tt_riesgos-log = TEXT-010.
      APPEND tt_riesgos TO t_final.
      CONTINUE.
    ENDIF.

    CALL FUNCTION 'UKM_DB_UKMBP_CMS_EXECUTE'
      TABLES
        "   n_ukmbp_cms     = lt_ukm_s_bp_cms_upd
        "    o_ukmbp_cms     = lt_ukm_s_bp_cms_upd
        n_ukmbp_cms_sgm = lt_ukm_s_bp_cms_sgm_upd
        o_ukmbp_cms_sgm = lt_ukm_s_bp_cms_sgm_upd
      EXCEPTIONS
        error           = 99.


    IF lv_cont = 0.
      APPEND tt_riesgos TO t_final.
    ENDIF.
  ENDLOOP.
ENDFORM.


FORM mostrar_alv.
  DATA: it_fieldcat TYPE slis_t_fieldcat_alv,
        wa_fieldcat TYPE slis_fieldcat_alv.

  wa_fieldcat-fieldname  = 'ZZCTLPC'.
  wa_fieldcat-seltext_m  = TEXT-001.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_fieldcat-fieldname  = 'ZZRIESG_ASUM'.
  wa_fieldcat-seltext_m  = TEXT-002.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_fieldcat-fieldname  = 'BU_PARTNER'.
  wa_fieldcat-seltext_m  = TEXT-003.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_fieldcat-fieldname  = 'UKM_CREDIT_SGMNT'.
  wa_fieldcat-seltext_m  = TEXT-004.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_fieldcat-fieldname  = 'LOG'.
  wa_fieldcat-seltext_m  = TEXT-005.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_fieldcat-fieldname  = 'SEMAFORO'.
  wa_fieldcat-seltext_m  = TEXT-006.
  APPEND wa_fieldcat TO it_fieldcat.


  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      it_fieldcat = it_fieldcat
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab    = t_final
* EXCEPTIONS
*     PROGRAM_ERROR                     = 1
*     OTHERS      = 2
    .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.
