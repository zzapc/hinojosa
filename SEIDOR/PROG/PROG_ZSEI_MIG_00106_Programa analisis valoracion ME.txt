*&---------------------------------------------------------------------*
*& Report
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zsei_mig_00106.
TABLES: t001.

* Info valoración ME
TYPES: BEGIN OF ty_val_data,
         bukrs TYPE bukrs,
         ktopl TYPE ktopl,
         hkont TYPE hkont,
         xopvw TYPE xopvw,
         numre TYPE CHAR10,
         gjahr TYPE gjahr,
       END OF ty_val_data.
TYPES: tyt_val_data TYPE STANDARD TABLE OF ty_val_data.
DATA: t_val_data TYPE tyt_val_data.


*&---------------------------------------------------------------------*
*& SELECTION-SCREEN
*&---------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME.
  SELECT-OPTIONS: so_bukrs FOR t001-bukrs.
SELECTION-SCREEN END OF BLOCK b1.

*&---------------------------------------------------------------------*
*& START-OF-SELECTION
*&---------------------------------------------------------------------*
START-OF-SELECTION.
* Recuperamos la información
  PERFORM get_val_data CHANGING t_val_data.
* Mostramos el resultado
  PERFORM show_data    USING    t_val_data.


*&---------------------------------------------------------------------*
*& FORMS
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form get_val_data
*&---------------------------------------------------------------------*
FORM get_val_data  CHANGING pc_t_val_data TYPE tyt_val_data.

  SELECT t001~bukrs, t030h~lkorr, bseg~gjahr, skb1~xopvw, t001~ktopl, skb1~saknr as hkont
    INTO TABLE @DATA(tl_val_data)
    FROM t001 JOIN t030h ON
    t030h~ktopl EQ t001~ktopl
    JOIN skb1 ON
    skb1~bukrs EQ t001~bukrs  AND
    skb1~saknr EQ t030h~lkorr
    LEFT OUTER JOIN bseg ON
    bseg~bukrs EQ t001~bukrs  AND
    bseg~hkont EQ skb1~saknr
    WHERE
      t001~bukrs IN @so_bukrs.
  SORT tl_val_data BY bukrs lkorr gjahr DESCENDING.

  LOOP AT tl_val_data ASSIGNING FIELD-SYMBOL(<fs_val_data>).
    AT NEW lkorr.
      DATA(tl_val_data_temp) = tl_val_data[].
      DELETE tl_val_data_temp WHERE bukrs NE <fs_val_data>-bukrs.
      DELETE tl_val_data_temp WHERE lkorr NE <fs_val_data>-lkorr.
      DESCRIBE TABLE tl_val_data_temp LINES DATA(wl_lines).
*     Recuperamos el último ejercicio
      READ TABLE tl_val_data_temp ASSIGNING FIELD-SYMBOL(<fs_val_data_temp>) INDEX 1.
    ENDAT.
*   Añadimos el registro del listado
    APPEND INITIAL LINE TO pc_t_val_data ASSIGNING FIELD-SYMBOL(<fs_pc_val_data>).
    MOVE-CORRESPONDING <fs_val_data> TO <fs_pc_val_data>.
    <fs_pc_val_data>-numre = wl_lines.
    <fs_pc_val_data>-gjahr = <fs_val_data_temp>-gjahr.
    IF <fs_val_data_temp>-gjahr IS INITIAL.
      <fs_pc_val_data>-numre = 0.
    ENDIF.
  ENDLOOP.
  DELETE ADJACENT DUPLICATES FROM pc_t_val_data COMPARING ALL FIELDS.
ENDFORM.

*&---------------------------------------------------------------------*
*& Form show_data
*&---------------------------------------------------------------------*
FORM show_data  USING  pi_t_val_data TYPE tyt_val_data.
* Campos
  DATA: tl_fieldcat TYPE slis_t_fieldcat_alv.

  APPEND INITIAL LINE TO tl_fieldcat ASSIGNING FIELD-SYMBOL(<fs_fieldcat>).
  <fs_fieldcat>-fieldname = 'BUKRS'.
  <fs_fieldcat>-seltext_m = 'Sociedad'.
  APPEND INITIAL LINE TO tl_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'KTOPL'.
  <fs_fieldcat>-seltext_m = 'Plan de cuentas'.
  APPEND INITIAL LINE TO tl_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'HKONT'.
  <fs_fieldcat>-seltext_m = 'Cuenta'.
  APPEND INITIAL LINE TO tl_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'XOPVW'.
  <fs_fieldcat>-seltext_m = 'Gestión PA'.
  APPEND INITIAL LINE TO tl_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'NUMRE'.
  <fs_fieldcat>-seltext_m = 'Registros'.
  APPEND INITIAL LINE TO tl_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'GJAHR'.
  <fs_fieldcat>-seltext_m = 'Ejercicio'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      it_fieldcat   = tl_fieldcat
    TABLES
      t_outtab      = pi_t_val_data
    EXCEPTIONS
      program_error = 1
      OTHERS        = 2.
ENDFORM.
