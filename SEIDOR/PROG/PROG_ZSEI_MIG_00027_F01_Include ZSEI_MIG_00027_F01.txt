*&---------------------------------------------------------------------*
*& Include          ZSEI_MIG_00027_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE p_ok_code.

    WHEN 'BACK' OR 'EXIT' OR 'CANCEL'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module STATUS_0100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'Z_STATUS_0100'.
  SET TITLEBAR 'Z_TITLE_0100'.

  IF gv_initial_data_0100 IS INITIAL.
    gv_initial_data_0100 = 'X'.

    PERFORM get_data.

    PERFORM initialize_alv_0100.
  ENDIF.

  PERFORM  set_alv_table_0100.
  PERFORM refresh_alv CHANGING lc_data_alv_0100.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form initialize_alv_0100
*&---------------------------------------------------------------------*

FORM initialize_alv_0100 .
  IF lc_data_alv_0100 IS NOT BOUND.
    CREATE OBJECT lc_data_alv_0100
      EXPORTING
        i_parent          = cl_gui_custom_container=>screen0
      EXCEPTIONS
        error_cntl_create = 1
        error_cntl_init   = 2
        error_cntl_link   = 3
        error_dp_create   = 4
        OTHERS            = 5.

    IF sy-subrc EQ 0.
      PERFORM alv_layout_0100.
      PERFORM alv_field_cat_0100.
      PERFORM alv_toolbar_exclude_0100 CHANGING gt_exclude_plan.
      g_variant = 'ZSEI_MIG_00027_0100'.

      lc_data_alv_0100->set_table_for_first_display(
        EXPORTING
          is_variant                    = g_variant    " Layout
          i_save                        = 'A'
          i_default                     = 'X'    " Default Display Variant
          is_layout                     = gs_layout
          it_toolbar_excluding          = gt_exclude_plan

        CHANGING
          it_outtab                     = gt_data_alv
          it_fieldcatalog               = gt_fieldcat
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4 ).

      IF sy-subrc EQ 0.

        SET HANDLER g_class->handle_alv_toolbar      FOR lc_data_alv_0100.
        SET HANDLER g_class->handle_alv_user_command FOR lc_data_alv_0100.
      ENDIF.

    ENDIF.
  ENDIF.
ENDFORM.

*&---------------------------------------------------------------------*
*& Form alv_toolbar_exclude_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GT_EXCLUDE_PLAN
*&---------------------------------------------------------------------*
FORM alv_toolbar_exclude_0100   CHANGING lt_exclude TYPE ui_functions.

  DATA: ls_exclude TYPE ui_func.

  ls_exclude = cl_gui_alv_grid=>mc_fc_detail.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_undo.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_append_row.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_graph.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_sum.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_subtot.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_average.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_info.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_mb_sum.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_print.
  APPEND ls_exclude TO lt_exclude.

  ls_exclude = cl_gui_alv_grid=>mc_fc_views.
  APPEND ls_exclude TO lt_exclude.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form alv_field_cat_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM alv_field_cat_0100 .
  DATA: ls_fieldcat TYPE lvc_s_fcat.
  CLEAR gt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname     = 'MATNR'.
  ls_fieldcat-ref_table     = 'MARA'.
*  ls_fieldcat-seltext       = text-003.
*  ls_fieldcat-coltext       = text-003.
*  ls_fieldcat-scrtext_s     = text-003.
*  ls_fieldcat-scrtext_m     = text-003.
*  ls_fieldcat-scrtext_l     = text-003.
  APPEND ls_fieldcat TO gt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname     = 'MAKTX'.
  ls_fieldcat-ref_table     = 'MAKT'.
  APPEND ls_fieldcat TO gt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname     = 'BERID'.
  ls_fieldcat-ref_table     = 'MDMA'.
  APPEND ls_fieldcat TO gt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname     = 'FOUND'.
  ls_fieldcat-icon = 'X'.
  ls_fieldcat-seltext       = TEXT-002.
  ls_fieldcat-coltext       = TEXT-002.
  ls_fieldcat-scrtext_s     = TEXT-002.
  ls_fieldcat-scrtext_m     = TEXT-002.
  ls_fieldcat-scrtext_l     = TEXT-002.
  APPEND ls_fieldcat TO gt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname     ='TEXT'.
  ls_fieldcat-ref_table     = 'BAPIRET1'.
  ls_fieldcat-outputlen     = 100.
  ls_fieldcat-seltext       = TEXT-005.
*  ls_fieldcat-coltext       = TEXT-006.
  ls_fieldcat-scrtext_s     = TEXT-006.
  ls_fieldcat-scrtext_m     = TEXT-006.
  ls_fieldcat-scrtext_l     = TEXT-005.
  APPEND ls_fieldcat TO gt_fieldcat.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form alv_layout_0100
*&---------------------------------------------------------------------*

FORM alv_layout_0100 .
  CLEAR    gs_layout .
  gs_layout-zebra = 'X'.
*  gs_layout-sel_mode = 'A'.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*

FORM get_data .
  CLEAR: gt_materiales, gt_mdma, gt_data.

  SELECT mara~matnr, makt~maktx INTO CORRESPONDING FIELDS OF TABLE @gt_materiales
    FROM mara
    LEFT OUTER JOIN makt ON mara~matnr EQ makt~matnr
    WHERE mara~matnr IN @s_matnr
    AND makt~spras EQ 'S'.

  IF gt_materiales IS NOT INITIAL.
    SELECT matnr berid INTO CORRESPONDING FIELDS OF TABLE gt_mdma
      FROM mdma
      FOR ALL ENTRIES IN gt_materiales
      WHERE matnr EQ gt_materiales-matnr
      AND berid IN s_berid
        AND dismm EQ 'ND'.
  ENDIF.


  SORT gt_mdlg BY berid werks.

  DELETE ADJACENT DUPLICATES FROM gt_mdlg.
  " Rellenamos la tabla de datos inicialmente

  LOOP AT gt_materiales INTO gs_materiales.
    LOOP AT gt_mdlg INTO gs_mdlg.
      CLEAR gs_data.
      gs_data-matnr = gs_materiales-matnr.
      gs_data-maktx = gs_materiales-maktx.
      gs_data-berid = gs_mdlg-berid.
      gs_data-werks = gs_mdlg-werks.

      READ TABLE gt_mdma INTO gs_mdma WITH KEY matnr = gs_materiales
                                               berid = gs_mdlg-berid.
      IF sy-subrc NE 0.
        gs_data-found = c_icon_semf_yellow.
        gs_data-register = 'X'.
      ENDIF.
      APPEND gs_data TO gt_data.
    ENDLOOP.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form refresh_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- LC_DATA_ALV_0100
*&---------------------------------------------------------------------*
FORM refresh_alv  CHANGING g_lc_alv TYPE REF TO cl_gui_alv_grid.

  gv_stable-row = 'X'.
  gv_stable-col = 'X'.

  IF g_lc_alv IS BOUND.
    g_lc_alv->refresh_table_display(
      EXPORTING
       is_stable      =  gv_stable
      EXCEPTIONS
        finished       = 1
        OTHERS         = 2 ).
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_alv_table_0100
*&---------------------------------------------------------------------*

FORM set_alv_table_0100 .
  CLEAR gt_data_alv.
  LOOP AT gt_data INTO gs_data.
    MOVE-CORRESPONDING gs_data TO gs_data_alv.
    APPEND gs_data_alv TO gt_data_alv.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_alv_toolbar
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_OBJECT
*&---------------------------------------------------------------------*
FORM handle_alv_toolbar  USING i_object TYPE REF TO cl_alv_event_toolbar_set.

  DATA:
    ls_toolbar TYPE stb_button.

  CLEAR ls_toolbar.
  MOVE 3 TO ls_toolbar-butn_type.
  APPEND ls_toolbar TO i_object->mt_toolbar.

  CLEAR: ls_toolbar.
  "Create Productivity Plan
  ls_toolbar-function  = 'REGISTER'.
  ls_toolbar-icon      = c_icon_register.
  ls_toolbar-quickinfo = TEXT-003.
  ls_toolbar-text      = TEXT-004.
  ls_toolbar-disabled  = space.
  APPEND ls_toolbar TO i_object->mt_toolbar.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHECK_BERID
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_berid CHANGING lv_error.
  CLEAR gt_mdlg.
  SELECT  mdlv~berid mdlg~werks INTO CORRESPONDING FIELDS OF TABLE gt_mdlg
    FROM mdlv
    LEFT OUTER JOIN mdlg ON mdlv~berid EQ mdlg~berid
    WHERE mdlv~berid IN s_berid.
  SORT gt_mdlg BY berid werks.

  DELETE ADJACENT DUPLICATES FROM gt_mdlg.

  LOOP AT s_berid ASSIGNING FIELD-SYMBOL(<fs_berid>).
    READ TABLE gt_mdlg TRANSPORTING NO FIELDS WITH KEY berid = <fs_berid>-low.
    IF sy-subrc NE 0.
      MESSAGE 'Berid & does not exist in Database' TYPE 'I' DISPLAY LIKE 'E'.
      lv_error = 'X'.
      EXIT.
    ENDIF.
  ENDLOOP.
ENDFORM.
