*&---------------------------------------------------------------------*
*&  Include           ZSEI_MIG_00020_FORM
*&---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*      Form  VARIANT_INIT
*---------------------------------------------------------------------*
FORM variant_init.

  CLEAR gx_variant.

  g_repid           = sy-repid.
  g_save            = 'A'.
  gx_variant-report = g_repid.

  CALL FUNCTION 'LVC_VARIANT_DEFAULT_GET'
    EXPORTING
      i_save        = g_save
    CHANGING
      cs_variant    = gx_variant
    EXCEPTIONS
      wrong_input   = 1
      not_found     = 2
      program_error = 3
      OTHERS        = 4.
  IF sy-subrc = 0.
    p_vari = gx_variant-variant.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  PAI_OF_SELECTION_SCREEN
*---------------------------------------------------------------------*
FORM pai_of_selection_screen.

  IF NOT p_vari IS INITIAL.

    gx_variant-report  = sy-repid.
    gx_variant-variant = p_vari.

    CALL FUNCTION 'LVC_VARIANT_EXISTENCE_CHECK'
      EXPORTING
        i_save     = g_save
      CHANGING
        cs_variant = gx_variant.

    g_variant = gx_variant.

  ELSE.

    PERFORM variant_init.

  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  F4_FOR_VARIANT
*---------------------------------------------------------------------*
FORM f4_for_variant.

  g_variant-report = sy-repid.
  CALL FUNCTION 'LVC_VARIANT_F4'
    EXPORTING
      is_variant    = g_variant
      i_save        = g_save
    IMPORTING
      e_exit        = g_exit
      es_variant    = gx_variant
    EXCEPTIONS
      not_found     = 1
      program_error = 2
      OTHERS        = 3.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF g_exit = space.
      p_vari = gx_variant-variant.
    ENDIF.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CREATE_AND_DISPLAY_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_and_display_alv .
  PERFORM alv_layout.
  PERFORM alv_field_catalog.
  PERFORM alv_display.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT
*&---------------------------------------------------------------------*
FORM alv_layout.

  gs_layout-zebra      = 'X'.
  gs_layout-sel_mode   = 'A'.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  ALV_FIELD_CATALOG
*---------------------------------------------------------------------*
FORM alv_field_catalog.
  CLEAR: gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'MBLNR'.
  gs_fieldcat-ref_table = 'MKPF'.
  gs_fieldcat-tabname   = 'GT_ALV'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'MJAHR'.
  gs_fieldcat-ref_table = 'MKPF'.
  gs_fieldcat-tabname   = 'GT_ALV'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'TEXTO'.
  gs_fieldcat-tabname   = 'GT_ALV'.
  gs_fieldcat-scrtext_s = text-011.
  gs_fieldcat-coltext   = text-011.
  gs_fieldcat-seltext   = text-011.
  APPEND gs_fieldcat TO gt_fieldcat.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY
*&---------------------------------------------------------------------*
FORM alv_display.

  g_repid = sy-cprog.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program      = g_repid
      i_callback_user_command = 'USER_COMMAND'
      is_layout_lvc           = gs_layout
      i_default               = 'X'
      i_save                  = 'A'
      it_fieldcat_lvc         = gt_fieldcat
      is_variant              = g_variant
    TABLES
      t_outtab                = gt_alv[]
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  STATUS_SET
*---------------------------------------------------------------------*
FORM status_set USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'STANDARD_FULLSCREEN'.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_ALV_TABLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_alv_table .
  REFRESH: gt_alv, gt_mkpf, gt_mseg.

  SELECT mblnr mjahr FROM mkpf
    INTO CORRESPONDING FIELDS OF TABLE gt_mkpf
    WHERE mblnr IN s_mblnr
      AND mjahr IN s_mjahr.

  IF sy-subrc = 0.
    SELECT mblnr mjahr FROM mseg  "mblpo
      INTO CORRESPONDING FIELDS OF TABLE gt_mseg
      FOR ALL ENTRIES IN gt_mkpf
      WHERE mblnr = gt_mkpf-mblnr
        AND mjahr = gt_mkpf-mjahr.
    SORT gt_mseg BY mblnr mjahr.
    DELETE ADJACENT DUPLICATES FROM gt_mseg COMPARING mblnr mjahr.
  ENDIF.

  LOOP AT gt_mkpf INTO gs_mkpf.

    CLEAR: gs_alv.

    READ TABLE gt_mseg TRANSPORTING NO FIELDS WITH KEY mblnr = gs_mkpf-mblnr
                                                       mjahr = gs_mkpf-mjahr.
    IF sy-subrc <> 0.
      gs_alv-mblnr = gs_mkpf-mblnr.
      gs_alv-mjahr = gs_mkpf-mjahr.
      gs_alv-texto = c_texto.
      APPEND gs_alv TO gt_alv.
    ENDIF.

  ENDLOOP.
ENDFORM.
