*&---------------------------------------------------------------------*
*& Include          ZSEI_MIG_00013_FORM
*&---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*      Form  F4_FOR_VARIANT
*---------------------------------------------------------------------*
FORM F4_FOR_VARIANT.

  G_VARIANT-REPORT = SY-REPID.
  CALL FUNCTION 'LVC_VARIANT_F4'
    EXPORTING
      IS_VARIANT    = G_VARIANT
      I_SAVE        = G_SAVE
    IMPORTING
      E_EXIT        = G_EXIT
      ES_VARIANT    = GX_VARIANT
    EXCEPTIONS
      NOT_FOUND     = 1
      PROGRAM_ERROR = 2
      OTHERS        = 3.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ELSE.
    IF G_EXIT = SPACE.
      P_VARI = GX_VARIANT-VARIANT.
    ENDIF.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*      Form  VARIANT_INIT
*---------------------------------------------------------------------*
FORM VARIANT_INIT.

  CLEAR GX_VARIANT.

  G_REPID           = SY-REPID.
  G_SAVE            = 'A'.
  GX_VARIANT-REPORT = G_REPID.

  CALL FUNCTION 'LVC_VARIANT_DEFAULT_GET'
    EXPORTING
      I_SAVE        = G_SAVE
    CHANGING
      CS_VARIANT    = GX_VARIANT
    EXCEPTIONS
      WRONG_INPUT   = 1
      NOT_FOUND     = 2
      PROGRAM_ERROR = 3
      OTHERS        = 4.
  IF SY-SUBRC = 0.
    P_VARI = GX_VARIANT-VARIANT.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form GET_DATA
*&---------------------------------------------------------------------*
FORM GET_DATA .

  SELECT KUNNR KNKLI KKBER CTLPC FROM KNKK
    INTO CORRESPONDING FIELDS OF TABLE T_KNKK
    WHERE KUNNR IN R_KUNNR
      AND KNKLI IN R_KNKLI.

  IF SY-SUBRC <> 0.
    MESSAGE TEXT-000 TYPE 'E'.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  PAI_OF_SELECTION_SCREEN
*---------------------------------------------------------------------*
FORM PAI_OF_SELECTION_SCREEN.

  IF NOT P_VARI IS INITIAL.

    GX_VARIANT-REPORT  = SY-REPID.
    GX_VARIANT-VARIANT = P_VARI.

    CALL FUNCTION 'LVC_VARIANT_EXISTENCE_CHECK'
      EXPORTING
        I_SAVE     = G_SAVE
      CHANGING
        CS_VARIANT = GX_VARIANT.

    G_VARIANT = GX_VARIANT.

  ELSE.

    PERFORM VARIANT_INIT.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_AND_DISPLAY_ALV
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_AND_DISPLAY_ALV .

  PERFORM ALV_LAYOUT.
  PERFORM ALV_FIELD_CATALOG.
  PERFORM ALV_DISPLAY.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ALV_LAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM ALV_LAYOUT .
  GS_LAYOUT-ZEBRA      = 'X'.
  GS_LAYOUT-SEL_MODE   = 'A'.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form ALV_FIELD_CATALOG
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM ALV_FIELD_CATALOG .
  CLEAR: GT_FIELDCAT.

  CLEAR: GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'KUNNR'.
  GS_FIELDCAT-REF_TABLE = 'KNKK'.
  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR: GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'KKBER'.
  GS_FIELDCAT-REF_TABLE = 'KNKK'.
*  GS_FIELDCAT-SCRTEXT_S = TEXT-001.
*  GS_FIELDCAT-COLTEXT   = TEXT-001.
*  GS_FIELDCAT-SELTEXT   = TEXT-001.
  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR: GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'CTLPC'.
  GS_FIELDCAT-REF_TABLE = 'KNKK'.
*  GS_FIELDCAT-SCRTEXT_S = TEXT-001.
*  GS_FIELDCAT-COLTEXT   = TEXT-001.
*  GS_FIELDCAT-SELTEXT   = TEXT-001.
  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR: GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'KNKLI'.
  GS_FIELDCAT-REF_TABLE = 'KNKK'.
*  GS_FIELDCAT-SCRTEXT_S = TEXT-001.
*  GS_FIELDCAT-COLTEXT   = TEXT-001.
*  GS_FIELDCAT-SELTEXT   = TEXT-001.
  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR: GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'CAMPO_ERRONEO'.
  GS_FIELDCAT-SCRTEXT_S = TEXT-001.
  GS_FIELDCAT-COLTEXT   = TEXT-001.
  GS_FIELDCAT-SELTEXT   = TEXT-001.
  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR: GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'FACTURA'.
  GS_FIELDCAT-SCRTEXT_S = TEXT-002.
  GS_FIELDCAT-COLTEXT   = TEXT-002.
  GS_FIELDCAT-SELTEXT   = TEXT-002.
  GS_FIELDCAT-CHECKBOX = 'X'.
  APPEND GS_FIELDCAT TO GT_FIELDCAT.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form ALV_DISPLAY
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM ALV_DISPLAY .
  G_REPID = SY-CPROG.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      I_CALLBACK_PROGRAM      = G_REPID
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
      IS_LAYOUT_LVC           = GS_LAYOUT
      I_DEFAULT               = 'X'
      I_SAVE                  = 'A'
      IT_FIELDCAT_LVC         = GT_FIELDCAT
      IS_VARIANT              = G_VARIANT
    TABLES
      T_OUTTAB                = GT_ALV[]
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
ENDFORM.

*&---------------------------------------------------------------------*
*& Form FILL_ALV_TABLE
*&---------------------------------------------------------------------*
FORM FILL_ALV_TABLE .
  DATA: TL_KNKK_CTLCP TYPE TABLE OF TY_KNKK.
  DATA: TL_KNKK_KNKLI TYPE TABLE OF TY_KNKK.
  DATA: WAL_KNKK TYPE TY_KNKK.
  DATA: TL_VBRK  TYPE TABLE OF VBRK,
        WAL_VBRK TYPE VBRK.

  REFRESH: TL_VBRK.
  REFRESH: TL_KNKK_CTLCP, TL_KNKK_KNKLI.
  SORT T_KNKK BY KNKLI CTLPC.
  LOOP AT T_KNKK INTO WA_KNKK.
    CLEAR: WAL_KNKK.
    IF WAL_KNKK IS INITIAL.
      MOVE-CORRESPONDING WA_KNKK TO WAL_KNKK.
    ELSEIF WA_KNKK-KNKLI EQ WAL_KNKK-KNKLI.
      IF WA_KNKK-CTLPC NE WAL_KNKK-CTLPC.
        APPEND WAL_KNKK TO TL_KNKK_CTLCP.
      ENDIF.
    ELSEIF WA_KNKK-KNKLI NE WAL_KNKK-KNKLI.
      MOVE-CORRESPONDING WA_KNKK TO WAL_KNKK.
    ENDIF.
  ENDLOOP.
  SORT TL_KNKK_CTLCP BY KNKLI CTLPC.
  DELETE ADJACENT DUPLICATES FROM TL_KNKK_CTLCP COMPARING KNKLI CTLPC.
  READ TABLE TL_KNKK_CTLCP TRANSPORTING NO FIELDS INDEX 1.
  IF SY-SUBRC = 0.
    SELECT KUNRG FROM VBRK
      INTO CORRESPONDING FIELDS OF TABLE TL_VBRK
      FOR ALL ENTRIES IN TL_KNKK_CTLCP
      WHERE KUNRG = TL_KNKK_CTLCP-KUNNR.
  ENDIF.

  SORT T_KNKK BY KUNNR KNKLI.
  LOOP AT T_KNKK INTO WA_KNKK.
    CLEAR: WAL_KNKK.
    IF WAL_KNKK IS INITIAL.
      MOVE-CORRESPONDING WA_KNKK TO WAL_KNKK.
    ELSEIF WA_KNKK-KUNNR EQ WAL_KNKK-KUNNR.
      IF WA_KNKK-KNKLI NE WAL_KNKK-KNKLI.
        APPEND WAL_KNKK TO TL_KNKK_KNKLI.
      ENDIF.
    ELSEIF WA_KNKK-KUNNR NE WAL_KNKK-KUNNR.
      MOVE-CORRESPONDING WA_KNKK TO WAL_KNKK.
    ENDIF.
  ENDLOOP.
  SORT TL_KNKK_KNKLI BY KUNNR KNKLI.
  DELETE ADJACENT DUPLICATES FROM TL_KNKK_KNKLI COMPARING KUNNR KNKLI.
  READ TABLE TL_KNKK_KNKLI TRANSPORTING NO FIELDS INDEX 1.
  IF SY-SUBRC = 0.
    SELECT KUNRG FROM VBRK
      APPENDING CORRESPONDING FIELDS OF TABLE TL_VBRK
      FOR ALL ENTRIES IN TL_KNKK_KNKLI
      WHERE KUNRG = TL_KNKK_KNKLI-KUNNR.
  ENDIF.

  LOOP AT TL_KNKK_CTLCP INTO WAL_KNKK.
    CLEAR: GS_ALV.
    GS_ALV-KUNNR = WAL_KNKK-KUNNR.
    GS_ALV-KKBER = WAL_KNKK-KKBER.
    GS_ALV-CTLPC = WAL_KNKK-CTLPC.
*    GS_ALV-KNKLI = wal_knkk-KNKLI.
    GS_ALV-CAMPO_ERRONEO = 'CTLPC'.
    CLEAR: WAL_VBRK.
    READ TABLE TL_VBRK INTO WAL_VBRK WITH KEY KUNRG = GS_ALV-KUNNR.
    IF SY-SUBRC = 0.
      GS_ALV-FACTURA = 'X'.
    ENDIF.
    APPEND GS_ALV TO GT_ALV.
  ENDLOOP.

  LOOP AT TL_KNKK_KNKLI INTO WAL_KNKK.
    CLEAR: GS_ALV.
    GS_ALV-KUNNR = WAL_KNKK-KUNNR.
    GS_ALV-KKBER = WAL_KNKK-KKBER.
*    GS_ALV-CTLPC = WAL_KNKK-CTLPC.
    GS_ALV-KNKLI = WAL_KNKK-KNKLI.
    GS_ALV-CAMPO_ERRONEO = 'KNKLI'.
    CLEAR: WAL_VBRK.
    READ TABLE TL_VBRK INTO WAL_VBRK WITH KEY KUNRG = GS_ALV-KUNNR.
    IF SY-SUBRC = 0.
      GS_ALV-FACTURA = 'X'.
    ENDIF.
    APPEND GS_ALV TO GT_ALV.
  ENDLOOP.
ENDFORM.
