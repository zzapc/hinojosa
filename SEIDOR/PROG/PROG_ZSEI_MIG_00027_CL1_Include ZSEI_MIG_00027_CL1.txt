*&---------------------------------------------------------------------*
*& Include ZSEI_MIG_00027_CL1
*&---------------------------------------------------------------------*
CLASS lcl_class DEFINITION.

  PUBLIC SECTION.
    METHODS:
      handle_alv_toolbar
        FOR EVENT toolbar
        OF cl_gui_alv_grid
        IMPORTING e_object e_interactive,

      handle_alv_user_command
        FOR EVENT user_command
        OF cl_gui_alv_grid
        IMPORTING e_ucomm.

ENDCLASS.

CLASS lcl_class IMPLEMENTATION.

  METHOD handle_alv_toolbar.
    PERFORM handle_alv_toolbar USING e_object.
  ENDMETHOD.

  METHOD handle_alv_user_command.
    DATA: lv_index     TYPE sy-tabix,
          ls_selfields TYPE sdibe_massfields,
          ls_mdma      TYPE mdma,
          ls_bapiret   TYPE bapireturn1,
          ls_dpop      TYPE dpop.

    CLEAR: ls_selfields, ls_mdma, lv_index, ls_dpop.
    " Rellenamos los datos necesarios para rellenar el campo dismm en el registro

    CASE e_ucomm.
      WHEN 'REGISTER'.
        ls_selfields-xdismm = 'X'.
        ls_mdma-dismm = 'ND'.

        LOOP AT gt_data_alv INTO gs_data_alv WHERE register IS NOT INITIAL.
          CLEAR ls_bapiret.

          CALL FUNCTION 'MD_MRP_LEVEL_CREATE_DATA'
            EXPORTING
              i_matnr        = gs_data_alv-matnr
              i_werk         = gs_data_alv-werks
              i_mrp_area     = gs_data_alv-berid
              i_selfields    = ls_selfields
              i_mdma         = ls_mdma
              i_dpop         = ls_dpop
*             I_QUEUE_FLAG   = 'X'
*             I_SAVE_FLAG    = 'X'
*             I_EXTERNAL_COMMIT       = ' '
            IMPORTING
              e_error_return = ls_bapiret.

          READ TABLE gt_data INTO gs_data WITH KEY matnr = gs_data_alv-matnr
                                                   berid = gs_data_alv-berid.
          IF sy-subrc EQ 0.
            lv_index = sy-tabix.

            IF ls_bapiret-type EQ 'W' OR  ls_bapiret-type EQ 'E'.
              gs_data-found = c_icon_semf_red.
              gs_data-text = ls_bapiret-message.
            ELSE.
              gs_data-found = c_icon_semf_green.
              CLEAR gs_data-register.

            ENDIF.
          ENDIF.
          MODIFY gt_data FROM gs_data INDEX lv_index.

        ENDLOOP.


        PERFORM set_alv_table_0100.
        PERFORM refresh_alv CHANGING lc_data_alv_0100.

        MESSAGE 'Register Process has finished' TYPE 'S'.
    ENDCASE.
  ENDMETHOD.
ENDCLASS.
