*---------------------------------------------------------------------*
* Report ZSEI_MIG_00012
*---------------------------------------------------------------------*
REPORT ZSEI_MIG_00012.

TYPE-POOLS: slis.

TABLES: but000.

TYPES:
  BEGIN OF ty_exc,
    partner TYPE but000-partner,
    lifnr   TYPE kna1-lifnr,
    bkvid   TYPE but0bk-bkvid,
    banks   TYPE but0bk-banks,
    bankl   TYPE but0bk-bankl,
    bankn   TYPE but0bk-bankn,
    bkont   TYPE but0bk-bkont,
    bkext   TYPE but0bk-bkext,
  END   OF ty_exc.

TYPES:
  BEGIN OF ty_alv,
    lifnr        TYPE lfbk-lifnr,
    banks        TYPE lfbk-banks,
    bankl        TYPE lfbk-bankl,
    bankn        TYPE lfbk-bankn,
    iban         TYPE tiban-iban,
    cuentabanco  TYPE bankn,
    digcont      TYPE knbk_bf-bkont,
    paisbanco    TYPE knbk_bf-banks,
    clavebanco   TYPE bnka-bnklz,
    partner_guid TYPE cvi_vend_link-partner_guid,
    partner      TYPE but000-partner,
    bvtyp        TYPE lfbk-bvtyp,
    partner2     TYPE but0bk-partner,
    BKVID        TYPE but0bk-BKVID,
    BANKS_2      TYPE but0bk-BANKS,
    BANKL_2      TYPE but0bk-BANKL,
    BANKN_2      tyPE but0bk-BANKN,
    BKONT_2      TYPE but0bk-BKONT,
    BKREF        TYPE but0bk-BKREF,
    KOINH        TYPE but0bk-KOINH,
    sel,
  END   OF ty_alv.

DATA:
  gt_fieldcat TYPE lvc_t_fcat,
  gs_fieldcat TYPE lvc_s_fcat,
  gs_layout   TYPE lvc_s_layo,
  lt_alv      TYPE STANDARD TABLE OF ty_alv,
  lv_iban     TYPE iban,
  ls_alv      TYPE ty_alv,
  lt_exc      TYPE STANDARD TABLE OF ty_exc,
  ls_exc      TYPE ty_exc,
  lt_log      TYPE STANDARD TABLE OF bapiret2,
  ls_log      TYPE bapiret2,
  gx_variant  TYPE disvariant,
  g_variant   TYPE disvariant,
  g_repid     TYPE sy-repid,
  g_save      TYPE c VALUE 'A',
  g_exit      TYPE c.

SELECTION-SCREEN BEGIN OF BLOCK bar WITH FRAME TITLE TEXT-002.
  SELECT-OPTIONS: s_part FOR but000-partner.
SELECTION-SCREEN END OF BLOCK bar.

SELECTION-SCREEN BEGIN OF BLOCK var WITH FRAME TITLE TEXT-002.
  PARAMETERS: p_vari TYPE disvariant-variant.
SELECTION-SCREEN END OF BLOCK var.

SELECTION-SCREEN BEGIN OF BLOCK tar WITH FRAME TITLE TEXT-001.
  PARAMETERS: p_cli TYPE c AS CHECKBOX.
SELECTION-SCREEN END OF BLOCK tar.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_vari.
  PERFORM f4_for_variant.

AT SELECTION-SCREEN.
  PERFORM pai_of_selection_screen.

INITIALIZATION.
  PERFORM variant_init.

START-OF-SELECTION.
  PERFORM get_data.

  PERFORM alv_layout.
  PERFORM alv_field_catalog.
  PERFORM alv_display.

*---------------------------------------------------------------------*
* Form ALV_LAYOUT
*---------------------------------------------------------------------*
FORM alv_layout.

  gs_layout-zebra      = 'X'.
  gs_layout-cwidth_opt = 'X'.
  gs_layout-sel_mode   = 'A'.
  gs_layout-box_fname  = 'SEL'.

ENDFORM.

*---------------------------------------------------------------------*
* Form ALV_FIELDCAT
*---------------------------------------------------------------------*
FORM alv_field_catalog.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'LIFNR'.
  gs_fieldcat-ref_table = 'LFBK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BANKS'.
  gs_fieldcat-ref_table = 'LFBK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BANKL'.
  gs_fieldcat-ref_table = 'LFBK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BANKN'.
  gs_fieldcat-ref_table = 'LFBK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'IBAN'.
  gs_fieldcat-ref_table = 'TIBAN'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'CUENTABANCO'.
  gs_fieldcat-scrtext_l = 'Cuenta'.
  gs_fieldcat-scrtext_m = 'Cuenta'.
  gs_fieldcat-scrtext_s = 'Cuenta'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'DIGCONT'.
  gs_fieldcat-fieldname = 'CLAVEBANCO'.
  gs_fieldcat-scrtext_l = 'Control'.
  gs_fieldcat-scrtext_m = 'Control'.
  gs_fieldcat-scrtext_s = 'Control'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'PAISBANCO'.
  gs_fieldcat-scrtext_l = 'País'.
  gs_fieldcat-scrtext_m = 'País'.
  gs_fieldcat-scrtext_s = 'País'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'CLAVEBANCO'.
  gs_fieldcat-scrtext_l = 'Clave'.
  gs_fieldcat-scrtext_m = 'Clave'.
  gs_fieldcat-scrtext_s = 'Clave'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'PARTNER_GUID'.
  gs_fieldcat-ref_table = 'CVI_VEND_LINK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'PARTNER'.
  gs_fieldcat-ref_table = 'BUT000'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BVTYP'.
  gs_fieldcat-ref_table = 'LFBK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'PARTNER2'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  gs_fieldcat-scrtext_l = 'Entrada'.
  gs_fieldcat-scrtext_m = 'Entrada'.
  gs_fieldcat-scrtext_s = 'Entrada'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BKVID'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  gs_fieldcat-scrtext_l = 'Relac.bancaria'.
  gs_fieldcat-scrtext_m = 'Relac.bancaria'.
  gs_fieldcat-scrtext_s = 'Relac.bancaria'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BANKS_2'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  gs_fieldcat-scrtext_l = 'País del banco'.
  gs_fieldcat-scrtext_m = 'País del banco'.
  gs_fieldcat-scrtext_s = 'País del banco'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BANKL_2'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  gs_fieldcat-scrtext_l = 'Clave de banco'.
  gs_fieldcat-scrtext_m = 'Clave de banco'.
  gs_fieldcat-scrtext_s = 'Clave de banco'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BANKN_2'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  gs_fieldcat-scrtext_l = 'Cuenta bancaria'.
  gs_fieldcat-scrtext_m = 'Cuenta bancaria'.
  gs_fieldcat-scrtext_s = 'Cuenta bancaria'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BKONT_2'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  gs_fieldcat-scrtext_l = 'Clv.ctrl.bancos'.
  gs_fieldcat-scrtext_m = 'Clv.ctrl.bancos'.
  gs_fieldcat-scrtext_s = 'Clv.ctrl.bancos'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'BKREF'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  APPEND gs_fieldcat TO gt_fieldcat.

  CLEAR: gs_fieldcat.
  gs_fieldcat-fieldname = 'KOINH'.
  gs_fieldcat-ref_table = 'BUT0BK'.
  APPEND gs_fieldcat TO gt_fieldcat.

ENDFORM.

*---------------------------------------------------------------------*
* Form ALV_DISPLAY
*---------------------------------------------------------------------*
FORM alv_display.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program       = g_repid
      i_callback_pf_status_set = 'STATUS_SET'
      i_callback_user_command  = 'USER_COMMAND'
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fieldcat
      i_default                = 'X'
      i_save                   = 'A'
      is_variant               = g_variant
    TABLES
      t_outtab                 = lt_alv[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  STATUS_SET
*---------------------------------------------------------------------*
FORM status_set USING rt_extab TYPE slis_t_extab.

  SET PF-STATUS 'ZSTATUS'.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  USER_COMMAND
*---------------------------------------------------------------------*
FORM user_command USING l_ucomm     LIKE sy-ucomm
                        l_selfield  TYPE slis_selfield.


  DATA:
    lv_bankdetailid     TYPE  bapibus1006_head-bankdetailid,
    lv_bankoutid        TYPE bapibus1006_head-bankdetailid,
    lv_bpartner         TYPE bapibus1006_head-bpartner,
    fs_bankdetail       TYPE bapibus1006_bankdetail,
    lv_index            TYPE sy-tabix,
    lv_businesspartner  TYPE bapibus1006_head-bpartner,
    ls_bankdetaildata   TYPE bapibus1006_bankdetail,
    ls_bankdetaildata_x TYPE bapibus1006_bankdetail_x,
    it_return           TYPE STANDARD TABLE OF bapiret2,
    wa_return           LIKE LINE OF it_return,
    lt_return           TYPE STANDARD TABLE OF bapiret2,
    ls_return           TYPE bapiret2.

  CASE l_ucomm.

    WHEN '&IC1'.

      READ TABLE lt_alv INTO ls_alv INDEX l_selfield-tabindex.
      IF sy-subrc EQ 0.
        SET PARAMETER ID 'BPA' FIELD ls_alv-partner.
        CALL TRANSACTION 'BP' AND SKIP FIRST SCREEN.
      ENDIF.

    WHEN '&ACT'.

      LOOP AT lt_alv INTO ls_alv WHERE sel IS NOT INITIAL.

        fs_bankdetail-bank_ctry        = ls_alv-paisbanco.
        fs_bankdetail-bank_key         = ls_alv-clavebanco.
        fs_bankdetail-bank_acct        = ls_alv-cuentabanco.
        fs_bankdetail-ctrl_key         = ls_alv-digcont.
        fs_bankdetail-iban             = ls_alv-iban.

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            input  = ls_alv-partner
          IMPORTING
            output = lv_bpartner.

        lv_bankdetailid = ls_alv-bvtyp.

        CALL FUNCTION 'BAPI_BUPA_BANKDETAIL_ADD'
          EXPORTING
            businesspartner = lv_bpartner
            bankdetailid    = lv_bankdetailid
            bankdetaildata  = fs_bankdetail
          IMPORTING
            bankdetailidout = lv_bankoutid
          TABLES
            return          = it_return
          EXCEPTIONS
            error_message   = 98
            OTHERS          = 99.
        IF sy-subrc NE 0.

          PERFORM add_message TABLES lt_log USING 'E' 'ZMIG_BUPA' '000' 'BAPI_BUPA_BANKDETAIL_ADD' lv_bpartner '' ''.

        ELSE.

          LOOP AT it_return INTO wa_return WHERE type CA 'AE'.
          ENDLOOP.
          IF sy-subrc NE 0.

            PERFORM add_message TABLES lt_log USING 'S' 'ZMIG_BUPA' '001' lv_bpartner ls_alv-iban '' ''.
            LOOP AT it_return INTO wa_return.
              PERFORM add_message TABLES lt_log USING wa_return-type wa_return-id wa_return-number wa_return-message_v1 wa_return-message_v2 wa_return-message_v3 wa_return-message_v4.
            ENDLOOP.
            PERFORM bapi_commit.

          ELSE.

            PERFORM add_message TABLES lt_log USING 'E' 'ZMIG_BUPA' '002' lv_bpartner ls_alv-iban '' ''.
            LOOP AT it_return INTO wa_return.
              PERFORM add_message TABLES lt_log USING wa_return-type wa_return-id wa_return-number wa_return-message_v1 wa_return-message_v2 wa_return-message_v3 wa_return-message_v4.
            ENDLOOP.
            PERFORM bapi_rollback.

          ENDIF.

        ENDIF.

      ENDLOOP.

    WHEN OTHERS.

  ENDCASE.

  l_selfield-refresh    = 'X'.
  l_selfield-col_stable = 'X'.
  l_selfield-row_stable = 'X'.

  IF lt_log[] IS NOT INITIAL.
    PERFORM show_error_log USING 'ZMIG_LOG' 'ZMIG_LOG' 'X' ''.
    PERFORM refresh_log    TABLES lt_log.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  VARIANT_INIT
*---------------------------------------------------------------------*
FORM variant_init.

  CLEAR gx_variant.

  g_repid           = sy-repid.
  g_save            = 'A'.
  gx_variant-report = g_repid.

  CALL FUNCTION 'LVC_VARIANT_DEFAULT_GET'
    EXPORTING
      i_save        = g_save
    CHANGING
      cs_variant    = gx_variant
    EXCEPTIONS
      wrong_input   = 1
      not_found     = 2
      program_error = 3
      OTHERS        = 4.
  IF sy-subrc = 0.
    p_vari = gx_variant-variant.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  PAI_OF_SELECTION_SCREEN
*---------------------------------------------------------------------*
FORM pai_of_selection_screen.

  IF NOT p_vari IS INITIAL.

    gx_variant-report  = sy-repid.
    gx_variant-variant = p_vari.

    CALL FUNCTION 'LVC_VARIANT_EXISTENCE_CHECK'
      EXPORTING
        i_save     = g_save
      CHANGING
        cs_variant = gx_variant.

    g_variant = gx_variant.

  ELSE.

    PERFORM variant_init.

  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  F4_FOR_VARIANT
*---------------------------------------------------------------------*
FORM f4_for_variant.

  g_variant-report = sy-repid.
  CALL FUNCTION 'LVC_VARIANT_F4'
    EXPORTING
      is_variant    = g_variant
      i_save        = g_save
    IMPORTING
      e_exit        = g_exit
      es_variant    = gx_variant
    EXCEPTIONS
      not_found     = 1
      program_error = 2
      OTHERS        = 3.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF g_exit = space.
      p_vari = gx_variant-variant.
    ENDIF.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
* Form refresh_log
*---------------------------------------------------------------------*
FORM refresh_log  TABLES lt_result STRUCTURE bapiret2.

  REFRESH: lt_result.

ENDFORM.

*---------------------------------------------------------------------*
* Form ADD_MESSAGE
*---------------------------------------------------------------------*
FORM add_message  TABLES lt_result STRUCTURE bapiret2 USING p_msgty p_msgid p_msgno p_msgv1 p_msgv2 p_msgv3 p_msgv4.

  DATA:
    ls_result LIKE LINE OF lt_result.

  CLEAR: ls_result.
  ls_result-type       = p_msgty.
  ls_result-id         = p_msgid.
  ls_result-number     = p_msgno.
  ls_result-message_v1 = p_msgv1.
  ls_result-message_v2 = p_msgv2.
  ls_result-message_v3 = p_msgv3.
  ls_result-message_v4 = p_msgv4.
  APPEND ls_result TO lt_result.

ENDFORM.

*--------------------------- ------------------------------------------*
* Form SHOW_ERROR_LOG
*---------------------------------------------------------------------*
FORM show_error_log USING object subobject popup save.

  DATA:
    lt_log_handle       TYPE bal_t_logh,
    l_s_display_profile TYPE bal_s_prof,
    gv_log_handle       TYPE balloghndl,
    l_s_log             TYPE bal_s_log,
    l_s_msg             TYPE bal_s_msg.

  CLEAR: sy-batch.

* Define some header data of this log
  l_s_log-extnumber  = 'Log'.
  l_s_log-object     = object.
  l_s_log-subobject  = subobject.
  l_s_log-aldate     = sy-datum.
  l_s_log-altime     = sy-uzeit.
  l_s_log-aluser     = sy-uname.
  l_s_log-alprog     = sy-repid.
  l_s_log-del_before = 'X'.
  l_s_log-aldate_del = sy-datum + '00000014'.

  CALL FUNCTION 'BAL_LOG_CREATE'
    EXPORTING
      i_s_log                 = l_s_log
    IMPORTING
      e_log_handle            = gv_log_handle
    EXCEPTIONS
      log_header_inconsistent = 1
      OTHERS                  = 2.

  APPEND gv_log_handle TO lt_log_handle.

  LOOP AT lt_log INTO ls_log.

    l_s_msg-msgty     = ls_log-type.
    l_s_msg-msgid     = ls_log-id.
    l_s_msg-msgno     = ls_log-number.
    l_s_msg-msgv1     = ls_log-message_v1.
    l_s_msg-msgv2     = ls_log-message_v2.
    l_s_msg-msgv3     = ls_log-message_v3.
    l_s_msg-msgv4     = ls_log-message_v4.

    CALL FUNCTION 'BAL_LOG_MSG_ADD'
      EXPORTING
        i_log_handle     = gv_log_handle
        i_s_msg          = l_s_msg
      EXCEPTIONS
        log_not_found    = 1
        msg_inconsistent = 2
        log_is_full      = 3
        OTHERS           = 4.

  ENDLOOP.

* Get a prepared profile
  IF popup IS NOT INITIAL.
    CALL FUNCTION 'BAL_DSP_PROFILE_POPUP_GET'
      IMPORTING
        e_s_display_profile = l_s_display_profile.
  ELSE.
    CALL FUNCTION 'BAL_DSP_PROFILE_NO_TREE_GET'
      IMPORTING
        e_s_display_profile = l_s_display_profile.
  ENDIF.

  l_s_display_profile-use_grid   = 'X'.
  l_s_display_profile-cwidth_opt = 'X'.

  IF save IS NOT INITIAL.
    CALL FUNCTION 'BAL_DB_SAVE'
      EXPORTING
        i_save_all       = 'X'
      EXCEPTIONS
        log_not_found    = 1
        save_not_allowed = 2
        numbering_error  = 3
        OTHERS           = 4.
  ENDIF.

  CALL FUNCTION 'BAL_DSP_LOG_DISPLAY'
    EXPORTING
      i_s_display_profile  = l_s_display_profile
      i_t_log_handle       = lt_log_handle
    EXCEPTIONS
      profile_inconsistent = 1
      internal_error       = 2
      no_data_available    = 3
      no_authority         = 4
      OTHERS               = 5.

ENDFORM.

*---------------------------------------------------------------------*
* Form GET_DATA
*---------------------------------------------------------------------*
FORM get_data.

  IF p_cli IS NOT INITIAL.

*   Seleccionamos los registros a tratar
    SELECT knbk~kunnr AS lifnr, knbk~banks, knbk~bankl, knbk~bankn, tiban~iban,
           cvi_cust_link~partner_guid, but000~partner, knbk~bvtyp,
           but0bk~partner AS partner2,
           but0bk~BKVID,
           but0bk~BANKS as BANKS_2,
           but0bk~BANKL as BANKL_2,
           but0bk~BANKN as BANKN_2,
           but0bk~BKONT as BKONT_2,
           but0bk~BKREF,
           but0bk~KOINH
      INTO CORRESPONDING FIELDS OF TABLE @lt_alv
      FROM knbk
      LEFT OUTER JOIN tiban
        ON tiban~banks   EQ knbk~banks
       AND tiban~bankl   EQ knbk~bankl
       AND tiban~bankn   EQ knbk~bankn
       AND tiban~bkont   EQ knbk~bkont
*      AND tiban~tabname EQ 'KNBK'
     INNER JOIN cvi_cust_link
        ON cvi_cust_link~customer EQ knbk~kunnr
     INNER JOIN but000
        ON but000~partner_guid EQ cvi_cust_link~partner_guid
      LEFT OUTER JOIN but0bk
        ON but0bk~partner EQ but000~partner
       AND but0bk~bkvid   EQ knbk~bvtyp
     WHERE but000~partner IN @s_part.

  ELSE.

*   Seleccionamos los registros a tratar
    SELECT lfbk~lifnr, lfbk~banks, lfbk~bankl, lfbk~bankn, tiban~iban,
           cvi_vend_link~partner_guid, but000~partner, lfbk~bvtyp, but0bk~partner AS partner2,
           but0bk~BKVID,
           but0bk~BANKS as BANKS_2,
           but0bk~BANKL as BANKL_2,
           but0bk~BANKN as BANKN_2,
           but0bk~BKONT as BKONT_2,
           but0bk~BKREF,
           but0bk~KOINH
      INTO CORRESPONDING FIELDS OF TABLE @lt_alv
      FROM lfbk
      LEFT OUTER JOIN tiban
        ON tiban~banks   EQ lfbk~banks
       AND tiban~bankl   EQ lfbk~bankl
       AND tiban~bankn   EQ lfbk~bankn
       AND tiban~bkont   EQ lfbk~bkont
*      AND tiban~tabname EQ 'LFBK'
     INNER JOIN cvi_vend_link
        ON cvi_vend_link~vendor EQ lfbk~lifnr
     INNER JOIN but000
        ON but000~partner_guid EQ cvi_vend_link~partner_guid
      LEFT OUTER JOIN but0bk
        ON but0bk~partner EQ but000~partner
       AND but0bk~bkvid   EQ lfbk~bvtyp
     WHERE but000~partner IN @s_part.

  ENDIF.

  LOOP AT lt_alv ASSIGNING FIELD-SYMBOL(<fs_alv>).

    lv_iban = <fs_alv>-iban.

    CALL FUNCTION 'CONVERT_IBAN_2_BANK_ACCOUNT'
      EXPORTING
        i_iban             = lv_iban
      IMPORTING
        e_bank_account     = <fs_alv>-cuentabanco
        e_bank_control_key = <fs_alv>-digcont
        e_bank_country     = <fs_alv>-paisbanco
        e_bank_number      = <fs_alv>-clavebanco
      EXCEPTIONS
        error_message      = 98
        OTHERS             = 99.
    IF sy-subrc EQ 0.
    ENDIF.

    IF <fs_alv>-bvtyp IS INITIAL.
      SELECT SINGLE but0bk~partner
        INTO <fs_alv>-partner2
        FROM but0bk
       WHERE but0bk~partner EQ <fs_alv>-partner
         AND but0bk~bkvid   EQ '0001'.
    ENDIF.

  ENDLOOP.

ENDFORM.

*---------------------------------------------------------------------*
* FORMS bapi_commit
*---------------------------------------------------------------------*
FORM bapi_commit.

  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
    EXPORTING
      wait = 'X'.

ENDFORM.

*---------------------------------------------------------------------*
* FORMS bapi_ROLLBACK
*---------------------------------------------------------------------*
FORM bapi_rollback.

  CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

ENDFORM.
