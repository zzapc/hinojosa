*$*$----------------------------------------------------------------$*$*
*$ Correction Inst.         0020751259 0000504183                     $*
*$--------------------------------------------------------------------$*
*$ Valid for       :                                                  $*
*$ Software Component   S4CORE                                        $*
*$  Release 100          All Support Package Levels                   $*
*$  Release 101          All Support Package Levels                   $*
*$  Release 102          All Support Package Levels                   $*
*$  Release 103          All Support Package Levels                   $*
*$  Release 104          All Support Package Levels                   $*
*$  Release 105          All Support Package Levels                   $*
*$--------------------------------------------------------------------$*
*$ Changes/Objects Not Contained in Standard SAP System               $*
*$*$----------------------------------------------------------------$*$*
*&--------------------------------------------------------------------*
*& Object          REPS ZFINS_MIG_GCM_DELIMIT_CEL
*& Object Header   PROG ZFINS_MIG_GCM_DELIMIT_CEL
*&--------------------------------------------------------------------*
*>>>> START OF INSERTION <<<<
*&---------------------------------------------------------------------*
*& Report ZSEI_MIG_00037
*&---------------------------------------------------------------------*
*& This program is intended to delimit the validity of cost elements.
*& The user must enter a cost area, the cost element number and
*& the date of the very last day the cost element shall be valid.
*&
*& All records in CSKB are deleted that are valid > sv_datbi.
*&---------------------------------------------------------------------*
REPORT ZSEI_MIG_00037.

DATA gs_ska1  TYPE ska1.
DATA gv_ktopl TYPE ktopl.
DATA gs_cedel TYPE bapi1030_cedellist.
DATA gt_cedel TYPE STANDARD TABLE OF bapi1030_cedellist.
DATA gt_bret2 TYPE STANDARD TABLE OF bapiret2.

PARAMETERS sv_kokrs LIKE cskb-kokrs OBLIGATORY.
PARAMETERS sv_kstar LIKE cskb-kstar OBLIGATORY.
PARAMETERS sv_datbi LIKE cskb-datbi OBLIGATORY.

*========================================================================
AT SELECTION-SCREEN.
*========================================================================

* Derive Chart Of Accounts from Controlling Area
  CALL FUNCTION 'GL_ACCT_UTIL_GET_COA'
    EXPORTING
      iv_kokrs          = sv_kokrs
    IMPORTING
      chart_of_accounts = gv_ktopl
    EXCEPTIONS
      not_found         = 1
      OTHERS            = 2.
  IF sy-subrc <> 0.
    MESSAGE e193(fh) WITH sv_kokrs.
  ENDIF.

* Read G/L account for type
  SELECT SINGLE * FROM ska1 INTO gs_ska1 WHERE ktopl = gv_ktopl AND saknr = sv_kstar.
  IF sy-subrc <> 0.
    MESSAGE e004(fh) WITH sv_kstar gv_ktopl.
  ENDIF.

* Check for "delete" authorization
  CALL FUNCTION 'GL_ACCT_UTIL_CHECK_AUTHORITY'
    EXPORTING
      x_chart_of_accounts = abap_true
*     X_COMPANY_CODE      =
      x_controlling_area  = abap_true
      chart_of_accounts   = gs_ska1-ktopl
*     COMPANY_CODE        =
      controlling_area    = sv_kokrs
      glaccount_type      = gs_ska1-glaccount_type
*     AUTHORIZATION_GROUP =
      activity            = '06'
    EXCEPTIONS
      no_authority        = 1
      OTHERS              = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*========================================================================
START-OF-SELECTION.
*========================================================================

* BAPI checks
* - that authorization is given
* - that enqueue is possible
* - that cost element exists in the given (delete) period
* - that no postings exist in the delete period

* Delete given period
  gs_cedel-cost_elem  = sv_kstar.
  gs_cedel-valid_from = sv_datbi + 1.
  gs_cedel-valid_to   = if_gl_account_master=>gc_validity_date-max.
  INSERT gs_cedel INTO TABLE gt_cedel.

  CALL FUNCTION 'K_COSTELEM_BAPI_DELETEMULTIPLE'
    EXPORTING
      coarea          = sv_kokrs
      testrun         = abap_false
      in_update_task  = abap_false
    TABLES
      costelementlist = gt_cedel
      return          = gt_bret2.

  LOOP AT gt_bret2 ASSIGNING FIELD-SYMBOL(<gs_ret2>).
    WRITE / <gs_ret2>(24). WRITE <gs_ret2>-message.
  ENDLOOP.

  IF sy-subrc <> 0.
    COMMIT WORK.
    WRITE / 'Cost element has been delimited.'(003).
  ENDIF.

*>>>> END OF INSERTION <<<<<<
...
*&--------------------------------------------------------------------*
