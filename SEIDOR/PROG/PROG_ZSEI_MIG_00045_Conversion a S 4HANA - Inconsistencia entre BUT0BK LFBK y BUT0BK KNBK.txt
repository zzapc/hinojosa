*---------------------------------------------------------------------*
* Report ZSEI_MIG_00045
*---------------------------------------------------------------------*
* Inconsistencia de datos tablas BUT0BK/LFBK y BUT0BK/KNBK
*---------------------------------------------------------------------*
REPORT zsei_mig_00045.

TABLES: but0bk, v_cvi_vend_link, v_cvi_cust_link.

TYPES:
  BEGIN OF ty_alv,
    partner      TYPE but0bk-partner,
    bkvid        TYPE but0bk-bkvid,
    banks        TYPE but0bk-banks,
    bankl        TYPE but0bk-bankl,
    bankn        TYPE but0bk-bankn,
    bkont        TYPE but0bk-bkont,
    lifnr        TYPE v_cvi_vend_link-lifnr,
    bvtyp        TYPE lfbk-bvtyp,
    bvtyp_knbk   TYPE knbk-bvtyp,
    bankn_lfbk   TYPE lfbk-bankn,
    bankn_knbk   TYPE knbk-bankn,
    bvtyp_dif    TYPE c,
    bvtyp_dif_kn TYPE c,
    bankn_dif    TYPE c,
    bankn_dif_kn TYPE c,
    kunnr        TYPE v_cvi_cust_link-kunnr,
  END OF ty_alv.

TYPES:
tyt_alv TYPE STANDARD TABLE OF ty_alv.

DATA:
  t_alv      TYPE tyt_alv,
  t_fieldcat TYPE lvc_t_fcat,
  x_layout   TYPE lvc_s_layo,
  w_repid    TYPE sy-repid,
  gx_variant TYPE disvariant,
  g_variant  TYPE disvariant,
  w_exit     TYPE c,
  w_save     TYPE c VALUE 'A'.

SELECTION-SCREEN BEGIN OF BLOCK sel WITH FRAME.
  SELECT-OPTIONS: s_partn FOR but0bk-partner,
                  s_bkvid FOR but0bk-bkvid,
                  s_lifnr FOR v_cvi_vend_link-lifnr,
                  s_kunnr FOR v_cvi_cust_link-kunnr.
  SELECTION-SCREEN BEGIN OF LINE.
    PARAMETERS : p_updat AS CHECKBOX.
    SELECTION-SCREEN POSITION 10.
    SELECTION-SCREEN COMMENT 10(35) TEXT-003 FOR FIELD p_updat.
  SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK sel.
SELECTION-SCREEN BEGIN OF BLOCK var WITH FRAME.
  PARAMETERS: p_vari TYPE disvariant-variant.
SELECTION-SCREEN END OF BLOCK var.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_vari.
  PERFORM f4_for_variant.

AT SELECTION-SCREEN.
  PERFORM pai_of_selection_screen.

INITIALIZATION.
  PERFORM variant_init.

START-OF-SELECTION.
* Recuperamos la info
  PERFORM get_info CHANGING t_alv.

* Mostramos el listado
  PERFORM create_and_display_alv.

*&---------------------------------------------------------------------*
*& Form get_info
*&---------------------------------------------------------------------*
FORM get_info CHANGING pc_t_alv TYPE tyt_alv.

*LFBK
* LIFNR
* BANKS
* BANKL
* BANKN

*BUT0BK
* PARTNER
* BKVID
* BANKS
* BANKL
* BANKN
* BKONT

*KNBK
* KUNNR
* BANKS
* BANKL
* BANKN

  DATA:
    ls_alv TYPE ty_alv.

  IF s_kunnr[] IS INITIAL.
    SELECT but0bk~partner, but0bk~bkvid, but0bk~banks, but0bk~bankl, but0bk~bankn, but0bk~bkont, v_cvi_vend_link~lifnr
      INTO TABLE @DATA(lt_but0bk)
      FROM but0bk
      INNER JOIN v_cvi_vend_link
        ON v_cvi_vend_link~partner EQ but0bk~partner
     WHERE
        but0bk~partner        IN @s_partn AND
        but0bk~bkvid          IN @s_bkvid AND
        v_cvi_vend_link~lifnr IN @s_lifnr.
  ENDIF.

  IF s_lifnr[] IS INITIAL.
    SELECT but0bk~partner, but0bk~bkvid, but0bk~banks, but0bk~bankl, but0bk~bankn, but0bk~bkont, v_cvi_cust_link~kunnr
      INTO TABLE @DATA(lt_but0bk_k)
      FROM but0bk
      INNER JOIN v_cvi_cust_link
        ON v_cvi_cust_link~partner EQ but0bk~partner
     WHERE
        but0bk~partner        IN @s_partn AND
        but0bk~bkvid          IN @s_bkvid AND
        v_cvi_cust_link~kunnr IN @s_kunnr.
  ENDIF.

  SELECT lfbk~lifnr, lfbk~banks, lfbk~bvtyp, lfbk~bankn, lfbk~bankl, v_cvi_vend_link~partner
    INTO TABLE @DATA(lt_lfbk)
    FROM lfbk
   INNER JOIN v_cvi_vend_link
      ON v_cvi_vend_link~lifnr EQ lfbk~lifnr
   WHERE lfbk~lifnr              IN @s_lifnr
     AND v_cvi_vend_link~partner IN @s_partn.

  SELECT knbk~kunnr, knbk~banks, knbk~bvtyp, knbk~bankn, knbk~bankl, v_cvi_cust_link~partner
    INTO TABLE @DATA(lt_knbk)
    FROM knbk
    INNER JOIN v_cvi_cust_link
      ON v_cvi_cust_link~kunnr EQ knbk~kunnr
    WHERE knbk~kunnr              IN @s_kunnr
      AND v_cvi_cust_link~partner IN @s_partn.


  LOOP AT lt_but0bk_k INTO DATA(ls_but0bk_k).

    READ TABLE lt_knbk INTO DATA(ls_knbk) WITH KEY partner = ls_but0bk_k-partner
                                                   kunnr   = ls_but0bk_k-kunnr
                                                   banks   = ls_but0bk_k-banks
                                                   bankl   = ls_but0bk_k-bankl
                                                   bankn   = ls_but0bk_k-bankn
                                                   bvtyp   = ls_but0bk_k-bkvid.

    IF sy-subrc EQ 0.

      CLEAR: ls_alv.
      ls_alv-partner    = ls_but0bk_k-partner.
      ls_alv-bkvid      = ls_but0bk_k-bkvid.
      ls_alv-banks      = ls_but0bk_k-banks.
      ls_alv-bankl      = ls_but0bk_k-bankl.
      ls_alv-bankn      = ls_but0bk_k-bankn.
      ls_alv-bkont      = ls_but0bk_k-bkont.
      ls_alv-kunnr      = ls_knbk-kunnr.
      ls_alv-bvtyp_knbk = ls_knbk-bvtyp.
      ls_alv-bankn_knbk = ls_knbk-bankn.
      APPEND ls_alv TO pc_t_alv.

    ELSE.
      READ TABLE lt_knbk INTO ls_knbk WITH KEY partner = ls_but0bk_k-partner
                                               kunnr   = ls_but0bk_k-kunnr
                                               banks   = ls_but0bk_k-banks
                                               bankl   = ls_but0bk_k-bankl
                                               bvtyp   = ls_but0bk_k-bkvid.

      IF sy-subrc EQ 0.

        CLEAR: ls_alv.
        ls_alv-partner    = ls_but0bk_k-partner.
        ls_alv-bkvid      = ls_but0bk_k-bkvid.
        ls_alv-banks      = ls_but0bk_k-banks.
        ls_alv-bankl      = ls_but0bk_k-bankl.
        ls_alv-bankn      = ls_but0bk_k-bankn.
        ls_alv-bkont      = ls_but0bk_k-bkont.
        ls_alv-kunnr      = ls_knbk-kunnr.
        ls_alv-bvtyp_knbk = ls_knbk-bvtyp.
        ls_alv-bankn_knbk = ls_knbk-bankn.
        APPEND ls_alv TO pc_t_alv.

      ELSE.
        READ TABLE lt_knbk INTO ls_knbk WITH KEY partner = ls_but0bk_k-partner
                                                 kunnr   = ls_but0bk_k-kunnr
                                                 banks   = ls_but0bk_k-banks
                                                 bankl   = ls_but0bk_k-bankl.
        IF sy-subrc EQ 0.

          CLEAR: ls_alv.
          ls_alv-partner    = ls_but0bk_k-partner.
          ls_alv-bkvid      = ls_but0bk_k-bkvid.
          ls_alv-banks      = ls_but0bk_k-banks.
          ls_alv-bankl      = ls_but0bk_k-bankl.
          ls_alv-bankn      = ls_but0bk_k-bankn.
          ls_alv-bkont      = ls_but0bk_k-bkont.
          ls_alv-kunnr      = ls_knbk-kunnr.
          ls_alv-bvtyp_knbk = ls_knbk-bvtyp.
          ls_alv-bankn_knbk = ls_knbk-bankn.
          APPEND ls_alv TO pc_t_alv.

        ENDIF.
      ENDIF.
    ENDIF.

  ENDLOOP.

  LOOP AT lt_but0bk INTO DATA(ls_but0bk).

    READ TABLE lt_lfbk INTO DATA(ls_lfbk) WITH KEY partner = ls_but0bk-partner
                                                   lifnr   = ls_but0bk-lifnr
                                                   banks   = ls_but0bk-banks
                                                   bankl   = ls_but0bk-bankl
                                                   bankn   = ls_but0bk-bankn
                                                   bvtyp   = ls_but0bk-bkvid.
    IF sy-subrc EQ 0.

      CLEAR: ls_alv.
      ls_alv-partner    = ls_but0bk-partner.
      ls_alv-bkvid      = ls_but0bk-bkvid.
      ls_alv-banks      = ls_but0bk-banks.
      ls_alv-bankl      = ls_but0bk-bankl.
      ls_alv-bankn      = ls_but0bk-bankn.
      ls_alv-bkont      = ls_but0bk-bkont.
      ls_alv-lifnr      = ls_lfbk-lifnr.
      ls_alv-bvtyp      = ls_lfbk-bvtyp.
      ls_alv-bankn_lfbk = ls_lfbk-bankn.
      APPEND ls_alv TO pc_t_alv.

    ELSE.

      READ TABLE lt_lfbk INTO ls_lfbk WITH KEY partner = ls_but0bk-partner
                                               lifnr   = ls_but0bk-lifnr
                                               banks   = ls_but0bk-banks
                                               bankl   = ls_but0bk-bankl
                                               bvtyp   = ls_but0bk-bkvid.
      IF sy-subrc EQ 0.

        CLEAR: ls_alv.
        ls_alv-partner    = ls_but0bk-partner.
        ls_alv-bkvid      = ls_but0bk-bkvid.
        ls_alv-banks      = ls_but0bk-banks.
        ls_alv-bankl      = ls_but0bk-bankl.
        ls_alv-bankn      = ls_but0bk-bankn.
        ls_alv-bkont      = ls_but0bk-bkont.
        ls_alv-lifnr      = ls_lfbk-lifnr.
        ls_alv-bvtyp      = ls_lfbk-bvtyp.
        ls_alv-bankn_lfbk = ls_lfbk-bankn.
        APPEND ls_alv TO pc_t_alv.

      ELSE.

        READ TABLE lt_lfbk INTO ls_lfbk WITH KEY partner = ls_but0bk-partner
                                                 lifnr   = ls_but0bk-lifnr
                                                 banks   = ls_but0bk-banks
                                                 bankl   = ls_but0bk-bankl.
        IF sy-subrc EQ 0.

          CLEAR: ls_alv.
          ls_alv-partner    = ls_but0bk-partner.
          ls_alv-bkvid      = ls_but0bk-bkvid.
          ls_alv-banks      = ls_but0bk-banks.
          ls_alv-bankl      = ls_but0bk-bankl.
          ls_alv-bankn      = ls_but0bk-bankn.
          ls_alv-bkont      = ls_but0bk-bkont.
          ls_alv-lifnr      = ls_lfbk-lifnr.
          ls_alv-bvtyp      = ls_lfbk-bvtyp.
          ls_alv-bankn_lfbk = ls_lfbk-bankn.
          APPEND ls_alv TO pc_t_alv.

        ENDIF.

      ENDIF.

    ENDIF.

  ENDLOOP.

  LOOP AT pc_t_alv ASSIGNING FIELD-SYMBOL(<fs_alv>).

    IF <fs_alv>-bkvid NE <fs_alv>-bvtyp AND <fs_alv>-lifnr IS NOT INITIAL AND <fs_alv>-bkvid IS NOT INITIAL.

      IF p_updat IS NOT INITIAL.

        UPDATE lfbk SET   bvtyp = <fs_alv>-bkvid
                    WHERE lifnr EQ <fs_alv>-lifnr      AND
                          banks EQ <fs_alv>-banks      AND
                          bankl EQ <fs_alv>-bankl      AND
                          bankn EQ <fs_alv>-bankn_lfbk.

        IF sy-subrc EQ 0.
          COMMIT WORK.
          <fs_alv>-bvtyp = <fs_alv>-bkvid.
        ELSE.
          ROLLBACK WORK.
        ENDIF.
      ELSE.
        <fs_alv>-bvtyp_dif = abap_true.
      ENDIF.

    ENDIF.

    IF <fs_alv>-bkvid NE <fs_alv>-bvtyp_knbk AND <fs_alv>-kunnr IS NOT INITIAL AND <fs_alv>-bkvid IS NOT INITIAL.

      IF p_updat IS NOT INITIAL.

        UPDATE knbk SET   bvtyp = <fs_alv>-bkvid
                    WHERE kunnr EQ <fs_alv>-kunnr      AND
                          banks EQ <fs_alv>-banks      AND
                          bankl EQ <fs_alv>-bankl      AND
                          bankn EQ <fs_alv>-bankn_knbk.

        IF sy-subrc EQ 0.
          COMMIT WORK.
          <fs_alv>-bvtyp_knbk = <fs_alv>-bkvid.
        ELSE.
          ROLLBACK WORK.
        ENDIF.
      ELSE.
        <fs_alv>-bvtyp_dif_kn = abap_true.
      ENDIF.

    ENDIF.

*    IF <fs_alv>-bankn NE <fs_alv>-bankn_lfbk AND <fs_alv>-lifnr IS NOT INITIAL.
*      <fs_alv>-bankn_dif = abap_true.
*    ENDIF.

*    IF <fs_alv>-bankn NE <fs_alv>-bankn_knbk AND <fs_alv>-kunnr IS NOT INITIAL.
*      <fs_alv>-bankn_dif_kn = abap_true.
*    ENDIF.

  ENDLOOP.

  SORT pc_t_alv BY partner.

ENDFORM.

*---------------------------------------------------------------------*
* Form CREATE_AND_DISPLAY_ALV
*---------------------------------------------------------------------*
FORM create_and_display_alv.

  PERFORM alv_layout.
  PERFORM alv_field_catalog.
  PERFORM alv_display.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  ALV_LAYOUT
*---------------------------------------------------------------------*
FORM alv_layout.

  x_layout-zebra      = 'X'.
  x_layout-sel_mode   = 'A'.
  x_layout-col_opt    = ' '.

ENDFORM.


*---------------------------------------------------------------------*
*      Form  ALV_FIELD_CATALOG
*---------------------------------------------------------------------*
FORM alv_field_catalog.

  CLEAR: t_fieldcat.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING FIELD-SYMBOL(<fs_fieldcat>).
  <fs_fieldcat>-fieldname = 'PARTNER'.
  <fs_fieldcat>-ref_table = 'BUT0BK'.
  <fs_fieldcat>-ref_field = 'PARTNER'.
  <fs_fieldcat>-scrtext_s = 'BUT0BK-PARTNER'.
  <fs_fieldcat>-coltext   = 'BUT0BK-PARTNER'.
  <fs_fieldcat>-seltext   = 'BUT0BK-PARTNER'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BKVID'.
  <fs_fieldcat>-ref_table = 'BUT0BK'.
  <fs_fieldcat>-ref_field = 'BKVID'.
  <fs_fieldcat>-scrtext_s = 'BUT0BK-BKVID'.
  <fs_fieldcat>-coltext   = 'BUT0BK-BKVID'.
  <fs_fieldcat>-seltext   = 'BUT0BK-BKVID'.
  <fs_fieldcat>-emphasize = 'C500'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BANKS'.
  <fs_fieldcat>-ref_table = 'BUT0BK'.
  <fs_fieldcat>-ref_field = 'BANKS'.
  <fs_fieldcat>-scrtext_s = 'BUT0BK-BANKS'.
  <fs_fieldcat>-coltext   = 'BUT0BK-BANKS'.
  <fs_fieldcat>-seltext   = 'BUT0BK-BANKS'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BANKL'.
  <fs_fieldcat>-ref_table = 'BUT0BK'.
  <fs_fieldcat>-ref_field = 'BANKL'.
  <fs_fieldcat>-scrtext_s = 'BUT0BK-BANKL'.
  <fs_fieldcat>-coltext   = 'BUT0BK-BANKL'.
  <fs_fieldcat>-seltext   = 'BUT0BK-BANKL'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BANKN'.
  <fs_fieldcat>-ref_table = 'BUT0BK'.
  <fs_fieldcat>-ref_field = 'BANKN'.
  <fs_fieldcat>-scrtext_s = 'BUT0BK-BANKN'.
  <fs_fieldcat>-coltext   = 'BUT0BK-BANKN'.
  <fs_fieldcat>-seltext   = 'BUT0BK-BANKN'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BKONT'.
  <fs_fieldcat>-ref_table = 'BUT0BK'.
  <fs_fieldcat>-ref_field = 'BKONT'.
  <fs_fieldcat>-scrtext_s = 'BUT0BK-BKONT'.
  <fs_fieldcat>-coltext   = 'BUT0BK-BKONT'.
  <fs_fieldcat>-seltext   = 'BUT0BK-BKONT'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'LIFNR'.
  <fs_fieldcat>-ref_table = 'LFA1'.
  <fs_fieldcat>-ref_field = 'LIFNR'.
  <fs_fieldcat>-scrtext_s = 'V_CVI_VEND_LINK-LIFNR'.
  <fs_fieldcat>-coltext   = 'V_CVI_VEND_LINK-LIFNR'.
  <fs_fieldcat>-seltext   = 'V_CVI_VEND_LINK-LIFNR'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BVTYP'.
  <fs_fieldcat>-ref_table = 'LFBK'.
  <fs_fieldcat>-ref_field = 'BVTYP'.
  <fs_fieldcat>-scrtext_s = 'LFBK-BVTYP'.
  <fs_fieldcat>-coltext   = 'LFBK-BVTYP'.
  <fs_fieldcat>-seltext   = 'LFBK-BVTYP'.
  <fs_fieldcat>-emphasize = 'C500'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BANKN_LFBK'.
  <fs_fieldcat>-ref_table = 'LFBK'.
  <fs_fieldcat>-ref_field = 'BANKN'.
  <fs_fieldcat>-scrtext_s = 'LFBK-BANKN'.
  <fs_fieldcat>-coltext   = 'LFBK-BANKN'.
  <fs_fieldcat>-seltext   = 'LFBK-BANKN'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'BVTYP_DIF'.
  <fs_fieldcat>-outputlen = '25'.
  <fs_fieldcat>-scrtext_s = 'LF_BVTYP_DIF'.
  <fs_fieldcat>-coltext   = 'LF_BVTYP_DIF'.
  <fs_fieldcat>-seltext   = 'LF_BVTYP_DIF'.

*  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
*  <fs_fieldcat>-fieldname = 'BANKN_DIF'.
*  <fs_fieldcat>-outputlen = '25'.
*  <fs_fieldcat>-scrtext_s = 'LF_BANKN_DIF'.
*  <fs_fieldcat>-coltext   = 'LF_BANKN_DIF'.
*  <fs_fieldcat>-seltext   = 'LF_BANKN_DIF'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>.
  <fs_fieldcat>-fieldname = 'KUNNR'.
  <fs_fieldcat>-ref_table = 'KNBK'.
  <fs_fieldcat>-ref_field = 'KUNNR'.
  <fs_fieldcat>-scrtext_s = 'V_CVI_CUST_LINK-KUNNR'.
  <fs_fieldcat>-coltext   = 'V_CVI_CUST_LINK-KUNNR'.
  <fs_fieldcat>-seltext   = 'V_CVI_CUST_LINK-KUNNR'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>. "SAPECC_TO_S4HANA
  <fs_fieldcat>-fieldname = 'BVTYP_KNBK'.
  <fs_fieldcat>-ref_table = 'KNBK'.
  <fs_fieldcat>-ref_field = 'BVTYP'.
  <fs_fieldcat>-scrtext_s = 'KNBK-BVTYP'.
  <fs_fieldcat>-coltext   = 'KNBK-BVTYP'.
  <fs_fieldcat>-seltext   = 'KNBK-BVTYP'.
  <fs_fieldcat>-emphasize = 'C500'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>. "SAPECC_TO_S4HANA
  <fs_fieldcat>-fieldname = 'BANKN_KNBK'.
  <fs_fieldcat>-ref_table = 'KNBK'.
  <fs_fieldcat>-ref_field = 'BANKN'.
  <fs_fieldcat>-scrtext_s = 'KNBK-BANKN'.
  <fs_fieldcat>-coltext   = 'KNBK-BANKN'.
  <fs_fieldcat>-seltext   = 'KNBK-BANKN'.

*  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>. "SAPECC_TO_S4HANA
*  <fs_fieldcat>-fieldname = 'BANKN_DIF_KN'.
*  <fs_fieldcat>-outputlen = '25'.
*  <fs_fieldcat>-scrtext_s = 'KN_BANKN_DIF'.
*  <fs_fieldcat>-coltext   = 'KN_BANKN_DIF'.
*  <fs_fieldcat>-seltext   = 'KN_BANKN_DIF'.

  APPEND INITIAL LINE TO t_fieldcat ASSIGNING <fs_fieldcat>. "SAPECC_TO_S4HANA
  <fs_fieldcat>-fieldname = 'BVTYP_DIF_KN'.
  <fs_fieldcat>-outputlen = '25'.
  <fs_fieldcat>-scrtext_s = 'KN_BVTYP_DIF'.
  <fs_fieldcat>-coltext   = 'KN_BVTYP_DIF'.
  <fs_fieldcat>-seltext   = 'KN_BVTYP_DIF'.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  ALV_DISPLAY
*---------------------------------------------------------------------*
FORM alv_display.

  w_repid = sy-cprog.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program      = w_repid
*     i_callback_pf_status_set = 'STATUS_SET'
      i_callback_user_command = 'USER_COMMAND'
      is_layout_lvc           = x_layout
      i_default               = 'X'
      i_save                  = 'A'
      it_fieldcat_lvc         = t_fieldcat
      is_variant              = g_variant
    TABLES
      t_outtab                = t_alv[]
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  F4_FOR_VARIANT
*---------------------------------------------------------------------*
FORM f4_for_variant.

  g_variant-report = sy-repid.

  CALL FUNCTION 'LVC_VARIANT_F4'
    EXPORTING
      is_variant    = g_variant
      i_save        = w_save
    IMPORTING
      e_exit        = w_exit
      es_variant    = gx_variant
    EXCEPTIONS
      not_found     = 1
      program_error = 2
      OTHERS        = 3.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF w_exit = space.
      p_vari = gx_variant-variant.
    ENDIF.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  PAI_OF_SELECTION_SCREEN
*---------------------------------------------------------------------*
FORM pai_of_selection_screen.

  IF NOT p_vari IS INITIAL.

    gx_variant-report  = sy-repid.
    gx_variant-variant = p_vari.

    CALL FUNCTION 'LVC_VARIANT_EXISTENCE_CHECK'
      EXPORTING
        i_save     = w_save
      CHANGING
        cs_variant = gx_variant.

    g_variant = gx_variant.

  ELSE.

    PERFORM variant_init.

  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*      Form  VARIANT_INIT
*---------------------------------------------------------------------*
FORM variant_init.

  CLEAR gx_variant.

  w_repid           = sy-repid.
  w_save            = 'A'.
  gx_variant-report = w_repid.

  CALL FUNCTION 'LVC_VARIANT_DEFAULT_GET'
    EXPORTING
      i_save        = w_save
    CHANGING
      cs_variant    = gx_variant
    EXCEPTIONS
      wrong_input   = 1
      not_found     = 2
      program_error = 3
      OTHERS        = 4.
  IF sy-subrc = 0.
    p_vari = gx_variant-variant.
  ENDIF.

ENDFORM.


*---------------------------------------------------------------------*
*      Form  user_command
*---------------------------------------------------------------------*
FORM user_command USING l_ucomm     TYPE sy-ucomm
                        l_selfield  TYPE slis_selfield.

  DATA:
    lv_trkorr      TYPE trkorr.


  l_selfield-refresh    = 'X'.
  l_selfield-col_stable = 'X'.
  l_selfield-row_stable = 'X'.

ENDFORM.

**---------------------------------------------------------------------*
**      Form  STATUS_SET
**---------------------------------------------------------------------*
*FORM status_set USING rt_extab TYPE slis_t_extab.
*
*  SET PF-STATUS 'ZSTATUS'.
*
*ENDFORM.
