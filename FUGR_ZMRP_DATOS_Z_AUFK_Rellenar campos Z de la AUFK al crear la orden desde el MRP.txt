FUNCTION zmrp_datos_z_aufk.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_PLANCHAS_ZPMP) TYPE  LABST OPTIONAL
*"     VALUE(I_PLANCHAS_ZPLP) TYPE  LABST OPTIONAL
*"     VALUE(WA_MRP) TYPE  ZSRPP0033
*"     VALUE(I_AUART) TYPE  AUART
*"  EXPORTING
*"     VALUE(E_ZZLGORT) TYPE  ZZLGORT
*"     VALUE(E_ZZDESTCMCR) TYPE  ZZDESTCMCR
*"     VALUE(E_ZZEBELN4) TYPE  ZZEBELN4
*"     VALUE(E_ZZEBELP4) TYPE  ZZEBELP4
*"     VALUE(E_ZZKWMENG) TYPE  ZZKWMENG
*"     VALUE(E_ZZKUNNR4) TYPE  ZZKUNNR4
*"     VALUE(E_ZZFEC_ENTREG4) TYPE  ZZFEC_ENTREG4
*"     VALUE(E_ZZMATVENTA) TYPE  ZZMATVENTA
*"     VALUE(E_ZZAUFNR_EXT) TYPE  ZZAUFNR_EXT
*"----------------------------------------------------------------------
* Función para rellenar los campos z de las órdenes creadas desde el MRP
*"----------------------------------------------------------------------

  DATA: lv_num_planchas_zpmp TYPE menge_d,
        lv_num_planchas_zplp TYPE menge_d.

  DATA: lt_aufk TYPE STANDARD TABLE OF aufk,
        wa_aufk TYPE aufk.

**** Pedido de ventas
  e_zzebeln4 = wa_mrp-vbeln.

**** Posición del pedido
  e_zzebelp4 = wa_mrp-posnr.


**** Cantidad del pedido, Fecha de entrega y Cliente
  CASE wa_mrp-tipo.
    WHEN 'PV'.
      SELECT SINGLE kunnr erdat FROM vbak
        INTO (e_zzkunnr4, e_zzfec_entreg4)
        WHERE vbeln = wa_mrp-vbeln.

      SELECT SINGLE kwmeng FROM vbap
        INTO e_zzkwmeng
        WHERE vbeln = wa_mrp-vbeln AND
              posnr = wa_mrp-posnr.

    WHEN OTHERS.
      SELECT SINGLE lifnr aedat FROM ekko
        INTO (e_zzkunnr4, e_zzfec_entreg4)
        WHERE ebeln =  wa_mrp-vbeln.

* ini 15.02.2018 - cvivo - 46445 Cliente en orden desde pedido traslado
      IF e_zzkunnr4 IS INITIAL.
        SELECT SINGLE zzkunnr4 FROM ekpo
          INTO e_zzkunnr4
          WHERE ebeln EQ wa_mrp-vbeln
            AND ebelp EQ wa_mrp-posnr.
      ENDIF.
* fin 15.02.2018 - cvivo - 46445
      SELECT SINGLE menge FROM ekpo
        INTO e_zzkwmeng
        WHERE ebeln = wa_mrp-vbeln AND
              ebelp = wa_mrp-posnr.
  ENDCASE.

**** Orden ext./man. relacionada: la idea era informar este campo en el momento
**** de la creación de la orden pero todavía no lo tenemos informado en la estructura
**** que recogemos del zmrp (es decir, en <wa_mrp>), por lo que tenemos que informarlo
**** en el momento que estamos visualizando o modificando la orden.
*  IF header_imp-auart = 'ZCO2'. "MANIPULADO
*    header_exp-zzaufnr_ext = <wa_mrp>-orden_zplp.
*  ELSEIF header_imp-auart = 'ZCO1'. "EXTRUSIÓN
*    header_exp-zzaufnr_ext = <wa_mrp>-orden_zpmp.
*  ENDIF.

**** La fecha en la orden del componente (clase de orden ZCO1), sucede lo mismo.


**** Producto de venta
  e_zzmatventa = wa_mrp-zpmp.

*"----------------------------------------------------------------------
**** Almacén de destino y Destino
* Encontramos dos casuísticas:
*   1. Si sólo se genera una orden ZC01, dado que la necesidad viene de un ZPLP:
*      se aplicará la lógica que se describe más abajo.
*   2. Si se generan dos órdenes:
*        - En la primera (ZC01): AUFK–ZLGORT = '1300' y AUFK–ZZDESTCMCR = 'C'.
*        - En la segunda se aplicará la lógica descrita a continuación.
* Lógica orden final:
*  Si las necesidades vienen de un pedido de venta: AUFK–ZZDESTCMCR = 'C' y AUFK–ZLGORT = '1301'
*  Si vienen de un pedido de traslado: mirar en tabla ZTPP0015 para informar AUFK–ZZDESTCMCR.
*"----------------------------------------------------------------------



* obtenemos la cantidad ZPMP = cantidad pedido - cantidad de obsoletos seleccionados
  lv_num_planchas_zpmp = ceil( wa_mrp-wmeng - i_planchas_zpmp ).

* obtenemos la cantidad ZPLP = cantidad BOM - cantidad de obsoletos seleccionados
  lv_num_planchas_zplp = ceil( wa_mrp-cant_zplp - i_planchas_zplp ).

  IF wa_mrp-zpmp IS NOT INITIAL AND wa_mrp-zplp IS NOT INITIAL.

    IF i_auart = 'ZC02'.
      CASE wa_mrp-tipo.
        WHEN 'PV'.
          e_zzlgort = '1301'.
          e_zzdestcmcr = 'C'.
        WHEN OTHERS.
          e_zzlgort = wa_mrp-lgort.

          SELECT SINGLE destino FROM ztpp0015
            INTO e_zzdestcmcr
            WHERE werks = wa_mrp-werks AND
                  lgort = wa_mrp-lgort.
      ENDCASE.
    ELSEIF i_auart = 'ZC01'.
      e_zzlgort = '1300'.
      e_zzdestcmcr = 'C'.
    ENDIF.

  ELSEIF wa_mrp-zpmp IS NOT INITIAL AND wa_mrp-zplp IS INITIAL.
    CASE wa_mrp-tipo.
      WHEN 'PV'.
        e_zzlgort = '1301'.
        e_zzdestcmcr = 'C'.
      WHEN OTHERS.
        e_zzlgort = wa_mrp-lgort.

        SELECT SINGLE destino FROM ztpp0015
          INTO e_zzdestcmcr
          WHERE werks = wa_mrp-werks AND
                lgort = wa_mrp-lgort.
    ENDCASE.
  ENDIF.

*  IF wa_mrp-obsoletos_zpmp = ' ' AND wa_mrp-obsoletos_zplp = ''.
**   Crear orden del ZPMP y Crea orden del ZPLP.
*    IF wa_mrp-zpmp IS NOT INITIAL AND wa_mrp-zplp IS NOT INITIAL.
*      IF i_auart = 'ZC02'.
*        CASE wa_mrp-tipo.
*          WHEN 'PV'.
*            e_zzlgort = '1301'.
*            e_zzdestcmcr = 'C'.
*          WHEN OTHERS.
*            e_zzlgort = wa_mrp-lgort.
*
*            SELECT SINGLE destino FROM ztpp0015
*              INTO e_zzdestcmcr
*              WHERE werks = wa_mrp-werks AND
*                    lgort = wa_mrp-lgort.
*        ENDCASE.
*      ENDIF.
*
*      IF i_auart = 'ZC01'.
*        e_zzlgort = '1300'.
*        e_zzdestcmcr = 'C'.
*      ENDIF.
*    ELSEIF wa_mrp-zpmp IS NOT INITIAL AND wa_mrp-zplp IS INITIAL.
*      CASE wa_mrp-tipo.
*        WHEN 'PV'.
*          e_zzlgort = '1301'.
*          e_zzdestcmcr = 'C'.
*        WHEN OTHERS.
*          e_zzlgort = wa_mrp-lgort.
*
*          SELECT SINGLE destino FROM ztpp0015
*            INTO e_zzdestcmcr
*            WHERE werks = wa_mrp-werks AND
*                  lgort = wa_mrp-lgort.
*      ENDCASE.
*    ENDIF.
*
*  ENDIF.
*
*  IF wa_mrp-obsoletos_zpmp = 'X' AND wa_mrp-obsoletos_zplp = ''.
*    IF wa_mrp-wmeng = lv_num_planchas_zpmp OR wa_mrp-wmeng < lv_num_planchas_zpmp.
**     No crea orden
*    ELSEIF wa_mrp-wmeng > lv_num_planchas_zpmp.
**    Crea orden del ZPMP y Crea orden del ZPLP.
*      IF i_auart = 'ZC02'.
*        CASE wa_mrp-tipo.
*          WHEN 'PV'.
*            e_zzlgort = '1301'.
*            e_zzdestcmcr = 'C'.
*          WHEN OTHERS.
*            e_zzlgort = wa_mrp-lgort.
*
*            SELECT SINGLE destino FROM ztpp0015
*              INTO e_zzdestcmcr
*              WHERE werks = wa_mrp-werks AND
*                    lgort = wa_mrp-lgort.
*        ENDCASE.
*      ENDIF.
*
*      IF i_auart = 'ZC01'.
*        e_zzlgort = '1300'.
*        e_zzdestcmcr = 'C'.
*      ENDIF.
*    ENDIF.
*  ENDIF.
*
*  IF wa_mrp-obsoletos_zpmp = '' AND wa_mrp-obsoletos_zplp = 'X'.
*    IF wa_mrp-cant_zplp = lv_num_planchas_zplp OR wa_mrp-cant_zplp < lv_num_planchas_zplp .
**     No crea orden
*
*    ELSEIF wa_mrp-cant_zplp > lv_num_planchas_zplp.
**     Crea orden del ZPlP y Crea orden del ZPMP.
*      IF i_auart = 'ZC02'.
*        CASE wa_mrp-tipo.
*          WHEN 'PV'.
*            e_zzlgort = '1301'.
*            e_zzdestcmcr = 'C'.
*          WHEN OTHERS.
*            e_zzlgort = wa_mrp-lgort.
*
*            SELECT SINGLE destino FROM ztpp0015
*              INTO e_zzdestcmcr
*              WHERE werks = wa_mrp-werks AND
*                    lgort = wa_mrp-lgort.
*        ENDCASE.
*      ENDIF.
*
*      IF i_auart = 'ZC01'.
*        e_zzlgort = '1300'.
*        e_zzdestcmcr = 'C'.
*      ENDIF.
*    ENDIF.
*  ENDIF.
*
*  IF wa_mrp-obsoletos_zpmp = 'X' AND wa_mrp-obsoletos_zplp = 'X'.
*    IF wa_mrp-wmeng = lv_num_planchas_zpmp OR wa_mrp-wmeng < lv_num_planchas_zpmp.
**     No crea orden
*
*    ELSEIF wa_mrp-wmeng > lv_num_planchas_zpmp.
**     Crea orden del ZPMP Y luego decide el ZLP
*      IF i_auart = 'ZC02'.
*        CASE wa_mrp-tipo.
*          WHEN 'PV'.
*            e_zzlgort = '1301'.
*            e_zzdestcmcr = 'C'.
*          WHEN OTHERS.
*            e_zzlgort = wa_mrp-lgort.
*
*            SELECT SINGLE destino FROM ztpp0015
*              INTO e_zzdestcmcr
*              WHERE werks = wa_mrp-werks AND
*                    lgort = wa_mrp-lgort.
*        ENDCASE.
*      ENDIF.
*
*
*      IF wa_mrp-cant_zplp = lv_num_planchas_zplp OR wa_mrp-cant_zplp < lv_num_planchas_zplp .
**       No crea orden
*
*      ELSEIF wa_mrp-cant_zplp > lv_num_planchas_zplp.
**      Crea orden del ZPLP .
*        IF i_auart = 'ZC01'.
*          e_zzlgort = '1300'.
*          e_zzdestcmcr = 'C'.
*        ENDIF.
*      ENDIF.
*    ENDIF.
*  ENDIF.



ENDFUNCTION.
