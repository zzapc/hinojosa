*----------------------------------------------------------------------*
*   INCLUDE J_3RMOBVEDF06                                              *
*&---------------------------------------------------------------------*
*&      Form  QUANTITY_COST_TABLES_FILLING
*&---------------------------------------------------------------------*
form quantity_cost_tables_filling
    tables
        p_listmat         type tt_listmat
    using p_bukrs         type bukrs
          pt_mard_mara    type tt_mard_mara
          pt_ebew         type tt_ebew
          pt_qbew         type tt_qbew
          pt_mbew         type tt_mbew
          pt_msku         type tt_msku
          pt_mska         type tt_mska
          pt_mslb         type tt_mslb
          pt_mspr         type tt_mspr
          pt_select_lgort type tt_select_lgort
          pt_select_charg type tt_select_charg
          pt_skb1         type tt_skb1
          pt_partite_cost type tt_partcost
          pt_charg        type tt_mcha_mchb
          pt_mcha         type tt_mcha                      "#EC *
          pt_ekpo         type tt_ekpo
          pt_ekkn         type tt_ekkn.

  data:
      l_prcntcur   type i, " for scale
      l_prcntall   type i, " for scale
      l_prcntshw   type i, " for scale
      l_prcnttmp   type i, " for scale
      l_rec        type sytabix,
      l_notrights  type type_1c,
      lnothing     type type_1c,
      l_tblsb      type type_tblsb,
      l_werks           type werks_d,
      l_werks_not_right type werks_d,
      l_matnr           type matnr,
      l_bklas           type bklas,
      l_bukrs           type bukrs,
      l_waers           type waers,
      l_bwmod           type bwmod,
      l_spras           type spras,
      l_ktopl           type ktopl,
      l_saknr           type saknr,
      l_menge           type menge_d,
      lw_mard_mara type type_mard_mara,
      lv_index     like sy-tabix,                              "1665666
      lt_werk_class_saknr type tt_werk_class_saknr.

  field-symbols: <lt_xbew> type tt_mbew,
                 <fs_mbew> type type_xbew,                     "1665666
                 <fs_mcha> type type_mcha.                     "1665666

  describe table pt_mard_mara lines l_prcntall.

  l_tblsb = 'XXXX'.
* get list materials and current quantity
  loop at pt_mard_mara into lw_mard_mara.
    add 1 to l_prcntcur.
    l_matnr = lw_mard_mara-matnr.

    if not l_werks is initial and
        l_werks_not_right eq l_werks.
      continue.
    endif.
* material list for selected storage processing only
    if not so_lgort[] is initial.
      read table pt_select_lgort transporting no fields
          with key matnr = lw_mard_mara-matnr
                   werks = lw_mard_mara-werks
          binary search.
*     recording a step 'Preparing material list'               "1417445
      if not sy-subrc is initial.
        if g_bkgrd is initial.
          check pa_lock is initial.                            "1417445
          check gv_wan  is initial.                            "1417445
          perform run_scale
              using l_prcntall l_prcntcur text-010
              changing l_prcntshw l_prcnttmp.
        endif.
        continue.
      endif.
    endif.

    clear l_notrights.

    if l_werks ne lw_mard_mara-werks.
      clear l_bklas.
      l_werks = lw_mard_mara-werks.
* test user's right in the werk
      authority-check object 'M_MATE_WRK'
          id 'ACTVT' field '03'
          id 'WERKS' field l_werks.
      if not sy-subrc is initial.
        message e016 with l_werks.
        l_werks_not_right = l_werks.
        l_notrights = gc_true.
        continue.
      endif.
* get current plant valuation level  -  xbwkey
* get plant CC                       -  bukrs
* get valuation grouping code        -  XBWMOD
* get language                       -  xspras
* get currency                       -  xwaers
* get chart of accounts              -  xktopl
      perform werk_lesen
          using lw_mard_mara-bwkey
          changing l_bukrs l_bwmod
                   l_waers l_spras l_ktopl.
* test user's right in the CC
      authority-check
          object 'F_BKPF_BUK'
              id 'ACTVT' field '03'
              id 'BUKRS' field l_bukrs.
      if not sy-subrc is initial.
        message e017 with l_bukrs.
        l_notrights = gc_true.
        l_werks_not_right = l_werks.
        continue.
      endif.
    endif.

* check bukrs in list if selected
    if not p_bukrs is initial.
      check l_bukrs = p_bukrs.
    endif.

    clear l_werks_not_right.

    if ( lw_mard_mara-sobkz is initial
        or lw_mard_mara-sobkz = gc_spec_v
        or lw_mard_mara-sobkz = gc_spec_o
        or lw_mard_mara-sobkz = gc_spec_w )
        and l_tblsb ne gc_value_mbew.
      assign  pt_mbew to <lt_xbew>.
      l_tblsb = gc_value_mbew.
    elseif lw_mard_mara-sobkz = gc_spec_e
        and l_tblsb ne gc_value_ebew.
      assign  pt_ebew to <lt_xbew>.
      l_tblsb = gc_value_ebew.
    elseif lw_mard_mara-sobkz = gc_spec_q
        and l_tblsb ne gc_value_qbew.
      assign  pt_qbew to <lt_xbew>.
      l_tblsb = gc_value_qbew.
    endif.

* exclude batch processing                                     "1114541
    if pa_batch is initial.                                    "1114541
      lw_mard_mara-xchar_del = lw_mard_mara-xchar.             "1114541
      clear lw_mard_mara-xchar.                                "1114541
    endif.                                                     "1114541

* material without batch maintenance
      if lw_mard_mara-xchar is initial.

        " cycle valuation level internal table
        read table <lt_xbew> with key                          "1665666 start
          matnr = lw_mard_mara-matnr
          bwkey = lw_mard_mara-bwkey
          transporting no fields.
        if sy-subrc = 0.
          lv_index = sy-tabix.
          loop at <lt_xbew> assigning <fs_mbew> from lv_index.
            if <fs_mbew>-matnr ne lw_mard_mara-matnr or
               <fs_mbew>-bwkey ne lw_mard_mara-bwkey.
              exit.
            endif.

* bwtty define's split inventory valuation or common inventory valuation
            check ( <fs_mbew>-bwtty is initial or
                ( not <fs_mbew>-bwtty is initial
                    and not <fs_mbew>-bwtar is initial ) ).

            if lw_mard_mara-sobkz = gc_spec_e.
              check lw_mard_mara-vbeln eq <fs_mbew>-vbeln
                   and lw_mard_mara-posnr eq <fs_mbew>-posnr.
            endif.
            if lw_mard_mara-sobkz = gc_spec_q.
              check lw_mard_mara-pspnr eq <fs_mbew>-pspnr.
            endif.                                             "1665666 end

            perform get_saknr
                  using
                       lw_mard_mara-werks
                       <fs_mbew>-bklas                         "1665666
                       l_ktopl
                       l_bwmod
                  changing
                       l_bklas
                       l_saknr
                       lt_werk_class_saknr.

            if not so_saknr[] is initial.
        read table pt_skb1 transporting no fields
            with key bukrs = l_bukrs
                     saknr = l_saknr
        binary search.
        check sy-subrc is initial.
            endif.

            perform process_quantity_cost_filling
              using
                    lw_mard_mara
                    sp_charg
                    <fs_mbew>                                  "1665666
                    l_bukrs
                    l_waers
                    l_saknr
                    l_bwmod
                    l_ktopl
                    l_bklas
                    l_tblsb
                    l_notrights
                  pt_mcha                                      "1156945
                  pt_mska
                  pt_mslb
                  pt_mspr
                  pt_msku
                  pt_ekpo
                  pt_ekkn
                    pt_select_charg
                    pt_charg
              changing
                    p_listmat[]
                    pt_partite_cost.
          endloop.
        endif.                                                 "1665666
      else.
* material with batch maintenance
        read table pt_mcha with key                            "1665666 start
          matnr = lw_mard_mara-matnr
          werks = lw_mard_mara-werks
          transporting no fields.
        if sy-subrc = 0.
          lv_index = sy-tabix.
          loop at pt_mcha assigning <fs_mcha> from lv_index.
            if <fs_mcha>-matnr ne lw_mard_mara-matnr or
               <fs_mcha>-werks ne lw_mard_mara-werks.
              exit.
            endif.                                             "1665666 end

*         skip added batches with old valuation type as        "1247791
*         they should not influence quantity/cost calculation  "1247791
          Check <fs_mcha>-changed ne 'O'.                      "1665666

          " cycle valuation level internal table
          read table <lt_xbew> with key                        "1665666 start
            matnr = lw_mard_mara-matnr
            bwkey = lw_mard_mara-bwkey
            bwtar = <fs_mcha>-bwtar
            transporting no fields.
          if sy-subrc = 0.
            lv_index = sy-tabix.
            loop at <lt_xbew> assigning <fs_mbew> from lv_index.
              if <fs_mbew>-matnr ne lw_mard_mara-matnr or
                 <fs_mbew>-bwkey ne lw_mard_mara-bwkey or
                 <fs_mbew>-bwtar ne <fs_mcha>-bwtar.
                exit.
              endif.

* bwtty define's split inventory valuation or common inventory valuation
              check ( <fs_mbew>-bwtty is initial or
                  ( not <fs_mbew>-bwtty is initial
                      and not <fs_mbew>-bwtar is initial ) ).

              if lw_mard_mara-sobkz = gc_spec_e.
                check lw_mard_mara-vbeln eq <fs_mbew>-vbeln
                     and lw_mard_mara-posnr eq <fs_mbew>-posnr.
              endif.
              if lw_mard_mara-sobkz = gc_spec_q.
                check lw_mard_mara-pspnr eq <fs_mbew>-pspnr.
              endif.                                           "1665666 end

              perform get_saknr
                using
                     lw_mard_mara-werks
                     <fs_mbew>-bklas                           "1665666
                     l_ktopl
                     l_bwmod
                changing
                     l_bklas
                     l_saknr
                     lt_werk_class_saknr.

              if not so_saknr[] is initial.
                read table pt_skb1 transporting no fields
                    with key bukrs = l_bukrs
                             saknr = l_saknr
                binary search.
* skip this check for batches with new valuation type. We need "1247791
* to have this line in listmat for correct pocessing of G/L account
* restriction even though G/L account is different and not selected
                If <fs_mcha>-changed ne 'N'.                   "1665666
                  check sy-subrc is initial.
                Endif.                                         "1247791
              endif.

              perform process_quantity_cost_filling
                    using
                          lw_mard_mara
                          <fs_mcha>-charg                      "1665666
                          <fs_mbew>                            "1665666
                          l_bukrs
                          l_waers
                          l_saknr
                          l_bwmod
                          l_ktopl
                          l_bklas
                          l_tblsb
                          l_notrights
                    pt_mcha                                    "1156945
                    pt_mska
                    pt_mslb
                    pt_mspr
                    pt_msku
                    pt_ekpo
                    pt_ekkn
                          pt_select_charg
                          pt_charg
                    changing
                          p_listmat[]
                          pt_partite_cost.
            endloop.
          endif.                                               "1665666
        endloop.
        endif.                                                 "1665666
      endif.

*   recording a step 'Preparing material list'                 "1417445
    if g_bkgrd is initial.
      check pa_lock is initial.                                "1417445
      check gv_wan  is initial.                                "1417445
      perform run_scale
          using l_prcntall l_prcntcur text-010
          changing l_prcntshw l_prcnttmp.
    endif.

  endloop.

endform.                    " QUANTITY_COST_TABLES_FILLING
*&---------------------------------------------------------------------*
*&      Form  run_scale
*&---------------------------------------------------------------------*
form run_scale
    using p_percentall type i
          p_percentcur type i
          p_text       type type_text70
    changing p_percentshw type i
             p_percenttmp type i.

* scale step 10 percent                                        "1417445
  p_percenttmp = ( ( p_percentcur * 100 / p_percentall ) / 10 ) * 10.
  if p_percentshw ne p_percenttmp.
    p_percentshw = p_percenttmp.
    if p_percentshw <= 100.
      call function 'SAPGUI_PROGRESS_INDICATOR'
        exporting
          percentage = p_percentshw
          text       = p_text.
    endif.
  endif.

endform.                    " RUN_SCALE
*&---------------------------------------------------------------------*
*&      Form  werk_lesen
*&---------------------------------------------------------------------*
form werk_lesen
    using
             p_xbwkey  type bwkey
    changing p_bukrs   type bukrs
             p_xbwmod  type bwmod
             p_xwaers  type waers
             p_spras   type spras
             p_xktopl  type ktopl.

  p_bukrs   = p_xbwmod = p_xwaers = p_spras = p_xktopl = ''.

  select single * from t001k where bwkey = p_xbwkey.           "1666710 start
  if sy-subrc = 0.
    select single * from t001 where bukrs = t001k-bukrs.
    check sy-subrc = 0.
    p_bukrs  = t001k-bukrs.
    p_xbwmod = t001k-bwmod.
    p_xwaers = t001-waers.
    p_spras  = t001-spras.
    p_xktopl = t001-ktopl.
  endif.                                                       "1666710 end

endform.                    "werk_lesen
*&---------------------------------------------------------------------*
*&      Form  link_field_filling
*&---------------------------------------------------------------------*
form link_field_filling
    using pp_sobkz type sobkz
          pp_matnr type matnr
          pp_bwtar type bwtar_d
          pp_werks type werks_d
          pp_lgort type lgort_d
          pp_charg type charg_d
          pp_sortl type partid
          pp_projk type ps_psp_pnr
          pp_vbel2 type vbeln_va
          pp_posn2 type posnr_va
    changing
          p_linkk type j_3rmanylink
          p_field_link type type_link.

  if pp_sobkz is initial.
    clear p_linkk.
  else.
    perform linkk_filling
        using pp_sobkz
              pp_vbel2
              pp_posn2
              pp_projk
              pp_sortl
        changing p_linkk.
  endif.

  perform key_filling
      using pp_sobkz
            pp_matnr
            pp_bwtar
            pp_werks
            pp_lgort
            pp_charg
            pp_sortl
            pp_projk
            pp_vbel2
            pp_posn2
      changing
            p_field_link.


endform.                    " link_field_filling
*&---------------------------------------------------------------------*
*&      Form  linkk_filling
*&---------------------------------------------------------------------*
form linkk_filling
    using ppp_sobkz type sobkz
          ppp_vbel2 type vbeln
          ppp_posn2 type posnr
          ppp_projk type ps_posnr
          ppp_sortl type kunnr
    changing pp_linkk type j_3rmanylink.

  case ppp_sobkz.
    when gc_spec_e.
      concatenate ppp_vbel2 ppp_posn2
          into pp_linkk
          separated by gc_divid.
    when gc_spec_q.
      write ppp_projk to pp_linkk.                          "#EC *
    when gc_spec_o.
      pp_linkk = ppp_sortl.
    when gc_spec_w.
      pp_linkk = ppp_sortl.
    when gc_spec_v.
      pp_linkk = ppp_sortl.
    when others.
      clear pp_linkk.
  endcase.

endform.                    " linkk_filling
*&---------------------------------------------------------------------*
*&      Form  key_filling
*&---------------------------------------------------------------------*
form key_filling
  using ppp_sobkz type sobkz
        ppp_matnr type matnr
        ppp_bwtar type bwtar_d
        ppp_werks type werks_d
        ppp_lgort type lgort_d
        ppp_charg type charg_d
        ppp_sortl type partid
        ppp_projk type ps_psp_pnr
        ppp_vbel2 type vbeln_va
        ppp_posn2 type posnr_va
  changing pp_field_link type type_link.

  data:
      l_pspnr_n(16) type n,
      l_pspnr_c(16) type c,
      l_matnr_c(18) type c,
      l_matnr(18)   type c.

  l_matnr_c = ppp_matnr.
  write l_matnr_c to l_matnr right-justified.

  case ppp_sobkz.
    when gc_spec_e.
      concatenate
          l_matnr ppp_bwtar
          ppp_werks ppp_lgort
          ppp_charg ppp_sobkz
          ppp_vbel2 ppp_posn2
          into pp_field_link.
    when gc_spec_q.
      l_pspnr_n = ppp_projk.
      l_pspnr_c = l_pspnr_n.
      concatenate
          l_matnr ppp_bwtar
          ppp_werks ppp_lgort
          ppp_charg ppp_sobkz
          l_pspnr_c
          into pp_field_link.
    when gc_spec_o.
      concatenate
          l_matnr ppp_bwtar
          ppp_werks ppp_lgort
          ppp_charg ppp_sobkz
          ppp_sortl
          into pp_field_link.
    when gc_spec_w.
      concatenate
          l_matnr ppp_bwtar
          ppp_werks ppp_lgort
          ppp_charg ppp_sobkz
          ppp_sortl
          into pp_field_link.
    when gc_spec_v.
      concatenate
          l_matnr ppp_bwtar
          ppp_werks ppp_lgort
          ppp_charg ppp_sobkz
          ppp_sortl
          into pp_field_link.
    when others.
      concatenate
          l_matnr ppp_bwtar
          ppp_werks ppp_lgort
          ppp_charg ppp_sobkz
          ppp_sortl
          into pp_field_link.
  endcase.


endform.                    " key_filling
*&---------------------------------------------------------------------*
*&      Form  value_table_check_update
*&---------------------------------------------------------------------*
form value_table_check_update
    using p_sobkz type sobkz
          pw_mbew type type_xbew
          p_werks type werks_d
          p_tblsb type type_tblsb
          p_linkk type j_3rmanylink
    changing ppt_partite_cost type tt_partcost.

  data: lw_partite_cost type type_cost.

* looking-for split inventory valuation internal table
  if p_sobkz = gc_spec_q or
      p_sobkz = gc_spec_e.
    read table ppt_partite_cost into lw_partite_cost
        with key matnr = pw_mbew-matnr
                 bwkey = pw_mbew-bwkey
                 bwtar = pw_mbew-bwtar
                 bwtty = pw_mbew-bwtty
                 werks = p_werks
                 tblsb = p_tblsb
                 linkk = p_linkk
        binary search.
  else.
    read table ppt_partite_cost into lw_partite_cost
        with key matnr = pw_mbew-matnr
                 bwkey = pw_mbew-bwkey
                 bwtar = pw_mbew-bwtar
                 bwtty = pw_mbew-bwtty
                 werks = p_werks
                 tblsb = p_tblsb
        binary search.
  endif.

  if not sy-subrc is initial.
*add a record split inventory valuation into internal table
    clear lw_partite_cost.
    lw_partite_cost-matnr = pw_mbew-matnr.
    lw_partite_cost-bwkey = pw_mbew-bwkey.
    lw_partite_cost-bwtar = pw_mbew-bwtar.
    lw_partite_cost-bwtty = pw_mbew-bwtty.
    lw_partite_cost-kaln1 = pw_mbew-kaln1.
    lw_partite_cost-werks = p_werks.
    lw_partite_cost-peinh = pw_mbew-peinh.
    lw_partite_cost-tblsb = p_tblsb.

    if p_sobkz = gc_spec_q or p_sobkz = gc_spec_e .
      lw_partite_cost-sobkz = p_sobkz.
      lw_partite_cost-linkk = p_linkk.

      lw_partite_cost-vbeln = pw_mbew-vbeln.
      lw_partite_cost-posnr = pw_mbew-posnr.
      lw_partite_cost-pspnr = pw_mbew-pspnr.
    else.
      clear lw_partite_cost-linkk.
    endif.
* valuated stock full value
*    lw_partite_cost-salkb = lw_partite_cost-salke =
    lw_partite_cost-salk3
    = pw_mbew-salk3.
* valuated stock full quantity
*    lw_partite_cost-lbkub = lw_partite_cost-lbkue =
    lw_partite_cost-lbkum
    = pw_mbew-lbkum.
    insert lw_partite_cost into table ppt_partite_cost.
  endif.

endform.                    " value_table_check_update
form get_saknr
      using
           p_werks type werks_d
           p_bklas type bklas
           p_ktopl type ktopl
           p_bwmod type bwmod
      changing
           p_lbklas type bklas
           p_saknr type saknr
           pt_werk_class_saknr type tt_werk_class_saknr.
 data:
       lw_werk_class_saknr type type_werk_class_saknr.

  if p_bklas <> p_lbklas.
    p_lbklas = p_bklas.
    read table pt_werk_class_saknr into lw_werk_class_saknr
         with key werks = p_werks
                  bklas = p_bklas.
    if sy-subrc is initial.
      p_saknr = lw_werk_class_saknr-saknr.
    else.
      perform t030_lesen
            using p_bklas p_ktopl p_bwmod
            changing p_saknr.
      lw_werk_class_saknr-werks = p_werks.
      lw_werk_class_saknr-bklas = p_bklas.
      lw_werk_class_saknr-saknr = p_saknr.
      insert lw_werk_class_saknr into table pt_werk_class_saknr.
    endif.
  endif.
endform.

form process_quantity_cost_filling
      using
            pw_mard_mara type type_mard_mara
            p_charg type charg_d
            pw_mbew type type_xbew
            p_bukrs type bukrs
            p_waers type waers
            p_saknr type saknr
            p_bwmod type bwmod
            p_ktopl type ktopl
            p_bklas type bklas
            p_tblsb type type_tblsb
            p_notrights type type_1c
            pt_mcha       type tt_mcha                         "1156945
            pt_mska       type tt_mska
            pt_mslb       type tt_mslb
            pt_mspr       type tt_mspr
            pt_msku       type tt_msku
            pt_ekpo       type tt_ekpo
            pt_ekkn       type tt_ekkn
            pt_select_charg type tt_select_charg
            pt_charg  type tt_mcha_mchb
      changing
            p_listmat         type tt_listmat
            pt_partite_cost type tt_partcost.

data:
      lw_listmat type type_listmat,
      l_menge type menge_d,
      l_no_stock    type type_1c.

* material list for selected batch processing only             "1665666
        if not so_charg[] is initial.
          read table pt_select_charg transporting no fields
              with key matnr = pw_mard_mara-matnr
                       werks = pw_mard_mara-werks
              binary search.
          if not sy-subrc is initial.
            return.
          endif.
        endif.

* getting current stock value                                  "1665666
        perform get_stock_on_bwtar
            using pw_mard_mara
                  pw_mbew
                  pt_charg
                  pt_mska
                  pt_mslb
                  pt_mspr
                  pt_msku
                  pt_ekpo
                  pt_ekkn
                  p_charg
                  pt_mcha                                      "1156945
            changing l_menge l_no_stock.

        check l_no_stock is initial.

        if pw_mard_mara-sobkz is initial.                      "1665666 start
          clear lw_listmat-linkk.
        else.
          perform linkk_filling
              using pw_mard_mara-sobkz
                    pw_mard_mara-vbeln
                    pw_mard_mara-posnr
                    pw_mard_mara-pspnr
                    pw_mard_mara-sortl
              changing lw_listmat-linkk.
        endif.

        perform value_table_check_update
            using pw_mard_mara-sobkz
                  pw_mbew
                  pw_mard_mara-werks
                  p_tblsb
                  lw_listmat-linkk
            changing pt_partite_cost.

        perform key_filling
            using pw_mard_mara-sobkz
                  pw_mard_mara-matnr
                  pw_mbew-bwtar
                  pw_mard_mara-werks
                  pw_mard_mara-lgort
                  p_charg
                  pw_mard_mara-sortl
                  pw_mard_mara-pspnr
                  pw_mard_mara-vbeln
                  pw_mard_mara-posnr
            changing
                  lw_listmat-field_link.                       "1665666 end

        if pw_mard_mara-lgort ne gc_str_phantom
            or ( pw_mard_mara-lgort eq gc_str_phantom
               and pw_mard_mara-sobkz eq gc_spec_w )
            or ( pw_mard_mara-lgort eq gc_str_phantom
               and pw_mard_mara-sobkz eq gc_spec_o )
            or ( pw_mard_mara-lgort eq gc_str_phantom
               and pw_mard_mara-sobkz eq gc_spec_v )
            or ( pw_mard_mara-lgort eq gc_str_phantom
               and pw_mard_mara-sobkz is initial )
            or ( pw_mard_mara-lgort eq gc_str_phantom
               and not l_menge is initial ).

          lw_listmat-notrights = p_notrights.
          lw_listmat-xmatnr = pw_mard_mara-matnr.
          lw_listmat-bismt  = pw_mard_mara-bismt.
          lw_listmat-werk   = pw_mard_mara-werks.
          lw_listmat-lgort  = pw_mard_mara-lgort.
          lw_listmat-charg  = p_charg.
          lw_listmat-sobkz  = pw_mard_mara-sobkz.
          lw_listmat-bwkey  = pw_mard_mara-bwkey.
          lw_listmat-ymeins = pw_mard_mara-meins.
          lw_listmat-maktx  = pw_mard_mara-maktx.
          lw_listmat-bklas  = pw_mbew-bklas.
          lw_listmat-bwtar  = pw_mbew-bwtar.
          lw_listmat-waers  = p_waers.
          lw_listmat-xsaknr = p_saknr.
          lw_listmat-bwtty  = pw_mbew-bwtty.
          lw_listmat-ybukrs = p_bukrs.
          lw_listmat-bwmod  = p_bwmod.
          lw_listmat-ktopl  = p_ktopl.
          lw_listmat-tblsb  = p_tblsb.
          lw_listmat-vprsv = pw_mbew-vprsv.
          lw_listmat-stprs = pw_mbew-stprs.
          lw_listmat-peinh = pw_mbew-peinh.                    "1270601
          lw_listmat-pspnr = pw_mard_mara-pspnr.
          lw_listmat-vbeln = pw_mard_mara-vbeln.
          lw_listmat-posnr = pw_mard_mara-posnr.
          lw_listmat-sortl = pw_mard_mara-sortl.

          lw_listmat-ekgrp = pw_mard_mara-ekgrp.
          lw_listmat-mtart = pw_mard_mara-mtart.
          lw_listmat-matkl = pw_mard_mara-matkl.

*                lw_listmat-endremn = lw_listmat-begremn =
          lw_listmat-lbkum = l_menge.
          append lw_listmat to p_listmat.
        endif.
endform.
