*&---------------------------------------------------------------------*
*& Report ZVCXI_XCE_SD_TOOL_ORDER
*&---------------------------------------------------------------------*
*& This report creates a Sales Order for the Tools used by a Finished
*& Goods of the selecte Sales Orders.
*&---------------------------------------------------------------------*
report ZVCXI_XCE_SD_TOOL_ORDER.

data: GF_VBELN type VBELN,
      GF_MATNR type MATNR,
      GF_ERDAT type ERDAT.
data: GR_MSG    type ref to /VCXI/CL_CKXM_MESSAGE,
      GR_CX_CKX type ref to /VCXI/CX_CKX.


selection-screen begin of block SEL with frame.
  select-options: SO_VBELN for GF_VBELN,
                  SO_MATNR for GF_MATNR,
                  SO_ERDAT for GF_ERDAT.
selection-screen end of block SEL.

parameters: PA_AUART type AUART obligatory.

***--------------------------------------------------------------------------------------
*** S T A R T - O F - S E L E C T I O N
***--------------------------------------------------------------------------------------
start-of-selection.

  try.
      format reset.

***   Select Sales Orders
      select VBAP~VBELN, VBAP~POSNR, VBAP~MATNR
             into table @data(GT_VBAP)
             from VBAP
            inner join VBAK
              on  VBAK~VBELN = VBAP~VBELN
            where VBAP~VBELN in @SO_VBELN
             and  VBAP~MATNR in @SO_MATNR
             and  VBAP~ERDAT in @SO_ERDAT
             and  VBAK~VBTYP eq 'C'.       "Sales Order

      loop at GT_VBAP into data(LS_VBAP).
        try.
            format color col_heading.
            write: / LS_VBAP-VBELN, LS_VBAP-POSNR, LS_VBAP-MATNR.
            format reset.

***         Look for existing References
            select VBELN, POSNR
                   into table @data(LT_REF)
                   from VBAP
                  where VGBEL = @LS_VBAP-VBELN
                   and  VGPOS = @LS_VBAP-POSNR.
            if SY-SUBRC ne 0.
              clear LT_REF.
            endif.

            if LT_REF is initial.
***           Create Tool Order (with document reference)
              ZCL_VCXI_XCE_SD_TOOL_ORDER=>CREATE( exporting IF_MATNR  = LS_VBAP-MATNR
                                                            IF_VGBEL  = LS_VBAP-VBELN
                                                            IF_VGPOS  = LS_VBAP-POSNR
                                                            IF_AUART  = PA_AUART
                                                            IF_COMMIT = ABAP_TRUE
                                                  importing ER_MSG    = GR_MSG ).
              if GR_MSG is bound.
                loop at GR_MSG->T_MSG into data(GS_MSG).
                  write: / GS_MSG-MESSAGE.
                endloop.
              endif.
            else.
***           List existing References
              loop at LT_REF into data(LS_REF).
                write: / 'Reference', LS_REF-VBELN, LS_REF-POSNR.
              endloop.
            endif.
          catch /VCXI/CX_CKX into GR_CX_CKX.
            write: / GR_CX_CKX->IF_MESSAGE~GET_TEXT( ).
        endtry.
      endloop.

    catch /VCXI/CX_CKX into GR_CX_CKX.
      GR_CX_CKX->SHOW_MESSAGE( ).
  endtry.
