*&---------------------------------------------------------------------*
*& Selection Screen for Material Workbench of Bag Materials.
*&---------------------------------------------------------------------*
report  ZVCXI_FBE_MM_SEL.

tables: SSCRFIELDS,
        MARA,
        MAKT,
        MARC,
        RMMZU,
        ZVCXI_FBE_MM_S_DUI_MMEXT_VIS.

data: GS_SELCR    type ZVCXI_XCA_MWB_S_SELCR,
      GS_FUNC_TXT type SMP_DYNTXT.
data: GT_SELCR  type ZVCXI_XCA_MWB_TT_SELCR.
data: GR_CLQRY    type ref to ZCL_VCXI_XCA_MWB_CLQRY,
      GR_CLMAT    type ref to ZCL_VCXI_XCA_MWB_CLMAT,
      GR_REGELMNT type ref to /VCXI/CL_CKR_REGELMNT,
      GR_CX_CKX   type ref to /VCXI/CX_CKX.


***----------------------------------------------------------------------------
*** S E L E C T I O N   S C R E E N   D E F I N I T I O N
***----------------------------------------------------------------------------

*** Additional Toolbar Button
selection-screen: function key 1.


*** Selection Criteria of Material
selection-screen begin of block B01 with frame title text-001.

  select-options: SO_MATNR for MARA-MATNR,
                  SO_MAKTX for MAKT-MAKTX,
                  SO_WERKS for MARC-WERKS,
                  SO_MMSTA for MARC-MMSTA,
                  SO_XLTYP for RMMZU-XLTYP.

  selection-screen skip.

  select-options: SO_IBAGT for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-IBAGT,
                  SO_BGWID for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-BGWID,
                  SO_BGHEI for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-BGHEI,
                  SO_OLWID for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-OLWID.

  selection-screen skip.

  select-options: SO_GULEF for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-GULEF,
                  SO_GURIG for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-GURIG,
                  SO_GUTOP for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-GUTOP,
                  SO_GUBOT for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-GUBOT.

  selection-screen skip.

  select-options: SO_FOTOP for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-FOTOP,
                  SO_FOBOT for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-FOBOT.

  selection-screen skip.

  select-options: SO_TWICK for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-TWICK,
                  SO_WILIP for ZVCXI_FBE_MM_S_DUI_MMEXT_VIS-WILIP.

selection-screen end of block B01.

parameters: PA_MXSEL type TBMAXSEL default 200.


*** Hidden parameter to store the GUID of Registry Element for MWB Model
parameters: PA_GREGE type /VCXI/CKR_GREGE no-display.


***----------------------------------------------------------------------------
*** I N I T I A L I Z A T I O N
***----------------------------------------------------------------------------
initialization.

*** Button Create
  clear: GS_FUNC_TXT.
  GS_FUNC_TXT-TEXT = 'Create Material'(002).
  SSCRFIELDS-FUNCTXT_01 = GS_FUNC_TXT.


***----------------------------------------------------------------------------
*** A T- S E L E C T I O N - S C R E E N   O U T P U T
***----------------------------------------------------------------------------
at selection-screen output.

  try.
      if PA_GREGE is initial.
        GR_REGELMNT = /VCXI/CL_CKR_REGELMNT=>GET_INSTANCE_BY_ID( IF_IREGE = 'ZVCXI_FBE_MM_MMEXT' ).
        if GR_REGELMNT is bound.
          PA_GREGE = GR_REGELMNT->/VCXI/IF_CKX_OBJECT~GET_GUID( ).
        endif.
      endif.

    catch /VCXI/CX_CKX into GR_CX_CKX.
      GR_CX_CKX->SHOW_MESSAGE( ).
  endtry.


***----------------------------------------------------------------------------
*** A T- S E L E C T I O N - S C R E E N
***----------------------------------------------------------------------------
at selection-screen.

  try.
      if SY-UCOMM eq 'FC01'.
***     Map Selection Data
        perform MAP_SEL_DATA.

***     Call Popup for Template Material Selection
        GR_CLMAT = ZCL_VCXI_XCA_MWB_POPUP_TMPL=>START_POPUP( IR_CLQRY = GR_CLQRY ).
        if GR_CLMAT is bound.
          check GR_CLQRY is bound.

***       Calling the Result UI Framework
          ZCL_VCXI_XCA_MWB_UIFW=>START_UI( IR_CLQRY      = GR_CLQRY
                                           IF_GREGE      = PA_GREGE
                                           IF_FULLSCREEN = ABAP_TRUE
                                           IR_CLMAT      = GR_CLMAT ).

        endif.
      endif.

    catch /VCXI/CX_CKX into GR_CX_CKX.
      GR_CX_CKX->SHOW_MESSAGE( ).
  endtry.


***----------------------------------------------------------------------------
*** S T A R T - O F - S  E L E C T I O N
***----------------------------------------------------------------------------
start-of-selection.

  try.
***   Map Selection Data
      perform MAP_SEL_DATA.

      check GR_CLQRY is bound.

***   Calling the Result UI Framework
      ZCL_VCXI_XCA_MWB_UIFW=>START_UI( IR_CLQRY = GR_CLQRY
                                       IF_GREGE = PA_GREGE ).

    catch /VCXI/CX_CKX into GR_CX_CKX.
      GR_CX_CKX->SHOW_MESSAGE( ).
  endtry.


***--------------------------------------------------------------------------------------
*** Forms
***--------------------------------------------------------------------------------------
form MAP_SEL_DATA raising /VCXI/CX_CKX.

  clear GT_SELCR.

*** Map Select-Options to Search Criteria
  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_MATNR'
                                                        IT_SELOP = SO_MATNR[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_MAKTX'
                                                        IT_SELOP = SO_MAKTX[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_WERKS'
                                                        IT_SELOP = SO_WERKS[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_MMSTA'
                                                        IT_SELOP = SO_MMSTA[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_XLTYP'
                                                        IT_SELOP = SO_XLTYP[]
                                              changing  CT_SELCR = GT_SELCR ).


  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_IBAGT'
                                                        IT_SELOP = SO_IBAGT[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_BGWID'
                                                        IT_SELOP = SO_BGWID[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_BGHEI'
                                                        IT_SELOP = SO_BGHEI[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_OLWID'
                                                        IT_SELOP = SO_OLWID[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_GULEF'
                                                        IT_SELOP = SO_GULEF[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_GURIG'
                                                        IT_SELOP = SO_GURIG[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_GUTOP'
                                                        IT_SELOP = SO_GUTOP[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_GUBOT'
                                                        IT_SELOP = SO_GUBOT[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_FOTOP'
                                                        IT_SELOP = SO_FOTOP[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_FOBOT'
                                                        IT_SELOP = SO_FOBOT[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_TWICK'
                                                        IT_SELOP = SO_TWICK[]
                                              changing  CT_SELCR = GT_SELCR ).

  ZCL_VCXI_XCA_MWB_CLQRY=>MAP_SELOP_TO_SELCR( exporting IF_CPDNA = 'I_WILIP'
                                                        IT_SELOP = SO_WILIP[]
                                              changing  CT_SELCR = GT_SELCR ).


*** Call Factory for Query Object
  GR_CLQRY = ZCL_VCXI_XCA_MWB_CLQRY=>FACTORY( IF_GREGE  = PA_GREGE
                                              IT_SELCR  = GT_SELCR
                                              IF_MAXSEL = PA_MXSEL ).

endform.                    "MAP_SEL_DATA
