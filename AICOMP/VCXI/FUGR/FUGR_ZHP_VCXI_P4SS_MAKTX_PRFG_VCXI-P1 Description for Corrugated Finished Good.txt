function ZHP_VCXI_P4SS_MAKTX_PRFG.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(IR_GATE) TYPE REF TO  /VCXI/CL_VKSR_GATE
*"  EXPORTING
*"     REFERENCE(EF_MAKTX) TYPE  MAKTX
*"  RAISING
*"      /VCXI/CX_CKX
*"----------------------------------------------------------------------
*{   INSERT         HEDK927538                                        1


  data: LR_DATA type ref to DATA.

* data: LR_PR_CFG type ref to ZCL_VCXI_P1SS_PR_CFG. Test JBL
  data: LR_PR_PRFG type ref to ZCL_VCXI_P4SS_PR_PRFG."JMU - Si funciona hacer como copia el YHP_VCXI_P4SS_PR_PRFG y ponerlo aquí.

  field-symbols: <S_FDI_CFG>   type YHP_SVCS_S_FDI_PRFG.  "JMU - Funciona con ZVCXI_P4SS_S_FDI_PRFG., le he hecho esta estructura YHP* para evitar objetos estándar de AICOMP

  try.
      check IR_GATE is bound.
      cast ZCL_VCXI_P4SS_PR_PRFG( IR_GATE->R_CLSPR ).
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.
  LR_PR_PRFG ?= IR_GATE->R_CLSPR.

**** Collect Information

  try.
      LR_DATA = LR_PR_PRFG->ZIF_VCXI_PXSS_FDI~GET_DATA( ).
*             catch /VCXI/CX_CKX.  " .
*    GET REFERENCE OF LR_DATA INTO <FS_DATAREF>.

      assign LR_DATA->* to <S_FDI_CFG>.

    catch /VCXI/CX_CKX.

  endtry.

**** Build Description e.g  "0201 (300x250x200) B_02455_S"
*** Copy Customer Material Description (if it has a value) to Material Description
  if <S_FDI_CFG>-KDPTX is not initial.
    EF_MAKTX = |{ <S_FDI_CFG>-KDMAT }| && | { <S_FDI_CFG>-KDPTX } |. "Concatenar KDMAT y KDPTX
    TRANSLATE <S_FDI_CFG>-KDPTX  TO UPPER CASE.
      if <S_FDI_CFG>-KDPTX eq  <S_FDI_CFG>-KDMAT. "Si son iguales el nº de material cliente y descripción solo tomar 1 de los 2
          move <S_FDI_CFG>-KDPTX to EF_MAKTX.
      endif.
  else.
    move <S_FDI_CFG>-MAKTX to EF_MAKTX.
  endif.
*}   INSERT
endfunction.
