function ZHP_VCXI_P3SS_MAKTX_ASCONO_HPX.
*"--------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(IR_GATE) TYPE REF TO /VCXI/CL_VKSR_GATE
*"  EXPORTING
*"     REFERENCE(EF_MAKTX) TYPE  MAKTX
*"  RAISING
*"      /VCXI/CX_CKX
*"--------------------------------------------------------------------
*{   INSERT         SX2K900752                                        1

  data: LF_PRODIM type STRING.
  data: LR_PR_ASCONO type ref to ZCL_VCXI_P3SS_PR_ASCONO.


  try.
    check IR_GATE is bound.
    cast ZCL_VCXI_P3SS_PR_ASCONO( IR_GATE->R_CLSPR ).
  catch CX_SY_MOVE_CAST_ERROR.
    return.
  endtry.
  LR_PR_ASCONO ?= IR_GATE->R_CLSPR.

***  INI Modificacion descripción componentes AS HPX-20.05.2025-89688
*** Build Product Dimension
*  LF_PRODIM = |{ LR_PR_ASCONO->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASBPX( )->S_PRODIM-PROLE number = environment decimals = 0 }x| &&
*             |{ LR_PR_ASCONO->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASBPX( )->S_PRODIM-PROWI number = environment decimals = 0 }x| &&
*             |{ LR_PR_ASCONO->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASBPX( )->S_PRODIM-PROHE number = environment decimals = 0 }|.
*** Build Description e.g  "AS (450x250x200)"
*  EF_MAKTX = |AS ({ LF_PRODIM })|.

* Si miramos transacción SmartVC Customizing (/VCXI/SVCC), como estamos en Specification/Conversión/Printing...
* Navegamos primero al padre (Specification)
  DATA(lt_gate_spec) = ir_gate->get_prvdr( if_iprvt = 'ZVCXI_PXSS_SPEC'
                                if_inuse = abap_true ).
  CHECK lt_gate_spec IS NOT INITIAL.

* De ahi, buscamos los provides que nos permiten navegar al Output
  DATA(lr_gate_spec) = lt_gate_spec[ 1 ].
  DATA(lt_gate_xcomp) = lr_gate_spec->get_prvdr( if_iprvt = 'ZVCXI_PXSS_XCOMP'
                                              if_inuse = abap_true ).
  DATA(lr_gate_xcomp) = lt_gate_xcomp[ 1 ].

  DATA(lt_gate_sov) = lr_gate_xcomp->get_prvdr( if_iprvt = 'ZVCXI_PXSS_SOV'
                                            if_inuse = abap_true ).

  DATA(lr_gate_sov) = lt_gate_sov[ 1 ].

  DATA(lt_gate_fg) = lr_gate_sov->get_prvdr( if_iprvt = 'ZVCXI_PXSS_FG'
                                            if_inuse = abap_true ).

  DATA: l_fg    TYPE REF TO ycl_hp_svcs_pr_afg,
        l_kdptx TYPE yhp_svcs_s_fdi_afg-kdptx.
  FIELD-SYMBOLS <fdata> TYPE yhp_svcs_s_fdi_afg.
  LOOP AT lt_gate_fg ASSIGNING FIELD-SYMBOL(<gate_fg>).
    TRY.
        l_fg ?= <gate_fg>->r_clspr.
        IF sy-subrc = 0.
          DATA(l_fdata) = l_fg->zif_vcxi_pxss_fdi~get_data( ).
          IF sy-subrc = 0.
            ASSIGN l_fdata->* TO <fdata>.
            IF sy-subrc = 0.
              l_kdptx = <fdata>-kdptx.
            ENDIF.
          ENDIF..
        ENDIF.
      CATCH cx_root INTO DATA(o_root).
    ENDTRY.
    IF NOT l_kdptx IS INITIAL.
      EXIT.
    ENDIF.
  ENDLOOP.

  IF NOT l_kdptx IS INITIAL.
    ef_maktx = |SEMI { l_kdptx }|.
  ENDIF.
*** FIN Modificacion descripción componentes AS HPX-20.05.2025-89688
*}   INSERT
endfunction.
