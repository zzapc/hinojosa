FUNCTION ZHP_VCXI_PXSS_MAKTX_DCUT.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(IR_GATE) TYPE REF TO  /VCXI/CL_VKSR_GATE
*"  EXPORTING
*"     REFERENCE(EF_MAKTX) TYPE  MAKTX
*"  RAISING
*"      /VCXI/CX_CKX
*"----------------------------------------------------------------------
*{   INSERT         HEDK928018                                        1

**********************************************************************
* LOCAL PARAMS
**********************************************************************

****** OO

  DATA: lr_bl_crbprop TYPE REF TO zcl_vcxi_p1ss_bl_crbprop,
        lr_bl_crfprop TYPE REF TO zcl_vcxi_p1ss_bl_crfprop.

****** VBLES

  DATA: lv_prsty          TYPE zvcxi_p0ss_prsty,
        lv_prsty_txt(15)  TYPE c,
        lv_prole          TYPE zvcxi_p0s_prole,
        lv_prole_txt(15)  TYPE c,
        lv_prowi          TYPE zvcxi_p0s_prowi,
        lv_prowi_txt(15)  TYPE c,
        lv_prohe          TYPE zvcxi_p0s_prohe,
        lv_prohe_txt(15)  TYPE c,
        lv_flute          TYPE zvcxi_pcs_flute,
        lv_flute_txt(15)  TYPE c,
        lv_value_e(9)     TYPE c,
        lv_value_d(4)     TYPE c.

**********************************************************************
* CHECKS
**********************************************************************

****** IMPORT DATA

  TRY.
    CHECK ir_gate IS BOUND.
    CAST ycl_hp_svcs_pr_cstep_dcut( ir_gate->r_clspr ).
  CATCH cx_sy_move_cast_error.
    EXIT.
  ENDTRY.

**********************************************************************
* LOGIC
**********************************************************************

****** GET

***--------------------------------------------------------------------------------------
*** Get Backward Properties
  lr_bl_crbprop ?= CAST ycl_hp_svcs_pr_cstep_dcut( ir_gate->r_clspr )->zif_vcxi_p1ss_comm_next~get_crbpx( ).
  CHECK lr_bl_crbprop IS BOUND.

  lv_prsty = lr_bl_crbprop->f_fefco.
  lv_prole = lr_bl_crbprop->s_prodim-prole.
  lv_prowi = lr_bl_crbprop->s_prodim-prowi.
  lv_prohe = lr_bl_crbprop->s_prodim-prohe.

***--------------------------------------------------------------------------------------
*** Get Forward Properties
  lr_bl_crfprop ?= CAST ycl_hp_svcs_pr_cstep_dcut( ir_gate->r_clspr )->zif_vcxi_p1ss_comm_next~get_crfpx( ).
  CHECK lr_bl_crfprop IS BOUND.

  lv_flute = lr_bl_crfprop->f_flute.

****--------------------------------------------------------------------------------------
**** Build Description e.g  "0201/325x300x200/BC"

  "FEFCO
  MOVE lv_prsty TO lv_prsty_txt.
  CONDENSE lv_prsty_txt.

  "PROLE
  CLEAR: lv_value_e, lv_value_d.
  MOVE lv_prole TO lv_prole_txt.
  SPLIT lv_prole_txt AT '.' INTO lv_value_e lv_value_d.
  CLEAR lv_prole_txt.
  MOVE lv_value_e TO lv_prole_txt.
  CONDENSE lv_prole_txt.

  "PROWI
  CLEAR: lv_value_e, lv_value_d.
  MOVE lv_prowi TO lv_prowi_txt.
  SPLIT lv_prowi_txt AT '.' INTO lv_value_e lv_value_d.
  CLEAR lv_prowi_txt.
  MOVE lv_value_e TO lv_prowi_txt.
  CONDENSE lv_prowi_txt.

  "PROHE
  CLEAR: lv_value_e, lv_value_d.
  MOVE lv_prohe TO lv_prohe_txt.
  SPLIT lv_prohe_txt AT '.' INTO lv_value_e lv_value_d.
  CLEAR lv_prohe_txt.
  MOVE lv_value_e TO lv_prohe_txt.
  CONDENSE lv_prohe_txt.

  "FLUTE
  MOVE lv_flute TO lv_flute_txt.
  CONDENSE lv_prsty_txt.

  ef_maktx = |{ lv_prsty_txt }/{ lv_prole_txt }x{ lv_prowi_txt }x{ lv_prohe_txt }/{ lv_flute_txt }|.

*}   INSERT





ENDFUNCTION.
