FUNCTION zhp_vcxi_p1ss_maktx_cfg.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(IR_GATE) TYPE REF TO  /VCXI/CL_VKSR_GATE
*"  EXPORTING
*"     REFERENCE(EF_MAKTX) TYPE  MAKTX
*"  RAISING
*"      /VCXI/CX_CKX
*"----------------------------------------------------------------------
*{   INSERT         HEDK920137                                        1


  DATA: lr_data TYPE REF TO data.

* data: LR_PR_CFG type ref to ZCL_VCXI_P1SS_PR_CFG. Test JBL
  DATA: lr_pr_cfg TYPE REF TO ycl_hp_svcs_pr_cfg.

  FIELD-SYMBOLS: <s_fdi_cfg>   TYPE yhp_svcs_s_fdi_cfg.

  TRY.
      CHECK ir_gate IS BOUND.
      CAST zcl_vcxi_p1ss_pr_cfg( ir_gate->r_clspr ).
    CATCH cx_sy_move_cast_error.
      EXIT.
  ENDTRY.
  lr_pr_cfg ?= ir_gate->r_clspr.

**** Collect Information

  TRY.
      lr_data = lr_pr_cfg->zif_vcxi_pxss_fdi~get_data( ).
*             catch /VCXI/CX_CKX.  " .
*    GET REFERENCE OF LR_DATA INTO <FS_DATAREF>.

      ASSIGN lr_data->* TO <s_fdi_cfg>.

      CHECK <s_fdi_cfg> IS ASSIGNED.

**** Build Description e.g  "0201 (300x250x200) B_02455_S"
*** Copy Customer Material Description (if it has a value) to Material Description
      IF <s_fdi_cfg>-kdptx IS NOT INITIAL.
        ef_maktx = |{ <s_fdi_cfg>-kdmat }| && | { <s_fdi_cfg>-kdptx } |. "Cantatenar KDMAT y KDPTX
        TRANSLATE <s_fdi_cfg>-kdptx  TO UPPER CASE.
        IF <s_fdi_cfg>-kdptx EQ  <s_fdi_cfg>-kdmat. "Si son iguales el nº de material cliente y descripción solo tomar 1 de los 2
          MOVE <s_fdi_cfg>-kdptx TO ef_maktx.
        ENDIF.
      ELSE.
        MOVE <s_fdi_cfg>-maktx TO ef_maktx.
      ENDIF.

    CATCH /vcxi/cx_ckx.

  ENDTRY.


ENDFUNCTION.
