
class ZCL_VCXI_XCUC_GRID_MUCAO definition
  public
  final
  create public .

public section.

  methods CHECK_CHANGED_DATA
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_MUCEL type ref to ZCL_VCXI_XCUC_MUCEL
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
protected section.

  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data R_MUCEL type ref to ZCL_VCXI_XCUC_MUCEL .
  data T_FIELDCAT type LVC_T_FCAT .
  data T_MUCAO_GRID type ZVCXI_XCUC_TT_MUCAO_GRID .

  class-methods SHLP_ACTVT
    importing
      !IF_OBJECT type XUOBJECT
      !IF_FIELD type XUFIELD
      !IF_DISPLAY type ABAP_BOOL
    changing
      !CF_VALUE type XUVAL
    raising
      /VCXI/CX_CKX .
  class-methods SHLP_FIELD
    importing
      !IF_OBJECT type XUOBJECT
      !IF_FIELD type XUFIELD
      !IF_DISPLAY type ABAP_BOOL
    returning
      value(RF_VALUE) type XUVAL
    raising
      /VCXI/CX_CKX .
  methods BUILD_FIELDCAT
    raising
      /VCXI/CX_CKX .
  methods GET_LAYOUT
    returning
      value(RS_LAYOUT) type LVC_S_LAYO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_UCOMM
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .
  methods HANDLE_UC_ADD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_DATA_CHANGED
    for event DATA_CHANGED of CL_GUI_ALV_GRID
    importing
      !ER_DATA_CHANGED
      !E_ONF4
      !E_ONF4_BEFORE
      !E_ONF4_AFTER
      !E_UCOMM .
  methods HANDLE_DATA_CHANGED_FINISHED
    for event DATA_CHANGED_FINISHED of CL_GUI_ALV_GRID
    importing
      !E_MODIFIED
      !ET_GOOD_CELLS .
  methods HANDLE_ONF4
    for event ONF4 of CL_GUI_ALV_GRID
    importing
      !E_FIELDNAME
      !E_FIELDVALUE
      !ES_ROW_NO
      !ER_EVENT_DATA
      !ET_BAD_CELLS
      !E_DISPLAY .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_DATA
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCUC_GRID_MUCAO definition
class ZCL_VCXI_XCUC_GRID_MUCAO implementation.
  method BUILD_FIELDCAT .

    data: LF_EDIT type LVC_EDIT.
    field-symbols: <S_FCAT> type LVC_S_FCAT.


***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        I_STRUCTURE_NAME       = 'ZVCXI_XCUC_S_MUCAO_GRID'
      changing
        CT_FIELDCAT            = ME->T_FIELDCAT
      exceptions
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        others                 = 3.

    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Get Lock Status
    if ME->R_MUCEL->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_FALSE.
      LF_EDIT = ABAP_TRUE.
    endif.

***--------------------------------------------------------------------------------------
*** Modify Field Catalog
    loop at ME->T_FIELDCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME(5).
        when 'VALUE'.
          <S_FCAT>-EDIT       = LF_EDIT.
          <S_FCAT>-F4AVAILABL = ABAP_TRUE.
      endcase.
    endloop.

  endmethod.
method CHECK_CHANGED_DATA.

  if ME->R_GRID is bound.
*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
  method CONSTRUCTOR.

    ME->R_MUCEL = IR_MUCEL.

  endmethod.
  method DO_FREE .

*** Check for Changes
    if ME->R_GRID is bound.
      ME->R_GRID->CHECK_CHANGED_DATA( ).
    endif.


    if ME->R_GRID is bound.
      ME->R_GRID->FREE( exceptions
                          CNTL_ERROR        = 1
                          CNTL_SYSTEM_ERROR = 2
                          others            = 3 ).
      if SY-SUBRC <> 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_GRID.
    endif.

    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions
                               CNTL_ERROR        = 1
                               CNTL_SYSTEM_ERROR = 2
                               others            = 3 ).
      if SY-SUBRC <> 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.

    clear ME->R_MUCEL.

  endmethod.
  method GET_LAYOUT.

    RS_LAYOUT-CWIDTH_OPT = 'X'.
    RS_LAYOUT-SEL_MODE   = 'A'.
    RS_LAYOUT-STYLEFNAME = 'T_STYL'.

  endmethod.
  method HANDLE_DATA_CHANGED.

    data: LF_FIELD type STRING.
    field-symbols: <S_MOD_CELL>   type LVC_S_MODI,
                   <S_MUCAO_GRID> type ZVCXI_XCUC_S_MUCAO_GRID,
                   <F_FIELD>      type XUFIELD.


    loop at ER_DATA_CHANGED->MT_MOD_CELLS assigning <S_MOD_CELL>.

      read table ME->T_MUCAO_GRID assigning <S_MUCAO_GRID>
                                  index <S_MOD_CELL>-ROW_ID.

      LF_FIELD = |<S_MUCAO_GRID>-FIELD{ <S_MOD_CELL>-FIELDNAME+5(2) }|.
      assign (LF_FIELD) to <F_FIELD>.

      call function 'SUPR_CHECK_VALUES_FOR_SE93'
        exporting
          OBJECT        = <S_MUCAO_GRID>-OBJCT
          FIELD         = <F_FIELD>
          VALUE         = <S_MOD_CELL>-VALUE
        exceptions
          INVALID_VALUE = 1
          others        = 2.

      if SY-SUBRC ne 0.
        <S_MOD_CELL>-ERROR = ABAP_TRUE.
***     Field value & is not valid.
        ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY( I_MSGID     = 'ZVCXI_XCUC'
                                             I_MSGTY     = 'E'
                                             I_MSGNO     = '051'
                                             I_MSGV1     = <S_MOD_CELL>-VALUE
                                             I_FIELDNAME = <S_MOD_CELL>-FIELDNAME
                                             I_ROW_ID    = <S_MOD_CELL>-ROW_ID
                                             I_TABIX     = <S_MOD_CELL>-TABIX ).
      endif.

    endloop.

*** Refresh ALV - Set New Ok Code to force PBO
    if E_ONF4_BEFORE ne ABAP_TRUE.
      CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).
    endif.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LF_INDEX       type N length 2,
          LF_FIELD_FIELD type STRING,
          LF_FIELD_VALUE type STRING,
          LF_FIELDNAME   type FIELDNAME.
    data: LS_MUCAO_GRID type ZVCXI_XCUC_S_MUCAO_GRID.
    data: LT_MUCAO      type ZVCXI_XCUC_TT_MUCAO.
    field-symbols: <S_MUCAO> type ZVCXI_XCUC_S_MUCAO,
                   <S_MUAFV> type ZVCXI_XCUC_S_MUAFV,
                   <F_FIELD> type XUFIELD,
                   <F_VALUE> type XUVAL.


    check E_MODIFIED eq ABAP_TRUE.

    try.
***     Get current Authorization Objects
        LT_MUCAO = ME->R_MUCEL->T_MUCAO.

***     Process Updates
        loop at ME->T_MUCAO_GRID into LS_MUCAO_GRID.
          check LINE_EXISTS( ET_GOOD_CELLS[ ROW_ID = SY-TABIX ] ).

          assign LT_MUCAO[ SY-TABIX ] to <S_MUCAO>.
          move-corresponding LS_MUCAO_GRID to <S_MUCAO>.

          do 10 times.
            LF_INDEX = SY-INDEX.
            read table <S_MUCAO>-T_MUAFV assigning <S_MUAFV> index LF_INDEX.
            if SY-SUBRC eq 0.
              LF_FIELD_FIELD = |LS_MUCAO_GRID-FIELD{ LF_INDEX }|.
              assign (LF_FIELD_FIELD) to <F_FIELD>.
              if <F_FIELD> is assigned.
                <S_MUAFV>-FIELD = <F_FIELD>.
              endif.
              LF_FIELD_VALUE = |LS_MUCAO_GRID-VALUE{ LF_INDEX }|.
              assign (LF_FIELD_VALUE) to <F_VALUE>.
              if <F_VALUE> is assigned.
                <S_MUAFV>-VALUE = <F_VALUE>.
              endif.
            endif.
          enddo.

        endloop.

***     Set Authorization Object
        ME->R_MUCEL->SET_MUCAO( IT_MUCAO = LT_MUCAO ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_ONF4.

    data: LF_FIELD type STRING,
          LF_VALUE type XUVAL.
    data: LT_MUCAO type ZVCXI_XCUC_TT_MUCAO.
    field-symbols: <F_FIELD>      type XUFIELD,
                   <S_MUCAO_GRID> type ZVCXI_XCUC_S_MUCAO_GRID.


    try.
***--------------------------------------------------------------------------------------
***     Mark as handled
        ER_EVENT_DATA->M_EVENT_HANDLED = ABAP_TRUE.

***     Get Grid Entry
        read table ME->T_MUCAO_GRID assigning <S_MUCAO_GRID>
                                    index ES_ROW_NO-ROW_ID.
        check SY-SUBRC eq 0.

***     Field
        LF_FIELD = |FIELD{ E_FIELDNAME+5(2) }|.
        assign component LF_FIELD of structure <S_MUCAO_GRID> to <F_FIELD>.

***     Get current Value
        LF_VALUE = ME->R_MUCEL->T_MUCAO[ OBJCT = <S_MUCAO_GRID>-OBJCT ]-T_MUAFV[ FIELD = <F_FIELD> ]-VALUE.

***--------------------------------------------------------------------------------------
        if <F_FIELD> eq 'ACTVT'.
***       Call F4 for the Authorization Field Activity
          ZCL_VCXI_XCUC_GRID_MUCAO=>SHLP_ACTVT( exporting IF_OBJECT  = <S_MUCAO_GRID>-OBJCT
                                                          IF_FIELD   = <F_FIELD>
                                                          IF_DISPLAY = E_DISPLAY
                                                changing  CF_VALUE   = LF_VALUE ).
        else.
***       Call F4 for other Authorization Fields
          LF_VALUE = ZCL_VCXI_XCUC_GRID_MUCAO=>SHLP_FIELD( IF_OBJECT  = <S_MUCAO_GRID>-OBJCT
                                                           IF_FIELD   = <F_FIELD>
                                                           IF_DISPLAY = E_DISPLAY  ).
        endif.
        check LF_VALUE is not initial.

***     Validate Value
        call function 'SUPR_CHECK_VALUES_FOR_SE93'
          exporting
            OBJECT        = <S_MUCAO_GRID>-OBJCT
            FIELD         = <F_FIELD>
            VALUE         = LF_VALUE
          exceptions
            INVALID_VALUE = 1
            others        = 2.

        if SY-SUBRC ne 0.
***       Field value & is not valid.
          message I051(ZVCXI_XCUC) with LF_VALUE.
          clear LF_VALUE.
        endif.

***--------------------------------------------------------------------------------------
***     Update Authorization Object
        LT_MUCAO = ME->R_MUCEL->T_MUCAO.
        LT_MUCAO[ OBJCT = <S_MUCAO_GRID>-OBJCT ]-T_MUAFV[ FIELD = <F_FIELD> ]-VALUE = LF_VALUE.
        ME->R_MUCEL->SET_MUCAO( IT_MUCAO = LT_MUCAO ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_TOOLBAR.

    data:  LF_DISABLED type ABAP_BOOL.

    try.
***     Lock Status
        if ME->R_MUCEL->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
          move ABAP_TRUE to LF_DISABLED.
        endif.

***----------------------------------------------------------------------------
***     Insert Toolbar elements
        append value #( FUNCTION  = 'ADD'
                        TEXT      = 'Add'(F01)
                        ICON      = ICON_INSERT_ROW
                        DISABLED  = LF_DISABLED
                      ) to E_OBJECT->MT_TOOLBAR.

        append value #( FUNCTION  = 'DEL'
                        TEXT      = 'Delete'(F02)
                        ICON      = ICON_DELETE_ROW
                        DISABLED  = LF_DISABLED
                      ) to E_OBJECT->MT_TOOLBAR.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_ADD.

    data: LF_SUBRC type SYSUBRC.
    data: LS_SHLP   type SHLP_DESCR_T,
          LS_RETVAL type DDSHRETVAL,
          LS_MUCAO  type ZVCXI_XCUC_S_MUCAO.
    data: LT_RETVAL type table of DDSHRETVAL,
          LT_MUCAO  type ZVCXI_XCUC_TT_MUCAO.


***--------------------------------------------------------------------------------------
*** Get Search Help
    call function 'F4IF_DETERMINE_SEARCHHELP'
      exporting
        TABNAME           = 'ZVCXI_XCUC_S_MUCAO_GRID'
        FIELDNAME         = 'OBJCT'
      importing
        SHLP              = LS_SHLP
      exceptions
        FIELD_NOT_FOUND   = 1
        NO_HELP_FOR_FIELD = 2
        INCONSISTENT_HELP = 3
        others            = 4.
    check SY-SUBRC eq 0.

*** Call Search Help
    call function 'F4IF_START_VALUE_REQUEST'
      exporting
        SHLP          = LS_SHLP
        MULTISEL      = ABAP_TRUE
      importing
        RC            = LF_SUBRC
      tables
        RETURN_VALUES = LT_RETVAL.
    check LF_SUBRC eq 0 and
          LT_RETVAL is not initial.

***--------------------------------------------------------------------------------------
*** Return Result
    LT_MUCAO = ME->R_MUCEL->T_MUCAO.
    loop at LT_RETVAL into LS_RETVAL.
      if not LINE_EXISTS( LT_MUCAO[ OBJCT = LS_RETVAL-FIELDVAL ] ).
        insert value ZVCXI_XCUC_S_MUCAO( OBJCT = LS_RETVAL-FIELDVAL ) into table LT_MUCAO.
      endif.
    endloop.
    ME->R_MUCEL->SET_MUCAO( IT_MUCAO = LT_MUCAO ).

  endmethod.
  method HANDLE_UC_DEL.

    data: LS_ROW   type LVC_S_ROW.
    data: LT_ROW   type LVC_T_ROW,
          LT_MUCAO type ZVCXI_XCUC_TT_MUCAO.


*** Get selected Rows
    ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

    LT_MUCAO = ME->R_MUCEL->T_MUCAO.

*** Remove selected Object
    loop at LT_ROW into LS_ROW.
      delete LT_MUCAO where OBJCT eq ME->T_MUCAO_GRID[ LS_ROW-INDEX ]-OBJCT.
    endloop.

*** Set remaining Objects
    ME->R_MUCEL->SET_MUCAO( IT_MUCAO = LT_MUCAO ).

  endmethod.
  method HANDLE_UCOMM.

    try.
        case E_UCOMM.
          when 'ADD'.
            ME->HANDLE_UC_ADD( ).
          when 'DEL'.
            ME->HANDLE_UC_DEL( ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

*** Refresh ALV - Set New Ok Code to force PBO
    CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).

  endmethod.
  method INIT_CONTAINER .

    if ME->R_CONTAINER is not bound.
      create object ME->R_CONTAINER
        exporting
          CONTAINER_NAME              = '0150CC_MUCAO'
        exceptions
          CNTL_ERROR                  = 1
          CNTL_SYSTEM_ERROR           = 2
          CREATE_ERROR                = 3
          LIFETIME_ERROR              = 4
          LIFETIME_DYNPRO_DYNPRO_LINK = 5
          others                      = 6.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
  method INIT_DATA.

    data: LF_INDEX       type N length 2,
          LF_FIELD_FIELD type STRING,
          LF_FIELD_VALUE type STRING,
          LF_FIELDNAME   type FIELDNAME.
    data: LS_MUCAO type ZVCXI_XCUC_S_MUCAO,
          LS_MUAFV type ZVCXI_XCUC_S_MUAFV.
    field-symbols: <S_MUCAO_GRID> type ZVCXI_XCUC_S_MUCAO_GRID,
                   <F_FIELD>      type XUFIELD,
                   <F_VALUE>      type XUVAL.


    refresh ME->T_MUCAO_GRID.

    loop at ME->R_MUCEL->T_MUCAO into LS_MUCAO.

      append value #( OBJCT = LS_MUCAO-OBJCT
                    ) to ME->T_MUCAO_GRID assigning <S_MUCAO_GRID>.

      clear LF_INDEX.

***   Add Field with Value (up to 10)
      do 10 times.

        LF_INDEX = SY-INDEX.
        read table LS_MUCAO-T_MUAFV into LS_MUAFV index LF_INDEX.
        if SY-SUBRC eq 0.
          LF_FIELD_FIELD = |<S_MUCAO_GRID>-FIELD{ LF_INDEX }|.
          assign (LF_FIELD_FIELD) to <F_FIELD>.
          if <F_FIELD> is assigned.
            <F_FIELD> = LS_MUAFV-FIELD.
          endif.
          LF_FIELD_VALUE = |<S_MUCAO_GRID>-VALUE{ LF_INDEX }|.
          assign (LF_FIELD_VALUE) to <F_VALUE>.
          if <F_VALUE> is assigned.
            <F_VALUE> = LS_MUAFV-VALUE.
          endif.
        else.
***       No input if no Field
          LF_FIELDNAME = |VALUE{ LF_INDEX }|.
          insert value #( FIELDNAME = LF_FIELDNAME
                          STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED ) into table <S_MUCAO_GRID>-T_STYL.
        endif.

      enddo.
    endloop.

  endmethod.
  method INIT_GRID .

    data: LT_F4 type LVC_T_F4.
    field-symbols: <S_FCAT> type LVC_S_FCAT.


    if ME->R_GRID is not bound.
      create object ME->R_GRID
        exporting
          I_PARENT          = ME->R_CONTAINER
        exceptions
          ERROR_CNTL_CREATE = 1
          ERROR_CNTL_INIT   = 2
          ERROR_CNTL_LINK   = 3
          ERROR_DP_CREATE   = 4
          others            = 5.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

***   Set Enter as Event
      ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

***   Set Event Hanlder for Input
      set handler ME->HANDLE_DATA_CHANGED_FINISHED for ME->R_GRID.
      set handler ME->HANDLE_DATA_CHANGED          for ME->R_GRID.

***   Set Eventhandler for Toolbar
      set handler ME->HANDLE_TOOLBAR               for ME->R_GRID.
      set handler ME->HANDLE_UCOMM                 for ME->R_GRID.

***   F4 Request
      set handler ME->HANDLE_ONF4  for ME->R_GRID.

*** Register F4
      loop at ME->T_FIELDCAT assigning <S_FCAT>.
        insert value #( FIELDNAME  = <S_FCAT>-FIELDNAME
                        REGISTER   = 'X'
                        CHNGEAFTER = 'X' ) into table LT_F4.
      endloop.

      ME->R_GRID->REGISTER_F4_FOR_FIELDS( IT_F4 = LT_F4 ).

    endif.

  endmethod.
  method REFRESH_GRID .

    data:   LS_LAYOUT            type LVC_S_LAYO.
    data:   LT_TOOLBAR_EXCLUDING type UI_FUNCTIONS.


*** Initialized Data
    ME->INIT_DATA( ).

*** Build Field Catalog
    ME->BUILD_FIELDCAT( ).

*** Initial Display
    if ME->R_GRID is not bound.
      ME->INIT_CONTAINER( ).
      ME->INIT_GRID( ).

      ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY( exporting
                                                 IT_TOOLBAR_EXCLUDING          = value #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
                                                 IS_LAYOUT                     = ME->GET_LAYOUT( )
                                               changing
                                                 IT_FIELDCATALOG               = ME->T_FIELDCAT
                                                 IT_OUTTAB                     = ME->T_MUCAO_GRID
                                               exceptions
                                                 INVALID_PARAMETER_COMBINATION = 1
                                                 PROGRAM_ERROR                 = 2
                                                 TOO_MANY_LINES                = 3
                                                 others                        = 4 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

*** Update of Data
    else.
      ME->R_GRID->SET_FRONTEND_FIELDCATALOG( IT_FIELDCATALOG = ME->T_FIELDCAT ).
      ME->R_GRID->SET_FRONTEND_LAYOUT( IS_LAYOUT = ME->GET_LAYOUT( ) ).
      ME->R_GRID->REFRESH_TABLE_DISPLAY( exceptions FINISHED = 1 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
  method SHLP_ACTVT.

    data: LT_TPR01 type table of TPR01.


*** Define current Status
    LT_TPR01 = value #( ( LOW = CF_VALUE ) ).

***--------------------------------------------------------------------------------------
*** Call F4 for the Authorization Field
    call function 'SUPR_MAINTAIN_VALUES_FOR_SE93'
      exporting
        OBJECT                     = IF_OBJECT
        FIELD                      = IF_FIELD
        SHOW_ONLY                  = IF_DISPLAY
      tables
        F_VALUES                   = LT_TPR01
      exceptions
        EXIT_MODULE_WITHOUT_SAVING = 1
        NO_VALUEHELP_AVAILABLE     = 2
        others                     = 3.
    check SY-SUBRC eq 0 and
          LT_TPR01 is not initial.

***--------------------------------------------------------------------------------------
*** Ensure only one entry has been selected
    if LINES( LT_TPR01 ) gt 1.
***   Only one Value can be defined.
      message I052(ZVCXI_XCUC).
    else.
      CF_VALUE = LT_TPR01[ 1 ]-LOW.
    endif.

  endmethod.
  method SHLP_FIELD.

    data: LF_DATEL type ROLLNAME,
          LF_SUBRC type SYSUBRC.
    data: LS_SHLP type SHLP_DESCR_T.
    data: LT_RETVAL type table of DDSHRETVAL.
    field-symbols: <T_MODI> type LVC_T_MODI.


*** Get Data Element defined for the Authorization Field
    select single ROLLNAME
           into LF_DATEL
           from AUTHX
          where FIELDNAME eq IF_FIELD.
    check SY-SUBRC eq 0.

***--------------------------------------------------------------------------------------
*** Get Search Help
    call function 'F4IF_DETERMINE_SEARCHHELP'
      exporting
        TABNAME           = LF_DATEL
        FIELDNAME         = SPACE
      importing
        SHLP              = LS_SHLP
      exceptions
        FIELD_NOT_FOUND   = 1
        NO_HELP_FOR_FIELD = 2
        INCONSISTENT_HELP = 3
        others            = 4.
    check SY-SUBRC eq 0.

*** Call Search Help
    call function 'F4IF_START_VALUE_REQUEST'
      exporting
        SHLP          = LS_SHLP
        DISPONLY      = IF_DISPLAY
      importing
        RC            = LF_SUBRC
      tables
        RETURN_VALUES = LT_RETVAL.
    check LF_SUBRC eq 0 and
          LT_RETVAL is not initial.

***--------------------------------------------------------------------------------------
*** Return Result
    RF_VALUE = LT_RETVAL[ 1 ]-FIELDVAL.

  endmethod.
