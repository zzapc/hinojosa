
class ZCL_VCXI_PFSU_PR_SHIPMGR_UCB definition
  public
  inheriting from ZCL_VCXI_XCSU_PR_SHIPMGR
  create public .

public section.

  methods GET_BASE_DIMEN
    redefinition .
  methods GET_BASE_PRQTY
    redefinition .
protected section.

  data R_PR_SPEC_UCB type ref to ZCL_VCXI_PFSS_PR_SPEC_UCB .
  data R_PR_AREA_WGT_UCB type ref to ZCL_VCXI_PFSS_PR_AREA_WGT_UCB .

  methods HANDLE_INIT_REFERENCES
    redefinition .
private section.
endclass. "ZCL_VCXI_PFSU_PR_SHIPMGR_UCB definition
class ZCL_VCXI_PFSU_PR_SHIPMGR_UCB implementation.
method GET_BASE_DIMEN.

  data:          LS_AGGRA  type ZVCXI_PFSS_S_AGGRA,
                 LS_INGRA  type ZVCXI_PFSS_S_INGRA,
                 LS_CALIP  type ZVCXI_P0SS_S_CALIP,
                 LS_WDRNP  type ZVCXI_P0SS_S_WDRNP.
  field-symbols: <S_DIMEN> type ZVCXI_XCSU_S_DIMEN.

*** First check if all References are there
  if ME->R_PR_SPEC_UCB     is not bound or
     ME->R_PR_AREA_WGT_UCB is not bound.
    ME->HANDLE_INIT_REFERENCES( ).
  endif.

  if ME->R_PR_SPEC_UCB is bound.
    LS_AGGRA = ME->R_PR_SPEC_UCB->GET_AGGRA( ).
    LS_INGRA = ME->R_PR_SPEC_UCB->GET_INGRA( ).
    LS_CALIP = ME->R_PR_SPEC_UCB->GET_CALIP( IF_POOTI = '*' ).
  endif.

  if ME->R_PR_AREA_WGT_UCB is bound.
    LS_WDRNP = ME->R_PR_AREA_WGT_UCB->GET_WDRNP( ).
  endif.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  if LS_AGGRA-AGGRA ge LS_INGRA-INGRA.
    <S_DIMEN>-DIMEN      = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH.
  else.
    <S_DIMEN>-DIMEN      = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH.
  endif.
  <S_DIMEN>-DIMVA      = LS_AGGRA-AGGRA.
  <S_DIMEN>-DIMVA_UOM  = LS_AGGRA-AGGRA_UOM.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  if LS_INGRA-INGRA gt LS_AGGRA-AGGRA.
    <S_DIMEN>-DIMEN      = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH.
  else.
    <S_DIMEN>-DIMEN      = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH.
  endif.
  <S_DIMEN>-DIMVA      = LS_INGRA-INGRA.
  <S_DIMEN>-DIMVA_UOM  = LS_INGRA-INGRA_UOM.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  <S_DIMEN>-DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT.
  <S_DIMEN>-DIMVA     = LS_CALIP-CALIP.
  <S_DIMEN>-DIMVA_UOM = LS_CALIP-CALIP_UOM.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  <S_DIMEN>-DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WEIGHT.
  <S_DIMEN>-DIMVA     = LS_WDRNP-WDRNP.
  <S_DIMEN>-DIMVA_UOM = LS_WDRNP-WDRNP_UOM.

endmethod.
method GET_BASE_PRQTY.

  RS_PRQTY-PRQTY     = 1.
  RS_PRQTY-PRQTY_UOM = 'ST'.

endmethod.
method HANDLE_INIT_REFERENCES.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

  SUPER->HANDLE_INIT_REFERENCES( ).

***------------------------------------------------------------------------------------------------
*** Get Sheet Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSS_PR_SPEC_UCB=>C_IPRVT_PF_SPEC_UCB
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
         LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PR_SPEC_UCB.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PR_SPEC_UCB.
  endtry.

  if ME->R_PR_SPEC_UCB is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PFSS_PR_SPEC_UCB=>C_IPRVT_PF_SPEC_UCB
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

***------------------------------------------------------------------------------------------------
*** Get Area and Weight Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSS_PR_AREA_WGT_UCB=>C_IPRVT_PF_AREA_WGT_UCB
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
         LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PR_AREA_WGT_UCB.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PR_AREA_WGT_UCB.
  endtry.

  if ME->R_PR_AREA_WGT_UCB is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PFSS_PR_AREA_WGT_UCB=>C_IPRVT_PF_AREA_WGT_UCB
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

endmethod.
endclass. "ZCL_VCXI_PFSU_PR_SHIPMGR_UCB implementation
