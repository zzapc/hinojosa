
class ZCL_VCXI_PXSS_UI_ALTUOM definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_GRID_ALTUOM type ref to ZCL_VCXI_PXSS_GRID_ALTUOM .
private section.

  data R_PR_ALTUOM type ref to ZCL_VCXI_PXSS_PR_ALTUOM .
endclass. "ZCL_VCXI_PXSS_UI_ALTUOM definition
class ZCL_VCXI_PXSS_UI_ALTUOM implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_ALTUOM_BIND'
      exporting
        IR_UI_ALTUOM = ME
      importing
        ES_DYNP      = ME->S_DYNP.

*** Create Grid for Alternate Unit
    if ME->R_GRID_ALTUOM is not bound.
      create object ME->R_GRID_ALTUOM
        exporting
          IR_GATE           = ME->R_GATE
          IF_CONTAINER_NAME = '0100CC_GRID_ALTUOM'
          IR_UIGATE         = ME->R_UIGATE.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( exporting IR_UIFW      = IR_UIFW
                                  IR_UIGATE    = IR_UIGATE
                                  IR_GATE      = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_ALTUOM.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_ALTUOM is bound.
      ME->R_GRID_ALTUOM->DO_FREE( ).
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                             IF_DYNNR = IF_DYNNR ).

    try.

        if IF_REPID eq ME->S_DYNP-REPID and
           IF_DYNNR eq ME->S_DYNP-DYNNR.

          LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
          LF_INUSE  = ME->R_GATE->IS_INUSE( ).

          loop at screen.
            if LF_LOCKED ne ABAP_TRUE or
               LF_INUSE  ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
            modify screen.
          endloop.
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    if ME->R_GRID_ALTUOM is bound.

      if ME->R_GRID_ALTUOM->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_ALTUOM->F_REFRESH_REQ.
      endif.

      ME->R_GRID_ALTUOM->REFRESH_GRID( ).

    endif.

  endmethod.
