
class ZCL_VCXI_P1SS_POPUP_BRDCL definition
  public
  create protected .

public section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  data S_POPUP_BRDCL_VIS type ZVCXI_P1SS_S_POPUP_BRDCL_VIS .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IR_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_JOINT_GRID,
      JOITY type ZVCXI_P0S_JOITY,
      DESCR type /VCXI/CKX_DESCR,
    end of YS_JOINT_GRID .
  types:
    YT_JOINT_GRID type standard table of YS_JOINT_GRID .

  data R_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD .

  methods MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P1SS_POPUP_BRDCL definition
class ZCL_VCXI_P1SS_POPUP_BRDCL implementation.
  method CONSTRUCTOR.

    data: LF_FIELD type FIELDNAME,
          LF_NUM   type NUMC2.
    data: LS_CLASS_VALUE   type ZVCXI_PCSS_S_CLASS_VALUE,
          LS_CLASS_VALUE_C type ZVCXI_PCSS_S_CLASS_VALUE_C.
    data: LT_CLASS_VALUE   type ZVCXI_PCSS_TT_CLASS_VALUE,
          LT_CLASS_VALUE_C type ZVCXI_PCSS_TT_CLASS_VALUE_C.
    field-symbols: <F_FIELD> type ANY.


***--------------------------------------------------------------------------------------
*** Keep Input
    ME->R_CUST_BOARD = IR_CUST_BOARD.

***--------------------------------------------------------------------------------------
*** Get Board Basics
    ME->S_POPUP_BRDCL_VIS-BOARD       = ME->R_CUST_BOARD->F_BOARD.
    ME->S_POPUP_BRDCL_VIS-BOARD_DESCR = ME->R_CUST_BOARD->GET_BOARD_DESCR( ).
    ME->S_POPUP_BRDCL_VIS-FLUTE       = ME->R_CUST_BOARD->F_FLUTE.
    ME->S_POPUP_BRDCL_VIS-FLUTE_DESCR = ZCL_VCXI_PCSS_CUST_BOARD=>GET_FLUTE_DESCR( IF_FLUTE = ME->R_CUST_BOARD->F_FLUTE ).


*** Get overall available Classification
    select * into corresponding fields of table LT_CLASS_VALUE
             from ZVCXI_PCS_TC260
             order by ICLAT.
    select * into corresponding fields of table LT_CLASS_VALUE_C
             from ZVCXI_PCS_TC261
             order by ICLAT.

    ME->R_CUST_BOARD->GET_CLASS_VALUE( changing CT_CLASS_VALUE   = LT_CLASS_VALUE
                                                CT_CLASS_VALUE_C = LT_CLASS_VALUE_C ).

*** Assign Numeric Classification Values
    clear: LF_NUM.
    loop at LT_CLASS_VALUE into LS_CLASS_VALUE.
      add 1 to LF_NUM.
      assign component |CLAVA_ACT_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = ABAP_TRUE.
      endif.
      assign component |CLAVA_DESCR_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = LS_CLASS_VALUE-CLASS_DESCR.
      endif.
      assign component |CLAVA_VAL_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = LS_CLASS_VALUE-CLAVA.
      endif.
      assign component |CLAVA_UOM_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = LS_CLASS_VALUE-CLAVA_UOM.
      endif.
    endloop.

*** Assign Character Classification Values
    clear: LF_NUM.
    loop at LT_CLASS_VALUE_C into LS_CLASS_VALUE_C.
      add 1 to LF_NUM.
      assign component |CLAVC_ACT_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = ABAP_TRUE.
      endif.
      assign component |CLAVC_DESCR_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = LS_CLASS_VALUE_C-CLASS_DESCR.
      endif.
      assign component |CLAVC_VAL_{ LF_NUM alpha = out }| of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.
      if SY-SUBRC = 0.
        <F_FIELD> = LS_CLASS_VALUE_C-CLAVC.
      endif.
    endloop.

  endmethod.
  method DO_FREE.

    free: ME->R_CUST_BOARD.

  endmethod.
  method DO_PBO.

    ME->MODIFY_SCREEN( ).

***--------------------------------------------------------------------------------------
*** Set PF-Status
    ME->SET_PF_STATUS( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).

    endcase.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method MODIFY_SCREEN.

    data: LF_STRUC     type FIELDNAME,
          LF_FIELD     type FIELDNAME,
          LF_FIELD1    type FIELDNAME,
          LF_FIELD2    type FIELDNAME,
          LF_FIELD3    type FIELDNAME,
          LF_FIELD_ACT type FIELDNAME.
    field-symbols: <F_FIELD>      type        ANY.

*** Modify Screen
    loop at screen.
***   No Classification Value -> No Output if not active
      if SCREEN-GROUP1 eq 'CLA'.
        clear: LF_STRUC, LF_FIELD, LF_FIELD1, LF_FIELD2, LF_FIELD3.
***     Determine Activation Field
        split SCREEN-NAME at '-' into LF_STRUC LF_FIELD.
        split LF_FIELD at '_' into LF_FIELD1 LF_FIELD2 LF_FIELD3.
        concatenate LF_FIELD1 'ACT' LF_FIELD3 into LF_FIELD_ACT separated by '_'.
        assign component LF_FIELD_ACT of structure ME->S_POPUP_BRDCL_VIS to <F_FIELD>.

***     Deactivate Field -> Not active or not found
        if  SY-SUBRC  ne 0       or
            <F_FIELD> is initial.
          SCREEN-INVISIBLE = 1.
          SCREEN-REQUIRED = 0.
          SCREEN-INPUT = 0.
          SCREEN-ACTIVE = 0.
        endif.
      endif.
      modify screen.
    endloop.

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_P1SS_POPUP_BRDCL'.

  endmethod.
  method START.

    data: LR_POPUP_BRDCL type ref to ZCL_VCXI_P1SS_POPUP_BRDCL.


*** Create Instance
    create object LR_POPUP_BRDCL
      exporting
        IR_CUST_BOARD = IR_CUST_BOARD.

*** Call Popup
    call function 'ZVCXI_P1SS_POPUP_BRDCL_START'
      exporting
        IR_POPUP_BRDCL = LR_POPUP_BRDCL.

*** Free
    LR_POPUP_BRDCL->DO_FREE( ).

  endmethod.
