
class ZCL_VCXI_PCSS_PR_SCORE_MGR definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_SCORE_MGR
  create public .

public section.

  constants C_IPRVT_PC_SCORE_MGR type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSS_SCORE_MGR' ##NO_TEXT.

  methods GET_BOXPA
    redefinition .
protected section.

  data R_CUST_FEFCO type ref to ZCL_VCXI_PCSS_CUST_FEFCO .
  data R_PC_PR_SHEET type ref to ZCL_VCXI_PCSS_PR_SHEET .
  data R_PC_PR_SPEC type ref to ZCL_VCXI_PCSS_PR_SPEC .

  methods GET_FLUTE_INFO
    exporting
      !EF_FLUTE type ZVCXI_PCS_FLUTE
      !EF_FLUTO type ZVCXI_PCSS_FLUTO
    raising
      /VCXI/CX_CKX .

  methods CHECK_CUST_PRSTY
    redefinition .
  methods GET_PTYPE
    redefinition .
  methods GET_SCORES_CUST
    redefinition .
  methods HANDLE_INIT_REFERENCES
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_PR_SCORE_MGR definition
class ZCL_VCXI_PCSS_PR_SCORE_MGR implementation.
method CHECK_CUST_PRSTY.

  data: LF_TPRST  type        ZVCXI_P0SS_TPRST,
        LF_FEFCO  type        ZVCXI_PCS_FEFCO,
        LF_OWNER  type        /VCXI/CKX_STRING,
        LF_SYSOM  type        /VCXI/VKS_SYSOM.

  ME->GET_TPRST_PRSTY( importing EF_TPRST = LF_TPRST
                                 EF_PRSTY = LF_FEFCO ).

  move ME->R_GATE->F_GATKY to LF_OWNER.
  ME->R_GATE->GET_CONFIG_INFO( importing EF_SYSOM = LF_SYSOM ).

*** Check if Customizing is the right one
  if ME->R_CUST_FEFCO is not bound or
     ME->R_CUST_FEFCO->F_TPRST ne LF_TPRST or
     ME->R_CUST_FEFCO->F_PRSTY ne LF_FEFCO or
     ME->R_CUST_FEFCO->F_OWNER ne LF_OWNER or
     ME->R_CUST_FEFCO->F_SYSOM ne LF_SYSOM.

    free: ME->R_CUST_FEFCO.

    if LF_TPRST is not initial and
       LF_FEFCO is not initial.

      try.

          ME->R_CUST_FEFCO = ZCL_VCXI_PCSS_CUST_FEFCO=>GET_FEFCO_INSTANCE( IF_FEFCO = LF_FEFCO
                                                                           IF_OWNER = LF_OWNER
                                                                           IF_SYSOM = LF_SYSOM ).

          move ME->R_CUST_FEFCO to ME->R_CUST_PRSTY.

        catch /VCXI/CX_CKX.
***       Product Style Customizing Reference can't be assigned. Will be checked via status!
          clear: ME->R_CUST_FEFCO, ME->R_CUST_PRSTY.
      endtry.
    endif.
  endif.

endmethod.
method GET_BOXPA.

  check ME->R_PR_SPEC is bound.
  move ME->R_PR_SPEC->GET_BOXPA( ) to RF_BOXPA.

endmethod.
method GET_FLUTE_INFO.

*** Get Flute by Specification
  if ME->R_PC_PR_SPEC is bound.
    EF_FLUTE = ME->R_PC_PR_SPEC->GET_FLUTE( ).
  endif.

*** Get Flute Orientatio from Corrugated Sheet
  if ME->R_PC_PR_SHEET is bound.
    EF_FLUTO = ME->R_PC_PR_SHEET->GET_FLUTO( ).
  endif.

endmethod.
method GET_PTYPE.

  check ME->R_PR_SPEC is bound.
  RF_PTYPE = ME->R_PR_SPEC->GET_PTYPE( ).

endmethod.
method GET_SCORES_CUST.

  data: LT_ELEMENT  type ZVCXI_P0SS_TT_ELEMENT.
  data: LF_PANOR    type ZVCXI_P0SS_PANOR,
        LF_WERKS    type WERKS_D,
        LF_PTYPE    type ZVCXI_P0S_PTYPE,
        LF_JOIPO    type ZVCXI_P0S_JOIPO,
        LF_FLUTE    type ZVCXI_PCS_FLUTE,
        LF_FLUTO    type ZVCXI_PCSS_FLUTO,
        LF_BOXPA    type ZVCXI_P0SS_BOXPA,
        LF_DCONF    type DATS.

  if    ME->R_CUST_FEFCO is bound and
        ME->R_PR_SPEC    is bound.

*** Collect generall Data
    LF_PANOR = ME->GET_PANOR( ).
    LF_JOIPO = ME->GET_JOIPO( ).
    LF_PTYPE = ME->GET_PTYPE( ).

    LF_WERKS = ME->GET_WERKS( ).
    ME->GET_FLUTE_INFO( importing EF_FLUTE = LF_FLUTE
                                  EF_FLUTO = LF_FLUTO ).

    LF_BOXPA = ME->GET_BOXPA( ).
    LF_DCONF = ME->GET_DCONF( ).

*** Collect Elements
    LT_ELEMENT = ME->R_PR_SPEC->GET_PRSTY_ELEMENTS( ).

*** Request Scores
    ME->R_CUST_FEFCO->GET_FEFCO_SCORES( exporting IF_BOXPA   = LF_BOXPA
                                                  IF_PANOR   = LF_PANOR
                                                  IT_ELEMENT = LT_ELEMENT
                                                  IF_WERKS   = LF_WERKS
                                                  IF_PTYPE   = LF_PTYPE
                                                  IF_JOIPO   = LF_JOIPO
                                                  IF_FLUTE   = LF_FLUTE
                                                  IF_FLUTO   = LF_FLUTO
                                                  IF_DATE    = LF_DCONF
                                        importing ET_SCORE   = ET_SCORE
                                                  EF_CHANGED = EF_CHANGED ).

  else.
    EF_CHANGED = ABAP_TRUE.
  endif.

endmethod.
method HANDLE_INIT_REFERENCES.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_SPEC=>C_IPRVT_PC_SPEC
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE        is bound and
       LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PC_PR_SPEC.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PC_PR_SPEC.
  endtry.

  if  ME->R_PC_PR_SPEC is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PCSS_PR_SPEC=>C_IPRVT_PC_SPEC
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

***------------------------------------------------------------------------------------------------
*** Get Sheet Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_SHEET=>C_IPRVT_PC_SHEET
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
       LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PC_PR_SHEET.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PC_PR_SHEET.
  endtry.

  if  ME->R_PC_PR_SHEET is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PCSS_PR_SHEET=>C_IPRVT_PC_SHEET
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

  SUPER->HANDLE_INIT_REFERENCES( ).

endmethod.
