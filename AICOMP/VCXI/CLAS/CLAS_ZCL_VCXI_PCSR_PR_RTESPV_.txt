
class ZCL_VCXI_PCSR_PR_RTESPV definition
  public
  inheriting from ZCL_VCXI_P0SR_PR_RTESPV
  create public .

public section.

  methods CREATE_BL_PRTE
    redefinition .
protected section.

  methods GET_BL_PSTEP_CORR
    changing
      !CT_BL_PSTEP type ZVCXI_XCSR_TT_BL_PSTEP
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_BOARD
    importing
      !IR_GATE_SPEC type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_GATE_BOARD) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SELFD
    importing
      !IR_GATE_SPEC type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_GATE_SELFD) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_BL_PSTEP_SLSC
    changing
      !CT_BL_PSTEP type ZVCXI_XCSR_TT_BL_PSTEP
    raising
      /VCXI/CX_CKX .
  methods GET_BL_PSTEP_WAX
    changing
      !CT_BL_PSTEP type ZVCXI_XCSR_TT_BL_PSTEP
    raising
      /VCXI/CX_CKX .

  methods BUILD_RTE_COMBI_PSTEP
    redefinition .
  methods GET_BL_PSTEP
    redefinition .
  methods GET_BL_PSTEP_CUT
    redefinition .
  methods GET_BL_PSTEP_LAMI
    redefinition .
  methods GET_BL_PSTEP_TAPE
    redefinition .
  methods GET_MFMI
    redefinition .
  methods GET_MFSI
    redefinition .
  methods GET_PRVDR_BASE
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSR_PR_RTESPV definition
class ZCL_VCXI_PCSR_PR_RTESPV implementation.
method BUILD_RTE_COMBI_PSTEP.

  data:  LF_INDEX                  type        I.
  data:  LS_RTE_COMBI_PSTEP_CORR   type        /VCXI/VSMR_S_RTE_COMBI_PSTEP,
         LS_RTE_COMBI_PSTEP_INC    type        /VCXI/VSMR_S_RTE_COMBI_PSTEP.
  data:  LR_RTE_PSTEP              type ref to /VCXI/CL_VSMR_RTE_PSTEP.

*** Super
  RT_RTE_COMBI_PSTEP = SUPER->BUILD_RTE_COMBI_PSTEP( IR_PRTE      = IR_PRTE
                                                     IT_RTE_PSTEP = IT_RTE_PSTEP ).

***--------------------------------------------------------------------------------------
*** Define Combinations
  loop at IT_RTE_PSTEP into LR_RTE_PSTEP.
    move SY-TABIX to LF_INDEX.

    case LR_RTE_PSTEP->R_PSTEP->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Waxing and Taping with Corrugation
      when ZCL_VCXI_PCSR_BL_PSTEP_CORR=>C_IPSTP_CORR or
           ZCL_VCXI_PCSR_BL_PSTEP_WAX=>C_IPSTP_WAX   or
           ZCL_VCXI_P0SR_BL_PSTEP_TAPE=>C_IPSTP_TAPE.
        append LR_RTE_PSTEP to LS_RTE_COMBI_PSTEP_CORR-T_RTE_PSTEP.

***   SL/SC & Previous Cutting needs to be on the same
      when ZCL_VCXI_PCSR_BL_PSTEP_SLSC=>C_IPSTP_SLSC.
        check LS_RTE_COMBI_PSTEP_INC-T_RTE_PSTEP is initial.

***     done in Filter
        append LR_RTE_PSTEP to LS_RTE_COMBI_PSTEP_INC-T_RTE_PSTEP.

        LF_INDEX =  LF_INDEX - 1.
        read table IT_RTE_PSTEP into LR_RTE_PSTEP index LF_INDEX.
        if SY-SUBRC                                             eq 0 and
           LR_RTE_PSTEP->R_PSTEP->/VCXI/IF_CKX_OBJECT~GET_ID( ) eq ZCL_VCXI_PCSR_BL_PSTEP_CUT=>C_IPSTP_PC_CUT.
          insert LR_RTE_PSTEP into LS_RTE_COMBI_PSTEP_INC-T_RTE_PSTEP index 1.
        endif.

    endcase.
  endloop.

***--------------------------------------------------------------------------------------
*** Set Combination
  if lines( LS_RTE_COMBI_PSTEP_CORR-T_RTE_PSTEP ) gt 1.
    append LS_RTE_COMBI_PSTEP_CORR to RT_RTE_COMBI_PSTEP.
  endif.

  if lines( LS_RTE_COMBI_PSTEP_INC-T_RTE_PSTEP ) gt 1.
    append LS_RTE_COMBI_PSTEP_INC to RT_RTE_COMBI_PSTEP.
  endif.

endmethod.
method CREATE_BL_PRTE.

  data:  LR_RTE_PRTE  type ref to /VCXI/CL_VSMR_RTE_PRTE.

  if IR_RTE_PRTE is bound.
    move IR_RTE_PRTE to LR_RTE_PRTE.
  else.
    create object LR_RTE_PRTE.
  endif.

  create object RR_BL_PRTE
    type
      ZCL_VCXI_PCSR_BL_PRTE
    exporting
      IR_RTE_PRTE           = LR_RTE_PRTE
      IR_MFMI               = ME->R_MFMI
      IR_MFSI               = ME->R_MFSI
      IT_CSPLIT             = ME->T_CSPLIT
      IF_DATE               = ME->F_DATE
      IF_LIFNR_REQ          = ME->F_LIFNR_REQ.

endmethod.
method GET_BL_PSTEP.

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Wax
  ME->GET_BL_PSTEP_WAX(   changing CT_BL_PSTEP = RT_BL_PSTEP ).

*** BL PSTEP - Tapes
  ME->GET_BL_PSTEP_TAPE(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

*** BL PSTEP - Corrugation
  ME->GET_BL_PSTEP_CORR(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Chopping
  ME->GET_BL_PSTEP_CHOP(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

*** BL PSTEP - Sawing
  ME->GET_BL_PSTEP_SAW(   changing CT_BL_PSTEP = RT_BL_PSTEP ).

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Lamination
  ME->GET_BL_PSTEP_LAMI(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Printing
  ME->GET_BL_PSTEP_PRINT( changing CT_BL_PSTEP = RT_BL_PSTEP ).

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Slot/Score
  ME->GET_BL_PSTEP_SLSC(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

*** BL PSTEP - Cutting
  ME->GET_BL_PSTEP_CUT(   changing CT_BL_PSTEP = RT_BL_PSTEP ).

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Closing
  ME->GET_BL_PSTEP_CLOS(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

***------------------------------------------------------------------------------------------------
*** BL PSTEP - Grouping
  ME->GET_BL_PSTEP_GRP(   changing CT_BL_PSTEP = RT_BL_PSTEP ).

*** BL PSTEP - Unitizing
  ME->GET_BL_PSTEP_UNIT(  changing CT_BL_PSTEP = RT_BL_PSTEP ).

endmethod.
method GET_BL_PSTEP_CORR.

  data:  LT_GATE_MS_STARCH type        /VCXI/VKSR_TT_GATE,
         LT_GATE_MS_PAPER  type        /VCXI/VKSR_TT_GATE,
         LT_GATE_MS_PRPRP  type        /VCXI/VKSR_TT_GATE,
         LT_GATE_SCORE     type        /VCXI/VKSR_TT_GATE,
         LT_GATE_SCSTR     type        /VCXI/VKSR_TT_GATE,
         LT_PRVDR_CORR     type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SELFD     type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BOARD     type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SCORE     type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SCSTR_MGR type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SCSTR     type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SHTDIM    type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_STARCH type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_PAPER  type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_PRPRP  type ref to /VCXI/CL_VKSR_GATE,
         LR_BL_PSTEP_CORR  type ref to ZCL_VCXI_PCSR_BL_PSTEP_CORR,
         LR_APPDATA        type ref to /VCXI/CL_VKSR_APPDATA.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

*** Find Provider for Sheet Dimension
  LR_GATE_SHTDIM = ME->GET_PRVDR_SHTDIM( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_SHTDIM is bound.
  append LR_GATE_SHTDIM to LT_PRVDR_CORR.

*** Find Provider for Selfdeckling
  LR_GATE_SELFD = ME->GET_PRVDR_SELFD( IR_GATE_SPEC = LR_GATE_SPEC ).
  if LR_GATE_SELFD is bound.
    append LR_GATE_SELFD to LT_PRVDR_CORR.
  endif.

***------------------------------------------------------------------------------------------------
*** Find Provider for Board
  LR_GATE_BOARD = ME->GET_PRVDR_BOARD( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_BOARD is bound.
  append LR_GATE_BOARD to LT_PRVDR_CORR.

*** Find Provider for Starch (of Board)
  LT_GATE_MS_STARCH = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_MS_STARCH=>C_IPRVT_PC_MS_STARCH
                                             IF_INUSE = ABAP_TRUE ).
  loop at LT_GATE_MS_STARCH into LR_GATE_MS_STARCH.
    if LR_GATE_MS_STARCH->IS_IN_LINE( IR_GATE = LR_GATE_BOARD ) eq ABAP_TRUE.
      append LR_GATE_MS_STARCH to LT_PRVDR_CORR.
    endif.
  endloop.

*** Find Provider for Paper (of Board)
  LT_GATE_MS_PAPER = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_MS_PAPER=>C_IPRVT_PC_MS_PAPER
                                            IF_INUSE = ABAP_TRUE ).
  loop at LT_GATE_MS_PAPER into LR_GATE_MS_PAPER.
    if LR_GATE_MS_PAPER->IS_IN_LINE( IR_GATE = LR_GATE_BOARD ) eq ABAP_TRUE.
      append LR_GATE_MS_PAPER to LT_PRVDR_CORR.
    endif.
  endloop.

*** Find Provider for Preprint Paper (of Board)
  LT_GATE_MS_PRPRP = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_MS_PRPRP=>C_IPRVT_PC_MS_PRPRP
                                            IF_INUSE = ABAP_TRUE ).
  loop at LT_GATE_MS_PRPRP into LR_GATE_MS_PRPRP.
    if LR_GATE_MS_PRPRP->IS_IN_LINE( IR_GATE = LR_GATE_SPEC ) eq ABAP_TRUE.
      append LR_GATE_MS_PRPRP to LT_PRVDR_CORR.
    endif.
  endloop.
***------------------------------------------------------------------------------------------------
*** Find Provider for Scores
  LT_GATE_SCORE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_SCORE=>C_IPRVT_P0_SCORE
                                         IF_INUSE = ABAP_TRUE ).
  loop at LT_GATE_SCORE into LR_GATE_SCORE.
    if LR_GATE_SCORE->IS_IN_LINE( IR_GATE = LR_GATE_SPEC ) eq ABAP_TRUE.
      append LR_GATE_SCORE to LT_PRVDR_CORR.
    endif.
  endloop.

***------------------------------------------------------------------------------------------------
*** Find Provider for Score String Manager
  LR_GATE_SCSTR_MGR = ME->GET_PRVDR_SCSTR_MGR( IR_GATE_SPEC = LR_GATE_SPEC ).
  if LR_GATE_SCSTR_MGR is bound.
    append LR_GATE_SCSTR_MGR to LT_PRVDR_CORR.
  endif.

*** Find Provider for Score Strings with Score Definition
  LT_GATE_SCSTR = ME->GET_PRVDR_SCSTR( IR_GATE_SPEC  = LR_GATE_SPEC
                                       IF_CSCOR      = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH
                                       IF_SCSOP      = ZCL_VCXI_PCSS_BL_SCSOP_CORR=>C_SCSOP_CORRUGATION ).

*** Add Operations with Score Definition
  read table LT_GATE_SCSTR into LR_GATE_SCSTR index 1.
  if LR_GATE_SCSTR is not bound.
*** Find Provider for Score Strings without Score Definition
    LT_GATE_SCSTR = ME->GET_PRVDR_SCSTR( IR_GATE_SPEC  = LR_GATE_SPEC
                                         IF_SCSOP      = ZCL_VCXI_PCSS_BL_SCSOP_CORR=>C_SCSOP_CORRUGATION ).

*** Add Operations with Score Definition
    read table LT_GATE_SCSTR into LR_GATE_SCSTR index 1.
  endif.
  if LR_GATE_SCSTR is bound.
    append LR_GATE_SCSTR to LT_PRVDR_CORR.
  endif.

***------------------------------------------------------------------------------------------------
*** Get Application Data
  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

*** Sort all collected Provider
  ME->R_GATE->SORT_GATE( changing CT_GATE = LT_PRVDR_CORR ).

*** Create BL PStep
  create object LR_BL_PSTEP_CORR
    exporting
      IF_DATE    = ME->F_DATE
      IR_APPDATA = LR_APPDATA.
  append LR_BL_PSTEP_CORR to CT_BL_PSTEP.
  LR_BL_PSTEP_CORR->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                  IT_PRVDR = LT_PRVDR_CORR ).

endmethod.
method GET_BL_PSTEP_CUT.

  data:  LT_GATE_MS_SHTPR      type        /VCXI/VKSR_TT_GATE,
         LT_GATE_PRODDIM       type        /VCXI/VKSR_TT_GATE,
         LT_PRVDR              type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC          type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_DCT           type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SHTDIM        type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BOARD         type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_SHTPR      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_PRODDIM       type ref to /VCXI/CL_VKSR_GATE,
         LR_DCT                type ref to ZIF_VCXI_P0SS_DCT,
         LR_BL_PSTEP_CUT       type ref to ZCL_VCXI_PCSR_BL_PSTEP_CUT,
         LR_PR_MS_SHTPR        type ref to ZCL_VCXI_PCSS_PR_MS_SHTPR,
         LR_APPDATA            type ref to /VCXI/CL_VKSR_APPDATA.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

*** Find Provider for DieCut
  LR_GATE_DCT = ME->GET_PRVDR_DCT( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_DCT is bound.
  collect LR_GATE_DCT into LT_PRVDR.

  try.
      move LR_GATE_DCT->R_CLSPR ?to LR_DCT.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

*** Check if Die Cut Type is defined
  check LR_DCT->GET_TDCUT( ) is not initial.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Dimension
  LR_GATE_SHTDIM = ME->GET_PRVDR_SHTDIM( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_SHTDIM is bound.
  collect LR_GATE_SHTDIM into LT_PRVDR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Board
  LR_GATE_BOARD = ME->GET_PRVDR_BOARD( IR_GATE_SPEC = LR_GATE_SPEC ).
  if LR_GATE_BOARD is not bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Procurement
    LT_GATE_MS_SHTPR = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_SHTPR=>C_IPRVT_PC_MS_SHTPR
                                              IF_INUSE  = ABAP_TRUE
                                              IF_SORTED = ABAP_TRUE ).
    loop at LT_GATE_MS_SHTPR into LR_GATE_MS_SHTPR.
*** Check is child of Specification
      if LR_GATE_MS_SHTPR->GET_PARENT( ) eq LR_GATE_SPEC.
        exit.
      else.
        clear LR_GATE_MS_SHTPR.
      endif.
    endloop.

    check LR_GATE_MS_SHTPR is bound.

*** Check if Cutting was already done
    try.
        move LR_GATE_MS_SHTPR->R_CLSPR ?to LR_PR_MS_SHTPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.
    check LR_PR_MS_SHTPR               is bound      and
          LR_PR_MS_SHTPR->GET_FLCUT( ) eq ABAP_FALSE.

    append LR_GATE_MS_SHTPR to LT_PRVDR.

  else.
    append LR_GATE_BOARD    to LT_PRVDR.
  endif.

***------------------------------------------------------------------------------------------------
*** Find Provider for Components Product Dimensions - Product Dimensions
  LT_GATE_PRODDIM = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZIF_VCXI_P0SS_PRODDIM=>C_IPRVT_P0_PRODDIM
                                           IF_INUSE  = ABAP_TRUE
                                           IF_SORTED = ABAP_TRUE ).

  if LT_GATE_PRODDIM is not initial.
    loop at LT_GATE_PRODDIM into LR_GATE_PRODDIM.
      if LR_GATE_PRODDIM->GET_PARENT( ) eq LR_GATE_SPEC.
        collect LR_GATE_PRODDIM into LT_PRVDR.
      endif.
    endloop.
  endif.

*** Get Application Data
  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

***------------------------------------------------------------------------------------------------
*** Create BL PStep
  create object LR_BL_PSTEP_CUT
    exporting
      IF_DATE    = ME->F_DATE
      IR_APPDATA = LR_APPDATA.
  append LR_BL_PSTEP_CUT to CT_BL_PSTEP.
  LR_BL_PSTEP_CUT->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                 IT_PRVDR = LT_PRVDR ).

endmethod.
method GET_BL_PSTEP_LAMI.

  data:  LF_IPSTP              type        /VCXI/VSMC_IPSTP.
  data:  LT_GATE_LAMI          type        /VCXI/VKSR_TT_GATE,
         LT_GATE_MS_SHTPR      type        /VCXI/VKSR_TT_GATE,
         LT_GATE_PSCALE        type        /VCXI/VKSR_TT_GATE,
         LT_PRVDR              type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC          type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_LAMI          type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SHTDIM        type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BASE          type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_SHTPR      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_PSCALE        type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_LAMI            type ref to ZCL_VCXI_P0SS_PR_LAMI,
         LR_BL_PSTEP_LAMI      type ref to ZCL_VCXI_PCSR_BL_PSTEP_LAMI,
         LR_APPDATA            type ref to /VCXI/CL_VKSR_APPDATA.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Lamination
  LT_GATE_LAMI = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_LAMI=>C_IPRVT_P0_LAMI
                                        IF_INUSE  = ABAP_TRUE
                                        IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE_LAMI into LR_GATE_LAMI.
*** Check is child of Specification
    if LR_GATE_LAMI->GET_PARENT( ) ne LR_GATE_SPEC.
      delete LT_GATE_LAMI.
    endif.
  endloop.
  check LT_GATE_LAMI is not initial.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Dimension
  LR_GATE_SHTDIM = ME->GET_PRVDR_SHTDIM( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_SHTDIM is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Base
  LR_GATE_BASE = ME->GET_PRVDR_BASE( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_BASE is bound.

***------------------------------------------------------------------------------------------------
*** Get Application Data
  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

***------------------------------------------------------------------------------------------------
  loop at LT_GATE_LAMI into LR_GATE_LAMI.
*** Collect Provider
    free LT_PRVDR.
    collect LR_GATE_SPEC   into LT_PRVDR.
    collect LR_GATE_LAMI   into LT_PRVDR.
    collect LR_GATE_SHTDIM into LT_PRVDR.
    collect LR_GATE_BASE   into LT_PRVDR.

*** Find Provider for Purchase Sheet
    LT_GATE_MS_SHTPR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_MS_SHTPR=>C_IPRVT_P0_MS_SHTPR
                                              IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE_MS_SHTPR into LR_GATE_MS_SHTPR.
***   Check is child of Lamination
      if LR_GATE_MS_SHTPR->GET_PARENT( ) eq LR_GATE_LAMI.
        collect LR_GATE_MS_SHTPR into LT_PRVDR.
        exit.
      else.
        clear LR_GATE_MS_SHTPR.
      endif.
    endloop.

*** Find Provider for Price Scale
    if LR_GATE_MS_SHTPR is bound.
      LT_GATE_PSCALE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE
                                              IF_INUSE  = ABAP_TRUE
                                              IF_SORTED = ABAP_TRUE ).
      loop at LT_GATE_PSCALE into LR_GATE_PSCALE.
***     Check is child of Lamination
        if LR_GATE_PSCALE->GET_PARENT( ) eq LR_GATE_MS_SHTPR.
          collect LR_GATE_PSCALE into LT_PRVDR.
        endif.
      endloop.
    endif.


*** Get Reference to Lamination
    try.
        clear LR_PR_LAMI.
        move LR_GATE_LAMI->R_CLSPR ?to LR_PR_LAMI.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_LAMI.
    endtry.
    check LR_PR_LAMI is bound.

*** Identify PStep ID
    case LR_PR_LAMI->GET_TLAMI( ).
      when ZCL_VCXI_P0SS_CUST_LAMI=>C_TLAMI_RTS. "Inline
        move ZCL_VCXI_P0SR_BL_PSTEP_LAMI=>C_IPSTP_P0_LAMI_RTS to LF_IPSTP.
      when ZCL_VCXI_P0SS_CUST_LAMI=>C_TLAMI_STS. "Sheet
        move ZCL_VCXI_P0SR_BL_PSTEP_LAMI=>C_IPSTP_P0_LAMI_STS to LF_IPSTP.
    endcase.

*** Create BL PStep
    create object LR_BL_PSTEP_LAMI
      exporting
        IF_DATE    = ME->F_DATE
        IR_APPDATA = LR_APPDATA
        IF_IPSTP   = LF_IPSTP.
    append LR_BL_PSTEP_LAMI to CT_BL_PSTEP.
    LR_BL_PSTEP_LAMI->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                    IT_PRVDR = LT_PRVDR ).
  endloop.

endmethod.
method GET_BL_PSTEP_SLSC.

  data:  LT_GATE_MS_SHTPR  type        /VCXI/VKSR_TT_GATE,
         LT_GATE_SCSTR     type        /VCXI/VKSR_TT_GATE,
         LT_PRVDR_SLSC     type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SHTDIM    type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BOARD     type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_SHTPR  type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SCSTR     type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_SCSTR       type ref to ZCL_VCXI_P0SS_PR_SCSTR,
         LR_PR_MS_SHTPR    type ref to ZCL_VCXI_PCSS_PR_MS_SHTPR,
         LR_BL_PSTEP_SLSC  type ref to ZCL_VCXI_PCSR_BL_PSTEP_SLSC,
         LR_APPDATA        type ref to /VCXI/CL_VKSR_APPDATA.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

*** Find Provider for Sheet Dimensions
  LR_GATE_SHTDIM = ME->GET_PRVDR_SHTDIM( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_SHTDIM is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Board
  LR_GATE_BOARD = ME->GET_PRVDR_BOARD( IR_GATE_SPEC = LR_GATE_SPEC ).
  if LR_GATE_BOARD is not bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Procurement
    LT_GATE_MS_SHTPR = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_SHTPR=>C_IPRVT_PC_MS_SHTPR
                                              IF_INUSE  = ABAP_TRUE
                                              IF_SORTED = ABAP_TRUE ).
    loop at LT_GATE_MS_SHTPR into LR_GATE_MS_SHTPR.
*** Check is child of Specification
      if LR_GATE_MS_SHTPR->GET_PARENT( ) eq LR_GATE_SPEC.
        exit.
      else.
        clear LR_GATE_MS_SHTPR.
      endif.
    endloop.

    check LR_GATE_MS_SHTPR is bound.

*** Check if Slot/Score was already done
    try.
        move LR_GATE_MS_SHTPR->R_CLSPR ?to LR_PR_MS_SHTPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.
    check LR_PR_MS_SHTPR               is bound      and
          LR_PR_MS_SHTPR->GET_FSLSC( ) eq ABAP_FALSE.
  endif.

***------------------------------------------------------------------------------------------------
*** Find Provider for Score Strings with Slot/Score Definition
  LT_GATE_SCSTR = ME->GET_PRVDR_SCSTR( IR_GATE_SPEC  = LR_GATE_SPEC
                                       IF_SCSOP      = ZCL_VCXI_PCSS_BL_SCSOP_SLOT=>C_SCSOP_SLOT_SCORE ).


***------------------------------------------------------------------------------------------------
*** Add Operations with Score Definition
  loop at LT_GATE_SCSTR into LR_GATE_SCSTR.
    try.
        move LR_GATE_SCSTR->R_CLSPR ?to LR_PR_SCSTR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear LR_PR_SCSTR.
    endtry.
    check LR_PR_SCSTR is bound.

*** No Production Step if Score Category is not defined
    check LR_PR_SCSTR->GET_CSCOR( ) is not initial.

*** Collect all Provider
    free: LT_PRVDR_SLSC.
    append LR_GATE_SPEC     to LT_PRVDR_SLSC.
    append LR_GATE_SHTDIM   to LT_PRVDR_SLSC.
    if LR_GATE_BOARD is bound.
      append LR_GATE_BOARD    to LT_PRVDR_SLSC.
    endif.
    if LR_GATE_MS_SHTPR is bound.
      append LR_GATE_MS_SHTPR to LT_PRVDR_SLSC.
    endif.
    append LR_GATE_SCSTR to LT_PRVDR_SLSC.

*** Get Application Data
    LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

*** Create BL PStep
    create object LR_BL_PSTEP_SLSC
      exporting
        IF_DATE    = ME->F_DATE
        IR_APPDATA = LR_APPDATA.
    append LR_BL_PSTEP_SLSC to CT_BL_PSTEP.
    LR_BL_PSTEP_SLSC->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                    IT_PRVDR = LT_PRVDR_SLSC ).
  endloop.

endmethod.
method GET_BL_PSTEP_TAPE.

  data:  LT_GATE_BOARD     type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BOARD     type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

*** Find Provider for Board
  LR_GATE_BOARD = ME->GET_PRVDR_BOARD( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_BOARD is bound.

***------------------------------------------------------------------------------------------------
*** Generate Standard Tape Production Step
  SUPER->GET_BL_PSTEP_TAPE( changing CT_BL_PSTEP = CT_BL_PSTEP ).

endmethod.
method GET_BL_PSTEP_WAX.

  data:  LT_GATE_MS_WAX    type        /VCXI/VKSR_TT_GATE,
         LT_PRVDR_WAX      type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BOARD     type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_WAX    type ref to /VCXI/CL_VKSR_GATE,
         LR_BL_PSTEP_WAX   type ref to ZCL_VCXI_PCSR_BL_PSTEP_WAX,
         LR_APPDATA        type ref to /VCXI/CL_VKSR_APPDATA.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

*** Find Provider for Board
  LR_GATE_BOARD = ME->GET_PRVDR_BOARD( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_BOARD is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Wax
  LT_GATE_MS_WAX = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_WAX=>C_IPRVT_PC_MS_WAX
                                          IF_INUSE  = ABAP_TRUE
                                          IF_SORTED = ABAP_TRUE ).
  check LT_GATE_MS_WAX is not initial.
  loop at LT_GATE_MS_WAX into LR_GATE_MS_WAX.
    if LR_GATE_MS_WAX->IS_IN_LINE( IR_GATE = LR_GATE_BOARD ) eq ABAP_TRUE.
      append LR_GATE_MS_WAX to LT_PRVDR_WAX.
    endif.
  endloop.
  check LT_PRVDR_WAX is not initial.

*** Get Application Data
  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

***------------------------------------------------------------------------------------------------
*** Create BL PStep
  create object LR_BL_PSTEP_WAX
         exporting IF_DATE    = ME->F_DATE
                   IR_APPDATA = LR_APPDATA.
  append LR_BL_PSTEP_WAX to CT_BL_PSTEP.
  LR_BL_PSTEP_WAX->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                 IT_PRVDR = LT_PRVDR_WAX ).

endmethod.
method GET_MFMI.

  data: LS_MFMI_P type          ZVCXI_PCSR_S_MFMI_P,
        LS_PCDIM  type          ZVCXI_P0SP_S_PCDIM,
        LS_CALIP  type          ZVCXI_P0SS_S_CALIP,
        LS_EVQTY  type          ZVCXI_XCSR_S_EVQTY,
        LS_KAUSF  type          ZVCXI_XCSP_S_KAUSF,
        LS_BAWGT  type          ZVCXI_P0S_S_BAWGT,
        LS_BAWGP  type          ZVCXI_P0S_S_BAWGP.
  data: LT_GATE        type          /VCXI/VKSR_TT_GATE,
        LT_GATE_SHTDIM type          /VCXI/VKSR_TT_GATE.
  data: LR_GATE        type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SPEC   type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SHTPR  type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SHTDIM type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_MS_SHTPR type ref to   ZCL_VCXI_PCSS_PR_MS_SHTPR,
        LR_SHTDIM      type ref to   ZIF_VCXI_P0SS_SHTDIM,
        LR_PR_PSCALE   type ref to   ZCL_VCXI_XCS_PR_PSCALE.
  field-symbols: <T_MFMI>   type standard table,
                 <S_PSCALE> type          ZVCXI_XCSR_S_PSCALE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).

  check LR_GATE_SPEC is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Procurement
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_MS_SHTPR=>C_IPRVT_PC_MS_SHTPR
                                   IF_INUSE = ABAP_TRUE ).
  check LT_GATE is not initial.

  loop at LT_GATE into LR_GATE_SHTPR.
*** Check is child of Specification
    check LR_GATE_SHTPR->GET_PARENT( ) eq LR_GATE_SPEC.
    try.
        move LR_GATE_SHTPR->R_CLSPR ?to LR_PR_MS_SHTPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.
    exit.
  endloop.

  check LR_PR_MS_SHTPR is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Dimension
  LT_GATE_SHTDIM = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_P0SS_SHTDIM=>C_IPRVT_P0_SHTDIM
                                          IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE_SHTDIM into LR_GATE_SHTDIM.
*** Check is child of Specification
    check LR_GATE_SHTDIM->GET_PARENT( ) eq LR_GATE_SPEC.
    try.
        move LR_GATE_SHTDIM->R_CLSPR ?to LR_SHTDIM.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_SHTDIM.
    endtry.
    exit.
  endloop.

  check LR_SHTDIM is bound.

*** Create Data Reference
  create data RR_MFMI type table of ZVCXI_PCSR_S_MFMI_P.
  assign RR_MFMI->* to <T_MFMI>.

  move LR_PR_MS_SHTPR->GET_MATNR( ) to LS_MFMI_P-MATNR.
  move LR_PR_MS_SHTPR->GET_PURCH( ) to LS_MFMI_P-PURCH.

  move ME->GET_EVQTY( ) to LS_EVQTY.
  LS_KAUSF = LR_PR_MS_SHTPR->GET_KAUSF( IS_EVQTY = LS_EVQTY ).
  move-corresponding LS_KAUSF to LS_MFMI_P.

  move 100                          to LS_MFMI_P-MFISP.
  move '%'                          to LS_MFMI_P-MFISP_UOM.

  move 1                            to LS_MFMI_P-MFICF.
  move 1                            to LS_MFMI_P-MFICP.

  move LR_PR_MS_SHTPR->GET_SANKA( ) to LS_MFMI_P-SANKA.

  LS_PCDIM = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_BFDIV ).

  move LS_PCDIM-PCLEN               to LS_MFMI_P-PCLEN.
  move LS_PCDIM-PCLEN_UOM           to LS_MFMI_P-PCLEN_UOM.

  move LS_PCDIM-PCWID               to LS_MFMI_P-PCWID.
  move LS_PCDIM-PCWID_UOM           to LS_MFMI_P-PCWID_UOM.

  LS_CALIP = LR_PR_MS_SHTPR->GET_CALIP( ).
  move LS_CALIP-CALIP               to LS_MFMI_P-PCHEI.
  move LS_CALIP-CALIP_UOM           to LS_MFMI_P-PCHEI_UOM.

  LS_BAWGT = LR_PR_MS_SHTPR->GET_BAWGT( ).
  move LS_BAWGT-BAWGT               to LS_MFMI_P-BAWGT.
  move LS_BAWGT-BAWGT_UOM           to LS_MFMI_P-BAWGT_UOM.

  LS_BAWGP = LR_PR_MS_SHTPR->GET_BAWGP( ).
  move LS_BAWGP-BAWGP               to LS_MFMI_P-BAWGP.
  move LS_BAWGP-BAWGP_UOM           to LS_MFMI_P-BAWGP_UOM.

  move LS_PCDIM-PCUPS               to LS_MFMI_P-PCUPS.

  move 'A'                          to LS_MFMI_P-PCDIR.

  move 'ZVCXI_P0_SHEET'             to LS_MFMI_P-PCTYP.

  move LR_PR_MS_SHTPR->GET_FLUTE( ) to LS_MFMI_P-FLUTE.

  move LR_PR_MS_SHTPR->GET_LIFNR( ) to LS_MFMI_P-LIFNR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Price Scale
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    try.
***     Check Scale is part of Sheet Procurement
        check LR_GATE->GET_PARENT( ) eq LR_GATE_SHTPR.
        move LR_GATE->R_CLSPR ?to LR_PR_PSCALE.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_PSCALE.
    endtry.
    check LR_PR_PSCALE is bound.

*** Add Price Scales
    append value #( ISVCE   = LR_GATE->F_ID
                    S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                    S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                    S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                  ) to LS_MFMI_P-T_PSCALE.
  endloop.

*** Append Material Flow Material to Data Reference
  append LS_MFMI_P to <T_MFMI>.

endmethod.
method GET_MFSI.

  data:          LS_MFSI_P             type          ZVCXI_PCSR_S_MFSI_P,
                 LS_PCDIM              type          ZVCXI_P0SP_S_PCDIM.
  data:          LT_GATE_COMP_SE       type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE_SPEC          type ref to   /VCXI/CL_VKSR_GATE,
                 LR_GATE_COMP_SE       type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_COMP_SE         type ref to   ZCL_VCXI_PCSS_PR_COMP_SE.
  field-symbols: <T_MFSI>              type standard table.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

***------------------------------------------------------------------------------------------------
*** Find Components SE as Parent of Specification
  LT_GATE_COMP_SE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_COMP_SE=>C_IPRVT_PC_COMP_SE
                                           IF_INUSE  = ABAP_TRUE ).

  loop at LT_GATE_COMP_SE into LR_GATE_COMP_SE.
    check LR_GATE_COMP_SE eq LR_GATE_SPEC->GET_PARENT( ).
    try.
        move LR_GATE_COMP_SE->R_CLSPR ?to LR_PR_COMP_SE.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_COMP_SE.
    endtry.
  endloop.
  check LR_PR_COMP_SE is bound.

***------------------------------------------------------------------------------------------------
*** Create Data Reference
  create data RR_MFSI type table of ZVCXI_PCSR_S_MFSI_P.
  assign RR_MFSI->* to <T_MFSI>.

*** Get PC Dimensions
  LS_PCDIM = LR_PR_COMP_SE->ZIF_VCXI_P0SS_PRODDIM~GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_PRODDIM=>C_POOTI_PRODUCT ).
  move-corresponding LS_PCDIM to LS_MFSI_P.

*** Get Flute
  move LR_PR_COMP_SE->GET_FLUTE( ) to LS_MFSI_P-FLUTE.

*** Append Material Flow SFG to Data Reference
  append LS_MFSI_P to <T_MFSI>.

endmethod.
method GET_PRVDR_BASE.

  data:  LT_GATE  type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE  type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Board
  RR_GATE_BASE = ME->GET_PRVDR_BOARD( IR_GATE_SPEC = IR_GATE_SPEC ).

***------------------------------------------------------------------------------------------------
  if RR_GATE_BASE is not bound.
*** Find Provider for Sheet Procurement
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_SHTPR=>C_IPRVT_PC_MS_SHTPR
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
***   Check is child of Specification
      if LR_GATE->GET_PARENT( ) eq IR_GATE_SPEC.
        move LR_GATE to RR_GATE_BASE.
        exit.
      endif.
    endloop.
  endif.

endmethod.
method GET_PRVDR_BOARD.

  data:  LF_ICONT       type        ZVCXI_P0S_ICONT,
         LF_MBOAR       type        ZVCXI_PCSS_MBOAR.
  data:  LT_GATE_BOARD  type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_BOARD  type ref to /VCXI/CL_VKSR_GATE,
         LR_ICONT       type ref to ZIF_VCXI_P0SS_ICONT,
         LR_PR_BOARD    type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** Get Specificatin Reference
  try.
      move IR_GATE_SPEC->R_CLSPR ?to LR_ICONT.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_ICONT.
  endtry.
  check LR_ICONT is bound.
  move LR_ICONT->GET_ICONT( ) to LF_ICONT.

  LT_GATE_BOARD = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                         IF_INUSE = ABAP_TRUE ).
  loop at LT_GATE_BOARD into LR_GATE_BOARD.
*** Check is child of Specification
    if LR_GATE_BOARD->GET_PARENT( ) eq IR_GATE_SPEC.

***   Check Board Mode against Context
      try.
          move LR_GATE_BOARD->R_CLSPR ?to LR_PR_BOARD.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_BOARD, LR_GATE_BOARD.
      endtry.
      check LR_PR_BOARD is bound.
      move LR_PR_BOARD->GET_MBOAR( ) to LF_MBOAR.

      if ( LF_MBOAR eq ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S   and
           LF_ICONT eq ZCL_VCXI_PCSS_PR_SPEC=>C_ICONT_SALES    ) or
         ( LF_MBOAR eq ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P   and
           LF_ICONT eq ZCL_VCXI_PCSS_PR_SPEC=>C_ICONT_PROD     ) .
        exit.
      else.
        clear LR_GATE_BOARD.
      endif.
    else.
      clear LR_GATE_BOARD.
    endif.
  endloop.
  check LR_GATE_BOARD is bound.
  move LR_GATE_BOARD to RR_GATE_BOARD.

endmethod.
method GET_PRVDR_SELFD.

  data:  LT_GATE_SELFD  type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SELFD  type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Selfdeckling
  LT_GATE_SELFD = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_PCSS_SELFD=>C_IPRVT_PC_SELFD
                                         IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE_SELFD into LR_GATE_SELFD.
*** Check is child of Specification
    check LR_GATE_SELFD->GET_PARENT( ) eq IR_GATE_SPEC.
    move LR_GATE_SELFD to RR_GATE_SELFD.
    exit.
  endloop.


endmethod.
