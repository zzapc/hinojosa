
class ZCL_VCXI_XCSUC_GRID_CP_PMATY definition
  public
  inheriting from ZCL_VCXI_XCSUC_GRID
  create public .

public section.

  data F_GPSUN type ZVCXI_XCSU_GPSUN .

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME optional
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_CUSTOMIZING type ref to OBJECT
      !IR_S_CONTAINER type ref to CL_GUI_CONTAINER optional
    raising
      /VCXI/CX_CKX .

  methods REFRESH_GRID
    redefinition .
protected section.

  data R_CPACK type ref to ZCL_VCXI_XCSUC_CPACK .

  methods CREATE_TITLE
    exceptions
      /VCXI/CX_CKX .
  methods HANDLE_ONF4
    for event ONF4 of CL_GUI_ALV_GRID
    importing
      !E_FIELDNAME
      !E_FIELDVALUE
      !ES_ROW_NO
      !ER_EVENT_DATA
      !ET_BAD_CELLS
      !E_DISPLAY .
  methods GET_PAMAI_PMATY
    importing
      !IF_PAMAI type ZVCXI_XCSU_PAMAI
      !IF_PMATY type ZVCXI_XCSU_PMATY
    exporting
      !EF_PAMAI type ZVCXI_XCSU_PAMAI
      !EF_PMATY type ZVCXI_XCSU_PMATY
    raising
      /VCXI/CX_CKX .
  methods CHECK_SELECTION
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_USER_COMMAND
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods HANDLE_DATA_CHANGED
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods INIT_GRID
    redefinition .
  methods SET_EVENT
    redefinition .
private section.

  constants C_FUNC_ADD type UI_FUNC value 'ADD'. "#EC NOTEXT
  constants C_FUNC_COPY type UI_FUNC value 'COPY'. "#EC NOTEXT
  constants C_FUNC_DEL type UI_FUNC value 'DELETE'. "#EC NOTEXT
endclass. "ZCL_VCXI_XCSUC_GRID_CP_PMATY definition
class ZCL_VCXI_XCSUC_GRID_CP_PMATY implementation.
method CHECK_SELECTION.

  data: LT_CELL type LVC_T_CELL,
        LT_ROW  type LVC_T_ROW.

  ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
  ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

*** Delete is only available if Cells are selected
  if lines( LT_CELL ) gt 0 or
     lines( LT_ROW )  gt 0.
    move ABAP_TRUE to RF_OKAY.
  else.
    move ABAP_FALSE to RF_OKAY.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( exporting IF_TABNAME        = 'ZVCXI_XCSUC_S_CPACK_PMATY_GRID'
                                IF_CONTAINER_NAME = IF_CONTAINER_NAME
                                IR_CUSTOMIZING    = IR_CUSTOMIZING
                                IR_S_CONTAINER    = IR_S_CONTAINER ).

*** Try to Assign Customizing Reference
  try.
      move IR_CUSTOMIZING ?to ME->R_CPACK.
    catch CX_SY_MOVE_CAST_ERROR.
***   Packaging Code Customizing Reference can't be assigned.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCSUC'
          IF_MSGNO = '102' ).
  endtry.

  check ME->R_CPACK is bound.
  ME->F_LOCKED = ME->R_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).

endmethod.
method CREATE_TITLE.

  data: LS_CPACK_SHUTY type ZVCXI_XCSUC_S_CPACK_SHUTY.

  clear: ME->F_DESCR.

  check ME->F_GPSUN is not initial.
  read table ME->R_CPACK->T_CPACK_SHUTY into LS_CPACK_SHUTY with key GPSUN = ME->F_GPSUN.
  if SY-SUBRC = 0.
    concatenate LS_CPACK_SHUTY-WERKS LS_CPACK_SHUTY-SHUTY LS_CPACK_SHUTY-SHUNT
           into ME->F_DESCR separated by ' / '.
  else.
    clear: ME->F_GPSUN.
  endif.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
***   Set Packaging Code and GUID to only technical Fields
      when 'GPSUN'.
        move ABAP_TRUE to <S_FCAT>-TECH.

      when 'PAMAI' or 'PMATY' or 'CONSC' or 'PMATN'.
        if ME->F_LOCKED eq ABAP_TRUE.
          move ABAP_TRUE to <S_FCAT>-EDIT.
        endif.
    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_CPACK_PMATY_GRID  type          ZVCXI_XCSUC_S_CPACK_PMATY_GRID,
                 LS_CPACK_PMATY       type          ZVCXI_XCSUC_S_CPACK_PMATY.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

  free: <T_DATA>.

  check ME->F_GPSUN is not initial.

*** --------------------------------------------------------------------------------------------
*** Get all Packaging Code Packaging Materials Depending on Packaging Code - Shipping Unit Entry
  loop at ME->R_CPACK->T_CPACK_PMATY into LS_CPACK_PMATY
  where GPSUN = ME->F_GPSUN.

    clear: LS_CPACK_PMATY_GRID.
    move-corresponding LS_CPACK_PMATY to LS_CPACK_PMATY_GRID.

*** --------------------------------------------------------------------------------------------
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.
    move-corresponding LS_CPACK_PMATY_GRID to <S_DATA>.
  endloop.

endmethod.
method GET_LAYOUT.

  RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Toolbar to Activ
  move ABAP_FALSE  to RS_LAYOUT-NO_TOOLBAR.
  move 'A'         to RS_LAYOUT-SEL_MODE.
  move ME->F_DESCR to RS_LAYOUT-GRID_TITLE.

endmethod.
method GET_PAMAI_PMATY.

  data:          LF_RETURN      type                   ABAP_BOOL,
                 LF_EXIT        type                   ABAP_BOOL,
                 LF_PAMAI       type                   ZVCXI_XCSU_PAMAI,
                 LF_PMATY       type                   ZVCXI_XCSU_PMATY.
  data:          LS_CPACK_SHUTY type                   ZVCXI_XCSUC_S_CPACK_SHUTY.
  data:          LT_PMATY       type                   ZVCXI_XCSU_TT_PMATY,
                 LT_SVAL        type standard table of SVAL.
  data:          LR_CUST_SHIPU  type ref to            ZCL_VCXI_XCSU_CUST_SHIPU.
  field-symbols: <S_FIELD>      type                   SVAL.

  move IF_PAMAI to LF_PAMAI.
  move IF_PMATY to LF_PMATY.

*** Get Shipping Customizing
  LR_CUST_SHIPU = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_INSTANCE( ).

***----------------------------------------------------------------------
*** Create PopUp for User-Entry
  append initial line to LT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME   = 'ZVCXI_XCS_TD372'.
  <S_FIELD>-FIELDNAME = 'PAMAI'.
  <S_FIELD>-FIELD_OBL = ABAP_TRUE.
  append initial line to LT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME   = 'ZVCXI_XCS_TD372'.
  <S_FIELD>-FIELDNAME = 'PMATY'.
  <S_FIELD>-FIELD_OBL = ABAP_TRUE.

  do.

    call function 'POPUP_GET_VALUES'
      exporting
        POPUP_TITLE     = 'Please Define ne Packaging Material Information and Type'(A10)
      importing
        RETURNCODE      = LF_RETURN
      tables
        FIELDS          = LT_SVAL
      exceptions
        ERROR_IN_FIELDS = 1
        others          = 2.
    if SY-SUBRC ne 0 or
      LF_RETURN eq 'A'.
      clear LT_SVAL.
      LF_EXIT = ABAP_TRUE.
      exit.
    endif.

    check LT_SVAL is not initial.
    loop at LT_SVAL assigning <S_FIELD>.
      case <S_FIELD>-FIELDNAME.
        when 'PAMAI'.
          move <S_FIELD>-VALUE to EF_PAMAI.
        when 'PMATY'.
          move <S_FIELD>-VALUE to EF_PMATY.
      endcase.
    endloop.

*** Check if all needed fields are filled
    check ( EF_PAMAI ne LF_PAMAI or
            EF_PMATY ne LF_PMATY ) or
          ( EF_PAMAI ne LF_PAMAI and
            EF_PMATY ne LF_PMATY ).

*** Check Values are Valid
*** Check Packaging Material Information
    read table ZCL_VCXI_XCSUC_CPACK=>T_PAMAI with key PAMAI = EF_PAMAI transporting no fields.
    check SY-SUBRC = 0.

*** Check Packaging Material Type
    read table ME->R_CPACK->T_CPACK_SHUTY into LS_CPACK_SHUTY with key GPSUN = ME->F_GPSUN.
    LT_PMATY = LR_CUST_SHIPU->GET_PMATY_FOR_SHUNT( IF_SHUNT = LS_CPACK_SHUTY-SHUNT ).
    read table LT_PMATY with key PMATY = EF_PMATY transporting no fields.
    check SY-SUBRC = 0.

    exit.

  enddo.

*** Cancled action
  if LF_EXIT = ABAP_TRUE.
    exit.
  endif.

endmethod.
method HANDLE_DATA_CHANGED.

  data:          LF_INDEX                  type          I,
                 LF_DO_CHECK               type          ABAP_BOOL,
                 LF_DO_DELETE              type          ABAP_BOOL,
                 LF_PAMAI                  type          ZVCXI_XCSU_PAMAI,
                 LF_PMATY                  type          ZVCXI_XCSU_PMATY,
                 LF_CONSC                  type          ZVCXI_XCSU_CONSC,
                 LF_PMATN                  type          ZVCXI_XCSU_PMATN.
  data:          LS_CPACK_PMATY_GRID       type          ZVCXI_XCSUC_S_CPACK_PMATY_GRID,
                 LS_CPACK_SHUTY            type          ZVCXI_XCSUC_S_CPACK_SHUTY,
                 LS_CPACK_PMATY            type          ZVCXI_XCSUC_S_CPACK_PMATY,
                 LS_GOOD_CELLS             type          LVC_S_MODI.
  data:          LT_PMATY                  type          ZVCXI_XCSU_TT_PMATY,
                 LT_CONSC                  type          ZVCXI_XCSU_TT_CONSC,
                 LT_PMATN                  type          ZVCXI_XCSU_TT_PMATN.
  data:          LR_CX_CKX                 type ref to   /VCXI/CX_CKX,
                 LR_CUST_SHIPU             type ref to   ZCL_VCXI_XCSU_CUST_SHIPU.
  field-symbols: <T_DATA>                  type standard table,
                 <S_DATA>                  type          any,
                 <F_FIELD>                 type          any.


  try.

      SUPER->HANDLE_DATA_CHANGED( exporting ER_DATA_CHANGED = ER_DATA_CHANGED
                                            E_ONF4          = E_ONF4
                                            E_ONF4_BEFORE   = E_ONF4_BEFORE
                                            E_ONF4_AFTER    = E_ONF4_AFTER
                                            E_UCOMM         = E_UCOMM ).
***   Get Shipping Customizing
      LR_CUST_SHIPU = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_INSTANCE( ).


***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        LF_INDEX = SY-TABIX.
        clear: LF_DO_DELETE.

        read table ER_DATA_CHANGED->MT_GOOD_CELLS with key ROW_ID = LF_INDEX transporting no fields.
        check SY-SUBRC = 0.


        move-corresponding <S_DATA> to LS_CPACK_PMATY_GRID.

*** ----------------------------------------------------------------------
***     Check Packaging Material Information
        clear: LS_GOOD_CELLS, LF_DO_CHECK.
        read table ER_DATA_CHANGED->MT_GOOD_CELLS with key ROW_ID    = LF_INDEX
                                                           FIELDNAME = 'PAMAI'
                                                      into LS_GOOD_CELLS.
        if SY-SUBRC = 0.
          move LS_GOOD_CELLS-VALUE to LF_PAMAI.
          move ABAP_TRUE to LF_DO_CHECK.
        endif.

        if LF_DO_CHECK eq ABAP_TRUE.
          read table ZCL_VCXI_XCSUC_CPACK=>T_PAMAI with key PAMAI = LF_PAMAI transporting no fields.

          if SY-SUBRC ne 0.
***         Add Protocol - Check Packaging Material Information. It is not Valid.
            ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY( exporting I_MSGID     = 'ZVCXI_XCSUC'
                                                           I_MSGTY     = 'E'
                                                           I_MSGNO     = '106'
                                                           I_FIELDNAME = 'PAMAI'
                                                           I_ROW_ID    = LF_INDEX ).

          else.
            move ABAP_TRUE to LF_DO_DELETE.
          endif.
        endif.

*** ----------------------------------------------------------------------
***     Check Packaging Material Type
        clear: LS_GOOD_CELLS, LF_DO_CHECK.
        read table ER_DATA_CHANGED->MT_GOOD_CELLS with key ROW_ID    = LF_INDEX
                                                           FIELDNAME = 'PMATY'
                                                      into LS_GOOD_CELLS.
        if SY-SUBRC = 0.
          move LS_GOOD_CELLS-VALUE to LF_PMATY.
          move ABAP_TRUE to LF_DO_CHECK.
        endif.

        if LF_DO_CHECK eq ABAP_TRUE.
          read table ME->R_CPACK->T_CPACK_SHUTY into LS_CPACK_SHUTY with key GPSUN = ME->F_GPSUN.
          LT_PMATY = LR_CUST_SHIPU->GET_PMATY_FOR_SHUNT( IF_SHUNT = LS_CPACK_SHUTY-SHUNT ).
          read table LT_PMATY with key PMATY = LF_PMATY transporting no fields.
          if SY-SUBRC ne 0 or
             LF_PMATY is initial.
***         Add Protocol - Packaging Material Type is not Valid for Shipping Unit.
            ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY( exporting I_MSGID     = 'ZVCXI_XCSUC'
                                                           I_MSGTY     = 'E'
                                                           I_MSGNO     = '107'
                                                           I_FIELDNAME = 'PMATY'
                                                           I_ROW_ID    = LF_INDEX ).

***         Check next Entry
            continue.
          endif.
        endif.


*** ----------------------------------------------------------------------
***     Check Consumption Scheme
        clear: LS_GOOD_CELLS, LF_DO_CHECK.
        read table ER_DATA_CHANGED->MT_GOOD_CELLS with key ROW_ID    = LF_INDEX
                                                           FIELDNAME = 'CONSC'
                                                      into LS_GOOD_CELLS.
        if SY-SUBRC = 0.
          move LS_GOOD_CELLS-VALUE to LF_CONSC.
          move ABAP_TRUE to LF_DO_CHECK.
        endif.

        if LF_DO_CHECK eq ABAP_TRUE.
          LT_CONSC = LR_CUST_SHIPU->GET_CONSC_FOR_PMATY( IF_PMATY = LS_CPACK_PMATY_GRID-PMATY ).
          read table LT_CONSC with key CONSC = LF_CONSC transporting no fields.
          if SY-SUBRC ne 0 or
             LF_CONSC is initial.
***         Add Protocol - Consumption Scheme is not Valid for Packaging Material Type.
            ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY( exporting I_MSGID     = 'ZVCXI_XCSUC'
                                                           I_MSGTY     = 'E'
                                                           I_MSGNO     = '108'
                                                           I_FIELDNAME = 'CONSC'
                                                           I_ROW_ID    = LF_INDEX ).
          endif.
        endif.

*** ----------------------------------------------------------------------
***     Check Packaging Material
        clear: LS_GOOD_CELLS, LF_DO_CHECK.
        read table ER_DATA_CHANGED->MT_GOOD_CELLS with key ROW_ID    = LF_INDEX
                                                           FIELDNAME = 'PMATN'
                                                      into LS_GOOD_CELLS.
        if SY-SUBRC = 0.
          move LS_GOOD_CELLS-VALUE to LF_PMATN.
          move ABAP_TRUE to LF_DO_CHECK.
        endif.

        if LF_DO_CHECK eq ABAP_TRUE.
          LT_PMATN = LR_CUST_SHIPU->GET_PMATN_FOR_PMATY( IF_PMATY = LS_CPACK_PMATY_GRID-PMATY ).
          read table LT_PMATN with key PMATN = LF_PMATN transporting no fields.
          if SY-SUBRC ne 0 or
             LF_PMATN is initial.
***         Add Protocol - Packaging Material is not Valid for Packaging Material Type.
            ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY( exporting I_MSGID     = 'ZVCXI_XCSUC'
                                                           I_MSGTY     = 'E'
                                                           I_MSGNO     = '109'
                                                           I_FIELDNAME = 'PMATN'
                                                           I_ROW_ID    = LF_INDEX ).
          endif.
        endif.

        if LF_DO_DELETE eq ABAP_TRUE.
          move-corresponding LS_CPACK_PMATY_GRID to LS_CPACK_PMATY.
          ME->R_CPACK->DELETE_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
          loop at ER_DATA_CHANGED->MT_GOOD_CELLS into LS_GOOD_CELLS
          where ROW_ID = LF_INDEX.
            assign component LS_GOOD_CELLS-FIELDNAME of structure LS_CPACK_PMATY to <F_FIELD>.
            check SY-SUBRC = 0.
            move LS_GOOD_CELLS-VALUE to <F_FIELD>.
          endloop.
          ME->R_CPACK->ADD_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
        endif.

      endloop.

      ER_DATA_CHANGED->DISPLAY_PROTOCOL( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.                    "HANDLE_DATA_CHANGED
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LF_ADD               type          ABAP_BOOL,
                 LF_UPDATE            type          ABAP_BOOL.
  data:          LS_CPACK_PMATY       type          ZVCXI_XCSUC_S_CPACK_PMATY.
  data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( exporting E_MODIFIED    = E_MODIFIED
                                                     ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.


      loop at <T_DATA> assigning <S_DATA>.
        clear: LF_ADD, LF_UPDATE.

        read table ET_GOOD_CELLS with key ROW_ID = SY-TABIX transporting no fields.
        check SY-SUBRC eq 0.
        move-corresponding <S_DATA> to LS_CPACK_PMATY.

***     If Packaging Material Info is changed -> Add new Entry
        read table ET_GOOD_CELLS with key ROW_ID = SY-TABIX
                                          FIELDNAME = 'PAMAI'
                                 transporting no fields.
        if SY-SUBRC ne 0.
***       If Packaging Material Type is changed -> Add new Entry
          read table ET_GOOD_CELLS with key ROW_ID = SY-TABIX
                                            FIELDNAME = 'PMATY'
                                   transporting no fields.
          if SY-SUBRC ne 0.
***       All Other only Update
            move ABAP_TRUE to LF_UPDATE.
          endif.
        endif.

        case ABAP_TRUE.
          when LF_ADD.
            ME->R_CPACK->ADD_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
          when LF_UPDATE.
            ME->R_CPACK->UPDATE_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
        endcase.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_ONF4.

  data:          LS_GRID            type          ZVCXI_XCSUC_S_CPACK_PMATY_GRID,
                 LS_CPACK_SHUTY     type          ZVCXI_XCSUC_S_CPACK_SHUTY,
                 LS_CPACK_PMATY     type          ZVCXI_XCSUC_S_CPACK_PMATY,
                 LS_CPACK_PMATY_NEW type          ZVCXI_XCSUC_S_CPACK_PMATY.
  data:          LR_CX_CKX          type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>           type standard table,
                 <S_DATA>           type          any.

  try.

      read table ME->R_CPACK->T_CPACK_SHUTY into LS_CPACK_SHUTY with key GPSUN = ME->F_GPSUN.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        check ES_ROW_NO-ROW_ID = SY-TABIX.

        move-corresponding <S_DATA> to LS_GRID.

***     Handle F4 call
        case E_FIELDNAME.
          when 'PMATY'.
            move-corresponding LS_GRID to LS_CPACK_PMATY.
            move-corresponding LS_CPACK_PMATY to LS_CPACK_PMATY_NEW.
            check LS_CPACK_SHUTY-SHUNT is not initial.
            LS_CPACK_PMATY_NEW-PMATY = ZCL_VCXI_XCSUC_SHLP_CP_PMATY=>CALL_SHLP( IF_SHUNT   = LS_CPACK_SHUTY-SHUNT
                                                                                IF_DISPLAY = E_DISPLAY ).
            if LS_CPACK_PMATY_NEW-PMATY is not initial.
              ME->R_CPACK->DELETE_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
              ME->R_CPACK->ADD_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY_NEW ).
            endif.
            ER_EVENT_DATA->M_EVENT_HANDLED = 'X'.

          when 'CONSC'.
            move-corresponding LS_GRID to LS_CPACK_PMATY.
            move-corresponding LS_CPACK_PMATY to LS_CPACK_PMATY_NEW.
            check LS_CPACK_PMATY-PMATY is not initial.
            LS_CPACK_PMATY-CONSC = ZCL_VCXI_XCSU_SHLP_CONSC=>CALL_SHLP( IF_PMATY   = LS_CPACK_PMATY-PMATY
                                                                        IF_WERKS   = LS_CPACK_SHUTY-WERKS
                                                                        IF_DISPLAY = E_DISPLAY ).
            if LS_CPACK_PMATY-CONSC is not initial.
              ME->R_CPACK->UPDATE_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
            endif.
            ER_EVENT_DATA->M_EVENT_HANDLED = 'X'.

          when 'PMATN'.
            move-corresponding LS_GRID to LS_CPACK_PMATY.
            move-corresponding LS_CPACK_PMATY to LS_CPACK_PMATY_NEW.
            check LS_CPACK_PMATY-PMATY is not initial.
            LS_CPACK_PMATY-PMATN = ZCL_VCXI_XCSU_SHLP_PMATN=>CALL_SHLP( IF_PMATY   = LS_CPACK_PMATY-PMATY
                                                                        IF_WERKS   = LS_CPACK_SHUTY-WERKS
                                                                        IF_DISPLAY = E_DISPLAY ).
            if LS_CPACK_PMATY-PMATN is not initial.
              ME->R_CPACK->UPDATE_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
            endif.
            ER_EVENT_DATA->M_EVENT_HANDLED = 'X'.

        endcase.

      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.                    "HANDLE_ONF4
method HANDLE_TOOLBAR.

  data:  LS_TOOLBAR      type        STB_BUTTON.
  data:  LF_DISABLED     type        ABAP_BOOL.
  data:  LR_CX_CKX       type ref to /VCXI/CX_CKX.

  try.

      if ME->R_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
        move ABAP_TRUE to LF_DISABLED.
      endif.

***----------------------------------------------------------------------------
***   Insert Toolbar elements Add and Delete
      clear LS_TOOLBAR.
      move C_FUNC_ADD                 to LS_TOOLBAR-FUNCTION.
      move 'Add Entry'(001)           to LS_TOOLBAR-QUICKINFO.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_INSERT_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

      clear LS_TOOLBAR.
      move C_FUNC_DEL                 to LS_TOOLBAR-FUNCTION.
      move 'Delete Entry'(003)        to LS_TOOLBAR-QUICKINFO.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_DELETE_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

      clear LS_TOOLBAR.
      move C_BTYPE_SEPARATOR          to LS_TOOLBAR-BUTN_TYPE.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

***   Insert Toolbar elements Copy and Add Prio
      clear LS_TOOLBAR.
      move C_FUNC_COPY                to LS_TOOLBAR-FUNCTION.
      move 'Copy Entry'(002)          to LS_TOOLBAR-QUICKINFO.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_SYSTEM_COPY           to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_USER_COMMAND.

  data:          LS_CELL             type               LVC_S_CELL,
                 LS_ROW              type               LVC_S_ROW,
                 LS_CPACK_PMATY      type               ZVCXI_XCSUC_S_CPACK_PMATY,
                 LS_CPACK_PMATY_NEW  type               ZVCXI_XCSUC_S_CPACK_PMATY,
                 LS_CPACK_PMATY_OLD  type               ZVCXI_XCSUC_S_CPACK_PMATY.
  data:          LT_CELL             type               LVC_T_CELL,
                 LT_ROW              type               LVC_T_ROW,
                 LT_CPACK_PMATY      type               ZVCXI_XCSUC_TT_CPACK_PMATY.
  data:          LR_CX_CKX           type ref to        /VCXI/CX_CKX.
  field-symbols: <S_CPACK_PMATY>     type               ZVCXI_XCSUC_S_CPACK_PMATY,
                 <T_DATA>            type standard      table,
                 <S_DATA>            type               any.

  try.

*** ---------------------------------------------------------------------------
***   Get Value Data
      assign ME->R_DATA->* to <T_DATA>.
      free: <T_DATA>.
      ME->GET_GRID_DATA( IR_DATA = ME->R_DATA ).

      ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
      ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

*** ---------------------------------------------------------------------------
***   Get Selected Packaging Material Assignment
      loop at LT_CELL into LS_CELL.
        read table <T_DATA> assigning <S_DATA> index LS_CELL-ROW_ID-INDEX.
        check SY-SUBRC = 0.

        append initial line to LT_CPACK_PMATY assigning <S_CPACK_PMATY>.
        move-corresponding <S_DATA> to <S_CPACK_PMATY>.
      endloop.

      loop at LT_ROW into LS_ROW.
        read table <T_DATA> assigning <S_DATA> index LS_ROW-INDEX.
        check SY-SUBRC = 0.

        append initial line to LT_CPACK_PMATY assigning <S_CPACK_PMATY>.
        move-corresponding <S_DATA> to <S_CPACK_PMATY>.
      endloop.

*** ---------------------------------------------------------------------------
***   handle UserCommand
      case E_UCOMM.

        when C_FUNC_ADD.
***     Add new Packaging Code - Packaging Material Assignment
          move ME->F_GPSUN to LS_CPACK_PMATY-GPSUN.
          ME->R_CPACK->ADD_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).

        when C_FUNC_DEL.
***     Delete Packaging Material Type Assignment
          if ME->CHECK_SELECTION( ) eq ABAP_FALSE.
***         No Row Selected. Please Select all Row's you wanna Delete.
            raise exception type /VCXI/CX_CKX
             exporting
                F_MSGTY = 'E'
                F_MSGID = 'ZVCXI_XCSUC'
                F_MSGNO = '003'.
          endif.

***       Delete all Packaging Material Type Assignments
          loop at LT_CPACK_PMATY into LS_CPACK_PMATY.
            ME->R_CPACK->DELETE_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
          endloop.

        when C_FUNC_COPY.
***     Copy Complete Packaging Material Type Assignment
          if ME->CHECK_SELECTION( ) eq ABAP_FALSE.
***         No Row Selected. Please Select all Row's you wanna Copy.
            raise exception type /VCXI/CX_CKX
             exporting
                F_MSGTY = 'E'
                F_MSGID = 'ZVCXI_XCSUC'
                F_MSGNO = '005'.
          endif.

***       Copy all Packaging Material Type Assignments
          loop at LT_CPACK_PMATY into LS_CPACK_PMATY.

            move LS_CPACK_PMATY to LS_CPACK_PMATY_OLD.

            if LS_CPACK_PMATY-PAMAI ne LS_CPACK_PMATY_NEW-PAMAI or
               LS_CPACK_PMATY-PMATY ne LS_CPACK_PMATY_NEW-PMATY.

              move-corresponding LS_CPACK_PMATY to LS_CPACK_PMATY_NEW.

              ME->GET_PAMAI_PMATY( exporting IF_PAMAI = LS_CPACK_PMATY-PAMAI
                                             IF_PMATY = LS_CPACK_PMATY-PMATY
                                  importing  EF_PAMAI = LS_CPACK_PMATY_NEW-PAMAI
                                             EF_PMATY = LS_CPACK_PMATY_NEW-PMATY ).

            endif.

            if LS_CPACK_PMATY_NEW-PAMAI is initial or
               LS_CPACK_PMATY_NEW-PMATY is initial.

              move LS_CPACK_PMATY_OLD to LS_CPACK_PMATY_NEW.
              continue.
            endif.
            ME->R_CPACK->ADD_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY_NEW ).

          endloop.

      endcase.

      ME->F_REFRESH_REQ = ABAP_TRUE.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method INIT_GRID.

  SUPER->INIT_GRID( ).

*** Change from Enter as Event to Modified
  ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED ).

endmethod.
method REFRESH_GRID.

  check ME->F_REFRESH_REQ eq ABAP_TRUE.
  ME->CREATE_TITLE( ).
  SUPER->REFRESH_GRID( ).

endmethod.
method SET_EVENT.

  SUPER->SET_EVENT( ).

*** Add Event for F4Help, UserCommand and Toolbar
  set handler ME->HANDLE_USER_COMMAND for ME->R_GRID.
  set handler ME->HANDLE_TOOLBAR      for ME->R_GRID.
  set handler ME->HANDLE_ONF4         for ME->R_GRID.

endmethod.
