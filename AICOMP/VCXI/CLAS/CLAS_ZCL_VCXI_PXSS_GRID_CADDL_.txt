
class ZCL_VCXI_PXSS_GRID_CADDL definition
  public
  inheriting from ZCL_VCXI_XCS_GRID
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE optional
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSS_S_CADDL_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE optional
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW
      !E_COLUMN
      !ES_ROW_NO .
  methods SHOW_DOCUMENT
    importing
      !IF_ALIASS type DIRPROFILENAMES default 'ZVCXI_PXE_CAD'
      !IF_DFILE type FILEP
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_GRID_CADDL definition
class ZCL_VCXI_PXSS_GRID_CADDL implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IR_UIGATE         = IR_UIGATE
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

  endmethod.
  method GET_FIELDCAT.

    field-symbols: <S_FCAT>  type  LVC_S_FCAT.


***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
***   General adjustments
      case <S_FCAT>-FIELDNAME.
        when 'T_STYL'.
          <S_FCAT>-TECH = ABAP_TRUE.
      endcase.
    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_CADDL_GRID type ZVCXI_PXSS_S_CADDL_GRID,
          LS_CADDL      type ZVCXI_PXS_S_CADDL.
    data: LT_CADDL type ZVCXI_PXS_TT_CADDL.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type        ANY.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Documents
    case type of ME->R_GATE->R_CLSPR.
      when type ZCL_VCXI_PXSS_PR_CADIF_PRJ into data(LR_PR_CADIF_PRJ).
        LT_CADDL = LR_PR_CADIF_PRJ->GET_CADDL( ).
      when type ZCL_VCXI_PXSS_PR_CADIF_ONEUP into data(LR_PR_CADIF_ONEUP).
        LT_CADDL = LR_PR_CADIF_ONEUP->GET_CADDL( ).
      when type ZCL_VCXI_PXSS_PR_CADIF_MLTUP into data(LR_PR_CADIF_MLTUP).
        LT_CADDL = LR_PR_CADIF_MLTUP->GET_CADDL( ).
    endcase.

    loop at LT_CADDL into LS_CADDL.
      clear LS_CADDL_GRID.
      LS_CADDL_GRID-S_CADDL = LS_CADDL.

***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_CADDL_GRID to <S_DATA>.

    endloop.

  endmethod.
  method GET_LAYOUT.

    RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Deactivate Toolbar
    RS_LAYOUT-NO_TOOLBAR = ABAP_TRUE.

*** Disable Line Selection (and Drag&Drop function)
    move ABAP_TRUE to RS_LAYOUT-NO_ROWMARK.

  endmethod.
  method HANDLE_DOUBLE_CLICK.

    data: LS_CADDL_GRID type ZVCXI_PXSS_S_CADDL_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ANY.

    try.
***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        read table <T_DATA> assigning <S_DATA> index E_ROW-INDEX.
        check SY-SUBRC eq 0.
        LS_CADDL_GRID = corresponding #( <S_DATA> ).

***     Show Document on Front-End
        ME->SHOW_DOCUMENT( IF_DFILE = LS_CADDL_GRID-DFILE ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method SET_EVENT.

    SUPER->SET_EVENT( ).

*** Set Handler for Doubleclick
    set handler ME->HANDLE_DOUBLE_CLICK        for ME->R_GRID.

  endmethod.
  method SHOW_DOCUMENT.

    data: LF_PATH  type FILEP,
          LF_DAPPL type DAPPL,
          LF_XSTR  type XSTRING.
    data: LS_DATA(1024) type X.


***--------------------------------------------------------------------------------------
*** Get File from User Directory of Server
    LF_XSTR = ZCL_VCXI_XCS_SERVICE=>GET_FILE( IF_ALIASS  = IF_ALIASS
                                              IF_FILEP   = IF_DFILE ).
    data(LT_DATA) = CL_BCS_CONVERT=>XSTRING_TO_SOLIX( IV_XSTRING = LF_XSTR ).

***--------------------------------------------------------------------------------------
*** Get Application
    call function 'CV120_DOC_GET_APPL'
      exporting
        PF_FILE   = IF_DFILE
      importing
        PFX_DAPPL = LF_DAPPL.

*** Generate Local File Name incl. Path
    call function 'CV120_CREATE_VIEW_FILE'
      exporting
        PF_DAPPL     = LF_DAPPL
        PF_FILENAME  = IF_DFILE
      importing
        PFX_TMP_FILE = LF_PATH
      exceptions
        ERROR        = 1
        others       = 2.
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

***--------------------------------------------------------------------------------------
*** Create Local File
    CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD( exporting  FILENAME = conv #( LF_PATH )
                                                       FILETYPE = 'BIN'
                                            changing   DATA_TAB = LT_DATA
                                            exceptions others   = 99 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Open File
    CL_GUI_FRONTEND_SERVICES=>EXECUTE( exporting  DOCUMENT = conv #( LF_PATH )
                                       exceptions others   = 10 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
