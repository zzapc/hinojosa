
class ZCL_VCXI_XCDCU_UI_CONDREC_TR definition
  public
  create public .

public section.

  data F_CURSOR type SCRFNAME .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    changing
      !CF_UCOMM type SYUCOMM .
  methods SET_CURSOR .
  class-methods START_UI
    importing
      !II_CHABY type ZVCXI_XCDC_TT_CHABY
      !II_ICODE type ZVCXI_XCDC_TT_ICODE
      !II_ICORE type ZVCXI_XCDC_TT_ICORE
      !II_CHAAT_DATE type ZVCXI_XCDC_TT_CHAAT_DATE
      !II_CHAAT_TIME type ZVCXI_XCDC_TT_CHAAT_TIME
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !II_ICORE type ZVCXI_XCDC_TT_ICORE
      !II_ICODE type ZVCXI_XCDC_TT_ICODE
      !II_CHABY type ZVCXI_XCDC_TT_CHABY
      !II_CHAAT_DATE type ZVCXI_XCDC_TT_CHAAT_DATE
      !II_CHAAT_TIME type ZVCXI_XCDC_TT_CHAAT_TIME
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_BACK type SYUCOMM value 'BACK'. "#EC NOTEXT
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  constants C_UC_EXIT type SYUCOMM value 'EXIT'. "#EC NOTEXT
  data F_REFRESH_REQ type ABAP_BOOL .
  data R_GRID_CR_TR type ref to ZCL_VCXI_XCDCU_GRID_CONDREC_TR .
  data I_ICODE type ZVCXI_XCDC_TT_ICODE .
  data I_ICORE type ZVCXI_XCDC_TT_ICORE .
  data I_CHABY type ZVCXI_XCDC_TT_CHABY .
  data I_CHAAT_DATE type ZVCXI_XCDC_TT_CHAAT_DATE .
  data I_CHAAT_TIME type ZVCXI_XCDC_TT_CHAAT_TIME .

  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_BACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXIT
    raising
      /VCXI/CX_CKX .
  methods SET_PFSTATUS
    raising
      /VCXI/CX_CKX .
  methods SET_TITLE
    raising
      /VCXI/CX_CKX .
private section.

  data S_DYNP type /VCXI/CKX_S_DYNP_KEY .
endclass. "ZCL_VCXI_XCDCU_UI_CONDREC_TR definition
class ZCL_VCXI_XCDCU_UI_CONDREC_TR implementation.
method CONSTRUCTOR.

*** Bind UI Framework
  call function 'ZVCXI_XCSUC_UI_CONDRECTR_BIND'
    exporting
      IR_UI_CONDREC_TR = ME
    importing
      RS_DYNP          = ME->S_DYNP.

  move II_ICORE          to ME->I_ICORE.
  move II_ICODE          to ME->I_ICODE.
  move II_CHABY          to ME->I_CHABY.
  move II_CHAAT_DATE     to ME->I_CHAAT_DATE.
  move II_CHAAT_TIME     to ME->I_CHAAT_TIME.

***----------------------------------------------------------------------------
  if ME->R_GRID_CR_TR is not bound.
*** Create Grid for Condition Record Transports
    create object ME->R_GRID_CR_TR
      exporting
        IF_TABNAME        = 'ZVCXI_XCDCU_S_CR_TR_GRID'
        IF_CONTAINER_NAME = '0100CC_CONDREC_TR_GRID'
        II_ICORE          = ME->I_ICORE
        II_ICODE          = ME->I_ICODE
        II_CHABY          = ME->I_CHABY
        II_CHAAT_DATE     = ME->I_CHAAT_DATE
        II_CHAAT_TIME     = ME->I_CHAAT_TIME.
  endif.


endmethod.
method DO_FREE.

***------------------------------------------------------------------
*** Free Condition Record Transport Grid
  if ME->R_GRID_CR_TR is bound.
    ME->R_GRID_CR_TR->DO_FREE( ).
    clear ME->R_GRID_CR_TR.
  endif.

endmethod.
method DO_PBO.

  data: LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

      ME->SET_PFSTATUS( ).
      ME->SET_TITLE( ).

***   Refresh Grid
      if ME->R_GRID_CR_TR is bound.
        if ME->F_REFRESH_REQ eq ABAP_TRUE.
          move ABAP_TRUE to ME->R_GRID_CR_TR->F_REFRESH_ALL_REQ.
          move ABAP_TRUE to ME->R_GRID_CR_TR->F_REFRESH_REQ.
        endif.
        ME->R_GRID_CR_TR->REFRESH_GRID( ).
      endif.

      move ABAP_FALSE to ME->F_REFRESH_REQ.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method DO_USER_COMMAND .

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

      case CF_UCOMM.
        when ZCL_VCXI_XCDCU_UI_CONDREC_TR=>C_UC_BACK.
          ME->HANDLE_UC_BACK( ).
        when ZCL_VCXI_XCDCU_UI_CONDREC_TR=>C_UC_EXIT.
          ME->HANDLE_UC_EXIT( ).
        when ZCL_VCXI_XCDCU_UI_CONDREC_TR=>C_UC_CANCEL.
          ME->HANDLE_UC_CANCEL( ).
      endcase.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

  clear CF_UCOMM.

endmethod.
method HANDLE_UC_BACK .

*** Do Free and leave
  ME->DO_FREE( ).
  leave to screen 0.

endmethod.
method HANDLE_UC_CANCEL .

*** Do Free and leave
  ME->DO_FREE( ).
  leave to screen 0.

endmethod.
method HANDLE_UC_EXIT .

*** Do Free and leave
  ME->DO_FREE( ).
  leave to screen 0.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method SET_PFSTATUS.

***----------------------------------------------------------------------------
*** Set PF-Status
  set pf-status '0100' of program ME->S_DYNP-REPID.

endmethod.
method SET_TITLE.

  set titlebar '0100' of program ME->S_DYNP-REPID.

endmethod.
method START_UI.

  data:  LR_UI_CONDREC_TR type ref to ZCL_VCXI_XCDCU_UI_CONDREC_TR.

*** Create Instance of UI
  create object LR_UI_CONDREC_TR
    exporting
      II_ICORE      = II_ICORE
      II_ICODE      = II_ICODE
      II_CHABY      = II_CHABY
      II_CHAAT_DATE = II_CHAAT_DATE
      II_CHAAT_TIME = II_CHAAT_TIME.

*** Call Screen
  call function 'ZVCXI_XCSUC_UI_CONDRECTR_START'.

endmethod.
