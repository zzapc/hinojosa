
class ZCL_VCXI_PXSS_PR_XCPMCNF definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  abstract
  create public .

public section.

  interfaces ZIF_VCXI_PXSS_COMM_PREV
      abstract methods DO_FORWARD .
  interfaces ZIF_VCXI_XCSU_CPMCNF .
  interfaces ZIF_VCXI_PXSS_FDSUB .

  constants C_IPRVT_PX_XCPMCNF type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_XCPMCNF' ##NO_TEXT.

  methods GET_NBLWT
  abstract
    returning
      value(RS_NBLWT) type ZVCXI_PXS_S_NBLWT
    raising
      /VCXI/CX_CKX .
  methods GET_PACKMAT_DIM
  abstract
    returning
      value(RS_PACKMAT_DIM) type ZVCXI_XCSU_S_PACKMAT_DIM
    raising
      /VCXI/CX_CKX .
  methods GET_CADLS
    returning
      value(RF_CADLS) type ZVCXI_PXS_CADLS
    raising
      /VCXI/CX_CKX .
  methods GET_GCADO
    returning
      value(RF_GCADO) type ZVCXI_PXS_GCADO
    raising
      /VCXI/CX_CKX .
  methods GET_GXCON
    returning
      value(RF_GXCON) type ZVCXI_PXSS_GXCON
    raising
      /VCXI/CX_CKX .
  methods GET_HNDDIM
  abstract
    returning
      value(RS_HNDDIM) type ZVCXI_PXS_S_HNDDIM
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_MS_XPROC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_MS_XPROC) type ref to ZCL_VCXI_PXSS_PR_MS_XPROC
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_XCONI
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_XCONI) type ref to ZCL_VCXI_PXSS_PR_XCONI
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods GET_PMATY
    returning
      value(RF_PMATY) type ZVCXI_XCSU_PMATY
    raising
      /VCXI/CX_CKX .
  methods GET_PMQTY
    returning
      value(RS_PMQTY) type ZVCXI_XCSU_S_PMQTY
    raising
      /VCXI/CX_CKX .
  methods GET_TBQTY
    returning
      value(RS_TBQTY) type ZVCXI_XCSU_S_TBQTY
    raising
      /VCXI/CX_CKX .

  methods GET_DESCR
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.
  constants C_IEVNT_I_REQ_BACKWARD type /VCXI/VKSC_IEVNT value 'REQ_BACKWARD' ##NO_TEXT.
  constants C_IEVNT_I_REQ_FORWARD type /VCXI/VKSC_IEVNT value 'REQ_FORWARD' ##NO_TEXT.

  methods GET_CSPLIT
    returning
      value(RT_CSPLIT) type ZVCXI_PXSS_TT_CSPLIT
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_CADIF_ONEUP
    exporting
      !ER_GATE_CADIF_ONEUP type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_CADIF_ONEUP) type ref to ZCL_VCXI_PXSS_PR_CADIF_ONEUP
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_CPM
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_CPM) type ref to ZCL_VCXI_XCSU_PR_CPM
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SPEC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_PR_XCPMCNF definition
class ZCL_VCXI_PXSS_PR_XCPMCNF implementation.
  method GET_CADLS.

    data: LR_PR_CADIF_ONEUP type ref to ZCL_VCXI_PXSS_PR_CADIF_ONEUP.


    LR_PR_CADIF_ONEUP = ME->GET_PRVDR_CADIF_ONEUP( ).
    check LR_PR_CADIF_ONEUP is bound.
    RF_CADLS = LR_PR_CADIF_ONEUP->GET_CADLS( ).

  endmethod.
  method GET_CSPLIT.

    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE.


***--------------------------------------------------------------------------------------
*** Get Finished Good Provider via Interface
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_PXSS_FG=>C_IPRVT_FG
                                     IF_INUSE = ABAP_TRUE ).
    if LT_GATE is not initial.
      RT_CSPLIT = cast ZIF_VCXI_PXSS_FG( LT_GATE[ 1 ]->R_CLSPR )->GET_CSPLIT( ).
    else.
***   Get Connection Out Provider
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XCONO=>C_IPRVT_XCONO
                                       IF_INUSE = ABAP_TRUE ).
      if LT_GATE is not initial.
        RT_CSPLIT = cast ZCL_VCXI_PXSS_PR_XCONO( LT_GATE[ 1 ]->R_CLSPR )->GET_CSPLIT( ).
      endif.
    endif.

  endmethod.
  method GET_DESCR.

    data: LR_PR_XCONI    type ref to ZCL_VCXI_PXSS_PR_XCONI,
          LR_PR_MS_XPROC type ref to ZCL_VCXI_PXSS_PR_MS_XPROC.


    RF_DESCR = SUPER->GET_DESCR( ).

    LR_PR_XCONI = ME->GET_PRVDR_XCONI( ).
    if LR_PR_XCONI is bound.
      RF_DESCR = LR_PR_XCONI->GET_DESCR( ).
    endif.

    LR_PR_MS_XPROC = ME->GET_PRVDR_MS_XPROC( ).
    if LR_PR_MS_XPROC is bound.
      RF_DESCR = LR_PR_MS_XPROC->GET_DESCR( ).
    endif.

  endmethod.
  method GET_GCADO.

    data: LR_PR_CADIF_ONEUP type ref to ZCL_VCXI_PXSS_PR_CADIF_ONEUP.


    LR_PR_CADIF_ONEUP = ME->GET_PRVDR_CADIF_ONEUP( ).
    check LR_PR_CADIF_ONEUP is bound.
    RF_GCADO = LR_PR_CADIF_ONEUP->GET_GCADO( ).

  endmethod.
  method GET_GXCON.

    data: LR_PR_XCONI type ref to ZCL_VCXI_PXSS_PR_XCONI.


*** Get Connections Inbound
    LR_PR_XCONI = ME->GET_PRVDR_XCONI( ).
    check LR_PR_XCONI is bound.

*** Return its X-Connect GUID
    RF_GXCON = LR_PR_XCONI->GET_GXCON( ).

  endmethod.
  method GET_PMATY.

    RF_PMATY = ME->GET_PRVDR_CPM( )->GET_PMATY( ).

  endmethod.
  method GET_PMQTY.

    ME->GET_PRVDR_CPM( )->GET_PMQTY( importing ES_PMQTY = RS_PMQTY ).

  endmethod.
  method GET_PRVDR_CADIF_ONEUP.

    data: LT_GATE         type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Get CAD Integration provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_IPRVT_PX_CADIF_ONEUP
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Get CAD Integration Reference
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_CADIF_ONEUP.
          check RR_PR_CADIF_ONEUP is bound.
          move LR_GATE to ER_GATE_CADIF_ONEUP.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: RR_PR_CADIF_ONEUP, ER_GATE_CADIF_ONEUP.
      endtry.
    endloop.

  endmethod.
  method GET_PRVDR_CPM.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_CPM.

***------------------------------------------------------------------------------------------------
*** Find Provider for Configured Packaging Material
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSU_PR_CPM=>C_IPRVT_XCS_CPM
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_CPM.

  endmethod.
  method GET_PRVDR_MS_XPROC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_MS_XPROC.

***------------------------------------------------------------------------------------------------
*** Find Provider for MS Procurement
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_XPROC=>C_IPRVT_PX_MS_XPROC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_MS_XPROC.

  endmethod.
  method GET_PRVDR_SPEC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           ER_PR_SPEC.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SPEC=>C_IPRVT_PX_SPEC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to ER_PR_SPEC.

  endmethod.
  method GET_PRVDR_XCONI.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_XCONI.

***------------------------------------------------------------------------------------------------
*** Find Provider for Connection In
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XCONI=>C_IPRVT_XCONI
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_XCONI.

  endmethod.
  method GET_TBQTY.

    ME->GET_PRVDR_CPM( )->GET_DETAIL_SHIPUNIT( importing ES_TBQTY = RS_TBQTY ).

  endmethod.
  method GET_WERKS.

    data: LR_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC.


    ME->GET_PRVDR_SPEC( importing ER_PR_SPEC = LR_PR_SPEC ).
    check LR_PR_SPEC is bound.
    RF_WERKS = LR_PR_SPEC->GET_WERKS( ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

      when ZIF_VCXI_XCSU_CPMCNF~C_IEVNT_I_REQ_REDET_EFFCT.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_XCSU_CPMCNF~C_IEVNT_O_REDET_EFFCT_REQ ).

***   Event Backwarding/Forwarding for Communication
      when C_IEVNT_I_REQ_BACKWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_PREV~C_IEVNT_O_BACKWARD_REQ ).
      when C_IEVNT_I_REQ_FORWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_PREV~C_IEVNT_O_FORWARD_REQ ).

    endcase.

  endmethod.
  method HANDLE_SET_DEFAULT.

    ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

  endmethod.
  method ZIF_VCXI_PXSS_FDSUB~GET_PRVDR_MS_XPROC.

    RR_PR_MS_XPROC = ME->GET_PRVDR_MS_XPROC( importing ER_GATE = ER_GATE ).

  endmethod.
  method ZIF_VCXI_PXSS_FDSUB~GET_PRVDR_XCONI.

    RR_PR_XCONI = ME->GET_PRVDR_XCONI( importing ER_GATE = ER_GATE ).

  endmethod.
  method ZIF_VCXI_XCSU_CPMCNF~DET_EFFCT.

    data: LS_PACKMAT_DIM type ZVCXI_XCSU_S_PACKMAT_DIM.
    field-symbols: <S_EFFCT> type ZVCXI_XCSU_S_EFFCT.


***------------------------------------------------------------------------------------------------
*** Get Packing Material Dimensions (in SAP Format)
    LS_PACKMAT_DIM = ME->GET_PACKMAT_DIM( ).

***------------------------------------------------------------------------------------------------
*** Adjust Effects
    loop at CT_EFFCT assigning <S_EFFCT>.
      case <S_EFFCT>-DIMEN.
        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH.
          if LS_PACKMAT_DIM-MEABM is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = LS_PACKMAT_DIM-LAENG
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-MEABM
                                                               IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.

        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH.
          if LS_PACKMAT_DIM-MEABM is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = LS_PACKMAT_DIM-BREIT
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-MEABM
                                                               IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.

        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT.
          if LS_PACKMAT_DIM-MEABM is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = LS_PACKMAT_DIM-HOEHE
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-MEABM
                                                               IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.

        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WEIGHT.
          if LS_PACKMAT_DIM-GEWEI is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = LS_PACKMAT_DIM-BRGEW
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-GEWEI
                                                               IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.
      endcase.
    endloop.

  endmethod.
  method ZIF_VCXI_XCSU_CPMCNF~GET_MATDE.

    data: LR_PR_XCONI    type ref to ZCL_VCXI_PXSS_PR_XCONI,
          LR_PR_MS_XPROC type ref to ZCL_VCXI_PXSS_PR_MS_XPROC.


    LR_PR_XCONI = ME->GET_PRVDR_XCONI( ).
    if LR_PR_XCONI is bound.
      RF_MATDE = LR_PR_XCONI->GET_MAKTX( ).
    endif.

    LR_PR_MS_XPROC = ME->GET_PRVDR_MS_XPROC( ).
    if LR_PR_MS_XPROC is bound.
      RF_MATDE = LR_PR_MS_XPROC->GET_MAKTX( ).
    endif.

  endmethod.
