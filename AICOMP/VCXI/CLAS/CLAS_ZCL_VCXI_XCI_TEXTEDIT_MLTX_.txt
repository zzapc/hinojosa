
class ZCL_VCXI_XCI_TEXTEDIT_MLTX definition
  public
  create public .

public section.

  data F_TDID type TDID read-only .
  data F_REFRESH_REQ type ABAP_BOOL .

  methods UPDATE_TEXT
    returning
      value(RF_CHANGED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods REFRESH_TEXTEDIT
    importing
      !IF_READONLY_MODE type I
      !IR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT optional
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT
      !IF_TDID type TDID
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_TABLINE_LENGTH type I value 132 ##NO_TEXT.
  data F_CONTAINER_NAME type SCRFNAME .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_TEXTEDIT type ref to CL_GUI_TEXTEDIT .
  data R_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT .

  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_TEXTEDIT
    raising
      /VCXI/CX_CKX .
  methods READ_TEXT_FROM_EDITOR
    returning
      value(RF_TEXT) type STRING
    raising
      /VCXI/CX_CKX .
  methods SEND_TEXT_TO_EDITOR
    importing
      !IF_TEXT type STRING
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCI_TEXTEDIT_MLTX definition
class ZCL_VCXI_XCI_TEXTEDIT_MLTX implementation.
  method CONSTRUCTOR.

    move IF_CONTAINER_NAME to ME->F_CONTAINER_NAME.
    move IR_BOB_MAT        to ME->R_BOB_MAT.
    move IF_TDID           to ME->F_TDID.

*** Request Refresh
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method DO_FREE.

*** Free Text Editor
    if ME->R_TEXTEDIT is bound.
      ME->R_TEXTEDIT->FREE( exceptions
                              CNTL_ERROR        = 1
                              CNTL_SYSTEM_ERROR = 2 ).

      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_TEXTEDIT.
    endif.

*** Free Container
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions
                               CNTL_ERROR        = 1
                               CNTL_SYSTEM_ERROR = 2
                               others            = 3 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.

  endmethod.
  method INIT_CONTAINER.

    if ME->R_CONTAINER is not bound.
      create object ME->R_CONTAINER
        exporting
          CONTAINER_NAME              = ME->F_CONTAINER_NAME
        exceptions
          CNTL_ERROR                  = 1
          CNTL_SYSTEM_ERROR           = 2
          CREATE_ERROR                = 3
          LIFETIME_ERROR              = 4
          LIFETIME_DYNPRO_DYNPRO_LINK = 5
          others                      = 6.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
method INIT_TEXTEDIT.

  if ME->R_TEXTEDIT is not bound.
    create object ME->R_TEXTEDIT
      exporting
        PARENT                 = ME->R_CONTAINER
      exceptions
        ERROR_CNTL_CREATE      = 1
        ERROR_CNTL_INIT        = 2
        ERROR_CNTL_LINK        = 3
        ERROR_DP_CREATE        = 4
        GUI_TYPE_NOT_SUPPORTED = 5
        others                 = 6.
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

endmethod.
  method READ_TEXT_FROM_EDITOR.

*** Make sure we have an Instance
    check ME->R_TEXTEDIT is bound.

*** Get Text from GUI
    ME->R_TEXTEDIT->GET_TEXTSTREAM( importing  TEXT                   = RF_TEXT
                                    exceptions ERROR_CNTL_CALL_METHOD = 1
                                               NOT_SUPPORTED_BY_GUI   = 2
                                               others                 = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Synchronize Automation Queue after Get Methods
    CL_GUI_CFW=>FLUSH( ).

  endmethod.
  method REFRESH_TEXTEDIT.

    if IR_BOB_MAT is supplied.
      ME->R_BOB_MAT = IR_BOB_MAT.
    endif.

*** Do only if we need to Refresh
    check ME->F_REFRESH_REQ eq ABAP_TRUE.
    move ABAP_FALSE to ME->F_REFRESH_REQ.

*** Init Container and TextEditor
    ME->INIT_CONTAINER( ).
    ME->INIT_TEXTEDIT( ).

*** Set Read-only Mode
    if ME->R_TEXTEDIT is bound.
      ME->R_TEXTEDIT->SET_READONLY_MODE( READONLY_MODE = IF_READONLY_MODE ).
    endif.

*** Send Text to Editor
    ME->SEND_TEXT_TO_EDITOR( IF_TEXT = ME->R_BOB_MAT->GET_LONGTEXT( IF_ID = ME->F_TDID ) ).

  endmethod.
  method SEND_TEXT_TO_EDITOR.

***----------------------------------------------------------------------------
*** Set Text to Text Editor
    ME->R_TEXTEDIT->SET_TEXTSTREAM( exporting
                                      TEXT                   = IF_TEXT
                                    exceptions
                                      ERROR_CNTL_CALL_METHOD = 1
                                      NOT_SUPPORTED_BY_GUI   = 2
                                      others                 = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method UPDATE_TEXT.

    data: LF_TEXT type /VCXI/CKX_STRING.


    check ME->R_BOB_MAT is bound.

*** Get Text From Text Editor
    LF_TEXT = ME->READ_TEXT_FROM_EDITOR( ).

*** Set Text to Business Object
    RF_CHANGED = ME->R_BOB_MAT->SET_LONGTEXT( IF_ID    = ME->F_TDID
                                              IF_TEXT  = LF_TEXT
                                              IF_LANGU = SY-LANGU ).

  endmethod.
