
class ZCL_VCXI_PCSP_PR_OUTSO_PTP definition
  public
  inheriting from ZCL_VCXI_P0SP_PR_OUTSO_PTP
  create public .

public section.

  methods GET_FLUTE
    returning
      value(RF_FLUTE) type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_FORWARD_FLUTE type /VCXI/VKSC_IEVNT value 'FORWARD_FLUTE'. "#EC NOTEXT

  methods HANDLE_FORWARD_FLUTE
    raising
      /VCXI/CX_CKX .
  methods SET_MFO_FLUTE
    importing
      !IF_FLUTE type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .
  methods GET_MFI_FLUTE
    returning
      value(RF_FLUTE) type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PCSP_PR_OUTSO_PTP definition
class ZCL_VCXI_PCSP_PR_OUTSO_PTP implementation.
method GET_FLUTE.

***------------------------------------------------------------------
*** Get Flute of MFI
  RF_FLUTE = ME->GET_MFI_FLUTE( ).

endmethod.
method GET_MFI_FLUTE.

  data:          LT_GATE          type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
                 LR_MF_FLUTE      type ref to ZIF_VCXI_PCSP_MF_FLUTE.

  check ME->R_PR_MFMGR is bound.

***------------------------------------------------------------------
*** Get Material Flow In
  LT_GATE = ME->R_PR_MFMGR->GET_MFI( ).
  if lines( LT_GATE ) lt 1.
*** No Material Flow In available.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCSP'
        IF_MSGNO = '210' ).
  endif.

*** Get Flute of all
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_MF_FLUTE.
        check LR_MF_FLUTE is bound.
        RF_FLUTE = LR_MF_FLUTE->GET_FLUTE( ).
        exit.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_MF_FLUTE.
    endtry.
  endloop.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_FORWARD_FLUTE.
      ME->HANDLE_FORWARD_FLUTE( ).
  endcase.

endmethod.
method HANDLE_FORWARD_FLUTE.

  data: LF_FLUTE         type        ZVCXI_PCS_FLUTE.

  check ME->R_PR_MFMGR is bound.

***------------------------------------------------------------------
*** Get Flute of Material Flow In
  LF_FLUTE = ME->GET_MFI_FLUTE( ).

***------------------------------------------------------------------
*** Set Flute on Material Flow Out
  ME->SET_MFO_FLUTE( IF_FLUTE = LF_FLUTE ).

endmethod.
method SET_MFO_FLUTE.

  data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
  data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
        LR_MF_FLUTE  type ref to ZIF_VCXI_PCSP_MF_FLUTE.

  check ME->R_PR_MFMGR is bound.

***------------------------------------------------------------------
*** Get Material Flow Out
  LT_GATE = ME->R_PR_MFMGR->GET_MFO( ).

*** Set Flute to all
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_MF_FLUTE.
        check LR_MF_FLUTE is bound.
        LR_MF_FLUTE->SET_FLUTE( IF_FLUTE = IF_FLUTE ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
