
class ZCL_VCXI_PXSR_BL_PSTEP_UNIT definition
  public
  inheriting from ZCL_VCXI_PXSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .
  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_MANU .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_GRP type /VCXI/VSMC_IPSTP value 'PX_PS_GRP' ##NO_TEXT.
  constants C_IPSTP_UNIT type /VCXI/VSMC_IPSTP value 'PX_PS_UNIT' ##NO_TEXT.
  data F_SHUNT type ZVCXI_XCSU_SHUNT read-only .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods ADJ_EVQTY_BY_IMFXC
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_IMFXC
    redefinition .
  methods GET_MFICF_BY_IMFXC
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods REPLACE_MFSI_BY_MFMI
    redefinition .
  methods ADJ_FEATURE
    redefinition .
protected section.

  constants C_ATTID_ISVCE type /VCXI/VKS_ATTID value 'ISVCE_MC' ##NO_TEXT.
  constants C_IAATY_NOPCBUNDLE type /VCXI/VSMC_IAATY value 'P0_AA_NOPCBUNDLE' ##NO_TEXT.
  constants C_IAATY_SHUNT type /VCXI/VSMC_IAATY value 'P0_AA_SHUNT' ##NO_TEXT.
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data S_PRQTY type ZVCXI_XCSU_S_PRQTY .
  data T_ATTID_SHUNT type /VCXI/CKX_TT_ID .
  data T_PACKMAT type ZVCXI_P0SR_TT_PACKMAT .
  data T_XCPMCNF type ZVCXI_PXSR_TT_XCPMCNF .
  data T_MFMI_P type ZVCXI_P0SR_TT_MFMI_P .

  methods INIT_ATTRI_SHUNT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_XCPMCNF
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MS_PACKMAT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SHIPMGR
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SHIPUNIT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_PACKMAT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_UNIT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFMI_P
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
      !CF_MFI type ABAP_BOOL
    raising
      /VCXI/CX_CKX .

  methods ADD_SPVRE_MFSI_P
    redefinition .
  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSR_BL_PSTEP_UNIT definition
class ZCL_VCXI_PXSR_BL_PSTEP_UNIT implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

    data: LS_RTE_SAVAL type        /VCXI/VSMR_S_RTE_SAVAL,
          LS_RTE_SAREC type        /VCXI/VSMR_S_RTE_SAREC.
    field-symbols: <S_AVVAL> type        /VCXI/VSMR_S_RTE_RANGE_AVVAL,
                   <S_ARECN> type        /VCXI/VSMR_S_RTE_RANGE_ARECN.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - P0_AA_SHUNT
    try.
        clear LS_RTE_SAVAL.
        append initial line         to LS_RTE_SAVAL-I_AVVAL assigning <S_AVVAL>.
        move 'I'                    to <S_AVVAL>-SIGN.
        move 'EQ'                   to <S_AVVAL>-OPTION.
        move ME->F_SHUNT            to <S_AVVAL>-LOW.

        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_SHUNT
                                     II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).

      catch /VCXI/CX_CKX.
    endtry.

***----------------------------------------------------------------------------
*** Aspect - P0_AA_NOPCBUNDLE -> in case of Bundling
    try.
        clear LS_RTE_SAREC.
        if LINE_EXISTS( ME->T_ATTID_SHUNT[ TABLE_LINE = ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE ] ).
          move 1                                            to LS_RTE_SAREC-MAXSEL.
          move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to LS_RTE_SAREC-ASORT.
          append initial line           to LS_RTE_SAREC-I_ARECN assigning <S_ARECN>.
          move 'I'                      to <S_ARECN>-SIGN.
          move 'LE'                     to <S_ARECN>-OPTION.
          move ME->S_PRQTY-PRQTY to <S_ARECN>-LOW.

          IR_RTE_PSTEP->SET_RTE_SAREC( IF_IAATY  = C_IAATY_NOPCBUNDLE
                                       II_ARECN  = LS_RTE_SAREC-I_ARECN
                                       IF_MAXSEL = LS_RTE_SAREC-MAXSEL
                                       IF_ASORT  = LS_RTE_SAREC-ASORT ).

        endif.

      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_LVVAL>  type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Shipping Unit (Processing)
        when 'XC_LT_VP_SHUNT'.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                       to <S_LVVAL>-SIGN.
          move 'EQ'                      to <S_LVVAL>-OPTION.
          move ME->F_SHUNT               to <S_LVVAL>-LOW.

***     PC per Bundle (Processing)
        when 'P0_LT_DP_BUNDLE_NUM_PC'.
          if LINE_EXISTS( ME->T_ATTID_SHUNT[ TABLE_LINE = ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE ] ).
            move ME->S_PRQTY-PRQTY      to LF_LDVAL.
            move ME->S_PRQTY-PRQTY_UOM  to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_PACKMAT.

    data: LS_PACKMAT type        ZVCXI_P0SR_S_PACKMAT,
          LS_PARAM   type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
    loop at ME->T_PACKMAT into LS_PACKMAT.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_PACKMAT-ISVCE
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_PACKMAT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_PACKMAT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_PACKMAT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Material Number
      LR_SPVRE_MC_PACKMAT->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_PACKMAT-MATNR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Text
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_TEXT
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PACKMAT-TEXT
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Average Consumption
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_PACKMAT-ISVCE when 'MC_PACKMAT_A' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_A
                                                                                             when 'MC_PACKMAT_L' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_L
                                                                                             when 'MC_PACKMAT_P' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_P
                                                                                             when 'MC_PACKMAT_W' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_W )
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PACKMAT-PMQTY
                                                          UNIT  = LS_PACKMAT-PMQTY_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Purchase Flag
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PURCH
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PACKMAT-PURCH
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Purchase Information
      check LS_PACKMAT-PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

***   Price
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICE
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PACKMAT-PRICE
                                                          CURKY = LS_PACKMAT-PRICE_CURR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Price Unit
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_PACKMAT-ISVCE when 'MC_PACKMAT_A' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_A
                                                                                             when 'MC_PACKMAT_L' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_L
                                                                                             when 'MC_PACKMAT_P' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_P
                                                                                             when 'MC_PACKMAT_W' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_W )
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PACKMAT-PRICP
                                                          UNIT  = LS_PACKMAT-PRICP_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Vendor
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PACKMAT-LIFNR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).


***------------------------------------------------------------------------------------------------
***   Add Price Scale
      if LS_PACKMAT-T_PSCALE is not initial.
        IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MC_PACKMAT
                                                IT_PSCALE       = LS_PACKMAT-T_PSCALE
                                      changing  CT_SPVRE        = CT_SPVRE ).
      endif.
    endloop.

  endmethod.
  method ADD_SPVRE_MFMI_P.

    data: LS_MFMI_P type ZVCXI_P0SR_S_MFMI_P,
          LS_PARAM  type /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE      type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFMI type ref to /VCXI/CL_VKSR_SPVRE.


    loop at ME->T_MFMI_P into LS_MFMI_P.

***--------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFMI_P'
                                          IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MFMI
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MFMI to CT_SPVRE.
      move   ABAP_TRUE     to CF_MFI.

***   Set In Use
      LR_SPVRE_MFMI->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
***   Set Leading Object
      LR_SPVRE_MFMI->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MFMI_P-MATNR
                                                    SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Component Scrap
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_KAUSF              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-KAUSF                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-KAUSF_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Setup Percentage for Material Flow In
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFISP              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-MFISP                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-MFISP_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Consumption Factor for Material Flow In
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFICF              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-MFICF                                   to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Consumption Factor Per for Material Flow In
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFICP              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-MFICP                                   to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Purchase Flag
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PURCH              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PURCH                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Costing Relevant
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_SANKA              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-SANKA                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Text
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_TEXT               to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-TEXT                                    to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Vendor Number
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_LIFNR              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-LIFNR                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Price
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICE              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PRICE                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PRICE_CURR                              to LS_PARAM-CURKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Price Unit
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICP_P            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PRICP                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PRICP_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Set Base Weight
      clear LS_PARAM.
      move ZCL_VCXI_PCSP_PR_MFMI_P=>C_PARID_BAWGT            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-BAWGT                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-BAWGT_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Base Weight Per
      clear LS_PARAM.
      move ZCL_VCXI_PCSP_PR_MFMI_P=>C_PARID_BAWGP_A          to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-BAWGP                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-BAWGP_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).


***--------------------------------------------------------------------------------------
***   Fill MFMI PC

***   Set PC Type
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCTYP            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCTYP                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Length
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCLEN            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCLEN                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PCLEN_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Width
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCWID            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCWID                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PCWID_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Height
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCHEI            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCHEI                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PCHEI_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Ups
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCUPS            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCUPS                                   to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Direction
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCDIR            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCDIR                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Add Price Scale Manager
      IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MFMI
                                              IT_PSCALE       = LS_MFMI_P-T_PSCALE
                                    changing  CT_SPVRE        = CT_SPVRE ).
    endloop.

  endmethod.
  method ADD_SPVRE_MFSI_P.

    data: LF_TABIX type I,
          LF_IMFXC type ZVCXI_XCSP_IMFXC,
          LF_NEXTL type ZVCXI_XCSP_NEXTL,
          LF_MFICF type  ZVCXI_XCSP_MFICF,
          LF_MFICP type  ZVCXI_XCSP_MFICP.
    data: LS_PCDIM type ZVCXI_P0SP_S_PCDIM.
    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.
    data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFSI_P type ref to /VCXI/CL_VKSR_SPVRE.


***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_P'
                                        IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

*** Get all PC Dimensions
    LT_PCDIM = ME->ZIF_VCXI_PXSR_PCDIR~GET_PCDIM( ).
    delete LT_PCDIM index 1.   "Remove Base as not handled here

    loop at ME->T_IMFXC_IN into LF_IMFXC.
      move SY-TABIX to LF_TABIX.

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MFSI_P
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MFSI_P to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MFSI_P->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set MF X-Connect
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_IMFXC
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set "Next Low-Level Code" Flag
      LF_NEXTL = value #( ME->T_NEXTL[ LF_TABIX ] default ABAP_TRUE ).
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_NEXTL
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Consumption Factor for Material Flow In
      ME->GET_MFICF_BY_IMFXC( exporting IF_IMFXC = LF_IMFXC
                              importing EF_MFICF = LF_MFICF
                                        EF_MFICP = LF_MFICP ).
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_MFICF
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LF_MFICF
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_MFICP
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LF_MFICP
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set PC Direction
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_PCDIR
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Supervise Dimensions for "Next Low-Level" SFGs
      if LF_NEXTL eq ABAP_TRUE.
        LS_PCDIM = value #( LT_PCDIM[ LF_TABIX ] optional ).

        if LS_PCDIM-PCDIR is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_PCDIR
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PCDIM-PCDIR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
        endif.
        if LS_PCDIM-PCTYP is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCTYP
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PCDIM-PCTYP
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-S_PCLEN is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCLEN
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCLEN
                                                          UNIT  = LS_PCDIM-PCLEN_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-S_PCWID is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCWID
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCWID
                                                          UNIT  = LS_PCDIM-PCWID_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-S_PCHEI is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCHEI
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCHEI
                                                          UNIT  = LS_PCDIM-PCHEI_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-PCUPS is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCUPS
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCUPS
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
      endif.

    endloop.

  endmethod.
  method ADJ_EVQTY_BY_IMFXC.

    SUPER->ADJ_EVQTY_BY_IMFXC( exporting IF_IMFXC = IF_IMFXC
                               changing  CS_EVQTY = CS_EVQTY ).

*** Round Consumption of Configured Packaging Materials
    if LINE_EXISTS( ME->T_XCPMCNF[ IMFXC = IF_IMFXC ] ).
      CS_EVQTY-EVQTY = CEIL( CS_EVQTY-EVQTY ).
    endif.

  endmethod.
  method ADJ_FEATURE.

    SUPER->ADJ_FEATURE( changing CT_FEATURE = CT_FEATURE ).

*** PCs per Bundle
    if LINE_EXISTS( ME->T_ATTID_SHUNT[ TABLE_LINE = ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE ] ).
      /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'pcsPerBundle'     FTVAL = ME->S_PRQTY-PRQTY )
                                        changing  CT_FEATURE = CT_FEATURE ).
    endif.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_UNIT type ref to ZCL_VCXI_PXSR_BL_PSTEP_UNIT.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_UNIT.

***----------------------------------------------------------------------------
*** PC Dimensions
    if ME->S_PCDIM_OUT eq LR_BL_PSTEP_UNIT->S_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Shipping Unit and Previous Quantity
    if ME->F_SHUNT       eq LR_BL_PSTEP_UNIT->F_SHUNT and
       ME->T_ATTID_SHUNT eq LR_BL_PSTEP_UNIT->T_ATTID_SHUNT and
       ME->S_PRQTY       eq LR_BL_PSTEP_UNIT->S_PRQTY.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Packaging Materials
    if ME->T_PACKMAT eq LR_BL_PSTEP_UNIT->T_PACKMAT and
       ME->T_XCPMCNF eq LR_BL_PSTEP_UNIT->T_XCPMCNF and
       ME->T_MFMI_P  eq LR_BL_PSTEP_UNIT->T_MFMI_P.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_UNIT type ref to ZCL_VCXI_PXSR_BL_PSTEP_UNIT.

*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_UNIT.

***----------------------------------------------------------------------------
*** Shipping Unit and Previous Quantity
    move ME->F_SHUNT       to LR_BL_PSTEP_UNIT->F_SHUNT.
    move ME->T_ATTID_SHUNT to LR_BL_PSTEP_UNIT->T_ATTID_SHUNT.
    move ME->S_PRQTY       to LR_BL_PSTEP_UNIT->S_PRQTY.

*** PC Dimensions
    move ME->S_PCDIM_OUT   to LR_BL_PSTEP_UNIT->S_PCDIM_OUT.

*** Packaging Materials
    move ME->T_PACKMAT     to LR_BL_PSTEP_UNIT->T_PACKMAT.
    move ME->T_XCPMCNF     to LR_BL_PSTEP_UNIT->T_XCPMCNF.
    move ME->T_MFMI_P      to LR_BL_PSTEP_UNIT->T_MFMI_P.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'P0_AT_UNIT' or 'P0_AT_GRP'.
        ME->FILL_SPVRE_ADDON_UNIT( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
method FILL_SPVRE_ADDON_UNIT.

  data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Shipping Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_SHUNT  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move ME->F_SHUNT                                 to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Ups
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCUPS  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCUPS                       to LS_PARAM-ATFLV.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).


***------------------------------------------------------------------------------------------------
*** Set Previous Quantity ( only in Case of Bundle it is filled)
  if LINE_EXISTS( ME->T_ATTID_SHUNT[ TABLE_LINE = ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE ] ).
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PRQTY  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PRQTY-PRQTY                           to LS_PARAM-ATFLV.
    move ME->S_PRQTY-PRQTY_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).
  endif.

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Packaging Material
  ME->ADD_SPVRE_MC_PACKMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = IR_SPVRE_ADDON
                            changing  CT_SPVRE        = CT_SPVRE ).

endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    move 'CONV'     to CF_ID_ARBPL.

*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'MANU'     to CF_ID_ARBPL.
    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_IMFXC.

    RT_IMFXC_IN = value #( for LS_XCPMCNF in ME->T_XCPMCNF ( LS_XCPMCNF-IMFXC ) ).

  endmethod.
  method GET_MFICF_BY_IMFXC.

    EF_MFICF = value #( ME->T_XCPMCNF[ IMFXC = IF_IMFXC ]-PMQTY default 1 ).
    EF_MFICP = value #( ME->T_XCPMCNF[ IMFXC = IF_IMFXC ]-TBQTY default 1 ).

  endmethod.
  method GET_SPVRE_ACTVY.

    data:  LS_PARAM        type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity Grouping/Unitizing
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = switch #( ME->F_IPSTP when C_IPSTP_GRP  then 'ACTVY_GRP'
                                                                                when C_IPSTP_UNIT then 'ACTVY_UNIT' )
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCTYP   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCLEN  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCWID  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCHEI  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Ups
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCUPS  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCUPS                       to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Packaging Material
    ME->ADD_SPVRE_MC_PACKMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                        IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                              changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_SPVRE_MF.

*** Add MFSI for existing Input
    if CF_MFI is initial and
       ME->T_IMFXC_IN is initial.
      append initial line to ME->T_IMFXC_IN.
      append initial line to ME->T_NEXTL.
    endif.

*** Add SFG Configured Packaging Materials as MFSI
    append lines of ME->GET_IMFXC( ) to ME->T_IMFXC_IN.
    clear CF_MFI.

*** Delay MFO
    move ABAP_TRUE to CF_MFO.

*** Perform Standard to add MFSI as needed
    SUPER->GET_SPVRE_MF( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                   IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                         changing  CT_SPVRE       = CT_SPVRE
                                   CF_MFI         = CF_MFI
                                   CF_MFO         = CF_MFO ).

*** Add Procurement Config.Mats as MFMI
    ME->ADD_SPVRE_MFMI_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                    IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                          changing  CT_SPVRE       = CT_SPVRE
                                    CF_MFI         = CF_MFI ).

***------------------------------------------------------------------------------------------------
*** Add MFSO PC (replace if needed)
    ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                    IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                          changing  CT_SPVRE       = CT_SPVRE ).
    move ABAP_TRUE to CF_MFO.

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'F_SHUNT'       VALUE = ref #( ME->F_SHUNT       ) ) to RT_DATA.
    append value #( NAME = 'T_ATTID_SHUNT' VALUE = ref #( ME->T_ATTID_SHUNT ) ) to RT_DATA.
    append value #( NAME = 'S_PRQTY'       VALUE = ref #( ME->S_PRQTY       ) ) to RT_DATA.
    append value #( NAME = 'S_PCDIM_OUT'   VALUE = ref #( ME->S_PCDIM_OUT   ) ) to RT_DATA.
    append value #( NAME = 'T_PACKMAT'     VALUE = ref #( ME->T_PACKMAT     ) ) to RT_DATA.
    append value #( NAME = 'T_XCPMCNF'     VALUE = ref #( ME->T_XCPMCNF     ) ) to RT_DATA.
    append value #( NAME = 'T_MFMI_P'      VALUE = ref #( ME->T_MFMI_P      ) ) to RT_DATA.

  endmethod.
  method INIT_ATTRI_SHUNT.

    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SHIPMGR type ref to ZCL_VCXI_XCSU_PR_SHIPMGR.

***------------------------------------------------------------------------------------------------
*** Get Reference for Shipping Manager
    loop at IT_PRVDR into LR_GATE
                      where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCSU_PR_SHIPMGR.
      LR_PR_SHIPMGR ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_SHIPMGR is bound.

***------------------------------------------------------------------------------------------------
*** Bundling
    LT_GATE = IT_PRVDR.
    LR_PR_SHIPMGR->FILTER_BY_SHUNT( exporting IF_ATTID_SHUNT = ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE
                                    changing  CT_GATE        = LT_GATE ).
    if LT_GATE is not initial.
      append ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE to ME->T_ATTID_SHUNT.
    endif.

  endmethod.
  method INIT_BY_MS_PACKMAT.

    data: LS_PMQTY type        ZVCXI_XCSU_S_PMQTY.
    data: LT_GATE  type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PSCALE type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PACKMAT  type ref to ZCL_VCXI_XCSU_PR_PACKMAT,
          LR_PR_PSCALE   type ref to ZCL_VCXI_XCS_PR_PSCALE.
    field-symbols: <S_PACKMAT> type        ZVCXI_P0SR_S_PACKMAT,
                   <S_PSCALE>  type        ZVCXI_XCSR_S_PSCALE.

***------------------------------------------------------------------------------------------------
*** Process all Packaging Materials
    loop at IT_PRVDR into LR_GATE
                        where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCSU_PR_PACKMAT.
      move LR_GATE->R_CLSPR ?to LR_PR_PACKMAT.

      append initial line to ME->T_PACKMAT assigning <S_PACKMAT>.

***   Set SVC ID
      <S_PACKMAT>-ISVCE = LR_GATE->GET_ATTRI( IF_ATTID = C_ATTID_ISVCE )-ATTVA.

***   Material Number and Text
      <S_PACKMAT>-MATNR = LR_PR_PACKMAT->GET_PMATN( ).
      <S_PACKMAT>-TEXT = LR_PR_PACKMAT->GET_TEXT( ).

***   Packaging Material Quantity
      LR_PR_PACKMAT->GET_PMQTY( importing ES_PMQTY = LS_PMQTY ).
      move-corresponding LS_PMQTY      to <S_PACKMAT>.

***   Get Purchase Flag
      <S_PACKMAT>-PURCH = LR_PR_PACKMAT->GET_PURCH( ).

***   Get Purchased Info's if needed
      check LR_PR_PACKMAT->GET_PURCH( ) ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

      <S_PACKMAT>-S_PRICE = LR_PR_PACKMAT->GET_PRICE( ).
      <S_PACKMAT>-S_PRICP = LR_PR_PACKMAT->GET_PRICP( ).
      <S_PACKMAT>-LIFNR   = LR_PR_PACKMAT->GET_LIFNR( ).

***------------------------------------------------------------------------------------------------
***   Find Provider for Price Scale
      loop at IT_PRVDR into LR_GATE_PSCALE
                      where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCS_PR_PSCALE.
***     Check Scale is part of Packaging Material
        check LR_GATE_PSCALE->IS_IN_LINE( IR_GATE = LR_GATE ) eq ABAP_TRUE.

        LR_PR_PSCALE ?= LR_GATE_PSCALE->R_CLSPR.
        check LR_PR_PSCALE is bound.

***     Add Price Scales
        append value #( ISVCE   = LR_GATE_PSCALE->F_ID
                        S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                        S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                        S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                      ) to <S_PACKMAT>-T_PSCALE.
      endloop.

    endloop.

  endmethod.
  method INIT_BY_SHIPMGR.

    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SHIPMGR type ref to ZCL_VCXI_PXSU_PR_SHIPMGR.

***------------------------------------------------------------------------------------------------
*** Get Reference for Shipping Unit
    loop at IT_PRVDR into LR_GATE
                      where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSU_PR_SHIPMGR.
      LR_PR_SHIPMGR ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_SHIPMGR is bound.

***------------------------------------------------------------------------------------------------
*** Adjust for base Ups
    ME->S_PCDIM_OUT-PCUPS *= LR_PR_SHIPMGR->GET_NOUPS( ).

  endmethod.
  method INIT_BY_SHIPUNIT.

    data: LT_DIMEN type ZVCXI_XCSU_TT_DIMEN.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SHIPUNIT type ref to ZCL_VCXI_XCSU_PR_SHIPUNIT.

***------------------------------------------------------------------------------------------------
*** Get Reference for Shipping Unit
    loop at IT_PRVDR into LR_GATE
                      where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCSU_PR_SHIPUNIT.
      LR_PR_SHIPUNIT ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_SHIPUNIT is bound.

***------------------------------------------------------------------------------------------------
*** Shipping Unit Type
    ME->F_SHUNT = LR_PR_SHIPUNIT->GET_SHUNT( ).

*** Get Previous Quantity
    LR_PR_SHIPUNIT->GET_PRQTY( importing ES_PRQTY = ME->S_PRQTY ).

*** Get PC Dimensions
    LR_PR_SHIPUNIT->GET_DIMEN( importing ET_DIMEN = LT_DIMEN ).
    try.
***     Length of Unit
        ME->S_PCDIM_OUT-PCLEN     = value #( LT_DIMEN[ DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH ]-DIMVA optional ).
        ME->S_PCDIM_OUT-PCLEN_UOM = value #( LT_DIMEN[ DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH ]-DIMVA_UOM optional ).

***     Width of Unit
        ME->S_PCDIM_OUT-PCWID     = value #( LT_DIMEN[ DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH ]-DIMVA optional ).
        ME->S_PCDIM_OUT-PCWID_UOM = value #( LT_DIMEN[ DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH ]-DIMVA_UOM optional ).

***     Height of Unit
        ME->S_PCDIM_OUT-PCHEI     = value #( LT_DIMEN[ DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT ]-DIMVA optional ).
        ME->S_PCDIM_OUT-PCHEI_UOM = value #( LT_DIMEN[ DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT ]-DIMVA_UOM optional ).

***     Ups Total of Unit
        ME->S_PCDIM_OUT-PCUPS = LR_PR_SHIPUNIT->GET_TBQTY( )-TBQTY.

***     PC Direction and Number of Outs
        ME->S_PCDIM_OUT-PCDIR = 'A'.
        ME->S_PCDIM_OUT-NOOUT = 1.

      catch CX_SY_CONVERSION_OVERFLOW into data(LR_CX_SY_CONVERSION_OVERFLOW).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_CONVERSION_OVERFLOW ).
    endtry.

  endmethod.
  method INIT_BY_SPEC.

*** Initialize by Shipping Unit
    ME->INIT_BY_SHIPUNIT( IT_PRVDR = IT_PRVDR ).

*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

    if ME->S_PCDIM_OUT-PCTYP is initial.
***   Set Shipping Unit as PC Type
      ME->S_PCDIM_OUT-PCTYP = ME->F_SHUNT.
    endif.

*** Initialize by Shipping Manager
    ME->INIT_BY_SHIPMGR( IT_PRVDR = IT_PRVDR ).

*** Initialize by Packaging Materials
    ME->INIT_BY_MS_PACKMAT( IT_PRVDR = IT_PRVDR ).

*** Get fulfilled Shipping Unit Attributes
    ME->INIT_ATTRI_SHUNT( IT_PRVDR = IT_PRVDR ).

*** Initialize Configured Packaging Material Information
    ME->INIT_BY_XCPMCNF( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method INIT_BY_XCPMCNF.

    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM.
    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_XCPMCNF    type ref to ZCL_VCXI_PXSS_PR_XCPMCNF,
          LR_PR_MS_XPROC   type ref to ZCL_VCXI_PXSS_PR_MS_XPROC,
          LR_GATE_MS_XPROC type ref to /VCXI/CL_VKSR_GATE.


*** Loop at defined Parts
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_XCPMCNF.
      LR_PR_XCPMCNF ?= LR_GATE->R_CLSPR.

***   Get Procurement
      LR_PR_MS_XPROC = LR_PR_XCPMCNF->GET_PRVDR_MS_XPROC( importing ER_GATE = LR_GATE_MS_XPROC ).
      if LR_PR_MS_XPROC is bound.
***     Get Handling Dimensions
        LS_HNDDIM = LR_PR_XCPMCNF->GET_HNDDIM( ).

***     Define as Material Flow Material In
        append value #( MATNR      = LR_PR_MS_XPROC->GET_MATNR( )
                        S_KAUSF    = LR_PR_MS_XPROC->GET_KAUSF( )
                        MFISP      = 100
                        MFISP_UOM  = '%'
                        MFICF      = LR_PR_XCPMCNF->GET_PMQTY( )-PMQTY
                        MFICP      = LR_PR_XCPMCNF->GET_TBQTY( )-TBQTY
                        SANKA      = LR_PR_MS_XPROC->GET_SANKA( )
                        TEXT       = LR_PR_MS_XPROC->GET_TEXT( )
                        PURCH      = LR_PR_MS_XPROC->GET_PURCH( )
                        LIFNR      = LR_PR_MS_XPROC->GET_LIFNR( )
*                        PRICE      = LR_PR_MS_XPROC->GET_PRICE( )-PRICE
*                        PRICE_CURR = LR_PR_MS_XPROC->GET_PRICE( )-PRICE_CURR
*                        PRICP      = LR_PR_MS_XPROC->GET_PRICP( )-PRICP
*                        PRICP_UOM  = LR_PR_MS_XPROC->GET_PRICP( )-PRICP_UOM
                        T_PSCALE   = ME->GET_PSCALE( IR_GATE_PARENT = LR_GATE_MS_XPROC )
                        PCTYP      = 'ZVCXI_P0_PRODUCT'
                        PCLEN      = LS_HNDDIM-HNDLE
                        PCLEN_UOM  = LS_HNDDIM-HNDLE_UOM
                        PCWID      = LS_HNDDIM-HNDWI
                        PCWID_UOM  = LS_HNDDIM-HNDWI_UOM
                        PCHEI      = LS_HNDDIM-HNDHE
                        PCHEI_UOM  = LS_HNDDIM-HNDHE_UOM
                        PCUPS      = 1
                        NOOUT      = 1
                        PCDIR      = 'A'
                      ) to ME->T_MFMI_P.

      else.
***     Add Connection
        append value #( IMFXC   = LR_PR_XCPMCNF->GET_GXCON( )
                        S_PMQTY = LR_PR_XCPMCNF->GET_PMQTY( )
                        S_TBQTY = LR_PR_XCPMCNF->GET_TBQTY( )
                      ) to ME->T_XCPMCNF.
      endif.

    endloop.

  endmethod.
  method REPLACE_MFSI_BY_MFMI.

    field-symbols: <T_MFMI> type standard table,
                   <S_MFMI> type ANY.


    check IR_MFMI is bound and
          LINE_EXISTS( ME->T_XCPMCNF[ IMFXC = IF_IMFXC ] ).
    assign IR_MFMI->* to <T_MFMI>.

    loop at <T_MFMI> assigning <S_MFMI>.
      append corresponding #( base ( <S_MFMI> )
                              ME->T_XCPMCNF[ IMFXC = IF_IMFXC ] mapping MFICF = PMQTY
                                                                        MFICP = TBQTY
                            ) to ME->T_MFMI_P.
    endloop.
    delete ME->T_XCPMCNF where IMFXC eq IF_IMFXC.

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.

    loop at T_XCPMCNF into data(LS_XCPMCNF).
      CT_PCDIM = value #( base CT_PCDIM
*                        ( PCUPS = LS_XCPMCNF-TBQTY ) ).    "wrong conversion on Manual Work Center due to to high Ups (considering MC not "products"
                        ( PCUPS = 1 ) ).
    endloop.

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    CT_PCDIM = value #( ( ME->S_PCDIM_OUT ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.

*** Base Dimension are not known
    append initial line to RT_PCDIM.

*** Configured Packaging Material Config.
    loop at T_XCPMCNF into data(LS_XCPMCNF).
***   Setting PC Type avoids forwarding of Flute in Production
      append value #( PCTYP      = 'ZVCXI_P0_PRODUCT'
                    ) to RT_PCDIM.
    endloop.

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    field-symbols: <S_MFMI_P>  type ZVCXI_P0SR_S_MFMI_P.


    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension of Material Flow Material In
    loop at ME->T_MFMI_P assigning <S_MFMI_P>.
      <S_MFMI_P>-S_PCDIM = ME->TURN_PCDIM( IS_PCDIM = <S_MFMI_P>-S_PCDIM
                                           IF_PCDIR = IF_PCDIR ).
    endloop.

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
