
class ZCL_VCXI_FFSP_SERVICE definition
  public
  final
  create private .

public section.

  class-data F_DIMID_AREA type DIMID .
  class-data F_DIMID_LENGTH type DIMID .

  class-methods GET_FIWID
    importing
      !IT_FIDIM type ZVCXI_FFSP_TT_FIDIM
    returning
      value(RS_FIWID) type ZVCXI_F0S_S_FIWID
    raising
      /VCXI/CX_CKX .
  class-methods CLASS_CONSTRUCTOR .
  class-methods CONV_L_TO_A
    importing
      !IS_CALCV type ZVCXI_XCS_S_CALCV
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    returning
      value(RS_CALCV) type ZVCXI_XCS_S_CALCV
    raising
      /VCXI/CX_CKX .
  class-methods CONV_A_TO_L
    importing
      !IS_CALCV type ZVCXI_XCS_S_CALCV
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    returning
      value(RS_CALCV) type ZVCXI_XCS_S_CALCV
    raising
      /VCXI/CX_CKX .
  class-methods CONV_A_TO_P
    importing
      !IS_CALCV type ZVCXI_XCS_S_CALCV
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    returning
      value(RS_CALCV) type ZVCXI_XCS_S_CALCV
    raising
      /VCXI/CX_CKX .
  class-methods CONV_L_TO_P
    importing
      !IS_CALCV type ZVCXI_XCS_S_CALCV
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    returning
      value(RS_CALCV) type ZVCXI_XCS_S_CALCV
    raising
      /VCXI/CX_CKX .
  class-methods CONV_P_TO_A
    importing
      !IS_CALCV type ZVCXI_XCS_S_CALCV
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    returning
      value(RS_CALCV) type ZVCXI_XCS_S_CALCV
    raising
      /VCXI/CX_CKX .
  class-methods CONV_P_TO_L
    importing
      !IS_CALCV type ZVCXI_XCS_S_CALCV
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    returning
      value(RS_CALCV) type ZVCXI_XCS_S_CALCV
    raising
      /VCXI/CX_CKX .
protected section.
private section.
endclass. "ZCL_VCXI_FFSP_SERVICE definition
class ZCL_VCXI_FFSP_SERVICE implementation.
  method CLASS_CONSTRUCTOR.

*** Area
    call function 'DIMENSION_GET'
      exporting
        LENGTH              = 2
      importing
        DIMID               = F_DIMID_AREA
      exceptions
        DIMENSION_NOT_FOUND = 1.

*** Length
    call function 'DIMENSION_GET'
      exporting
        LENGTH              = 1
      importing
        DIMID               = F_DIMID_LENGTH
      exceptions
        DIMENSION_NOT_FOUND = 1.


  endmethod.
  method CONV_A_TO_L.

    check IS_FIDIM-FIWID is not initial.

*** Calculate Quantity
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_CALCV-CALCV
                                                        IF_CALCV_UOM_1 = IS_CALCV-CALCV_UOM
                                                        IF_CALCV_2     = IS_FIDIM-FIWID
                                                        IF_CALCV_UOM_2 = IS_FIDIM-FIWID_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                              importing EF_CALCV       = RS_CALCV-CALCV
                                                        EF_CALCV_UOM   = RS_CALCV-CALCV_UOM ).

  endmethod.
  method CONV_A_TO_P.

    data: LS_CALCV_LENGTH  type ZVCXI_XCS_S_CALCV.


*** Convert Area to Length
    LS_CALCV_LENGTH = ZCL_VCXI_FFSP_SERVICE=>CONV_A_TO_L( IS_CALCV = IS_CALCV
                                                          IS_FIDIM = IS_FIDIM ).
*** Convert Length to PC
    RS_CALCV = ZCL_VCXI_FFSP_SERVICE=>CONV_L_TO_P( IS_CALCV = LS_CALCV_LENGTH
                                                   IS_FIDIM = IS_FIDIM ).

  endmethod.
  method CONV_L_TO_A.

*** Calculate Quantity
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_CALCV-CALCV
                                                        IF_CALCV_UOM_1 = IS_CALCV-CALCV_UOM
                                                        IF_CALCV_2     = IS_FIDIM-FIWID
                                                        IF_CALCV_UOM_2 = IS_FIDIM-FIWID_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                              importing EF_CALCV       = RS_CALCV-CALCV
                                                        EF_CALCV_UOM   = RS_CALCV-CALCV_UOM ).

  endmethod.
  method CONV_L_TO_P.

    check IS_FIDIM-RLETA is not initial.

*** Calculate Rolls based on Target Roll Length
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_CALCV-CALCV
                                                        IF_CALCV_UOM_1 = IS_CALCV-CALCV_UOM
                                                        IF_CALCV_2     = IS_FIDIM-RLETA
                                                        IF_CALCV_UOM_2 = IS_FIDIM-RLETA_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                              importing EF_CALCV       = RS_CALCV-CALCV ).
    RS_CALCV-CALCV_UOM = 'ST'.

  endmethod.
  method CONV_P_TO_A.

*** PC to Length
    RS_CALCV = ZCL_VCXI_FFSP_SERVICE=>CONV_P_TO_L( IS_CALCV = IS_CALCV
                                                   IS_FIDIM = IS_FIDIM ).

*** Length to Area
    RS_CALCV = ZCL_VCXI_FFSP_SERVICE=>CONV_L_TO_A( IS_CALCV = RS_CALCV
                                                   IS_FIDIM = IS_FIDIM ).

  endmethod.
  method CONV_P_TO_L.

*** Calculate Length based on Target Roll Length
    RS_CALCV-CALCV     = IS_CALCV-CALCV * IS_FIDIM-RLETA.
    RS_CALCV-CALCV_UOM = IS_FIDIM-RLETA_UOM.

  endmethod.
  method GET_FIWID.

    loop at IT_FIDIM into data(LS_FIDIM).
***   Consider Outs
      LS_FIDIM-FIWID *= LS_FIDIM-NOOUT.

      if RS_FIWID is initial.
        RS_FIWID = LS_FIDIM-S_FIWID.
      else.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = RS_FIWID-FIWID
                                                            IF_CALCV_UOM_1 = RS_FIWID-FIWID_UOM
                                                            IF_CALCV_2     = LS_FIDIM-FIWID
                                                            IF_CALCV_UOM_2 = LS_FIDIM-FIWID_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                            IF_UOM         = RS_FIWID-FIWID_UOM
                                                  importing EF_CALCV       = RS_FIWID-FIWID
                                                            EF_CALCV_UOM   = RS_FIWID-FIWID_UOM ).
      endif.
    endloop.

  endmethod.
