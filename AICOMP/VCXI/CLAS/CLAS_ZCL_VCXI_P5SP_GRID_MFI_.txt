
class ZCL_VCXI_P5SP_GRID_MFI definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_P5SP_S_MFI_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHECK_PSCALE_MGR_ACTIV
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_ACTIV) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFI
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFI_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_MFI_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P5SP_GRID_MFI definition
class ZCL_VCXI_P5SP_GRID_MFI implementation.
  method CHANGE_STYLE_MFI.

    data: LS_MFI_VIS type ZVCXI_P5SP_S_MFI_VIS.


    free CT_STYL.

***--------------------------------------------------------------------------------------
*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_MFI_VIS.

*** --------------------------------------------------------------------------------------------
*** Set Matnr = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set ID of MF x-connection = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Component Scrap = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'KAUSF'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICF'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor per = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Setup Percentage = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFISP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Low-Level Code = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Next Low Level Code = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NEXTL'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

***------------------------------------------------------------------
**** Purchase Material
*    case LS_MFI_VIS-PURCH.
*      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
****     Set Vendor = Enable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
*                                    IF_STYLE     = LF_STYLE_ENABLED
*                          changing  CT_STYL      = CT_STYL ).
****     Set Price = Enable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
*                                    IF_STYLE     = LF_STYLE_ENABLED
*                          changing  CT_STYL      = CT_STYL ).
****     Set Price Per = Enable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
*                                    IF_STYLE     = LF_STYLE_ENABLED
*                          changing  CT_STYL      = CT_STYL ).
*
*      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
****     Set Vendor = Enable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
*                                    IF_STYLE     = LF_STYLE_ENABLED
*                          changing  CT_STYL      = CT_STYL ).
****     Set Price = Disable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
*                                    IF_STYLE     = ME->F_STYLE_DISABLED
*                          changing  CT_STYL      = CT_STYL ).
****     Set Price Per = Disable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
*                                    IF_STYLE     = ME->F_STYLE_DISABLED
*                          changing  CT_STYL      = CT_STYL ).
*
*      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
****     Set Vendor = Disable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
*                                    IF_STYLE     = ME->F_STYLE_DISABLED
*                          changing  CT_STYL      = CT_STYL ).
****     Set Price = Disable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
*                                    IF_STYLE     = ME->F_STYLE_DISABLED
*                          changing  CT_STYL      = CT_STYL ).
****     Set Price Per = Disable
*        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
*                                    IF_STYLE     = ME->F_STYLE_DISABLED
*                          changing  CT_STYL      = CT_STYL ).
*    endcase.

***------------------------------------------------------------------
**** Dummy Flag
*    if LR_PR_MFMI->IS_DUMMY( ) eq ABAP_TRUE.
****   Purchase =  Disable
*      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
*                                  IF_STYLE     = ME->F_STYLE_DISABLED
*                        changing  CT_STYL      = CT_STYL ).
*
*    else.
*      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
*                                  IF_STYLE     = LF_STYLE_ENABLED
*                        changing  CT_STYL      = CT_STYL ).
*    endif.

  endmethod.
  method CHECK_PSCALE_MGR_ACTIV.

    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PSCALE_MGR type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***------------------------------------------------------------------
*** If we are connect to a Scale Manager -> Request Price depending on Consumption
    LT_GATE = IR_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCS_PSCALE_MGR=>C_IPRVT_XCS_PSCALE_MGR
                                  IF_INUSE = ABAP_TRUE ).

*** Assign Reference of Price Scale Manager
    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC eq 0.
      try.
          move LR_GATE->R_CLSPR ?to LR_PSCALE_MGR.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PSCALE_MGR.
      endtry.
    endif.

    check LR_PSCALE_MGR is bound.
    move ABAP_TRUE to RF_ACTIV.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZIF_VCXI_XCSP_MFI=>C_IPRVT_XCS_MFI.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED          type /VCXI/CKX_LOCKED,
          LF_INUSE           type /VCXI/VKSR_INUSE,
          LF_HIDE_MFMI_DATA  type ABAP_BOOL,
          LF_HIDE_MFSI_DATA  type ABAP_BOOL,
          LF_HIDE_PURCH_DATA type ABAP_BOOL,
          LF_COLPOS          type I.
    data: LS_MFI_GRID type ZVCXI_P5SP_S_MFI_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <S_FCAT> type          LVC_S_FCAT.


***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Determine Settings
    LF_HIDE_MFMI_DATA  = ABAP_TRUE.
    LF_HIDE_MFSI_DATA  = ABAP_TRUE.
    LF_HIDE_PURCH_DATA = ABAP_TRUE.

    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_MFI_GRID.

*      if LS_MFI_GRID-R_GATE->R_CLSPR is instance of ZCL_VCXI_P5SP_PR_MFMI_W.
*        LF_HIDE_MFMI_DATA  = ABAP_FALSE.
*      endif.
      if LS_MFI_GRID-PURCH is not initial.
        LF_HIDE_PURCH_DATA = ABAP_FALSE.
      endif.
    endloop.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE'.
          move ABAP_TRUE    to <S_FCAT>-TECH.

***     ID for MF x-connect
        when 'IMFXC'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

***     Always Visible and Editable
        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

***     Component Factor and per / Setup % / Scrap
        when 'MFICF' or 'MFICP' or 'MFISP' or 'KAUSF'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

        when 'MFICF_UOM' or 'MFISP_UOM' or 'KAUSF_UOM'.

***     Only Visible if MFSI is there
        when 'DISST'.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.

***     Next Low-Level Code
        when 'NEXTL'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE         to <S_FCAT>-EDIT.
          endif.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.
          move ABAP_TRUE           to <S_FCAT>-CHECKBOX.

***     Only Available if MFMI is there
        when 'WEBWI'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

***     Only Visible if MFMI is there and it is purchased
        when 'LIFNR' or 'PRICE' or 'PRICP'.
          move LF_HIDE_PURCH_DATA  to <S_FCAT>-NO_OUT.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

        when 'TEXT'.
          move LF_HIDE_MFMI_DATA   to <S_FCAT>-NO_OUT.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

        when 'PRICE_CURR' or 'PRICP_UOM' or 'LIFNR_DESCR'.
          move LF_HIDE_PURCH_DATA to <S_FCAT>-NO_OUT.

        when 'PURCH'.
          move ABAP_TRUE   to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

      endcase.


*** Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'IMFXC'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFRAT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'KAUSF'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'KAUSF_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFISP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFISP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFICF'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFICP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'DISST'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NEXTL'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

      if <S_FCAT>-FIELDNAME eq 'TEXT'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE_CURR'.  <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PURCH'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

      if <S_FCAT>-FIELDNAME eq 'WEBWI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'WEBWI_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RLETA'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RLETA_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOOUT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_P5SP_S_MFI_GRID( POSID  = LR_GATE->GET_POSID( )
                                                      GATKY  = LR_GATE->F_GATKY
                                                      R_GATE = LR_GATE
                                                    ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_MFI_VIS( exporting IR_GATE = LR_GATE
                       changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_MFI( exporting IR_GATE = LR_GATE
                                          IS_DATA = <S_DATA>
                                 changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_MFI_VIS.

    data: LS_MFI_VIS type ZVCXI_P5SP_S_MFI_VIS.
    data: LR_PR_MF type ref to ZCL_VCXI_XCSP_PR_MF,
          LR_MFI   type ref to ZIF_VCXI_XCSP_MFI,
          LR_MFM   type ref to ZIF_VCXI_XCSP_MFM.


***------------------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MF.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_MF is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_MFI_VIS.

***------------------------------------------------------------------------------------------------
*** Get Material Number, Description and X-connect
    LS_MFI_VIS-MATNR       = LR_PR_MF->GET_MATNR( ).
    LS_MFI_VIS-MATNR_DESCR = LR_PR_MF->GET_MATNR_DESCR( ).
    LS_MFI_VIS-IMFXC       = LR_PR_MF->GET_IMFXC( ).

*** Get Consumption and Material Flow Ratio
    LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_PR_MF->GET_CONSU( ) ).
    LS_MFI_VIS-MFRAT = LR_PR_MF->GET_MFRAT( ).

*** Get Material Flow In Infos
*{   REPLACE        HEDK927906                                        1
*\    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFI.
*\      LR_MFI ?= LR_PR_MF.
  TRY .
    LR_MFI ?= LR_PR_MF.
    IF LR_MFI IS BOUND.
*}   REPLACE
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFI->GET_MFISP( ) ).
      LS_MFI_VIS-MFICF = LR_MFI->GET_MFICF( ).
      LS_MFI_VIS-MFICP = LR_MFI->GET_MFICP( ).
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFI->GET_KAUSF( ) ).
    endif.
*{   INSERT         HEDK927906                                        2
  CATCH CX_SY_MOVE_CAST_ERROR.
  ENDTRY.
*}   INSERT

**** Get Material Flow SFG Infos
*    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFS.
*      LS_MFI_VIS-DISST = cast ZIF_VCXI_XCSP_MFS( LR_PR_MF )->GET_DISST( ).
*      LS_MFI_VIS-NEXTL = cast ZIF_VCXI_XCSP_MFS( LR_PR_MF )->GET_NEXTL( ).
*    endif.

*** Get Material Flow Material Infos
*{   REPLACE        HEDK927906                                        3
*\    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFM.
*\      LR_MFM ?= LR_PR_MF.
  TRY .
    LR_MFM ?= LR_PR_MF.
    IF LR_MFM IS BOUND.
*}   REPLACE
      LS_MFI_VIS-TEXT        = LR_MFM->GET_TEXT( ).
      LS_MFI_VIS-PURCH       = LR_MFM->GET_PURCH( ).
      LS_MFI_VIS-LIFNR       = LR_MFM->GET_LIFNR( ).
      LS_MFI_VIS-LIFNR_DESCR = LR_MFM->GET_LIFNR_DESCR( ).
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFM->GET_PRICE( ) ).
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFM->GET_PRICP( ) ).
    endif.
*{   INSERT         HEDK927906                                        4
  CATCH CX_SY_MOVE_CAST_ERROR.
  ENDTRY.
*}   INSERT

*** Get Roll Diemension
*{   REPLACE        HEDK927906                                        5
*\    if LR_PR_MF is instance of ZIF_VCXI_P5SP_RLDIM.
  TRY .
    "IF LR_PR_MF IS BOUND.
*}   REPLACE
      LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZIF_VCXI_P5SP_RLDIM( LR_PR_MF )->GET_RLDIM( ) ).
*{   DELETE         HEDK927906                                        7
*\    endif.
*}   DELETE
*{   INSERT         HEDK927906                                        6
  CATCH CX_SY_MOVE_CAST_ERROR.
  ENDTRY.
*}   INSERT

***------------------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_MFI_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MFI_GRID type ZVCXI_P5SP_S_MFI_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_MFI_GRID.

          check LS_MFI_GRID-R_GATE is bound and
                LS_MFI_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_MFI_VIS( IR_GATE = LS_MFI_GRID-R_GATE
                           IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method SET_MFI_VIS.

    data: LS_MFI_VIS_OLD type ZVCXI_P5SP_S_MFI_VIS,
          LS_MFI_VIS_NEW type ZVCXI_P5SP_S_MFI_VIS.
    data: LR_PR_MF type ref to ZCL_VCXI_XCSP_PR_MF,
          LR_MFI   type ref to ZIF_VCXI_XCSP_MFI,
          LR_MFM   type ref to ZIF_VCXI_XCSP_MFM,
          LR_MFMI  type ref to ZCL_VCXI_P5SP_PR_MFMI.


***------------------------------------------------------------------------------------------------
*** Get PR Class
*{   REPLACE        HEDK927906                                        1
*\    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_XCSP_PR_MF.
    TRY .
*}   REPLACE
    LR_PR_MF ?= IR_GATE->R_CLSPR.
*{   INSERT         HEDK927906                                        2
       catch CX_SY_MOVE_CAST_ERROR.
    ENDTRY.
*}   INSERT
    check LR_PR_MF is bound.

*** Get old Values
    ME->GET_MFI_VIS( exporting IR_GATE = IR_GATE
                     changing  CS_DATA = LS_MFI_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_MFI_VIS_NEW.

***------------------------------------------------------------------------------------------------
*** Material
    if LS_MFI_VIS_NEW-MATNR ne LS_MFI_VIS_OLD-MATNR.
      LR_PR_MF->SET_MATNR( IF_MATNR = LS_MFI_VIS_NEW-MATNR
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** ID for MF x-connection
    if LS_MFI_VIS_NEW-IMFXC ne LS_MFI_VIS_OLD-IMFXC.
      LR_PR_MF->SET_IMFXC( IF_IMFXC = LS_MFI_VIS_NEW-IMFXC
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


*** Set Material Flow In Infos
*{   REPLACE        HEDK927906                                        3
*\    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFI.
   TRY.
*}   REPLACE
      LR_MFI ?= LR_PR_MF.

      if LS_MFI_VIS_NEW-MFISP ne LS_MFI_VIS_OLD-MFISP.
        LR_MFI->SET_MFISP( IS_MFISP = corresponding #( LS_MFI_VIS_NEW )
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-MFICF ne LS_MFI_VIS_OLD-MFICF.
        LR_MFI->SET_MFICF( IF_MFICF = LS_MFI_VIS_NEW-MFICF
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-MFICP ne LS_MFI_VIS_OLD-MFICP.
        LR_MFI->SET_MFICP( IF_MFICP = LS_MFI_VIS_NEW-MFICP
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
*{   REPLACE        HEDK927906                                        4
*\    endif.
             catch CX_SY_MOVE_CAST_ERROR.
    ENDTRY.
*}   REPLACE

*      if LS_MFI_VIS_NEW-KAUSF ne LS_MFI_VIS_OLD-KAUSF.
*        LR_MFI->SET_KAUSF( IS_KAUSF = corresponding #( LS_MFI_VIS_NEW )
*                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
*      endif.


*** Set Material Flow Material Infos
*{   REPLACE        HEDK927906                                        5
*\    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFM.
    TRY.
*}   REPLACE
      LR_MFM ?= LR_PR_MF.
      if LS_MFI_VIS_NEW-TEXT ne LS_MFI_VIS_OLD-TEXT.
        LR_MFM->SET_TEXT( IF_TEXT  = LS_MFI_VIS_NEW-TEXT
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-PURCH ne LS_MFI_VIS_OLD-PURCH.
        LR_MFM->SET_PURCH( IF_PURCH  = LS_MFI_VIS_NEW-PURCH
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-PRICE ne LS_MFI_VIS_OLD-PRICE.
        LR_MFM->SET_PRICE( IS_PRICE = corresponding #( LS_MFI_VIS_NEW )
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-PRICP ne LS_MFI_VIS_OLD-PRICP.
        LR_MFM->SET_PRICP( IS_PRICP = corresponding #( LS_MFI_VIS_NEW )
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
*{   REPLACE        HEDK927906                                        6
*\    endif.
       catch CX_SY_MOVE_CAST_ERROR.
    ENDTRY.
*}   REPLACE

*** Set Roll Dimension of Material Flow Material In
*{   REPLACE        HEDK927906                                        7
*\    if LR_PR_MF is instance of ZCL_VCXI_P5SP_PR_MFMI.
  TRY.
*}   REPLACE
      LR_MFMI ?= LR_PR_MF.
      if LS_MFI_VIS_NEW-S_WEBWI ne LS_MFI_VIS_OLD-S_WEBWI.
        LR_MFMI->SET_WEBWI( IS_WEBWI = LS_MFI_VIS_NEW-S_WEBWI
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-S_SURWT ne LS_MFI_VIS_OLD-S_SURWT.
        LR_MFMI->SET_SURWT( IS_SURWT = LS_MFI_VIS_NEW-S_SURWT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
*{   REPLACE        HEDK927906                                        8
*\    endif.
      catch CX_SY_MOVE_CAST_ERROR.
    ENDTRY.
*}   REPLACE

  endmethod.
