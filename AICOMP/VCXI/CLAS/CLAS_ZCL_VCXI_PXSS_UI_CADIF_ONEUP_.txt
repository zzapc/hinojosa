
class ZCL_VCXI_PXSS_UI_CADIF_ONEUP definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_CADIF_ONEUP_VIS type ZVCXI_PXSS_S_CADIF_ONEUP_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  constants C_UC_CADDE type UI_FUNC value 'CADDE' ##NO_TEXT.
  constants C_UC_CADIF type UI_FUNC value 'CADIF' ##NO_TEXT.
  data R_GRID_CADDL type ref to ZCL_VCXI_PXSS_GRID_CADDL .
  data R_PR_CADIF_ONEUP type ref to ZCL_VCXI_PXSS_PR_CADIF_ONEUP .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CADIF
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CADDE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_UI_CADIF_ONEUP definition
class ZCL_VCXI_PXSS_UI_CADIF_ONEUP implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_CADIF_ONEUP_BIND'
      exporting
        IR_UI_CADIF_ONEUP = ME
      importing
        ES_DYNP           = ME->S_DYNP.

***--------------------------------------------------------------------------------------
*** Create Grid for Documents
    create object ME->R_GRID_CADDL
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_CADDL'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CADIF_ONEUP.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Document Grid
    if ME->R_GRID_CADDL is bound.
      ME->R_GRID_CADDL->DO_FREE( ).
      clear ME->R_GRID_CADDL.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Initialize Grid
    if ME->R_GRID_CADDL is bound.
      ME->R_GRID_CADDL->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_CADDL->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_CADIF_ONEUP_VIS type ZVCXI_PXSS_S_CADIF_ONEUP_VIS.


*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_CADIF_ONEUP_VIS.

***--------------------------------------------------------------------------------------
*** Set Flag - PDF Requested
    if ME->S_CADIF_ONEUP_VIS-FPDFR ne LS_CADIF_ONEUP_VIS-FPDFR.
      ME->R_PR_CADIF_ONEUP->SET_FPDFR( exporting IF_FPDFR = LS_CADIF_ONEUP_VIS-FPDFR
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_CADDE.
        ME->HANDLE_UC_CADDE( ).
      when C_UC_CADIF.
        ME->HANDLE_UC_CADIF( ).
    endcase.

  endmethod.
  method HANDLE_UC_CADDE.

*** Display Design Error Message as Popup
    ZCL_VCXI_XCS_POPUP_TEXTEDIT=>START( IF_TEXT = ME->R_PR_CADIF_ONEUP->GET_CADDE( ) ).

  endmethod.
  method HANDLE_UC_CADIF.

    data: LF_XML type STRING.
    data: LR_CADIF_IO type ref to DATA,
          LR_XML      type ref to CL_XML_DOCUMENT.
    field-symbols: <S_CADIF_IO> type ANY.


    LR_CADIF_IO = ME->R_PR_CADIF_ONEUP->GET_CADIF_IO( ).
    assign LR_CADIF_IO->* to <S_CADIF_IO>.

*** Create XML
    call transformation ID
         source S_CADIF_ONEUP_IO = <S_CADIF_IO>
         result xml LF_XML.

    create object LR_XML.
    LR_XML->PARSE_STRING( STREAM = LF_XML ).
    LR_XML->DISPLAY( ).

  endmethod.
  method INIT_VIS.

    free: ME->S_CADIF_ONEUP_VIS.

*** Get Flag - PDF Requested
    ME->S_CADIF_ONEUP_VIS-FPDFR = ME->R_PR_CADIF_ONEUP->GET_FPDFR( ).

***--------------------------------------------------------------------------------------
*** Technical Details

*** Get CAD Project ID and Owner
    ME->S_CADIF_ONEUP_VIS-CADPI = ME->R_PR_CADIF_ONEUP->GET_CADPI( ).
    ME->S_CADIF_ONEUP_VIS-CADPO = ME->R_PR_CADIF_ONEUP->GET_CADPO( ).

*** Get Get OneUp ID and GUID
    ME->S_CADIF_ONEUP_VIS-ICADO = ME->R_PR_CADIF_ONEUP->GET_ICADO( ).
    ME->S_CADIF_ONEUP_VIS-GCADO = ME->R_PR_CADIF_ONEUP->GET_GCADO( ).

*** Get Review Request Option
    ME->S_CADIF_ONEUP_VIS-OREVR = ME->R_PR_CADIF_ONEUP->GET_OREVR( ).

  endmethod.
