
class ZCL_VCXI_P5SP_GRID_RLOUT definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
      !IF_TABNAME type TABNAME default 'ZVCXI_P5SP_S_RLOUT_GRID'
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_RLOUT
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_RLOUT_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_RLOUT_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P5SP_GRID_RLOUT definition
class ZCL_VCXI_P5SP_GRID_RLOUT implementation.
method CHANGE_STYLE_RLOUT.

  free CT_STYL.

***--------------------------------------------------------------------------------------
*** Set Film Width = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIWID'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Film Width Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIWID_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Repeat Length = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RELEN'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Repeat Length Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RELEN_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Number of Ups = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPS'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_P5SP_PR_RLOUT=>C_IPRVT_P5_RLOUT.

endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE.
    field-symbols: <S_FCAT>  type LVC_S_FCAT.

***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
          move ABAP_TRUE    to <S_FCAT>-TECH.

        when 'WEBWI'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

        when 'NOUPS'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

        when 'NOOUT'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

      endcase.
    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_P5SP_S_RLOUT_GRID( POSID  = LR_GATE->GET_POSID( )
                                                        GATKY  = LR_GATE->F_GATKY
                                                        R_GATE = LR_GATE
                                                      ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_RLOUT_VIS( exporting IR_GATE = LR_GATE
                         changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_RLOUT( exporting IR_GATE = LR_GATE
                                            IS_DATA = <S_DATA>
                                   changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_RLOUT_VIS.

    data: LS_RLOUT_VIS type ZVCXI_P5SP_S_RLOUT_VIS.
    data: LR_PR_RLOUT  type ref to ZCL_VCXI_P5SP_PR_RLOUT.


***------------------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_RLOUT.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_RLOUT is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_RLOUT_VIS.

*** Get Web Width
    LS_RLOUT_VIS-S_WEBWI = LR_PR_RLOUT->GET_WEBWI( ).

*** Get Number Ups
    LS_RLOUT_VIS-NOUPS = LR_PR_RLOUT->GET_NOUPS( ).

*** Get Number Outs
    LS_RLOUT_VIS-NOOUT = LR_PR_RLOUT->GET_NOOUT( ).


***------------------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_RLOUT_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_RLOUT_GRID type ZVCXI_P5SP_S_RLOUT_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_RLOUT_GRID.

          check LS_RLOUT_GRID-R_GATE is bound and
                LS_RLOUT_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_RLOUT_VIS( IR_GATE = LS_RLOUT_GRID-R_GATE
                             IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method SET_RLOUT_VIS.

    data: LS_RLOUT_VIS_OLD type ZVCXI_P5SP_S_RLOUT_VIS,
          LS_RLOUT_VIS_NEW type ZVCXI_P5SP_S_RLOUT_VIS.
    data: LR_PR_RLOUT type ref to ZCL_VCXI_P5SP_PR_RLOUT.


***------------------------------------------------------------------------------------------------
*** Get PR Class
*{   REPLACE        HEDK927906                                        1
*\    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_P5SP_PR_RLOUT.
    TRY.
*}   REPLACE
    LR_PR_RLOUT ?= IR_GATE->R_CLSPR.
*{   INSERT         HEDK927906                                        2
       CATCH CX_SY_MOVE_CAST_ERROR.
      ENDTRY.
*}   INSERT
    check LR_PR_RLOUT is bound.

*** Get old Values
    ME->GET_RLOUT_VIS( exporting IR_GATE = IR_GATE
                       changing  CS_DATA = LS_RLOUT_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_RLOUT_VIS_NEW.

***------------------------------------------------------------------------------------------------
*** Web Width
    if LS_RLOUT_VIS_NEW-S_WEBWI ne LS_RLOUT_VIS_OLD-S_WEBWI.
      LR_PR_RLOUT->SET_WEBWI( IS_WEBWI = LS_RLOUT_VIS_NEW-S_WEBWI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number Ups
    if LS_RLOUT_VIS_NEW-NOUPS ne LS_RLOUT_VIS_OLD-NOUPS.
      LR_PR_RLOUT->SET_NOUPS( IF_NOUPS = LS_RLOUT_VIS_NEW-NOUPS
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number Out
    if LS_RLOUT_VIS_NEW-NOOUT ne LS_RLOUT_VIS_OLD-NOOUT.
      LR_PR_RLOUT->SET_NOOUT( IF_NOOUT = LS_RLOUT_VIS_NEW-NOOUT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
