
class ZCL_VCXI_PXSS_PR_INPUT definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  abstract
  create public .

public section.

  interfaces ZIF_VCXI_PXSS_COMM_NEXT
      abstract methods DO_BACKWARD .
  interfaces ZIF_VCXI_PXSS_COMM_PREV
      abstract methods DO_FORWARD .

  constants C_IPRVT_PX_INPUT type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_INPUT' ##NO_TEXT.

  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_ATTID_MAX_ALLOWED_CHILD type /VCXI/VKS_ATTID value 'MAX_ALLOWED_CHILD' ##NO_TEXT.
  constants C_ATTID_MIN_ALLOWED_CHILD type /VCXI/VKS_ATTID value 'MIN_ALLOWED_CHILD' ##NO_TEXT.
  constants C_IEVNT_I_REQ_BACKWARD type /VCXI/VKSC_IEVNT value 'REQ_BACKWARD' ##NO_TEXT.
  constants C_IEVNT_I_REQ_FORWARD type /VCXI/VKSC_IEVNT value 'REQ_FORWARD' ##NO_TEXT.

  methods GET_PRVDR_SPEC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC
    raising
      /VCXI/CX_CKX .
  methods CHECK_ALLOWED_CHILDREN
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_PR_INPUT definition
class ZCL_VCXI_PXSS_PR_INPUT implementation.
  method CHECK_ALLOWED_CHILDREN.

    data: LF_MIN   type I,
          LF_MAX   type I,
          LF_COUNT type I.


***--------------------------------------------------------------------------------------
*** Read minimum/maximum number of children from attribute
    LF_MIN = ME->R_GATE->GET_ATTRI( IF_ATTID = C_ATTID_MIN_ALLOWED_CHILD )-ATTVA.
    LF_MAX = ME->R_GATE->GET_ATTRI( IF_ATTID = C_ATTID_MAX_ALLOWED_CHILD )-ATTVA.

*** Count Children
    LF_COUNT = LINES( ME->R_GATE->GET_PRVDR( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD
                                             IF_INUSE = ABAP_TRUE ) ).

***--------------------------------------------------------------------------------------
*** Check minimum allowed Children
    if LF_COUNT lt LF_MIN.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     At least &1 children are required.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '010'
                                 IF_MSGV1 = |{ LF_MIN number = user }| ).
      endif.
    endif.

*** Check maximum allowed FGs
    if LF_MAX   ne 0 and
       LF_COUNT gt LF_MAX.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Only &1 children allowed.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '011'
                                 IF_MSGV1 = |{ LF_MAX number = user }| ).
      endif.
    endif.

  endmethod.
  method GET_PRVDR_SPEC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           ER_PR_SPEC.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SPEC=>C_IPRVT_PX_SPEC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to ER_PR_SPEC.

  endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Number of Children
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_ALLOWED_CHILDREN( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Number of Children
    ME->CHECK_ALLOWED_CHILDREN( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_WERKS.

    data: LR_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC.

    ME->GET_PRVDR_SPEC( importing ER_PR_SPEC = LR_PR_SPEC ).
    check LR_PR_SPEC is bound.
    RF_WERKS = LR_PR_SPEC->GET_WERKS( ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.

***   Event Forwarding for Communication
      when C_IEVNT_I_REQ_FORWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_NEXT~C_IEVNT_O_FORWARD_REQ ).

***   Event Backwarding for Communication
      when C_IEVNT_I_REQ_BACKWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_NEXT~C_IEVNT_O_BACKWARD_REQ ).

    endcase.

  endmethod.
