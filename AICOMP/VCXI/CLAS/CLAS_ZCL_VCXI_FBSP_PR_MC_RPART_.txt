
class ZCL_VCXI_FBSP_PR_MC_RPART definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  create public .

public section.

  constants C_PARID_RCWGT type /VCXI/VKS_PARID value 'ZVCXI_FB_RCWGT' ##NO_TEXT.
  constants C_IPRVT_MC_RPART type /VCXI/VKSC_IPRVT value 'ZVCXI_FBSP_MC_RPART' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCO
    exporting
      !ES_AVGCO type ZVCXI_XCS_S_AVGCO
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_RCWGT
    exporting
      !ES_RCWGT type ZVCXI_FBS_S_RCWGT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_RCWGT
    importing
      !IS_RCWGT type ZVCXI_FBS_S_RCWGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCP
    exporting
      !ES_AVGCP type ZVCXI_XCS_S_AVGCP
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCO
    importing
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCP
    importing
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods CALC_CONSU
    redefinition .
protected section.

  constants C_IEVNT_O_RCWGT_CHANGED type /VCXI/VKSC_IEVNT value 'RCWGT_CHANGED' ##NO_TEXT.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FBSP_PR_MC_RPART definition
class ZCL_VCXI_FBSP_PR_MC_RPART implementation.
  method CALC_CONSU.

    data: LF_DIMID_1       type DIMID,
          LF_DIMID_2       type DIMID,
          LF_DIMID_DIMLESS type DIMID.
    data: LS_AVGCO type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP type ZVCXI_XCS_S_AVGCP,
          LS_CONSU type ZVCXI_XCSP_S_CONSU,
          LS_CALCV type ZVCXI_XCS_S_CALCV.


    check IS_MQTYI is not initial.

*** Get Average Consumption and Coverage
    ME->GET_AVGCO( importing ES_AVGCO = LS_AVGCO ).
    ME->GET_AVGCP( importing ES_AVGCP = LS_AVGCP ).

*** Calculate Weight
    if LS_AVGCP-AVGCP is not initial.

***   Get Dimension Info
      LF_DIMID_1 = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = IS_MQTYI-MQTYI_UOM ).
      LF_DIMID_2 = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = LS_AVGCP-AVGCP_UOM ).

***   Get ID for dimensionless Units
      call function 'DIMENSION_GET'
        importing
          DIMID               = LF_DIMID_DIMLESS
        exceptions
          DIMENSION_NOT_FOUND = 0.

***   Calculate with dimensionless Units
      if LF_DIMID_1 eq LF_DIMID_DIMLESS or
         LF_DIMID_2 eq LF_DIMID_DIMLESS.

        LS_CALCV-CALCV = IS_MQTYI-MQTYI / LS_AVGCP-AVGCP.
        LS_CALCV-CALCV_UOM = IS_MQTYI-MQTYI_UOM.
      else.
***     Calculate with dimension-driven Units
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_MQTYI-MQTYI
                                                            IF_CALCV_UOM_1 = IS_MQTYI-MQTYI_UOM
                                                            IF_CALCV_2     = LS_AVGCP-AVGCP
                                                            IF_CALCV_UOM_2 = LS_AVGCP-AVGCP_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                  importing EF_CALCV       = LS_CALCV-CALCV
                                                            EF_CALCV_UOM   = LS_CALCV-CALCV_UOM ).
      endif.

      LS_CONSU-CONSU   =  LS_CALCV-CALCV * LS_AVGCO-AVGCO.
    else.
      LS_CONSU-CONSU   = 0.
    endif.

    LS_CONSU-CONSU_UOM = LS_AVGCO-AVGCO_UOM.

*** Set Consumption
    ME->SET_CONSU( IS_CONSU = LS_CONSU ).

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Parameter dimensions
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method GET_AVGCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).
    move LS_PARAM-ATFLV to ES_AVGCO-AVGCO.
    move LS_PARAM-UNIT  to ES_AVGCO-AVGCO_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_AVGCP.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).
    move LS_PARAM-ATFLV to ES_AVGCP-AVGCP.
    move LS_PARAM-UNIT  to ES_AVGCP-AVGCP_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_RCWGT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RCWGT ).
    move LS_PARAM-ATFLV to ES_RCWGT-RCWGT.
    move LS_PARAM-UNIT  to ES_RCWGT-RCWGT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.

    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

***--------------------------------------------------------------------------------------
*** Search for Average Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_AVGCO_A or
                            PARID eq C_PARID_AVGCO_L or
                            PARID eq C_PARID_AVGCO_P or
                            PARID eq C_PARID_AVGCO_W ).
      move LS_PARAM-PARID to ME->F_PARID_AVGCO.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Search for Average Consumption Per
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_AVGCP_A or
                            PARID eq C_PARID_AVGCP_L or
                            PARID eq C_PARID_AVGCP_P or
                            PARID eq C_PARID_AVGCP_W ).
      move LS_PARAM-PARID to ME->F_PARID_AVGCP.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Search for Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Search for Price Per
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_PRICP_A or
                            PARID eq C_PARID_PRICP_L or
                            PARID eq C_PARID_PRICP_P or
                            PARID eq C_PARID_PRICP_W ).
      move LS_PARAM-PARID to ME->F_PARID_PRICP.
      exit.
    endloop.

  endmethod.
  method SET_AVGCO.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).

    move IS_AVGCO-AVGCO     to LS_PARAM-ATFLV.
    move IS_AVGCO-AVGCO_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_AVGCP.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).

    move IS_AVGCP-AVGCP     to LS_PARAM-ATFLV.
    move IS_AVGCP-AVGCP_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_RCWGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RCWGT ).

    move IS_RCWGT-RCWGT     to LS_PARAM-ATFLV.
    move IS_RCWGT-RCWGT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RCWGT_CHANGED ).
    endif.

  endmethod.
