
class ZCL_VCXI_PFSR_BL_PSTEP_RCUT definition
  public
  inheriting from ZCL_VCXI_P0SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_P0SR_ADJ_PCDIM .
  interfaces ZIF_VCXI_P0SR_CONV_LTP .
  interfaces ZIF_VCXI_P0SR_PCDIR .

  constants C_IPSTP_RCUT type /VCXI/VSMC_IPSTP value 'P0_PS_RCUT'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_RCUT
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  data S_MFMI_REEL type ZVCXI_PFSR_S_MFMI_REEL .
  data T_PCDIM_OUT type ZVCXI_P0SP_TT_PCDIM .

  methods ADD_SPVRE_PCOUT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_REEL
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_RCUT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_PCDIM
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFMI_REEL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_PSCALE_MGR
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IT_PSCALE type ZVCXI_XCSR_TT_PSCALE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_PFSR_BL_PSTEP_RCUT definition
class ZCL_VCXI_PFSR_BL_PSTEP_RCUT implementation.
method ADD_LIMITS_TO_RTE_PSTEP.

  data:          LF_LDUOM               type        /VCXI/VSMC_LDUOM,
                 LF_LDVAL               type        /VCXI/VSMR_LDVAL.
  data:          LI_LVVAL               type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
  data:          LT_LTYPE               type        /VCXI/CKX_TT_OBJECT.
  data:          LR_LTYPE               type ref to /VCXI/CL_VSMC_LTYPE,
                 LR_OBJECT              type ref to /VCXI/IF_CKX_OBJECT.

  SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
  LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
  loop at LT_LTYPE into LR_OBJECT.
    move LR_OBJECT ?to LR_LTYPE.

    clear: LF_LDVAL,
           LF_LDUOM,
           LI_LVVAL.

***----------------------------------------------------------------------------
    case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Sheet Length (Outbound)
      when 'P0_LT_DO_SHTLEN'.
        LF_LDVAL = value #( ME->T_PCDIM_OUT[ 1 ]-PCLEN optional ).
        LF_LDUOM = value #( ME->T_PCDIM_OUT[ 1 ]-PCLEN_UOM optional ).

***   Sheet Width (Outbound)
      when 'P0_LT_DO_SHTWID'.
        LF_LDVAL = value #( ME->T_PCDIM_OUT[ 1 ]-PCWID optional ).
        LF_LDUOM = value #( ME->T_PCDIM_OUT[ 1 ]-PCWID_UOM optional ).

      when others.
        continue.
    endcase.


***----------------------------------------------------------------------------
*** Set
    case LR_LTYPE->F_MLTYP.
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
        IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                    IF_LDVAL = LF_LDVAL
                                    IF_LDUOM = LF_LDUOM ).
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
        IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                    II_LVVAL = LI_LVVAL ).
    endcase.
  endloop.

endmethod.
method ADD_SPVRE_MFMI_REEL.

  data: LS_LEOKY type        /VCXI/VKSR_S_LEOKY,
        LS_PARAM type        /VCXI/VKSR_S_PARAM.
  data: LR_SPVCE           type ref to /VCXI/CL_VKSC_SPVCE,
        LR_SPVRE_MFMI_REEL type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFMI_REEL'
                                      IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_MFMI_REEL
    exporting
      IR_SPVCE  = LR_SPVCE
      IR_PARENT = IR_SPVRE_MFMGR.
  append LR_SPVRE_MFMI_REEL to CT_SPVRE.

*** Set In Use
  LR_SPVRE_MFMI_REEL->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Material Number
  clear LS_LEOKY.
  move ME->S_MFMI_REEL-MATNR                        to LS_LEOKY-LEOKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_LEOKY-SETBY.
  LR_SPVRE_MFMI_REEL->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

****------------------------------------------------------------------------------------------------
**** Set Material Flow Cross Connect?
*    clear LS_PARAM.
*    move ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC          to LS_PARAM-PARID.
*    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
*    move ??                                          to LS_PARAM-ATWRT.
*    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
*    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Basis Weight
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_BAWGT    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-BAWGT                        to LS_PARAM-ATFLV.
  move ME->S_MFMI_REEL-BAWGT_UOM                    to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Basis Weight Per
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_BAWGP_A  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-BAWGP                        to LS_PARAM-ATFLV.
  move ME->S_MFMI_REEL-BAWGP_UOM                    to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Factor
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_MFICF  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-MFICF                      to LS_PARAM-ATFLV.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCTYP         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PCTYP                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Length
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCLEN         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PCLEN                             to LS_PARAM-ATFLV.
  move ME->S_MFMI_REEL-PCLEN_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Width
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCWID         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PCWID                             to LS_PARAM-ATFLV.
  move ME->S_MFMI_REEL-PCWID_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Height
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCHEI         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PCHEI                             to LS_PARAM-ATFLV.
  move ME->S_MFMI_REEL-PCHEI_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Ups
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCUPS         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PCUPS                             to LS_PARAM-ATFLV.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Direction
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCDIR         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PCDIR                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PURCH   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-PURCH                       to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Vendor
  clear LS_PARAM.
  move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_LIFNR   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move ME->S_MFMI_REEL-LIFNR                       to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).


***------------------------------------------------------------------------------------------------
*** Add Price Scale
  ME->ADD_SPVRE_PSCALE_MGR( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_MFMI_REEL
                                      IT_PSCALE       = ME->S_MFMI_REEL-T_PSCALE
                            changing  CT_SPVRE        = CT_SPVRE ).

endmethod.
method ADD_SPVRE_PCOUT.

  data:  LS_PCDIM_OUT        type        ZVCXI_P0SP_S_PCDIM,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_PCOUT      type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'PCOUT'
                                      IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

  loop at ME->T_PCDIM_OUT into LS_PCDIM_OUT.

***------------------------------------------------------------------------------------------------
*** Create Supervisor Runtime Element
    create object LR_SPVRE_PCOUT
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_PARENT.
    append LR_SPVRE_PCOUT to CT_SPVRE.

*** Set In Use
    LR_SPVRE_PCOUT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_PCTYP        to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-PCTYP                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_PCLEN       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-PCLEN                          to LS_PARAM-ATFLV.
    move LS_PCDIM_OUT-PCLEN_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_PCWID       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-PCWID                          to LS_PARAM-ATFLV.
    move LS_PCDIM_OUT-PCWID_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_PCHEI       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-PCHEI                          to LS_PARAM-ATFLV.
    move LS_PCDIM_OUT-PCHEI_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Ups
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_PCUPS       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-PCUPS                          to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number Outs
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_NOOUT       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-NOOUT                          to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set PC Direction
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_PCOUT=>C_PARID_PCDIR        to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move LS_PCDIM_OUT-PCDIR                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_PCOUT->SET_PARAM( IS_PARAM = LS_PARAM ).

  endloop.

endmethod.
method ADD_SPVRE_PSCALE_MGR.

  data:  LS_PSCALE           type        ZVCXI_XCSR_S_PSCALE,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE_PSCALE_MGR type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVCE_PSCALE     type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_PSCALE_MGR type ref to /VCXI/CL_VKSR_SPVRE,
         LR_SPVRE_PSCALE     type ref to /VCXI/CL_VKSR_SPVRE.

  check IT_PSCALE is not initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE_PSCALE_MGR = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'PSCALE_MGR'
                                                 IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_PSCALE_MGR
    exporting
      IR_SPVCE  = LR_SPVCE_PSCALE_MGR
      IR_PARENT = IR_SPVRE_PARENT.
  append LR_SPVRE_PSCALE_MGR to CT_SPVRE.

*** Set In Use
  LR_SPVRE_PSCALE_MGR->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Add Scales
  loop at IT_PSCALE into LS_PSCALE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE_PSCALE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_PSCALE-ISVCE
                                               IR_SPVCE_PARENT = LR_SPVRE_PSCALE_MGR->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_PSCALE
      exporting
        IR_SPVCE  = LR_SPVCE_PSCALE
        IR_PARENT = LR_SPVRE_PSCALE_MGR.
    append LR_SPVRE_PSCALE to CT_SPVRE.

*** Set In Use
    LR_SPVRE_PSCALE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
    clear LS_PARAM.
    move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_W       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move LS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
    move LS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    LR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
    clear LS_PARAM.
    move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move LS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
    move LS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    LR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
    clear LS_PARAM.
    move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_W       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move LS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
    move LS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    LR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endloop.

endmethod.
method COMPARE.

  data:  LR_BL_PSTEP_RCUT type ref to ZCL_VCXI_PFSR_BL_PSTEP_RCUT.

*** Super Compare
  RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
  check RF_SIMILAR eq ABAP_TRUE.

  move IR_BL_PSTEP ?to LR_BL_PSTEP_RCUT.

***----------------------------------------------------------------------------
*** PC Dimensions
  if ME->S_MFMI_REEL eq LR_BL_PSTEP_RCUT->S_MFMI_REEL and
     ME->T_PCDIM_OUT eq LR_BL_PSTEP_RCUT->T_PCDIM_OUT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                      IF_DATE    = IF_DATE
                      IR_APPDATA = IR_APPDATA ).

endmethod.
method COPY.

  data:  LR_BL_PSTEP_RCUT type ref to ZCL_VCXI_PFSR_BL_PSTEP_RCUT.

*** Super Copy
  RR_BL_PSTEP = SUPER->COPY( ).
  move RR_BL_PSTEP ?to LR_BL_PSTEP_RCUT.

***----------------------------------------------------------------------------
*** PC Dimensions
  move ME->S_MFMI_REEL   to LR_BL_PSTEP_RCUT->S_MFMI_REEL.
  move ME->T_PCDIM_OUT   to LR_BL_PSTEP_RCUT->T_PCDIM_OUT.

endmethod.
method DESERIALIZE.

  data:  LF_XML   type STRING.

  check IF_XML is not initial.

*** Deserialize
  call transformation ID
       source xml IF_XML
       result SUPER_XML    = LF_XML

              S_MFMI_REEL  = ME->S_MFMI_REEL
              T_PCDIM_OUT  = ME->T_PCDIM_OUT.

*** Super Deserialize
  SUPER->DESERIALIZE( IF_XML = LF_XML ).

endmethod.
method FILL_SPVRE_ADDON.

  SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     IR_ARBPL       = IR_ARBPL
                           changing  CT_SPVRE       = CT_SPVRE ).

  case IR_SPVRE_ADDON->GET_ID( ).
    when 'P0_AT_RCUT'.
      ME->FILL_SPVRE_ADDON_RCUT( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                           IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                 changing  CT_SPVRE       = CT_SPVRE ).
  endcase.

endmethod.
method FILL_SPVRE_ADDON_RCUT.

***------------------------------------------------------------------------------------------------
*** Add PC Out
  ME->ADD_SPVRE_PCOUT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                 IR_SPVRE_PARENT = IR_SPVRE_ADDON
                       changing  CT_SPVRE        = CT_SPVRE ).

endmethod.
method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
  check CF_ID_GRP   is initial and
        CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
  move 'GRP_RCUT' to CF_ID_GRP.
  move 'RCUT'     to CF_ID_ARBPL.

endmethod.
method GET_SPVRE_MF.

***------------------------------------------------------------------------------------------------
*** Add Reel
  ME->ADD_SPVRE_MFMI_REEL( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                           changing  CT_SPVRE       = CT_SPVRE ).
  move ABAP_TRUE to CF_MFI.

***------------------------------------------------------------------------------------------------
*** Add MFSO PC
  ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                  IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                        changing  CT_SPVRE       = CT_SPVRE ).
  move ABAP_TRUE to CF_MFO.

endmethod.
method INIT_BY_SPEC.

  SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                       IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Sizes
  ME->INIT_BY_SPEC_PCDIM( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Material Flow Material in - Reel
  ME->INIT_BY_SPEC_REEL( IT_PRVDR = IT_PRVDR ).

endmethod.
method INIT_BY_SPEC_PCDIM.

  data:  LS_PCDIM_OUT      type        ZVCXI_P0SP_S_PCDIM,
         LS_REWID          type        ZVCXI_P0SS_S_REWID,
         LS_AGGRA          type        ZVCXI_PFSS_S_AGGRA,
         LS_INGRA          type        ZVCXI_PFSS_S_INGRA,
         LS_CALIP          type        ZVCXI_P0SS_S_CALIP.
  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_SPEC_UCB    type ref to ZCL_VCXI_PFSS_PR_SPEC_UCB,
         LR_PR_MS_RCUT     type ref to ZCL_VCXI_PFSS_PR_MS_RCUT,
         LR_PR_UCB         type ref to ZCL_VCXI_PFSS_PR_UCB.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SPEC_UCB.
        if LR_PR_SPEC_UCB is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_SPEC_UCB is bound.

*** Get Material Specification - Reel Cutting Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_RCUT.
        if LR_PR_MS_RCUT is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_MS_RCUT is bound.

*** Get Unconverted Board Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_UCB.
        if LR_PR_UCB is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

***------------------------------------------------------------------------------------------------
*** Get all needed Information
  LS_AGGRA = LR_PR_SPEC_UCB->GET_AGGRA( ).
  LS_INGRA = LR_PR_SPEC_UCB->GET_INGRA( ).
  LS_CALIP = LR_PR_SPEC_UCB->GET_CALIP( IF_POOTI = '*' ).
  LS_REWID = LR_PR_MS_RCUT->GET_REWID( ).

***------------------------------------------------------------------------------------------------
*** PC Dimensions Out - Length, Width and Height
  move LS_INGRA-INGRA     to LS_PCDIM_OUT-PCLEN.
  move LS_INGRA-INGRA_UOM to LS_PCDIM_OUT-PCLEN_UOM.
  move LS_AGGRA-AGGRA     to LS_PCDIM_OUT-PCWID.
  move LS_AGGRA-AGGRA_UOM to LS_PCDIM_OUT-PCWID_UOM.
  move LS_CALIP-CALIP     to LS_PCDIM_OUT-PCHEI.
  move LS_CALIP-CALIP_UOM to LS_PCDIM_OUT-PCHEI_UOM.

*** PC Dimensions Out - Number of Ups
  if LR_PR_UCB is bound.
    move LR_PR_UCB->GET_NOUPT( ) to LS_PCDIM_OUT-PCUPS.
  else.
    move 1                       to LS_PCDIM_OUT-PCUPS.
  endif.

*** PC Dimensions Out - PC Outs
  ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = LS_REWID-REWID_UOM
                                                     IF_UOM_IN    = LS_PCDIM_OUT-PCWID_UOM
                                                     IF_VALUE_IN  = LS_PCDIM_OUT-PCWID
                                           importing EF_VALUE_OUT = LS_PCDIM_OUT-PCWID
                                                     EF_UOM_OUT   = LS_PCDIM_OUT-PCWID_UOM ).
  if LS_PCDIM_OUT-PCWID is not initial.
    LS_PCDIM_OUT-NOOUT = floor( LS_REWID-REWID / LS_PCDIM_OUT-PCWID ).
  endif.

***------------------------------------------------------------------------------------------------
*** Get PC Type and Direction
  ZCL_VCXI_P0SR_CUST_PSTEP=>GET_PSTEP_INFO( exporting IF_IPSTP = ME->F_IPSTP
                                            importing EF_PCTYP = LS_PCDIM_OUT-PCTYP
                                                      EF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR
                                                      EF_PCDOP = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDOP ).

  move ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR to LS_PCDIM_OUT-PCDIR.
  append LS_PCDIM_OUT to ME->T_PCDIM_OUT.

*** Set Direction
  ME->ZIF_VCXI_P0SR_PCDIR~SET_PCDIR( IF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR ).

endmethod.
method INIT_BY_SPEC_REEL.

  data: LS_PCDIM_OUT type        ZVCXI_P0SP_S_PCDIM,
        LS_REWID     type        ZVCXI_P0SS_S_REWID,
        LS_INGRA     type        ZVCXI_PFSS_S_INGRA,
        LS_GRAMM     type        ZVCXI_P0SS_S_GRAMM,
        LS_CALIP     type        ZVCXI_P0SS_S_CALIP.
  data: LR_GATE_SPEC_UCB type ref to /VCXI/CL_VKSR_GATE,
        LR_GATE_MS_RCUT  type ref to /VCXI/CL_VKSR_GATE,
        LR_GATE_PSCALE   type ref to /VCXI/CL_VKSR_GATE,
        LR_PR_SPEC_UCB   type ref to ZCL_VCXI_PFSS_PR_SPEC_UCB,
        LR_PR_MS_RCUT    type ref to ZCL_VCXI_PFSS_PR_MS_RCUT,
        LR_PR_PSCALE     type ref to ZCL_VCXI_XCS_PR_PSCALE.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  loop at IT_PRVDR into LR_GATE_SPEC_UCB.
    try.
        move LR_GATE_SPEC_UCB->R_CLSPR ?to LR_PR_SPEC_UCB.
        if LR_PR_SPEC_UCB is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_SPEC_UCB is bound.

*** Get Material Specification - Reel Cutting Reference
  loop at IT_PRVDR into LR_GATE_MS_RCUT.
    try.
        move LR_GATE_MS_RCUT->R_CLSPR ?to LR_PR_MS_RCUT.
        if LR_PR_MS_RCUT is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_MS_RCUT is bound.

***------------------------------------------------------------------------------------------------
*** Material Info
  ME->S_MFMI_REEL-MATNR    = LR_PR_MS_RCUT->GET_MATNR( ).
  ME->S_MFMI_REEL-TEXT     = LR_PR_MS_RCUT->GET_TEXT( ).
  ME->S_MFMI_REEL-PURCH    = LR_PR_MS_RCUT->GET_PURCH( ).
  ME->S_MFMI_REEL-LIFNR    = LR_PR_MS_RCUT->GET_LIFNR( ).
  ME->S_MFMI_REEL-SANKA    = LR_PR_MS_RCUT->GET_SANKA( ).

*** Consumption Factor for Material Flow In
  ME->S_MFMI_REEL-MFICF     = '1'.

*** PC Type
  ME->S_MFMI_REEL-PCTYP     = 'ZVCXI_PF_REEL'.

*** PC Length
  LS_INGRA = LR_PR_SPEC_UCB->GET_INGRA( ).
  ME->S_MFMI_REEL-PCLEN     = LS_INGRA-INGRA.
  ME->S_MFMI_REEL-PCLEN_UOM = LS_INGRA-INGRA_UOM.

*** PC Width
  LS_REWID = LR_PR_MS_RCUT->GET_REWID( ).
  ME->S_MFMI_REEL-PCWID     = LS_REWID-REWID.
  ME->S_MFMI_REEL-PCWID_UOM = LS_REWID-REWID_UOM.

*** PC Height
  LS_CALIP = LR_PR_SPEC_UCB->GET_CALIP( IF_POOTI = '*' ).
  ME->S_MFMI_REEL-PCHEI     = LS_CALIP-CALIP.
  ME->S_MFMI_REEL-PCHEI_UOM = LS_CALIP-CALIP_UOM.

*** Number of Ups
  loop at ME->T_PCDIM_OUT into LS_PCDIM_OUT.
    ME->S_MFMI_REEL-PCUPS = LS_PCDIM_OUT-PCUPS * LS_PCDIM_OUT-NOOUT.
  endloop.

*** Number of Outs (fix for MFI)
  ME->S_MFMI_REEL-NOOUT     = 1.

*** PC Direction (fix for Reels)
  ME->S_MFMI_REEL-PCDIR     = 'A'.

*** Get Base Weight / Base Weight Per
  ME->S_MFMI_REEL-BAWGP     = '1000'.
  ME->S_MFMI_REEL-BAWGP_UOM = 'M2'.

  LS_GRAMM = LR_PR_MS_RCUT->GET_GRAMM( ).
  ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_GRAMM-GRAMM
                                                      IF_CALCV_UOM_1 = LS_GRAMM-GRAMM_UOM
                                                      IF_CALCV_2     = ME->S_MFMI_REEL-BAWGP
                                                      IF_CALCV_UOM_2 = ME->S_MFMI_REEL-BAWGP_UOM
                                                      IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                      IF_UOM         = 'KG'
                                            importing EF_CALCV       = ME->S_MFMI_REEL-BAWGT
                                                      EF_CALCV_UOM   = ME->S_MFMI_REEL-BAWGT_UOM ).

***------------------------------------------------------------------------------------------------
*** Find Provider for Price Scale
  loop at IT_PRVDR into LR_GATE_PSCALE.
    try.
        move LR_GATE_PSCALE->R_CLSPR ?to LR_PR_PSCALE.

***     Check Scale is part of Sheet Procurement
        check LR_GATE_PSCALE->GET_PARENT( ) eq LR_GATE_MS_RCUT.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
    check LR_PR_PSCALE is bound.

*** Add Price Scales
    append value #( ISVCE   = LR_GATE_PSCALE->F_ID
                    S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                    S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                    S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                  ) to ME->S_MFMI_REEL-T_PSCALE.

  endloop.

endmethod.
method SERIALIZE.

*** Super Serialize
  RF_XML = SUPER->SERIALIZE( ).

*** Serialize
  call transformation ID
       source SUPER_XML    = RF_XML

              S_MFMI_REEL  = ME->S_MFMI_REEL
              T_PCDIM_OUT  = ME->T_PCDIM_OUT

       result xml RF_XML.

endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_IN.

  field-symbols: <S_PCDIM>    type ZVCXI_P0SP_S_PCDIM.

  append initial line to CT_PCDIM assigning <S_PCDIM>.
  move-corresponding ME->S_MFMI_REEL to <S_PCDIM>.

endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_OUT.

  move ME->T_PCDIM_OUT to CT_PCDIM.

endmethod.
method ZIF_VCXI_P0SR_PCDIR~SET_PCDIR.

  field-symbols: <S_PCDIM_OUT> type ZVCXI_P0SP_S_PCDIM.

  move IF_PCDIR to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.

*** Turn PC Dimension OUT
  loop at ME->T_PCDIM_OUT assigning <S_PCDIM_OUT>.
    <S_PCDIM_OUT> = ME->TURN_PCDIM( IS_PCDIM = <S_PCDIM_OUT>
                                    IF_PCDIR = IF_PCDIR ).
  endloop.

endmethod.
