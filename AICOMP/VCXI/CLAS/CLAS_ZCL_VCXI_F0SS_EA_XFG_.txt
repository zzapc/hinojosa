
class ZCL_VCXI_F0SS_EA_XFG definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  interfaces /VCXI/IF_VKCR_EXPL_BOM .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_COMPR
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_ALLOWED type ABAP_BOOL
    returning
      value(RF_COMPR) type ZVCXI_F0SS_COMPR
    raising
      /VCXI/CX_CKX .
  methods GET_DIKEY
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_DIKEY) type ZVCXI_FFS_S_DIKEY
    raising
      /VCXI/CX_CKX .
  methods GET_CSPLIT
    returning
      value(RT_CSPLIT) type ZVCXI_FFSS_TT_CSPLIT
    raising
      /VCXI/CX_CKX .
  methods GET_KDMAT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_KDMAT) type KDMAT
    raising
      /VCXI/CX_CKX .
  methods GET_KDPTX
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_KDPTX) type KDPTX
    raising
      /VCXI/CX_CKX .
  methods GET_MAKTX
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RF_MAKTX) type MAKTX
    raising
      /VCXI/CX_CKX .
  methods GET_MATNR
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_MATNR) type MATNR
    raising
      /VCXI/CX_CKX .
  methods SET_MATNR
    importing
      !IF_MATNR type MATNR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_XFG type ref to ZCL_VCXI_F0SS_PR_XFG .

  methods GET_EXQTY
    returning
      value(RS_EXQTY) type /VCXI/VKCR_S_EXQTY
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_F0SS_EA_XFG definition
class ZCL_VCXI_F0SS_EA_XFG implementation.
  method /VCXI/IF_VKCR_EXPL_BOM~FILTER_CPBRG.
  endmethod.
  method /VCXI/IF_VKCR_EXPL_BOM~GET_BOM.

    data: LS_EXQTY   type /VCXI/VKCR_S_EXQTY.


    if IS_EXQTY is supplied.
      move IS_EXQTY         to LS_EXQTY.
    else.
      move ME->GET_EXQTY( ) to LS_EXQTY.
    endif.

***--------------------------------------------------------------------------------------
*** BOM Consumption
    RS_EXBOM-MENGE   = LS_EXQTY-EXQTY * ME->GET_COMPR( ).
    RS_EXBOM-MENGE_X = ABAP_TRUE.
    RS_EXBOM-MEINS   = LS_EXQTY-EXQTY_UOM .
    RS_EXBOM-MEINS_X = ABAP_TRUE.

*** Make it a FIX Quantity
    RS_EXBOM-FMENG   = ABAP_TRUE.
    RS_EXBOM-FMENG_X = ABAP_TRUE.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_XFG.
      catch CX_SY_MOVE_CAST_ERROR.
***     Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
  method GET_COMPR.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->GET_COMPR( importing EF_COMPR   = RF_COMPR
                                       EF_SETBY   = EF_SETBY
                                       EF_ALLOWED = EF_ALLOWED ).

  endmethod.
  method GET_CSPLIT.

    check ME->R_PR_XFG is bound.
    RT_CSPLIT = ME->R_PR_XFG->GET_CSPLIT( ).

  endmethod.
  method GET_DIKEY.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->GET_DIKEY( importing ES_DIKEY = RS_DIKEY
                                       EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_EXQTY.

    data:  LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

    LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

    if LR_APPDATA is bound and
       LR_APPDATA->S_OPQTY-OPQTY is not initial.
      move LR_APPDATA->S_OPQTY-OPQTY     to RS_EXQTY-EXQTY.
      move LR_APPDATA->S_OPQTY-OPQTY_UOM to RS_EXQTY-EXQTY_UOM.
    endif.

  endmethod.
  method GET_KDMAT.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->GET_KDMAT( importing EF_KDMAT = RF_KDMAT
                                       EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_KDPTX.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->GET_KDPTX( importing EF_KDPTX = RF_KDPTX
                                       EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_MAKTX.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->GET_MAKTX( importing EF_MAKTX = RF_MAKTX
                                       EF_SETBY = EF_SETBY
                                       EF_FOVRR = EF_FOVRR ).

  endmethod.
  method GET_MATNR.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->GET_MATNR( importing EF_MATNR = RF_MATNR
                                       EF_SETBY = EF_SETBY ).

  endmethod.
  method SET_MATNR.

    check ME->R_PR_XFG is bound.
    ME->R_PR_XFG->SET_MATNR( IF_MATNR = IF_MATNR
                             IF_SETBY = IF_SETBY ).

  endmethod.
