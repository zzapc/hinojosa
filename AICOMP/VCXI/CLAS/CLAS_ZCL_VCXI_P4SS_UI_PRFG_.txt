
class ZCL_VCXI_P4SS_UI_PRFG definition
  public
  inheriting from ZCL_VCXI_XCS_UI_TAB
  create public .

public section.

  data S_PRFG_VIS type ZVCXI_P4SS_S_PRFG_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_PFG_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DEACTIVATE
    redefinition .
protected section.

  data R_PR_PRFG type ref to ZCL_VCXI_P4SS_PR_PRFG .
  data R_TOOLBAR type ref to ZCL_VCXI_XCS_TOOLBAR_PRVDR .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P4SS_UI_PRFG definition
class ZCL_VCXI_P4SS_UI_PRFG implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P4SS_UI_PRFG_BIND'
      exporting
        IR_UI_PRFG    = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

***--------------------------------------------------------------------------------------
*** Create Toolbar to add Connection
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TOOLBAR'
        IF_IPRVT          = ZIF_VCXI_P4SS_PRDTL=>C_IPRVT_P4_PRDTL.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_PRFG.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_ALLOW_MFG type ABAP_BOOL.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).


***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

***     Is component ratio allowed
        ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_COMPR( importing EF_ALLOWED = LF_ALLOW_MFG ).

        loop at screen.
***       Hide Material Description Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_MAKTX' and
             ME->S_PRFG_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Disable Material Description if generated
          if SCREEN-NAME cp '*-MAKTX' and
             ME->S_PRFG_VIS-FOVRR_MAKTX eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.

***       If no Dummy Material, then set to read only
          if ME->R_PR_PRFG->IS_DUMMY( ) eq ABAP_FALSE.
            if SCREEN-GROUP1            eq 'DUM'.
              move 0 to SCREEN-INPUT.
              if SCREEN-GROUP3 eq 'HID'.  "Hide by Screen Group
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              endif.
            endif.
          else.
***         If Dummy Material block the Procurement Option
            if SCREEN-GROUP1                eq 'PUR'.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Hide Component Ratio if not allowed
          if SCREEN-GROUP2 = 'MFG' and
             LF_ALLOW_MFG ne ABAP_TRUE.
            SCREEN-INPUT  = 0.
            SCREEN-ACTIVE = 0.
          endif.

***       Hide Handling Dimension Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_HNDDIM' and
             ME->S_PRFG_VIS-FOVRR_HNDDIM eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Handling Dimension changeable if Override Flag is set
          if SCREEN-GROUP2 eq 'OHD'.
            if ME->S_PRFG_VIS-FOVRR_HNDDIM eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = value #( ( ME->R_OLD_GATE ) ) ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_PRFG_VIS  type ZVCXI_P4SS_S_PRFG_VIS.


    check ME->R_PR_PRFG is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_PRFG_VIS.

***--------------------------------------------------------------------------------------
*** Set Plant
    if ME->S_PRFG_VIS-WERKS ne LS_PRFG_VIS-WERKS.
      ME->R_PR_PRFG->SET_WERKS( IF_WERKS = LS_PRFG_VIS-WERKS
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Number
    if ME->S_PRFG_VIS-MATNR ne LS_PRFG_VIS-MATNR.
      ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_MATNR( IF_MATNR = LS_PRFG_VIS-MATNR
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Description
    if ME->S_PRFG_VIS-MAKTX        ne LS_PRFG_VIS-MAKTX or
       ME->S_PRFG_VIS-FOVRR_MAKTX  ne LS_PRFG_VIS-FOVRR_MAKTX.
      if LS_PRFG_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_MAKTX( IF_MAKTX = LS_PRFG_VIS-MAKTX
                                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_MAKTX( IF_MAKTX = LS_PRFG_VIS-MAKTX
                                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Procurement Option
    if ME->S_PRFG_VIS-PURCH ne LS_PRFG_VIS-PURCH.
      ME->R_PR_PRFG->SET_PURCH( IF_PURCH = LS_PRFG_VIS-PURCH
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


***--------------------------------------------------------------------------------------
*** Set Material Belonging to the Customer
    if ME->S_PRFG_VIS-KDMAT ne LS_PRFG_VIS-KDMAT.
      ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_KDMAT( IF_KDMAT = LS_PRFG_VIS-KDMAT
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Customer Description of Material
    if ME->S_PRFG_VIS-KDPTX ne LS_PRFG_VIS-KDPTX.
      ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_KDPTX( IF_KDPTX = LS_PRFG_VIS-KDPTX
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Hierarchy
    if ME->S_PRFG_VIS-PRODH ne LS_PRFG_VIS-PRODH.
      ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_PRODH( IF_PRODH = LS_PRFG_VIS-PRODH
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Component Ratio
    if ME->S_PRFG_VIS-COMPR ne LS_PRFG_VIS-COMPR.
      ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~SET_COMPR( IF_COMPR = LS_PRFG_VIS-COMPR
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Handling Dimension if it is "Overriden"
    if ME->S_PRFG_VIS-FOVRR_HNDDIM ne ABAP_FALSE and
       ME->S_PRFG_VIS-S_HNDDIM     ne LS_PRFG_VIS-S_HNDDIM.
      ME->R_PR_PRFG->SET_HNDDIM( IS_HNDDIM = LS_PRFG_VIS-S_HNDDIM
                                 IF_SETBY  = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Handling Dimension
    if ME->S_PRFG_VIS-FOVRR_HNDDIM ne LS_PRFG_VIS-FOVRR_HNDDIM.
      ME->R_PR_PRFG->SET_HNDDIM( IF_FOVRR = LS_PRFG_VIS-FOVRR_HNDDIM ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_PRFG.

  endmethod.
  method INIT_VIS.

    free: ME->S_PRFG_VIS.
    check ME->R_PR_PRFG is bound.

***------------------------------------------------------------------------------------------------
*** Get Plant
    ME->S_PRFG_VIS-WERKS = ME->R_PR_PRFG->GET_WERKS( ).

*** Get Material Number
    ME->S_PRFG_VIS-MATNR = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_MATNR( ).

*** Get Material Description
    ME->S_PRFG_VIS-MAKTX = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_MAKTX( importing EF_FOVRR = ME->S_PRFG_VIS-FOVRR_MAKTX ).

*** Get Procurement Option
    ME->S_PRFG_VIS-PURCH = ME->R_PR_PRFG->GET_PURCH( ).

*** Get Product Hierarchy
    ME->S_PRFG_VIS-PRODH       = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_PRODH( ).
    ME->S_PRFG_VIS-PRODH_DESCR = ZCL_VCXI_XCS_SERVICE=>GET_PRODH_DESCR( IF_PRODH = ME->S_PRFG_VIS-PRODH ).

***------------------------------------------------------------------------------------------------
*** Get Material Belonging to the Customer
    ME->S_PRFG_VIS-KDMAT = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_KDMAT( ).

*** Get Customer Description of Material
    ME->S_PRFG_VIS-KDPTX = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_KDPTX( ).

***------------------------------------------------------------------------------------------------
*** Get Component Ratio
    ME->S_PRFG_VIS-COMPR = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_COMPR( ).

***------------------------------------------------------------------------------------------------
*** Get Handling Dimensions
    ME->S_PRFG_VIS-S_HNDDIM = ME->R_PR_PRFG->ZIF_VCXI_PXSS_FG~GET_HNDDIM( importing EF_FOVRR = ME->S_PRFG_VIS-FOVRR_HNDDIM ).

  endmethod.
