
class ZCL_VCXI_PCSS_PR_PREPR_MGR definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_PC_PREPR_MGR type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSS_PREPR_MGR'. "#EC NOTEXT

  type-pools ABAP .
  methods IS_CYLBA_ALLOWED
    returning
      value(RF_ALLOWED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CREATE_MS_PRPRP
    importing
      !IF_BPAID type ZVCXI_PCS_BPAID
    raising
      /VCXI/CX_CKX .
  methods GET_PRPRP_STR
    returning
      value(RT_PRPRP_STR) type ZVCXI_PCSS_TT_PRPRP_STR
    raising
      /VCXI/CX_CKX .
  methods GET_BOARD_PAPER_STR
    returning
      value(RT_BOARD_PAPER_STR) type ZVCXI_PCSS_TT_BOARD_PAPER_STR
    raising
      /VCXI/CX_CKX .
  methods GET_PPBDE
    returning
      value(RF_PPBDE) type ZVCXI_PCSS_PPBDE
    raising
      /VCXI/CX_CKX .
  methods SET_PPBDE
    importing
      !IF_PPBDE type ZVCXI_PCSS_PPBDE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_REFERENCES type /VCXI/VKSC_IEVNT value 'INIT_REFERENCES'. "#EC NOTEXT
  constants C_IEVNT_I_REQUEST_RECALC_BOARW type /VCXI/VKSC_IEVNT value 'REQUEST_RECALC_BOARW'. "#EC NOTEXT
  constants C_IEVNT_I_REQUEST_RECALC_CALIP type /VCXI/VKSC_IEVNT value 'REQUEST_RECALC_CALIP'. "#EC NOTEXT
  constants C_IEVNT_I_REQUEST_RECALC_WDRYW type /VCXI/VKSC_IEVNT value 'REQUEST_RECALC_WDRYW'. "#EC NOTEXT
  constants C_IEVNT_I_UPDATE_PRPRP_STR type /VCXI/VKSC_IEVNT value 'UPDATE_PRPRP_STR'. "#EC NOTEXT
  constants C_IEVNT_O_PPBDE_CHANGED type /VCXI/VKSC_IEVNT value 'PPBDE_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_O_RECALC_BOARW_REQ type /VCXI/VKSC_IEVNT value 'RECALC_BOARW_REQ'. "#EC NOTEXT
  constants C_IEVNT_O_RECALC_CALIP_REQ type /VCXI/VKSC_IEVNT value 'RECALC_CALIP_REQ'. "#EC NOTEXT
  constants C_IEVNT_O_RECALC_WDRYW_REQ type /VCXI/VKSC_IEVNT value 'RECALC_WDRYW_REQ'. "#EC NOTEXT
  data R_SELFD type ref to ZIF_VCXI_PCSS_SELFD .
  data R_SHTDIM type ref to ZIF_VCXI_P0SS_SHTDIM .
  constants C_POSID_5 type /VCXI/VKSR_POSID value 5. "#EC NOTEXT

  methods CHECK_CYLIN
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_PAWID
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_CYLBA
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_REFERENCES
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UPDATE_PRPRP_STR
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PCSS_PR_PREPR_MGR definition
class ZCL_VCXI_PCSS_PR_PREPR_MGR implementation.
method CHECK_CYLBA.

*** 0 - No Cylinder based Type is defined
*** 1 - Only one Cylinder based Preprint Type is defined
*** 2 - More then one Cylinder based Preprint Type is defined
*** 3 - Cylinder based Preprint Types are not allowed

  data: LF_NR_CYLBA  type I.
  data: LS_PRPRP_STR type ZVCXI_PCSS_S_PRPRP_STR.
  data: LT_PRPRP_STR type ZVCXI_PCSS_TT_PRPRP_STR.

  LT_PRPRP_STR = ME->GET_PRPRP_STR( ).

  loop at LT_PRPRP_STR into LS_PRPRP_STR.
*** Get Flag if assigned PreprintType is Cylinder based
    check ZCL_VCXI_PCSS_CUST_BOARD=>IS_TPRPR_CYLBA( IF_TPRPR = LS_PRPRP_STR-TPRPR ) eq ABAP_TRUE.
    add 1 to LF_NR_CYLBA.
  endloop.

  if LF_NR_CYLBA gt 1.
    move 2 to RF_RETURN.
  else.
    move LF_NR_CYLBA to RF_RETURN.
  endif.

*** If there is no Sheetdimension -> Cylinder based Types are not allowed
  check ME->R_SHTDIM is not bound   and
        LF_NR_CYLBA  is not initial.

  move 3 to RF_RETURN.

endmethod.
method CHECK_CYLIN.

*** 0 - Cylinder/CylinderUps do fit to Gross Sheet Length
*** 1 - Cylinder/CylinderUps do not fit to Gross Sheet Length
*** 9 - Check not needed - No Cylinder based Preprint Types allowed

  data: LS_PRPRP_STR type ZVCXI_PCSS_S_PRPRP_STR,
        LS_SHTGL     type ZVCXI_P0SS_S_SHTGL.
  data: LT_PRPRP_STR type ZVCXI_PCSS_TT_PRPRP_STR.

*** Start without check
  move 9 to RF_RETURN.

  check ME->R_SHTDIM is bound.
  LS_SHTGL = ME->R_SHTDIM->GET_SHTGL( ).

  LT_PRPRP_STR = ME->GET_PRPRP_STR( ).

  loop at LT_PRPRP_STR into LS_PRPRP_STR.
*** Get Flag if assigned PreprintType is Cylinder based and check Cylinder Ups are not initial
    check ZCL_VCXI_PCSS_CUST_BOARD=>IS_TPRPR_CYLBA( IF_TPRPR = LS_PRPRP_STR-TPRPR ) eq ABAP_TRUE and
          LS_PRPRP_STR-CUPST is not initial.

*** Do unit conversion
    ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = LS_SHTGL-SHTGL_UOM
                                                       IF_UOM_IN    = LS_PRPRP_STR-CYLIN_UOM
                                                       IF_VALUE_IN  = LS_PRPRP_STR-CYLIN
                                             importing EF_VALUE_OUT = LS_PRPRP_STR-CYLIN
                                                       EF_UOM_OUT   = LS_PRPRP_STR-CYLIN_UOM ).

    LS_PRPRP_STR-CYLIN = LS_PRPRP_STR-CYLIN / LS_PRPRP_STR-CUPST.
    check LS_PRPRP_STR-CYLIN ne LS_SHTGL-SHTGL.
    move 1 to RF_RETURN.
    exit.

  endloop.

endmethod.
method CHECK_PAWID.

*** 0 - Paper Widths are within allowd Tolerance (against itself and Corrugation Width)
*** 1 - Difference between Paper Widths exceed Tolerance
*** 2 - Difference between Paper Widths and Corrugation Width exceed Tolerance
*** 9 - No Paper Widths is defined

  data: LF_WERKS     type WERKS_D.
  data: LS_PRPRP_STR type ZVCXI_PCSS_S_PRPRP_STR,
        LS_BOARW     type ZVCXI_PCSS_S_BOARW,
        LS_PWIDT     type ZVCXI_PCSS_S_PWIDT,
        LS_PWIDT_C1  type ZVCXI_PCSS_S_PWIDT,
        LS_PWIDT_C2  type ZVCXI_PCSS_S_PWIDT,
        LS_PAWID_MAX type ZVCXI_PCS_S_PAWID,
        LS_PAWID_MIN type ZVCXI_PCS_S_PAWID.
  data: LT_PRPRP_STR type ZVCXI_PCSS_TT_PRPRP_STR.

  check ME->R_SELFD is bound.
  ME->R_SELFD->GET_BOARW( importing ES_BOARW = LS_BOARW ).

*** Get Tolerance
  LF_WERKS = ME->GET_WERKS( ).
  LS_PWIDT = ZCL_VCXI_PCSS_CUST_BOARD=>GET_PWIDT( IF_WERKS = LF_WERKS ).

*** Start with nothing
  move 9 to RF_RETURN.

  LT_PRPRP_STR = ME->GET_PRPRP_STR( ).

  loop at LT_PRPRP_STR into LS_PRPRP_STR.

    if LS_PRPRP_STR-PAWID is not initial.
      move 0 to RF_RETURN.
    endif.

*** Do unit conversion
    ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = LS_BOARW-BOARW_UOM
                                                       IF_UOM_IN    = LS_PRPRP_STR-PAWID_UOM
                                                       IF_VALUE_IN  = LS_PRPRP_STR-PAWID
                                             importing EF_VALUE_OUT = LS_PRPRP_STR-PAWID
                                                       EF_UOM_OUT   = LS_PRPRP_STR-PAWID_UOM ).

    if LS_PRPRP_STR-PAWID gt LS_PAWID_MAX-PAWID.
      move-corresponding LS_PRPRP_STR to LS_PAWID_MAX.
    endif.

    if LS_PRPRP_STR-PAWID lt LS_PAWID_MIN-PAWID or
       LS_PAWID_MIN-PAWID is initial.
      move-corresponding LS_PRPRP_STR to LS_PAWID_MIN.
    endif.

  endloop.

  if LS_PAWID_MAX-PAWID is not initial and
     LS_PAWID_MIN-PAWID is not initial.
*** Check difference of Papers are not in Tolerance
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_PAWID_MAX-PAWID
                                                        IF_CALCV_UOM_1 = LS_PAWID_MAX-PAWID_UOM
                                                        IF_CALCV_2     = LS_PAWID_MIN-PAWID
                                                        IF_CALCV_UOM_2 = LS_PAWID_MIN-PAWID_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                        IF_UOM         = LS_PWIDT-PWIDT_UOM
                                              importing EF_CALCV       = LS_PWIDT_C1-PWIDT
                                                        EF_CALCV_UOM   = LS_PWIDT_C1-PWIDT_UOM ).

    if LS_PWIDT_C1-PWIDT gt LS_PWIDT-PWIDT.
      move 1 to RF_RETURN.
      exit.
    endif.
  endif.

  if LS_PAWID_MAX-PAWID is not initial and
     LS_BOARW-BOARW     is not initial.
*** Check difference of Papers are not in Tolerance
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_PAWID_MAX-PAWID
                                                        IF_CALCV_UOM_1 = LS_PAWID_MAX-PAWID_UOM
                                                        IF_CALCV_2     = LS_BOARW-BOARW
                                                        IF_CALCV_UOM_2 = LS_BOARW-BOARW_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                        IF_UOM         = LS_PWIDT-PWIDT_UOM
                                              importing EF_CALCV       = LS_PWIDT_C2-PWIDT
                                                        EF_CALCV_UOM   = LS_PWIDT_C2-PWIDT_UOM ).

    if abs( LS_PWIDT_C2-PWIDT ) gt LS_PWIDT-PWIDT.
      move 2 to RF_RETURN.
      exit.
    endif.
  endif.

endmethod.
method CREATE_MS_PRPRP.

  data:          LF_POSID             type        /VCXI/VKSR_POSID,
                 LF_BPAID             type        ZVCXI_PCS_BPAID.
  data:          LS_PRVDR_DEF         type        /VCXI/VKSR_S_PRVDR_DEF.
  data:          LT_GATE              type        /VCXI/VKSR_TT_GATE,
                 LT_PRVDR_DEF         type        /VCXI/VKSR_TT_PRVDR_DEF.
  data:          LR_GATE              type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_MS_PRPRP       type ref to ZCL_VCXI_PCSS_PR_MS_PRPRP.

***----------------------------------------------------------------------------
*** Find Provider Type
  LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_PCSS_PR_MS_PRPRP=>C_IPRVT_PC_MS_PRPRP
                                            IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).

  read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.
  check SY-SUBRC = 0.

***------------------------------------------------------------------
*** Determine right Position out of Current one
*** Get Preprint Papers
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_PRPRP=>C_IPRVT_PC_MS_PRPRP
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Get Preprint
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
        check LR_PR_MS_PRPRP is bound.
***     Get Paper ID
        LF_BPAID = LR_PR_MS_PRPRP->GET_BPAID( ).

        if LF_BPAID+1(1) lt IF_BPAID+1(1) or
         ( LF_BPAID+1(1) eq IF_BPAID+1(1) and
           LF_BPAID(1) eq 'L' and IF_BPAID(1) eq 'M' ).
          LF_POSID = LR_GATE->GET_POSID( ).
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_PRPRP.
    endtry.
  endloop.

*** Add 5 to insert on right position
  add C_POSID_5 to LF_POSID.

***----------------------------------------------------------------------------
*** Create Provider
  LR_GATE = ME->R_GATE->CREATE_ELEMENT( IF_ID = LS_PRVDR_DEF-ID ).
  if LR_GATE->IS_INUSE( ) eq ABAP_FALSE.
    LR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).
  endif.
  LR_GATE->SET_POSID( IF_POSID = LF_POSID ).

*** Set Paper ID
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
        check LR_PR_MS_PRPRP is bound.
        LR_PR_MS_PRPRP->SET_BPAID( IF_BPAID = IF_BPAID ).
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_PRPRP.
    endtry.

*** Reorg position ID's
  LR_GATE->REORG_POSID( ).

endmethod.
method DO_FREE.

  ME->R_GATE->DO_FREE( ).

endmethod.
method GET_BOARD_PAPER_STR.

  data:          LT_GATE               type        /VCXI/VKSR_TT_GATE,
                 LT_BOARD_PAPER_STR    type        ZVCXI_PCSS_TT_BOARD_PAPER_STR.
  data:          LR_GATE               type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_BOARD           type ref to ZCL_VCXI_PCSS_PR_BOARD.
  field-symbols: <S_BOARD_PAPER_STR>   type        ZVCXI_PCSS_S_BOARD_PAPER_STR.

***------------------------------------------------------------------
*** Get all Boards
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                   IF_INUSE  = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Get Paper of BoardID's
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
        check LR_PR_BOARD is bound.
        LT_BOARD_PAPER_STR = LR_PR_BOARD->GET_BOARD_PAPER_STR( ).

***     Combine all Board Papers
        if RT_BOARD_PAPER_STR is initial.
          move LT_BOARD_PAPER_STR to RT_BOARD_PAPER_STR.
        else.
          loop at RT_BOARD_PAPER_STR assigning <S_BOARD_PAPER_STR>
                                     where SUBPA eq ABAP_FALSE.

***         Only update not yet substituted elements
            read table LT_BOARD_PAPER_STR with key BPAID = <S_BOARD_PAPER_STR>-BPAID
                                                    SUBPA = ABAP_TRUE
                                          transporting no fields.
            check SY-SUBRC = 0.
            <S_BOARD_PAPER_STR>-SUBPA = ABAP_TRUE.

          endloop.
        endif.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method GET_PPBDE.

  data:  LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

  LS_LEOKY = ME->R_GATE->GET_LEOKY( ).

  move LS_LEOKY-LEOKY      to RF_PPBDE.

endmethod.
method GET_PRPRP_STR.

  data:          LS_CALIP          type        ZVCXI_P0SS_S_CALIP,
                 LS_BAWGT          type        ZVCXI_PCS_S_BAWGT,
                 LS_BAWGP          type        ZVCXI_PCS_S_BAWGP,
                 LS_PAWID          type        ZVCXI_PCS_S_PAWID,
                 LS_CYLIN          type        ZVCXI_PCS_S_CYLIN.
  data:          LT_GATE           type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_MS_PRPRP    type ref to ZCL_VCXI_PCSS_PR_MS_PRPRP.
  field-symbols: <S_PRPRP_STR>     type        ZVCXI_PCSS_S_PRPRP_STR.

***------------------------------------------------------------------
*** Get Preprint Papers
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_PRPRP=>C_IPRVT_PC_MS_PRPRP
                                   IF_INUSE  = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Get Preprint
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
        check LR_PR_MS_PRPRP is bound.
        append initial line to RT_PRPRP_STR assigning <S_PRPRP_STR>.
***     Get Paper ID
        <S_PRPRP_STR>-BPAID = LR_PR_MS_PRPRP->GET_BPAID( ).
***     Get Preprint Type
        <S_PRPRP_STR>-TPRPR = LR_PR_MS_PRPRP->GET_TPRPR( ).
***     Get Caliper
        LS_CALIP = LR_PR_MS_PRPRP->GET_CALIP( ).
        move-corresponding LS_CALIP to <S_PRPRP_STR>.
***     Get BaseWeight
        LS_BAWGT = LR_PR_MS_PRPRP->GET_BAWGT( ).
        move-corresponding LS_BAWGT to <S_PRPRP_STR>.
        LS_BAWGP = LR_PR_MS_PRPRP->GET_BAWGP( ).
        move-corresponding LS_BAWGP to <S_PRPRP_STR>.
***     Get Paper Width
        LS_PAWID = LR_PR_MS_PRPRP->GET_PAWID( ).
        move-corresponding LS_PAWID to <S_PRPRP_STR>.
***     Get Cylinder
        LS_CYLIN = LR_PR_MS_PRPRP->GET_CYLIN( ).
        move-corresponding LS_CYLIN to <S_PRPRP_STR>.
***     Get Cylinder Ups Total
        <S_PRPRP_STR>-CUPST = LR_PR_MS_PRPRP->GET_CUPST( ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

  sort RT_PRPRP_STR by BPAID.

endmethod.
method GET_STATUS.

  RF_ELMST = SUPER->GET_STATUS( ).

*** Check Preprint Board Description is defined
  if ME->GET_PPBDE( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check we have Preprint Papers defined
  if ME->GET_PRPRP_STR( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check only allowed Cylinder Based Preprint Type are specified
  case ME->CHECK_CYLBA( ).
    when 0 or 1.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    when others.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endcase.

*** Check Cylinder/Cylinder Ups against GrossSheet Length
  case ME->CHECK_CYLIN( ).
    when 0 or 9.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    when others.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endcase.

*** Check Paper Width
  case ME->CHECK_PAWID( ).
    when 0 or 9.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    when others.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endcase.

endmethod.
method GET_STATUS_MSG.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

*** Check Preprint Board Description is defined
  if ME->GET_PPBDE( ) is not initial.
*** Preprint Board Description is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '389' ).
  else.
*** Preprint Board Description is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '390' ).
  endif.

*** Check we have Preprint Papers defined
  if ME->GET_PRPRP_STR( ) is initial.
*** No Preprinted Paper is defined.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '381' ).
  endif.

*** Check only one Cylinder Based Preprint Type is specified
  case ME->CHECK_CYLBA( ).
    when 1.
***   One Cylinder based Preprint Type is defined.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '382' ).
    when 2.
***   More then one Cylinder based Preprint Type is defined.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '383' ).
    when 3.
***   Cylinder based Preprint Types are not allowed.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '391' ).
  endcase.

  if ME->CHECK_CYLBA( ) is not initial.
*** Check Cylinder against GrossSheet Length
    case ME->CHECK_CYLIN( ).
      when 0.
***     Cylinder/CylinderUps do fit to Gross Sheet Length.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '384' ).
      when 1.
***     Cylinder/CylinderUps do not fit to Gross Sheet Length.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '385' ).
    endcase.
  endif.

*** Check Paper Width
  case ME->CHECK_PAWID( ).
    when 0.
***   Paper Widths are within allowd Tolerance.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '386' ).
    when 1.
***   Difference between Paper Widths exceed Tolerance.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '387' ).
    when 2.
***   Difference between Paper Widths and Corrugation Width exceed Tolerance.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '388' ).
  endcase.

endmethod.
method GET_WERKS.

  data: LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

  RF_WERKS =  LR_APPDATA->F_WERKS.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_INIT_REFERENCES.
      ME->HANDLE_INIT_REFERENCES( ).

    when C_IEVNT_I_UPDATE_PRPRP_STR.
      ME->HANDLE_UPDATE_PRPRP_STR( ).

    when C_IEVNT_I_REQUEST_RECALC_CALIP.
***   Forward Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CALIP_REQ ).

    when C_IEVNT_I_REQUEST_RECALC_WDRYW.
***   Forward Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_WDRYW_REQ ).

    when C_IEVNT_I_REQUEST_RECALC_BOARW.
***   Forward Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_BOARW_REQ ).

  endcase.

endmethod.
method HANDLE_INIT_REFERENCES.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Get Selfdeckling Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_PCSS_SELFD=>C_IPRVT_PC_SELFD
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
         LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_SELFD.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_SELFD.
  endtry.

  if ME->R_SELFD is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                          IF_MSGID = 'ZVCXI_XCS'
                                          IF_MSGNO = '010'
                                          IF_MSGV1 = ZIF_VCXI_PCSS_SELFD=>C_IPRVT_PC_SELFD
                                          IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

***------------------------------------------------------------------------------------------------
*** Get Sheet Dimension Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_P0SS_SHTDIM=>C_IPRVT_P0_SHTDIM
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
         LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_SHTDIM.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_SHTDIM.
  endtry.

  if ME->R_SHTDIM is not bound.
*** Cylinder Based Preprint Types are not allowed!
  endif.

endmethod.
method HANDLE_UPDATE_PRPRP_STR.

  data:          LF_BPAID             type        ZVCXI_PCS_BPAID.
  data:          LS_BOARD_PAPER_STR   type        ZVCXI_PCSS_S_BOARD_PAPER_STR.
  data:          LT_GATE              type        /VCXI/VKSR_TT_GATE,
                 LT_BOARD_PAPER_STR   type        ZVCXI_PCSS_TT_BOARD_PAPER_STR.
  data:          LR_GATE              type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_MS_PRPRP       type ref to ZCL_VCXI_PCSS_PR_MS_PRPRP.

*** --------------------------------------------------------------------------------------------
*** Get Board Paper Structure
  LT_BOARD_PAPER_STR = ME->GET_BOARD_PAPER_STR( ).

*** --------------------------------------------------------------------------------------------
*** Get Gates of all Material Specification - Preprint Paper
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_PRPRP=>C_IPRVT_PC_MS_PRPRP
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LR_PR_MS_PRPRP, LF_BPAID, LS_BOARD_PAPER_STR.
*** --------------------------------------------------------------------------------------------
*** Get Preprint Paper
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
        check LR_PR_MS_PRPRP is bound.
        LF_BPAID = LR_PR_MS_PRPRP->GET_BPAID( ).

        read table LT_BOARD_PAPER_STR into LS_BOARD_PAPER_STR with key BPAID = LF_BPAID.

***     If we do no longer found the Paper ID -> delte it AND
***     ff we found the Paper ID and it is substituted-> delte it
        if SY-SUBRC eq 0.
          check LS_BOARD_PAPER_STR-SUBPA eq ABAP_TRUE.
        endif.

        LR_PR_MS_PRPRP->DO_FREE( ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method IS_CYLBA_ALLOWED.

*** Cylinder based Types are only allowed if we have SheetDimensions
  check ME->R_SHTDIM is bound.
  move ABAP_TRUE to RF_ALLOWED.

endmethod.
method SET_PPBDE.

  data:  LF_CHANGED type  ABAP_BOOL.
  data:  LS_LEOKY   type  /VCXI/VKSR_S_LEOKY.

  if IF_PPBDE is not initial.
    move IF_PPBDE to LS_LEOKY-LEOKY.
    move IF_SETBY to LS_LEOKY-SETBY.
  else.
    clear LS_LEOKY.
  endif.

  LF_CHANGED = ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PPBDE_CHANGED ).
  endif.

endmethod.
