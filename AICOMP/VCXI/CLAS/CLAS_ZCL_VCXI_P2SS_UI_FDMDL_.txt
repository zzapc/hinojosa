
class ZCL_VCXI_P2SS_UI_FDMDL definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_FDMDL
  create public .

public section.

  constants C_UC_PSCALE type SYUCOMM value 'PSCALE' ##NO_TEXT.
  data S_FDMDL_VIS type ZVCXI_P2SS_S_FDMDL_VIS read-only .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_FDMDL_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods GET_REGISTERED_UCOMM
    redefinition .
protected section.

  data R_GRID_FD_PRINT type ref to ZCL_VCXI_PXSS_GRID_FD_PRINT .
  data R_GRID_PRINT_COM type ref to ZCL_VCXI_PXSS_GRID_PRINT_COM .

  methods GET_IELEM_BY_SCREEN
    importing
      !IF_GROUP3 type SCREEN-GROUP3
    returning
      value(RF_IELEM) type ZVCXI_P0SS_IELEM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_PSCALE
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN_BOARD
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN_FCFG
    importing
      !IR_CUST_PRSTY type ref to ZCL_VCXI_PXSS_CUST_PRSTY
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN_CSTEP_DCUT
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_JOITY
    raising
      /VCXI/CX_CKX .

  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SS_UI_FDMDL definition
class ZCL_VCXI_P2SS_UI_FDMDL implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P2SS_UI_FDMDL_BIND'
      exporting
        IR_UI_FDMDL = ME
      importing
        ES_DYNP     = ME->S_DYNP.

***--------------------------------------------------------------------------------------
    if ME->R_BL_FDMDL->F_FDMDL ne ZCL_VCXI_P2SS_BL_FDMDL=>C_FDMDL_FCPRDTL.
*** Create Grid for Printing
      create object ME->R_GRID_FD_PRINT
        exporting
          IR_GATE        = ME->R_GATE
          IR_UIGATE      = ME->R_UIGATE
          IF_APPL_EVENTS = ME->F_APPL_EVENTS
          IR_BL_FDMDL    = cast #( ME->R_BL_FDMDL )
          IR_GATE_OUT    = ME->R_GATE_OUT.
    else.
***   Create Grid for Print (Communication)
      create object ME->R_GRID_PRINT_COM
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IF_CONTAINER_NAME = 'CC_GRID_PRINT_COM'
          IR_PRINT_COM      = cast #( ME->R_GATE_OUT->R_CLSPR ).
    endif.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Grid
    if ME->R_GRID_FD_PRINT is bound.
      ME->R_GRID_FD_PRINT->DO_FREE( ).
      clear ME->R_GRID_FD_PRINT.
    endif.

    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->DO_FREE( ).
      clear ME->R_GRID_PRINT_COM.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_CADLS  type ZVCXI_PXS_CADLS.
    data: LR_CUST_PRSTY type ref to ZCL_VCXI_PXSS_CUST_PRSTY.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***------------------------------------------------------------------------------------------------
        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

***     Customizing Instance for Product Style
        try.
            LR_CUST_PRSTY = ZCL_VCXI_PXSS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = ZCL_VCXI_P2SS_PR_FCFG=>C_TPRST_ECMA
                                                                    IF_PRSTY = ME->S_FDMDL_VIS-ECMA ).
          catch /VCXI/CX_CKX.
            clear LR_CUST_PRSTY.
        endtry.

***     Get CAD Lock Status
        LF_CADLS = ME->R_PR_FASTD->GET_CADLS( ).

***------------------------------------------------------------------------------------------------
        loop at screen.
          case SCREEN-GROUP1.
***         Finished Good Information
            when 'FG'.
              ME->MODIFY_SCREEN_FCFG( exporting IR_CUST_PRSTY = LR_CUST_PRSTY
                                      changing  CS_SCREEN     = SCREEN ).
***         Die Cut Information
            when 'DCT'.
              ME->MODIFY_SCREEN_CSTEP_DCUT( changing CS_SCREEN = SCREEN ).

***         Board Information
            when 'BOA'.
              ME->MODIFY_SCREEN_BOARD( changing CS_SCREEN = SCREEN ).

          endcase.

***       Adjust based on CAD Lock Status
          if SCREEN-GROUP4 eq 'CAD' and
             ( LF_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_REVISION or
               LF_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_LOCKED ).
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    check ME->R_GATE_OUT is bound and
          ME->R_GATE_OUT->F_FREED is initial.

    SUPER->DO_PBO( ).

*** Define DropDown Values for Joint Type
    ME->SET_DDVAL_JOITY( ).

*** Refresh Printing Grid
    if ME->R_GRID_FD_PRINT is bound.
      ME->R_GRID_FD_PRINT->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_FD_PRINT->CHECK_CHANGED_DATA( ).
      ME->R_GRID_FD_PRINT->REFRESH_GRID( ).
    endif.
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_PRINT_COM->CHECK_CHANGED_DATA( ).
      ME->R_GRID_PRINT_COM->REFRESH_GRID( ).
    endif.

*** Toolbar for Finished Goods
    if ME->R_BL_FDMDL->F_IFDMV eq ZCL_VCXI_P2SS_BL_FDMDL=>C_IFDMV_SE_DCT.
      ME->INIT_CONTAINER( ).
      ME->INIT_TOOLBAR( ).
    endif.

  endmethod.
  method DO_UPDATE_FDMDL_VIS.

    data: LS_FDMDL_VIS    type ZVCXI_P2SS_S_FDMDL_VIS.
    data: LT_FASTD_XCOMP  type ZVCXI_PXSS_TT_FASTD_XCOMP,
          LT_XCONG        type ZVCXI_PXSS_TT_XCONG,
          LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.
    data: LR_FDMDL_VIS    type ref to DATA.
    field-symbols: <S_FASTD_XCOMP>      type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_FASTD_XCOMP_DATA> type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.


    check ME->R_PR_FASTD is bound.

***------------------------------------------------------------------------------------------------
*** Create Data Reference to allow adjustments to provided data
    create data LR_FDMDL_VIS like IS_FDMDL_VIS.
    assign LR_FDMDL_VIS->* to field-symbol(<S_FDMDL_VIS>).
    <S_FDMDL_VIS> = IS_FDMDL_VIS.

*** "Cast" Vis Structure
    LS_FDMDL_VIS = corresponding #( <S_FDMDL_VIS> ).

***--------------------------------------------------------------------------------------
*** Get ECMA customizing
    try.
        data(LR_CUST_PRSTY) = ZCL_VCXI_PXSS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = ZCL_VCXI_P2SS_PR_FCFG=>C_TPRST_ECMA
                                                                      IF_PRSTY = LS_FDMDL_VIS-ECMA ).
      catch /VCXI/CX_CKX.
        clear: LR_CUST_PRSTY.
    endtry.
    if LR_CUST_PRSTY is bound.
***   Validate Joint Types for Position
      if LR_CUST_PRSTY->CHECK_JOITY( IF_JOIPO = LS_FDMDL_VIS-JOIPO
                                     IF_JOITY = LS_FDMDL_VIS-JOITY ) ne ABAP_TRUE.
        clear LS_FDMDL_VIS-JOITY.
      endif.
***   Initial defaulting on ECMA change
      if LS_FDMDL_VIS-ECMA ne ME->S_FDMDL_VIS-ECMA.
        if LS_FDMDL_VIS-JOITY is initial.
          LR_CUST_PRSTY->GET_JOITY( exporting IF_JOIPO   = LS_FDMDL_VIS-JOIPO
                                    importing EF_DEFAULT = LS_FDMDL_VIS-JOITY ).
        endif.
        if LS_FDMDL_VIS-JOIPO is initial.
          LR_CUST_PRSTY->GET_JOIPO( exporting IF_JOITY   = LS_FDMDL_VIS-JOITY
                                    importing EF_DEFAULT = LS_FDMDL_VIS-JOIPO ).
        endif.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
*** Update generic VIS structure
    <S_FDMDL_VIS> = corresponding #( base ( <S_FDMDL_VIS> ) LS_FDMDL_VIS ).

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( exporting IR_BL_FDMDL = ME->R_BL_FDMDL
                                                           importing ET_XCONG    = LT_XCONG ).

*** Find Component of Gate and its linked Components
    LT_GATE_EXCLUDE = ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Update Fast Data Integration Information based on VIS Structure
    loop at LT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP>-R_GATE ] ).

      loop at <S_FASTD_XCOMP>-T_DATA assigning <S_FASTD_XCOMP_DATA> where R_DATA is bound.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP_DATA>-R_GATE ] ).

        ME->MAPPING_FROM_VIS( exporting IS_FDMDL_VIS        = <S_FDMDL_VIS>
                              changing  CS_FASTD_XCOMP_DATA = <S_FASTD_XCOMP_DATA> ).
      endloop.
    endloop.

*** Add/Remove Closing Step
    cast ZCL_VCXI_P2SS_BL_FDMDL( ME->R_BL_FDMDL )->ADJ_CSTEP_CLOS( exporting IR_GATE_OUT       = ME->R_GATE_OUT
                                                                             IS_FDI_CSTEP_CLOS = corresponding #( <S_FDMDL_VIS> )
                                                                   changing  CT_FASTD_XCOMP    = LT_FASTD_XCOMP ).

*** Adjust by Input Source
    cast ZCL_VCXI_P2SS_BL_FDMDL( ME->R_BL_FDMDL )->ADJ_SRCIN( exporting IF_SRCIN        = LS_FDMDL_VIS-SRCIN
                                                                        IR_GATE_OUT     = ME->R_GATE_OUT
                                                                        IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                                              changing  CT_FASTD_XCOMP  = LT_FASTD_XCOMP
                                                                        CT_XCONG        = LT_XCONG ).

***------------------------------------------------------------------------------------------------
*** Set Configuration Structure
    ME->R_BL_FDMDL->R_BL_FASTD->SET_STRC( IR_BL_FDMDL    = ME->R_BL_FDMDL
                                          IT_FASTD_XCOMP = LT_FASTD_XCOMP
                                          IT_XCONG       = LT_XCONG ).

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Grids for Fast Data of Film
    if ME->R_GRID_FD_PRINT is bound.
      ME->R_GRID_FD_PRINT->CHECK_CHANGED_DATA( ).
    endif.
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->CHECK_CHANGED_DATA( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_PSCALE.
        ME->HANDLE_UC_PSCALE( ).

    endcase.

  endmethod.
  method GET_IELEM_BY_SCREEN.

    RF_IELEM = switch #( IF_GROUP3 when 'PLE' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_LENGTH
                                   when 'PWI' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_WIDTH
                                   when 'PHE' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT
                                   when 'PH2' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT2
                                   when 'FDU' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_FDUST
                                   when 'FTU' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_FTUCK ).

  endmethod.
  method GET_REGISTERED_UCOMM.

    RT_UCOMM = value #( ( C_UC_PSCALE )
                        ( C_UC_FOVRR_MAKTX ) ).

  endmethod.
  method HANDLE_UC_PSCALE.

    data: LT_FASTD_XCOMP type ZVCXI_PXSS_TT_FASTD_XCOMP.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

*** Get Source for Input
    cast ZCL_VCXI_P2SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( exporting IR_GATE_OUT    = ME->R_GATE_OUT
                                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP
                                                              importing ER_GATE        = LR_GATE ).
    check LR_GATE->R_CLSPR is instance of ZIF_VCXI_XCS_PSCALE_MGR.

***--------------------------------------------------------------------------------------
*** Call Popup with Price Scales
    ZCL_VCXI_XCS_POPUP_PSCALE=>START( IR_GATE   = LR_GATE
                                      IR_UIGATE = ME->R_UIGATE
                                      IF_LOCKED = cast ZIF_VCXI_XCS_PSCALE_MGR( LR_GATE->R_CLSPR )->IS_CHANGEABLE( ) ).

  endmethod.
  method INIT_VIS.

    data: LS_FASTD_XCOMP      type ZVCXI_PXSS_S_FASTD_XCOMP,
          LS_FASTD_XCOMP_DATA type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.
    data: LT_FASTD_XCOMP  type ZVCXI_PXSS_TT_FASTD_XCOMP,
          LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.


    free: ME->S_FDMDL_VIS.
    check ME->R_PR_FASTD is bound.

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

*** Find Component of Gate and its linked Components
    LT_GATE_EXCLUDE = ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Get Source for Input
    ME->S_FDMDL_VIS-SRCIN = cast ZCL_VCXI_P2SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( IR_GATE_OUT     = ME->R_GATE_OUT
                                                                                      IT_FASTD_XCOMP  = LT_FASTD_XCOMP
                                                                                      IT_GATE_EXCLUDE = LT_GATE_EXCLUDE ).

*** Fill VIS Structure based on Fast Data Integration Information
    loop at LT_FASTD_XCOMP into LS_FASTD_XCOMP.
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP-R_GATE ] ).

      loop at LS_FASTD_XCOMP-T_DATA into LS_FASTD_XCOMP_DATA where R_DATA is bound.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP_DATA-R_GATE ] ).
        ME->MAPPING_TO_VIS( exporting IS_FASTD_XCOMP_DATA = LS_FASTD_XCOMP_DATA
                            changing  CS_FDMDL_VIS        = ME->S_FDMDL_VIS ).
      endloop.
    endloop.

***------------------------------------------------------------------------------------------------
*** ECMA Description
    if ME->S_FDMDL_VIS-ECMA is not initial.
      ME->S_FDMDL_VIS-ECMA_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_PRSTY_DESCR( IF_TPRST = ZCL_VCXI_P2SS_PR_FCFG=>C_TPRST_ECMA
                                                                              IF_PRSTY = ME->S_FDMDL_VIS-ECMA ).
    endif.

  endmethod.
  method MODIFY_SCREEN_BOARD.

***------------------------------------------------------------------------------------------------
*** Procurement
    if ME->S_FDMDL_VIS-SRCIN eq ZCL_VCXI_P2SS_BL_FDMDL=>C_SRCIN_PROC.
***   Hide Fields that are only related to Reel Cutting
      if CS_SCREEN-GROUP2 eq 'RCT'.
        move 0 to SCREEN-ACTIVE.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
*** Hide Material Description Override Flag if undefined
    if CS_SCREEN-NAME cp '*-FOVRR_MAKTXXPR' and
       ME->S_FDMDL_VIS-FOVRR_MAKTXXPR eq ABAP_UNDEFINED.
      move 0 to SCREEN-ACTIVE.
    endif.
*** Disable Material Description if generated
    if CS_SCREEN-NAME cp '*-MAKTXXPR' and
       ME->S_FDMDL_VIS-FOVRR_MAKTXXPR eq ABAP_FALSE.
      move 0 to SCREEN-INPUT.
    endif.

*** If No Dummy Material, then set to read only
    if ME->S_FDMDL_VIS-DUMMYXPR eq ABAP_FALSE.
      if CS_SCREEN-GROUP3 eq 'DUM'.
        CS_SCREEN-INPUT = 0.
      endif.
    else.
***   If Dummy Material set the Prodcurement Option
      if CS_SCREEN-GROUP3 eq 'PUR'.
        CS_SCREEN-INPUT = 0.
      endif.
    endif.

*** Hide Purchasing Infos (e.g Vendor) if not purchased
    if SCREEN-GROUP3 eq 'APU'.  "Acitve Procurement
      case ME->S_FDMDL_VIS-PURCHXPR.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
          move 1 to SCREEN-INVISIBLE.
          move 0 to SCREEN-ACTIVE.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
          if SCREEN-GROUP4 eq 'PRC'. "Price
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
      endcase.
    endif.

*** Hide Price Scale Override Flag if undefined
    if SCREEN-NAME cp '*-FPSMOXPR' and
       ME->S_FDMDL_VIS-FPSMOXPR eq ABAP_UNDEFINED.
      move 0 to SCREEN-ACTIVE.
    endif.

*** Reopen Price Scale Button (as Info)
    if SCREEN-NAME eq '0100BTN_PSCALE' and
       SCREEN-INVISIBLE eq 0.
      move 1 to SCREEN-INPUT.
    endif.

  endmethod.
  method MODIFY_SCREEN_CSTEP_DCUT.

*** Disable fields if not is nested
    if SCREEN-GROUP2 eq 'NES' and
       ME->S_FDMDL_VIS-FNEST ne ABAP_TRUE.
      move 0 to SCREEN-INPUT.
    endif.

*** Disable fields if tool is released
    if SCREEN-GROUP3 eq 'TIR' and
       ME->S_FDMDL_VIS-DCTTN_RELEA eq ABAP_TRUE.
      move 0 to SCREEN-INPUT.
    endif.

  endmethod.
  method MODIFY_SCREEN_FCFG.

*** Hide Material Description Override Flag if undefined
    if CS_SCREEN-NAME cp '*-FOVRR_MAKTX' and
       ME->S_FDMDL_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
      CS_SCREEN-ACTIVE = 0.
    endif.
*** Disable Material Description if generated
    if CS_SCREEN-NAME cp '*-MAKTX' and
       ME->S_FDMDL_VIS-FOVRR_MAKTX eq ABAP_FALSE.
      move 0 to SCREEN-INPUT.
    endif.

*** Hide Component Ratio
    if CS_SCREEN-NAME cp '*-COMPR' and
       ME->S_FDMDL_VIS-COMPR_ALLOWED ne ABAP_TRUE.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Customer Material Info if material exists
    if CS_SCREEN-GROUP2 = 'CMI' and
       ME->S_FDMDL_VIS-MATNR is not initial.
      CS_SCREEN-INPUT  = 0.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Custom Product Sheet W/L
    if CS_SCREEN-GROUP2 eq 'CST'.
      if IR_CUST_PRSTY is not bound or
         IR_CUST_PRSTY->GET_FCUSD( ) ne ABAP_TRUE.
        CS_SCREEN-ACTIVE = 0.
      endif.
    endif.

*** Hide Joint Type if closing is not allowed
    if CS_SCREEN-GROUP2 eq 'NCL' and
      IR_CUST_PRSTY is bound and
      IR_CUST_PRSTY->GET_JOITY( IF_JOIPO = ME->S_FDMDL_VIS-JOIPO ) is initial.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Joint Dimension if no Joint Flap is defined
    if CS_SCREEN-GROUP2 eq 'NJO' and
       ME->S_FDMDL_VIS-JOIPO eq ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_JOIPO_NONE.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Part of Box if not defined by Product Style
    if CS_SCREEN-GROUP2 eq 'BXP'.
      if IR_CUST_PRSTY is not bound or
         IR_CUST_PRSTY->GET_BOXPA( ) is initial.
        CS_SCREEN-ACTIVE = 0.
      endif.
    endif.

*** Adjust based on Product Style Element
    if CS_SCREEN-GROUP2 eq 'PSE'.
      if IR_CUST_PRSTY is bound.
        if IR_CUST_PRSTY->IS_IELEM_USED( IF_IELEM = ME->GET_IELEM_BY_SCREEN( IF_GROUP3 = SCREEN-GROUP3 )
                                         IF_BOXPA = ME->S_FDMDL_VIS-BOXPA ) eq ABAP_FALSE.
          CS_SCREEN-ACTIVE = 0.
        endif.
      else.
        CS_SCREEN-ACTIVE = switch #( ME->GET_IELEM_BY_SCREEN( IF_GROUP3 = SCREEN-GROUP3 )
                                         when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_LENGTH then 1
                                         when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_WIDTH  then 1
                                         when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT then 1
                                                                                       else 0 ).
      endif.
    endif.

  endmethod.
  method SET_DDVAL_JOITY.

    data: LS_TC341 type ZVCXI_P0S_TC341.
    data: LT_TC341 type ZCL_VCXI_P0SS_CUST_PRSTY=>YT_TC341,
          LT_VALUE type VRM_VALUES.
    data: LR_CUST_PRSTY type ref to ZCL_VCXI_P0SS_CUST_PRSTY.


***--------------------------------------------------------------------------------------
*** Get Product Style
    try.
        LR_CUST_PRSTY = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = ZCL_VCXI_P2SS_PR_FCFG=>C_TPRST_ECMA
                                                                IF_PRSTY = ME->S_FDMDL_VIS-ECMA ).
      catch /VCXI/CX_CKX.
        clear: LR_CUST_PRSTY.
    endtry.
    check LR_CUST_PRSTY is bound.

***--------------------------------------------------------------------------------------
*** Get Valid Joint Types for Position
    LR_CUST_PRSTY->GET_JOITY_JOIPO( exporting IF_JOIPO = ME->S_FDMDL_VIS-JOIPO
                                    importing ET_TC341 = LT_TC341 ).

*** Filter by Product Style
    delete LT_TC341 where not JOITY in LR_CUST_PRSTY->GET_VALID_JOITY( ).

    loop at LT_TC341 into LS_TC341.
      insert value #( KEY  = LS_TC341-JOITY
                      TEXT = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_DESCR( IF_JOITY = LS_TC341-JOITY )
                    ) into table LT_VALUE.
    endloop.

***--------------------------------------------------------------------------------------
*** Set to DropDown List
    call function 'VRM_SET_VALUES'
      exporting
        ID     = 'ZVCXI_P2SS_S_FDMDL_VIS-JOITY'
        VALUES = LT_VALUE.

  endmethod.
