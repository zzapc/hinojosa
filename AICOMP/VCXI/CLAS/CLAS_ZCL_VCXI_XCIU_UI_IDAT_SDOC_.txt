
class ZCL_VCXI_XCIU_UI_IDAT_SDOC definition
  public
  final
  create public .

public section.

  data R_IDAT_SDOC type ref to ZCL_VCXI_XCI_IDAT_SDOC read-only .
  data S_IDAT_SDOC_VIS type ZVCXI_XCIU_S_IDAT_SDOC_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_IDAT_SDOC type ref to ZCL_VCXI_XCI_IDAT_SDOC .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IR_IDAT_SDOC type ref to ZCL_VCXI_XCI_IDAT_SDOC
    raising
      /VCXI/CX_CKX .
  methods UPDATE
    importing
      !IS_IDAT_SDOC_VIS type ZVCXI_XCIU_S_IDAT_SDOC_VIS
    raising
      /VCXI/CX_CKX .
protected section.

  data R_SDOCIT_GRID type ref to ZCL_VCXI_XCIU_GRID_SDOCIT .
  data R_SDOCMS_GRID type ref to ZCL_VCXI_XCIU_GRID_SDOCMS .
  data R_SDOCPA_GRID type ref to ZCL_VCXI_XCIU_GRID_SDOCPA .

  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_BACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXIT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_RUN_BAPI
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SAVE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_TOGGLE
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
private section.

  constants C_UC_BACK type SYUCOMM value 'BACK'. "#EC NOTEXT
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  constants C_UC_EXIT type SYUCOMM value 'EXIT'. "#EC NOTEXT
  constants C_UC_RUN_BAPI type SYUCOMM value 'RUN_BAPI'. "#EC NOTEXT
  constants C_UC_SAVE type SYUCOMM value 'SAVE'. "#EC NOTEXT
  constants C_UC_TOGGLE type SYUCOMM value 'TOGGLE'. "#EC NOTEXT
endclass. "ZCL_VCXI_XCIU_UI_IDAT_SDOC definition
class ZCL_VCXI_XCIU_UI_IDAT_SDOC implementation.
method CONSTRUCTOR.

  move IR_IDAT_SDOC to ME->R_IDAT_SDOC.

endmethod.
method DO_FREE.

***--------------------------------------------------------------------------------------
*** Free Partner Grid
  if ME->R_SDOCPA_GRID is bound.
    ME->R_SDOCPA_GRID->DO_FREE( ).
    free: ME->R_SDOCPA_GRID.
  endif.

*** Free Item Grid
  if ME->R_SDOCIT_GRID is bound.
    ME->R_SDOCIT_GRID->DO_FREE( ).
    free: ME->R_SDOCIT_GRID.
  endif.

*** Free Message Grid
  if ME->R_SDOCMS_GRID is bound.
    ME->R_SDOCMS_GRID->DO_FREE( ).
    free: ME->R_SDOCMS_GRID.
  endif.

***--------------------------------------------------------------------------------------
*** Clear References
  free: ME->R_IDAT_SDOC.

endmethod.
method DO_PBO.

  data:  LF_NIDAT     type          ZVCXI_XCI_NIDAT.
  data:  LT_EXCLUDING type table of SYUCOMM.

***--------------------------------------------------------------------------------------
*** Set Status
  if ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_TRUE.
    append C_UC_SAVE     to LT_EXCLUDING.
    append C_UC_RUN_BAPI to LT_EXCLUDING.
  endif.
  set pf-status '0100' of program 'SAPLZVCXI_XCIU_UI_IDAT_SDOC' excluding LT_EXCLUDING.

*** Set Title
  move ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_NIDAT.
  if ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
    set titlebar '0100_EDIT' of program 'SAPLZVCXI_XCIU_UI_IDAT_SDOC'
                             with LF_NIDAT.
  else.
    set titlebar '0100_DISP' of program 'SAPLZVCXI_XCIU_UI_IDAT_SDOC'
                             with LF_NIDAT.
  endif.

***--------------------------------------------------------------------------------------
*** Initialize Vis
  ME->INIT_VIS( ).

*** Refresh Partner Grid
  if ME->R_SDOCPA_GRID is not bound.
    create object ME->R_SDOCPA_GRID
      exporting
        IR_UI_IDAT_SDOC = ME.
  endif.
  move ABAP_TRUE to ME->R_SDOCPA_GRID->F_REFRESH_REQ.
  ME->R_SDOCPA_GRID->REFRESH_GRID( ).

*** Refresh Item Grid
  if ME->R_SDOCIT_GRID is not bound.
    create object ME->R_SDOCIT_GRID
      exporting
        IR_UI_IDAT_SDOC = ME.
  endif.
  move ABAP_TRUE to ME->R_SDOCIT_GRID->F_REFRESH_REQ.
  ME->R_SDOCIT_GRID->REFRESH_GRID( ).

*** Refresh Message Grid
  if ME->R_SDOCMS_GRID is not bound.
    create object ME->R_SDOCMS_GRID
      exporting
        IR_UI_IDAT_SDOC = ME.
  endif.
  move ABAP_TRUE to ME->R_SDOCMS_GRID->F_REFRESH_REQ.
  ME->R_SDOCMS_GRID->REFRESH_GRID( ).

***--------------------------------------------------------------------------------------
*** Modify Screen
  ME->MODIFY_SCREEN( ).

endmethod.
method DO_USER_COMMAND.

***----------------------------------------------------------------------------
*** Check for Changes
  if ME->R_SDOCPA_GRID is bound.
    ME->R_SDOCPA_GRID->CHECK_DATA_CHANGED( ).
  endif.
  if ME->R_SDOCIT_GRID is bound.
    ME->R_SDOCIT_GRID->CHECK_DATA_CHANGED( ).
  endif.

***----------------------------------------------------------------------------
  case IF_UCOMM.
    when C_UC_BACK.
      ME->HANDLE_UC_BACK( ).
    when C_UC_EXIT.
      ME->HANDLE_UC_EXIT( ).
    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).

    when C_UC_TOGGLE.
      ME->HANDLE_UC_TOGGLE( ).

    when C_UC_RUN_BAPI.
      ME->HANDLE_UC_RUN_BAPI( ).

    when C_UC_SAVE.
      ME->HANDLE_UC_SAVE( ).
  endcase.

endmethod.
method HANDLE_UC_BACK.

  ME->DO_FREE( ).

  leave to screen 0.

endmethod.
method HANDLE_UC_CANCEL.

  ME->DO_FREE( ).

  leave to screen 0.

endmethod.
method HANDLE_UC_EXIT.

  ME->DO_FREE( ).

  leave to screen 0.

endmethod.
method HANDLE_UC_RUN_BAPI.

  data:          LF_VBELN       type          VBELN,
                 LF_ANSWER      type          C.
  data:          LT_PARAMETER   type table of SPAR.
  data:          LR_MSG         type ref to   /VCXI/CL_CKXM_MESSAGE.
  field-symbols: <S_PARAMETER>  type          SPAR.

***----------------------------------------------------------------------------
*** Get previous Sales Document
  move ME->R_IDAT_SDOC->GET_VBELN_LAST( ) to LF_VBELN.

  if LF_VBELN is not initial.
    append initial line to LT_PARAMETER assigning <S_PARAMETER>.
    move 'VBELN'   to <S_PARAMETER>-PARAM.
    move LF_VBELN  to <S_PARAMETER>-VALUE.

    call function 'POPUP_TO_CONFIRM'
      exporting
        TEXT_QUESTION  = 'Do you want to update Document &VBELN&'(Q01)
      importing
        ANSWER         = LF_ANSWER
      tables
        PARAMETER      = LT_PARAMETER
      exceptions
        TEXT_NOT_FOUND = 1.

    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

    case LF_ANSWER.
      when 1.
        "keep going
      when 2.
        clear LF_VBELN.
      when others.
        exit.
    endcase.
  endif.

***----------------------------------------------------------------------------
*** Save before BAPI
  ME->HANDLE_UC_SAVE( ).

*** Call BAPI
  ME->R_IDAT_SDOC->CALL_BAPI( exporting IF_TESTRUN = ABAP_FALSE
                                        IF_VBELN   = LF_VBELN
                              importing ER_MSG     = LR_MSG ).

*** Save After BAPI
  ME->HANDLE_UC_SAVE( ).

***----------------------------------------------------------------------------
*** Show Result Pop-Up
  if LR_MSG is bound.
    LR_MSG->DISPLAY_MSG( ).
  endif.

endmethod.
method HANDLE_UC_SAVE.

  data:  LF_NIDAT  type ZVCXI_XCI_NIDAT.

***------------------------------------------------------------------------------------------------
*** Perform Save and Commit
  ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCI_IDAT_SDOC=>C_FCODE_SAVE ).

  commit work and wait.

*** Relock after Commit
  ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK( ).

***------------------------------------------------------------------------------------------------
  LF_NIDAT = ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT~GET_GUID( ).

*** Integration Data & was saved.
  message id 'ZVCXI_XCIU' type 'S' number '101' with LF_NIDAT.

endmethod.
method HANDLE_UC_TOGGLE.

  if ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
    ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~DO_UNLOCK( ).
  else.
    ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK( ).
  endif.

endmethod.
method INIT_VIS.

  data:  LS_LOG              type          /VCXI/CKX_S_LOG,
         LS_LOG_EXT          type          /VCXI/CKX_S_LOG_EXT.

  free: ME->S_IDAT_SDOC_VIS.

  move ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to ME->S_IDAT_SDOC_VIS-NIDAT.

  move-corresponding ME->R_IDAT_SDOC->S_TVAK   to ME->S_IDAT_SDOC_VIS.
  move-corresponding ME->R_IDAT_SDOC->S_TVTA   to ME->S_IDAT_SDOC_VIS.
  move-corresponding ME->R_IDAT_SDOC->S_SDOCIN to ME->S_IDAT_SDOC_VIS.

*** Get Extended Log
  move ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT~GET_LOG( ) to LS_LOG.
  LS_LOG_EXT = /VCXI/CL_CKX_SERVICE=>GET_LOG_EXT( IS_LOG = LS_LOG ).
  move-corresponding LS_LOG_EXT to ME->S_IDAT_SDOC_VIS.

endmethod.
method MODIFY_SCREEN.

  data:  LF_LOCKED   type           /VCXI/CKX_LOCKED.

*** Get Lock Status
  move ME->R_IDAT_SDOC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) to LF_LOCKED.

*** Update Screen
  loop at screen.
*** Not changeable if not Locked
    if LF_LOCKED ne ABAP_TRUE.
      move 0 to SCREEN-INPUT.
    endif.
    modify screen.
  endloop.

endmethod.
method START.

  data: LR_UI_IDAT_SDOC type ref to  ZCL_VCXI_XCIU_UI_IDAT_SDOC.

  check IR_IDAT_SDOC is bound.

  create object LR_UI_IDAT_SDOC
    exporting IR_IDAT_SDOC = IR_IDAT_SDOC.

  call function 'ZVCXI_XCIU_UI_IDAT_SDOC_START'
    exporting
      IR_UI_IDAT_SDOC = LR_UI_IDAT_SDOC.

endmethod.
method UPDATE.

  data:  LS_SDOCIN    type ZVCXI_XCI_S_SDOCIN.

  move-corresponding IS_IDAT_SDOC_VIS to LS_SDOCIN.

  ME->R_IDAT_SDOC->SET_SDOCIN( IS_SDOCIN = LS_SDOCIN ).

endmethod.
