
class ZCL_VCXI_PCSR_BL_PSTEP_CUT definition
  public
  inheriting from ZCL_VCXI_P0SR_BL_PSTEP_CUT
  create public .

public section.

  constants C_IPSTP_PC_CUT type /VCXI/VSMC_IPSTP value 'PC_PS_CUT'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_PC_CUT
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  data F_FLUTE type ZVCXI_PCS_FLUTE .

  methods INIT_BY_SPEC_BOARD
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_SHTPR
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSR_BL_PSTEP_CUT definition
class ZCL_VCXI_PCSR_BL_PSTEP_CUT implementation.
method ADD_LIMITS_TO_RTE_PSTEP.

  data:          LF_LDUOM               type        /VCXI/VSMC_LDUOM,
                 LF_LDVAL               type        /VCXI/VSMR_LDVAL.
  data:          LI_LVVAL               type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
  data:          LT_LTYPE               type        /VCXI/CKX_TT_OBJECT.
  data:          LR_LTYPE               type ref to /VCXI/CL_VSMC_LTYPE,
                 LR_OBJECT              type ref to /VCXI/IF_CKX_OBJECT.
  field-symbols: <S_LVVAL>              type        /VCXI/VSMR_S_RTE_RANGE_LVVAL.

  SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
  LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
  loop at LT_LTYPE into LR_OBJECT.
    move LR_OBJECT ?to LR_LTYPE.

    clear: LF_LDVAL,
           LF_LDUOM,
           LI_LVVAL.

***----------------------------------------------------------------------------
    case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Flute Type
      when 'PC_LT_VP_FLUTE'.
        append initial line to LI_LVVAL assigning <S_LVVAL>.
        move 'I'                       to <S_LVVAL>-SIGN.
        move 'EQ'                      to <S_LVVAL>-OPTION.
        move ME->F_FLUTE               to <S_LVVAL>-LOW.

      when others.
        continue.
    endcase.


***----------------------------------------------------------------------------
*** Set
    case LR_LTYPE->F_MLTYP.
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
        IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                    IF_LDVAL = LF_LDVAL
                                    IF_LDUOM = LF_LDUOM ).
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
        IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                    II_LVVAL = LI_LVVAL ).
    endcase.
  endloop.

endmethod.
method COMPARE.

  data:  LR_BL_PSTEP_CUT type ref to ZCL_VCXI_PCSR_BL_PSTEP_CUT.

*** Super Compare
  RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
  check RF_SIMILAR eq ABAP_TRUE.

  move IR_BL_PSTEP ?to LR_BL_PSTEP_CUT.

***----------------------------------------------------------------------------
*** Flute Type
  if ME->F_FLUTE eq LR_BL_PSTEP_CUT->F_FLUTE.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                      IF_DATE    = IF_DATE
                      IR_APPDATA = IR_APPDATA ).

endmethod.
method COPY.

  data:  LR_BL_PSTEP_CUT type ref to ZCL_VCXI_PCSR_BL_PSTEP_CUT.

*** Super Copy
  RR_BL_PSTEP = SUPER->COPY( ).
  move RR_BL_PSTEP ?to LR_BL_PSTEP_CUT.

***----------------------------------------------------------------------------
*** Flute Type
  move ME->F_FLUTE       to LR_BL_PSTEP_CUT->F_FLUTE.

endmethod.
method DESERIALIZE.

  data:  LF_XML   type STRING.

  check IF_XML is not initial.

*** Deserialize
  call transformation ID
       source xml IF_XML
       result SUPER_XML    = LF_XML

              F_FLUTE      = ME->F_FLUTE.

*** Super Deserialize
  SUPER->DESERIALIZE( IF_XML = LF_XML ).

endmethod.
method FILL_SPVRE_ADDON.

  SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     IR_ARBPL       = IR_ARBPL
                           changing  CT_SPVRE       = CT_SPVRE ).

  case IR_SPVRE_ADDON->GET_ID( ).
    when 'PC_AT_CUT'.
      ME->FILL_SPVRE_ADDON_CUT( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                          IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                changing  CT_SPVRE       = CT_SPVRE ).
  endcase.

endmethod.
method INIT_BY_SPEC.

  SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                       IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Board Informations
  ME->INIT_BY_SPEC_BOARD( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Sheet Procurement -> Flute
  ME->INIT_BY_SPEC_SHTPR( IT_PRVDR = IT_PRVDR ).

endmethod.
method INIT_BY_SPEC_BOARD.

  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD       type ref to ZCL_VCXI_PCSS_PR_BOARD.

***------------------------------------------------------------------------------------------------
*** Get Board Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
        if LR_PR_BOARD is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_BOARD is bound.

***------------------------------------------------------------------------------------------------
  move LR_PR_BOARD->GET_FLUTE( ) to ME->F_FLUTE.

endmethod.
method INIT_BY_SPEC_SHTPR.

  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_MS_SHTPR    type ref to ZCL_VCXI_PCSS_PR_MS_SHTPR.

***------------------------------------------------------------------------------------------------
*** Get Board Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_SHTPR.
        if LR_PR_MS_SHTPR is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_MS_SHTPR is bound.

***------------------------------------------------------------------------------------------------
  move LR_PR_MS_SHTPR->GET_FLUTE( ) to ME->F_FLUTE.

endmethod.
method SERIALIZE.

*** Super Serialize
  RF_XML = SUPER->SERIALIZE( ).

*** Serialize
  call transformation ID
       source SUPER_XML    = RF_XML

              F_FLUTE      = ME->F_FLUTE

       result xml RF_XML.

endmethod.
