
class ZCL_VCXI_P1SP_UI_ADDON_WIND definition
  public
  inheriting from ZCL_VCXI_XCSP_UI_ADDON
  create public .

public section.

  data S_ADDON_WIND_VIS type ZVCXI_P1SP_S_ADDON_WIND_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
protected section.

  data R_PR_ADDON_WIND type ref to ZCL_VCXI_P1SP_PR_ADDON_WIND .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SP_UI_ADDON_WIND definition
class ZCL_VCXI_P1SP_UI_ADDON_WIND implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SP_UI_ADDON_WIND_BIND'
      exporting
        IR_UI_ADDON_WIND = ME
      importing
        ES_DYNP          = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_ADDON_WIND.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_ADDON_WIND_VIS type ZVCXI_P1SP_S_ADDON_WIND_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_ADDON_WIND is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_ADDON_WIND_VIS.

***-------------------------------------------------------------------------------------
*** Set PC Type
    if ME->S_ADDON_WIND_VIS-PCTYP ne LS_ADDON_WIND_VIS-PCTYP.
      ME->R_PR_ADDON_WIND->SET_PCTYP( IF_PCTYP = LS_ADDON_WIND_VIS-PCTYP
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set PC Length
    if ME->S_ADDON_WIND_VIS-S_PCLEN ne LS_ADDON_WIND_VIS-S_PCLEN.
      ME->R_PR_ADDON_WIND->SET_PCLEN( IS_PCLEN = LS_ADDON_WIND_VIS-S_PCLEN
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set PC Width
    if ME->S_ADDON_WIND_VIS-S_PCWID ne LS_ADDON_WIND_VIS-S_PCWID.
      ME->R_PR_ADDON_WIND->SET_PCWID( IS_PCWID = LS_ADDON_WIND_VIS-S_PCWID
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set PC Height
    if ME->S_ADDON_WIND_VIS-S_PCHEI ne LS_ADDON_WIND_VIS-S_PCHEI.
      ME->R_PR_ADDON_WIND->SET_PCHEI( IS_PCHEI = LS_ADDON_WIND_VIS-S_PCHEI
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_ADDON_WIND.

  endmethod.
  method INIT_VIS.

*** Super
    SUPER->INIT_VIS( ).

    free: ME->S_ADDON_WIND_VIS.
    ME->S_ADDON_WIND_VIS-S_ADDON_VIS = ME->S_ADDON_VIS.

***--------------------------------------------------------------------------------------
*** PC Dimension
    ME->S_ADDON_WIND_VIS-PCTYP   = ME->R_PR_ADDON_WIND->GET_PCTYP( ).
    ME->S_ADDON_WIND_VIS-S_PCLEN = ME->R_PR_ADDON_WIND->GET_PCLEN( ).
    ME->S_ADDON_WIND_VIS-S_PCWID = ME->R_PR_ADDON_WIND->GET_PCWID( ).
    ME->S_ADDON_WIND_VIS-S_PCHEI = ME->R_PR_ADDON_WIND->GET_PCHEI( ).

  endmethod.
