
class ZCL_VCXI_P0SS_GRID_COMP_CO definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_P0SS_S_COMP_CO_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_SPEC_SE type ref to ZCL_VCXI_P0SS_PR_SPEC_SE .

  methods GET_COMP_CO_VIS
    importing
      !IR_PR_COMP_CO type ref to ZCL_VCXI_P0SS_PR_COMP_CO
    returning
      value(RS_COMP_CO_VIS) type ZVCXI_P0SS_S_COMP_CO_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_COMP_CO_VIS
    importing
      !IR_PR_COMP_CO type ref to ZCL_VCXI_P0SS_PR_COMP_CO
      !IS_COMP_CO_VIS type ZVCXI_P0SS_S_COMP_CO_VIS
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_COMP_CO
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SS_GRID_COMP_CO definition
class ZCL_VCXI_P0SS_GRID_COMP_CO implementation.
method CHANGE_STYLE_COMP_CO.

  free CT_STYL.

*** Change Style to editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SHTPL'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SHTPW'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPS'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISKEY'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_P0SS_PR_COMP_CO=>C_IPRVT_P0_COMP_CO.

  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_SPEC_SE.
    catch CX_SY_MOVE_CAST_ERROR.
      clear ME->R_PR_SPEC_SE.
  endtry.

endmethod.
method GET_COMP_CO_VIS.

  data: LS_SHTPL type ZVCXI_P0SS_S_SHTPL,
        LS_SHTPW type ZVCXI_P0SS_S_SHTPW,
        LS_DIKEY type ZVCXI_P0SS_S_DIKEY.

*** Get Component Material Number, Ups and Distribution Key
  RS_COMP_CO_VIS-MATNR       = IR_PR_COMP_CO->GET_MATNR( ).
  RS_COMP_CO_VIS-MATNR_DESCR = IR_PR_COMP_CO->GET_MATNR_DESCR( ).
  RS_COMP_CO_VIS-NOUPS       = IR_PR_COMP_CO->GET_NOUPS( ).
  LS_DIKEY                   = IR_PR_COMP_CO->GET_DIKEY( ).
  move-corresponding LS_DIKEY to RS_COMP_CO_VIS.

*** Get Product Sheet Dimensions
  LS_SHTPL                     = IR_PR_COMP_CO->GET_SHTPL( ).
  move-corresponding LS_SHTPL to RS_COMP_CO_VIS.
  LS_SHTPW                     = IR_PR_COMP_CO->GET_SHTPW( ).
  move-corresponding LS_SHTPW to RS_COMP_CO_VIS.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED type        /VCXI/CKX_LOCKED,
                 LF_INUSE  type        /VCXI/VKSR_INUSE.
  field-symbols: <S_FCAT>  type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

      when 'MATNR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'DIKEY'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'NOUPS'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'SHTPL' or 'SHTPW'.
***     Not editable

    endcase.
  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data:          LS_COMP_CO_GRID      type          ZVCXI_P0SS_S_COMP_CO_GRID,
                 LS_COMP_CO_VIS       type          ZVCXI_P0SS_S_COMP_CO_VIS.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_COMP_CO        type ref to   ZCL_VCXI_P0SS_PR_COMP_CO.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Components
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_CO=>C_IPRVT_P0_COMP_CO
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_COMP_CO_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_COMP_CO.
        check LR_PR_COMP_CO is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_COMP_CO_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_COMP_CO_GRID-GATKY.
        move LR_GATE               to LS_COMP_CO_GRID-R_GATE.

        LS_COMP_CO_VIS = ME->GET_COMP_CO_VIS( IR_PR_COMP_CO = LR_PR_COMP_CO ).
        move-corresponding LS_COMP_CO_VIS to LS_COMP_CO_GRID.

***------------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_COMP_CO( changing  CT_STYL  = LS_COMP_CO_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_COMP_CO_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_COMP_CO_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_COMP_CO_GRID      type          ZVCXI_P0SS_S_COMP_CO_GRID,
                 LS_COMP_CO_VIS       type          ZVCXI_P0SS_S_COMP_CO_VIS.
  data:          LR_PR_COMP_CO        type ref to   ZCL_VCXI_P0SS_PR_COMP_CO,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        try.
            move-corresponding <S_DATA> to LS_COMP_CO_GRID.
            check LS_COMP_CO_GRID-R_GATE is bound.

            move LS_COMP_CO_GRID-R_GATE->R_CLSPR ?to LR_PR_COMP_CO.
            check LR_PR_COMP_CO is bound.

***         Set Values to PR Class
            move-corresponding LS_COMP_CO_GRID to LS_COMP_CO_VIS.
            ME->SET_COMP_CO_VIS( IR_PR_COMP_CO  = LR_PR_COMP_CO
                                 IS_COMP_CO_VIS = LS_COMP_CO_VIS ).

          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_COMP_CO_VIS.

  data: LS_DIKEY       type ZVCXI_P0SS_S_DIKEY,
        LS_COMP_CO_VIS type ZVCXI_P0SS_S_COMP_CO_VIS.

  LS_COMP_CO_VIS = ME->GET_COMP_CO_VIS( IR_PR_COMP_CO = IR_PR_COMP_CO ).

*** Set Component Product Type and Ratio
  if LS_COMP_CO_VIS-MATNR ne IS_COMP_CO_VIS-MATNR.
    IR_PR_COMP_CO->SET_MATNR( IF_MATNR = IS_COMP_CO_VIS-MATNR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_CO_VIS-NOUPS ne IS_COMP_CO_VIS-NOUPS.
    IR_PR_COMP_CO->SET_NOUPS( IF_NOUPS = IS_COMP_CO_VIS-NOUPS
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endif.

  if LS_COMP_CO_VIS-DIKEY ne IS_COMP_CO_VIS-DIKEY.
    move-corresponding IS_COMP_CO_VIS to LS_DIKEY.
    IR_PR_COMP_CO->SET_DIKEY( IS_DIKEY = LS_DIKEY
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
