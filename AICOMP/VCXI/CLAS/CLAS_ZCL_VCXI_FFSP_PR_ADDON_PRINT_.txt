
class ZCL_VCXI_FFSP_PR_ADDON_PRINT definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_FFSP_ADJ_FIDIM .

  constants C_IAATY_COVRT type /VCXI/VSMC_IAATY value 'FF_AA_COVRT' ##NO_TEXT.
  constants C_IAATY_FITIN type /VCXI/VSMC_IAATY value 'FF_AA_FITIN' ##NO_TEXT.
  constants C_IAATY_NOACC type /VCXI/VSMC_IAATY value 'FF_AA_NOACC' ##NO_TEXT.
  constants C_IAATY_NOATC type /VCXI/VSMC_IAATY value 'FF_AA_NOATC' ##NO_TEXT.
  constants C_IAATY_NOCOL type /VCXI/VSMC_IAATY value 'FF_AA_NOCOL' ##NO_TEXT.
  constants C_PARID_FITIN type /VCXI/VKS_PARID value 'ZVCXI_FF_FITIN' ##NO_TEXT.
  constants C_PARID_NOACC type /VCXI/VKS_PARID value 'ZVCXI_FF_NOACC' ##NO_TEXT.
  constants C_PARID_NOATC type /VCXI/VKS_PARID value 'ZVCXI_FF_NOATC' ##NO_TEXT.
  constants C_PARID_NODDG type /VCXI/VKS_PARID value 'ZVCXI_FF_NODDG' ##NO_TEXT.
  constants C_PARID_PRCAT type /VCXI/VKS_PARID value 'ZVCXI_FF_PRCAT' ##NO_TEXT.
  constants C_PARID_PRRLE type /VCXI/VKS_PARID value 'ZVCXI_FF_PRRLE' ##NO_TEXT.
  constants C_PARID_PRTIN type /VCXI/VKS_PARID value 'ZVCXI_FF_PRTIN' ##NO_TEXT.
  constants C_PARID_PRWID type /VCXI/VKS_PARID value 'ZVCXI_FF_PRWID' ##NO_TEXT.
  constants C_PARID_TPRIN type /VCXI/VKS_PARID value 'ZVCXI_FF_TPRIN' ##NO_TEXT.

  methods GET_NOACC
    exporting
      !EF_NOACC type ZVCXI_FFS_NOACC
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_NOATC
    exporting
      !EF_NOATC type ZVCXI_FFS_NOATC
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_NOCOL
    returning
      value(RF_NOCOL) type ZVCXI_FFS_NOCOL
    raising
      /VCXI/CX_CKX .
  methods GET_NODDG
    exporting
      !EF_NODDG type ZVCXI_FFS_NODDG
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_PRCAT
    exporting
      !EF_PRCAT type ZVCXI_FFS_PRCAT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_PRRLE
    exporting
      !ES_PRRLE type ZVCXI_FFS_S_PRRLE
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_PRTIN
    exporting
      !ES_PRTIN type ZVCXI_FFS_S_PRTIN
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_PRWID
    exporting
      !ES_PRWID type ZVCXI_FFS_S_PRWID
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_TPRIN
    exporting
      !EF_TPRIN type ZVCXI_FFS_TPRIN
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_NOACC
    importing
      !IF_NOACC type ZVCXI_FFS_NOACC
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOATC
    importing
      !IF_NOATC type ZVCXI_FFS_NOATC
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NODDG
    importing
      !IF_NODDG type ZVCXI_FFS_NODDG
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRCAT
    importing
      !IF_PRCAT type ZVCXI_FFS_PRCAT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRRLE
    importing
      !IS_PRRLE type ZVCXI_FFS_S_PRRLE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRTIN
    importing
      !IS_PRTIN type ZVCXI_FFS_S_PRTIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRWID
    importing
      !IS_PRWID type ZVCXI_FFS_S_PRWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TPRIN
    importing
      !IF_TPRIN type ZVCXI_FFS_TPRIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_COVRT
    returning
      value(RS_COVRT) type ZVCXI_FFS_S_COVRT
    raising
      /VCXI/CX_CKX .
  methods GET_FITIN
    exporting
      !ES_FITIN type ZVCXI_FFS_S_FITIN
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_SURWT
    returning
      value(RS_SURWT) type ZVCXI_F0S_S_SURWT
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_FIDIM type /VCXI/VKSC_IEVNT value 'RECALC_FIDIM' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_FITIN_CHANGED type /VCXI/VKSC_IEVNT value 'FITIN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOACC_CHANGED type /VCXI/VKSC_IEVNT value 'NOACC_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOATC_CHANGED type /VCXI/VKSC_IEVNT value 'NOATC_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NODDG_CHANGED type /VCXI/VKSC_IEVNT value 'NODDG_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PRTIN_CHANGED type /VCXI/VKSC_IEVNT value 'PRTIN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RECALC_CONSU_REQ type /VCXI/VKSC_IEVNT value 'RECALC_CONSU_REQ' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_FITIN
    importing
      !IS_FITIN type ZVCXI_FFS_S_FITIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAREC
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSP_PR_ADDON_PRINT definition
class ZCL_VCXI_FFSP_PR_ADDON_PRINT implementation.
  method GET_COVRT.

    data: LS_COVRG     type        ZVCXI_FFS_S_COVRG.
    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_PR_MC_INK type ref to ZCL_VCXI_FFSP_PR_MC_INK,
          LR_GATE      type ref to /VCXI/CL_VKSR_GATE.

*** Get Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_INK=>C_IPRVT_MC_INK
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_MC_INK.

***   Get Ink Coverage
      LR_PR_MC_INK->GET_COVRG( importing ES_COVRG = LS_COVRG ).
      add  LS_COVRG-COVRG     to RS_COVRT-COVRT.
      move LS_COVRG-COVRG_UOM to RS_COVRT-COVRT_UOM.
    endloop.

  endmethod.
  method GET_FITIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FITIN ).
    move LS_PARAM-ATFLV to ES_FITIN-FITIN.
    move LS_PARAM-UNIT  to ES_FITIN-FITIN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOACC.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOACC ).
    move LS_PARAM-ATFLV to EF_NOACC.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOATC.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOATC ).
    move LS_PARAM-ATFLV to EF_NOATC.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOCOL.

    data:  LT_GATE   type /VCXI/VKSR_TT_GATE.

*** Get all Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_INK=>C_IPRVT_MC_INK
                                     IF_INUSE = ABAP_TRUE ).

    move LINES( LT_GATE ) to RF_NOCOL.

  endmethod.
  method GET_NODDG.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NODDG ).
    move LS_PARAM-ATFLV to EF_NODDG.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRCAT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRCAT ).
    move LS_PARAM-ATWRT to EF_PRCAT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRRLE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRRLE ).
    move LS_PARAM-ATFLV to ES_PRRLE-PRRLE.
    move LS_PARAM-UNIT  to ES_PRRLE-PRRLE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRTIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRTIN ).
    move LS_PARAM-ATFLV to ES_PRTIN-PRTIN.
    move LS_PARAM-UNIT  to ES_PRTIN-PRTIN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRWID ).
    move LS_PARAM-ATFLV to ES_PRWID-PRWID.
    move LS_PARAM-UNIT  to ES_PRWID-PRWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_RTE_SAREC.

    data: LF_GAATY type /VCXI/VSMC_GAATY.
    data: LS_COVRT type ZVCXI_FFS_S_COVRT,
          LS_FITIN type ZVCXI_FFS_S_FITIN,
          LF_NOACC type ZVCXI_FFS_NOACC,
          LF_NOATC type ZVCXI_FFS_NOATC.
    field-symbols: <S_RTE_SAREC> type /VCXI/VSMR_S_RTE_SAREC,
                   <S_ARECN>     type /VCXI/VSMR_S_RTE_RANGE_ARECN.

*** Get Super
    RT_RTE_SAREC = SUPER->GET_RTE_SAREC( ).

    check ME->R_RTE_CADDON          is bound and
          ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - Number of Colors
    try.
        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOCOL
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.
        move ME->GET_NOCOL( )                             to <S_RTE_SAREC>-ARECM.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move <S_RTE_SAREC>-ARECM to <S_ARECN>-LOW.

      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Total Coverage
    try.
        move ME->GET_COVRT( ) to LS_COVRT.

        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_COVRT
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move LS_COVRT-COVRT      to <S_ARECN>-LOW.

      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Internal Film Thickness
    try.
        ME->GET_FITIN( importing ES_FITIN = LS_FITIN ).

        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_FITIN
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move LS_FITIN-FITIN      to <S_ARECN>-LOW.

      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Number of additional color changes
    try.
        ME->GET_NOACC( importing EF_NOACC = LF_NOACC ).

        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOACC
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.
        move LF_NOACC                                     to <S_RTE_SAREC>-ARECM.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move LF_NOACC            to <S_ARECN>-LOW.

      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Number of additional tool changes
    try.
        ME->GET_NOATC( importing EF_NOATC = LF_NOATC ).

        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOATC
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.
        move LF_NOATC                                     to <S_RTE_SAREC>-ARECM.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move LF_NOATC            to <S_ARECN>-LOW.

      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method GET_SURWT.

    data: LS_SURWT      type        ZVCXI_F0S_S_SURWT,
          LS_COVRG      type        ZVCXI_FFS_S_COVRG.
    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MC_INK  type ref to ZCL_VCXI_FFSP_PR_MC_INK.

*** Get all Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_INK=>C_IPRVT_MC_INK
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_MC_INK.
      check LR_PR_MC_INK is bound.

***   Get Ink Surface Weight and Coverage
      LR_PR_MC_INK->GET_SURWT( importing ES_SURWT = LS_SURWT ).
      LR_PR_MC_INK->GET_COVRG( importing ES_COVRG = LS_COVRG ).

***   Adjust Surface Weight by Coverage
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                          IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                          IF_CALCV_2     = LS_COVRG-COVRG
                                                          IF_CALCV_UOM_2 = LS_COVRG-COVRG_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                          IF_UOM         = LS_SURWT-SURWT_UOM
                                                importing EF_CALCV       = LS_SURWT-SURWT
                                                          EF_CALCV_UOM   = LS_SURWT-SURWT_UOM ).

***   Add to total Surface Weight
      if RS_SURWT-SURWT_UOM is initial.
        move LS_SURWT to RS_SURWT.
      else.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                            IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                            IF_CALCV_2     = RS_SURWT-SURWT
                                                            IF_CALCV_UOM_2 = RS_SURWT-SURWT_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                            IF_UOM         = RS_SURWT-SURWT_UOM
                                                  importing EF_CALCV       = RS_SURWT-SURWT
                                                            EF_CALCV_UOM   = RS_SURWT-SURWT_UOM ).
      endif.
    endloop.

  endmethod.
  method GET_TPRIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPRIN ).
    move LS_PARAM-ATWRT to EF_TPRIN.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

***   Film Dimensions
      when C_IEVNT_I_RECALC_FIDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_ADJ_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE            type        /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI      type        ZVCXI_XCSP_S_MQTYI,
          LS_MQTYI_AREA type        ZVCXI_XCSP_S_MQTYI,
          LS_PRWID      type        ZVCXI_FFS_S_PRWID.
    data: LF_UPDATE_ALL      type        ABAP_BOOL.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MACHINE  type ref to ZCL_VCXI_XCSP_PR_MACHINE,
          LR_PR_MC       type ref to ZCL_VCXI_XCSP_PR_MC,
          LR_PR_MC_INK   type ref to ZCL_VCXI_FFSP_PR_MC_INK.

***------------------------------------------------------------------
*** Should all MC Ink's updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get Print Width
    ME->GET_PRWID( importing ES_PRWID = LS_PRWID ).

***------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.

      clear: LR_PR_MACHINE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MACHINE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_MACHINE.
      endtry.
      if LR_PR_MACHINE is bound.
        move LR_PR_MACHINE->GET_MQTYI( ) to LS_MQTYI.
      endif.

    endif.

*** Calc Printable Area
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_MQTYI-MQTYI
                                                        IF_CALCV_UOM_1 = LS_MQTYI-MQTYI_UOM
                                                        IF_CALCV_2     = LS_PRWID-PRWID
                                                        IF_CALCV_UOM_2 = LS_PRWID-PRWID_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                              importing EF_CALCV       = LS_MQTYI_AREA-MQTYI
                                                        EF_CALCV_UOM   = LS_MQTYI_AREA-MQTYI_UOM ).

***------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

***   Try Calculation for Ink
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MC_INK.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MC_INK.
      endtry.
      if LR_PR_MC_INK is bound.
        LR_PR_MC_INK->CALC_CONSU( IS_MQTYI = LS_MQTYI_AREA ).
      else.
***     Calculate standard Consuption
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_MC.
          catch CX_SY_MOVE_CAST_ERROR.
            clear LR_PR_MC.
        endtry.
        if LR_PR_MC is bound.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
        endif.
      endif.
    endloop.

  endmethod.
  method SET_FITIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FITIN ).

    move IS_FITIN-FITIN                      to LS_PARAM-ATFLV.
    move IS_FITIN-FITIN_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FITIN_CHANGED ).
    endif.

  endmethod.
  method SET_NOACC.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOACC ).
    move IF_NOACC     to LS_PARAM-ATFLV.
    move IF_SETBY     to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOACC_CHANGED ).
    endif.

  endmethod.
  method SET_NOATC.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOATC ).
    move IF_NOATC   to LS_PARAM-ATFLV.
    move IF_SETBY   to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOATC_CHANGED ).
    endif.

  endmethod.
  method SET_NODDG.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NODDG ).
    move IF_NODDG   to LS_PARAM-ATFLV.
    move IF_SETBY   to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NODDG_CHANGED ).
    endif.

  endmethod.
  method SET_PRCAT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRCAT ).

    move IF_PRCAT to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_ADJ_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_PRRLE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRRLE ).
    move IS_PRRLE-PRRLE     to LS_PARAM-ATFLV.
    move IS_PRRLE-PRRLE_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_PRTIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRTIN ).
    move IS_PRTIN-PRTIN     to LS_PARAM-ATFLV.
    move IS_PRTIN-PRTIN_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PRTIN_CHANGED ).
    endif.

  endmethod.
  method SET_PRWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRWID ).
    move IS_PRWID-PRWID     to LS_PARAM-ATFLV.
    move IS_PRWID-PRWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_TPRIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPRIN ).

    move IF_TPRIN to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_ADJ_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSP_ADJ_FIDIM~CALC_FIDIM_OUT.

    data:          LS_FITIN   type ZVCXI_FFS_S_FITIN,
                   LS_PRTIN   type ZVCXI_FFS_S_PRTIN,
                   LS_SURWT   type ZVCXI_F0S_S_SURWT.
    field-symbols: <S_FIDIM>  type ZVCXI_FFSP_S_FIDIM.

***--------------------------------------------------------------------------------------
*** Buffer Film Thickness for Aspect
    read table CT_FIDIM assigning <S_FIDIM> index 1.
    if SY-SUBRC eq 0.
      move <S_FIDIM>-S_FITIN to LS_FITIN.
    endif.
    ME->SET_FITIN( IS_FITIN = LS_FITIN ).

***--------------------------------------------------------------------------------------
*** Get Internal Print Thickness
    ME->GET_PRTIN( importing ES_PRTIN = LS_PRTIN ).

*** Get Surface Weight of Inks
    LS_SURWT = ME->GET_SURWT( ).

***--------------------------------------------------------------------------------------
*** Adjust Film Dimensions by Print Thickness
    loop at CT_FIDIM assigning <S_FIDIM>.
***   Calculate Internal Thickness
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_PRTIN-PRTIN
                                                          IF_CALCV_UOM_1 = LS_PRTIN-PRTIN_UOM
                                                          IF_CALCV_2     = <S_FIDIM>-FITIN
                                                          IF_CALCV_UOM_2 = <S_FIDIM>-FITIN_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = <S_FIDIM>-FITIN
                                                          EF_CALCV_UOM   = <S_FIDIM>-FITIN_UOM ).

***   Calculate Surface Weight
      if LS_SURWT is not initial.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                            IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                            IF_CALCV_2     = <S_FIDIM>-SURWT
                                                            IF_CALCV_UOM_2 = <S_FIDIM>-SURWT_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                  importing EF_CALCV       = <S_FIDIM>-SURWT
                                                            EF_CALCV_UOM   = <S_FIDIM>-SURWT_UOM ).
      endif.

    endloop.

  endmethod.
