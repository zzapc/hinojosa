
class ZCL_VCXI_XCSP_UI_MC_TOOL definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MC_TOOL_VIS type ZVCXI_XCSP_S_MC_TOOL_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data F_CURSOR type SCRFNAME .
  data R_PR_MC_TOOL type ref to ZCL_VCXI_XCSP_PR_MC_TOOL .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSP_UI_MC_TOOL definition
class ZCL_VCXI_XCSP_UI_MC_TOOL implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_XCSP_UI_MC_TOOL_BIND'
      exporting
        IR_UI_MC_TOOL = ME
      importing
        ES_DYNP       = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MC_TOOL.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

    SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                             IF_DYNNR = IF_DYNNR ).

    try.

        if IF_REPID eq ME->S_DYNP-REPID and
           IF_DYNNR eq ME->S_DYNP-DYNNR.

          LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
          LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***       Modify Scree using DynamicVC
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

          loop at screen.
            if LF_LOCKED ne ABAP_TRUE or
               LF_INUSE  ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            else.
***           Special Handling for Purchased Fields
              if SCREEN-GROUP2 eq 'PUR'.
***             Make it Editable
                if ME->S_MC_TOOL_VIS-PURCH eq ABAP_TRUE.
                  case SCREEN-GROUP1.
                    when 'INP'.
                      SCREEN-INVISIBLE = 0.
                      SCREEN-REQUIRED = 0.
                      SCREEN-INPUT = 1.
                    when 'OUT'.
                      SCREEN-INVISIBLE = 0.
                      SCREEN-REQUIRED = 0.
                      SCREEN-INPUT = 0.
                  endcase.
***             Hide all Purchase relevant Fields
                else.
                  SCREEN-INVISIBLE = 1.
                  SCREEN-REQUIRED = 0.
                  SCREEN-INPUT = 0.
                endif.
              endif.
***           Special Handling for Purchased Flag
              if SCREEN-GROUP2 eq 'FPU' and
                 ME->R_PR_MC_TOOL->IS_DUMMY( ) eq ABAP_FALSE.
                SCREEN-INPUT = 0.
              endif.

            endif.
            modify screen.

***         Set Cursor
            if SCREEN-NAME eq ME->F_CURSOR.
              set cursor field ME->F_CURSOR.
            endif.
          endloop.
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_MC_TOOL_VIS type ZVCXI_XCSP_S_MC_TOOL_VIS.


    check ME->R_PR_MC_TOOL is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_MC_TOOL_VIS.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_MC_TOOL_VIS-MATNR ne LS_MC_TOOL_VIS-MATNR.
      ME->R_PR_MC_TOOL->SET_MATNR( IF_MATNR = LS_MC_TOOL_VIS-MATNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Vendor
    if ME->S_MC_TOOL_VIS-LIFNR ne LS_MC_TOOL_VIS-LIFNR.
      ME->R_PR_MC_TOOL->SET_LIFNR( IF_LIFNR = LS_MC_TOOL_VIS-LIFNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Purchase Flag
    if ME->S_MC_TOOL_VIS-PURCH ne LS_MC_TOOL_VIS-PURCH.
      ME->R_PR_MC_TOOL->SET_PURCH( IF_PURCH = LS_MC_TOOL_VIS-PURCH
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Text
    if ME->S_MC_TOOL_VIS-TEXT ne LS_MC_TOOL_VIS-TEXT.
      ME->R_PR_MC_TOOL->SET_TEXT( IF_TEXT  = LS_MC_TOOL_VIS-TEXT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Price and Price Per
    if ME->S_MC_TOOL_VIS-PRICE ne LS_MC_TOOL_VIS-PRICE.
      ME->R_PR_MC_TOOL->SET_PRICE( IS_PRICE = LS_MC_TOOL_VIS-S_PRICE
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_MC_TOOL_VIS-PRICP ne LS_MC_TOOL_VIS-PRICP.
      ME->R_PR_MC_TOOL->SET_PRICP( IS_PRICP = LS_MC_TOOL_VIS-S_PRICP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Average Consumption and Consumption per
    if ME->S_MC_TOOL_VIS-AVGCO ne LS_MC_TOOL_VIS-AVGCO.
      ME->R_PR_MC_TOOL->SET_AVGCO( IS_AVGCO = LS_MC_TOOL_VIS-S_AVGCO
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_MC_TOOL_VIS-AVGCP ne LS_MC_TOOL_VIS-AVGCP.
      ME->R_PR_MC_TOOL->SET_AVGCP( IS_AVGCP = LS_MC_TOOL_VIS-S_AVGCP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MC_TOOL.

  endmethod.
  method INIT_VIS.

    free: ME->S_MC_TOOL_VIS.

*** Get All Material Consumption Data
    ME->S_MC_TOOL_VIS-MATNR       = ME->R_PR_MC_TOOL->GET_MATNR( ).
    ME->S_MC_TOOL_VIS-MATNR_DESCR = ME->R_PR_MC_TOOL->GET_MATNR_DESCR( ).

    ME->S_MC_TOOL_VIS-S_CONSU     = ME->R_PR_MC_TOOL->GET_CONSU( ).

    ME->S_MC_TOOL_VIS-TEXT        = ME->R_PR_MC_TOOL->GET_TEXT( ).

    ME->S_MC_TOOL_VIS-LIFNR       = ME->R_PR_MC_TOOL->GET_LIFNR( ).
    ME->S_MC_TOOL_VIS-LIFNR_DESCR = ME->R_PR_MC_TOOL->GET_LIFNR_DESCR( ).
    ME->S_MC_TOOL_VIS-S_PRICE     = ME->R_PR_MC_TOOL->GET_PRICE( ).
    ME->S_MC_TOOL_VIS-S_PRICP     = ME->R_PR_MC_TOOL->GET_PRICP( ).
    ME->S_MC_TOOL_VIS-PURCH       = ME->R_PR_MC_TOOL->GET_PURCH( ).

*** Get Average Consumption and Consumption per
    ME->S_MC_TOOL_VIS-S_AVGCO     = ME->R_PR_MC_TOOL->GET_AVGCO( ).
    ME->S_MC_TOOL_VIS-S_AVGCP     = ME->R_PR_MC_TOOL->GET_AVGCP( ).

  endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
