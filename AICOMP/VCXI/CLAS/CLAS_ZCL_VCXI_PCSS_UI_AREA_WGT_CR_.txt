
class ZCL_VCXI_PCSS_UI_AREA_WGT_CR definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_AREA_WGT_CR_VIS type ZVCXI_PCSS_S_AREA_WGT_CR_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_AREA_WGT_CR type ref to ZCL_VCXI_PCSS_PR_AREA_WGT_CR .
  data F_CURSOR type SCRFNAME .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_UI_AREA_WGT_CR definition
class ZCL_VCXI_PCSS_UI_AREA_WGT_CR implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_PCSS_UI_AREA_WGT_CR_BIND'
    exporting
      IR_UI_AREA_WGT_CR = ME
    importing
      ES_DYNP           = ME->S_DYNP.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_AREA_WGT_CR.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE .
            move 0 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

  ME->INIT_VIS( ).

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_AREA_WGT_CR.

endmethod.
method INIT_VIS.

  data:  LS_WWETO    type ZVCXI_P0SS_S_WWETO,
         LS_WWETR    type ZVCXI_PCSS_S_WWETR,
         LS_WDRYO    type ZVCXI_P0SS_S_WDRYO,
         LS_WDRYR    type ZVCXI_PCSS_S_WDRYR,
         LS_AREAR    type ZVCXI_PCSS_S_AREAR,
         LS_AREAO    type ZVCXI_P0SS_S_AREAO.

  free: ME->S_AREA_WGT_CR_VIS.

***--------------------------------------------------------------------------------------
*** Get Wet Weight per Order
  move ME->R_PR_AREA_WGT_CR->GET_WWETO( )   to LS_WWETO.
  move-corresponding LS_WWETO               to ME->S_AREA_WGT_CR_VIS.

*** Get Wet Weight per Reel
  move ME->R_PR_AREA_WGT_CR->GET_WWETR( )   to LS_WWETR.
  move-corresponding LS_WWETR               to ME->S_AREA_WGT_CR_VIS.

*** Get Dry Weight per Order
  move ME->R_PR_AREA_WGT_CR->GET_WDRYO( )   to LS_WDRYO.
  move-corresponding LS_WDRYO               to ME->S_AREA_WGT_CR_VIS.

*** Get Dry Weight per Reel
  move ME->R_PR_AREA_WGT_CR->GET_WDRYR( )   to LS_WDRYR.
  move-corresponding LS_WDRYR               to ME->S_AREA_WGT_CR_VIS.

*** Get Area per Reel
  move ME->R_PR_AREA_WGT_CR->GET_AREAR( )   to LS_AREAR.
  move-corresponding LS_AREAR               to ME->S_AREA_WGT_CR_VIS.

*** Get Area per Order
  move ME->R_PR_AREA_WGT_CR->GET_AREAO( )   to LS_AREAO.
  move-corresponding LS_AREAO               to ME->S_AREA_WGT_CR_VIS.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
