
class ZCL_VCXI_XCSU_CUST_PACKMAT definition
  public
  inheriting from ZCL_VCXI_XCS_CUST_MATNR
  create public .

public section.

  data S_PACKMAT_DIM type ZVCXI_XCSU_S_PACKMAT_DIM read-only .

  class-methods GET_INSTANCE_XCSU_PACKMAT
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS
    returning
      value(RR_INSTANCE) type ref to ZCL_VCXI_XCSU_CUST_PACKMAT
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS
    raising
      /VCXI/CX_CKX .
protected section.
private section.
endclass. "ZCL_VCXI_XCSU_CUST_PACKMAT definition
class ZCL_VCXI_XCSU_CUST_PACKMAT implementation.
method CONSTRUCTOR.

  data:  LS_MARA type MARA.

  try.
      SUPER->CONSTRUCTOR( IF_MATNR = IF_MATNR
                          IF_WERKS = IF_WERKS
                          IF_DATE  = IF_DATE ).

***   Get Dimensions of Packaging Material
      call function 'MARA_SINGLE_READ'
        exporting
          MATNR             = IF_MATNR
        importing
          WMARA             = LS_MARA
        exceptions
          LOCK_ON_MATERIAL  = 1
          LOCK_SYSTEM_ERROR = 2
          WRONG_CALL        = 3
          NOT_FOUND         = 4
          others            = 5.

      check SY-SUBRC = 0.
      move-corresponding LS_MARA to ME->S_PACKMAT_DIM.

    cleanup.
      ME->DO_FREE( ).
  endtry.

endmethod.
method GET_INSTANCE_XCSU_PACKMAT.

  data:  LS_INSTANCE type YS_INSTANCE.

  read table ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE
             into LS_INSTANCE
             with key MATNR = IF_MATNR
                      WERKS = IF_WERKS
                      DATE  = IF_DATE.

  if SY-SUBRC eq 0.
    try.
        move LS_INSTANCE-R_INSTANCE ?to RR_INSTANCE.
      catch CX_SY_MOVE_CAST_ERROR.
        delete ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE where R_INSTANCE eq LS_INSTANCE-R_INSTANCE.
        clear RR_INSTANCE.
    endtry.
  endif.

  if RR_INSTANCE is initial.
    try.
        create object RR_INSTANCE
          exporting
            IF_MATNR = IF_MATNR
            IF_WERKS = IF_WERKS
            IF_DATE  = IF_DATE.
      cleanup.
        clear RR_INSTANCE.
    endtry.
  endif.

endmethod.
