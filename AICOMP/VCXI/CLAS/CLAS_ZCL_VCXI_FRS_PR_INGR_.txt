
class ZCL_VCXI_FRS_PR_INGR definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_F0S_COPY .

  constants C_IPRVT_INGR type /VCXI/VKSC_IPRVT value 'ZVCXI_FRS_INGR' ##NO_TEXT.
  constants C_PARID_INDEN type /VCXI/VKS_PARID value 'ZVCXI_FR_INDEN' ##NO_TEXT.
  constants C_PARID_INRAT type /VCXI/VKS_PARID value 'ZVCXI_FR_INRAT' ##NO_TEXT.
  data R_CUST_INGR type ref to ZCL_VCXI_FRS_CUST_INGR read-only .

  methods GET_INDEN
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !ES_INDEN type ZVCXI_FRS_S_INDEN
    raising
      /VCXI/CX_CKX .
  methods GET_INRAT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !ES_INRAT type ZVCXI_FRS_S_INRAT
    raising
      /VCXI/CX_CKX .
  methods GET_MATNR
    exporting
      !EF_MATNR type MATNR
      !EF_MATNR_DESCR type /VCXI/CKX_DESCR
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    exporting
      !EF_WERKS type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods SET_INRAT
    importing
      !IS_INRAT type ZVCXI_FRS_S_INRAT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_MATNR
    importing
      !IF_MATNR type MATNR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_DESCR
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_CUST_MATNR type /VCXI/VKSC_IEVNT value 'INIT_CUST_MATNR' ##NO_TEXT.
  constants C_IEVNT_O_INDEN_CHANGED type /VCXI/VKSC_IEVNT value 'INDEN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_INRAT_CHANGED type /VCXI/VKSC_IEVNT value 'INRAT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_MATNR_CHANGED type /VCXI/VKSC_IEVNT value 'MATNR_CHANGED' ##NO_TEXT.

  methods CHECK_INDEN
    returning
      value(RF_RESULT) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_INRAT
    returning
      value(RF_RESULT) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_MATNR
    returning
      value(RF_RESULT) type I
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_CUST_MATNR
    raising
      /VCXI/CX_CKX .
  methods SET_INDEN
    importing
      !IS_INDEN type ZVCXI_FRS_S_INDEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FRS_PR_INGR definition
class ZCL_VCXI_FRS_PR_INGR implementation.
  method CHECK_INDEN.

*** 0 Ingredient Density is maintained.
*** 1 Ingredient Density is not maintained.

    data: LS_INDEN          type        ZVCXI_FRS_S_INDEN.

***----------------------------------------------------------------------------
*** Get Ingredient Density
    ME->GET_INDEN( importing ES_INDEN = LS_INDEN ).

    if LS_INDEN-INDEN is initial.
      move 1 to RF_RESULT.
    else.
      move 0 to RF_RESULT.
    endif.

  endmethod.
  method CHECK_INRAT.

*** 0 Ingredient Ratio is maintained.
*** 1 Ingredient Ratio is not maintained.
*** 2 Ingredient Ratio above 100% is not allowed.

    data: LS_INRAT           type        ZVCXI_FRS_S_INRAT.

    ME->GET_INRAT( importing ES_INRAT = LS_INRAT ).

    if LS_INRAT-INRAT eq 0.
      move 1 to RF_RESULT.
    elseif LS_INRAT-INRAT gt 100.
      move 2 to RF_RESULT.
    else.
      move 0 to RF_RESULT.
    endif.

  endmethod.
  method CHECK_MATNR.

*** 0 Material is maintained.
*** 1 Material is not maintained.
*** 2 Material Instance was not created.
*** 3 Material Number is not valid.
*** 4 Material Number is not valid in Plant.

    data:  LF_MATNR type MATNR.

    ME->GET_MATNR( importing EF_MATNR = LF_MATNR ).

*** Start positive
    move 0 to RF_RESULT.

*** Check Material Number is maintained
    if LF_MATNR is initial.
      move 1 to RF_RESULT.
      return.
    endif.

*** Check Material Instance was created
    if ME->R_CUST_INGR is not bound.
      move 2 to RF_RESULT.
      return.
    endif.

*** Check Material Number is valid
    if ME->R_CUST_INGR->F_CHECK_MATNR ne ABAP_TRUE.
      move 3 to RF_RESULT.
      return.
    endif.

*** Check Material Number is valid in Plant
    if ME->R_CUST_INGR->F_CHECK_MAT_MARC ne ABAP_TRUE.
      move 4 to RF_RESULT.
      return.
    endif.

  endmethod.
  method GET_DESCR.

    data: LF_MATNR type MATNR,
          LF_DESCR type /VCXI/CKX_DESCR.

*** Get Material and its Description
    ME->GET_MATNR( importing EF_MATNR       = LF_MATNR
                             EF_MATNR_DESCR = LF_DESCR ).

    if LF_MATNR is not initial.
***   Convert Material Number to Output
      call function 'CONVERSION_EXIT_MATN1_OUTPUT'
        exporting
          INPUT  = LF_MATNR
        importing
          OUTPUT = LF_MATNR.

***   Combine
      concatenate LF_MATNR '-' LF_DESCR into RF_DESCR separated by SPACE.
    else.
      RF_DESCR = SUPER->GET_DESCR( ).
    endif.

  endmethod.
  method GET_INDEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_INDEN ).
    move LS_PARAM-ATFLV to ES_INDEN-INDEN.
    move LS_PARAM-UNIT  to ES_INDEN-INDEN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_INRAT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_INRAT ).
    move LS_PARAM-ATFLV to ES_INRAT-INRAT.
    move LS_PARAM-UNIT  to ES_INRAT-INRAT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_MATNR.

    data: LS_LEOKY type /VCXI/VKSR_S_LEOKY,
          LS_MAKT  type MAKT.


***------------------------------------------------------------------
*** Get Material
    LS_LEOKY = ME->R_GATE->GET_LEOKY( ).

    move LS_LEOKY-LEOKY to EF_MATNR.
    move LS_LEOKY-SETBY to EF_SETBY.

***------------------------------------------------------------------
*** Get Description
    if EF_MATNR_DESCR is requested and
       EF_MATNR       is not initial.
      call function 'MAKT_SINGLE_READ'
        exporting
          MATNR      = EF_MATNR
          SPRAS      = SY-LANGU
        importing
          WMAKT      = LS_MAKT
        exceptions
          WRONG_CALL = 1
          NOT_FOUND  = 2
          others     = 3.

      if SY-SUBRC ne 0.
        clear EF_MATNR_DESCR.
      else.
        move LS_MAKT-MAKTX to EF_MATNR_DESCR.
      endif.
    endif.

  endmethod.
  method GET_STATUS.

***--------------------------------------------------------------------------------------
*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check Material
    if ME->CHECK_MATNR( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

***--------------------------------------------------------------------------------------
*** Check Sum of Ingredient Ratio
    if ME->CHECK_INRAT( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

***--------------------------------------------------------------------------------------
*** Check Ingredient Density
    if ME->CHECK_INDEN( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

  endmethod.
  method GET_STATUS_MSG.

    data:  LF_WERKS type WERKS_D.

***--------------------------------------------------------------------------------------
*** Super Status Messages
    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Material
    case ME->CHECK_MATNR( ).
      when 0.
***     Material is maintained and valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '401' ).
      when 1.
***     Material Number is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '402' ).
      when 2.
***     Material Instance was not created.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '403' ).
      when 3.
***     Material Number is not valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '404' ).
      when 4.
***     Material Number is not valid in Plant.
        ME->GET_WERKS( importing EF_WERKS = LF_WERKS ).
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '405'
                                 IF_MSGV1 = LF_WERKS ).
    endcase.

***--------------------------------------------------------------------------------------
*** Check Ingredient Ratio
    case ME->CHECK_INRAT( ).
      when 0.
***     Ingredient Ratio is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '406' ).
      when 1.
***     Ingredient Ratio is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '407' ).
      when 2.
***     Ingredient Ratio above 100% is not allowed.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '408' ).
    endcase.

***--------------------------------------------------------------------------------------
*** Check Ingredient Density
    case ME->CHECK_INDEN( ).
      when 0.
***     Ingredient Density is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '409' ).
      when 1.
***     Ingredient Density is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '410' ).
    endcase.

  endmethod.
  method GET_WERKS.

    data: LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

    LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

    EF_WERKS =  LR_APPDATA->F_WERKS.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_INIT_CUST_MATNR.
        ME->HANDLE_INIT_CUST_MATNR( ).

    endcase.

  endmethod.
  method HANDLE_INIT_CUST_MATNR.

    data: LF_MATNR type MATNR,
          LF_WERKS type WERKS_D.

***--------------------------------------------------------------------------------------
    ME->GET_MATNR( importing EF_MATNR = LF_MATNR ).
    ME->GET_WERKS( importing EF_WERKS = LF_WERKS ).

    if ME->R_CUST_INGR          is bound    and
       ME->R_CUST_INGR->F_MATNR eq LF_MATNR and
       ME->R_CUST_INGR->F_WERKS eq LF_WERKS.
***   Everything was loaded already...
      return.
    endif.

***--------------------------------------------------------------------------------------
    clear: ME->R_CUST_INGR.

*** Load the Customizing
    ME->R_CUST_INGR = ZCL_VCXI_FRS_CUST_INGR=>GET_INSTANCE_INGR( IF_MATNR = LF_MATNR
                                                                 IF_WERKS = LF_WERKS
                                                                 IF_DATE  = SY-DATUM ).

***--------------------------------------------------------------------------------------
*** Set Density
    ME->SET_INDEN( IS_INDEN = ME->R_CUST_INGR->S_INDEN ).

  endmethod.
  method SET_INDEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_INDEN ).

    move IS_INDEN-INDEN     to LS_PARAM-ATFLV.
    move IS_INDEN-INDEN_UOM to LS_PARAM-UNIT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_INDEN_CHANGED ).
    endif.

  endmethod.
  method SET_INRAT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_INRAT ).

    move IS_INRAT-INRAT     to LS_PARAM-ATFLV.
    move IS_INRAT-INRAT_UOM to LS_PARAM-UNIT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
*** Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_INRAT_CHANGED ).
    endif.

  endmethod.
  method SET_MATNR.

    data:  LF_CHANGED  type ABAP_BOOL.
    data:  LS_LEOKY    type /VCXI/VKSR_S_LEOKY.

    move IF_MATNR to LS_LEOKY-LEOKY.
    move IF_SETBY to LS_LEOKY-SETBY.

    LF_CHANGED = ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

    if LF_CHANGED eq ABAP_TRUE.
*** Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MATNR_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_F0S_COPY~COPY_FROM_GATE.

    data: LF_MATNR     type        MATNR.
    data: LS_INRAT     type        ZVCXI_FRS_S_INRAT.
    data: LR_PR_INGR   type ref to ZCL_VCXI_FRS_PR_INGR.


    check IR_GATE          is bound and
          IR_GATE->R_CLSPR is bound.

***--------------------------------------------------------------------------------------
*** Cast to own class-type
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_INGR.
      catch CX_SY_MOVE_CAST_ERROR.
        return.
    endtry.

*** Copy Material
    LR_PR_INGR->GET_MATNR( importing EF_MATNR = LF_MATNR ).
    ME->SET_MATNR( IF_MATNR = LF_MATNR ).

*** Copy Ingredient Ratio
    LR_PR_INGR->GET_INRAT( importing ES_INRAT = LS_INRAT ).
    ME->SET_INRAT( IS_INRAT = LS_INRAT ).

  endmethod.
