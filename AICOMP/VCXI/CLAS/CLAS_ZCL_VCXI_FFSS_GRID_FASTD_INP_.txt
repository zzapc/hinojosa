
class ZCL_VCXI_FFSS_GRID_FASTD_INP definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  types:
    begin of YS_FISTY,
        FISTY       type ZVCXI_FFS_FISTY,
        FISTY_DESCR type /VCXI/CKX_DESCR,
      end of YS_FISTY .
  types:
    YT_FISTY type standard table of YS_FISTY .

  data F_SFDAT type ZVCXI_F0SS_SFDAT .
  data R_GATE_OUT type ref to /VCXI/CL_VKSR_GATE .
  data R_GATE_FFG type ref to /VCXI/CL_VKSR_GATE .
  data T_FASTD_INP type ZVCXI_FFSS_TT_FASTD_INP .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_FFSS_S_FASTD_INP_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
      !IR_BL_FASTD type ref to ZCL_VCXI_FFSS_BL_FASTD
    raising
      /VCXI/CX_CKX .
protected section.

  data R_BL_FASTD type ref to ZCL_VCXI_FFSS_BL_FASTD .

  methods CHANGE_STYLE_BY_EXTR
    importing
      !IR_PR_EXTR type ref to ZCL_VCXI_FFSS_PR_EXTR
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_BY_MS_EMAT
    importing
      !IR_PR_MS_EMAT type ref to ZCL_VCXI_FFSS_PR_MS_EMAT
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_BY_MS_FPROC
    importing
      !IR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_FASTD_INP
    importing
      !IS_FASTD_INP type ZVCXI_FFSS_S_FASTD_INP
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_FASTD_INP_VIS
    importing
      !IS_FASTD_INP type ZVCXI_FFSS_S_FASTD_INP
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods GET_FASTD_INP_VIS_BY_CSTEP
    importing
      !IS_FASTD_CSTEP type ZVCXI_FFSS_S_FASTD_CSTEP
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods GET_FASTD_INP_VIS_BY_EXTR
    importing
      !IR_GATE_INP type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods GET_FASTD_INP_VIS_BY_MS_EMAT
    importing
      !IR_GATE_INP type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods GET_FASTD_INP_VIS_BY_MS_FPROC
    importing
      !IR_GATE_INP type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_BUTTON_CLICK
    for event BUTTON_CLICK of CL_GUI_ALV_GRID
    importing
      !ES_COL_ID
      !ES_ROW_NO .
  methods HANDLE_BUTTON_FTICO
    importing
      !IS_FASTD_INP type ZVCXI_FFSS_S_FASTD_INP
    raising
      /VCXI/CX_CKX .
  methods HANDLE_F4
    for event ONF4 of CL_GUI_ALV_GRID
    importing
      !E_FIELDNAME
      !E_FIELDVALUE
      !ES_ROW_NO
      !ER_EVENT_DATA
      !ET_BAD_CELLS
      !E_DISPLAY .
  methods HANDLE_HOTSPOT_CLICK
    for event HOTSPOT_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW_ID
      !E_COLUMN_ID
      !ES_ROW_NO .
  methods SET_FASTD_INP_VIS
    importing
      !IS_DATA type ANY
      !IT_GATE_INP type /VCXI/VKSR_TT_GATE
      !IT_FASTD_CSTEP type ZVCXI_FFSS_TT_FASTD_CSTEP
    raising
      /VCXI/CX_CKX .
  methods SET_FASTD_INP_VIS_BY_CSTEP
    importing
      !IS_FASTD_CSTEP type ZVCXI_FFSS_S_FASTD_CSTEP
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_FASTD_INP_VIS_BY_EXTR
    importing
      !IR_GATE_INP type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_FASTD_INP_VIS_BY_MS_EMAT
    importing
      !IR_GATE_INP type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_FASTD_INP_VIS_BY_MS_FPROC
    importing
      !IR_GATE_INP type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods HANDLE_DOUBLE_CLICK
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_GRID_FASTD_INP definition
class ZCL_VCXI_FFSS_GRID_FASTD_INP implementation.
  method CHANGE_STYLE_BY_EXTR.

***--------------------------------------------------------------------------------------
*** Set Material Description = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Description Overwrite Flag = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MAKTX'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Film Style = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FISTY'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Button Film Structure = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FTICO'
                                IF_STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Internal Film Thickness = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITIN'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set External Film Thickness = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITEX'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).


***--------------------------------------------------------------------------------------
*** Set Purchased Film Width = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PFWID'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
*** Set Film Density = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIDEN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Vendor = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
*** Set Button Price Scale = Disabled
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSICO'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Folding Type = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TFOLD'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CHANGE_STYLE_BY_MS_EMAT.

    data: LF_FOVRR type ZVCXI_XCS_FOVRR.

    check IR_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Set Internal Film Thickness = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITIN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
***   Set Material Description
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Description - Flag Overwrite
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MAKTX'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Assigned Material = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AMAT'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Assigned Material Description = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AMAT_DESCR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Film Style = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FISTY'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Purchased Film Width = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PFWID'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set External Film Thickness = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITEX'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Film Density = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIDEN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Button Film Structure = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FTICO'
                                IF_STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON
                      changing  CT_STYL      = CT_STYL ).

*** Set Vendor = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Button Price Scale = Disabled
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSICO'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Folding Type = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TFOLD'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CHANGE_STYLE_BY_MS_FPROC.

    data: LF_FOVRR type ZVCXI_XCS_FOVRR.


    check IR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Set Internal Film Thickness = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITIN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Dummy Film Procurements
    if IR_PR_MS_FPROC->IS_DUMMY( ) eq ABAP_TRUE.

***   Set Material Description
      IR_PR_MS_FPROC->GET_MAKTX( importing EF_FOVRR = LF_FOVRR ).
      if LF_FOVRR ne ABAP_FALSE.
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
      else.
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
      endif.

***   Set Material Description - Flag Overwrite
      if LF_FOVRR eq ABAP_UNDEFINED.
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MAKTX'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
      else.
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MAKTX'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
      endif.

***   Set Film Style = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FISTY'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Purchased Film Width = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PFWID'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set External Film Thickness = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITEX'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Film Density = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIDEN'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Material Description = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MAKTX'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

***   Set Film Style = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FISTY'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Purchased Film Width = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PFWID'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set External Film Thickness = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITEX'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Film Density = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIDEN'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

*** Set Button Film Structure = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FTICO'
                                IF_STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON
                      changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Procurement Option
    case IR_PR_MS_FPROC->GET_PURCH( ).
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Button Price Scale = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSICO'
                                    IF_STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Button Price Scale = Disabled
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSICO'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***     Set Vendor = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Button Price Scale = Disabled
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSICO'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

***--------------------------------------------------------------------------------------
*** Set Folding Type = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TFOLD'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CHANGE_STYLE_FASTD_INP.

    data: LR_PR_EXTR     type ref to ZCL_VCXI_FFSS_PR_EXTR,
          LR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_PR_MS_EMAT  type ref to ZCL_VCXI_FFSS_PR_MS_EMAT,
          LR_GATE        type ref to /VCXI/CL_VKSR_GATE.

    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Process Inputs
    loop at IS_FASTD_INP-T_GATE_INP into LR_GATE.
***   Try to get Extrusion
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_EXTR.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_EXTR.
      endtry.

***   Try to get Film Procurement
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_FPROC.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MS_FPROC.
      endtry.

***   Try to get Estimation Material
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_EMAT.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MS_EMAT.
      endtry.
    endloop.


***--------------------------------------------------------------------------------------
*** Based on Extrusion
    if LR_PR_EXTR is bound.
      ME->CHANGE_STYLE_BY_EXTR( exporting IR_PR_EXTR = LR_PR_EXTR
                                changing  CT_STYL    = CT_STYL ).
    endif.

*** Based on Film Procurements
    if LR_PR_MS_FPROC is bound.
      ME->CHANGE_STYLE_BY_MS_FPROC( exporting IR_PR_MS_FPROC = LR_PR_MS_FPROC
                                    changing  CT_STYL        = CT_STYL ).
    endif.

*** Based on Estimation Material
    if LR_PR_MS_EMAT is bound.
      ME->CHANGE_STYLE_BY_MS_EMAT(  exporting IR_PR_MS_EMAT = LR_PR_MS_EMAT
                                    changing  CT_STYL       = CT_STYL ).
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Store BL Instance
    move IR_BL_FASTD to ME->R_BL_FASTD.

  endmethod.
  method GET_FASTD_INP_VIS.

    data: LS_FASTD_INP_VIS type ZVCXI_FFSS_S_FASTD_INP_VIS,
          LS_FASTD_CSTEP   type ZVCXI_FFSS_S_FASTD_CSTEP.
    data: LR_GATE_INP type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE     type ref to /VCXI/CL_VKSR_GATE.


***--------------------------------------------------------------------------------------
*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_FASTD_INP_VIS.

*** Use first Input Gate
    read table IS_FASTD_INP-T_GATE_INP into LR_GATE_INP index 1.

*** Lamination Step
    LS_FASTD_INP_VIS-LASTP = IS_FASTD_INP-S_FASTD_LAINP-LASTP.
*** Input Type
    LS_FASTD_INP_VIS-TINPU = IS_FASTD_INP-TINPU.
*** Film Structure icon
    LS_FASTD_INP_VIS-FTICO = ICON_GIS_LAYER_PROPERTIES.

    if LR_GATE_INP is bound.
***   Set Traffic Light
      case LR_GATE_INP->GET_STATUS( ).
        when /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
          move ICON_GREEN_LIGHT    to LS_FASTD_INP_VIS-FSICO.
        when /VCXI/CL_VKSR_SERVICE=>C_ELMST_Y or
             /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
          move ICON_RED_LIGHT      to LS_FASTD_INP_VIS-FSICO.
        when /VCXI/CL_VKSR_SERVICE=>C_ELMST_E.
          move ICON_FAILURE        to LS_FASTD_INP_VIS-FSICO.
      endcase.
    endif.

*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_FASTD_INP_VIS to CS_DATA.


***--------------------------------------------------------------------------------------
*** Process Input
    if LR_GATE_INP is bound.
      case IS_FASTD_INP-TINPU.
        when ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_EXTR.
***       Try to fill VIS as Extrusion
          ME->GET_FASTD_INP_VIS_BY_EXTR( exporting IR_GATE_INP = LR_GATE_INP
                                         changing  CS_DATA     = CS_DATA ).

        when ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_FPROC.
***       Try to fill VIS as Film Procurement
          ME->GET_FASTD_INP_VIS_BY_MS_FPROC( exporting IR_GATE_INP = LR_GATE_INP
                                             changing  CS_DATA     = CS_DATA ).

        when ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_EMAT.
***       Try to fill VIS as Estimation Material
          ME->GET_FASTD_INP_VIS_BY_MS_EMAT( exporting IR_GATE_INP = LR_GATE_INP
                                            changing  CS_DATA     = CS_DATA ).
      endcase.
    endif.


*** Process Conversion Steps
    loop at IS_FASTD_INP-T_FASTD_CSTEP into LS_FASTD_CSTEP.
      ME->GET_FASTD_INP_VIS_BY_CSTEP( exporting IS_FASTD_CSTEP = LS_FASTD_CSTEP
                                      changing  CS_DATA = CS_DATA ).
    endloop.

  endmethod.
  method GET_FASTD_INP_VIS_BY_CSTEP.

    data: LS_FASTD_INP_VIS type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_CSTEP_FOLD  type ref to ZCL_VCXI_FFSS_PR_CSTEP_FOLD,
          LR_PR_CSTEP_PRINT type ref to ZCL_VCXI_FFSS_PR_CSTEP_PRINT.


    check IS_FASTD_CSTEP-R_GATE is bound and
          IS_FASTD_CSTEP-R_GATE->R_CLSPR is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_FASTD_INP_VIS.

***--------------------------------------------------------------------------------------
    try.
        move IS_FASTD_CSTEP-R_GATE->R_CLSPR ?to LR_PR_CSTEP_PRINT.
        if SY-SUBRC eq 0.
          move ABAP_TRUE to LS_FASTD_INP_VIS-FPRIN.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

    try.
        move IS_FASTD_CSTEP-R_GATE->R_CLSPR ?to LR_PR_CSTEP_FOLD.
        if SY-SUBRC eq 0.
          LR_PR_CSTEP_FOLD->GET_TFOLD( importing EF_TFOLD = LS_FASTD_INP_VIS-TFOLD ).
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

*    case type of IS_FASTD_CSTEP-R_GATE->R_CLSPR.
*
****   Printing
*      when type ZCL_VCXI_FFSS_PR_CSTEP_PRINT.
*
*        move ABAP_TRUE to LS_FASTD_INP_VIS-FPRIN.
*
****   Folding
*      when type ZCL_VCXI_FFSS_PR_CSTEP_FOLD into LR_PR_CSTEP_FOLD.
*        LR_PR_CSTEP_FOLD->GET_TFOLD( importing EF_TFOLD = LS_FASTD_INP_VIS-TFOLD ).
*
*    endcase.

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_FASTD_INP_VIS to CS_DATA.


  endmethod.
  method GET_FASTD_INP_VIS_BY_EXTR.

    data: LS_FASTD_INP_VIS type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_EXTR    type ref to ZCL_VCXI_FFSS_PR_EXTR,
          LR_PR_MS_RECI type ref to ZCL_VCXI_FFSS_PR_MS_RECI.


*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_FASTD_INP_VIS.

***--------------------------------------------------------------------------------------
*** Extrusion
    try.
        move IR_GATE_INP->R_CLSPR ?to LR_PR_EXTR.
      catch CX_SY_MOVE_CAST_ERROR.
***     Leave as it's not an Extrusion
        exit.
    endtry.
    check LR_PR_EXTR is bound.

*** Film Type
    LR_PR_EXTR->GET_TFILM( importing EF_TFILM = LS_FASTD_INP_VIS-TFILM ).

*** Film Style
    LR_PR_EXTR->GET_FISTY( importing EF_FISTY = LS_FASTD_INP_VIS-FISTY ).

*** Get Film Width (Outbound)
    LR_PR_EXTR->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIWID( importing ES_FIWID = LS_FASTD_INP_VIS-S_FIWID ).

*** Get Film Thickness (Internal)
    LR_PR_EXTR->GET_FITIN( importing ES_FITIN = LS_FASTD_INP_VIS-S_FITIN ).

*** Get Film Thickness (External)
    LR_PR_EXTR->GET_FITEX( importing ES_FITEX = LS_FASTD_INP_VIS-S_FITEX ).

*** Get Surface Weight
    LR_PR_EXTR->GET_SURWT( importing ES_SURWT = LS_FASTD_INP_VIS-S_SURWT ).
    move LS_FASTD_INP_VIS-S_SURWT-SURWT_UOM to LS_FASTD_INP_VIS-SURWT_UOMC6.

***--------------------------------------------------------------------------------------
*** Recipe
    LR_PR_EXTR->GET_PRVDR_MS_RECI( importing ER_PR_MS_RECI = LR_PR_MS_RECI ).
    if LR_PR_MS_RECI is bound.

***   Get Material Number
      move LR_PR_MS_RECI->GET_MATNR( )        to LS_FASTD_INP_VIS-MATNR.
      move LR_PR_MS_RECI->GET_MATNR_DESCR( )  to LS_FASTD_INP_VIS-MATNR_DESCR.
      move ABAP_UNDEFINED                     to LS_FASTD_INP_VIS-FOVRR_MAKTX.

***   Get Film Density
      LR_PR_MS_RECI->GET_FIDEN( importing ES_FIDEN = LS_FASTD_INP_VIS-S_FIDEN ).
      move LS_FASTD_INP_VIS-S_FIDEN-FIDEN_UOM to LS_FASTD_INP_VIS-FIDEN_UOMC6.
    endif.


***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_FASTD_INP_VIS to CS_DATA.

  endmethod.
  method GET_FASTD_INP_VIS_BY_MS_EMAT.

    data: LS_FASTD_INP_VIS type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_MS_EMAT    type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.


*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_FASTD_INP_VIS.

***--------------------------------------------------------------------------------------
    try.
        move IR_GATE_INP->R_CLSPR ?to LR_PR_MS_EMAT.
      catch CX_SY_MOVE_CAST_ERROR.
***     Leave as it's not an Film Procurement
        exit.
    endtry.
    check LR_PR_MS_EMAT is bound.

*** Material
    LR_PR_MS_EMAT->GET_MATNR( receiving RF_MATNR = LS_FASTD_INP_VIS-MATNR ).

*** Material Description
    LR_PR_MS_EMAT->GET_MATNR_DESCR( receiving RF_DESCR = LS_FASTD_INP_VIS-MATNR_DESCR ).

*** Material Description - Overwrite Flag
    move ABAP_UNDEFINED to LS_FASTD_INP_VIS-FOVRR_MAKTX.

*** Assigned Material
    LR_PR_MS_EMAT->GET_AMAT( receiving RF_AMAT = LS_FASTD_INP_VIS-AMAT ).

*** Assigned Material Material Description
    LR_PR_MS_EMAT->GET_AMAT_DESCR( receiving RF_DESCR = LS_FASTD_INP_VIS-AMAT_DESCR ).

*** Film Type
    LR_PR_MS_EMAT->GET_TFILM( importing EF_TFILM = LS_FASTD_INP_VIS-TFILM ).

*** Film Style
    LR_PR_MS_EMAT->GET_FISTY( importing EF_FISTY = LS_FASTD_INP_VIS-FISTY ).

*** Procurement Film Width
    LR_PR_MS_EMAT->GET_PFWID( importing ES_PFWID = LS_FASTD_INP_VIS-S_PFWID ).

*** Film Density
    LR_PR_MS_EMAT->GET_FIDEN( importing ES_FIDEN = LS_FASTD_INP_VIS-S_FIDEN ).
    move LS_FASTD_INP_VIS-S_FIDEN-FIDEN_UOM to LS_FASTD_INP_VIS-FIDEN_UOMC6.

***--------------------------------------------------------------------------------------
*** Film Width (Inbound)
    LR_PR_MS_EMAT->GET_FIWID( importing ES_FIWID = LS_FASTD_INP_VIS-S_FIWID ).

*** Internal Film Thickness (Inbound)
    LR_PR_MS_EMAT->GET_FITIN( importing ES_FITIN = LS_FASTD_INP_VIS-S_FITIN ).

*** Film Thickness External (Inbound)
    LR_PR_MS_EMAT->GET_FITEX( importing ES_FITEX = LS_FASTD_INP_VIS-S_FITEX ).

*** Surface Weight (Inbound)
    LR_PR_MS_EMAT->GET_SURWT( importing ES_SURWT = LS_FASTD_INP_VIS-S_SURWT ).
    move LS_FASTD_INP_VIS-S_SURWT-SURWT_UOM to LS_FASTD_INP_VIS-SURWT_UOMC6.


***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_FASTD_INP_VIS to CS_DATA.

  endmethod.
  method GET_FASTD_INP_VIS_BY_MS_FPROC.

    data: LS_FASTD_INP_VIS type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_MS_FPROC  type ref to ZCL_VCXI_FFSS_PR_MS_FPROC.


*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_FASTD_INP_VIS.

***--------------------------------------------------------------------------------------
    try.
        move IR_GATE_INP->R_CLSPR ?to LR_PR_MS_FPROC.
      catch CX_SY_MOVE_CAST_ERROR.
***     Leave as it's not an Film Procurement
        exit.
    endtry.
    check LR_PR_MS_FPROC is bound.

*** Material
    LR_PR_MS_FPROC->GET_MATNR( receiving RF_MATNR = LS_FASTD_INP_VIS-MATNR ).

*** Material Description
    LR_PR_MS_FPROC->GET_MATNR_DESCR( receiving RF_DESCR = LS_FASTD_INP_VIS-MATNR_DESCR ).

*** Material Description - Overwrite Flag
    LR_PR_MS_FPROC->GET_MAKTX( importing EF_FOVRR = LS_FASTD_INP_VIS-FOVRR_MAKTX ).

*** Film Type
    LR_PR_MS_FPROC->GET_TFILM( importing EF_TFILM = LS_FASTD_INP_VIS-TFILM ).

*** Film Style
    LR_PR_MS_FPROC->GET_FISTY( importing EF_FISTY = LS_FASTD_INP_VIS-FISTY ).

*** Procurement Film Width
    LR_PR_MS_FPROC->GET_PFWID( importing ES_PFWID = LS_FASTD_INP_VIS-S_PFWID ).

*** Vendor
    LR_PR_MS_FPROC->GET_LIFNR( receiving RF_LIFNR = LS_FASTD_INP_VIS-LIFNR ).

*** Film Density
    LR_PR_MS_FPROC->GET_FIDEN( importing ES_FIDEN = LS_FASTD_INP_VIS-S_FIDEN ).
    move LS_FASTD_INP_VIS-S_FIDEN-FIDEN_UOM to LS_FASTD_INP_VIS-FIDEN_UOMC6.

***--------------------------------------------------------------------------------------
*** Film Width (Inbound)
    LR_PR_MS_FPROC->GET_FIWID( importing ES_FIWID = LS_FASTD_INP_VIS-S_FIWID ).

*** Internal Film Thickness (Inbound)
    LR_PR_MS_FPROC->GET_FITIN( importing ES_FITIN = LS_FASTD_INP_VIS-S_FITIN ).

*** Film Thickness External (Inbound)
    LR_PR_MS_FPROC->GET_FITEX( importing ES_FITEX = LS_FASTD_INP_VIS-S_FITEX ).

*** Surface Weight (Inbound)
    LR_PR_MS_FPROC->GET_SURWT( importing ES_SURWT = LS_FASTD_INP_VIS-S_SURWT ).
    move LS_FASTD_INP_VIS-S_SURWT-SURWT_UOM to LS_FASTD_INP_VIS-SURWT_UOMC6.

*** Set Price Scale Icon based on Procurement Option
    if LR_PR_MS_FPROC->GET_PURCH( ) eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
      move ICON_PRICE to LS_FASTD_INP_VIS-PSICO.
    endif.


***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_FASTD_INP_VIS to CS_DATA.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED      type /VCXI/CKX_LOCKED,
          LF_INUSE       type /VCXI/VKSR_INUSE,
          LF_COLPOS      type I,
          LF_FPROC_AVAIL type ABAP_BOOL,
          LF_EXTR_AVAIL  type ABAP_BOOL,
          LF_EMAT_AVAIL  type ABAP_BOOL,
          LF_FOVRR_MAKTX type ABAP_BOOL.
    data: LS_FASTD_INP          type        ZVCXI_FFSS_S_FASTD_INP.
    data: LR_GATE               type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_FCAT>     type        LVC_S_FCAT.

***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***--------------------------------------------------------------------------------------
*** Check if we have only Extrusion
    loop at T_FASTD_INP into LS_FASTD_INP.
      if LS_FASTD_INP-TINPU eq 'P'.
        LF_FPROC_AVAIL = ABAP_TRUE.

***     Override of Description possible?
        loop at LS_FASTD_INP-T_GATE_INP into LR_GATE.
          if ZCL_VCXI_F0S_BL_MAKTX=>GET_FM( exporting IR_GATE = LR_GATE ) is not initial.
            move ABAP_TRUE to LF_FOVRR_MAKTX.
          endif.
        endloop.
      endif.

      if LS_FASTD_INP-TINPU eq 'E'.
        move ABAP_TRUE to LF_EXTR_AVAIL.
      endif.

    endloop.

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'T_STYL'.
          move ABAP_TRUE  to <S_FCAT>-TECH.
          move 0          to <S_FCAT>-COL_POS.

        when 'FSICO'.
          move ABAP_TRUE       to <S_FCAT>-ICON.
          move ABAP_TRUE       to <S_FCAT>-FIX_COLUMN.
          move ABAP_TRUE       to <S_FCAT>-HOTSPOT.
          move 'Status'(C01)   to <S_FCAT>-REPTEXT.
          move 'Status'(C01)   to <S_FCAT>-SCRTEXT_L.
          move 'Status'(C01)   to <S_FCAT>-SCRTEXT_M.
          move 'Status'(C01)   to <S_FCAT>-SCRTEXT_S.

        when 'FTICO'.
          move ABAP_TRUE  to <S_FCAT>-ICON.
          move ABAP_FALSE to <S_FCAT>-F4AVAILABL.

        when 'FISTX'.
          move ABAP_TRUE  to <S_FCAT>-TECH.

        when 'FISTY'.
          move ABAP_TRUE  to <S_FCAT>-EDIT.
          move ABAP_TRUE  to <S_FCAT>-F4AVAILABL.

        when 'TFOLD'.
          move ABAP_TRUE  to <S_FCAT>-EDIT.
          if LF_EXTR_AVAIL eq ABAP_FALSE.
            move ABAP_TRUE  to <S_FCAT>-TECH.
          endif.

        when 'TINPU'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE and
             ME->F_SFDAT eq ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_STANDARD.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'FITIN' or 'FITEX'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
        when 'FITIN_UOM' or 'FITEX_UOM'.

        when 'FIDEN'.
          move ABAP_TRUE  to <S_FCAT>-EDIT.

        when 'FIDEN_UOM'.
          move ABAP_TRUE  to <S_FCAT>-NO_OUT.

        when 'SURWT'.
        when 'SURWT_UOM'.
          move ABAP_TRUE  to <S_FCAT>-NO_OUT.
        when 'SURWT_UOMC6'.

        when 'PFWID'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.
          if LF_FPROC_AVAIL = ABAP_FALSE.
            move ABAP_TRUE to <S_FCAT>-TECH.
          endif.

        when 'PFWID_UOM'.
          if LF_FPROC_AVAIL = ABAP_FALSE.
            move ABAP_TRUE to <S_FCAT>-TECH.
          endif.

        when 'LIFNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
          if LF_FPROC_AVAIL = ABAP_FALSE.
            move ABAP_TRUE  to <S_FCAT>-TECH.
          endif.

        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'MATNR_DESCR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
            move 40         to <S_FCAT>-DD_OUTLEN.
          endif.

        when 'FOVRR_MAKTX'.
          move ABAP_TRUE to <S_FCAT>-CHECKBOX.
          if LF_LOCKED   eq ABAP_TRUE and
             LF_INUSE    eq ABAP_TRUE .
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
          if LF_FOVRR_MAKTX = ABAP_FALSE.
            move ABAP_TRUE  to <S_FCAT>-TECH.
          endif.

        when 'PSICO'.
          move ABAP_TRUE    to <S_FCAT>-ICON.
          move ABAP_FALSE   to <S_FCAT>-F4AVAILABL.
          if LF_FPROC_AVAIL = ABAP_FALSE.
            move ABAP_TRUE  to <S_FCAT>-TECH.
          endif.

        when 'FPRIN'.
          move ABAP_TRUE to <S_FCAT>-CHECKBOX.
          if LF_LOCKED   eq ABAP_TRUE and
             LF_INUSE    eq ABAP_TRUE and
             ME->F_SFDAT eq ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_STANDARD.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

      endcase.

***--------------------------------------------------------------------------------------
***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'ICON'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LASTP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FPRIN'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TINPU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FOVRR_MAKTX'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'AMAT'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'AMAT_DESCR'.  <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TFILM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FTICO'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FISTY'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TFOLD'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FIWID'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FIWID_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PFWID'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PFWID_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITIN'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITIN_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITEX'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITEX_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOMC6'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FIDEN'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FIDEN_UOMC6'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PSICO'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT    type          LVC_S_LAYO,
          LS_FASTD_INP type          ZVCXI_FFSS_S_FASTD_INP.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

***--------------------------------------------------------------------------------------
    loop at ME->T_FASTD_INP into LS_FASTD_INP.
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_FASTD_INP to <S_DATA>.

***   Get Visualization Structure
      ME->GET_FASTD_INP_VIS( exporting IS_FASTD_INP = LS_FASTD_INP
                             changing  CS_DATA      = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_FASTD_INP( exporting IS_FASTD_INP = LS_FASTD_INP
                                                IS_DATA      = <S_DATA>
                                       changing CT_STYL      = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method HANDLE_BUTTON_CLICK.

    data: LS_FASTD_INP   type        ZVCXI_FFSS_S_FASTD_INP.
    data: LR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_CX_CKX      type ref to /VCXI/CX_CKX,
          LR_GATE        type ref to /VCXI/CL_VKSR_GATE.

    try.
***     Check Column
        case ES_COL_ID-FIELDNAME.

***--------------------------------------------------------------------------------------
***       Price Scale
          when 'PSICO'.
***         Get Row of Button Click
            read table ME->T_FASTD_INP into LS_FASTD_INP index ES_ROW_NO-ROW_ID.
            check SY-SUBRC eq 0.

            read table LS_FASTD_INP-T_GATE_INP into LR_GATE index 1.
            check LR_GATE is bound and
                  LR_GATE->F_FREED ne ABAP_TRUE.
            try.
                move LR_GATE->R_CLSPR ?to LR_PR_MS_FPROC.
              catch CX_SY_MOVE_CAST_ERROR.
                exit.
            endtry.
            check LR_PR_MS_FPROC is bound.

            check LR_PR_MS_FPROC->GET_PURCH( ) eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.

***         Call Price Scale Popup
            ZCL_VCXI_FFSS_POPUP_PSCALE=>START( IR_GATE    = LR_GATE
                                               IR_UIGATE  = ME->R_UIGATE
                                               IF_LOCKED  = ABAP_TRUE ).

***         Request Refresh for ALV
            move ABAP_TRUE to ME->F_REFRESH_REQ.

***--------------------------------------------------------------------------------------
***       Film Structure
          when 'FTICO'.
***         Get Row of Button Click
            read table ME->T_FASTD_INP into LS_FASTD_INP index ES_ROW_NO-ROW_ID.
            check SY-SUBRC eq 0.

***         Call Popup
            ME->HANDLE_BUTTON_FTICO( LS_FASTD_INP ).

***         Request Refresh for ALV
            move ABAP_TRUE to ME->F_REFRESH_REQ.

        endcase.

        if ME->F_REFRESH_REQ eq ABAP_TRUE.
          ME->R_UIGATE->REFRESH_SCREEN( ).
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method HANDLE_BUTTON_FTICO.

    data: LF_LOCKED       type        ABAP_BOOL,
          LF_FISTX_NEW    type        ZVCXI_FFS_FISTX,
          LF_FISTX_OLD    type        ZVCXI_FFS_FISTX.
    data: LR_BL_FISTRUCT  type ref to ZCL_VCXI_FFSS_BL_FISTRUCT,
          LR_PR_EXTR      type ref to ZCL_VCXI_FFSS_PR_EXTR,
          LR_PR_MS_FPROC  type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_PR_MS_EMAT   type ref to ZCL_VCXI_FFSS_PR_MS_EMAT,
          LR_GATE         type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Extrusion
    loop at IS_FASTD_INP-T_GATE_INP into LR_GATE.
      if LR_GATE is bound and
         LR_GATE->F_FREED ne ABAP_TRUE.
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_EXTR.
          catch CX_SY_MOVE_CAST_ERROR.
***       Leave as it's not an Extrusion
            exit.
        endtry.
        check LR_PR_EXTR is bound.

***     Get Film Structure XML
        LR_PR_EXTR->ZIF_VCXI_FFSS_COMM_NEXT~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).

        check LR_BL_FISTRUCT is bound.
***     Start Popup
        ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT ).

      endif.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Film procurement
    loop at IS_FASTD_INP-T_GATE_INP into LR_GATE.
      if LR_GATE is bound and
         LR_GATE->F_FREED ne ABAP_TRUE.
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_MS_FPROC.
          catch CX_SY_MOVE_CAST_ERROR.
***         Leave as it's not a Procurement
            exit.
        endtry.
        check LR_PR_MS_FPROC is bound.

***     Get Film Structure XML
        LR_PR_MS_FPROC->ZIF_VCXI_FFSS_COMM_NEXT~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT
                                                                     EF_FISTX       = LF_FISTX_OLD ).

***     Enable editing in case of dummy material
        clear LF_LOCKED.
        if LR_PR_MS_FPROC->IS_DUMMY( ) eq ABAP_TRUE.
          LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        endif.

        check LR_BL_FISTRUCT is bound.
***     Start Popup
        ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT
                                             IF_LOCKED      = LF_LOCKED ).

***     Get New Film Structure XML
        LR_BL_FISTRUCT->GET_FISTX( importing EF_FISTX = LF_FISTX_NEW ).

***     Update Film Structure XML
        if LF_FISTX_OLD ne LF_FISTX_NEW.
          LR_PR_MS_FPROC->SET_FISTX( IF_FISTX = LF_FISTX_NEW ).
        endif.

      endif.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Estimation Material
    loop at IS_FASTD_INP-T_GATE_INP into LR_GATE.
      if LR_GATE is bound and
         LR_GATE->F_FREED ne ABAP_TRUE.
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_MS_EMAT.
          catch CX_SY_MOVE_CAST_ERROR.
***         Leave as it's not a E-MAT
            exit.
        endtry.
        check LR_PR_MS_EMAT is bound.

***     Get Film Structure XML
        LR_PR_MS_EMAT->ZIF_VCXI_FFSS_COMM_NEXT~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT
                                                                    EF_FISTX       = LF_FISTX_OLD ).

        check LR_BL_FISTRUCT is bound.

***     Start Popup
        ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT
                                             IF_LOCKED      = LF_LOCKED ).


      endif.
      exit.
    endloop.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LF_NOOUT       type        ZVCXI_XCS_NOOUT,
          LF_SETBY_NOOUT type        /VCXI/VKSR_SETBY,
          LF_SETBY_TRWID type        /VCXI/VKSR_SETBY,
          LF_ID          type          /VCXI/CKX_ID,
          LF_TABIX       type        I.
    data: LS_FASTD_INP_GRID type        ZVCXI_FFSS_S_FASTD_INP_GRID,
          LS_TRWID          type        ZVCXI_F0S_S_TRWID.
    data: LT_FASTD_INP   type          ZVCXI_FFSS_TT_FASTD_INP,
          LT_FASTD_LAMI  type          ZVCXI_FFSS_TT_FASTD_LAMI,
          LT_SPVRE_FCOMP type          /VCXI/VKSR_TT_SPVRE.
    data:          LR_CX_CKX          type ref to   /VCXI/CX_CKX.
    field-symbols: <T_DATA>        type standard table,
                   <S_DATA>        type          ANY,
                   <R_GATE_INP>    type ref to   /VCXI/CL_VKSR_GATE,
                   <S_FASTD_CSTEP> type          ZVCXI_FFSS_S_FASTD_CSTEP,
                   <S_FASTD_INP>   type          ZVCXI_FFSS_S_FASTD_INP.


    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
***     Build new Structure
        if LINE_EXISTS( ET_GOOD_CELLS[ FIELDNAME = 'TINPU' ] ) or
           LINE_EXISTS( ET_GOOD_CELLS[ FIELDNAME = 'FPRIN' ] ) or
           LINE_EXISTS( ET_GOOD_CELLS[ FIELDNAME = 'TFOLD' ] ).
***       Get current Structure
          if ME->R_GATE_OUT is bound.
            ME->R_BL_FASTD->GET_FASTD_BY_OUT( exporting IR_GATE_OUT    = ME->R_GATE_OUT
                                              importing ET_FASTD_INP   = LT_FASTD_INP
                                                        ET_FASTD_LAMI  = LT_FASTD_LAMI
                                                        ET_SPVRE_FCOMP = LT_SPVRE_FCOMP
                                                        EF_NOOUT       = LF_NOOUT
                                                        EF_SETBY_NOOUT = LF_SETBY_NOOUT
                                                        ES_TRWID       = LS_TRWID
                                                        EF_SETBY_TRWID = LF_SETBY_TRWID ).
          endif.

***       Adjust Structure
          loop at <T_DATA> assigning <S_DATA>.
            move-corresponding <S_DATA> to LS_FASTD_INP_GRID.

            read table LT_FASTD_INP assigning <S_FASTD_INP> index SY-TABIX.
            check SY-SUBRC eq 0.
***         Change of Input Type
            if LS_FASTD_INP_GRID-TINPU ne <S_FASTD_INP>-TINPU.
              move LS_FASTD_INP_GRID-TINPU to <S_FASTD_INP>-TINPU.
              clear <S_FASTD_INP>-T_GATE_INP.
            endif.

***         Change of Printed Flag
            move ME->R_BL_FASTD->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_CSTEP_PRINT=>C_IPRVT_CSTEP_PRINT ) to LF_ID.
            if LS_FASTD_INP_GRID-FPRIN eq ABAP_TRUE.
              if not LINE_EXISTS( <S_FASTD_INP>-T_FASTD_CSTEP[ ICSTP = LF_ID ] ).
                append initial line to <S_FASTD_INP>-T_FASTD_CSTEP assigning <S_FASTD_CSTEP>.
                <S_FASTD_CSTEP>-ICSTP = LF_ID.
                <S_FASTD_CSTEP>-FSPCO = ABAP_UNDEFINED.
              endif.
            else.
              delete <S_FASTD_INP>-T_FASTD_CSTEP where ICSTP eq LF_ID.
            endif.

***         Change of Folding Type
            move ME->R_BL_FASTD->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_CSTEP_FOLD=>C_IPRVT_CSTEP_FOLD ) to LF_ID.
            if LS_FASTD_INP_GRID-TFOLD is not initial and
               LS_FASTD_INP_GRID-TINPU = 'E'.
              if not LINE_EXISTS( <S_FASTD_INP>-T_FASTD_CSTEP[ ICSTP = LF_ID ] ).
                append initial line to <S_FASTD_INP>-T_FASTD_CSTEP assigning <S_FASTD_CSTEP>.
                <S_FASTD_CSTEP>-ICSTP = LF_ID.
                <S_FASTD_CSTEP>-FSPCO = ABAP_FALSE.
              endif.
            else.
              delete <S_FASTD_INP>-T_FASTD_CSTEP where ICSTP eq LF_ID.
            endif.
          endloop.

***--------------------------------------------------------------------------------------
***       Set the new Structure
          if ME->R_GATE_OUT is bound.
            ME->R_BL_FASTD->SET_FASTD_BY_OUT( IR_GATE_OUT    = ME->R_GATE_OUT
                                              IF_NOOUT       = LF_NOOUT
                                              IF_SETBY_NOOUT = LF_SETBY_NOOUT
                                              IS_TRWID       = LS_TRWID
                                              IF_SETBY_TRWID = LF_SETBY_TRWID
                                              IT_FASTD_INP   = LT_FASTD_INP
                                              IT_FASTD_LAMI  = LT_FASTD_LAMI
                                              IT_SPVRE_FCOMP = LT_SPVRE_FCOMP ).

***         Get new Structure for updating Conversion Steps
            ME->R_BL_FASTD->GET_FASTD_BY_OUT( exporting IR_GATE_OUT  = ME->R_GATE_OUT
                                              importing ET_FASTD_INP = LT_FASTD_INP ).
          endif.
        endif.

****--------------------------------------------------------------------------------------
***     Simple Update
        loop at <T_DATA> assigning <S_DATA>.
          LF_TABIX = SY-TABIX.
          move-corresponding <S_DATA> to LS_FASTD_INP_GRID.

***       Check no change to Input Type
          check not LINE_EXISTS( ET_GOOD_CELLS[ ROW_ID    = SY-TABIX
                                                FIELDNAME = 'TINPU' ] ).

          read table LT_FASTD_INP assigning <S_FASTD_INP> index LF_TABIX.
          if SY-SUBRC eq 0.
***         Set Values that force a new structure
            ME->SET_FASTD_INP_VIS( IS_DATA        = <S_DATA>
                                   IT_GATE_INP    = <S_FASTD_INP>-T_GATE_INP
                                   IT_FASTD_CSTEP = <S_FASTD_INP>-T_FASTD_CSTEP ).
          else.
***         Set Values that don't force a new structure
            ME->SET_FASTD_INP_VIS( IS_DATA        = <S_DATA>
                                   IT_GATE_INP    = LS_FASTD_INP_GRID-T_GATE_INP
                                   IT_FASTD_CSTEP = LS_FASTD_INP_GRID-T_FASTD_CSTEP ).
          endif.
        endloop.

***--------------------------------------------------------------------------------------
***     Process the events
        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method HANDLE_DOUBLE_CLICK.

    data: LS_FASTD_INP type        ZVCXI_FFSS_S_FASTD_INP.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_CX_CKX    type ref to /VCXI/CX_CKX.

    try.

        SUPER->HANDLE_DOUBLE_CLICK( ).

        if E_COLUMN          eq 'MATNR' and
           ME->F_APPL_EVENTS eq ABAP_TRUE.

***       Get Selected Line
          read table ME->T_FASTD_INP into LS_FASTD_INP index ES_ROW_NO-ROW_ID.
          check SY-SUBRC eq 0.
***       Get Gate for Selected Line
          read table LS_FASTD_INP-T_GATE_INP into LR_GATE index 1.
***       Check Gate is bound and Provider has an own UI
          check LR_GATE is bound and
                LR_GATE->F_FREED ne ABAP_TRUE and
                LR_GATE->GET_CLSUI( ) is not initial.
***       Open UI
          ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = LR_GATE ).

***       Expand and select in Tree
          ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = LR_GATE->F_GATKY ).
          ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = LR_GATE->F_GATKY ).

        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

  endmethod.
  method HANDLE_F4.

    data: LS_FASTD_INP  type          ZVCXI_FFSS_S_FASTD_INP,
          LS_RETTAB     type          DDSHRETVAL.
    data: LT_FISTY      type table of YS_FISTY,
          LT_RETTAB     type table of DDSHRETVAL.
    data: LR_PR_MS_EXTR type ref to   ZCL_VCXI_FFSS_PR_EXTR,
          LR_GATE       type ref to   /VCXI/CL_VKSR_GATE,
          LR_CX_CKX     type ref to   /VCXI/CX_CKX.

    field-symbols: <S_RET_VAL>   type          DDSHRETVAL,
                   <T_MODI>      type          LVC_T_MODI,
                   <S_MODI>      type line of  LVC_T_MODI.

    if E_FIELDNAME eq 'FISTY'.

      try.
***       Get Row of Button Click
          read table ME->T_FASTD_INP into LS_FASTD_INP index ES_ROW_NO-ROW_ID.
          check SY-SUBRC eq 0.

          read table LS_FASTD_INP-T_GATE_INP into LR_GATE index 1.
          check LR_GATE is bound.
          try.
              move LR_GATE->R_CLSPR ?to LR_PR_MS_EXTR.
            catch CX_SY_MOVE_CAST_ERROR.
              exit.
          endtry.

          check LR_PR_MS_EXTR is bound.
          LR_PR_MS_EXTR->GET_VALID_FISTY( importing ET_FISTY = LT_FISTY ).

          call function 'F4IF_INT_TABLE_VALUE_REQUEST'
            exporting
              RETFIELD        = 'FISTY'
              VALUE_ORG       = 'S'
            tables
              VALUE_TAB       = LT_FISTY
              RETURN_TAB      = LT_RETTAB
            exceptions
              PARAMETER_ERROR = 1
              NO_VALUES_FOUND = 2
              others          = 3.

          if SY-SUBRC eq 0.
            read table LT_RETTAB index 1 into LS_RETTAB.
***         Set selected data
            if SY-SUBRC eq 0.
              assign ER_EVENT_DATA->M_DATA->* to <T_MODI>.
              append initial line to <T_MODI> assigning <S_MODI>.
              <S_MODI>-ROW_ID    = ES_ROW_NO-ROW_ID.
              <S_MODI>-FIELDNAME = 'FISTY'.
              <S_MODI>-VALUE     = LS_RETTAB-FIELDVAL.
            endif.

          endif.

        catch /VCXI/CX_CKX into LR_CX_CKX.
          LR_CX_CKX->SHOW_MESSAGE( ).
      endtry.

***   Set F4 Event handled
      ER_EVENT_DATA->M_EVENT_HANDLED = ABAP_TRUE.

    endif.

  endmethod.
  method HANDLE_HOTSPOT_CLICK.

    data: LS_FASTD_INP      type          ZVCXI_FFSS_S_FASTD_INP,
          LS_PRVDR_DEF      type          /VCXI/VKSR_S_PRVDR_DEF,
          LS_FASTD_INP_GRID type          ZVCXI_FFSS_S_FASTD_INP_GRID.
    data: LT_MSG       type        /VCXI/CKXM_TT_MSG,
          LT_PRVDR     type        /VCXI/VKSR_TT_GATE,
          LT_GATE      type        /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type        /VCXI/VKSR_TT_PRVDR_DEF.
    data: LR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE,
          LR_CX_CKX  type ref to /VCXI/CX_CKX,
          LR_GATE    type ref to /VCXI/CL_VKSR_GATE.

    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type            ANY,
                   <R_GATE> type ref to     /VCXI/CL_VKSR_GATE.
    try.
***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

***     Read selected entry
        read table <T_DATA> assigning <S_DATA> index E_ROW_ID-INDEX.
        check SY-SUBRC eq 0.

        case E_COLUMN_ID-FIELDNAME.
          when 'FSICO'.
            move-corresponding <S_DATA> to LS_FASTD_INP_GRID.
            loop at LS_FASTD_INP_GRID-T_GATE_INP into LR_GATE.
              check LR_GATE is bound and
                    LR_GATE->F_FREED ne ABAP_TRUE.

***           Get messages of input gate
              LR_MESSAGE = LR_GATE->GET_STATUS_MSG( ).
              append lines of LR_MESSAGE->T_MSG to LT_MSG.

***           Get children
              LT_PRVDR_DEF = LR_GATE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
              loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
                LT_GATE = LR_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT ).
                append lines of LT_GATE to LT_PRVDR.
              endloop.

***           Remove duplicates
              sort LT_PRVDR.
              delete adjacent duplicates from LT_PRVDR.

***           Get messages of children
              loop at LT_PRVDR assigning <R_GATE>.
                LR_MESSAGE = <R_GATE>->GET_STATUS_MSG( ).
                append lines of LR_MESSAGE->T_MSG to LT_MSG.
              endloop.
            endloop.

***         Display Messages
            check LR_MESSAGE is bound.
            LR_MESSAGE->T_MSG = LT_MSG.
            LR_MESSAGE->DISPLAY_MSG( IF_SHOW_INITIAL = ABAP_TRUE ).

        endcase.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method SET_EVENT.

  SUPER->SET_EVENT( ).

*** Register Event Handler
  set handler ME->HANDLE_HOTSPOT_CLICK  for ME->R_GRID.
  set handler ME->HANDLE_BUTTON_CLICK   for ME->R_GRID.
  set handler ME->HANDLE_F4             for ME->R_GRID.

  endmethod.
  method SET_FASTD_INP_VIS.

    data: LS_FASTD_INP_VIS type        ZVCXI_FFSS_S_FASTD_INP_VIS,
          LS_FASTD_CSTEP   type ZVCXI_FFSS_S_FASTD_CSTEP.
    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE.

*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_FASTD_INP_VIS.

***--------------------------------------------------------------------------------------
*** Process Inputs
    read table IT_GATE_INP into LR_GATE index 1.
    check SY-SUBRC eq 0.

    case LS_FASTD_INP_VIS-TINPU.
      when ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_EXTR.
***     Set VIS data to Extrusion
        ME->SET_FASTD_INP_VIS_BY_EXTR( IR_GATE_INP = LR_GATE
                                       IS_DATA     = IS_DATA ).

      when ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_FPROC.
***     Set VIS data to Film Procurement
        ME->SET_FASTD_INP_VIS_BY_MS_FPROC( IR_GATE_INP = LR_GATE
                                           IS_DATA     = IS_DATA ).

      when ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_EMAT.
***     Set VIS data to Estimation Material
        ME->SET_FASTD_INP_VIS_BY_MS_EMAT( IR_GATE_INP = LR_GATE
                                          IS_DATA     = IS_DATA ).
    endcase.

***--------------------------------------------------------------------------------------
*** Process Conversion Steps
    loop at IT_FASTD_CSTEP into LS_FASTD_CSTEP.
***   Set VIS data to Conversion Steps
      ME->SET_FASTD_INP_VIS_BY_CSTEP( exporting IS_FASTD_CSTEP = LS_FASTD_CSTEP
                                                IS_DATA        = IS_DATA ).
    endloop.

  endmethod.
  method SET_FASTD_INP_VIS_BY_CSTEP.

    data: LS_FASTD_INP_VIS_OLD type        ZVCXI_FFSS_S_FASTD_INP_VIS,
          LS_FASTD_INP_VIS_NEW type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_CSTEP_FOLD  type ref to ZCL_VCXI_FFSS_PR_CSTEP_FOLD.


    check IS_FASTD_CSTEP-R_GATE is bound and
          IS_FASTD_CSTEP-R_GATE->R_CLSPR is bound.

***--------------------------------------------------------------------------------------
*** Get old Values
    ME->GET_FASTD_INP_VIS_BY_CSTEP( exporting IS_FASTD_CSTEP = IS_FASTD_CSTEP
                                    changing  CS_DATA        = LS_FASTD_INP_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_FASTD_INP_VIS_NEW.

***--------------------------------------------------------------------------------------
    case type of IS_FASTD_CSTEP-R_GATE->R_CLSPR.
***   Folding
      when type ZCL_VCXI_FFSS_PR_CSTEP_FOLD into LR_PR_CSTEP_FOLD.
***     Folding Type
        if LS_FASTD_INP_VIS_NEW-TFOLD ne LS_FASTD_INP_VIS_OLD-TFOLD.
          LR_PR_CSTEP_FOLD->SET_TFOLD( IF_TFOLD = LS_FASTD_INP_VIS_NEW-TFOLD
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.
    endcase.

  endmethod.
  method SET_FASTD_INP_VIS_BY_EXTR.

    data: LS_FASTD_INP_VIS_OLD type        ZVCXI_FFSS_S_FASTD_INP_VIS,
          LS_FASTD_INP_VIS_NEW type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_EXTR    type ref to ZCL_VCXI_FFSS_PR_EXTR,
          LR_PR_MS_RECI type ref to ZCL_VCXI_FFSS_PR_MS_RECI.

***--------------------------------------------------------------------------------------
*** Get old Values
    ME->GET_FASTD_INP_VIS_BY_EXTR( exporting IR_GATE_INP = IR_GATE_INP
                                   changing  CS_DATA     = LS_FASTD_INP_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_FASTD_INP_VIS_NEW.


***--------------------------------------------------------------------------------------
*** Extrusion
    try.
        move IR_GATE_INP->R_CLSPR ?to LR_PR_EXTR.
      catch CX_SY_MOVE_CAST_ERROR.
***     Leave as it's not an Extrusion
        exit.
    endtry.
    check LR_PR_EXTR is bound.

*** Film Style
    if LS_FASTD_INP_VIS_NEW-FISTY ne LS_FASTD_INP_VIS_OLD-FISTY.
      LR_PR_EXTR->SET_FISTY( IF_FISTY = LS_FASTD_INP_VIS_NEW-FISTY
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Film Thickness (Internal)
    if LS_FASTD_INP_VIS_NEW-S_FITIN ne LS_FASTD_INP_VIS_OLD-S_FITIN.
      LR_PR_EXTR->SET_FITIN( IS_FITIN = LS_FASTD_INP_VIS_NEW-S_FITIN
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Film Thickness (External)
    if LS_FASTD_INP_VIS_NEW-S_FITEX ne LS_FASTD_INP_VIS_OLD-S_FITEX.
      LR_PR_EXTR->SET_FITEX( IS_FITEX = LS_FASTD_INP_VIS_NEW-S_FITEX
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Recipe
    LR_PR_EXTR->GET_PRVDR_MS_RECI( importing ER_PR_MS_RECI = LR_PR_MS_RECI ).
    check LR_PR_MS_RECI is bound.

*** Material Number
    if LS_FASTD_INP_VIS_NEW-MATNR ne LS_FASTD_INP_VIS_OLD-MATNR.
      LR_PR_MS_RECI->SET_MATNR( IF_MATNR = LS_FASTD_INP_VIS_NEW-MATNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_FASTD_INP_VIS_BY_MS_EMAT.

    data: LS_FASTD_INP_VIS_OLD type        ZVCXI_FFSS_S_FASTD_INP_VIS,
          LS_FASTD_INP_VIS_NEW type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_MS_EMAT    type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.

***--------------------------------------------------------------------------------------
*** Get old Values
    ME->GET_FASTD_INP_VIS_BY_MS_EMAT( exporting IR_GATE_INP = IR_GATE_INP
                                      changing  CS_DATA     = LS_FASTD_INP_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_FASTD_INP_VIS_NEW.


***--------------------------------------------------------------------------------------
    try.
        move IR_GATE_INP->R_CLSPR ?to LR_PR_MS_EMAT.
      catch CX_SY_MOVE_CAST_ERROR.
***     Leave as it's not a Film Procurement
        exit.
    endtry.
    check LR_PR_MS_EMAT is bound.

*** Material Number
    if LS_FASTD_INP_VIS_NEW-MATNR ne LS_FASTD_INP_VIS_OLD-MATNR.
      LR_PR_MS_EMAT->SET_MATNR( IF_MATNR = LS_FASTD_INP_VIS_NEW-MATNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_FASTD_INP_VIS_BY_MS_FPROC.

    data: LS_FASTD_INP_VIS_OLD type        ZVCXI_FFSS_S_FASTD_INP_VIS,
          LS_FASTD_INP_VIS_NEW type        ZVCXI_FFSS_S_FASTD_INP_VIS.
    data: LR_PR_MS_FPROC    type ref to ZCL_VCXI_FFSS_PR_MS_FPROC.

***--------------------------------------------------------------------------------------
*** Get old Values
    ME->GET_FASTD_INP_VIS_BY_MS_FPROC( exporting IR_GATE_INP = IR_GATE_INP
                                       changing  CS_DATA     = LS_FASTD_INP_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_FASTD_INP_VIS_NEW.


***--------------------------------------------------------------------------------------
    try.
        move IR_GATE_INP->R_CLSPR ?to LR_PR_MS_FPROC.
      catch CX_SY_MOVE_CAST_ERROR.
***     Leave as it's not a Film Procurement
        exit.
    endtry.
    check LR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Material Number
    if LS_FASTD_INP_VIS_NEW-MATNR ne LS_FASTD_INP_VIS_OLD-MATNR.
      LR_PR_MS_FPROC->SET_MATNR( IF_MATNR = LS_FASTD_INP_VIS_NEW-MATNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Material Description
    if LS_FASTD_INP_VIS_NEW-MATNR_DESCR ne LS_FASTD_INP_VIS_OLD-MATNR_DESCR  or
       LS_FASTD_INP_VIS_NEW-FOVRR_MAKTX ne LS_FASTD_INP_VIS_OLD-FOVRR_MAKTX.
      if LS_FASTD_INP_VIS_NEW-FOVRR_MAKTX ne ABAP_FALSE.
        LR_PR_MS_FPROC->SET_MAKTX( IF_MAKTX = conv MAKTX( LS_FASTD_INP_VIS_NEW-MATNR_DESCR )
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_MS_FPROC->SET_MAKTX( IF_MAKTX = conv MAKTX( LS_FASTD_INP_VIS_NEW-MATNR_DESCR )
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Film Style
    if LS_FASTD_INP_VIS_NEW-FISTY ne LS_FASTD_INP_VIS_OLD-FISTY.
      LR_PR_MS_FPROC->SET_FISTY( IF_FISTY = LS_FASTD_INP_VIS_NEW-FISTY
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Film Density
    if LS_FASTD_INP_VIS_NEW-FIDEN ne LS_FASTD_INP_VIS_OLD-FIDEN.
      LR_PR_MS_FPROC->SET_FIDEN( IS_FIDEN = LS_FASTD_INP_VIS_NEW-S_FIDEN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if LS_FASTD_INP_VIS_NEW-LIFNR ne LS_FASTD_INP_VIS_OLD-LIFNR.
      LR_PR_MS_FPROC->SET_LIFNR( IF_LIFNR = LS_FASTD_INP_VIS_NEW-LIFNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Exterior Thickness
    if LS_FASTD_INP_VIS_NEW-FITEX ne LS_FASTD_INP_VIS_OLD-FITEX.
      LR_PR_MS_FPROC->SET_FITHI( IS_FITHI = LS_FASTD_INP_VIS_NEW-S_FITEX
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Procurement Width
    if LS_FASTD_INP_VIS_NEW-PFWID ne LS_FASTD_INP_VIS_OLD-PFWID.
      LR_PR_MS_FPROC->SET_PFWID( IS_PFWID = LS_FASTD_INP_VIS_NEW-S_PFWID
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
