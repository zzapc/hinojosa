
class ZCL_VCXI_P2SR_BL_PSTEP_CLOS definition
  public
  inheriting from ZCL_VCXI_P2SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .

  constants C_IPSTP_CLOS type /VCXI/VSMC_IPSTP value 'PX_PS_CLOS' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_CLOS
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  constants C_IAATY_JOINT type /VCXI/VSMC_IAATY value 'P0_AA_JOINT' ##NO_TEXT.
  data S_PCDIM_IN type ZVCXI_P0SP_S_PCDIM .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data S_PRODIM type ZVCXI_PXS_S_PRODIM .
  data T_MS_JOINT type ZVCXI_P0SR_TT_MS_JOINT .

  methods INIT_BY_CSTEP_CLOS
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_JOINT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_JOINT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_JOINT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_CLOS
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JGLUE
    importing
      !IR_SPVRE_MC_JGLUE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JSTITCH
    importing
      !IR_SPVRE_MC_JSTITCH type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JTAPE
    importing
      !IR_SPVRE_MC_JTAPE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SR_BL_PSTEP_CLOS definition
class ZCL_VCXI_P2SR_BL_PSTEP_CLOS implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

    data: LS_RTE_SAVAL type        /VCXI/VSMR_S_RTE_SAVAL,
          LS_MS_JOINT  type        ZVCXI_P0SR_S_MS_JOINT.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - P0_AA_JOINT
    try.
        clear LS_RTE_SAVAL.
        loop at ME->T_MS_JOINT into LS_MS_JOINT.
          append value #( SIGN = 'I' OPTION = 'EQ' LOW = LS_MS_JOINT-JOITY ) to LS_RTE_SAVAL-I_AVVAL.
        endloop.
        delete adjacent duplicates from LS_RTE_SAVAL-I_AVVAL comparing LOW.

        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_JOINT
                                     II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).
      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Sheet Length (Inbound)
        when 'P0_LT_DI_SHTLEN'.
          move ME->S_PCDIM_IN-PCLEN     to LF_LDVAL.
          move ME->S_PCDIM_IN-PCLEN_UOM to LF_LDUOM.

***     Sheet Width (Inbound)
        when 'P0_LT_DI_SHTWID'.
          move ME->S_PCDIM_IN-PCWID     to LF_LDVAL.
          move ME->S_PCDIM_IN-PCWID_UOM to LF_LDUOM.

***     Joint Type
        when 'P0_LT_VP_JOINTTYPE'.
          loop at ME->T_MS_JOINT into LS_MS_JOINT.
            append initial line to LI_LVVAL assigning <S_LVVAL>.
            move 'I'                        to <S_LVVAL>-SIGN.
            move 'EQ'                       to <S_LVVAL>-OPTION.
            move LS_MS_JOINT-JOITY          to <S_LVVAL>-LOW.
          endloop.

***     Joint Width
        when 'P0_LT_DP_JOINTWIDTH'.
          loop at ME->T_MS_JOINT into LS_MS_JOINT where JOIWI_UOM is not initial.
            move LS_MS_JOINT-JOIWI     to LF_LDVAL.
            move LS_MS_JOINT-JOIWI_UOM to LF_LDUOM.
          endloop.
          if LF_LDUOM is initial.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Box Length
        when 'P0_LT_DI_BOXLENGTH'.
          if ME->S_PRODIM-PROLE_UOM is not initial.
            move ME->S_PRODIM-PROLE     to LF_LDVAL.
            move ME->S_PRODIM-PROLE_UOM to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Box Width
        when 'P0_LT_DI_BOXWIDTH'.
          if ME->S_PRODIM-PROWI_UOM is not initial.
            move ME->S_PRODIM-PROWI     to LF_LDVAL.
            move ME->S_PRODIM-PROWI_UOM to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Box Depth
        when 'P0_LT_DI_BOXDEPTH'.
          if ME->S_PRODIM-PROHE_UOM is not initial.
            move ME->S_PRODIM-PROHE     to LF_LDVAL.
            move ME->S_PRODIM-PROHE_UOM to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Sum Box length/depth
        when 'P0_LT_DI_BOXLEDESUM'.
          if ME->S_PRODIM-PROLE_UOM is not initial and
             ME->S_PRODIM-PROHE_UOM is not initial.
            ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY(
              exporting IF_CALCV_1     = ME->S_PRODIM-PROLE
                        IF_CALCV_UOM_1 = ME->S_PRODIM-PROLE_UOM
                        IF_CALCV_2     = ME->S_PRODIM-PROHE
                        IF_CALCV_UOM_2 = ME->S_PRODIM-PROHE_UOM
                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                        IF_UOM         = ME->S_PRODIM-PROLE_UOM
              importing EF_CALCV       = LF_LDVAL
                        EF_CALCV_UOM   = LF_LDUOM ).
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Sum Box length/width
        when 'P0_LT_DI_BOXLEWISUM'.
          if ME->S_PRODIM-PROLE_UOM is not initial and
             ME->S_PRODIM-PROWI_UOM is not initial.
            ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY(
              exporting IF_CALCV_1     = ME->S_PRODIM-PROLE
                        IF_CALCV_UOM_1 = ME->S_PRODIM-PROLE_UOM
                        IF_CALCV_2     = ME->S_PRODIM-PROWI
                        IF_CALCV_UOM_2 = ME->S_PRODIM-PROWI_UOM
                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                        IF_UOM         = ME->S_PRODIM-PROLE_UOM
              importing EF_CALCV       = LF_LDVAL
                        EF_CALCV_UOM   = LF_LDUOM ).
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_JOINT.

    data: LF_WERKS type WERKS_D,
          LF_ARBPL type ARBPL.
    data: LS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT,
          LS_LEOKY    type /VCXI/VKSR_S_LEOKY,
          LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_JOINT type ref to /VCXI/CL_VKSR_SPVRE.


    move IR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_WERKS.
    move IR_ARBPL->F_ARBPL                                  to LF_ARBPL.

***------------------------------------------------------------------------------------------------
    loop at ME->T_MS_JOINT into LS_MS_JOINT
                          where ISVCE is initial.

***------------------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'JOINT'
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_JOINT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_JOINT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_JOINT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Joint Type
      clear LS_LEOKY.
      move LS_MS_JOINT-JOITY                 to LS_LEOKY-LEOKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_LEOKY-SETBY.
      LR_SPVRE_JOINT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***------------------------------------------------------------------------------------------------
***   Set Joint Length
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_JOINT=>C_PARID_JOILE       to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
      move LS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_JOINT->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Joint Width
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_JOINT=>C_PARID_JOIWI       to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_MS_JOINT-JOIWI                           to LS_PARAM-ATFLV.
      move LS_MS_JOINT-JOIWI_UOM                       to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_JOINT->SET_PARAM( IS_PARAM = LS_PARAM ).

    endloop.

  endmethod.
  method ADD_SPVRE_MC_JOINT.

    data: LF_WERKS type WERKS_D,
          LF_ARBPL type ARBPL.
    data: LS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT,
          LS_LEOKY    type /VCXI/VKSR_S_LEOKY,
          LS_AVGCO    type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP    type ZVCXI_XCS_S_AVGCP.
    data: LR_SPVCE          type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_JOINT type ref to /VCXI/CL_VKSR_SPVRE.


    move IR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_WERKS.
    move IR_ARBPL->F_ARBPL                                  to LF_ARBPL.

***------------------------------------------------------------------------------------------------
    loop at ME->T_MS_JOINT into LS_MS_JOINT
                          where ISVCE is not initial.
      clear: LS_AVGCO, LS_AVGCP.

***   Read Average Consumption
      ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_AVGCO( exporting IF_WERKS = LF_WERKS
                                                           IF_ARBPL = LF_ARBPL
                                                           IF_MATNR = LS_MS_JOINT-MATNR
                                                           IF_DATE  = ME->F_DATE
                                                 importing ES_AVGCO = LS_AVGCO
                                                           ES_AVGCP = LS_AVGCP ).

***------------------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_JOINT-ISVCE
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_JOINT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_JOINT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_JOINT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Material Number
      clear LS_LEOKY.
      move LS_MS_JOINT-MATNR                 to LS_LEOKY-LEOKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_LEOKY-SETBY.
      LR_SPVRE_MC_JOINT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).


***------------------------------------------------------------------------------------------------
***   Set Parameter Value
      case LS_MS_JOINT-ISVCE.
        when 'MC_JGLUE'.
          ME->SET_SPVRE_VALUE_MC_JGLUE(   IR_SPVRE_MC_JGLUE   = LR_SPVRE_MC_JOINT
                                          IS_MS_JOINT         = LS_MS_JOINT
                                          IS_AVGCO            = LS_AVGCO
                                          IS_AVGCP            = LS_AVGCP ).

        when 'MC_JSTITCH'.
          ME->SET_SPVRE_VALUE_MC_JSTITCH( IR_SPVRE_MC_JSTITCH = LR_SPVRE_MC_JOINT
                                          IS_MS_JOINT         = LS_MS_JOINT
                                          IS_AVGCO            = LS_AVGCO
                                          IS_AVGCP            = LS_AVGCP ).
        when 'MC_JTAPE'.
          ME->SET_SPVRE_VALUE_MC_JTAPE(   IR_SPVRE_MC_JTAPE   = LR_SPVRE_MC_JOINT
                                          IS_MS_JOINT         = LS_MS_JOINT
                                          IS_AVGCO            = LS_AVGCO
                                          IS_AVGCP            = LS_AVGCP ).
      endcase.
    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_CLOS type ref to ZCL_VCXI_P2SR_BL_PSTEP_CLOS.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_CLOS.

*** PC and Product Dimensions
    if ME->S_PCDIM_IN  eq LR_BL_PSTEP_CLOS->S_PCDIM_IN  and
       ME->S_PCDIM_OUT eq LR_BL_PSTEP_CLOS->S_PCDIM_OUT and
       ME->S_PRODIM    eq LR_BL_PSTEP_CLOS->S_PRODIM.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Joint
    if ME->T_MS_JOINT eq LR_BL_PSTEP_CLOS->T_MS_JOINT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_CLOS type ref to ZCL_VCXI_P2SR_BL_PSTEP_CLOS.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_CLOS.

*** PC and Product Dimensions
    move ME->S_PCDIM_IN    to LR_BL_PSTEP_CLOS->S_PCDIM_IN.
    move ME->S_PCDIM_OUT   to LR_BL_PSTEP_CLOS->S_PCDIM_OUT.
    move ME->S_PRODIM      to LR_BL_PSTEP_CLOS->S_PRODIM.

*** Joint
    move ME->T_MS_JOINT    to LR_BL_PSTEP_CLOS->T_MS_JOINT.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'P0_AT_CLOS'.
        ME->FILL_SPVRE_ADDON_CLOS( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                             IR_ARBPL       = IR_ARBPL
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_CLOS.

    data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCTYP   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCLEN  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCWID  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCHEI  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Joint
    ME->ADD_SPVRE_MC_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                      IR_ARBPL        = IR_ARBPL
                            changing  CT_SPVRE        = CT_SPVRE ).

***------------------------------------------------------------------------------------------------
*** Add Joint
    ME->ADD_SPVRE_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                   IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                   IR_ARBPL        = IR_ARBPL
                         changing  CT_SPVRE        = CT_SPVRE ).


  endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    move 'CONV'     to CF_ID_ARBPL.

*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'MANU'     to CF_ID_ARBPL.
    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_SPVRE_ACTVY.

    data:  LS_PARAM        type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity Unitizing
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_CLOS'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCTYP   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCLEN  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCWID  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCHEI  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Joint
    ME->ADD_SPVRE_MC_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                                      IR_ARBPL        = IR_ARBPL
                            changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_PCDIM_IN'   VALUE = ref #( ME->S_PCDIM_IN  ) ) to RT_DATA.
    append value #( NAME = 'S_PCDIM_OUT'  VALUE = ref #( ME->S_PCDIM_OUT ) ) to RT_DATA.
    append value #( NAME = 'S_PRODIM'     VALUE = ref #( ME->S_PRODIM    ) ) to RT_DATA.
    append value #( NAME = 'T_MS_JOINT'   VALUE = ref #( ME->T_MS_JOINT  ) ) to RT_DATA.

  endmethod.
  method INIT_BY_CSTEP_CLOS.

    data: LF_SHTDI type ZVCXI_P0SS_SHTDI.
    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_CLOS type ref to ZCL_VCXI_P2SS_PR_CSTEP_CLOS,
          LR_BL_FCBPROP    type ref to ZCL_VCXI_P2SS_BL_FCBPROP.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Closing
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P2SS_PR_CSTEP_CLOS.
      LR_PR_CSTEP_CLOS ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_CSTEP_CLOS  is bound.


***--------------------------------------------------------------------------------------
*** Sheet Direction
    move LR_PR_CSTEP_CLOS->GET_SHTDI( ) to LF_SHTDI.
    if LF_SHTDI is not initial.
      move LF_SHTDI                               to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.
      move ZIF_VCXI_PXSR_PCDIR=>C_PCDOP_MANDATORY to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDOP.
    endif.

*** Get Folding Carton Backward Property XML (Outbound)
    LR_BL_FCBPROP = LR_PR_CSTEP_CLOS->ZIF_VCXI_P2SS_COMM_NEXT~GET_FCBPX( ).
    if LR_BL_FCBPROP is bound.
***   Product Dimension
      ME->S_PRODIM = LR_BL_FCBPROP->S_PRODIM.
    endif.

  endmethod.
  method INIT_BY_JOINT.

    data: LF_JOITY type ZVCXI_P0S_JOITY,
          LF_FOVRL type ZVCXI_P0SS_FOVRL,
          LF_FOVRW type ZVCXI_P0SS_FOVRW,
          LF_NOSTI type ZVCXI_P0SS_NOSTI.
    data: LS_TD342 type ZVCXI_P0S_TD342,
          LS_JOILE type ZVCXI_P0S_S_JOILE,
          LS_JOIWI type ZVCXI_P0S_S_JOIWI,
          LS_STITP type ZVCXI_P0SS_S_STITP.
    data: LT_TD342    type ZCL_VCXI_P0SS_CUST_PRSTY=>YT_TD342.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_JOINT type ref to ZCL_VCXI_PXSS_PR_JOINT.
    field-symbols: <S_MS_JOINT> type ZVCXI_P0SR_S_MS_JOINT.


*** Loop at defined Joints
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_JOINT.
      LR_PR_JOINT ?= LR_GATE->R_CLSPR.

      LF_JOITY = LR_PR_JOINT->GET_JOITY( ).
      LS_JOILE = LR_PR_JOINT->GET_JOILE( importing EF_FOVRL = LF_FOVRL ).
      LS_JOIWI = LR_PR_JOINT->GET_JOIWI( importing EF_FOVRW = LF_FOVRW ).
      LS_STITP = LR_PR_JOINT->GET_STITP( ).
      LF_NOSTI = LR_PR_JOINT->GET_NOSTI( ).

      clear: LT_TD342.
      ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_MCONSU( exporting IF_JOITY = LF_JOITY
                                                            IF_DATE  = ME->F_DATE
                                                  importing ET_TD342 = LT_TD342 ).

      if LT_TD342 is not initial.
***     Add Entry for each defined Material Consumption
        loop at LT_TD342 into LS_TD342.
          append initial line to ME->T_MS_JOINT assigning <S_MS_JOINT>.
          move LS_TD342-ISVCE            to <S_MS_JOINT>-ISVCE.
          move LF_JOITY                  to <S_MS_JOINT>-JOITY.
          move LS_TD342-MATNR            to <S_MS_JOINT>-MATNR.
          move ABAP_FALSE                to <S_MS_JOINT>-PURCH.
          if LF_FOVRL ne ABAP_UNDEFINED.
            move-corresponding LS_JOILE    to <S_MS_JOINT>.
          endif.
          if LF_FOVRW ne ABAP_UNDEFINED.
            move-corresponding LS_JOIWI    to <S_MS_JOINT>.
          endif.
          move-corresponding LS_STITP    to <S_MS_JOINT>.
          move LF_NOSTI                  to <S_MS_JOINT>-NOSTI.
        endloop.
      else.
***     Add Dummy Entry if no Material Consumption is needed
        append initial line to ME->T_MS_JOINT assigning <S_MS_JOINT>.
        move LF_JOITY                  to <S_MS_JOINT>-JOITY.
        move ABAP_FALSE                to <S_MS_JOINT>-PURCH.
        if LF_FOVRL ne ABAP_UNDEFINED.
          move-corresponding LS_JOILE    to <S_MS_JOINT>.
        endif.
        if LF_FOVRW ne ABAP_UNDEFINED.
          move-corresponding LS_JOIWI    to <S_MS_JOINT>.
        endif.
        move-corresponding LS_STITP    to <S_MS_JOINT>.
        move LF_NOSTI                  to <S_MS_JOINT>-NOSTI.
      endif.
    endloop.

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


*** Get Inbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_IN( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_IN = value #( LT_PCDIM[ 1 ] optional ).

*** Get Outbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_OUT = value #( LT_PCDIM[ 1 ] optional ).

*** Initialize by CStep Closing
    ME->INIT_BY_CSTEP_CLOS( IT_PRVDR = IT_PRVDR ).

*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

*** Initialize Joint Information
    ME->INIT_BY_JOINT( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method SET_SPVRE_VALUE_MC_JGLUE.

    data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOITY    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOITY                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOILE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Joint Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOIWI    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOIWI                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-JOIWI_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_AVGCO_W  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_AVGCO-AVGCO                              to LS_PARAM-ATFLV.
    move IS_AVGCO-AVGCO_UOM                          to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_AVGCP_A  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_AVGCP-AVGCP                              to LS_PARAM-ATFLV.
    move IS_AVGCP-AVGCP_UOM                          to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_LIFNR    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-LIFNR                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PURCH    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-PURCH                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_TEXT     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-TEXT                            to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PRICE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-PRICE                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-PRICE_CURR                      to LS_PARAM-CURKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PRICP_W  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-PRICP                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-PRICP_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
  method SET_SPVRE_VALUE_MC_JSTITCH.

    data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_JOITY    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOITY                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_JOILE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOILE                             to LS_PARAM-ATFLV.
    move IS_MS_JOINT-JOILE_UOM                         to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_AVGCO_P  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move IS_MS_JOINT-NOSTI                             to LS_PARAM-ATFLV.
    move IS_AVGCP-AVGCP_UOM                            to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_AVGCP_L  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move IS_MS_JOINT-STITP                             to LS_PARAM-ATFLV.
    move IS_MS_JOINT-STITP_UOM                         to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Stitch Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_STILE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move IS_AVGCO-AVGCO                                to LS_PARAM-ATFLV.
    move IS_AVGCO-AVGCO_UOM                            to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_LIFNR    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
    move IS_MS_JOINT-LIFNR                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PURCH    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
    move IS_MS_JOINT-PURCH                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_TEXT     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
    move IS_MS_JOINT-TEXT                              to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PRICE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move IS_MS_JOINT-PRICE                             to LS_PARAM-ATFLV.
    move IS_MS_JOINT-PRICE_CURR                        to LS_PARAM-CURKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PRICP_L  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
    move IS_MS_JOINT-PRICP                             to LS_PARAM-ATFLV.
    move IS_MS_JOINT-PRICP_UOM                         to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.                    "SET_SPVRE_VALUE_MC_JSTITCH
  method SET_SPVRE_VALUE_MC_JTAPE.

    data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_JOITY    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOITY                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_JOILE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_LIFNR    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-LIFNR                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PURCH    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-PURCH                           to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_TEXT     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move IS_MS_JOINT-TEXT                            to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PRICE    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-PRICE                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-PRICE_CURR                      to LS_PARAM-CURKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PRICP_L  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move IS_MS_JOINT-PRICP                           to LS_PARAM-ATFLV.
    move IS_MS_JOINT-PRICP_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.                    "SET_SPVRE_VALUE_MC_JTAPE
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.
  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    data: LS_PCDIM_OUT type  ZVCXI_P0SP_S_PCDIM.

*** Keep Number of Outs of provided Dimensions
    LS_PCDIM_OUT = ME->S_PCDIM_OUT.
    LS_PCDIM_OUT-NOOUT = reduce #( init LF_NOOUT = 0 for LS_PCDIM in CT_PCDIM next LF_NOOUT = LF_NOOUT + LS_PCDIM-NOOUT ).

    CT_PCDIM = value #( ( LS_PCDIM_OUT ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.

    RT_PCDIM = value #( ( ME->S_PCDIM_IN ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
    ME->S_PCDIM_IN  = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_IN
                                      IF_PCDIR = IF_PCDIR ).

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
