
class ZCL_VCXI_FFSP_PR_MFSI definition
  public
  inheriting from ZCL_VCXI_F0SP_PR_MFSI
  create public .

public section.

  interfaces ZIF_VCXI_FFSP_FIDIM .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_FITEX
    importing
      !IS_FITEX type ZVCXI_FFS_S_FITEX
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_RLETA
    importing
      !IS_RLETA type ZVCXI_PXS_S_RLETA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FITIN
    importing
      !IS_FITIN type ZVCXI_FFS_S_FITIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FIWID
    importing
      !IS_FIWID type ZVCXI_F0S_S_FIWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_F0S_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_RELEN
    importing
      !IS_RELEN type ZVCXI_FFS_S_RELEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SURWT
    importing
      !IS_SURWT type ZVCXI_F0S_S_SURWT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods ZIF_VCXI_XCSP_MFSI~DO_FORWARD
    redefinition .
protected section.

  methods CONV_TO_CONSU
    redefinition .
private section.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_FFSP_PR_MFSI definition
class ZCL_VCXI_FFSP_PR_MFSI implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( exporting IR_GATE = IR_GATE ).

*** Set Dimension-Depending Parameter IDs
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method CONV_TO_CONSU.

    data: LF_DIMID_C     type DIMID,
          LF_DIMID_I     type DIMID,
          LF_NOOUT       type ZVCXI_XCS_NOOUT,
          LF_NOOUT_TOTAL type ZVCXI_XCS_NOOUT.
    data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
          LS_RELEN type ZVCXI_FFS_S_RELEN,
          LS_SURWT type ZVCXI_F0S_S_SURWT,
          LS_FIWID type ZVCXI_F0S_S_FIWID,
          LS_AREA  type ZVCXI_XCS_S_CALCV,
          LS_QTY   type ZVCXI_XCSP_S_QTY,
          LS_MQTYO type ZVCXI_XCSP_S_MQTYO.

*** Get Manager if it is missing
    if ME->R_PR_MFMGR is not bound.
      ME->HANDLE_INIT_MFMGR( ).
    endif.

    LS_CONSU = ME->GET_CONSU( ).

    LF_DIMID_C = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = LS_CONSU-CONSU_UOM ).
    LF_DIMID_I = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = IS_MQTYI-MQTYI_UOM ).

    case LF_DIMID_I.
      when LF_DIMID_C.
***     1:1 Forward
        RS_CONSU-CONSU     = IS_MQTYI-MQTYI.
        RS_CONSU-CONSU_UOM = IS_MQTYI-MQTYI_UOM.

      when 'AAAADL'.   "PC
        ME->ZIF_VCXI_FFSP_FIDIM~GET_RELEN( importing ES_RELEN = LS_RELEN ) .
        RS_CONSU-CONSU     = IS_MQTYI-MQTYI * LS_RELEN-RELEN.
        RS_CONSU-CONSU_UOM = LS_RELEN-RELEN_UOM.

      when 'MASS'.     "Weight
        LS_MQTYO = ME->R_PR_MFMGR->CONV_TO_MQTYO( IS_QTY = value #( QTY     = IS_MQTYI-MQTYI
                                                                    QTY_UOM = IS_MQTYI-MQTYI_UOM ) ).
        RS_CONSU-CONSU     = LS_MQTYO-MQTYO.
        RS_CONSU-CONSU_UOM = LS_MQTYO-MQTYO_UOM.

        loop at ME->R_PR_MFMGR->ZIF_VCXI_XCSP_MFMGR~GET_MFO( ) into data(LR_GATE).
          if LR_GATE->R_CLSPR is instance of ZIF_VCXI_FFSP_FIDIM.
            cast ZIF_VCXI_FFSP_FIDIM( LR_GATE->R_CLSPR )->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).
            LF_NOOUT_TOTAL += LF_NOOUT.
          endif.
        endloop.

        if LF_NOOUT_TOTAL is not initial.
          RS_CONSU-CONSU = RS_CONSU-CONSU / LF_NOOUT_TOTAL.
        else.
          clear RS_CONSU-CONSU.
        endif.

    endcase.

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.


    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

*** Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

  endmethod.
  method SET_FITEX.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITEX ).

    move IS_FITEX-FITEX                      to LS_PARAM-ATFLV.
    move IS_FITEX-FITEX_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_FITIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITIN ).

    move IS_FITIN-FITIN                      to LS_PARAM-ATFLV.
    move IS_FITIN-FITIN_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_FIWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FIWID ).

    move IS_FIWID-FIWID                      to LS_PARAM-ATFLV.
    move IS_FIWID-FIWID_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_NOOUT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOOUT ).

    move IF_NOOUT                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOUPS ).

    move IF_NOUPS                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_RELEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RELEN ).

    move IS_RELEN-RELEN                      to LS_PARAM-ATFLV.
    move IS_RELEN-RELEN_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_RLETA.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RLETA ).

    move IS_RLETA-RLETA                      to LS_PARAM-ATFLV.
    move IS_RLETA-RLETA_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_SURWT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_SURWT ).

    move IS_SURWT-SURWT                      to LS_PARAM-ATFLV.
    move IS_SURWT-SURWT_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_FITEX.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITEX ).
    move LS_PARAM-ATFLV to ES_FITEX-FITEX.
    move LS_PARAM-UNIT  to ES_FITEX-FITEX_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_FITIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITIN ).
    move LS_PARAM-ATFLV to ES_FITIN-FITIN.
    move LS_PARAM-UNIT  to ES_FITIN-FITIN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_FIWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FIWID ).
    move LS_PARAM-ATFLV to ES_FIWID-FIWID.
    move LS_PARAM-UNIT  to ES_FIWID-FIWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_NOOUT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOOUT ).
    move LS_PARAM-ATFLV to EF_NOOUT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOUPS ).
    move LS_PARAM-ATFLV to EF_NOUPS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_RELEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RELEN ).
    move LS_PARAM-ATFLV to ES_RELEN-RELEN.
    move LS_PARAM-UNIT  to ES_RELEN-RELEN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_RLETA.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RLETA ).
    RS_RLETA-RLETA     = LS_PARAM-ATFLV.
    RS_RLETA-RLETA_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_SURWT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_SURWT ).
    move LS_PARAM-ATFLV to ES_SURWT-SURWT.
    move LS_PARAM-UNIT  to ES_SURWT-SURWT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_XCSP_MFSI~DO_FORWARD.

    data:  LF_SETBY      type        /VCXI/VKSR_SETBY.
    data:  LS_FIDIM      type        ZVCXI_FFSP_S_FIDIM.
    data:  LR_FIDIM      type ref to ZIF_VCXI_FFSP_FIDIM.


    SUPER->ZIF_VCXI_XCSP_MFSI~DO_FORWARD( IR_MFSO = IR_MFSO ).

***--------------------------------------------------------------------------------------
*** Get Film Dimensions of MFO
    try.
        move IR_MFSO ?to LR_FIDIM.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_FIDIM.
    endtry.

    check LR_FIDIM is bound.

***--------------------------------------------------------------------------------------
*** Film Width
    LR_FIDIM->GET_FIWID( importing ES_FIWID = LS_FIDIM-S_FIWID ).
    ME->SET_FIWID( IS_FIWID = LS_FIDIM-S_FIWID ).

*** Repeat Length (if not set by user)
    ME->ZIF_VCXI_FFSP_FIDIM~GET_RELEN( importing EF_SETBY = LF_SETBY ).
    if LF_SETBY ne /VCXI/CL_VKSR_GATE=>C_SETBY_USER.
      LR_FIDIM->GET_RELEN( importing ES_RELEN = LS_FIDIM-S_RELEN ).
      ME->SET_RELEN( IS_RELEN = LS_FIDIM-S_RELEN ).
    endif.

*** Film Internal Thickness
    LR_FIDIM->GET_FITIN( importing ES_FITIN = LS_FIDIM-S_FITIN ).
    ME->SET_FITIN( IS_FITIN = LS_FIDIM-S_FITIN ).

*** Film External Thickness
    LR_FIDIM->GET_FITEX( importing ES_FITEX = LS_FIDIM-S_FITEX ).
    ME->SET_FITEX( IS_FITEX = LS_FIDIM-S_FITEX ).

*** Surface Weight
    LR_FIDIM->GET_SURWT( importing ES_SURWT = LS_FIDIM-S_SURWT ).
    ME->SET_SURWT( IS_SURWT = LS_FIDIM-S_SURWT ).

*** Roll Target Length
    ME->SET_RLETA( IS_RLETA = LR_FIDIM->GET_RLETA( ) ).

*** No Ups
    LR_FIDIM->GET_NOUPS( importing EF_NOUPS = LS_FIDIM-NOUPS ).
    ME->SET_NOUPS( IF_NOUPS = LS_FIDIM-NOUPS ).

*** No Out (On MFI its always 1)
    ME->SET_NOOUT( IF_NOOUT = 1 ).

  endmethod.
