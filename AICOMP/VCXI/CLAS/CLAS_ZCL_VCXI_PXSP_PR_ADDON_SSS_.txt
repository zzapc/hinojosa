
class ZCL_VCXI_PXSP_PR_ADDON_SSS definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_FASCO type /VCXI/VKS_PARID value 'ZVCXI_PX_FASCO' ##NO_TEXT.
  constants C_PARID_FASLO type /VCXI/VKS_PARID value 'ZVCXI_PX_FASLO' ##NO_TEXT.
  constants C_PARID_FASLI type /VCXI/VKS_PARID value 'ZVCXI_PX_FASLI' ##NO_TEXT.

  methods GET_FASCO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FASCO) type ZVCXI_PXS_FASCO
    raising
      /VCXI/CX_CKX .
  methods GET_FASLI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FASLI) type ZVCXI_PXS_FASLI
    raising
      /VCXI/CX_CKX .
  methods GET_FASLO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FASLO) type ZVCXI_PXS_FASLO
    raising
      /VCXI/CX_CKX .
  methods SET_FASCO
    importing
      !IF_FASCO type ZVCXI_PXS_FASCO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FASLO
    importing
      !IF_FASLO type ZVCXI_PXS_FASLO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FASLI
    importing
      !IF_FASLI type ZVCXI_PXS_FASLI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_PCDIM type /VCXI/VKSC_IEVNT value 'RECALC_PCDIM' ##NO_TEXT.
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED' ##NO_TEXT.
private section.
endclass. "ZCL_VCXI_PXSP_PR_ADDON_SSS definition
class ZCL_VCXI_PXSP_PR_ADDON_SSS implementation.
  method GET_FASCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASCO ).
    move LS_PARAM-ATWRT to RF_FASCO.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_FASLI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASLI ).
    move LS_PARAM-ATWRT to RF_FASLI.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_FASLO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASLO ).
    move LS_PARAM-ATWRT to RF_FASLO.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
***   PC Dimensions
      when C_IEVNT_I_RECALC_PCDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).

    endcase.

  endmethod.
  method SET_FASCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASCO ).

    move IF_FASCO to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method SET_FASLI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASLI ).

    move IF_FASLI to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method SET_FASLO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASLO ).

    move IF_FASLO to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

    data: LT_GATE     type /VCXI/VKSR_TT_GATE.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PCOUT type ref to ZCL_VCXI_P0SP_PR_PCOUT.


***------------------------------------------------------------------
*** Get all PC Dimensions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_PCOUT=>C_IPRVT_P0_PCOUT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).
    check LT_GATE is not initial.

***------------------------------------------------------------------
*** Receive defined Dimensions
    free CT_PCDIM.

    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_PCOUT.
      check LR_PR_PCOUT is bound.

      append LR_PR_PCOUT->GET_PCDIM( ) to CT_PCDIM.
    endloop.

  endmethod.
  method ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE.

    SUPER->ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE( changing CT_FEATURE = CT_FEATURE ).

*** Activity Slit
    /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'activitySlit'     FTVAL = ME->GET_FASLI( ) )
                                      changing  CT_FEATURE = CT_FEATURE ).
*** Activity Slot
    /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'activitySlot'     FTVAL = ME->GET_FASLO( ) )
                                      changing  CT_FEATURE = CT_FEATURE ).
*** Activity Score
    /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'activityScore'    FTVAL = ME->GET_FASCO( ) )
                                      changing  CT_FEATURE = CT_FEATURE ).

  endmethod.
