
class ZCL_VCXI_P0SS_CUST_PRINT definition
  public
  create protected .

public section.

  data F_WERKS type WERKS_D .
  constants C_PRSID_INSIDE type ZVCXI_P0S_PRSID value 'I' ##NO_TEXT.
  constants C_PRSID_OUTSIDE type ZVCXI_P0S_PRSID value 'O' ##NO_TEXT.
  constants C_SUTYP_WAX type ZVCXI_P0S_SUTYP value 'WAX' ##NO_TEXT.
  constants C_SUTYP_NORMAL type ZVCXI_P0S_SUTYP value 'NORM' ##NO_TEXT.

  class-methods CHECK_PRTYP_EXIST
    importing
      !IF_PRTYP type ZVCXI_P0S_PRTYP
    returning
      value(RF_RETURN) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  class-methods CHECK_TMARK_BY_PRTYP
    importing
      !IF_PRTYP type ZVCXI_P0S_PRTYP
      !IF_TMARK type ZVCXI_P0SS_TMARK optional
    returning
      value(RF_RETURN) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  class-methods CLASS_CONSTRUCTOR .
  methods GET_AVGCO
    importing
      !IF_MATNR type MATNR
      !IF_ARBPL type ARBPL
      !IF_SUTYP type ZVCXI_P0S_SUTYP
      !IF_DATE type DATS
    exporting
      !ES_AVGCO type ZVCXI_XCS_S_AVGCO
      !ES_AVGCP type ZVCXI_XCS_S_AVGCP .
  methods GET_COLCO
    importing
      !IF_COLCO type ZVCXI_P0SS_COLCO
      !IF_PRTYP type ZVCXI_P0S_PRTYP
      !IF_DATE type DATS
    exporting
      value(EF_MATNR) type MATNR
      value(EF_VARNI) type ZVCXI_P0S_VARNI
    raising
      /VCXI/CX_CKX .
  class-methods GET_COLCO_DESCR
    importing
      !IF_COLCO type ZVCXI_P0SS_COLCO
      !IF_WERKS type WERKS_D
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_DEFAULT_INK
    importing
      !IF_PTYPE type ZVCXI_P0S_PTYPE
      !IF_PRSID type ZVCXI_P0S_PRSID
      !IF_PRTYP type ZVCXI_P0S_PRTYP
      !IF_NOCOL type ZVCXI_P0S_NOCOL
    exporting
      value(EF_MATNR) type MATNR
      value(EF_DEFTE) type ZVCXI_P0SS_DEFTE
      value(ES_COVRG) type ZVCXI_P0S_S_COVRG
    raising
      /VCXI/CX_CKX .
  class-methods GET_INSTANCE
    importing
      !IF_WERKS type WERKS_D
    returning
      value(RR_INSTANCE) type ref to ZCL_VCXI_P0SS_CUST_PRINT
    raising
      /VCXI/CX_CKX .
  class-methods GET_MARKP_DESCR
    importing
      !IF_MARKP type ZVCXI_P0SS_MARKP
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods GET_PRSID_DESCR
    importing
      !IF_PRSID type ZVCXI_P0S_PRSID
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods GET_PRTYP_DESCR
    importing
      !IF_PRTYP type ZVCXI_P0S_PRTYP
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods GET_SUTYP_DESCR
    importing
      !IF_SUTYP type ZVCXI_P0S_SUTYP
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods GET_TMARK_DESCR
    importing
      !IF_TMARK type ZVCXI_P0SS_TMARK
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_INSTANCE,
            WERKS      type        WERKS_D,
            R_INSTANCE type ref to ZCL_VCXI_P0SS_CUST_PRINT,
          end   of YS_INSTANCE .
  types:
    begin of YS_MARKP_DESCR,
           MARKP type ZVCXI_P0SS_MARKP,
           DESCR type /VCXI/CKX_DESCR,
         end   of YS_MARKP_DESCR .
  types:
    begin of YS_COLCO_DESCR,
           COLCO type ZVCXI_P0SS_COLCO,
           WERKS type WERKS_D,
           DESCR type /VCXI/CKX_DESCR,
         end   of YS_COLCO_DESCR .
  types:
    begin of YS_PRSID_DESCR,
           PRSID type ZVCXI_P0S_PRSID,
           DESCR type /VCXI/CKX_DESCR,
         end   of YS_PRSID_DESCR .
  types:
    begin of YS_PRTYP_DESCR,
           PRTYP type ZVCXI_P0S_PRTYP,
           DESCR type /VCXI/CKX_DESCR,
         end   of YS_PRTYP_DESCR .
  types:
    begin of YS_SUTYP_DESCR,
           SUTYP type ZVCXI_P0S_SUTYP,
           DESCR type /VCXI/CKX_DESCR,
         end   of YS_SUTYP_DESCR .
  types:
    begin of YS_TMARK_DESCR,
           TMARK type ZVCXI_P0SS_TMARK,
           DESCR type /VCXI/CKX_DESCR,
         end   of YS_TMARK_DESCR .
  types:
    YT_INSTANCE type standard table of YS_INSTANCE with default key .
  types:
    YT_MARKP_DESCR type standard table of YS_MARKP_DESCR .
  types:
    YT_COLCO_DESCR type standard table of YS_COLCO_DESCR .
  types:
    YT_PRSID_DESCR type standard table of YS_PRSID_DESCR .
  types:
    YT_PRTYP_DESCR type standard table of YS_PRTYP_DESCR .
  types:
    YT_PRTYP_TMARK type standard table of ZVCXI_P0S_TC412 with default key .
  types:
    YT_SUTYP_DESCR type standard table of YS_SUTYP_DESCR .
  types:
    YT_TC410 type standard table of ZVCXI_P0S_TC410 with default key .
  types:
    YT_TC410T type standard table of ZVCXI_P0S_TC410T with default key .
  types:
    YT_TD400 type standard table of ZVCXI_P0S_TD400 with default key .
  types:
    YT_TD410 type standard table of ZVCXI_P0S_TD410 with default key .
  types:
    YT_TD411 type standard table of ZVCXI_P0S_TD411 with default key .
  types:
    YT_TD420 type standard table of ZVCXI_P0S_TD420 with default key .
  types:
    YT_TD420T type standard table of ZVCXI_P0S_TD420T with default key .
  types:
    YT_TD421 type standard table of ZVCXI_P0S_TD421 with default key .
  types:
    YT_TD430 type standard table of ZVCXI_P0S_TD430 with default key .
  types:
    YT_TMARK_DESCR type standard table of YS_TMARK_DESCR .

  data T_TD400 type YT_TD400 .
  data T_TD410 type YT_TD410 .
  data T_TD420 type YT_TD420 .
  data T_TD430 type YT_TD430 .
  data T_TD411 type YT_TD411 .
  data T_TD421 type YT_TD421 .
  data T_TC410 type YT_TC410 .
  data T_TC410T type YT_TC410T .
  class-data T_INSTANCE type YT_INSTANCE .
  class-data T_PRSID_DESCR type YT_PRSID_DESCR .
  class-data T_PRTYP_DESCR type YT_PRTYP_DESCR .
  class-data T_SUTYP_DESCR type YT_SUTYP_DESCR .
  class-data T_TMARK_DESCR type YT_TMARK_DESCR .
  class-data T_MARKP_DESCR type YT_MARKP_DESCR .
  class-data T_PRTYP_TMARK type YT_PRTYP_TMARK .
  class-data T_COLCO_DESCR type YT_COLCO_DESCR .

  methods CONSTRUCTOR
    importing
      !IF_WERKS type WERKS_D
    raising
      /VCXI/CX_CKX .
private section.

  class-methods INIT_COLCO_DESCR
    exceptions
      /VCXI/CX_CKX .
  class-methods INIT_MARKP_DESCR
    exceptions
      /VCXI/CX_CKX .
  class-methods INIT_PRSID_DESCR
    exceptions
      /VCXI/CX_CKX .
  class-methods INIT_PRTYP_DESCR
    exceptions
      /VCXI/CX_CKX .
  class-methods INIT_SUTYP_DESCR
    exceptions
      /VCXI/CX_CKX .
  class-methods INIT_TMARK_DESCR
    exceptions
      /VCXI/CX_CKX .
  methods LOAD_FROM_DB
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_P0SS_CUST_PRINT definition
class ZCL_VCXI_P0SS_CUST_PRINT implementation.
method CHECK_PRTYP_EXIST.

  read table T_PRTYP_DESCR with key PRTYP = IF_PRTYP transporting no fields.
  check SY-SUBRC = 0.

  move ABAP_TRUE to RF_RETURN.

endmethod.
method CHECK_TMARK_BY_PRTYP.

  if IF_TMARK is supplied.
    read table T_PRTYP_TMARK with key PRTYP = IF_PRTYP
                                      TMARK = IF_TMARK transporting no fields.
  else.
    read table T_PRTYP_TMARK with key PRTYP = IF_PRTYP transporting no fields.
  endif.

  check SY-SUBRC = 0.

  move ABAP_TRUE to RF_RETURN.

endmethod.
method CLASS_CONSTRUCTOR.

*** Initialize Print Side Descriptions
  INIT_PRSID_DESCR( ).

*** Initialize Print Type Descriptions
  INIT_PRTYP_DESCR( ).

*** Initialize Surface Type Descriptions
  INIT_SUTYP_DESCR( ).

*** Initialize Marking Type Descr.
  INIT_TMARK_DESCR( ).

*** Initialize Marking Position Descr.
  INIT_MARKP_DESCR( ).

*** Initialize Color Code Descr.
  INIT_COLCO_DESCR( ).

*** Get All Valid Marking Types per Print Type
  select *
         into table T_PRTYP_TMARK
         from ZVCXI_P0S_TC412.

endmethod.
method CONSTRUCTOR.

  field-symbols: <S_INSTANCE>   type       YS_INSTANCE.

***---------------------------------------------------------------------------------
*** Set Plant
  move IF_WERKS to ME->F_WERKS.

*** Load from Database
  ME->LOAD_FROM_DB( ).

***---------------------------------------------------------------------------------
*** Add to Instance Buffer
  append initial line to ZCL_VCXI_P0SS_CUST_PRINT=>T_INSTANCE assigning <S_INSTANCE>.
  move ME->F_WERKS to <S_INSTANCE>-WERKS.
  move ME          to <S_INSTANCE>-R_INSTANCE.

endmethod.
method GET_AVGCO.

  data:  LS_TD430 type          ZVCXI_P0S_TD430.
  data:  LT_TD430 type table of ZVCXI_P0S_TD430.

*** First clear exporting Parameter
  clear: ES_AVGCO, ES_AVGCP.

*** Get valid Average Consumption from TD430 (consider access sequence)
*** If multiple entries are valid use youngest Valid From

***------------------------------------------------------------------
*** Find all valid Entries with WERKS, MATNR, ARBPL, SUTYP.
  move ME->T_TD430 to LT_TD430.
  delete LT_TD430 where WERKS ne ME->F_WERKS
                   or   MATNR ne IF_MATNR
                   or   ARBPL ne IF_ARBPL
                   or   SUTYP ne IF_SUTYP
                   or   VALFR gt IF_DATE.

  if lines( LT_TD430 ) lt 1.
*** Find with only WERKS, MATNR, SUTYP
    move ME->T_TD430 to LT_TD430.
    delete LT_TD430  where WERKS ne ME->F_WERKS
                      or   MATNR ne IF_MATNR
                      or   ARBPL is not initial
                      or   SUTYP ne IF_SUTYP
                      or   VALFR gt IF_DATE.

    if lines( LT_TD430 ) lt 1.
***   Find with only WERKS, MATNR, ARBPL
      move ME->T_TD430 to LT_TD430.
      delete LT_TD430 where WERKS ne ME->F_WERKS
                       or   MATNR ne IF_MATNR
                       or   ARBPL ne IF_ARBPL
                       or   SUTYP is not initial
                       or   VALFR gt IF_DATE.

      if lines( LT_TD430 ) lt 1.
***     Find with only WERKS, MATNR
        move ME->T_TD430 to LT_TD430.
        delete LT_TD430 where WERKS ne ME->F_WERKS
                         or   MATNR ne IF_MATNR
                         or   ARBPL is not initial
                         or   SUTYP is not initial
                         or   VALFR gt IF_DATE.
      endif.
    endif.
  endif.

***------------------------------------------------------------------
*** Find youngest Entry
  sort LT_TD430 by VALFR descending.
  read table LT_TD430 into LS_TD430 index 1.
  if SY-SUBRC eq 0.
    move LS_TD430-AVGCO     to ES_AVGCO-AVGCO.
    move LS_TD430-AVGCO_UOM to ES_AVGCO-AVGCO_UOM.
    move LS_TD430-AVGCP     to ES_AVGCP-AVGCP.
    move LS_TD430-AVGCP_UOM to ES_AVGCP-AVGCP_UOM.
  endif.

endmethod.
method GET_COLCO.

  data: LS_TD420 type          ZVCXI_P0S_TD420,
        LS_TD421 type          ZVCXI_P0S_TD421.
  data: LT_TD421 type table of ZVCXI_P0S_TD421.

***------------------------------------------------------------------
*** Get Color Code Info
  read table ME->T_TD420 into LS_TD420 with key WERKS = ME->F_WERKS
                                                COLCO = IF_COLCO.
  check SY-SUBRC eq 0.
  move LS_TD420-VARNI to EF_VARNI.

***------------------------------------------------------------------
*** Find with Data based on Print Type
  move ME->T_TD421 to LT_TD421.
  delete LT_TD421 where COLCO ne LS_TD420-COLCO
                   or   PRTYP ne IF_PRTYP
                   or   VALFR gt IF_DATE.
  if LT_TD421 is initial.
*** Find with Data with no Print Type
    move ME->T_TD421 to LT_TD421.
    delete LT_TD421 where COLCO ne LS_TD420-COLCO
                     or   PRTYP ne SPACE
                     or   VALFR gt IF_DATE.
  endif.

*** Get latest entry
  sort LT_TD421 by VALFR descending.
  read table LT_TD421 into LS_TD421 index 1.
  if SY-SUBRC eq 0.
    move LS_TD421-MATNR to EF_MATNR.
  endif.

endmethod.
method GET_COLCO_DESCR.

  data:  LS_COLCO_DESCR type YS_COLCO_DESCR.

  read table T_COLCO_DESCR into LS_COLCO_DESCR
                           with key COLCO = IF_COLCO
                                    WERKS = IF_WERKS.
  if SY-SUBRC eq 0.
    move LS_COLCO_DESCR-DESCR to RF_DESCR.
  endif.

endmethod.
method GET_DEFAULT_INK.

  data:  LS_TD410 type          ZVCXI_P0S_TD410,
         LS_TD411 type          ZVCXI_P0S_TD411.
  data:  LT_TD410 type table of ZVCXI_P0S_TD410,
         LT_TD411 type table of ZVCXI_P0S_TD411.

***---------------------------------------------------------------------
***Find With all values WERKS, PRTYP, PRSID, PTYPE
  move ME->T_TD410 to LT_TD410.
  delete LT_TD410 where  WERKS ne ME->F_WERKS
                   or    PRTYP ne IF_PRTYP
                   or    PRSID ne IF_PRSID
                   or    PTYPE ne IF_PTYPE.

  if lines( LT_TD410 ) lt 1.
*** Find with only WERKS, PRTYP, PRSID
    move ME->T_TD410 to LT_TD410.
    delete LT_TD410 where  WERKS ne ME->F_WERKS
                     or    PRTYP ne IF_PRTYP
                     or    PRSID ne IF_PRSID
                     or    PTYPE ne SPACE.

    if lines( LT_TD410 ) lt 1.
***   Find with only WERKS, PRTYP
      move ME->T_TD410 to LT_TD410.
      delete LT_TD410 where  WERKS ne ME->F_WERKS
                       or    PRTYP ne IF_PRTYP
                       or    PRSID ne SPACE
                       or    PTYPE ne SPACE.

    endif.
  endif.

*** Find first Entry
  read table LT_TD410 into LS_TD410 index 1.
  check SY-SUBRC eq 0.
  move LS_TD410-MATNR to EF_MATNR.
  move LS_TD410-DEFTE to EF_DEFTE.

***----------------------------------------------------------------------------
*** Get Coverage per Ink
  move ME->T_TD411 to LT_TD411.
  delete LT_TD411 where WERKS ne ME->F_WERKS
                   or   PRTYP ne LS_TD410-PRTYP
                   or   PRSID ne LS_TD410-PRSID
                   or   PTYPE ne LS_TD410-PTYPE
                   or   NOCOL gt IF_NOCOL.
  sort LT_TD411 by NOCOL descending.
  read table LT_TD411 into LS_TD411 index 1.
  if SY-SUBRC eq 0.
    move LS_TD411-COVRG     to ES_COVRG-COVRG.
    move LS_TD411-COVRG_UOM to ES_COVRG-COVRG_UOM.
  endif.

endmethod.
method GET_INSTANCE.

  data:  LS_INSTANCE type YS_INSTANCE.

  read table ZCL_VCXI_P0SS_CUST_PRINT=>T_INSTANCE into LS_INSTANCE
                                                  with key WERKS = IF_WERKS.
  if SY-SUBRC eq 0.
    move LS_INSTANCE-R_INSTANCE to RR_INSTANCE.
  else.
    create object RR_INSTANCE
      exporting
        IF_WERKS = IF_WERKS.
  endif.

endmethod.
method GET_MARKP_DESCR.

  data:  LS_MARKP_DESCR type YS_MARKP_DESCR.

  read table T_MARKP_DESCR into LS_MARKP_DESCR
                           with key MARKP = IF_MARKP.
  if SY-SUBRC eq 0.
    move LS_MARKP_DESCR-DESCR to RF_DESCR.
  endif.

endmethod.
method GET_PRSID_DESCR.

  data:  LS_PRSID_DESCR type YS_PRSID_DESCR.

  read table T_PRSID_DESCR into LS_PRSID_DESCR
                           with key PRSID = IF_PRSID.
  if SY-SUBRC eq 0.
    move LS_PRSID_DESCR-DESCR to RF_DESCR.
  endif.

endmethod.
method GET_PRTYP_DESCR.

  data:  LS_PRTYP_DESCR type YS_PRTYP_DESCR.

  read table T_PRTYP_DESCR into LS_PRTYP_DESCR
                           with key PRTYP = IF_PRTYP.
  if SY-SUBRC eq 0.
    move LS_PRTYP_DESCR-DESCR to RF_DESCR.
  endif.

endmethod.
method GET_SUTYP_DESCR.

  data:  LS_SUTYP_DESCR type YS_SUTYP_DESCR.

  read table T_SUTYP_DESCR into LS_SUTYP_DESCR
                           with key SUTYP = IF_SUTYP.
  if SY-SUBRC eq 0.
    move LS_SUTYP_DESCR-DESCR to RF_DESCR.
  endif.

endmethod.
method GET_TMARK_DESCR.

  data:  LS_TMARK_DESCR type YS_TMARK_DESCR.

  read table T_TMARK_DESCR into LS_TMARK_DESCR
                           with key TMARK = IF_TMARK.
  if SY-SUBRC eq 0.
    move LS_TMARK_DESCR-DESCR to RF_DESCR.
  endif.

endmethod.
method INIT_COLCO_DESCR.

*** Get Color Codes Text
  select ZVCXI_P0S_TD420~COLCO ZVCXI_P0S_TD420~WERKS ZVCXI_P0S_TD420T~DESCR
         into table T_COLCO_DESCR
         from ZVCXI_P0S_TD420
         left outer join ZVCXI_P0S_TD420T
        on    ZVCXI_P0S_TD420~COLCO  eq ZVCXI_P0S_TD420T~COLCO
         and  ZVCXI_P0S_TD420~WERKS  eq ZVCXI_P0S_TD420T~WERKS
         and  ZVCXI_P0S_TD420T~LANGU eq SY-LANGU.

endmethod.
method INIT_MARKP_DESCR.

*** Get Marking Positions with Text
  select ZVCXI_P0S_TC442~MARKP ZVCXI_P0S_TC442T~DESCR
         into table T_MARKP_DESCR
         from ZVCXI_P0S_TC442
         left outer join ZVCXI_P0S_TC442T
        on    ZVCXI_P0S_TC442~MARKP  eq ZVCXI_P0S_TC442T~MARKP
         and  ZVCXI_P0S_TC442T~LANGU eq SY-LANGU.

endmethod.
method INIT_PRSID_DESCR.

*** Get Print Side with Description
  select DD07L~DOMVALUE_L DD07T~DDTEXT
         into table T_PRSID_DESCR
         from DD07L
         left outer join DD07T
        on    DD07T~DOMNAME    eq DD07L~DOMNAME
         and  DD07T~DDLANGUAGE eq SY-LANGU
         and  DD07T~AS4LOCAL   eq DD07L~AS4LOCAL
         and  DD07T~VALPOS     eq DD07L~VALPOS
         and  DD07T~AS4VERS    eq DD07L~AS4VERS
        where DD07L~DOMNAME    eq 'ZVCXI_P0S_PRSID'
         and  DD07L~AS4LOCAL   eq 'A'.

endmethod.
method INIT_PRTYP_DESCR.

*** Get Print Type with Description
  select ZVCXI_P0S_TC410~PRTYP ZVCXI_P0S_TC410T~DESCR
         into table T_PRTYP_DESCR
         from ZVCXI_P0S_TC410
         left outer join ZVCXI_P0S_TC410T
        on    ZVCXI_P0S_TC410T~PRTYP eq ZVCXI_P0S_TC410~PRTYP
         and  ZVCXI_P0S_TC410T~LANGU eq SY-LANGU.

endmethod.
method INIT_SUTYP_DESCR.

*** Get Surface Type with Description
  select DD07L~DOMVALUE_L DD07T~DDTEXT
         into table T_SUTYP_DESCR
         from DD07L
         left outer join DD07T
        on    DD07T~DOMNAME    eq DD07L~DOMNAME
         and  DD07T~DDLANGUAGE eq SY-LANGU
         and  DD07T~AS4LOCAL   eq DD07L~AS4LOCAL
         and  DD07T~VALPOS     eq DD07L~VALPOS
         and  DD07T~AS4VERS    eq DD07L~AS4VERS
        where DD07L~DOMNAME    eq 'ZVCXI_P0S_SUTYP'
         and  DD07L~AS4LOCAL   eq 'A'.

endmethod.
method INIT_TMARK_DESCR.

*** Get Marking Type with Description
  select ZVCXI_P0S_TC441~TMARK ZVCXI_P0S_TC441T~DESCR
         into table T_TMARK_DESCR
         from ZVCXI_P0S_TC441
         left outer join ZVCXI_P0S_TC441T
        on    ZVCXI_P0S_TC441T~TMARK eq ZVCXI_P0S_TC441~TMARK
         and  ZVCXI_P0S_TC441T~LANGU eq SY-LANGU.

endmethod.
method LOAD_FROM_DB.

***------------------------------------------------------------------
*** Get Printing Plant
  select * into table ME->T_TD400
           from ZVCXI_P0S_TD400
          where WERKS = F_WERKS.

***------------------------------------------------------------------
*** Get Default Ink
  select * into table ME->T_TD410
           from ZVCXI_P0S_TD410
          where WERKS = F_WERKS.

*** Get Coverage per Ink
  select * into table ME->T_TD411
           from ZVCXI_P0S_TD411
          where WERKS = F_WERKS.

***------------------------------------------------------------------
*** Get Color Codes
  select * into table ME->T_TD420
           from ZVCXI_P0S_TD420
          where WERKS = F_WERKS.

*** Get Color Code - Material
  select * into table ME->T_TD421
           from ZVCXI_P0S_TD421
          where WERKS = F_WERKS.

***------------------------------------------------------------------
*** Get Avg. Consumption
  select * into table ME->T_TD430
           from ZVCXI_P0S_TD430
          where WERKS = F_WERKS.

endmethod.
