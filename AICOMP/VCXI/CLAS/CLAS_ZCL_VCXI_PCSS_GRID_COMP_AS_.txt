
class ZCL_VCXI_PCSS_GRID_COMP_AS definition
  public
  inheriting from ZCL_VCXI_P0SS_GRID_COMP_AS
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_PCSS_S_COMP_AS_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_IEALI_S_BOARD_P type /VCXI/VKSC_IEALI value 'S_BOARD_P_C'. "#EC NOTEXT
  constants C_IEALI_S_BOARD_S type /VCXI/VKSC_IEALI value 'S_BOARD_S_C'. "#EC NOTEXT
  constants C_IEALI_S_PRINTING_I type /VCXI/VKSC_IEALI value 'S_PRINTING_I_C'. "#EC NOTEXT
  constants C_IEALI_S_PRINTING_O type /VCXI/VKSC_IEALI value 'S_PRINTING_O_C'. "#EC NOTEXT

  methods GET_PC_COMP_AS_VIS
    importing
      !IR_PR_COMP_AS type ref to ZCL_VCXI_PCSS_PR_COMP_AS
    returning
      value(RS_COMP_AS_VIS) type ZVCXI_PCSS_S_COMP_AS_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_PC_COMP_SFG_VIS
    importing
      !IR_PR_COMP_SFG type ref to ZCL_VCXI_PCSS_PR_COMP_SFG
    returning
      value(RS_COMP_SFG_VIS) type ZVCXI_PCSS_S_COMP_SFG_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_PC_COMP_AS_VIS
    importing
      !IR_PR_COMP_AS type ref to ZCL_VCXI_PCSS_PR_COMP_AS
      !IS_COMP_AS_VIS type ZVCXI_PCSS_S_COMP_AS_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_PC_COMP_SFG_VIS
    importing
      !IR_PR_COMP_SFG type ref to ZCL_VCXI_PCSS_PR_COMP_SFG
      !IS_COMP_SFG_VIS type ZVCXI_PCSS_S_COMP_SFG_VIS
    raising
      /VCXI/CX_CKX .

  methods CHANGE_STYLE_COMP_AS
    redefinition .
  methods CHANGE_STYLE_COMP_SFG
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods HANDLE_DOUBLE_CLICK
    redefinition .
  methods HANDLE_ONF4
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_GRID_COMP_AS definition
class ZCL_VCXI_PCSS_GRID_COMP_AS implementation.
method CHANGE_STYLE_COMP_AS.

  SUPER->CHANGE_STYLE_COMP_AS( exporting IF_FCSFG = IF_FCSFG
                               changing  CT_STYL  = CT_STYL ).

*** All Fields to Enable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FEFCO'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SABOA'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRBOA'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** All Fields to Disable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SBDES'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PBDES'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CHANGE_STYLE_COMP_SFG.

  SUPER->CHANGE_STYLE_COMP_SFG( exporting IF_DUMMY = IF_DUMMY
                                changing  CT_STYL  = CT_STYL ).

*** Change Style to not editable if it is no Dummy Material
  if IF_DUMMY eq ABAP_FALSE.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FEFCO'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SBDES'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PBDES'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  elseif IF_DUMMY eq ABAP_TRUE.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FEFCO'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SBDES'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PBDES'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
  endif.

*** All Fields to Disable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SABOA'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRBOA'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  call method SUPER->CONSTRUCTOR
    exporting
      IR_GATE           = IR_GATE
      IF_TABNAME        = IF_TABNAME
      IF_CONTAINER_NAME = IF_CONTAINER_NAME
      IR_UIGATE         = IR_UIGATE
      IF_APPL_EVENTS    = IF_APPL_EVENTS.

*** Define Provider Type for Button not needed - Init Toolbardef is redefined
*  ME->F_IPRVT = ZCL_VCXI_PCSS_PR_COMP_AS=>C_IPRVT_PC_COMP_AS.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED type        /VCXI/CKX_LOCKED,
                 LF_INUSE  type        /VCXI/VKSR_INUSE.
  field-symbols: <S_FCAT>  type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'FEFCO'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'SABOA' or 'PRBOA'.
        move ME->F_NO_COMP_AS to <S_FCAT>-TECH.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'SBDES' or 'PBDES'.
        move ME->F_NO_COMP_SFG to <S_FCAT>-TECH.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.
  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data:          LF_DUMMY             type          ABAP_BOOL.
  data:          LS_COMP_AS_GRID      type          ZVCXI_PCSS_S_COMP_AS_GRID,
                 LS_COMP_AS_VIS       type          ZVCXI_PCSS_S_COMP_AS_VIS,
                 LS_COMP_SFG_VIS      type          ZVCXI_PCSS_S_COMP_SFG_VIS.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE,
                 LT_GATE_TMP          type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_COMP_AS        type ref to   ZCL_VCXI_PCSS_PR_COMP_AS,
                 LR_PR_COMP_SFG       type ref to   ZCL_VCXI_PCSS_PR_COMP_SFG.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  move ABAP_TRUE to: ME->F_NO_COMP_AS,
                     ME->F_NO_COMP_SFG,
                     ME->F_NO_FCSFG.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Components
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_COMP_AS=>C_IPRVT_PC_COMP_AS
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

*** Get Gates of Components SFG
  LT_GATE_TMP = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_COMP_SFG=>C_IPRVT_PC_COMP_SFG
                                       IF_INUSE  = ABAP_TRUE ).

  append lines of LT_GATE_TMP to LT_GATE.
  ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_COMP_AS_GRID, LF_DUMMY.

***------------------------------------------------------------------------------------------------
*** Get Global Data
    move LR_GATE->GET_POSID( ) to LS_COMP_AS_GRID-POSID.
    move LR_GATE->F_GATKY      to LS_COMP_AS_GRID-GATKY.
    move LR_GATE               to LS_COMP_AS_GRID-R_GATE.

*** Process Component AS
    try.

***     Get Data from PR Class
        move LR_GATE->R_CLSPR ?to LR_PR_COMP_AS.
        check LR_PR_COMP_AS is bound.

        clear: ME->F_NO_COMP_AS.

        LS_COMP_AS_VIS = ME->GET_PC_COMP_AS_VIS( IR_PR_COMP_AS = LR_PR_COMP_AS ).
        move-corresponding LS_COMP_AS_VIS to LS_COMP_AS_GRID.

        if LS_COMP_AS_GRID-FCSFG eq ABAP_TRUE.
          clear: ME->F_NO_FCSFG.
        endif.

***------------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_COMP_AS( exporting IF_FCSFG = LS_COMP_AS_GRID-FCSFG
                                  changing  CT_STYL  = LS_COMP_AS_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE  = LR_GATE
                                             changing  CT_STYL  = LS_COMP_AS_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_COMP_AS_GRID to <S_DATA>.
        continue.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_COMP_AS.
    endtry.

*** Process Component SFG
    try.

***     Get Data from PR Class
        move LR_GATE->R_CLSPR ?to LR_PR_COMP_SFG.
        check LR_PR_COMP_SFG is bound.

        clear: ME->F_NO_COMP_SFG.

        LS_COMP_SFG_VIS = ME->GET_PC_COMP_SFG_VIS( IR_PR_COMP_SFG = LR_PR_COMP_SFG ).
        move-corresponding LS_COMP_SFG_VIS to LS_COMP_AS_GRID.

        LF_DUMMY = LR_PR_COMP_SFG->IS_DUMMY( ).

***------------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_COMP_SFG( exporting IF_DUMMY = LF_DUMMY
                                   changing  CT_STYL  = LS_COMP_AS_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE  = LR_GATE
                                             changing  CT_STYL  = LS_COMP_AS_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_COMP_AS_GRID to <S_DATA>.
        continue.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_COMP_SFG.
    endtry.

  endloop.

endmethod.
method GET_PC_COMP_AS_VIS.

  data: LS_PROLE type ZVCXI_P0S_S_PROLE,
        LS_PROWI type ZVCXI_P0S_S_PROWI,
        LS_PROHE type ZVCXI_P0S_S_PROHE.

*** Get Component Product Type and Ratio
  RS_COMP_AS_VIS-COMPP       = IR_PR_COMP_AS->GET_COMPP( ).
  RS_COMP_AS_VIS-COMPP_DESCR = IR_PR_COMP_AS->GET_COMPP_DESCR( ).
  RS_COMP_AS_VIS-COMPR       = IR_PR_COMP_AS->GET_COMPR( ).
  RS_COMP_AS_VIS-PPASS       = IR_PR_COMP_AS->GET_PPASS( ).

*** Get Product Style - Fefco
  RS_COMP_AS_VIS-FEFCO         = IR_PR_COMP_AS->GET_PRSTY( ).
  RS_COMP_AS_VIS-FEFCO_DESCR   = IR_PR_COMP_AS->GET_PRSTY_DESCR( ).

*** Get Part of Box
  RS_COMP_AS_VIS-BOXPA         = IR_PR_COMP_AS->GET_BOXPA( ).
  RS_COMP_AS_VIS-BOXPA_DESCR   = IR_PR_COMP_AS->GET_BOXPA_DESCR( ).

*** Get Board Information
  RS_COMP_AS_VIS-SABOA         = IR_PR_COMP_AS->GET_SABOA( ).
  RS_COMP_AS_VIS-SBDES         = IR_PR_COMP_AS->GET_SABOA_DESCR( ).

  RS_COMP_AS_VIS-PRBOA         = IR_PR_COMP_AS->GET_PRBOA( ).
  RS_COMP_AS_VIS-PBDES         = IR_PR_COMP_AS->GET_PRBOA_DESCR( ).

*** Get Product Dimensions
  LS_PROLE                     = IR_PR_COMP_AS->GET_PROLE( ).
  move-corresponding LS_PROLE to RS_COMP_AS_VIS.
  LS_PROWI                     = IR_PR_COMP_AS->GET_PROWI( ).
  move-corresponding LS_PROWI to RS_COMP_AS_VIS.
  LS_PROHE                     = IR_PR_COMP_AS->GET_PROHE( ).
  move-corresponding LS_PROHE to RS_COMP_AS_VIS.

*** Get Printing Information
  RS_COMP_AS_VIS-PRTYO         = IR_PR_COMP_AS->GET_PRTYO( ).
  RS_COMP_AS_VIS-PRTYO_DESCR   = IR_PR_COMP_AS->GET_PRTYO_DESCR( ).
  RS_COMP_AS_VIS-PRTYI         = IR_PR_COMP_AS->GET_PRTYI( ).
  RS_COMP_AS_VIS-PRTYI_DESCR   = IR_PR_COMP_AS->GET_PRTYI_DESCR( ).
  RS_COMP_AS_VIS-NOCOI         = IR_PR_COMP_AS->GET_NOCOI( ).
  RS_COMP_AS_VIS-NOCOO         = IR_PR_COMP_AS->GET_NOCOO( ).

*** Get Component SFG Flag and Material Description
  RS_COMP_AS_VIS-FCSFG         = IR_PR_COMP_AS->GET_FCSFG( ).
  RS_COMP_AS_VIS-MATDE         = IR_PR_COMP_AS->GET_MATDE( ).

endmethod.
method GET_PC_COMP_SFG_VIS.

  data: LS_PROLE type ZVCXI_P0S_S_PROLE,
        LS_PROWI type ZVCXI_P0S_S_PROWI,
        LS_PROHE type ZVCXI_P0S_S_PROHE,
        LS_FOLLE type ZVCXI_P0SS_S_FOLLE,
        LS_FOLWI type ZVCXI_P0SS_S_FOLWI,
        LS_FOLHE type ZVCXI_P0SS_S_FOLHE,
        LS_ABLAN type ZVCXI_P0SS_S_ABLAN,
        LS_WNEPP type ZVCXI_P0SS_S_WNEPP.

*** Get Component Product Type and Ratio
  RS_COMP_SFG_VIS-COMPP       = IR_PR_COMP_SFG->GET_COMPP( ).
  RS_COMP_SFG_VIS-COMPP_DESCR = IR_PR_COMP_SFG->GET_COMPP_DESCR( ).
  RS_COMP_SFG_VIS-COMPR       = IR_PR_COMP_SFG->GET_COMPR( ).
  RS_COMP_SFG_VIS-PPASS       = IR_PR_COMP_SFG->GET_PPASS( ).

*** Get Product Style
  RS_COMP_SFG_VIS-FEFCO         = IR_PR_COMP_SFG->GET_FEFCO( ).
  RS_COMP_SFG_VIS-FEFCO_DESCR   = IR_PR_COMP_SFG->GET_FEFCO_DESCR( ).

*** Get Part of Box
  RS_COMP_SFG_VIS-BOXPA         = IR_PR_COMP_SFG->GET_BOXPA( ).
  RS_COMP_SFG_VIS-BOXPA_DESCR   = IR_PR_COMP_SFG->GET_BOXPA_DESCR( ).

*** Get Product Dimensions
  LS_PROLE                     = IR_PR_COMP_SFG->GET_PROLE( ).
  move-corresponding LS_PROLE to RS_COMP_SFG_VIS.
  LS_PROWI                     = IR_PR_COMP_SFG->GET_PROWI( ).
  move-corresponding LS_PROWI to RS_COMP_SFG_VIS.
  LS_PROHE                     = IR_PR_COMP_SFG->GET_PROHE( ).
  move-corresponding LS_PROHE to RS_COMP_SFG_VIS.

*** Get Board Info
  RS_COMP_SFG_VIS-SBDES         = IR_PR_COMP_SFG->GET_SBDES( ).
  RS_COMP_SFG_VIS-PBDES         = IR_PR_COMP_SFG->GET_PBDES( ).

*** Get Printing Information
  RS_COMP_SFG_VIS-PRTYO         = IR_PR_COMP_SFG->GET_PRTYO( ).
  RS_COMP_SFG_VIS-PRTYO_DESCR   = IR_PR_COMP_SFG->GET_PRTYO_DESCR( ).
  RS_COMP_SFG_VIS-PRTYI         = IR_PR_COMP_SFG->GET_PRTYI( ).
  RS_COMP_SFG_VIS-PRTYI_DESCR   = IR_PR_COMP_SFG->GET_PRTYI_DESCR( ).
  RS_COMP_SFG_VIS-NOCOI         = IR_PR_COMP_SFG->GET_NOCOI( ).
  RS_COMP_SFG_VIS-NOCOO         = IR_PR_COMP_SFG->GET_NOCOO( ).

*** Get Area and Weight
  LS_ABLAN                     = IR_PR_COMP_SFG->GET_ABLAN( ).
  move-corresponding LS_ABLAN to RS_COMP_SFG_VIS.
  LS_WNEPP                     = IR_PR_COMP_SFG->GET_WNEPP( ).
  move-corresponding LS_WNEPP to RS_COMP_SFG_VIS.

*** Get Folding Dimensions
  IR_PR_COMP_SFG->GET_FOLLE( importing ES_FOLLE = LS_FOLLE ).
  move-corresponding LS_FOLLE to RS_COMP_SFG_VIS.
  IR_PR_COMP_SFG->GET_FOLWI( importing ES_FOLWI = LS_FOLWI ).
  move-corresponding LS_FOLWI to RS_COMP_SFG_VIS.
  IR_PR_COMP_SFG->GET_FOLHE( importing ES_FOLHE = LS_FOLHE ).
  move-corresponding LS_FOLHE to RS_COMP_SFG_VIS.

*** Get Material Number and Description
  RS_COMP_SFG_VIS-MATNR         = IR_PR_COMP_SFG->GET_MATNR( ).
  RS_COMP_SFG_VIS-MATNR_DESCR   = IR_PR_COMP_SFG->GET_MATNR_DESCR( ).


endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_COMP_AS_GRID      type          ZVCXI_PCSS_S_COMP_AS_GRID,
                 LS_COMP_AS_VIS       type          ZVCXI_PCSS_S_COMP_AS_VIS,
                 LS_COMP_SFG_VIS      type          ZVCXI_PCSS_S_COMP_SFG_VIS.
  data:          LR_PR_COMP_AS        type ref to   ZCL_VCXI_PCSS_PR_COMP_AS,
                 LR_PR_COMP_SFG       type ref to   ZCL_VCXI_PCSS_PR_COMP_SFG,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move-corresponding <S_DATA> to LS_COMP_AS_GRID.
        check LS_COMP_AS_GRID-R_GATE is bound.

        try.
            move LS_COMP_AS_GRID-R_GATE->R_CLSPR ?to LR_PR_COMP_AS.
            check LR_PR_COMP_AS is bound.

***         Set Values to PR Class
            move-corresponding LS_COMP_AS_GRID to LS_COMP_AS_VIS.
            ME->SET_PC_COMP_AS_VIS( IR_PR_COMP_AS  = LR_PR_COMP_AS
                                    IS_COMP_AS_VIS = LS_COMP_AS_VIS ).

          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_COMP_AS.
        endtry.

        try.
            move LS_COMP_AS_GRID-R_GATE->R_CLSPR ?to LR_PR_COMP_SFG.
            if LR_PR_COMP_SFG is bound.

***           Set Values to PR Class
              move-corresponding LS_COMP_AS_GRID to LS_COMP_SFG_VIS.
              ME->SET_PC_COMP_SFG_VIS( IR_PR_COMP_SFG  = LR_PR_COMP_SFG
                                       IS_COMP_SFG_VIS = LS_COMP_SFG_VIS ).
              continue.
            endif.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_COMP_SFG.
        endtry.

      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_DOUBLE_CLICK.

  data:          LF_IEALI             type          /VCXI/VKSC_IEALI,
                 LF_COMPN             type          CHAR02.
  data:          LT_GATE_SPEC         type          /VCXI/VKSR_TT_GATE,
                 LT_GATE_TAB          type          /VCXI/VKSR_TT_GATE,
                 LT_CEALI             type          /VCXI/VKSR_TT_CEALI.
  data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX,
                 LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_GATE_SPEC         type ref to   /VCXI/CL_VKSR_GATE,
                 LR_GATE_TAB          type ref to   /VCXI/CL_VKSR_GATE,
                 LR_UI                type ref to   /VCXI/CL_VKSRU_CLSUI,
                 LR_UI_SPEC           type ref to   ZCL_VCXI_PCSS_UI_SPEC.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any,
                 <F_FIELD>            type          any.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        check SY-TABIX  eq E_ROW-INDEX.

***     Open Subscreen
        assign component C_FIELDNAME_RGATE of structure <S_DATA> to <F_FIELD>.
        check <F_FIELD> is assigned.
        move <F_FIELD> to LR_GATE.

***     Check Gate is bound and Provider has an UI of "Child" specification or an own Screen!
        check LR_GATE is bound.

***     Get Gates of Components Specification or Component SFG Gate stay
        LT_GATE_SPEC = LR_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_SPEC=>C_IPRVT_PC_SPEC
                                           IF_INUSE  = ABAP_TRUE ).

        if lines( LT_GATE_SPEC ) is not initial.
          read table LT_GATE_SPEC into LR_GATE_SPEC index 1.
          check LR_GATE_SPEC is bound and
                LR_GATE_SPEC->GET_CLSUI( ) is not initial.
***       Open UI
          LR_UI = ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = LR_GATE_SPEC ).
***       Expand and select in Tree
          ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = LR_GATE_SPEC->F_GATKY ).
          ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = LR_GATE_SPEC->F_GATKY ).

        else.
          check LR_GATE is bound and
                LR_GATE->GET_CLSUI( ) is not initial.
***       Open UI
          ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = LR_GATE ).
***       Expand and select in Tree
          ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = LR_GATE->F_GATKY ).
          ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = LR_GATE->F_GATKY ).
        endif.

        check LR_UI is bound and
              LR_GATE_SPEC is bound.
        move E_ROW-INDEX+8 to LF_COMPN.

***------------------------------------------------------------------------------------------------
***     Get Tab
        case E_COLUMN.
***       Open Sales Board Grade Tab
          when 'SABOA' or 'SABOA_DESCR'.
            concatenate C_IEALI_S_BOARD_S LF_COMPN into LF_IEALI.

***       Open Production Board Grade Tab
          when 'PRBOA' or 'PRBOA_DESCR'.
            concatenate C_IEALI_S_BOARD_P LF_COMPN into LF_IEALI.

***       Open Printing Outside Tab
          when 'PRTYO' or 'PRTYO_DESCR' or 'NOCOO'.
            concatenate C_IEALI_S_PRINTING_O LF_COMPN into LF_IEALI.

***       Open Printing Insinde Tab
          when 'PRTYI' or 'PRTYI_DESCR' or 'NOCOI'.
            concatenate C_IEALI_S_PRINTING_I LF_COMPN into LF_IEALI.

        endcase.

        check LF_IEALI is not initial.
***------------------------------------------------------------------------------------------------
***     Get Provider - Reference
        LT_GATE_TAB = LR_GATE_SPEC->GET_PRVDR( IF_INUSE = ABAP_TRUE ).

        loop at LT_GATE_TAB into LR_GATE_TAB.
          check LR_GATE_TAB->R_CLSPR is bound.
          LT_CEALI = LR_GATE_TAB->GET_CEALI( ).
***       Find Tab to Open
          read table LT_CEALI with key IEALI = LF_IEALI transporting no fields.
          if SY-SUBRC = 0.
            exit.
          else.
            clear: LR_GATE_TAB.
          endif.
        endloop.

        check LR_GATE_TAB is bound.

***     Set Default Gate for Activ Tab
        try.
            move LR_UI ?to LR_UI_SPEC.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_UI_SPEC.
        endtry.

        check LR_UI_SPEC is bound.
        LR_UI_SPEC->R_DEFAULT_GATE = LR_GATE_TAB.

      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method HANDLE_ONF4.

  data:          LF_VALID_TBOAR       type          CHAR100,
                 LF_DCONF             type          DATS,
                 LF_WERKS             type          WERKS_D,
                 LF_RELEASED          type          ABAP_BOOL.
  data:          LS_COMP_AS_GRID      type          ZVCXI_P0SS_S_COMP_AS_GRID.
  data:          LR_PR_COMP_AS        type ref to   ZCL_VCXI_PCSS_PR_COMP_AS,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        check ES_ROW_NO-ROW_ID = SY-TABIX.

        try.
            move-corresponding <S_DATA> to LS_COMP_AS_GRID.

            move LS_COMP_AS_GRID-R_GATE->R_CLSPR ?to LR_PR_COMP_AS.
            check LR_PR_COMP_AS is bound.

***         Handle F4 call
            case E_FIELDNAME.
              when 'SABOA' or 'PRBOA'.
***             Set Parameter Date Config
                LS_COMP_AS_GRID-R_GATE->GET_CONFIG_INFO( importing EF_DCONF = LF_DCONF ).
                set parameter id 'ZVCXI_XCS_DCONF' field LF_DCONF.
                if E_FIELDNAME eq 'SABOA'.
                  set parameter id 'ZVCXI_PCS_MBOAR' field 'S'.
                elseif E_FIELDNAME eq 'PRBOA'.
                  set parameter id 'ZVCXI_PCS_MBOAR' field 'P'.
                endif.
***             Set Valid Board Types as Parameter
                LF_VALID_TBOAR = LR_PR_COMP_AS->GET_VALID_TBOAR( ).
                set parameter id 'ZVCXI_PCS_TBOAR' field LF_VALID_TBOAR.
***             Set Plant as Parameter
                LF_WERKS = LR_PR_COMP_AS->GET_WERKS( ).
                set parameter id 'WRK' field LF_WERKS.
***             Set only Released BoardIDs are allowed
                move ABAP_TRUE to LF_RELEASED.
                set parameter id 'ZVCXI_PCS_RELEASED' field LF_RELEASED.
              when others.

                SUPER->HANDLE_ONF4( E_FIELDNAME = E_FIELDNAME
                                    E_FIELDVALUE = E_FIELDVALUE
                                    ES_ROW_NO    = ES_ROW_NO
                                    ER_EVENT_DATA = ER_EVENT_DATA
                                    ET_BAD_CELLS  = ET_BAD_CELLS
                                    E_DISPLAY     = E_DISPLAY ).

            endcase.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LS_COMP_AS_GRID.
        endtry.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

*** If we switch Application Events off -> do manually Refresh Screen
  if ME->F_APPL_EVENTS eq ABAP_FALSE.
    ME->R_UIGATE->REFRESH_SCREEN( ).
  endif.

endmethod.
method SET_PC_COMP_AS_VIS.

  data: LS_PROLE       type ZVCXI_P0S_S_PROLE,
        LS_PROWI       type ZVCXI_P0S_S_PROWI,
        LS_PROHE       type ZVCXI_P0S_S_PROHE,
        LS_COMP_AS_VIS type ZVCXI_PCSS_S_COMP_AS_VIS.

  LS_COMP_AS_VIS = ME->GET_PC_COMP_AS_VIS( IR_PR_COMP_AS = IR_PR_COMP_AS ).

***--------------------------------------------------------------------------------------
*** Set Component Product Type and Ratio
  if LS_COMP_AS_VIS-COMPP ne IS_COMP_AS_VIS-COMPP.
    IR_PR_COMP_AS->SET_COMPP( IF_COMPP = IS_COMP_AS_VIS-COMPP
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-COMPR ne IS_COMP_AS_VIS-COMPR.
    IR_PR_COMP_AS->SET_COMPR( IF_COMPR = IS_COMP_AS_VIS-COMPR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-PPASS ne IS_COMP_AS_VIS-PPASS.
    IR_PR_COMP_AS->SET_PPASS( IF_PPASS = IS_COMP_AS_VIS-PPASS
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Product Type - Fefco
  if LS_COMP_AS_VIS-FEFCO ne IS_COMP_AS_VIS-FEFCO.
    IR_PR_COMP_AS->SET_PRSTY( IF_PRSTY = IS_COMP_AS_VIS-FEFCO
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Box Part
  if LS_COMP_AS_VIS-BOXPA ne IS_COMP_AS_VIS-BOXPA.
    IR_PR_COMP_AS->SET_BOXPA( IF_BOXPA = IS_COMP_AS_VIS-BOXPA
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Product Dimensions
  if LS_COMP_AS_VIS-PROLE ne IS_COMP_AS_VIS-PROLE.
    move-corresponding IS_COMP_AS_VIS to LS_PROLE.
    IR_PR_COMP_AS->SET_PROLE( IS_PROLE = LS_PROLE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-PROWI ne IS_COMP_AS_VIS-PROWI.
    move-corresponding IS_COMP_AS_VIS to LS_PROWI.
    IR_PR_COMP_AS->SET_PROWI( IS_PROWI = LS_PROWI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-PROHE ne IS_COMP_AS_VIS-PROHE.
    move-corresponding IS_COMP_AS_VIS to LS_PROHE.
    IR_PR_COMP_AS->SET_PROHE( IS_PROHE = LS_PROHE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Get Board Information
  if LS_COMP_AS_VIS-SABOA ne IS_COMP_AS_VIS-SABOA.
    IR_PR_COMP_AS->SET_SABOA( IF_SABOA = IS_COMP_AS_VIS-SABOA
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-PRBOA ne IS_COMP_AS_VIS-PRBOA.
    IR_PR_COMP_AS->SET_PRBOA( IF_PRBOA = IS_COMP_AS_VIS-PRBOA
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Printing Information
  if LS_COMP_AS_VIS-PRTYO ne IS_COMP_AS_VIS-PRTYO.
    IR_PR_COMP_AS->SET_PRTYO( IF_PRTYP = IS_COMP_AS_VIS-PRTYO
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-NOCOO ne IS_COMP_AS_VIS-NOCOO.
    IR_PR_COMP_AS->SET_NOCOO( IF_NOCOL = IS_COMP_AS_VIS-NOCOO ).
  endif.

  if LS_COMP_AS_VIS-PRTYI ne IS_COMP_AS_VIS-PRTYI.
    IR_PR_COMP_AS->SET_PRTYI( IF_PRTYP = IS_COMP_AS_VIS-PRTYI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_AS_VIS-NOCOI ne IS_COMP_AS_VIS-NOCOI.
    IR_PR_COMP_AS->SET_NOCOI( IF_NOCOL = IS_COMP_AS_VIS-NOCOI ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Material Description
  if LS_COMP_AS_VIS-MATDE ne IS_COMP_AS_VIS-MATDE.
    IR_PR_COMP_AS->SET_MATDE( IF_MATDE = IS_COMP_AS_VIS-MATDE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method SET_PC_COMP_SFG_VIS.

  data: LS_PROLE        type ZVCXI_P0S_S_PROLE,
        LS_PROWI        type ZVCXI_P0S_S_PROWI,
        LS_PROHE        type ZVCXI_P0S_S_PROHE,
        LS_FOLLE        type ZVCXI_P0SS_S_FOLLE,
        LS_FOLWI        type ZVCXI_P0SS_S_FOLWI,
        LS_FOLHE        type ZVCXI_P0SS_S_FOLHE,
        LS_ABLAN        type ZVCXI_P0SS_S_ABLAN,
        LS_WNEPP        type ZVCXI_P0SS_S_WNEPP,
        LS_COMP_SFG_VIS type ZVCXI_PCSS_S_COMP_SFG_VIS.

  LS_COMP_SFG_VIS = ME->GET_COMP_SFG_VIS( IR_PR_COMP_SFG = IR_PR_COMP_SFG ).

***--------------------------------------------------------------------------------------
*** Set Component Product Type and Ratio
  if LS_COMP_SFG_VIS-COMPP ne IS_COMP_SFG_VIS-COMPP.
    IR_PR_COMP_SFG->SET_COMPP( IF_COMPP = IS_COMP_SFG_VIS-COMPP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-COMPR ne IS_COMP_SFG_VIS-COMPR.
    IR_PR_COMP_SFG->SET_COMPR( IF_COMPR = IS_COMP_SFG_VIS-COMPR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-PPASS ne IS_COMP_SFG_VIS-PPASS.
    IR_PR_COMP_SFG->SET_PPASS( IF_PPASS = IS_COMP_SFG_VIS-PPASS
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Product Type
  if LS_COMP_SFG_VIS-FEFCO ne IS_COMP_SFG_VIS-FEFCO.
    IR_PR_COMP_SFG->SET_FEFCO( IF_FEFCO = IS_COMP_SFG_VIS-FEFCO
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Box Part
  if LS_COMP_SFG_VIS-BOXPA ne IS_COMP_SFG_VIS-BOXPA.
    IR_PR_COMP_SFG->SET_BOXPA( IF_BOXPA = IS_COMP_SFG_VIS-BOXPA
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Board Info
  if LS_COMP_SFG_VIS-SBDES ne IS_COMP_SFG_VIS-SBDES.
    IR_PR_COMP_SFG->SET_SBDES( IF_SBDES = IS_COMP_SFG_VIS-SBDES
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-PBDES ne IS_COMP_SFG_VIS-PBDES.
    IR_PR_COMP_SFG->SET_PBDES( IF_PBDES = IS_COMP_SFG_VIS-PBDES
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Product Dimensions
  if LS_COMP_SFG_VIS-PROLE ne IS_COMP_SFG_VIS-PROLE.
    move-corresponding IS_COMP_SFG_VIS to LS_PROLE.
    IR_PR_COMP_SFG->SET_PROLE( IS_PROLE = LS_PROLE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-PROWI ne IS_COMP_SFG_VIS-PROWI.
    move-corresponding IS_COMP_SFG_VIS to LS_PROWI.
    IR_PR_COMP_SFG->SET_PROWI( IS_PROWI = LS_PROWI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-PROHE ne IS_COMP_SFG_VIS-PROHE.
    move-corresponding IS_COMP_SFG_VIS to LS_PROHE.
    IR_PR_COMP_SFG->SET_PROHE( IS_PROHE = LS_PROHE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Printing Information
  if LS_COMP_SFG_VIS-PRTYO ne IS_COMP_SFG_VIS-PRTYO.
    IR_PR_COMP_SFG->SET_PRTYO( IF_PRTYO = IS_COMP_SFG_VIS-PRTYO
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-NOCOO ne IS_COMP_SFG_VIS-NOCOO.
    IR_PR_COMP_SFG->SET_NOCOO( IF_NOCOO = IS_COMP_SFG_VIS-NOCOO ).
  endif.

  if LS_COMP_SFG_VIS-PRTYI ne IS_COMP_SFG_VIS-PRTYI.
    IR_PR_COMP_SFG->SET_PRTYI( IF_PRTYI = IS_COMP_SFG_VIS-PRTYI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-NOCOI ne IS_COMP_SFG_VIS-NOCOI.
    IR_PR_COMP_SFG->SET_NOCOI( IF_NOCOI = IS_COMP_SFG_VIS-NOCOI ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Area and Weight Informations
  if LS_COMP_SFG_VIS-ABLAN ne IS_COMP_SFG_VIS-ABLAN.
    move-corresponding IS_COMP_SFG_VIS to LS_ABLAN.
    IR_PR_COMP_SFG->SET_ABLAN( IS_ABLAN = LS_ABLAN
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-WNEPP ne IS_COMP_SFG_VIS-WNEPP.
    move-corresponding IS_COMP_SFG_VIS to LS_WNEPP.
    IR_PR_COMP_SFG->SET_WNEPP( IS_WNEPP = LS_WNEPP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Folding Dimensions
  if LS_COMP_SFG_VIS-FOLLE ne IS_COMP_SFG_VIS-FOLLE.
    move-corresponding IS_COMP_SFG_VIS to LS_FOLLE.
    IR_PR_COMP_SFG->SET_FOLLE( IS_FOLLE = LS_FOLLE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-FOLWI ne IS_COMP_SFG_VIS-FOLWI.
    move-corresponding IS_COMP_SFG_VIS to LS_FOLWI.
    IR_PR_COMP_SFG->SET_FOLWI( IS_FOLWI = LS_FOLWI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SFG_VIS-FOLHE ne IS_COMP_SFG_VIS-FOLHE.
    move-corresponding IS_COMP_SFG_VIS to LS_FOLHE.
    IR_PR_COMP_SFG->SET_FOLHE( IS_FOLHE = LS_FOLHE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Material Number
  if LS_COMP_SFG_VIS-MATNR ne IS_COMP_SFG_VIS-MATNR.
    IR_PR_COMP_SFG->SET_MATNR( IF_MATNR = IS_COMP_SFG_VIS-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.                    "SET_PC_COMP_SFG_VIS
