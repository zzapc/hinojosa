
class ZCL_VCXI_F0M_MBQ_STP_S301 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S301
  create public .

public section.
protected section.

  methods ADD_DOC
    importing
      !IF_IPARE type /VCXI/CKX_ID
      !IF_CPARE type /VCXI/VKSR_REPNR
      !IR_SVC type ref to /VCXI/CL_VKSRA_SVC
      !IR_CUELMNT_DOC_MGR type ref to /VCXI/CL_VKSC_CUELMNT
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
      !IS_DMSLI type ZVCXI_XCM_MBQ_S_DMSLI
      !IR_SVCEL_XCOMP type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
    exporting
      !ER_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT
      !EF_CSELF type /VCXI/VKSR_REPNR
      !EF_ISELF type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .
  methods ADD_SOV
    importing
      !IR_SVC type ref to /VCXI/CL_VKSRA_SVC
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    exporting
      !ER_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT
      !EF_CSELF type /VCXI/VKSR_REPNR
      !EF_ISELF type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .
  methods ADD_DOC_MGR
    importing
      !IR_SVC type ref to /VCXI/CL_VKSRA_SVC
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    exporting
      !ER_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT
      !EF_CSELF type /VCXI/VKSR_REPNR
      !EF_ISELF type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .

  methods FILL_IDAT
    redefinition .
private section.
endclass. "ZCL_VCXI_F0M_MBQ_STP_S301 definition
class ZCL_VCXI_F0M_MBQ_STP_S301 implementation.
  method ADD_DOC.

    data: LS_SVCEL type ZVCXI_XCI_S_SVCEL,
          LS_DMSLI type ZVCXI_XCM_MBQ_S_DMSLI.
    data: LR_SVCEL_SOURCE type ref to /VCXI/CL_VKSRA_SVC_ELEMENT.


***------------------------------------------------------------------------------------------------
*** Check if DMS belongs to Component
    check IS_DMSLI-LEVEL_SOURCE is not initial.
    LR_SVCEL_SOURCE = ZCL_VCXI_XCI_IDAT_SVC=>FIND_SVCEL( IR_SVC         = IR_SVC
                                                         IF_LEVEL_START = IS_DMSLI-LEVEL_SOURCE ).
    check /VCXI/CL_CKX_SERVICE=>IS_OBJECT_IN_LINE( IR_OBJECT_1 = LR_SVCEL_SOURCE
                                                   IR_OBJECT_2 = IR_SVCEL_XCOMP ).

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    ER_CUELMNT = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUELMNT_PARENT = IR_CUELMNT_DOC_MGR
                                                      IF_ID             = conv #( IS_DMSLI-S_DOC_KEY-DOKAR ) ).

*** Get Element ID
    LS_SVCEL-ISELF = ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ).
    LS_SVCEL-IPARE = IF_IPARE.
    LS_SVCEL-CPARE = IF_CPARE.

*** Add Element and receive own Counter
    LS_SVCEL-CSELF = IR_IDAT_SVC->ADD_SVCEL( IF_IPARE = LS_SVCEL-IPARE
                                             IF_CPARE = LS_SVCEL-CPARE
                                             IF_ISELF = LS_SVCEL-ISELF ).

*** Add Document Key as Leading Object
    LS_SVCEL-S_LEOKY-LEOKY+0(25) = IS_DMSLI-S_DOC_KEY-DOKNR.
    LS_SVCEL-S_LEOKY-LEOKY+25(3) = IS_DMSLI-S_DOC_KEY-DOKTL.
    LS_SVCEL-S_LEOKY-LEOKY+28(2) = IS_DMSLI-S_DOC_KEY-DOKVR.
    LS_SVCEL-S_LEOKY-SETBY       = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC.

*** Add Events
    ME->ADD_SVCEV( changing CS_SVCEL = LS_SVCEL ).

*** Set Information to Integration Data Service
    IR_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).

*** Return ID and Counter
    EF_ISELF = LS_SVCEL-ISELF.
    EF_CSELF = LS_SVCEL-CSELF.

  endmethod.
  method ADD_DOC_MGR.

    data: LS_SVCEL type ZVCXI_XCI_S_SVCEL.
    data: LR_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT.


*** Get Customizing Element
    ER_CUELMNT = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUPRFL = IR_IDAT_SVC->R_CUPRFL
                                                      IF_ID     = 'DOC_MGR' ).

*** Get SVC Element
    LR_SVCEL = ZCL_VCXI_XCI_IDAT_SVC=>FIND_SVCEL( IR_SVC = IR_SVC
                                                  IF_ID  = ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ) ).

***------------------------------------------------------------------------------------------------
*** Get Element ID
    move ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LS_SVCEL-ISELF.

*** Add Element and receive own Counter
    LS_SVCEL-CSELF = IR_IDAT_SVC->ADD_SVCEL( IF_IPARE = LS_SVCEL-IPARE
                                             IF_CPARE = LS_SVCEL-CPARE
                                             IF_ISELF = LS_SVCEL-ISELF ).

*** Add Events
    ME->ADD_SVCEV( changing CS_SVCEL = LS_SVCEL ).

*** Set Information to Integration Data Service
    IR_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).

*** Return ID and Counter
    EF_ISELF = LS_SVCEL-ISELF.
    EF_CSELF = LS_SVCEL-CSELF.


  endmethod.
  method ADD_SOV.

    data: LS_SVCEL type        ZVCXI_XCI_S_SVCEL.
    data: LR_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT.


*** Get Customizing Element
    ER_CUELMNT = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUPRFL = IR_IDAT_SVC->R_CUPRFL
                                                      IF_ID     = 'SOV' ).

*** Get SVC Element
    LR_SVCEL = ZCL_VCXI_XCI_IDAT_SVC=>FIND_SVCEL( IR_SVC = IR_SVC
                                                  IF_ID  = ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ) ).

***----------------------------------------------------------------------------
*** Get Element ID
    move ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LS_SVCEL-ISELF.

*** Add Element and receive own Counter
    LS_SVCEL-CSELF = IR_IDAT_SVC->ADD_SVCEL( IF_IPARE = LS_SVCEL-IPARE
                                             IF_CPARE = LS_SVCEL-CPARE
                                             IF_ISELF = LS_SVCEL-ISELF ).

*** Add Events
    ME->ADD_SVCEV( changing CS_SVCEL = LS_SVCEL ).

*** Set Information to Integration Data Service
    IR_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).

*** Return ID and Counter
    EF_ISELF = LS_SVCEL-ISELF.
    EF_CSELF = LS_SVCEL-CSELF.

  endmethod.
  method FILL_IDAT.

    data: LF_IPARE type /VCXI/CKX_ID,
          LF_CPARE type /VCXI/VKSR_REPNR.
    data: LS_DMSLI type ZVCXI_XCM_MBQ_S_DMSLI.
    data: LR_CUELMNT_SOV     type ref to /VCXI/CL_VKSC_CUELMNT,
          LR_CUELMNT_DOC_MGR type ref to /VCXI/CL_VKSC_CUELMNT,
          LR_SVCEL_XCOMP     type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_BL_XCOMP        type ref to ZCL_VCXI_F0M_MBQ_BL_XCOMP.


***------------------------------------------------------------------------------------------------
*** Add Specification Overview to Integration Data
    ME->ADD_SOV( exporting IR_SVC      = IR_SVC
                           IR_IDAT_SVC = IR_IDAT_SVC
                 importing EF_ISELF    = LF_IPARE
                           EF_CSELF    = LF_CPARE
                           ER_CUELMNT  = LR_CUELMNT_SOV ).

*** Get X-Component for which the Configuration should be created
    LR_SVCEL_XCOMP = ZCL_VCXI_XCI_IDAT_SVC=>FIND_SVCEL( IR_SVC         = IR_SVC
                                                        IF_LEVEL_START = IS_ACTDAT_CNF-LEVEL_XCOMP ).

*** Fill Integration Data for X-Component through "Sub-Class"
    LR_BL_XCOMP = ZCL_VCXI_F0M_MBQ_BL_XCOMP=>FACTORY( IR_BOB_SDOC    = ME->R_DCO_INPUT->R_BOB_SDOC
                                                      IF_POSNR       = ME->R_DCO_INPUT->F_POSNR
                                                      IR_SVCEL_XCOMP = LR_SVCEL_XCOMP ).
    LR_BL_XCOMP->FILL_IDAT( IF_IPARE       = LF_IPARE
                            IF_CPARE       = LF_CPARE
                            IR_SVC         = IR_SVC
                            IR_IDAT_SVC    = IR_IDAT_SVC
                            IR_CUELMNT_SOV = LR_CUELMNT_SOV
                            IT_MATLI       = ME->R_DCO_INPUT->T_MATLI
                            IT_DMSLI       = ME->R_DCO_INPUT->T_DMSLI ).

***------------------------------------------------------------------------------------------------
*** Add Document Manager
    ME->ADD_DOC_MGR( exporting IR_SVC      = IR_SVC
                               IR_IDAT_SVC = IR_IDAT_SVC
                     importing EF_ISELF    = LF_IPARE
                               EF_CSELF    = LF_CPARE
                               ER_CUELMNT  = LR_CUELMNT_DOC_MGR ).

*** Add DMS Documents where Source is part of Component
    loop at ME->R_DCO_INPUT->T_DMSLI into LS_DMSLI.
      ME->ADD_DOC( exporting IF_IPARE           = LF_IPARE
                             IF_CPARE           = LF_CPARE
                             IR_SVC             = IR_SVC
                             IR_CUELMNT_DOC_MGR = LR_CUELMNT_DOC_MGR
                             IR_IDAT_SVC        = IR_IDAT_SVC
                             IS_DMSLI           = LS_DMSLI
                             IR_SVCEL_XCOMP     = LR_SVCEL_XCOMP ).
    endloop.

  endmethod.
