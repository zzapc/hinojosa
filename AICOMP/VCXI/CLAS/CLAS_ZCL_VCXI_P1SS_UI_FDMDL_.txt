
class ZCL_VCXI_P1SS_UI_FDMDL definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_FDMDL
  create public .

public section.

  constants C_UC_LOAD_BOARD type SYUCOMM value 'LOAD_BOARD' ##NO_TEXT.
  constants C_UC_NAV_SRCIN type SYUCOMM value 'NAV_SRCIN' ##NO_TEXT.
  constants C_UC_PSCALE type SYUCOMM value 'PSCALE' ##NO_TEXT.
  constants C_UC_SCORE_MGR type SYUCOMM value 'SCORE_MGR' ##NO_TEXT.
  data S_FDMDL_VIS type ZVCXI_P1SS_S_FDMDL_VIS read-only .

  methods SHLP_BOARD
    importing
      !IF_TABNAME type DFIES-TABNAME
      !IF_FIELDNAME type DFIES-FIELDNAME
      !IF_DISPLAY type ABAP_BOOL
    changing
      !CF_BOARD type ZVCXI_PCS_BOARD
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_FDMDL_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods GET_REGISTERED_UCOMM
    redefinition .
  methods ON_CTMENU
    redefinition .
protected section.

  data R_GATE_SRCIN type ref to /VCXI/CL_VKSR_GATE .
  data R_GRID_FD_LAMI type ref to ZCL_VCXI_PXSS_GRID_FD_LAMI .
  data R_GRID_FD_PRINT type ref to ZCL_VCXI_PXSS_GRID_FD_PRINT .
  data R_GRID_PRINT_COM type ref to ZCL_VCXI_PXSS_GRID_PRINT_COM .

  methods GET_IELEM_BY_SCREEN
    importing
      !IF_GROUP3 type SCREEN-GROUP3
    returning
      value(RF_IELEM) type ZVCXI_P0SS_IELEM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_LOAD_BOARD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_NAV_SRCIN
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_PSCALE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SCORE_MGR
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN_BOARD
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN_CFG
    importing
      !IR_CUST_PRSTY type ref to ZCL_VCXI_PXSS_CUST_PRSTY
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN_CSTEP_DCUT
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods SET_BOARD_SHLP
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_JOITY
    raising
      /VCXI/CX_CKX .

  methods INIT_VIS
    redefinition .
  methods MAPPING_FROM_VIS
    redefinition .
  methods MAPPING_TO_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_FDMDL definition
class ZCL_VCXI_P1SS_UI_FDMDL implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_FDMDL_BIND'
      exporting
        IR_UI_FDMDL = ME
      importing
        ES_DYNP     = ME->S_DYNP.

***--------------------------------------------------------------------------------------
    if ME->R_BL_FDMDL->F_FDMDL ne ZCL_VCXI_P1SS_BL_FDMDL=>C_FDMDL_CRPRDTL.
***   Create Grid for Printing (Fast Data)
      create object ME->R_GRID_FD_PRINT
        exporting
          IR_GATE        = ME->R_GATE
          IR_UIGATE      = ME->R_UIGATE
          IF_APPL_EVENTS = ME->F_APPL_EVENTS
          IR_BL_FDMDL    = cast #( ME->R_BL_FDMDL )
          IR_GATE_OUT    = ME->R_GATE_OUT.
***   Create Grid for Lamination (Fast Data)
      create object ME->R_GRID_FD_LAMI
        exporting
          IR_GATE        = ME->R_GATE
          IR_UIGATE      = ME->R_UIGATE
          IF_APPL_EVENTS = ME->F_APPL_EVENTS
          IR_BL_FDMDL    = cast #( ME->R_BL_FDMDL )
          IR_GATE_OUT    = ME->R_GATE_OUT.
    else.
***   Create Grid for Print (Communication)
      create object ME->R_GRID_PRINT_COM
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IF_CONTAINER_NAME = 'CC_GRID_PRINT_COM'
          IR_PRINT_COM      = cast #( ME->R_GATE_OUT->R_CLSPR ).
    endif.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Grid
    if ME->R_GRID_FD_PRINT is bound.
      ME->R_GRID_FD_PRINT->DO_FREE( ).
      clear ME->R_GRID_FD_PRINT.
    endif.

    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->DO_FREE( ).
      clear ME->R_GRID_PRINT_COM.
    endif.

    if ME->R_GRID_FD_LAMI is bound.
      ME->R_GRID_FD_LAMI->DO_FREE( ).
      clear ME->R_GRID_FD_LAMI.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_CADLS  type ZVCXI_PXS_CADLS.
    data: LR_CUST_PRSTY type ref to ZCL_VCXI_PXSS_CUST_PRSTY.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***------------------------------------------------------------------------------------------------
        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

***     Customizing Instance for Product Style
        try.
            LR_CUST_PRSTY = ZCL_VCXI_PXSS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = ZCL_VCXI_P1SS_PR_CFG=>C_TPRST_FEFCO
                                                                    IF_PRSTY = ME->S_FDMDL_VIS-FEFCO ).
          catch /VCXI/CX_CKX.
            clear LR_CUST_PRSTY.
        endtry.

***     Get CAD Lock Status
        LF_CADLS = ME->R_PR_FASTD->GET_CADLS( ).

***------------------------------------------------------------------------------------------------
        loop at screen.
          case SCREEN-GROUP1.
***         Finished Good Information
            when 'CFG'.
              ME->MODIFY_SCREEN_CFG( exporting IR_CUST_PRSTY = LR_CUST_PRSTY
                                     changing  CS_SCREEN     = SCREEN ).
***         Die Cut Information
            when 'DCT'.
              ME->MODIFY_SCREEN_CSTEP_DCUT( changing CS_SCREEN = SCREEN ).

***         Board Information
            when 'BOA'.
              ME->MODIFY_SCREEN_BOARD( changing CS_SCREEN = SCREEN ).

          endcase.

***       Adjust based on CAD Lock Status
          if SCREEN-GROUP4 eq 'CAD' and
             ( LF_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_REVISION or
               LF_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_LOCKED ).
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    clear: ME->R_GATE_SRCIN.

    check ME->R_GATE_OUT is bound and
          ME->R_GATE_OUT->F_FREED is initial.

    SUPER->DO_PBO( ).

    ME->SET_BOARD_SHLP( ).

*** Define DropDown Values for Joint Type
    ME->SET_DDVAL_JOITY( ).

*** Refresh Printing Grid
    if ME->R_GRID_FD_PRINT is bound.
      ME->R_GRID_FD_PRINT->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_FD_PRINT->CHECK_CHANGED_DATA( ).
      ME->R_GRID_FD_PRINT->REFRESH_GRID( ).
    endif.
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_PRINT_COM->CHECK_CHANGED_DATA( ).
      ME->R_GRID_PRINT_COM->REFRESH_GRID( ).
    endif.

    if ME->R_GRID_FD_LAMI is bound.
      ME->R_GRID_FD_LAMI->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_FD_LAMI->CHECK_CHANGED_DATA( ).
      ME->R_GRID_FD_LAMI->REFRESH_GRID( ).
    endif.

*** Toolbar for Finished Goods
    if ME->R_BL_FDMDL->F_IFDMV eq ZCL_VCXI_P1SS_BL_FDMDL=>C_IFDMV_SE_DCT.
      ME->INIT_CONTAINER( ).
      ME->INIT_TOOLBAR( ).
    endif.

  endmethod.
  method DO_UPDATE_FDMDL_VIS.

    data: LS_FDMDL_VIS    type ZVCXI_P1SS_S_FDMDL_VIS.
    data: LT_FASTD_XCOMP  type ZVCXI_PXSS_TT_FASTD_XCOMP,
          LT_XCONG        type ZVCXI_PXSS_TT_XCONG,
          LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.
    data: LR_FDMDL_VIS    type ref to DATA.
    field-symbols: <S_FASTD_XCOMP>      type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_FASTD_XCOMP_DATA> type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.


    check ME->R_PR_FASTD is bound.

***------------------------------------------------------------------------------------------------
*** Create Data Reference to allow adjustments to provided data
    create data LR_FDMDL_VIS like IS_FDMDL_VIS.
    assign LR_FDMDL_VIS->* to field-symbol(<S_FDMDL_VIS>).
    <S_FDMDL_VIS> = IS_FDMDL_VIS.

*** "Cast" Vis Structure
    LS_FDMDL_VIS = corresponding #( <S_FDMDL_VIS> ).

***------------------------------------------------------------------------------------------------
*** Get FEFCO customizing
    try.
        data(LR_CUST_PRSTY) = ZCL_VCXI_PXSS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = ZCL_VCXI_P1SS_PR_CFG=>C_TPRST_FEFCO
                                                                      IF_PRSTY = LS_FDMDL_VIS-FEFCO ).
      catch /VCXI/CX_CKX.
        clear: LR_CUST_PRSTY.
    endtry.
    if LR_CUST_PRSTY is bound.
***   Validate Joint Types for Position
      if LR_CUST_PRSTY->CHECK_JOITY( IF_JOIPO = LS_FDMDL_VIS-JOIPO
                                     IF_JOITY = LS_FDMDL_VIS-JOITY ) ne ABAP_TRUE.
        clear LS_FDMDL_VIS-JOITY.
      endif.
***   Initial defaulting on FEFCO change
      if LS_FDMDL_VIS-FEFCO ne ME->S_FDMDL_VIS-FEFCO.
        if LS_FDMDL_VIS-JOITY is initial.
          LR_CUST_PRSTY->GET_JOITY( exporting IF_JOIPO   = LS_FDMDL_VIS-JOIPO
                                    importing EF_DEFAULT = LS_FDMDL_VIS-JOITY ).
        endif.
        if LS_FDMDL_VIS-JOIPO is initial.
          LR_CUST_PRSTY->GET_JOIPO( exporting IF_JOITY   = LS_FDMDL_VIS-JOITY
                                    importing EF_DEFAULT = LS_FDMDL_VIS-JOIPO ).
        endif.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
*** Update generic VIS structure
    <S_FDMDL_VIS> = corresponding #( base ( <S_FDMDL_VIS> ) LS_FDMDL_VIS ).

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( exporting IR_BL_FDMDL = ME->R_BL_FDMDL
                                                           importing ET_XCONG    = LT_XCONG ).

*** Find Component of Gate and its linked Components
    LT_GATE_EXCLUDE = ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Update Fast Data Integration Information based on VIS Structure
    loop at LT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP>-R_GATE ] ).

      loop at <S_FASTD_XCOMP>-T_DATA assigning <S_FASTD_XCOMP_DATA> where R_DATA is bound.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP_DATA>-R_GATE ] ).

        ME->MAPPING_FROM_VIS( exporting IS_FDMDL_VIS        = <S_FDMDL_VIS>
                              changing  CS_FASTD_XCOMP_DATA = <S_FASTD_XCOMP_DATA> ).

***     Plant of Corrugation
        if LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CORR' ] ).
          <S_FASTD_XCOMP>-WERKS = LS_FDMDL_VIS-WERKS_CORR.
        endif.
      endloop.
    endloop.

*** Add/Remove Closing Step
    cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->ADJ_CSTEP_CLOS( exporting IR_GATE_OUT       = ME->R_GATE_OUT
                                                                             IS_FDI_CSTEP_CLOS = corresponding #( <S_FDMDL_VIS> )
                                                                   changing  CT_FASTD_XCOMP    = LT_FASTD_XCOMP ).

*** Adjust by Input Source
    cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->ADJ_SRCIN( exporting IF_SRCIN        = LS_FDMDL_VIS-SRCIN
                                                                        IR_GATE_OUT     = ME->R_GATE_OUT
                                                                        IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                                              changing  CT_FASTD_XCOMP  = LT_FASTD_XCOMP
                                                                        CT_XCONG        = LT_XCONG ).

***------------------------------------------------------------------------------------------------
*** Set Configuration Structure
    ME->R_BL_FDMDL->R_BL_FASTD->SET_STRC( IR_BL_FDMDL    = ME->R_BL_FDMDL
                                          IT_FASTD_XCOMP = LT_FASTD_XCOMP
                                          IT_XCONG       = LT_XCONG ).

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Process Changes in Grid
    if ME->R_GRID_FD_PRINT is bound.
      ME->R_GRID_FD_PRINT->CHECK_CHANGED_DATA( ).
    endif.
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->CHECK_CHANGED_DATA( ).
    endif.
    if ME->R_GRID_FD_LAMI is bound.
      ME->R_GRID_FD_LAMI->CHECK_CHANGED_DATA( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_SCORE_MGR.
        ME->HANDLE_UC_SCORE_MGR( ).
      when C_UC_LOAD_BOARD.
        ME->HANDLE_UC_LOAD_BOARD( ).
      when C_UC_PSCALE.
        ME->HANDLE_UC_PSCALE( ).

    endcase.

*** Navigation
    case SUBSTRING_BEFORE( VAL = IF_UCOMM SUB = '@' ).
      when C_UC_NAV_SRCIN.
        ME->HANDLE_UC_NAV_SRCIN( IF_UCOMM = IF_UCOMM ).
    endcase.

  endmethod.
  method GET_IELEM_BY_SCREEN.

    RF_IELEM = switch #( IF_GROUP3 when 'PLE' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_LENGTH
                                   when 'PWI' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_WIDTH
                                   when 'PHE' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT
                                   when 'PH2' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT2
                                   when 'OLP' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_OVLAP
                                   when 'FDU' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_FDUST
                                   when 'FTU' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_FTUCK ).

  endmethod.
  method GET_REGISTERED_UCOMM.

    RT_UCOMM = value #( ( C_UC_SCORE_MGR )
                        ( C_UC_LOAD_BOARD )
                        ( C_UC_PSCALE )
                        ( C_UC_FOVRR_MAKTX ) ).

  endmethod.
  method HANDLE_UC_LOAD_BOARD.

    data: LF_BOARD type ZVCXI_PCS_BOARD,
          LF_MBOAR type ZVCXI_PCSS_MBOAR,
          LF_WERKS type WERKS_D.
    data: LT_FASTD_XCOMP type ZVCXI_PXSS_TT_FASTD_XCOMP.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


***------------------------------------------------------------------------------------------------
*** Identify Element used for loading
    case type of ME->R_GATE_OUT->R_CLSPR.
      when type ZCL_VCXI_P1SS_PR_CRPRDTL.
        LR_GATE = ME->R_GATE_OUT.
      when others.
***     Get Configuration Structure
        LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

***     Get Source for Input
        cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( exporting IR_GATE_OUT    = ME->R_GATE_OUT
                                                                            IT_FASTD_XCOMP = LT_FASTD_XCOMP
                                                                  importing ER_GATE        = LR_GATE ).
        check LR_GATE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_MS_CRPROC.
    endcase.

***------------------------------------------------------------------------------------------------
*** Call Search Help
    ZCL_VCXI_PCSS_CUST_BOARD=>SHLP_LOAD_BOARD( exporting IF_DCONF  = ME->R_GATE->GET_APPDATA( )->F_DCONF
                                                         IF_LOCKED = ME->R_GATE->IS_LOCKED( )
                                               importing EF_BOARD  = LF_BOARD
                                                         EF_MBOAR  = LF_MBOAR
                                                         EF_WERKS  = LF_WERKS ).

***------------------------------------------------------------------------------------------------
*** Load the selected Board
    check LF_BOARD is not initial and
          LF_MBOAR is not initial.
    case type of LR_GATE->R_CLSPR.
      when type ZCL_VCXI_P1SS_PR_CRPRDTL.
        cast ZCL_VCXI_P1SS_PR_CRPRDTL( LR_GATE->R_CLSPR )->LOAD_BOARD( IF_BOARD = LF_BOARD
                                                                       IF_WERKS = LF_WERKS
                                                                       IF_MBOAR = LF_MBOAR ).
      when type ZCL_VCXI_P1SS_PR_MS_CRPROC.
        cast ZCL_VCXI_P1SS_PR_MS_CRPROC( LR_GATE->R_CLSPR )->LOAD_BOARD( IF_BOARD = LF_BOARD
                                                                         IF_WERKS = LF_WERKS
                                                                         IF_MBOAR = LF_MBOAR ).
    endcase.

  endmethod.
  method HANDLE_UC_NAV_SRCIN.

    try.
        check ME->F_APPL_EVENTS eq ABAP_TRUE.

        check ME->R_GATE_SRCIN is bound and
              ME->R_GATE_SRCIN->F_FREED is initial and
              TO_UPPER( ME->R_GATE_SRCIN->F_GATKY ) eq SUBSTRING_AFTER( VAL = IF_UCOMM SUB = '@' ).

***     Check Element has an own UI
        check ME->R_GATE_SRCIN->GET_CLSUI( ) is not initial.
        ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = ME->R_GATE_SRCIN ).

***     Expand and select in Tree
        ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = ME->R_GATE_SRCIN->F_GATKY ).
        ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = ME->R_GATE_SRCIN->F_GATKY ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method HANDLE_UC_PSCALE.

    data: LT_FASTD_XCOMP type ZVCXI_PXSS_TT_FASTD_XCOMP.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE.


***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

*** Get Source for Input
    cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( exporting IR_GATE_OUT    = ME->R_GATE_OUT
                                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP
                                                              importing ER_GATE        = LR_GATE ).
    check LR_GATE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_MS_CRPROC.

***--------------------------------------------------------------------------------------
*** Call Popup with Price Scales
    ZCL_VCXI_XCS_POPUP_PSCALE=>START( IR_GATE   = LR_GATE
                                      IR_UIGATE = ME->R_UIGATE
                                      IF_LOCKED = cast ZCL_VCXI_P1SS_PR_MS_CRPROC( LR_GATE->R_CLSPR )->ZIF_VCXI_XCS_PSCALE_MGR~IS_CHANGEABLE( ) ).

  endmethod.
  method HANDLE_UC_SCORE_MGR.

    data: LT_GATE         type        /VCXI/VKSR_TT_GATE.


***--------------------------------------------------------------------------------------
*** Get Score Manager Provider of FG/Part Gate
    check ME->R_GATE_OUT is bound.
    LT_GATE = ME->R_GATE_OUT->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_IPRVT_PX_SCORE_MGR
                                         IF_INUSE = ABAP_TRUE ).
    check LT_GATE is not initial.

***--------------------------------------------------------------------------------------
*** Call Popup with Score Manager
    ZCL_VCXI_PXSS_POPUP_SCORE_MGR=>START( IR_GATE        = LT_GATE[ 1 ]
                                          IR_UIGATE      = ME->R_UIGATE
                                          IF_APPL_EVENTS = ABAP_TRUE ).

  endmethod.
  method INIT_VIS.

    data: LS_FASTD_XCOMP      type ZVCXI_PXSS_S_FASTD_XCOMP,
          LS_FASTD_XCOMP_DATA type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.
    data: LT_FASTD_XCOMP  type ZVCXI_PXSS_TT_FASTD_XCOMP,
          LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.


    free: ME->S_FDMDL_VIS.
    check ME->R_PR_FASTD is bound.

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

*** Find Component of Gate and its linked Components
    LT_GATE_EXCLUDE = ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Get Source for Input
    ME->S_FDMDL_VIS-SRCIN = cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( exporting IR_GATE_OUT     = ME->R_GATE_OUT
                                                                                                IT_FASTD_XCOMP  = LT_FASTD_XCOMP
                                                                                                IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                                                                      importing ER_GATE         = ME->R_GATE_SRCIN ).

*** Fill VIS Structure based on Fast Data Integration Information
    loop at LT_FASTD_XCOMP into LS_FASTD_XCOMP.
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP-R_GATE ] ).

      loop at LS_FASTD_XCOMP-T_DATA into LS_FASTD_XCOMP_DATA where R_DATA is bound.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP_DATA-R_GATE ] ).
        ME->MAPPING_TO_VIS( exporting IS_FASTD_XCOMP_DATA = LS_FASTD_XCOMP_DATA
                            changing  CS_FDMDL_VIS        = ME->S_FDMDL_VIS ).
      endloop.

***   Plant of Corrugation
      if LINE_EXISTS( LS_FASTD_XCOMP-T_DATA[ ISELF = 'CORR' ] ).
        ME->S_FDMDL_VIS-WERKS_CORR = LS_FASTD_XCOMP-WERKS.
      endif.
    endloop.

***------------------------------------------------------------------------------------------------
*** FEFCO Description
    if ME->S_FDMDL_VIS-FEFCO is not initial.
      ME->S_FDMDL_VIS-FEFCO_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_PRSTY_DESCR( IF_TPRST = ZCL_VCXI_P1SS_PR_CFG=>C_TPRST_FEFCO
                                                                               IF_PRSTY = ME->S_FDMDL_VIS-FEFCO ).
    endif.

  endmethod.
  method MAPPING_FROM_VIS.

    data: LS_FDMDL_VIS type ZVCXI_P1SS_S_FDMDL_VIS.


    SUPER->MAPPING_FROM_VIS( exporting IS_FDMDL_VIS        = IS_FDMDL_VIS
                             changing  CS_FASTD_XCOMP_DATA = CS_FASTD_XCOMP_DATA ).


    assign CS_FASTD_XCOMP_DATA-R_DATA->* to field-symbol(<S_DATA>).
    check SY-SUBRC eq 0.

    LS_FDMDL_VIS = corresponding #( IS_FDMDL_VIS ).

*** Fanfold Dimension
    assign component 'FANDM' of structure <S_DATA> to field-symbol(<F_FANDM>).
    if SY-SUBRC eq 0.
      <F_FANDM> = cond #( when LS_FDMDL_VIS-FANDM_FANHE eq ABAP_TRUE then ZCL_VCXI_P1SS_PR_CFG=>C_FANDM_FANHE
                          when LS_FDMDL_VIS-FANDM_FANLE eq ABAP_TRUE then ZCL_VCXI_P1SS_PR_CFG=>C_FANDM_FANLE
                          when LS_FDMDL_VIS-FANDM_FANSH eq ABAP_TRUE then ZCL_VCXI_P1SS_PR_CFG=>C_FANDM_FANSH ).
    endif.

  endmethod.
  method MAPPING_TO_VIS.

*** Standard Mapping
    SUPER->MAPPING_TO_VIS( exporting IS_FASTD_XCOMP_DATA = IS_FASTD_XCOMP_DATA
                           changing  CS_FDMDL_VIS        = CS_FDMDL_VIS ).

*** Additional Mapping
    assign IS_FASTD_XCOMP_DATA-R_DATA->* to field-symbol(<S_DATA>).
    check SY-SUBRC eq 0.

*** Fanfold Dimension
    assign component 'FANDM' of structure <S_DATA> to field-symbol(<F_FANDM>).
    if SY-SUBRC eq 0.
      case <F_FANDM>.
        when ZCL_VCXI_P1SS_PR_CFG=>C_FANDM_FANHE.
          ME->S_FDMDL_VIS-FANDM_FANHE = ABAP_TRUE.
        when ZCL_VCXI_P1SS_PR_CFG=>C_FANDM_FANLE.
          ME->S_FDMDL_VIS-FANDM_FANLE = ABAP_TRUE.
        when ZCL_VCXI_P1SS_PR_CFG=>C_FANDM_FANSH.
          ME->S_FDMDL_VIS-FANDM_FANSH = ABAP_TRUE.
      endcase.
    endif.

  endmethod.
  method MODIFY_SCREEN_BOARD.

***------------------------------------------------------------------------------------------------
*** Procurement
    if ME->S_FDMDL_VIS-SRCIN eq ZCL_VCXI_P1SS_BL_FDMDL=>C_SRCIN_PROC.
***   Hide Fields that are only related to Corrugated
      if CS_SCREEN-GROUP2 eq 'COR'.
        move 0 to SCREEN-ACTIVE.
      endif.

***   Hide Material Description Override Flag if undefined
      if CS_SCREEN-NAME cp '*-FOVRR_MAKTXXPR' and
         ME->S_FDMDL_VIS-FOVRR_MAKTXXPR eq ABAP_UNDEFINED.
        move 0 to SCREEN-ACTIVE.
      endif.
***   Disable Material Description if generated
      if CS_SCREEN-NAME cp '*-MAKTXXPR' and
         ME->S_FDMDL_VIS-FOVRR_MAKTXXPR eq ABAP_FALSE.
        move 0 to SCREEN-INPUT.
      endif.

***   If No Dummy Material, then set to read only
      if ME->S_FDMDL_VIS-DUMMYXPR eq ABAP_FALSE.
        if CS_SCREEN-GROUP3 eq 'DUM'.
          CS_SCREEN-INPUT = 0.
        endif.
      else.
***     If Dummy Material set the Prodcurement Option
        if CS_SCREEN-GROUP2 eq 'CPR' and
           CS_SCREEN-GROUP3 eq 'PUR'.
          CS_SCREEN-INPUT = 0.
        endif.
      endif.

***   Hide Purchasing Infos (e.g Vendor) if not purchased
      if SCREEN-GROUP3 eq 'APU'.  "Acitve Procurement
        case ME->S_FDMDL_VIS-PURCHXPR.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
            if SCREEN-GROUP4 eq 'PRC'. "Price
              move 1 to SCREEN-INVISIBLE.
              move 0 to SCREEN-ACTIVE.
            endif.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
        endcase.
      endif.

***   Hide Price Scale Override Flag if undefined
      if SCREEN-NAME cp '*-FPSMOXPR' and
         ME->S_FDMDL_VIS-FPSMOXPR eq ABAP_UNDEFINED.
        move 0 to SCREEN-ACTIVE.
      endif.

***   Reopen Price Scale Button (as Info)
      if SCREEN-NAME eq '0100BTN_PSCALE' and
         SCREEN-INVISIBLE eq 0.
        move 1 to SCREEN-INPUT.
      endif.

***------------------------------------------------------------------------------------------------
*** Corrugation
    else.
***   Hide Fields that are only related to Procurement
      if CS_SCREEN-GROUP2 eq 'CPR'.
        move 0 to SCREEN-ACTIVE.
      endif.

***   Disable Corrugation Plant if it's not a SFG
      if CS_SCREEN-NAME cp '*-WERKS_CORR' and
         ME->S_FDMDL_VIS-SRCIN ne ZCL_VCXI_P1SS_BL_FDMDL=>C_SRCIN_SFG.
        SCREEN-INPUT = 0.
      endif.

***   Disable Production Board ID (if maintained combined)
      if CS_SCREEN-NAME cp '*-PRBOA' and
         ZCL_VCXI_P1SS_PR_BOARD=>F_MBOAR_S eq ZCL_VCXI_P1SS_PR_BOARD=>F_MBOAR_P.
        move 0 to SCREEN-INPUT.
      endif.
    endif.

  endmethod.
  method MODIFY_SCREEN_CFG.

*** Hide Material Description Override Flag if undefined
    if CS_SCREEN-NAME cp '*-FOVRR_MAKTX' and
       ME->S_FDMDL_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
      CS_SCREEN-ACTIVE = 0.
    endif.
*** Disable Material Description if generated
    if CS_SCREEN-NAME cp '*-MAKTX' and
       ME->S_FDMDL_VIS-FOVRR_MAKTX eq ABAP_FALSE.
      move 0 to SCREEN-INPUT.
    endif.

*** Hide Component Ratio
    if CS_SCREEN-NAME cp '*-COMPR' and
       ME->S_FDMDL_VIS-COMPR_ALLOWED ne ABAP_TRUE.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Customer Material Info if material exists
    if CS_SCREEN-GROUP2 = 'CMI' and
       ME->S_FDMDL_VIS-MATNR is not initial.
      CS_SCREEN-INPUT  = 0.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Custom Product Sheet W/L
    if CS_SCREEN-GROUP2 eq 'CST'.
      if IR_CUST_PRSTY is not bound or
         IR_CUST_PRSTY->GET_FCUSD( ) ne ABAP_TRUE.
        CS_SCREEN-ACTIVE = 0.
      endif.
    endif.

*** Hide Joint Type if closing is not allowed
    if CS_SCREEN-GROUP2 eq 'NCL' and
      IR_CUST_PRSTY is bound and
      IR_CUST_PRSTY->GET_JOITY( IF_JOIPO = ME->S_FDMDL_VIS-JOIPO ) is initial.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Joint Dimension if no Joint Flap is defined
    if CS_SCREEN-GROUP2 eq 'NJO' and
       ME->S_FDMDL_VIS-JOIPO eq ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_JOIPO_NONE.
      CS_SCREEN-ACTIVE = 0.
    endif.

*** Hide Part of Box if not defined by Product Style
    if CS_SCREEN-GROUP2 eq 'BXP'.
      if IR_CUST_PRSTY is not bound or
         IR_CUST_PRSTY->GET_BOXPA( ) is initial.
        CS_SCREEN-ACTIVE = 0.
      endif.
    endif.

*** Adjust based on Product Style Element
    if CS_SCREEN-GROUP2 eq 'PSE'.
      if IR_CUST_PRSTY is bound.
        if IR_CUST_PRSTY->IS_IELEM_USED( IF_IELEM = ME->GET_IELEM_BY_SCREEN( IF_GROUP3 = SCREEN-GROUP3 )

                                         IF_BOXPA = ME->S_FDMDL_VIS-BOXPA ) eq ABAP_FALSE.
          CS_SCREEN-ACTIVE = 0.
        endif.
      else.
        CS_SCREEN-ACTIVE = switch #( ME->GET_IELEM_BY_SCREEN( IF_GROUP3 = SCREEN-GROUP3 )
                                         when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_LENGTH then 1
                                         when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_WIDTH  then 1
                                         when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT then 1
                                                                                       else 0 ).
      endif.
    endif.

*** Disable Fanfold Dimensions
    case ABAP_TRUE.
      when ME->S_FDMDL_VIS-FANDM_FANHE.
        if    SCREEN-GROUP4 eq 'FLE'
           or SCREEN-GROUP4 eq 'FSH' .
          move 0 to SCREEN-INPUT.
        endif.
      when ME->S_FDMDL_VIS-FANDM_FANLE.
        if    SCREEN-GROUP4 eq 'FHE'
           or SCREEN-GROUP4 eq 'FSH' .
          move 0 to SCREEN-INPUT.
        endif.
      when ME->S_FDMDL_VIS-FANDM_FANSH.
        if    SCREEN-GROUP4 eq 'FHE'
           or SCREEN-GROUP4 eq 'FLE' .
          move 0 to SCREEN-INPUT.
        endif.
    endcase.

  endmethod.
  method MODIFY_SCREEN_CSTEP_DCUT.

*** Disable fields if not is nested
    if SCREEN-GROUP2 eq 'NES' and
       ME->S_FDMDL_VIS-FNEST ne ABAP_TRUE.
      move 0 to SCREEN-INPUT.
    endif.

*** Disable fields if tool is released
    if SCREEN-GROUP3 eq 'TIR' and
       ME->S_FDMDL_VIS-DCTTN_RELEA eq ABAP_TRUE.
      move 0 to SCREEN-INPUT.
    endif.

  endmethod.
  method ON_CTMENU.

    check ME->F_APPL_EVENTS eq ABAP_TRUE.

    SUPER->ON_CTMENU( IR_MENU = IR_MENU ).

*** Navigate to Input Source
    if ME->R_GATE_SRCIN is bound.
      IR_MENU->ADD_FUNCTION( FCODE = C_UC_NAV_SRCIN && '@' && ME->R_GATE_SRCIN->F_GATKY
                             TEXT  = REPLACE( VAL = 'Navigate to &1'(M01) SUB = '&1' WITH = ME->R_GATE_SRCIN->GET_DESCR( ) ) ).
    endif.

  endmethod.
  method SET_BOARD_SHLP.

    data: LF_DCONF    type DATS,
          LF_RELEASED type ABAP_BOOL.

***----------------------------------------------------------------------------
*** Set Parameter Date Config
    LF_DCONF = ME->R_GATE->GET_APPDATA( )->F_DCONF.
    set parameter id 'ZVCXI_XCS_DCONF' field LF_DCONF.

*** Set Plant as Parameter
    set parameter id 'WRK' field ME->S_FDMDL_VIS-WERKS_CORR.

*** Set only Released BoardIDs are allowed
    move ABAP_TRUE to LF_RELEASED.
    set parameter id 'ZVCXI_PCS_RELEASED' field LF_RELEASED.

  endmethod.
  method SET_DDVAL_JOITY.

    data: LS_TC341 type ZVCXI_P0S_TC341.
    data: LT_TC341 type ZCL_VCXI_P0SS_CUST_PRSTY=>YT_TC341,
          LT_VALUE type VRM_VALUES.
    data: LR_CUST_PRSTY type ref to ZCL_VCXI_P0SS_CUST_PRSTY.


***--------------------------------------------------------------------------------------
*** Get Product Style
    try.
        LR_CUST_PRSTY = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = ZCL_VCXI_P1SS_PR_CFG=>C_TPRST_FEFCO
                                                                IF_PRSTY = ME->S_FDMDL_VIS-FEFCO ).
      catch /VCXI/CX_CKX.
        clear: LR_CUST_PRSTY.
    endtry.
    check LR_CUST_PRSTY is bound.

***--------------------------------------------------------------------------------------
*** Get Valid Joint Types for Position
    LR_CUST_PRSTY->GET_JOITY_JOIPO( exporting IF_JOIPO = ME->S_FDMDL_VIS-JOIPO
                                    importing ET_TC341 = LT_TC341 ).

*** Filter by Product Style
    delete LT_TC341 where not JOITY in LR_CUST_PRSTY->GET_VALID_JOITY( ).

    loop at LT_TC341 into LS_TC341.
      insert value #( KEY  = LS_TC341-JOITY
                      TEXT = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_DESCR( IF_JOITY = LS_TC341-JOITY )
                    ) into table LT_VALUE.
    endloop.

***--------------------------------------------------------------------------------------
*** Set to DropDown List
    call function 'VRM_SET_VALUES'
      exporting
        ID     = 'ZVCXI_P1SS_S_FDMDL_VIS-JOITY'
        VALUES = LT_VALUE.

  endmethod.
method SHLP_BOARD.

  data: LF_DCONF    type DATS,
        LF_RELEASED type ABAP_BOOL,
        LF_SUBRC    type I.
  data: LS_SHLP type  SHLP_DESCR.
  data: LT_RETURN type table of DDSHRETVAL.


***--------------------------------------------------------------------------------------
*** Set Parameter Date Config
  LF_DCONF = ME->R_GATE->GET_APPDATA( )->F_DCONF.
  set parameter id 'ZVCXI_XCS_DCONF' field LF_DCONF.

*** Set Plant as Parameter
  set parameter id 'WRK' field ME->S_FDMDL_VIS-WERKS_CORR.

*** Set Parameter of Valid Board Types
  set parameter id 'ZVCXI_PCS_TBOAR' field ME->S_FDMDL_VIS-VALID_TBOAR.

*** Set only Released BoardIDs are allowed
  move ABAP_TRUE to LF_RELEASED.
  set parameter id 'ZVCXI_PCS_RELEASED' field LF_RELEASED.


***--------------------------------------------------------------------------------------
*** Determine the search help of Board IDs
  call function 'F4IF_DETERMINE_SEARCHHELP'
    exporting
      TABNAME           = IF_TABNAME
      FIELDNAME         = IF_FIELDNAME
    importing
      SHLP              = LS_SHLP
    exceptions
      FIELD_NOT_FOUND   = 1
      NO_HELP_FOR_FIELD = 2
      INCONSISTENT_HELP = 3.
  check SY-SUBRC eq 0.

***--------------------------------------------------------------------------------------
*** Show all Boards for Sales Boards
  if LS_SHLP-SHLPNAME eq 'ZVCXI_PCSS_SABOA'.
    call function 'F4IF_FIELD_VALUE_REQUEST'
      exporting
        TABNAME           = IF_TABNAME
        FIELDNAME         = IF_FIELDNAME
        DYNPPROG          = SY-REPID
        DYNPNR            = SY-DYNNR
        DYNPROFIELD       = conv DYNFNAM( IF_TABNAME && '-' && IF_FIELDNAME )
        DISPLAY           = IF_DISPLAY
      tables
        RETURN_TAB        = LT_RETURN
      exceptions
        FIELD_NOT_FOUND   = 1
        NO_HELP_FOR_FIELD = 2
        INCONSISTENT_HELP = 3
        NO_VALUES_FOUND   = 4.
    check SY-SUBRC eq 0 and
          IF_DISPLAY ne ABAP_TRUE.
  else.
*** Filter by Sales Board
    append value #( SHLPFIELD = 'SABOA'
                    SIGN      = 'I'
                    OPTION    = 'EQ'
                    LOW       = ME->S_FDMDL_VIS-SABOA
                  ) to LS_SHLP-SELOPT.

*** Assigned Production Boards
    call function 'F4IF_START_VALUE_REQUEST'
      exporting
        SHLP          = LS_SHLP
        DISPONLY      = IF_DISPLAY
      importing
        RC            = LF_SUBRC
      tables
        RETURN_VALUES = LT_RETURN.
    check LF_SUBRC eq 0 and
          IF_DISPLAY ne ABAP_TRUE.
  endif.

***--------------------------------------------------------------------------------------
*** Return selected Board
  check LT_RETURN is not initial.
  CF_BOARD = value #( LT_RETURN[ 1 ]-FIELDVAL optional ).

endmethod.
