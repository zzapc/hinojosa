
class ZCL_VCXI_XCA_MWB_CLDUI definition
  public
  abstract
  create public .

public section.

  constants C_ICON_GREEN type CLICON value 'ICON_GREEN_LIGHT' ##NO_TEXT.
  constants C_ICON_LOCKED type CLICON value 'ICON_LOCKED' ##NO_TEXT.
  constants C_ICON_RED type CLICON value 'ICON_RED_LIGHT' ##NO_TEXT.
  constants C_ICON_UNLOCKED type CLICON value 'ICON_UNLOCKED' ##NO_TEXT.
  constants C_ICON_YELLOW type CLICON value 'ICON_YELLOW_LIGHT' ##NO_TEXT.
  constants C_UC_SAVE type SYUCOMM value 'SAVE' ##NO_TEXT.
  data R_CLMAT type ref to ZCL_VCXI_XCA_MWB_CLMAT read-only .
  data R_UIFW type ref to ZCL_VCXI_XCA_MWB_UIFW read-only .
  data S_DUI_VIS type ZVCXI_XCA_MWB_S_DUI_VIS read-only .
  data S_DYNP type /VCXI/CKX_S_DYNP_KEY read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_DUI_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to ZCL_VCXI_XCA_MWB_UIFW
      !IR_CLMAT type ref to ZCL_VCXI_XCA_MWB_CLMAT
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods GET_ICON_STATUS
    exporting
      !EF_VCSTA type CLICON
      !EF_VCLOCK type CLICON
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_OPEN_SVC type SYUCOMM value 'OPEN_SVC' ##NO_TEXT.

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
  methods CREATE_ICON_TECH
    importing
      !IF_ICNAM type CLICON
      !IF_ICINF type ICONQUICK
    returning
      value(RF_ICRES) type CLICON
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCA_MWB_CLDUI definition
class ZCL_VCXI_XCA_MWB_CLDUI implementation.
  method CONSTRUCTOR.

    ME->R_UIFW  = IR_UIFW.
    ME->R_CLMAT = IR_CLMAT.

*** Register as Detail Screen
    ME->R_UIFW->REGISTER_CLDUI( IR_CLDUI = ME ).

  endmethod.
method CREATE_ICON_TECH.

  call function 'ICON_CREATE'
    exporting
      NAME       = IF_ICNAM
      INFO       = IF_ICINF
      ADD_STDINF = ' '
    importing
      result     = RF_ICRES
    exceptions
      others     = 0.

endmethod.
  method DO_FREE.

*** Unregister as Detail Screen from UI Framework
    ME->R_UIFW->UNREGISTER_CLDUI( IR_CLDUI = ME ).

*** Unlock Material Object when leaving change mode
    if ME->R_CLMAT->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
      ME->R_CLMAT->/VCXI/IF_CKX_OBJECT_LOCKING~DO_UNLOCK( ).
    endif.

    free: ME->R_CLMAT,
          ME->R_UIFW.

  endmethod.
  method DO_PBO.

*** Initialize Vis. Structure
    ME->INIT_VIS( ).

*** Modify Screen
    ME->MODIFY_SCREEN( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_DUI_VIS type ZVCXI_XCA_MWB_S_DUI_VIS.


    check ME->R_CLMAT is bound.

*** "Cast" Vis Structure
    move-corresponding IS_DUI_VIS to LS_DUI_VIS.

***--------------------------------------------------------------------------------------
*** Material Description
    if ME->S_DUI_VIS-MAKTX ne LS_DUI_VIS-MAKTX.
      ME->R_CLMAT->SET_MAKTX( IF_MAKTX = LS_DUI_VIS-MAKTX ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    check ME->R_CLMAT is bound.

*** Forward User Command to Material
    ME->R_CLMAT->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = IF_UCOMM ).

  endmethod.
  method GET_ICON_STATUS.

    data: LF_VCSTA type ZVCXI_XCI_VCSTA.
    data: LR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT.


    check ME->R_CLMAT is bound.
    LR_BOB_MAT = ME->R_CLMAT->GET_BOB_MAT( ).
    check LR_BOB_MAT is bound.

    LF_VCSTA = LR_BOB_MAT->GET_VCSTA( ).

***--------------------------------------------------------------------------------------
*** If VC is locked then status icon is always red
    if ME->R_CLMAT->GET_VCLOCK( ) eq ABAP_TRUE.
      EF_VCSTA = CREATE_ICON_TECH( IF_ICNAM = C_ICON_RED
                                   IF_ICINF = text-T01 ).

      EF_VCLOCK = CREATE_ICON_TECH( IF_ICNAM = C_ICON_UNLOCKED
                                    IF_ICINF = text-T05 ).
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Set the new Icon statuses
    case LF_VCSTA.
      when 'V'.
        EF_VCSTA = CREATE_ICON_TECH( IF_ICNAM = C_ICON_GREEN
                                     IF_ICINF = text-T02 ).

        EF_VCLOCK = CREATE_ICON_TECH( IF_ICNAM = C_ICON_LOCKED
                                      IF_ICINF = text-T04 ).

      when 'I'.
        EF_VCSTA = CREATE_ICON_TECH( IF_ICNAM = C_ICON_YELLOW
                                     IF_ICINF = text-T03 ).

        EF_VCLOCK = CREATE_ICON_TECH( IF_ICNAM = C_ICON_LOCKED
                                      IF_ICINF = text-T04 ).

      when 'L'.
        EF_VCSTA = CREATE_ICON_TECH( IF_ICNAM = C_ICON_RED
                                     IF_ICINF = text-T01 ).

        EF_VCLOCK = CREATE_ICON_TECH( IF_ICNAM = C_ICON_UNLOCKED
                                      IF_ICINF = text-T05 ).

        ME->R_CLMAT->SET_VCLOCK( ABAP_TRUE ).

    endcase.

  endmethod.
  method INIT_VIS.

    data: LR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT.


    clear: ME->S_DUI_VIS.
    check ME->R_CLMAT is bound.

    LR_BOB_MAT = ME->R_CLMAT->GET_BOB_MAT( ).

    ME->S_DUI_VIS-MATNR     = LR_BOB_MAT->GET_MATNR( ).
    ME->S_DUI_VIS-MAKTX     = ME->R_CLMAT->/VCXI/IF_CKX_OBJECT~GET_DESCR( ).
    ME->S_DUI_VIS-S_ORGDATA = ME->R_CLMAT->GET_ORGDATA( ).

*** Get Configurable Material and Icons Status
    ME->S_DUI_VIS-STDPD = LR_BOB_MAT->S_PLANTDATA-PS_CONF_MAT.
    ME->GET_ICON_STATUS( importing EF_VCSTA  = ME->S_DUI_VIS-VCSTA
                                   EF_VCLOCK = ME->S_DUI_VIS-VCLOCK ).

  endmethod.
  method MODIFY_SCREEN.

*** Check if Material has configuration
    data(LF_CONFIG) = ME->R_CLMAT->IS_CONFIGURABLE( ).


    loop at screen.
      if ME->R_CLMAT->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
        move 0 to SCREEN-INPUT.
      endif.

***   Ensure Material is not changeable
      if SCREEN-GROUP1 eq 'MAT' and
         ME->R_CLMAT->IS_MATNR_CHANGEABLE( ) ne ABAP_TRUE.
        move 0 to SCREEN-INPUT.
      endif.

***   Info Buttons should be active always
      if SCREEN-GROUP1 eq 'INF'.
        move 1 to SCREEN-INPUT.
      endif.

***   Hide VC Information, if it has no configuration
      if SCREEN-GROUP2 = 'VC'.
        if LF_CONFIG ne ABAP_TRUE.
          move 0 to SCREEN-INPUT.
          move 1 to SCREEN-INVISIBLE.
        endif.
      endif.

      modify screen.
    endloop.

  endmethod.
