
class ZCL_VCXI_XCSS_PR_DOC_MGR definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_DOC_MGR type /VCXI/VKSC_IPRVT value 'ZVCXI_XCSS_DOC_MGR' ##NO_TEXT.

  methods GET_DOKAR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE optional
    exporting
      !ET_DOKAR type ZVCXI_XCSS_TT_DOKAR
    returning
      value(RF_DOKAR) type DOKAR
    raising
      /VCXI/CX_CKX .
  methods ADD_DOCS
    importing
      !IT_DOC_KEY type ZVCXI_XCS_TT_DOC_KEY
      !IF_POSID type /VCXI/VKSR_POSID optional
    returning
      value(RT_GATE) type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_DOC_KEY
    exporting
      !ET_GATE type /VCXI/VKSR_TT_GATE
    returning
      value(RT_DOC_KEY) type ZVCXI_XCS_TT_DOC_KEY
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_POSID_5 type /VCXI/VKSR_POSID value 5 ##NO_TEXT.
private section.
endclass. "ZCL_VCXI_XCSS_PR_DOC_MGR definition
class ZCL_VCXI_XCSS_PR_DOC_MGR implementation.
  method ADD_DOCS.

    data: LS_DOC_KEY type ZVCXI_XCS_S_DOC_KEY.
    data: LT_DOC_KEY type ZVCXI_XCS_TT_DOC_KEY,
          LT_GATE    type /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to  /VCXI/CL_VKSR_GATE.


*** Get existing Document Keys
    LT_DOC_KEY = ME->GET_DOC_KEY( importing ET_GATE = LT_GATE ).

*** Add Documents
    loop at IT_DOC_KEY into LS_DOC_KEY.

***   Don't create duplicates
      if LINE_EXISTS( LT_DOC_KEY[ TABLE_LINE = LS_DOC_KEY ] ).
        loop at LT_GATE into LR_GATE.
          if cast ZCL_VCXI_XCSS_PR_DOC( LR_GATE->R_CLSPR )->GET_DOC_KEY( ) eq LS_DOC_KEY.
            append LR_GATE to RT_GATE.
            exit.
          endif.
        endloop.
      else.
***     Create Document Provider
        LR_GATE = ME->R_GATE->CREATE_ELEMENT( IF_ID = conv #( LS_DOC_KEY-DOKAR ) ).
        append LR_GATE to RT_GATE.
        if LR_GATE->IS_INUSE( ) eq ABAP_FALSE.
          LR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).
        endif.
        if IF_POSID is supplied.
          LR_GATE->SET_POSID( IF_POSID = IF_POSID ).
        endif.

***     Set Values
        cast ZCL_VCXI_XCSS_PR_DOC( LR_GATE->R_CLSPR )->SET_DOC_KEY( IF_DOKNR = LS_DOC_KEY-DOKNR
                                                                    IF_DOKTL = LS_DOC_KEY-DOKTL
                                                                    IF_DOKVR = LS_DOC_KEY-DOKVR ).

***     Add to list of existing documents
        append LS_DOC_KEY to LT_DOC_KEY.
        append LR_GATE    to LT_GATE.
      endif.

    endloop.

*** Reorg Positions of Documents if a new document was created
    if LR_GATE is bound.
      LR_GATE->REORG_POSID( ).
    endif.

  endmethod.
  method GET_DOC_KEY.

    data: LR_GATE            type ref to  /VCXI/CL_VKSR_GATE.


*** Get Gates of Documents
    ET_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSS_PR_DOC=>C_IPRVT_DOC
                                     IF_INUSE  = ABAP_TRUE ).

    loop at ET_GATE into LR_GATE.
***   Colllect Document Key
      append cast ZCL_VCXI_XCSS_PR_DOC( LR_GATE->R_CLSPR )->GET_DOC_KEY( ) to RT_DOC_KEY.
    endloop.

  endmethod.
  method GET_DOKAR.

    data: LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.


***--------------------------------------------------------------------------------------
*** Get Document Provider Types
    if IR_GATE is supplied.
      LT_PRVDR_DEF = IR_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_XCSS_PR_DOC=>C_IPRVT_DOC
                                             IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_ALL ).
    else.
      LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_XCSS_PR_DOC=>C_IPRVT_DOC
                                                IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
    endif.

    if LT_PRVDR_DEF is initial.
***   No Dokument Type defined.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCSS'
                                            IF_MSGNO = '404' ).
    endif.

***--------------------------------------------------------------------------------------
*** Convert to table of Document Types
    loop at LT_PRVDR_DEF into data(LS_PRVDR_DEF).
      insert corresponding #( LS_PRVDR_DEF mapping DOKAR  = ID
                                                   DARTXT = DESCR
                            ) into table ET_DOKAR.
    endloop.

***--------------------------------------------------------------------------------------
*** Return single Document Type
    if RF_DOKAR is requested.
      if LINES( ET_DOKAR ) eq 1.
        RF_DOKAR = ET_DOKAR[ 1 ].
      else.
***     More than one Document Type has been defined.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                              IF_MSGID = 'ZVCXI_XCSS'
                                              IF_MSGNO = '405' ).
      endif.
    endif.

  endmethod.
