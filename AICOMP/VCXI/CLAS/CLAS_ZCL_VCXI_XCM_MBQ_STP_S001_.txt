
class ZCL_VCXI_XCM_MBQ_STP_S001 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  create public .

public section.

  methods CHECK_BEFORE_CONTINUE
    redefinition .
  methods EXECUTE
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S001 definition
class ZCL_VCXI_XCM_MBQ_STP_S001 implementation.
  method CHECK_BEFORE_CONTINUE.

    data: LR_BOB_SDOC  type ref to ZCL_VCXI_XCI_BOB_SDOC.

*** Check that Sales Document NOT changed
    create object LR_BOB_SDOC.
    LR_BOB_SDOC->INIT_FROM_DB( IF_VBELN      = ME->R_DCO_INPUT->S_START-VBELN
                               IS_ORDER_VIEW = value #( HEADER     = ABAP_TRUE
                                                        ITEM       = ABAP_TRUE
                                                        SDSCHEDULE = ABAP_TRUE
                                                        BUSINESS   = ABAP_TRUE
                                                        PARTNER    = ABAP_TRUE
                                                        SDCOND     = ABAP_TRUE
                                                        CONFIGURE  = ABAP_TRUE ) ).

*** Business Object not Similar
    check LR_BOB_SDOC->COMPARE( IR_BOB_SDOC = ME->R_DCO_INPUT->R_BOB_SDOC ) eq ABAP_FALSE.

*** Sales Document changed. Restart not possible.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGID = 'ZVCXI_XCM_MBQ'
                                          IF_MSGTY = 'E'
                                          IF_MSGNO = '010' ).

  endmethod.
  method EXECUTE.

    data: LF_TEMP type ABAP_BOOL.
    data: LR_BOB_SDOC type ref to ZCL_VCXI_XCI_BOB_SDOC.


    try.
***------------------------------------------------------------------------------------------------
***     Create Business Object for Sales Document
        create object LR_BOB_SDOC.
        LR_BOB_SDOC->INIT_FROM_DB( IF_VBELN = ME->R_DCO_INPUT->S_START-VBELN ).

***     Perform Enqueue
        try.
            LR_BOB_SDOC->ENQUEUE( ).
          cleanup.
            LF_TEMP = ABAP_TRUE.
        endtry.

***------------------------------------------------------------------------------------------------
***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = switch #( LF_TEMP when ABAP_TRUE then /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR_TMP
                                                                            else /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ) ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S001 implementation
