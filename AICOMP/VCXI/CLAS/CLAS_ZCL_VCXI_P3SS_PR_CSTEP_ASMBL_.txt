
class ZCL_VCXI_P3SS_PR_CSTEP_ASMBL definition
  public
  inheriting from ZCL_VCXI_P3SS_PR_CSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSS_FDI .

  constants C_PARID_HNDHE type /VCXI/VKS_PARID value 'ZVCXI_PX_HNDHE' ##NO_TEXT.
  constants C_PARID_HNDLE type /VCXI/VKS_PARID value 'ZVCXI_PX_HNDLE' ##NO_TEXT.
  constants C_PARID_HNDWI type /VCXI/VKS_PARID value 'ZVCXI_PX_HNDWI' ##NO_TEXT.
  constants C_IPRVT_P3_CSTEP_ASMBL type /VCXI/VKSC_IPRVT value 'ZVCXI_P3SS_CSTEP_ASMBL' ##NO_TEXT.

  methods GET_APINFO
    returning
      value(RT_APINFO) type ZVCXI_P3SS_TT_APINFO
    raising
      /VCXI/CX_CKX .
  methods GET_HNDDIM
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RS_HNDDIM) type ZVCXI_PXS_S_HNDDIM
    raising
      /VCXI/CX_CKX .
  methods SET_HNDDIM
    importing
      !IS_HNDDIM type ZVCXI_PXS_S_HNDDIM optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_FOVRR type ZVCXI_XCS_FOVRR optional
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods ZIF_VCXI_P3SS_COMM_NEXT~GET_ASFPX
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_IEVNT_O_HNDDIM_CHANGED type /VCXI/VKSC_IEVNT value 'HNDDIM_CHANGED' ##NO_TEXT.

  methods GET_JOITY
    returning
      value(RT_JOITY) type ZVCXI_PXS_TT_JOITY
    raising
      /VCXI/CX_CKX .
  methods CHECK_HNDDIM
    importing
      value(IR_MESSAGE) type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods GET_HNDHE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_HNDHE) type ZVCXI_PXS_S_HNDHE
    raising
      /VCXI/CX_CKX .
  methods GET_HNDLE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_HNDLE) type ZVCXI_PXS_S_HNDLE
    raising
      /VCXI/CX_CKX .
  methods GET_HNDWI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_HNDWI) type ZVCXI_PXS_S_HNDWI
    raising
      /VCXI/CX_CKX .
  methods SET_HNDHE
    importing
      !IS_HNDHE type ZVCXI_PXS_S_HNDHE optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_HNDLE
    importing
      !IS_HNDLE type ZVCXI_PXS_S_HNDLE optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_HNDWI
    importing
      !IS_HNDWI type ZVCXI_PXS_S_HNDWI optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P3SS_PR_CSTEP_ASMBL definition
class ZCL_VCXI_P3SS_PR_CSTEP_ASMBL implementation.
  method CHECK_HNDDIM.

    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM.


*** Get Handling Dimensions
    LS_HNDDIM = ME->GET_HNDDIM( ).

*** Check Handling Dimension
    if LS_HNDDIM-HNDLE is not initial and
       LS_HNDDIM-HNDWI is not initial and
       LS_HNDDIM-HNDHE is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Handling Dimensions are maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P3SS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '101' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Handling Dimensions are not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P3SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '102' ).
      endif.
    endif.

  endmethod.
  method GET_APINFO.

    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Get Gates of Provider
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZIF_VCXI_P3SS_APINFO=>C_IPRVT_P3_APINFO
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ) into LR_GATE.

***   Add Assembly Part Information to Return List
      append cast ZIF_VCXI_P3SS_APINFO( LR_GATE->R_CLSPR )->GET_APINFO( ) to RT_APINFO.
    endloop.

  endmethod.
  method GET_HNDDIM.

    RS_HNDDIM-S_HNDLE = ME->GET_HNDLE( importing EF_SETBY = EF_SETBY ).
    RS_HNDDIM-S_HNDWI = ME->GET_HNDWI( ).
    RS_HNDDIM-S_HNDHE = ME->GET_HNDHE( ).

    EF_FOVRR = switch #( EF_SETBY when /VCXI/CL_VKSR_GATE=>C_SETBY_USER then ABAP_TRUE ).

  endmethod.
  method GET_HNDHE.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDHE ).
    RS_HNDHE-HNDHE     = LS_PARAM-ATFLV.
    RS_HNDHE-HNDHE_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method GET_HNDLE.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDLE ).
    RS_HNDLE-HNDLE     = LS_PARAM-ATFLV.
    RS_HNDLE-HNDLE_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method GET_HNDWI.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDWI ).
    RS_HNDWI-HNDWI     = LS_PARAM-ATFLV.
    RS_HNDWI-HNDWI_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method GET_JOITY.

    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Get Gates of Provider
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_JOINT=>C_IPRVT_PX_JOINT
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ) into LR_GATE.
***   Add Joint Type to Return List
      append cast ZCL_VCXI_PXSS_PR_JOINT( LR_GATE->R_CLSPR )->GET_JOITY(  ) to RT_JOITY.
    endloop.

  endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check Handling Dimension
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_HNDDIM( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Handling Dimensions
    ME->CHECK_HNDDIM( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method SET_HNDDIM.

    data: LF_SETBY type /VCXI/VKSR_SETBY.

*** Identify correct SETBY
    if IF_FOVRR is supplied.
      LF_SETBY = switch #( IF_FOVRR when ABAP_TRUE then /VCXI/CL_VKSR_GATE=>C_SETBY_USER
                                                   else SPACE ).
    else.
      LF_SETBY = IF_SETBY.
    endif.

*** Set Dimensions
    if IS_HNDDIM is supplied.
      ME->SET_HNDLE( IS_HNDLE = IS_HNDDIM-S_HNDLE
                     IF_SETBY = LF_SETBY ).
      ME->SET_HNDWI( IS_HNDWI = IS_HNDDIM-S_HNDWI
                     IF_SETBY = LF_SETBY ).
      ME->SET_HNDHE( IS_HNDHE = IS_HNDDIM-S_HNDHE
                     IF_SETBY = LF_SETBY ).
    else.
      ME->SET_HNDLE( IF_SETBY = LF_SETBY ).
      ME->SET_HNDWI( IF_SETBY = LF_SETBY ).
      ME->SET_HNDHE( IF_SETBY = LF_SETBY ).
    endif.

  endmethod.
  method SET_HNDHE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDHE ).

    if IS_HNDHE is supplied.
      LS_PARAM-ATFLV = IS_HNDHE-HNDHE.
      LS_PARAM-UNIT  = IS_HNDHE-HNDHE_UOM.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HNDDIM_CHANGED ).
    endif.

  endmethod.
  method SET_HNDLE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDLE ).

    if IS_HNDLE is supplied.
      LS_PARAM-ATFLV = IS_HNDLE-HNDLE.
      LS_PARAM-UNIT  = IS_HNDLE-HNDLE_UOM.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HNDDIM_CHANGED ).
    endif.

  endmethod.
  method SET_HNDWI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDWI ).

    if IS_HNDWI is supplied.
      LS_PARAM-ATFLV = IS_HNDWI-HNDWI.
      LS_PARAM-UNIT  = IS_HNDWI-HNDWI_UOM.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HNDDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P3SS_COMM_NEXT~GET_ASFPX.

    data: LT_JOITY  type ZVCXI_PXS_TT_JOITY,
          LT_APINFO type ZVCXI_P3SS_TT_APINFO.

*** Super
    RR_BL_ASFPROP = SUPER->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASFPX( importing EF_SETBY = EF_SETBY ).
    check RR_BL_ASFPROP is bound.

***--------------------------------------------------------------------------------------
*** Set Handling Dimensions to Forward Properties
    RR_BL_ASFPROP->SET_HNDDIM( IS_HNDDIM = ME->GET_HNDDIM( ) ).

*** Set Joint Types
    LT_JOITY = RR_BL_ASFPROP->T_JOITY.
    append lines of ME->GET_JOITY( ) to LT_JOITY.
    RR_BL_ASFPROP->SET_JOITY( IT_JOITY = LT_JOITY ).

*** Set Assembly Part Information
    LT_APINFO = RR_BL_ASFPROP->T_APINFO.
    append lines of ME->GET_APINFO( ) to LT_APINFO.
    RR_BL_ASFPROP->SET_APINFO( IT_APINFO = LT_APINFO ).

  endmethod.
  method ZIF_VCXI_PXSS_FDI~GET_DATA.

    field-symbols: <S_FDI_CSTEP_ASMBL> type ZVCXI_P3SS_S_FDI_CSTEP_ASMBL.


***--------------------------------------------------------------------------------------
*** Create Data Reference
    create data RR_DATA type ZVCXI_P3SS_S_FDI_CSTEP_ASMBL.
    assign RR_DATA->* to <S_FDI_CSTEP_ASMBL>.


***--------------------------------------------------------------------------------------
*** Handling Dimension
    <S_FDI_CSTEP_ASMBL>-S_HNDDIM = ME->GET_HNDDIM( ).

  endmethod.
  method ZIF_VCXI_PXSS_FDI~SET_DATA.

    data: LS_FDI_CSTEP_ASMBL_OLD type ZVCXI_P3SS_S_FDI_CSTEP_ASMBL,
          LS_FDI_CSTEP_ASMBL_NEW type ZVCXI_P3SS_S_FDI_CSTEP_ASMBL.
    data: LT_GATE      type /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.
    data: LR_DATA_OLD type ref to DATA,
          LR_GATE     type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_DATA> type ANY.


***--------------------------------------------------------------------------------------
*** Dereference Data
    LR_DATA_OLD = cond #( when IR_DATA_OLD is supplied then IR_DATA_OLD
                                                       else ME->ZIF_VCXI_PXSS_FDI~GET_DATA( ) ).
    if LR_DATA_OLD is bound.
      assign LR_DATA_OLD->* to <S_DATA>.
      LS_FDI_CSTEP_ASMBL_OLD = corresponding #( <S_DATA> ).
    endif.

    if IR_DATA is bound.
      assign IR_DATA->* to <S_DATA>.
      LS_FDI_CSTEP_ASMBL_NEW = corresponding #( <S_DATA> ).
    endif.

*** General Check for Changes
    check LS_FDI_CSTEP_ASMBL_OLD ne LS_FDI_CSTEP_ASMBL_NEW.

***--------------------------------------------------------------------------------------
*** Set Handling Dimension
    if LS_FDI_CSTEP_ASMBL_OLD-S_HNDDIM ne LS_FDI_CSTEP_ASMBL_NEW-S_HNDDIM and
       not LINE_EXISTS( IT_FDMEX[ TABLE_LINE = 'HNDDIM' ] ).
      ME->SET_HNDDIM( IS_HNDDIM = LS_FDI_CSTEP_ASMBL_NEW-S_HNDDIM
                      IF_SETBY  = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LF_JOITY type STRING.
    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE,
          LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


***------------------------------------------------------------------------------------------------
*** Get Attribute Data
    concatenate lines of ME->GET_JOITY( ) into LF_JOITY separated by '/'.
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_LABEL = 'Joint Type'
                                          IF_VALUE = LF_JOITY
                                changing  CT_ATTR  = LT_ATTR ).

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR      = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON       = 'sap-icon://combine'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY
                                                    IT_ATTR       = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

***------------------------------------------------------------------------------------------------
*** Find Provider for X-Parts
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XPART=>C_IPRVT_PX_XPART
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      if LR_GATE->R_CLSPR is instance of ZIF_VCXI_XCS_NGREP.
        cast ZIF_VCXI_XCS_NGREP( LR_GATE->R_CLSPR )->FILL( exporting IF_GROUP_KEY     = IF_GROUP_KEY
                                                           changing  CR_NETGRAPH_JSON = CR_NETGRAPH_JSON ).
      endif.
    endloop.

  endmethod.
