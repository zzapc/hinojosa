
class ZCL_VCXI_FFSS_PR_CSTEP_FOLD definition
  public
  inheriting from ZCL_VCXI_FFSS_PR_CSTEP
  create public .

public section.

  constants C_PARID_TFOLD type /VCXI/VKS_PARID value 'ZVCXI_FF_TFOLD' ##NO_TEXT.
  constants C_IPRVT_CSTEP_FOLD type /VCXI/VKSC_IPRVT value 'ZVCXI_FFSS_CSTEP_FOLD' ##NO_TEXT.

  methods GET_TFOLD
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_TFOLD type ZVCXI_FFS_TFOLD
      !EF_DESCR type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods SET_TFOLD
    importing
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_TFOLD type ZVCXI_FFS_TFOLD
    raising
      /VCXI/CX_CKX .
  methods GET_NOLAY
    exporting
      !EF_NOLAY type ZVCXI_F0S_NOLAY
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_IEVNT_O_TFOLD_CHANGED type /VCXI/VKSC_IEVNT value 'TFOLD_CHANGED' ##NO_TEXT.

  methods CHECK_FOLAL
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSS_PR_CSTEP_FOLD definition
class ZCL_VCXI_FFSS_PR_CSTEP_FOLD implementation.
  method CHECK_FOLAL.
*** 0 Gusset Is Allowed.
*** 1 Gusset Is Not Allowed.
*** 2 Gusset Is Not Allowed.

    data: LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

    move 0 to RF_RETURN.

***--------------------------------------------------------------------------------------
*** Get Customizing Data
    ME->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).

*** Check if there is a gusset maintained in Film Property
    check LR_BL_FIFPROP->S_GURIG-GURIG is not initial or
          LR_BL_FIFPROP->S_GULEF-GULEF is not initial.

    if LR_BL_FIFPROP->IS_FGUAL( ) eq ABAP_FALSE.
      move 1 to RF_RETURN.
    endif.

  endmethod.
  method GET_NOLAY.

    data: LF_TFOLD type ZVCXI_FFS_TFOLD.

    clear: EF_NOLAY.

*** Get Folding Type
    ME->GET_TFOLD( importing EF_TFOLD = LF_TFOLD ).
    check LF_TFOLD is not initial.

*** Get Number of Base Layers from Customizing
    select single NOLAY
             from ZVCXI_FFS_TC140
             into EF_NOLAY
            where TFOLD eq LF_TFOLD.                                       "#EC CI_SUBRC

  endmethod.
  method GET_STATUS.

    data: LF_TFOLD type ZVCXI_FFS_TFOLD.

***--------------------------------------------------------------------------------------
*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Folding Type must be maintained
    ME->GET_TFOLD( importing EF_TFOLD = LF_TFOLD ).

    if LF_TFOLD is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                             IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

***--------------------------------------------------------------------------------------
*** Check if Folding is allowed
    if ME->CHECK_FOLAL( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

  endmethod.
  method GET_STATUS_MSG.

    data: LF_TFOLD type ZVCXI_FFS_TFOLD.

***--------------------------------------------------------------------------------------
*** Super Status Messages
    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***--------------------------------------------------------------------------------------
*** Check Folding Type
    ME->GET_TFOLD( importing EF_TFOLD = LF_TFOLD ).

    if LF_TFOLD is not initial.
***   Folding Type is maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '366' ).
    else.
***   Folding Type is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '367' ).
    endif.

***--------------------------------------------------------------------------------------
*** Check Folding is Allowed
    if ME->CHECK_FOLAL( ) eq 0.
***   Folding is allowed based on customizing.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '368' ).
    else.
***   Folding is not allowed based on customizing.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '369' ).
    endif.

  endmethod.
  method GET_TFOLD.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TFOLD ).

    move LS_PARAM-ATWRT to EF_TFOLD.
    move LS_PARAM-SETBY to EF_SETBY.

    check EF_TFOLD is not initial.

    if EF_DESCR is requested.
***   Get Folding Type Description
      select single DESCR
               from ZVCXI_FFS_TC140T
               into EF_DESCR
              where LANGU eq SY-LANGU
                and TFOLD eq EF_TFOLD.

      if SY-SUBRC ne 0.
        select single DESCR
                 from ZVCXI_FFS_TC140T
                 into EF_DESCR
                where TFOLD eq EF_TFOLD.
      endif.
    endif.

  endmethod.
  method SET_TFOLD.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TFOLD ).

    move IF_TFOLD to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TFOLD_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX.

    data: LF_NOLAY type ZVCXI_F0S_NOLAY,
          LF_TFOLD type ZVCXI_FFS_TFOLD.

    SUPER->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing EF_SETBY      = EF_SETBY
                                                        ER_BL_FIFPROP = ER_BL_FIFPROP ).
    check ER_BL_FIFPROP is bound.

***--------------------------------------------------------------------------------------
*** Number of Layers
    ME->GET_NOLAY( importing EF_NOLAY = LF_NOLAY ).
    ER_BL_FIFPROP->SET_NOLAY_FOLD( IF_NOLAY = LF_NOLAY ).

*** Folding Type
    ME->GET_TFOLD( importing EF_TFOLD = LF_TFOLD ).
    ER_BL_FIFPROP->SET_TFOLD( IF_TFOLD = LF_TFOLD ).

***--------------------------------------------------------------------------------------
*** Get new Film Forward Property XML
    if EF_FIFPX is requested.
      EF_FIFPX = ER_BL_FIFPROP->GET_FIFPX( ).
    endif.

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE.


*** Get Attribute Data
    ME->GET_TFOLD( importing EF_TFOLD = data(LF_TFOLD)                "Folding Type
                             EF_DESCR = data(LF_DESCR) ).
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_LABEL     = CR_NETGRAPH_JSON->GET_LABEL( IF_VALUE = LF_TFOLD )
                                          IF_VALUE     = LF_DESCR
                                changing  CT_ATTR      = LT_ATTR ).
    ME->GET_NOLAY( importing EF_NOLAY = data(LF_NOLAY) ).             "No of Layer
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE     = LF_NOLAY
                                          IF_ALPHA_OUT = ABAP_TRUE
                                changing  CT_ATTR      = LT_ATTR ).

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR      = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON       = 'sap-icon://screen-split-one'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY
                                                    IT_ATTR       = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
