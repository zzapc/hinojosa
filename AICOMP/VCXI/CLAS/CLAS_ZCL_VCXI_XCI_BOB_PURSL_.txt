
class ZCL_VCXI_XCI_BOB_PURSL definition
  public
  final
  create public .

public section.

  data F_MATNR type MATNR read-only .
  data F_WERKS type WERKS_D read-only .

  methods MAINTAIN
    importing
      !IT_EORDU type ZVCXI_XCI_TT_EORDU
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods GENERATE
    importing
      !IF_VDATU type ORDAB default SY-DATUM
      !IF_BDATU type ORDBI default '99991231'
      !IF_AUTET type AUTET optional
      !IF_FLIFN type FLIFN optional
    exporting
      value(ET_EORD) type ZVCXI_XCI_TT_EORD
    returning
      value(RT_EORDU) type ZVCXI_XCI_TT_EORDU
    raising
      /VCXI/CX_CKX .
protected section.

  data R_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT .
private section.
endclass. "ZCL_VCXI_XCI_BOB_PURSL definition
class ZCL_VCXI_XCI_BOB_PURSL implementation.
  method CONSTRUCTOR.

    ME->F_MATNR = IF_MATNR.
    ME->F_WERKS = IF_WERKS.


    ME->R_BOB_MAT = new #( ).
    ME->R_BOB_MAT->INIT_FROM_DB( IF_MATNR = IF_MATNR
                                 IF_WERKS = IF_WERKS
*      importing
*        ET_BAPIRET2 = LT_
           ).


  endmethod.
  method GENERATE.

*** Controll Structure
    data(LS_BQPIM) = value BQPIM( MATNR = ME->F_MATNR
                                  WERKS = ME->F_WERKS
                                  MATKL = ME->R_BOB_MAT->S_CLIENTDATA-MATL_GROUP
                                  MPROF = ME->R_BOB_MAT->S_CLIENTDATA-MANUF_PROF
                                  SATNR = ME->R_BOB_MAT->S_CLIENTDATA-CONF_MATL_LONG
                                  VORGA = 'B' ).

*** Generate Source List Entries
    call function 'ME_GENERATE_SOURCE_LIST'
      exporting
        COMIM     = LS_BQPIM
        SVDATU    = IF_VDATU
        SBDATU    = IF_BDATU
      tables
        ORDERBUCH = ET_EORD.

*** Fill Update Structure
    RT_EORDU = corresponding #( ET_EORD ).
    loop at RT_EORDU assigning field-symbol(<S_EORDU>).
      <S_EORDU>-ERDAT = SY-DATUM.
      <S_EORDU>-ERNAM = SY-UNAME.
      <S_EORDU>-VDATU = IF_VDATU.
      <S_EORDU>-BDATU = IF_BDATU.
      <S_EORDU>-AUTET = IF_AUTET.
      <S_EORDU>-FLIFN = IF_FLIFN.

***   Indicator for new Entry
      <S_EORDU>-KZ    = 'I'.
    endloop.

  endmethod.
  method MAINTAIN.

    data: LF_VORGA    type  C value 'B',
          LF_ACTIVITY type  C value 'V'.


    check IT_EORDU is not initial.

***--------------------------------------------------------------------------------------
*** Initalize
    call function 'ME_INITIALIZE_SOURCE_LIST'.

    call function 'ME_EINA_READ'
      exporting
        REFRESH_BUFFER = 'X'
      exceptions
        others         = 1.

***--------------------------------------------------------------------------------------
*** Create Source List
    call function 'ME_DIRECT_INPUT_SOURCE_LIST'
      exporting
        I_MATNR          = ME->R_BOB_MAT->GET_MATNR( )
        I_WERKS          = ME->R_BOB_MAT->GET_WERKS( )
        ACTIVITY         = LF_ACTIVITY
        I_VORGA          = LF_VORGA     "B=ALE / A=Integr.Artikelpflege
      tables
        T_EORD           = IT_EORDU
      exceptions
        PLANT_MISSING    = 1
        MATERIAL_MISSING = 2
        ERROR_MESSAGE    = 3    "catches Error Messages
        others           = 99.

    if SY-SUBRC = 0.
***   Post Source List
      call function 'ME_POST_SOURCE_LIST_NEW'
        exporting
          I_MATNR = ME->R_BOB_MAT->GET_MATNR( )
          O_MATNR = ME->R_BOB_MAT->GET_MATNR( ).
      commit work and wait.

    else.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
