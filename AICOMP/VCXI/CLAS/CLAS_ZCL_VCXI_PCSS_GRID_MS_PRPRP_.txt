
class ZCL_VCXI_PCSS_GRID_MS_PRPRP definition
  public
  inheriting from ZCL_VCXI_XCS_GRID
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_INFO_FNAME type LVC_CIFNM value 'ROWCOLOR'. "#EC NOTEXT
  constants C_ROWCOLOR_INACTIVE type CHAR04 value 'C211'. "#EC NOTEXT
  data F_CYLBA type ZVCXI_PCS_CYLBA .
  data F_DUMMY type ABAP_BOOL .
  data F_INACTIVE type ABAP_BOOL .
  data F_INITIAL type ABAP_BOOL .
  data F_PURCH type ABAP_BOOL .
  data R_PR_PREPR_MGR type ref to ZCL_VCXI_PCSS_PR_PREPR_MGR .
  data F_STYLE_ENABLED_FPRPR type LVC_STYLE .

  methods CALL_SHLP_TPRPR
    importing
      !IF_DISPLAY type ABAP_BOOL default ABAP_FALSE
    returning
      value(RF_TPRPR) type ZVCXI_PCS_TPRPR
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MS_PRPRP
    importing
      !IF_CYLBA type ZVCXI_PCS_CYLBA
      !IF_INITIAL type ABAP_BOOL
      !IF_DUMMY type ABAP_BOOL
      !IF_PURCH type ABAP_BOOL
      !IF_INACTIVE type ABAP_BOOL
      !IF_SUBPA type ABAP_BOOL
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_ONF4
    for event ONF4 of CL_GUI_ALV_GRID
    importing
      !E_FIELDNAME
      !E_FIELDVALUE
      !ES_ROW_NO
      !ER_EVENT_DATA
      !ET_BAD_CELLS
      !E_DISPLAY .
  methods HANDLE_HOTSPOT_CLICK
    for event HOTSPOT_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW_ID
      !E_COLUMN_ID
      !ES_ROW_NO .
  methods GET_MS_PRPRP_VIS
    importing
      !IR_PR_MS_PRPRP type ref to ZCL_VCXI_PCSS_PR_MS_PRPRP
    returning
      value(RS_MS_PRPRP_VIS) type ZVCXI_PCSS_S_MS_PRPRP_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MS_PRPRP_VIS
    importing
      !IR_PR_MS_PRPRP type ref to ZCL_VCXI_PCSS_PR_MS_PRPRP
      !IS_MS_PRPRP_VIS type ZVCXI_PCSS_S_MS_PRPRP_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods INIT_STYLE
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_GRID_MS_PRPRP definition
class ZCL_VCXI_PCSS_GRID_MS_PRPRP implementation.
method CALL_SHLP_TPRPR.

  data:          LT_TPRPR      type          ZVCXI_PCSS_TT_TPRPR,
                 LT_RETURN     type table of DDSHRETVAL.
  data:          LS_RETURN     type          DDSHRETVAL.

  LT_TPRPR = ZCL_VCXI_PCSS_CUST_BOARD=>GET_ALL_TPRPR( ).
  if ME->R_PR_PREPR_MGR->IS_CYLBA_ALLOWED( ) eq ABAP_FALSE.
    delete LT_TPRPR where CYLBA eq ABAP_TRUE.
  endif.

  call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    exporting
      RETFIELD        = 'TPRPR'
      VALUE_ORG       = 'S'
      DISPLAY         = IF_DISPLAY
    tables
      VALUE_TAB       = LT_TPRPR
      RETURN_TAB      = LT_RETURN
    exceptions
      PARAMETER_ERROR = 1
      NO_VALUES_FOUND = 2
      others          = 3.

  if SY-SUBRC eq 0.
    read table LT_RETURN index 1 into LS_RETURN.
    if SY-SUBRC eq 0.
      RF_TPRPR = LS_RETURN-FIELDVAL.
    endif.
  endif.

endmethod.
method CHANGE_STYLE_MS_PRPRP.

  data: LF_STYLE_ENABLED_FPRPR  type LVC_STYLE,
        LF_STYLE_ENABLED_TPRPR  type LVC_STYLE,
        LF_STYLE_ENABLED_MATNR  type LVC_STYLE,
        LF_STYLE_ENABLED_PURCH  type LVC_STYLE,
        LF_STYLE_ENABLED_DATA   type LVC_STYLE,
        LF_STYLE_ENABLED_DATA_C type LVC_STYLE,
        LF_STYLE_ENABLED_NOCOL  type LVC_STYLE.

  free: CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details - Flag Preprint
  if IF_SUBPA                  eq ABAP_FALSE and
     ME->F_STYLE_ENABLED_FPRPR eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    LF_STYLE_ENABLED_FPRPR = ME->F_STYLE_ENABLED_FPRPR + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT.
  else.
    LF_STYLE_ENABLED_FPRPR = ME->F_STYLE_DISABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO.
  endif.

*** Set Style Details - Preprint Type
  if IF_DUMMY            eq ABAP_TRUE and
     ME->F_STYLE_ENABLED eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_TPRPR.
  else.
    move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_TPRPR.
  endif.

*** Set Style Details - Material
  if IF_SUBPA            eq ABAP_FALSE and
     IF_INACTIVE         eq ABAP_FALSE and
     ME->F_STYLE_ENABLED eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_MATNR.
  else.
    move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_MATNR.
  endif.

*** Set Style Details - Purchase Flag
  if IF_INITIAL          eq ABAP_FALSE and
     IF_DUMMY            eq ABAP_FALSE and
     IF_INACTIVE         eq ABAP_FALSE and
     ME->F_STYLE_ENABLED eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_PURCH.
  else.
    move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_PURCH.
  endif.

*** Set Style Details - Number of Colors
  if IF_CYLBA            eq ABAP_FALSE and
     IF_INACTIVE         eq ABAP_FALSE and
     IF_INITIAL          eq ABAP_FALSE and
     ME->F_STYLE_ENABLED eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_NOCOL.
  else.
    move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_NOCOL.
  endif.

*** Set Style Details - Data and also Nocol
  if IF_DUMMY            eq ABAP_TRUE and
     ME->F_STYLE_ENABLED eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_DATA.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_NOCOL.
  else.
    move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_DATA.
  endif.

*** Set Style Details for
  if IF_DUMMY            eq ABAP_TRUE and
     IF_CYLBA            eq ABAP_TRUE and
     ME->F_STYLE_ENABLED eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_DATA_C.
  else.
    move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_DATA_C.
  endif.

*** --------------------------------------------------------------------------------------------
*** Set Flag Preprint = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FPRPR'
                              IF_STYLE     = LF_STYLE_ENABLED_FPRPR
                    changing  CT_STYL      = CT_STYL ).

*** Set Paper ID = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BPAID'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Preprint Type = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRPR'
                              IF_STYLE     = LF_STYLE_ENABLED_TPRPR
                    changing  CT_STYL      = CT_STYL ).

*** Set Material = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = LF_STYLE_ENABLED_MATNR
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Description = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR_DESCR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Purchase = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                              IF_STYLE     = LF_STYLE_ENABLED_PURCH
                    changing  CT_STYL      = CT_STYL ).


***------------------------------------------------------------------
*** Procurement Option
  case IF_PURCH.
    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***   Set Vendor = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
  endcase.


***------------------------------------------------------------------
*** Set Base Weight, Base Weight Unit, Caliper,
*** Cylinder and Cylinder ups Total = Editable if we are a dummy
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGT'
                              IF_STYLE     = LF_STYLE_ENABLED_DATA
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGP'
                              IF_STYLE     = LF_STYLE_ENABLED_DATA
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CALIP'
                              IF_STYLE     = LF_STYLE_ENABLED_DATA
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CYLIN'
                              IF_STYLE     = LF_STYLE_ENABLED_DATA_C
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CUPST'
                              IF_STYLE     = LF_STYLE_ENABLED_DATA_C
                    changing  CT_STYL      = CT_STYL ).

*** Set Base Weight, Base Weight, Caliper and Cylinder Unit (Unit) = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGT_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGP_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CALIP_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Color = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOCOL'
                              IF_STYLE     = LF_STYLE_ENABLED_NOCOL
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_PCSS_S_MS_PRPRP_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_PREPR_MGR.

    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PR_PREPR_MGR.
  endtry.

endmethod.
method GET_FIELDCAT.

  data: LF_LOCKED     type /VCXI/CKX_LOCKED,
        LF_INUSE      type /VCXI/VKSR_INUSE,
        LF_EDIT_MATNR type ABAP_BOOL,
        LF_EDIT_TPRPR type ABAP_BOOL,
        LF_EDIT_PRICE type ABAP_BOOL,
        LF_EDIT_PURCH type ABAP_BOOL,
        LF_EDIT_DEF   type ABAP_BOOL,
        LF_HIDE_CYLIN type ABAP_BOOL,
        LF_LIFNR      type ABAP_BOOL,
        LF_PRICE      type ABAP_BOOL.
  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

  if ME->F_DUMMY   eq ABAP_TRUE or
     ME->F_INITIAL eq ABAP_TRUE.
    move ABAP_TRUE to LF_EDIT_TPRPR.
  endif.
  if ME->F_INITIAL eq ABAP_FALSE.
    move ABAP_TRUE to LF_EDIT_MATNR.
  endif.
  if ME->F_DUMMY eq ABAP_TRUE.
    move ABAP_TRUE to LF_EDIT_DEF.
  else.
    move ABAP_TRUE to LF_EDIT_PURCH.
  endif.
  case ME->F_PURCH.
    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
      LF_LIFNR = ABAP_TRUE.
      LF_PRICE = ABAP_TRUE.
    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
      LF_LIFNR = ABAP_TRUE.
  endcase.
  if ME->F_CYLBA eq ABAP_FALSE.
    move ABAP_TRUE to LF_HIDE_CYLIN.
  endif.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'CYLBA' or 'DUMMY' or
           'LINER_TYPE' or 'LINER_NUMB'.
        move ABAP_TRUE to <S_FCAT>-TECH.

***   Always Visible and Editable
      when 'FPRPR'.
        move ABAP_TRUE to <S_FCAT>-CHECKBOX.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE to <S_FCAT>-EDIT.
          move ABAP_TRUE to <S_FCAT>-HOTSPOT.
        endif.

***   Always Visible but only Editable if active and Dummy material
      when 'TPRPR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT_TPRPR to <S_FCAT>-EDIT.
        endif.

***   Always Visible but only Editable if active
      when 'MATNR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT_MATNR to <S_FCAT>-EDIT.
        endif.

***   Always Visible not editable
      when 'MATNR_DESCR'.
        move ABAP_FALSE to <S_FCAT>-EDIT.

***   Always Checkbox and visible
      when 'PURCH'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT_PURCH to <S_FCAT>-EDIT.
        endif.

      when 'LIFNR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE  to <S_FCAT>-EDIT.
        endif.

      when 'PRICE' or 'PRICP'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE  to <S_FCAT>-EDIT.
        endif.

***   Edit BaseWeight and Caliper only if we are a Dummy Material
      when 'BAWGT' or 'BAWGP' or 'CALIP'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT_DEF to <S_FCAT>-EDIT.
        endif.

***   Always Visible not editable
      when 'BAWGT_UOM' or 'BAWGP_UOM' or 'CALIP_UOM'.
        move ABAP_FALSE to <S_FCAT>-EDIT.

***   Edit Cylinder Data only if we are a Dummy Material
      when 'CYLIN' or 'CUPST'.
        move LF_HIDE_CYLIN to <S_FCAT>-TECH.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT_DEF to <S_FCAT>-EDIT.
        endif.

***   Show Cylinder Units only we are Cylinder Based
      when 'CYLIN_UOM'.
        move LF_HIDE_CYLIN to <S_FCAT>-TECH.

***   Show and Edit Number of Colors always
      when 'NOCOL'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE to <S_FCAT>-EDIT.
        endif.

    endcase.

***----------------------------------------------------------------------------
*** Hide Field if not purchase
    if LF_LIFNR ne ABAP_TRUE.
      if <S_FCAT>-FIELDNAME eq 'LIFNR' or
         <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      endif.
    endif.
    if LF_PRICE ne ABAP_TRUE.
      if <S_FCAT>-FIELDNAME eq 'PRICE' or
         <S_FCAT>-FIELDNAME eq 'PRICE_CURR' or
         <S_FCAT>-FIELDNAME eq 'PRICP' or
         <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      endif.
    endif.

  endloop.

endmethod.
method GET_GRID_DATA.

  data: LF_DUMMY   type          ABAP_BOOL,
        LF_CYLBA   type          ABAP_BOOL,
        LF_INITIAL type          ABAP_BOOL.
  data: LS_MS_PRPRP_VIS    type          ZVCXI_PCSS_S_MS_PRPRP_VIS,
        LS_MS_PRPRP_GRID   type          ZVCXI_PCSS_S_MS_PRPRP_GRID,
        LS_BOARD_PAPER_STR type          ZVCXI_PCSS_S_BOARD_PAPER_STR.
  data: LT_GATE            type          /VCXI/VKSR_TT_GATE,
        LT_BOARD_PAPER_STR type          ZVCXI_PCSS_TT_BOARD_PAPER_STR.
  data: LR_GATE        type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_MS_PRPRP type ref to   ZCL_VCXI_PCSS_PR_MS_PRPRP.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

*** Clear Indicator
  clear: ME->F_CYLBA, ME->F_DUMMY, ME->F_PURCH.

*** Start "positiv" for Initial or Inactive
  ME->F_INACTIVE = ABAP_TRUE.
  ME->F_INITIAL = ABAP_TRUE.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get Board Paper Structure
  LT_BOARD_PAPER_STR = ME->R_PR_PREPR_MGR->GET_BOARD_PAPER_STR( ).

*** --------------------------------------------------------------------------------------------
*** Get Gates of all Material Specification - Preprint Paper
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_PRPRP=>C_IPRVT_PC_MS_PRPRP
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_MS_PRPRP_GRID, LR_PR_MS_PRPRP, LF_DUMMY, LF_CYLBA, LF_INITIAL.
*** --------------------------------------------------------------------------------------------
*** Get Preprint Paper
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
        check LR_PR_MS_PRPRP is bound.

        move LR_GATE->GET_POSID( ) to LS_MS_PRPRP_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_MS_PRPRP_GRID-GATKY.
        move LR_GATE               to LS_MS_PRPRP_GRID-R_GATE.

        LS_MS_PRPRP_VIS = ME->GET_MS_PRPRP_VIS( IR_PR_MS_PRPRP = LR_PR_MS_PRPRP ).
***     Set Preprint Flag
        move ABAP_TRUE to LS_MS_PRPRP_VIS-FPRPR.
        move-corresponding LS_MS_PRPRP_VIS to LS_MS_PRPRP_GRID.

***     Get Flags for Fieldcat
        case LS_MS_PRPRP_VIS-PURCH.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
            ME->F_PURCH = LS_MS_PRPRP_VIS-PURCH.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
            if ME->F_PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
              ME->F_PURCH = LS_MS_PRPRP_VIS-PURCH.
            endif.
        endcase.

        if LR_PR_MS_PRPRP->IS_DUMMY( ) eq ABAP_TRUE.
          move ABAP_TRUE to LF_DUMMY.
          move ABAP_TRUE to ME->F_DUMMY.
        endif.

        if ZCL_VCXI_PCSS_CUST_BOARD=>IS_TPRPR_CYLBA( IF_TPRPR = LS_MS_PRPRP_VIS-TPRPR ) eq ABAP_TRUE.
          move ABAP_TRUE to LF_CYLBA.
          move ABAP_TRUE to ME->F_CYLBA.
        endif.

        if ME->F_INACTIVE eq ABAP_TRUE.
          move ABAP_FALSE to ME->F_INACTIVE.
        endif.

        if LS_MS_PRPRP_VIS-TPRPR is not initial and
           LS_MS_PRPRP_VIS-MATNR is not initial.
          move ABAP_FALSE to ME->F_INITIAL.
        endif.

***     Fill Liner Type and Number to get the right sorting
        move LS_MS_PRPRP_GRID-BPAID(1)   to LS_MS_PRPRP_GRID-LINER_TYPE.
        move LS_MS_PRPRP_GRID-BPAID+1(1) to LS_MS_PRPRP_GRID-LINER_NUMB.

*** --------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_MS_PRPRP( exporting IF_PURCH    = LS_MS_PRPRP_VIS-PURCH
                                             IF_DUMMY    = LF_DUMMY
                                             IF_CYLBA    = LF_CYLBA
                                             IF_INITIAL  = LF_INITIAL
                                             IF_INACTIVE = SPACE
                                             IF_SUBPA    = SPACE
                                   changing  CT_STYL     = LS_MS_PRPRP_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MS_PRPRP_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MS_PRPRP_GRID to <S_DATA>.

***     Reduce Board Paper Structure by added Entry
        delete LT_BOARD_PAPER_STR where BPAID eq LS_MS_PRPRP_VIS-BPAID.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

*** Add not yet specified Preprintable Paper ID's
  loop at LT_BOARD_PAPER_STR into LS_BOARD_PAPER_STR.
    clear: LS_MS_PRPRP_GRID.

    move LS_BOARD_PAPER_STR-BPAID to LS_MS_PRPRP_GRID-BPAID.

*** Fill Liner Type and Number to get the right sorting
    move LS_MS_PRPRP_GRID-BPAID(1)   to LS_MS_PRPRP_GRID-LINER_TYPE.
    move LS_MS_PRPRP_GRID-BPAID+1(1) to LS_MS_PRPRP_GRID-LINER_NUMB.

    if LS_BOARD_PAPER_STR-SUBPA eq ABAP_TRUE.
      LS_MS_PRPRP_GRID-ROWCOLOR = C_ROWCOLOR_INACTIVE.
    endif.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
    ME->CHANGE_STYLE_MS_PRPRP( exporting IF_PURCH    = ABAP_FALSE
                                         IF_DUMMY    = ABAP_FALSE
                                         IF_CYLBA    = ABAP_FALSE
                                         IF_INITIAL  = ABAP_TRUE
                                         IF_INACTIVE = ABAP_TRUE
                                         IF_SUBPA    = LS_BOARD_PAPER_STR-SUBPA
                               changing  CT_STYL     = LS_MS_PRPRP_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.
    move-corresponding LS_MS_PRPRP_GRID to <S_DATA>.

  endloop.

  sort <T_DATA> by ('LINER_NUMB') ('LINER_TYPE').

endmethod.
method GET_LAYOUT.

  RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Name of Color Fieldname
  RS_LAYOUT-INFO_FNAME = C_INFO_FNAME.

endmethod.
method GET_MS_PRPRP_VIS.

  data: LS_BAWGT type ZVCXI_PCS_S_BAWGT,
        LS_BAWGP type ZVCXI_PCS_S_BAWGP,
        LS_CALIP type ZVCXI_P0SS_S_CALIP,
        LS_CYLIN type ZVCXI_PCS_S_CYLIN.

*** Board Paper ID
  move IR_PR_MS_PRPRP->GET_BPAID( )         to RS_MS_PRPRP_VIS-BPAID.

*** Preprint Type
  move IR_PR_MS_PRPRP->GET_TPRPR( )         to RS_MS_PRPRP_VIS-TPRPR.
  move IR_PR_MS_PRPRP->GET_TPRPR_DESCR( )   to RS_MS_PRPRP_VIS-TPRPR_DESCR.

*** Material
  move IR_PR_MS_PRPRP->GET_MATNR( )         to RS_MS_PRPRP_VIS-MATNR.
  move IR_PR_MS_PRPRP->GET_MATNR_DESCR( )   to RS_MS_PRPRP_VIS-MATNR_DESCR.

*** Procurement Option
  move IR_PR_MS_PRPRP->GET_PURCH( )         to RS_MS_PRPRP_VIS-PURCH.

*** Price
  move IR_PR_MS_PRPRP->GET_PRICE( )         to RS_MS_PRPRP_VIS-S_PRICE.
  move IR_PR_MS_PRPRP->GET_PRICP( )         to RS_MS_PRPRP_VIS-S_PRICP.

*** Get Vendor Number
  move IR_PR_MS_PRPRP->GET_LIFNR( )         to RS_MS_PRPRP_VIS-LIFNR.
  move IR_PR_MS_PRPRP->GET_LIFNR_DESCR( )   to RS_MS_PRPRP_VIS-LIFNR_DESCR.

*** Base Weight
  move IR_PR_MS_PRPRP->GET_BAWGT( )         to LS_BAWGT.
  move-corresponding LS_BAWGT               to RS_MS_PRPRP_VIS.

*** Base Weight
  move IR_PR_MS_PRPRP->GET_BAWGP( )         to LS_BAWGP.
  move-corresponding LS_BAWGP               to RS_MS_PRPRP_VIS.

*** Caliper
  move IR_PR_MS_PRPRP->GET_CALIP( )         to LS_CALIP.
  move-corresponding LS_CALIP               to RS_MS_PRPRP_VIS.

*** Cylinder
  move IR_PR_MS_PRPRP->GET_CYLIN( )         to LS_CYLIN.
  move-corresponding LS_CYLIN               to RS_MS_PRPRP_VIS.

*** Number of Colors
  move IR_PR_MS_PRPRP->GET_CUPST( )         to RS_MS_PRPRP_VIS-CUPST.

*** Number of Colors
  move IR_PR_MS_PRPRP->GET_NOCOL( )         to RS_MS_PRPRP_VIS-NOCOL.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_MS_PRPRP_VIS      type          ZVCXI_PCSS_S_MS_PRPRP_VIS,
                 LS_MS_PRPRP_GRID     type          ZVCXI_PCSS_S_MS_PRPRP_GRID.
  data:          LR_PR_MS_PRPRP       type ref to   ZCL_VCXI_PCSS_PR_MS_PRPRP,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.
      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
***     Refresh References
        clear: LR_PR_MS_PRPRP.

        move-corresponding <S_DATA> to LS_MS_PRPRP_GRID.

        check LS_MS_PRPRP_GRID-R_GATE          is bound and
              LS_MS_PRPRP_GRID-R_GATE->R_CLSPR is bound.
        try.
            move LS_MS_PRPRP_GRID-R_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MS_PRPRP.
        endtry.

        check LR_PR_MS_PRPRP is bound.
***     Set Values to PR Class
        move-corresponding LS_MS_PRPRP_GRID to LS_MS_PRPRP_VIS.
        ME->SET_MS_PRPRP_VIS( IR_PR_MS_PRPRP  = LR_PR_MS_PRPRP
                              IS_MS_PRPRP_VIS = LS_MS_PRPRP_VIS ).

      endloop.

***   Request Refresh for ALV
      move ABAP_TRUE to ME->F_REFRESH_REQ.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_HOTSPOT_CLICK.

  data:          LS_MS_PRPRP_GRID     type          ZVCXI_PCSS_S_MS_PRPRP_GRID.
  data:          LR_PR_MS_PRPRP       type ref to   ZCL_VCXI_PCSS_PR_MS_PRPRP,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        check SY-TABIX  eq E_ROW_ID.

        try.
            move-corresponding <S_DATA> to LS_MS_PRPRP_GRID.

***         Set Values to PR Class
            case E_COLUMN_ID-FIELDNAME.

              when 'FPRPR'.
                case LS_MS_PRPRP_GRID-FPRPR.
                  when ABAP_TRUE.
                    check LS_MS_PRPRP_GRID-R_GATE          is bound and
                          LS_MS_PRPRP_GRID-R_GATE->R_CLSPR is bound.
                    move LS_MS_PRPRP_GRID-R_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
                    check LR_PR_MS_PRPRP is bound.
                    LR_PR_MS_PRPRP->DO_FREE( ).

                  when ABAP_FALSE.
                    check LS_MS_PRPRP_GRID-R_GATE is not bound.
                    ME->R_PR_PREPR_MGR->CREATE_MS_PRPRP( IF_BPAID = LS_MS_PRPRP_GRID-BPAID ).
                endcase.

            endcase.

          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MS_PRPRP.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_ONF4.

  data:          LS_MS_PRPRP_GRID     type          ZVCXI_PCSS_S_MS_PRPRP_GRID.
  data:          LR_PR_MS_PRPRP       type ref to   ZCL_VCXI_PCSS_PR_MS_PRPRP,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        check ES_ROW_NO-ROW_ID = SY-TABIX.

        try.
            move-corresponding <S_DATA> to LS_MS_PRPRP_GRID.

            move LS_MS_PRPRP_GRID-R_GATE->R_CLSPR ?to LR_PR_MS_PRPRP.
            check LR_PR_MS_PRPRP is bound.

***         Handle F4 call
            case E_FIELDNAME.
              when 'TPRPR'.
***             Call Search Help
                LS_MS_PRPRP_GRID-TPRPR = ME->CALL_SHLP_TPRPR( IF_DISPLAY = E_DISPLAY ).
***             Set Value
                if LS_MS_PRPRP_GRID-TPRPR is not initial.
                  if ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.
                    LR_PR_MS_PRPRP->SET_TPRPR( IF_TPRPR = LS_MS_PRPRP_GRID-TPRPR
                                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                    ME->R_GATE->RAISE_EVENTS( ).
                  endif.
                endif.

                ER_EVENT_DATA->M_EVENT_HANDLED = 'X'.

            endcase.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MS_PRPRP.
        endtry.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

*** If we switch Application Events off -> do manually Refresh Screen
  if ME->F_APPL_EVENTS eq ABAP_FALSE.
    ME->R_UIGATE->REFRESH_SCREEN( ).
  endif.

endmethod.
method INIT_STYLE.

*** Do Standard Init
  SUPER->INIT_STYLE( ).

  move ME->F_STYLE_ENABLED to  ME->F_STYLE_ENABLED_FPRPR.

*** If we are Editable -> check if Toolbar would be disabled
  check ME->F_STYLE_ENABLED_FPRPR eq CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.

*** Do general DVC Check if Function is activ
  if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE  = ME->R_GATE
                                                IF_IFUNC = 'TOOLBAR_DISABLED' ) eq ABAP_TRUE.
    ME->F_STYLE_ENABLED_FPRPR = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
  endif.

endmethod.
method SET_EVENT.

  SUPER->SET_EVENT( ).

*** Set Hotspot
  set handler ME->HANDLE_HOTSPOT_CLICK       for ME->R_GRID.
*** Set Handle on F4
  set handler ME->HANDLE_ONF4                for ME->R_GRID.

endmethod.
method SET_MS_PRPRP_VIS.

  data: LS_BAWGT        type ZVCXI_PCS_S_BAWGT,
        LS_BAWGP        type ZVCXI_PCS_S_BAWGP,
        LS_CALIP        type ZVCXI_P0SS_S_CALIP,
        LS_CYLIN        type ZVCXI_PCS_S_CYLIN,
        LS_MS_PRPRP_VIS type ZVCXI_PCSS_S_MS_PRPRP_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MS_PRPRP_VIS = ME->GET_MS_PRPRP_VIS( IR_PR_MS_PRPRP = IR_PR_MS_PRPRP ).

*** Preprint Type
  if IS_MS_PRPRP_VIS-TPRPR ne LS_MS_PRPRP_VIS-TPRPR.
    IR_PR_MS_PRPRP->SET_TPRPR( IF_TPRPR = IS_MS_PRPRP_VIS-TPRPR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Preprint Type
  if IS_MS_PRPRP_VIS-MATNR ne LS_MS_PRPRP_VIS-MATNR.
    IR_PR_MS_PRPRP->SET_MATNR( IF_MATNR = IS_MS_PRPRP_VIS-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Procurement Option
  if IS_MS_PRPRP_VIS-PURCH ne LS_MS_PRPRP_VIS-PURCH.
    IR_PR_MS_PRPRP->SET_PURCH( IF_PURCH = IS_MS_PRPRP_VIS-PURCH
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price
  if IS_MS_PRPRP_VIS-PRICE ne LS_MS_PRPRP_VIS-PRICE.
    IR_PR_MS_PRPRP->SET_PRICE( IS_PRICE = IS_MS_PRPRP_VIS-S_PRICE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if IS_MS_PRPRP_VIS-PRICP ne LS_MS_PRPRP_VIS-PRICP.
    IR_PR_MS_PRPRP->SET_PRICP( IS_PRICP = IS_MS_PRPRP_VIS-S_PRICP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Vendor Number
  if IS_MS_PRPRP_VIS-LIFNR ne LS_MS_PRPRP_VIS-LIFNR.
    IR_PR_MS_PRPRP->SET_LIFNR( IF_LIFNR = IS_MS_PRPRP_VIS-LIFNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Base Weight
  if IS_MS_PRPRP_VIS-BAWGT ne LS_MS_PRPRP_VIS-BAWGT.
    move-corresponding IS_MS_PRPRP_VIS to LS_BAWGT.
    IR_PR_MS_PRPRP->SET_BAWGT( IS_BAWGT = LS_BAWGT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if IS_MS_PRPRP_VIS-BAWGP ne LS_MS_PRPRP_VIS-BAWGP.
    move-corresponding IS_MS_PRPRP_VIS to LS_BAWGP.
    IR_PR_MS_PRPRP->SET_BAWGP( IS_BAWGP = LS_BAWGP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Caliper
  if IS_MS_PRPRP_VIS-CALIP ne LS_MS_PRPRP_VIS-CALIP.
    move-corresponding IS_MS_PRPRP_VIS to LS_CALIP.
    IR_PR_MS_PRPRP->SET_CALIP( IS_CALIP = LS_CALIP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Cylinder
  if IS_MS_PRPRP_VIS-CYLIN ne LS_MS_PRPRP_VIS-CYLIN.
    move-corresponding IS_MS_PRPRP_VIS to LS_CYLIN.
    IR_PR_MS_PRPRP->SET_CYLIN( IS_CYLIN = LS_CYLIN
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Number of Colors
  if IS_MS_PRPRP_VIS-CUPST ne LS_MS_PRPRP_VIS-CUPST.
    IR_PR_MS_PRPRP->SET_CUPST( IF_CUPST = IS_MS_PRPRP_VIS-CUPST
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Number of Colors
  if IS_MS_PRPRP_VIS-NOCOL ne LS_MS_PRPRP_VIS-NOCOL.
    IR_PR_MS_PRPRP->SET_NOCOL( IF_NOCOL = IS_MS_PRPRP_VIS-NOCOL
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
