
class ZCL_VCXI_XCS_GRID_PSCALE definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  types YS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF .
  types:
    begin of YS_PRVDR_OV.
          include type        YS_PRVDR_DEF.
  types:  INDEX   type I,
          SEQUE   type        ZVCXI_XCSU_SEQUE,
          R_GATE  type ref to /VCXI/CL_VKSR_GATE,
          end of YS_PRVDR_OV .
  types:
    YT_PRVDR_OV type standard table of YS_PRVDR_OV .

  methods CHANGE_STYLE_PSCALE
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .

  methods GET_DISABLED_ADD
    redefinition .
  methods GET_DISABLED_DEL
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods INIT_STYLE
    redefinition .
private section.
endclass. "ZCL_VCXI_XCS_GRID_PSCALE definition
class ZCL_VCXI_XCS_GRID_PSCALE implementation.
method CHANGE_STYLE_PSCALE.

  free CT_STYL.

*** Set Price Scale Quantity = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSQTY'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Price Scale Quantity Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PSQTY_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Price = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Price Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE_CURR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Price Unit = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Price Unit Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_XCS_S_PSCALE_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE.

endmethod.
method GET_DISABLED_ADD.

  data:          LF_LOCKED     type        /VCXI/CKX_LOCKED,
                 LF_INUSE      type        /VCXI/VKSR_INUSE,
                 LF_CHANGEABLE type        ABAP_BOOL.
  data:          LS_PRVDR_DEF  type        /VCXI/VKSR_S_PRVDR_DEF.
  data:          LR_PSCALE_MGR type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***----------------------------------------------------------------------------
*** Get Lock and In-Use Status & Changeable Status of Manager
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

  try.
      move ME->R_GATE->R_CLSPR ?to LR_PSCALE_MGR.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PSCALE_MGR.
  endtry.

  if LR_PSCALE_MGR is bound.
    move LR_PSCALE_MGR->IS_CHANGEABLE( ) to LF_CHANGEABLE.
  endif.

  if LF_LOCKED     ne ABAP_TRUE or
     LF_INUSE      ne ABAP_TRUE or
     LF_CHANGEABLE ne ABAP_TRUE .
    move ABAP_TRUE to RF_DISABLED.
    exit.
  endif.

  loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF.
    RF_DISABLED = ME->CHECK_PRVDR_ADD( IF_ID = LS_PRVDR_DEF-ID ).
    check RF_DISABLED eq ABAP_FALSE.
    exit.
  endloop.

*** Do general DVC Check if Function is activ
  if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE  = ME->R_GATE
                                                IF_IFUNC = 'TOOLBAR_DISABLED' ) eq ABAP_TRUE.
    move ABAP_TRUE to RF_DISABLED.
  endif.

endmethod.
method GET_DISABLED_DEL.

  data:          LF_LOCKED     type        /VCXI/CKX_LOCKED,
                 LF_INUSE      type        /VCXI/VKSR_INUSE,
                 LF_CHANGEABLE type        ABAP_BOOL.
  data:          LS_PRVDR_DEF  type        /VCXI/VKSR_S_PRVDR_DEF.
  data:          LR_PSCALE_MGR type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***----------------------------------------------------------------------------
*** Get Lock and In-Use Status & Changeable Status of Manager
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

  try.
      move ME->R_GATE->R_CLSPR ?to LR_PSCALE_MGR.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PSCALE_MGR.
  endtry.

  if LR_PSCALE_MGR is bound.
    move LR_PSCALE_MGR->IS_CHANGEABLE( ) to LF_CHANGEABLE.
  endif.

  if LF_LOCKED     ne ABAP_TRUE or
     LF_INUSE      ne ABAP_TRUE or
     LF_CHANGEABLE ne ABAP_TRUE.
    move ABAP_TRUE to RF_DISABLED.
    exit.
  endif.

*** Get delete Button in Grid or not in Grid
  loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF.
    RF_DISABLED = ME->CHECK_PRVDR_DEL( IF_ID = LS_PRVDR_DEF-ID ).
    check RF_DISABLED eq ABAP_FALSE.
    exit.
  endloop.

*** Do general DVC Check if Function is activ
  if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE  = ME->R_GATE
                                                IF_IFUNC = 'TOOLBAR_DISABLED' ) eq ABAP_TRUE.
    move ABAP_TRUE to RF_DISABLED.
  endif.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED       type        /VCXI/CKX_LOCKED,
                 LF_INUSE        type        /VCXI/VKSR_INUSE,
                 LF_CHANGEABLE   type        ABAP_BOOL.
  data:          LR_PSCALE_MGR   type ref to ZIF_VCXI_XCS_PSCALE_MGR.
  field-symbols: <S_FCAT>        type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status & Changeable Status of Manager
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

  try.
      move ME->R_GATE->R_CLSPR ?to LR_PSCALE_MGR.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PSCALE_MGR.
  endtry.

  if LR_PSCALE_MGR is bound.
    move LR_PSCALE_MGR->IS_CHANGEABLE( ) to LF_CHANGEABLE.
  endif.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

      when 'PSQTY' or 'PRICE' or 'PRICP'.
        if LF_LOCKED     eq ABAP_TRUE and
           LF_INUSE      eq ABAP_TRUE and
           LF_CHANGEABLE eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.

  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_PSCALE_GRID       type          ZVCXI_XCS_S_PSCALE_GRID,
                 LS_PSQTY             type          ZVCXI_XCS_S_PSQTY,
                 LS_PRICE             type          ZVCXI_XCS_S_PRICE,
                 LS_PRICP             type          ZVCXI_XCS_S_PRICP.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_PSCALE         type ref to   ZCL_VCXI_XCS_PR_PSCALE.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Price Scales
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear LS_PSCALE_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_PSCALE.
        check LR_PR_PSCALE is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_PSCALE_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_PSCALE_GRID-GATKY.
        move LR_GATE               to LS_PSCALE_GRID-R_GATE.


        move LR_PR_PSCALE->GET_PSQTY( )  to LS_PSQTY.
        move-corresponding LS_PSQTY      to LS_PSCALE_GRID.

        move LR_PR_PSCALE->GET_PRICE( )  to LS_PRICE.
        move-corresponding LS_PRICE      to LS_PSCALE_GRID.

        move LR_PR_PSCALE->GET_PRICP( )  to LS_PRICP.
        move-corresponding LS_PRICP      to LS_PSCALE_GRID.

*** --------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_PSCALE( changing CT_STYL = LS_PSCALE_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_PSCALE_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_PSCALE_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_PSCALE.
    endtry.
  endloop.

  sort <T_DATA> by ('PSQTY_UOM') ('PSQTY').

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LF_ROW_ID            type          I.
  data:          LS_PSCALE_GRID       type          ZVCXI_XCS_S_PSCALE_GRID,
                 LS_MODI              type          LVC_S_MODI,
                 LS_PSQTY             type          ZVCXI_XCS_S_PSQTY,
                 LS_PRICE             type          ZVCXI_XCS_S_PRICE,
                 LS_PRICP             type          ZVCXI_XCS_S_PRICP.
  data:          LR_PR_PSCALE         type ref to   ZCL_VCXI_XCS_PR_PSCALE,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move SY-TABIX to LF_ROW_ID.
        read table ET_GOOD_CELLS with key ROW_ID = LF_ROW_ID
                                 transporting no fields.
        check SY-SUBRC eq 0.

        try.
            move-corresponding <S_DATA> to LS_PSCALE_GRID.
            check LS_PSCALE_GRID-R_GATE is bound.

            move LS_PSCALE_GRID-R_GATE->R_CLSPR ?to LR_PR_PSCALE.
            check LR_PR_PSCALE is bound.

***         Set Values to PR Class
            loop at ET_GOOD_CELLS into LS_MODI where ROW_ID = LF_ROW_ID.
              case LS_MODI-FIELDNAME.
                when 'PSQTY'.
                  move-corresponding LS_PSCALE_GRID to LS_PSQTY.
                  LR_PR_PSCALE->SET_PSQTY( IS_PSQTY = LS_PSQTY
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PRICE'.
                  move-corresponding LS_PSCALE_GRID to LS_PRICE.
                  LR_PR_PSCALE->SET_PRICE( IS_PRICE = LS_PRICE
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PRICP'.
                  move-corresponding LS_PSCALE_GRID to LS_PRICP.
                  LR_PR_PSCALE->SET_PRICP( IS_PRICP = LS_PRICP
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
              endcase.
            endloop.

          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_PSCALE.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method INIT_STYLE.

  data:          LF_LOCKED     type        /VCXI/CKX_LOCKED,
                 LF_INUSE      type        /VCXI/VKSR_INUSE,
                 LF_CHANGEABLE type        ABAP_BOOL.
  data:          LR_PSCALE_MGR type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***----------------------------------------------------------------------------
*** Get Lock and In-Use Status & Changeable Status of Manager
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

  try.
      move ME->R_GATE->R_CLSPR ?to LR_PSCALE_MGR.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PSCALE_MGR.
  endtry.

  if LR_PSCALE_MGR is bound.
    move LR_PSCALE_MGR->IS_CHANGEABLE( ) to LF_CHANGEABLE.
  endif.

*** Set Right Style Definition based on is any change allowed
  if LF_LOCKED     eq ABAP_TRUE and
     LF_INUSE      eq ABAP_TRUE and
     LF_CHANGEABLE eq ABAP_TRUE.
    ME->F_STYLE_ENABLED    = CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
  else.
    ME->F_STYLE_ENABLED    = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
  endif.

*** Set general Style Disabled
  ME->F_STYLE_DISABLED = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.

endmethod.
