
class ZCL_VCXI_P3SS_UI_AFG definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_XFG
  create public .

public section.

  data S_AFG_VIS type ZVCXI_P3SS_S_AFG_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_AFG_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_ASPROP type SYUCOMM value 'AFG_ASPROP' ##NO_TEXT.
  data R_PR_AFG type ref to ZCL_VCXI_P3SS_PR_AFG .

  methods HANDLE_UC_ASPROP
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P3SS_UI_AFG definition
class ZCL_VCXI_P3SS_UI_AFG implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P3SS_UI_AFG_BIND'
      exporting
        IR_UI_AFG     = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_AFG.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_AFG_VIS  type ZVCXI_P3SS_S_AFG_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_AFG is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_AFG_VIS.

***--------------------------------------------------------------------------------------
*** Set Product Length
    if ME->S_AFG_VIS-S_PROLE ne LS_AFG_VIS-S_PROLE.
      ME->R_PR_AFG->SET_PROLE( IS_PROLE = LS_AFG_VIS-S_PROLE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Width
    if ME->S_AFG_VIS-S_PROWI ne LS_AFG_VIS-S_PROWI.
      ME->R_PR_AFG->SET_PROWI( IS_PROWI = LS_AFG_VIS-S_PROWI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Height
    if ME->S_AFG_VIS-S_PROHE ne LS_AFG_VIS-S_PROHE.
      ME->R_PR_AFG->SET_PROHE( IS_PROHE = LS_AFG_VIS-S_PROHE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_ASPROP.
        ME->HANDLE_UC_ASPROP( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_AFG.

  endmethod.
  method HANDLE_UC_ASPROP.

*** Start Popup of Properties (Outbound)
    ZCL_VCXI_P3SS_POPUP_ASPROP=>START( IR_BL_ASBPROP = ME->R_PR_AFG->GET_ASBPX( )
                                       IR_BL_ASFPROP = ME->R_PR_AFG->GET_ASFPX( )
                                       IF_WERKS      = ME->R_PR_AFG->GET_WERKS( ) ).


  endmethod.
  method INIT_VIS.

    data: LR_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP.

    free: ME->S_AFG_VIS.

    SUPER->INIT_VIS( ).
    ME->S_AFG_VIS-S_XFG_VIS = ME->S_XFG_VIS.
    check ME->R_PR_AFG is bound.

***------------------------------------------------------------------------------------------------
*** Get Product Dimension
    ME->S_AFG_VIS-PRODIM_DESCR = ME->R_PR_AFG->GET_PRODIM_DESCR( ).
    ME->S_AFG_VIS-S_PROWI = ME->R_PR_AFG->GET_PROWI( ).
    ME->S_AFG_VIS-S_PROLE = ME->R_PR_AFG->GET_PROLE( ).
    ME->S_AFG_VIS-S_PROHE = ME->R_PR_AFG->GET_PROHE( ).


***------------------------------------------------------------------------------------------------
*** Get Handling Dimension (Outbound)
    LR_BL_ASFPROP = ME->R_PR_AFG->GET_ASFPX( ).
    if LR_BL_ASFPROP is bound.
      ME->S_AFG_VIS-S_HNDDIM = LR_BL_ASFPROP->S_HNDDIM.
    endif.

  endmethod.
