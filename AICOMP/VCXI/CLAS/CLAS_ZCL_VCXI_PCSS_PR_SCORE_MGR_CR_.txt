
class ZCL_VCXI_PCSS_PR_SCORE_MGR_CR definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_SCORE_MGR
  create public .

public section.

  constants C_IPRVT_PC_SCORE_MGR_CR type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSS_SCORE_MGR_CR' ##NO_TEXT.

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods GET_TPRST_PRSTY
    redefinition .
protected section.

  data R_PC_PR_SPEC_CR type ref to ZCL_VCXI_PCSS_PR_SPEC_CR .

  methods CHECK_SUM_TAPE
    redefinition .
  methods CHECK_TOTAL_SCORP
    redefinition .
  methods GET_SCORES_CUST
    redefinition .
  methods HANDLE_INIT_REFERENCES
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_PR_SCORE_MGR_CR definition
class ZCL_VCXI_PCSS_PR_SCORE_MGR_CR implementation.
method CHECK_SUM_TAPE.

  data: LS_ROWID   type ZVCXI_PCS_S_ROWID,
        LS_TAPOS   type ZVCXI_P0SS_S_TAPOS.

  check ME->R_PC_PR_SPEC_CR is bound.

*** Start Postiv
  move ABAP_TRUE to RF_OKAY.

*** Check against Reel Width
  LS_ROWID = ME->R_PC_PR_SPEC_CR->GET_ROWID( ).
  LS_TAPOS = ME->GET_SUM_TAPES( IF_UOM_OUT = LS_ROWID-ROWID_UOM ).

*** Tape positions lower equal Roll Width
  if LS_TAPOS-TAPOS gt LS_ROWID-ROWID.
    RF_OKAY = ABAP_FALSE.
  endif.

endmethod.
method CHECK_TOTAL_SCORP.

  data: LS_ROWID   type ZVCXI_PCS_S_ROWID,
        LS_SCORP_L type ZVCXI_P0SS_S_SCORP.

  check ME->R_PC_PR_SPEC_CR is bound.

*** Start Postiv
  move ABAP_TRUE to RF_OKAY.

*** Check against Roll Width
  LS_ROWID = ME->R_PC_PR_SPEC_CR->GET_ROWID( ).

  LS_SCORP_L = ME->GET_SUM_CSCOR( IF_CSCOR   = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH
                                  IF_UOM_OUT = LS_ROWID-ROWID_UOM ).

*** Check Length Scores
  if ( LS_SCORP_L-SCORP ne LS_ROWID-ROWID ).
    RF_OKAY = ABAP_FALSE.
  endif.

endmethod.
method GET_SCORES_CUST.

  data: LS_ROWID  type  ZVCXI_PCS_S_ROWID,
        LS_SCORE  type  ZVCXI_P0SS_S_SCORE.

*** In case of Corrugated Roll we will have 1 automatic score
*** depending con Roll Width of specification
  if ME->R_PC_PR_SPEC_CR is bound.
    LS_ROWID = ME->R_PC_PR_SPEC_CR->GET_ROWID( ).
  endif.

*** Set Score Category
  LS_SCORE-CSCOR = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH.

*** Set Score Number
  LS_SCORE-NSCOR = 1.

*** Set Score Positon
  LS_SCORE-SCORP     = LS_ROWID-ROWID.
  LS_SCORE-SCORP_UOM = LS_ROWID-ROWID_UOM.

  clear: ET_SCORE.
  append LS_SCORE to ET_SCORE.
  EF_CHANGED = ABAP_TRUE.

endmethod.
method GET_STATUS.

*** Check Panel Orientation is filled
  if ME->GET_PANOR( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check Scores are not initial
  if ME->GET_CURR_SCORES( IF_SORTED = ABAP_FALSE ) is not initial.
*** Do further Checks
*** Check no Score Positon
    case ME->CHECK_SCORP( ).
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when others.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.

*** Check Sum of Scores against Sheet Dimensions
    if ME->CHECK_TOTAL_SCORP( ) eq ABAP_TRUE.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

***------------------------------------------------------------------
*** Check Sum of Tapes
  if ME->CHECK_SUM_TAPE( ) eq ABAP_TRUE.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

*** Check Panel Orientation is filled
  if ME->GET_PANOR( ) is not initial.
***   Panel Orientation is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '101' ).
  else.
***   Panel Orientation is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '102' ).
  endif.


*** Check Scores are not initial
  if ME->GET_CURR_SCORES( IF_SORTED = ABAP_FALSE ) is not initial.
*** Scores are maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '103' ).
*** Do further Checks
*** Check no Score Positon
    case ME->CHECK_SCORP( ).
      when 0.
***     Each Score has a Score Positon > 0.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '105' ).
      when 1.
***     One ore more Scores have a Score Positon = 0.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '106' ).
      when 2.
***     One ore more Scores have a negative Score Positon.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '130' ).
      when 3.
***     Two ore more Scores have a negative/initial Score Positon.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '131' ).
    endcase.

*** Check Sum of Scores against Sheet Dimensions
    if ME->CHECK_TOTAL_SCORP( ) eq ABAP_TRUE.
***   Sum of Scores match the Sheet Dimenions.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '107' ).
    else.
***   Sum of Scores do not match the Sheet Dimenions.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '108' ).
    endif.

  else.
*** No Scores are maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '104' ).
  endif.

***------------------------------------------------------------------
*** Check Sum of Tapes
  if ME->CHECK_SUM_TAPE( ) eq ABAP_TRUE.
*** Sum of Tapes do match Roll Width
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '512' ).
  else.
*** Sum of Tapes do not match Roll Width
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '513' ).
  endif.

endmethod.
method GET_TPRST_PRSTY.

  check ME->R_PC_PR_SPEC_CR is bound.
  EF_TPRST = ME->R_PC_PR_SPEC_CR->GET_TPRST( ).
  EF_PRSTY = ME->R_PC_PR_SPEC_CR->GET_PRSTY( ).

endmethod.
method HANDLE_INIT_REFERENCES.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_SPEC_CR=>C_IPRVT_PC_SPEC_CR
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE        is bound and
       LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PC_PR_SPEC_CR.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PC_PR_SPEC_CR.
  endtry.

  if  ME->R_PC_PR_SPEC_CR is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PCSS_PR_SPEC_CR=>C_IPRVT_PC_SPEC_CR
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

endmethod.
