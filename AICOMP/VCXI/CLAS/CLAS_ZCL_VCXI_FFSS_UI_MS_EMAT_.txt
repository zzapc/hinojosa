
class ZCL_VCXI_FFSS_UI_MS_EMAT definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_EMAT_VIS type ZVCXI_FFSS_S_MS_EMAT_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_MS_EMAT_VIS
    importing
      !IS_MS_EMAT_VIS type ZVCXI_FFSS_S_MS_EMAT_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_FP_FSTRC type SYUCOMM value 'FP_FSTRC' ##NO_TEXT.
  constants C_UC_FP_INFO type SYUCOMM value 'INFO' ##NO_TEXT.
  constants C_UC_FP_OPEN type SYUCOMM value 'OPEN' ##NO_TEXT.
  constants C_UC_IN_FPROP type SYUCOMM value 'IN_FPROP' ##NO_TEXT.
  constants C_UC_IN_FSTRC type SYUCOMM value 'IN_FSTRC' ##NO_TEXT.
  data R_GRID_CSTEP_INB type ref to ZCL_VCXI_FFSS_GRID_CSTEP_INB .
  data R_PR_MS_EMAT type ref to ZCL_VCXI_FFSS_PR_MS_EMAT .

  methods HANDLE_UC_FPROP
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FSTRC
    importing
      !IF_UCOMM type SYUCOMM optional
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_INFO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OPEN
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_MS_EMAT definition
class ZCL_VCXI_FFSS_UI_MS_EMAT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_MS_EMAT_BIND'
      exporting
        IR_UI_MS_EMAT = ME
      importing
        ES_DYNP       = ME->S_DYNP.

*** Create Grid for CStep Inbound
    create object ME->R_GRID_CSTEP_INB
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_CSTEP_INB'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_EMAT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_CSTEP_INB is bound.
      ME->R_GRID_CSTEP_INB->DO_FREE( ).
      clear ME->R_GRID_CSTEP_INB.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.

***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Check Open Supervisor is allowed
          if SCREEN-NAME eq '0100FP_BT_OPEN'.
            if ME->R_PR_MS_EMAT->IS_OPENSPV_ALLOWED( ) ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Check Gusset is allowed
          if ME->R_PR_MS_EMAT->IS_GUSSET_ALLOWED( ) ne ABAP_TRUE.
            if SCREEN-GROUP2 eq 'GUS'.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Check if Input has only one Inbound
          if SCREEN-GROUP1 = '1IN'.
            if ME->R_PR_MS_EMAT->IS_ONLY_ONE_IN( ) eq ABAP_TRUE.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          if SCREEN-NAME eq '0100FRM_CSTEP'.
            if ME->R_GRID_CSTEP_INB is bound.
              if ME->R_GRID_CSTEP_INB->IS_ENABLED( ) eq ABAP_FALSE.
***             Hide ALV
                ME->R_GRID_CSTEP_INB->DO_FREE( ).

***             Hide Frame
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              endif.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize VIS
    ME->INIT_VIS( ).

*** Refresh Grid
    if ME->R_GRID_CSTEP_INB is bound.
      if ME->R_GRID_CSTEP_INB->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_CSTEP_INB->F_REFRESH_REQ.
      endif.
      ME->R_GRID_CSTEP_INB->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_MS_EMAT_VIS.

    check ME->R_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Set Estimation Material Number
    if ME->S_MS_EMAT_VIS-MATNR ne IS_MS_EMAT_VIS-MATNR.
      ME->R_PR_MS_EMAT->SET_MATNR( IF_MATNR = IS_MS_EMAT_VIS-MATNR
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Reverse Film Structure
    if ME->S_MS_EMAT_VIS-FRFST ne IS_MS_EMAT_VIS-FRFST.
      ME->R_PR_MS_EMAT->SET_FRFST( IF_FRFST = IS_MS_EMAT_VIS-FRFST
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Reduction on Width
    if ME->S_MS_EMAT_VIS-REDUW ne IS_MS_EMAT_VIS-REDUW.
      ME->R_PR_MS_EMAT->SET_REDUW( IS_REDUW = IS_MS_EMAT_VIS-S_REDUW
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Ignore Trim Req.
    if ME->S_MS_EMAT_VIS-FITRW ne IS_MS_EMAT_VIS-FITRW.
      ME->R_PR_MS_EMAT->SET_FITRW( IF_FITRW = IS_MS_EMAT_VIS-FITRW
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_CSTEP_INB is bound.
      ME->R_GRID_CSTEP_INB->CHECK_CHANGED_DATA( ).
    endif.

    case IF_UCOMM.
      when C_UC_IN_FSTRC or C_UC_FP_FSTRC.
        ME->HANDLE_UC_FSTRC( IF_UCOMM = IF_UCOMM ).

      when C_UC_IN_FPROP.
        ME->HANDLE_UC_FPROP( ).

      when C_UC_FP_OPEN.
        ME->HANDLE_UC_OPEN( ).

      when C_UC_FP_INFO.
        ME->HANDLE_UC_INFO( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MS_EMAT.

  endmethod.
  method HANDLE_UC_FPROP.

    data: LR_BL_FIBPROP    type ref to ZCL_VCXI_FFSS_BL_FIBPROP,
          LR_BL_FIFPROP    type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

*** Get Film Property
    ME->R_PR_MS_EMAT->GET_FIBPX( importing ER_BL_FIBPROP = LR_BL_FIBPROP ).
    ME->R_PR_MS_EMAT->GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).

*** Start Popup
    ZCL_VCXI_FFSS_POPUP_FIPROP=>START( IR_BL_FIBPROP = LR_BL_FIBPROP
                                       IR_BL_FIFPROP = LR_BL_FIFPROP
                                       IS_FIWID      = ME->S_MS_EMAT_VIS-S_FIWID
                                       IS_FITIN      = ME->S_MS_EMAT_VIS-S_FITIN  ).

  endmethod.
  method HANDLE_UC_FSTRC.

    data: LR_BL_FISTRUCT     type ref to ZCL_VCXI_FFSS_BL_FISTRUCT.


*** Get Film Structure XML
    ME->R_PR_MS_EMAT->GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).

*** Start Popup
    check LR_BL_FISTRUCT is bound.
    ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT ).

  endmethod.
  method HANDLE_UC_INFO.

    data: LT_AMAT       type        ZVCXI_FFSS_TT_AMAT.
    data: LR_SALV_TABLE type ref to CL_SALV_TABLE,
          LR_COLUMNS    type ref to CL_SALV_COLUMNS.

    append lines of ME->R_PR_MS_EMAT->T_AMAT to LT_AMAT.

*** Create SALV
    try.
        CL_SALV_TABLE=>FACTORY( importing R_SALV_TABLE = LR_SALV_TABLE
                                changing  T_TABLE      = LT_AMAT ).

      catch CX_SALV_MSG .
        raise exception type /VCXI/CX_CKX.
    endtry.

    check LR_SALV_TABLE is bound.

*** Optimize Columns
    LR_COLUMNS = LR_SALV_TABLE->GET_COLUMNS( ).
    LR_COLUMNS->SET_OPTIMIZE( ).

*** Set Popup Screen
    LR_SALV_TABLE->SET_SCREEN_POPUP( START_COLUMN = 120
                                     END_COLUMN   = 170
                                     START_LINE   = 1
                                     END_LINE     = 10 ).

*** Display Popup
    LR_SALV_TABLE->DISPLAY( ).

  endmethod.
  method HANDLE_UC_OPEN.

    data: LR_GATE_XCONI type ref to /VCXI/CL_VKSR_GATE.

***-------------------------------------------------------------------------------------
*** Open Film Procurement Configuration
    ME->R_PR_MS_EMAT->OPEN( importing ER_GATE_XCONI = LR_GATE_XCONI ).

*** Display new Element
    if LR_GATE_XCONI is bound.
      ME->R_UIGATE->OPEN_SUBSCREEN(   IR_GATE  = LR_GATE_XCONI ).
      ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = LR_GATE_XCONI->F_GATKY ).
      ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = LR_GATE_XCONI->F_GATKY ).
    endif.

  endmethod.
  method INIT_VIS.

    free: ME->S_MS_EMAT_VIS.
    check ME->R_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Estimation Material
    ME->R_PR_MS_EMAT->GET_MATNR( receiving RF_MATNR = ME->S_MS_EMAT_VIS-MATNR ).

*** Estimation Material Description
    ME->R_PR_MS_EMAT->GET_MATNR_DESCR( receiving RF_DESCR = ME->S_MS_EMAT_VIS-MATNR_DESCR ).

*** Assigned Material
    ME->R_PR_MS_EMAT->GET_AMAT( receiving RF_AMAT = ME->S_MS_EMAT_VIS-AMAT ).

*** Assigned Material Description
    ME->R_PR_MS_EMAT->GET_AMAT_DESCR( receiving RF_DESCR = ME->S_MS_EMAT_VIS-AMAT_DESCR ).

*** Film Type
    ME->R_PR_MS_EMAT->GET_TFILM( importing EF_TFILM = ME->S_MS_EMAT_VIS-TFILM ).

*** Reverse Film Structure (Flag)
    ME->R_PR_MS_EMAT->GET_FRFST( importing EF_FRFST = ME->S_MS_EMAT_VIS-FRFST ).

*** Film Style
    ME->R_PR_MS_EMAT->GET_FISTY( importing EF_FISTY       = ME->S_MS_EMAT_VIS-FISTY
                                           EF_FISTY_DESCR = ME->S_MS_EMAT_VIS-FISTY_DESCR ).

*** Procurement Film Width
    ME->R_PR_MS_EMAT->GET_PFWID( importing ES_PFWID = ME->S_MS_EMAT_VIS-S_PFWID ).

*** Procurement Trim Requirement on Width
    ME->R_PR_MS_EMAT->GET_PTRQW( importing ES_PTRQW = ME->S_MS_EMAT_VIS-S_PTRQW ).

*** Film Tickness
    ME->R_PR_MS_EMAT->GET_FITHI( importing ES_FITHI = ME->S_MS_EMAT_VIS-S_FITHI ).

*** Film Density
    ME->R_PR_MS_EMAT->GET_FIDEN( importing ES_FIDEN = ME->S_MS_EMAT_VIS-S_FIDEN ).
    move ME->S_MS_EMAT_VIS-S_FIDEN-FIDEN_UOM to ME->S_MS_EMAT_VIS-FIDEN_UOMC6.

*** Left Gusset
    ME->R_PR_MS_EMAT->GET_GULEF( importing ES_GULEF = ME->S_MS_EMAT_VIS-S_GULEF ).

*** Right Gusset
    ME->R_PR_MS_EMAT->GET_GURIG( importing ES_GURIG = ME->S_MS_EMAT_VIS-S_GURIG ).

*** Folding Type
    ME->R_PR_MS_EMAT->GET_TFOLD( importing EF_TFOLD = ME->S_MS_EMAT_VIS-TFOLD
                                           EF_DESCR = ME->S_MS_EMAT_VIS-TFOLD_DESCR ).

*** Number of Layers
    ME->R_PR_MS_EMAT->GET_NOLAY( importing EF_NOLAY = ME->S_MS_EMAT_VIS-NOLAY ).

*** Minimum Lot Size
    ME->R_PR_MS_EMAT->GET_LOTMI( importing ES_LOTMI = ME->S_MS_EMAT_VIS-S_LOTMI ).

***--------------------------------------------------------------------------------------
*** Film Width (Inbound)
    ME->R_PR_MS_EMAT->GET_FIWID( importing ES_FIWID = ME->S_MS_EMAT_VIS-S_FIWID ).

*** Trim Requirement on Width (Inbound)
    ME->R_PR_MS_EMAT->GET_TREQW( importing ES_TREQW = ME->S_MS_EMAT_VIS-S_TREQW ).

*** Number of Ups (Inbound)
    ME->R_PR_MS_EMAT->GET_NOUPS( importing EF_NOUPS = ME->S_MS_EMAT_VIS-NOUPS ).

*** Internal Film Thickness (Inbound)
    ME->R_PR_MS_EMAT->GET_FITIN( importing ES_FITIN = ME->S_MS_EMAT_VIS-S_FITIN ).

*** Film Thickness External (Inbound)
    ME->R_PR_MS_EMAT->GET_FITEX( importing ES_FITEX = ME->S_MS_EMAT_VIS-S_FITEX ).

*** Surface Weight (Inbound)
    ME->R_PR_MS_EMAT->GET_SURWT( importing ES_SURWT = ME->S_MS_EMAT_VIS-S_SURWT ).
    move ME->S_MS_EMAT_VIS-S_SURWT-SURWT_UOM to ME->S_MS_EMAT_VIS-SURWT_UOMC6.


***--------------------------------------------------------------------------------------
*** Reduction on Width
    ME->R_PR_MS_EMAT->GET_REDUW( importing ES_REDUW = ME->S_MS_EMAT_VIS-S_REDUW ).

*** Flag - Ignore Trim Requirement on Width
    ME->R_PR_MS_EMAT->GET_FITRW( importing EF_FITRW = ME->S_MS_EMAT_VIS-FITRW ).

  endmethod.
