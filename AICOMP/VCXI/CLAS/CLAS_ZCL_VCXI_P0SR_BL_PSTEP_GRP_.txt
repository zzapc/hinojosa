
class ZCL_VCXI_P0SR_BL_PSTEP_GRP definition
  public
  inheriting from ZCL_VCXI_P0SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_P0SR_ADJ_PCDIM .
  interfaces ZIF_VCXI_P0SR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_MANU .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_GRP type /VCXI/VSMC_IPSTP value 'P0_PS_GRP'. "#EC NOTEXT
  data F_SHUNT type ZVCXI_XCSU_SHUNT read-only .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_GRP
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  constants C_ATTID_ISVCE type /VCXI/VKS_ATTID value 'ISVCE_MC'. "#EC NOTEXT
  constants C_IAATY_NOPCBUNDLE type /VCXI/VSMC_IAATY value 'P0_AA_NOPCBUNDLE'. "#EC NOTEXT
  data S_PRQTY_STACK type ZVCXI_XCSU_S_PRQTY .
  constants C_IAATY_SHUNT type /VCXI/VSMC_IAATY value 'P0_AA_SHUNT'. "#EC NOTEXT
  data T_PACKMAT type ZVCXI_P0SR_TT_PACKMAT .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data S_PRQTY_BUNDLE type ZVCXI_XCSU_S_PRQTY .
  data T_CPM_IN type ZVCXI_P0SR_TT_CPM_IN .

  methods ADD_SPVRE_CPM_MFSI_P
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_CPM_IN
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_PACKMAT
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_PCDIM
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_GRP
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_PACKMAT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_PACKMAT_A
    importing
      !IR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PACKMAT type ZVCXI_P0SR_S_PACKMAT
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_PACKMAT_L
    importing
      !IR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PACKMAT type ZVCXI_P0SR_S_PACKMAT
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_PACKMAT_P
    importing
      !IR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PACKMAT type ZVCXI_P0SR_S_PACKMAT
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_PACKMAT_W
    importing
      !IR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PACKMAT type ZVCXI_P0SR_S_PACKMAT
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_PSCALE_MGR
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IT_PSCALE type ZVCXI_XCSR_TT_PSCALE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_PSCALE_A
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_PSCALE_P
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_PSCALE_L
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_PSCALE_W
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SR_BL_PSTEP_GRP definition
class ZCL_VCXI_P0SR_BL_PSTEP_GRP implementation.
method ADD_ASPECTS_TO_RTE_PSTEP.

  data:          LS_RTE_SAVAL  type        /VCXI/VSMR_S_RTE_SAVAL,
                 LS_RTE_SAREC  type        /VCXI/VSMR_S_RTE_SAREC.
  field-symbols: <S_AVVAL>     type        /VCXI/VSMR_S_RTE_RANGE_AVVAL,
                 <S_ARECN>     type        /VCXI/VSMR_S_RTE_RANGE_ARECN.

***----------------------------------------------------------------------------
*** Get Super
  SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - P0_AA_SHUNT
  try.
      clear LS_RTE_SAVAL.
      append initial line         to LS_RTE_SAVAL-I_AVVAL assigning <S_AVVAL>.
      move 'I'                    to <S_AVVAL>-SIGN.
      move 'EQ'                   to <S_AVVAL>-OPTION.
      move ME->F_SHUNT            to <S_AVVAL>-LOW.

      IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_SHUNT
                                   II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).

    catch /VCXI/CX_CKX.
  endtry.

***----------------------------------------------------------------------------
*** Aspect - P0_AA_NOPCBUNDLE -> only if it is filled
  try.
      clear LS_RTE_SAREC.
      if ME->S_PRQTY_BUNDLE-PRQTY is not initial.
        move 1                                            to LS_RTE_SAREC-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to LS_RTE_SAREC-ASORT.
        append initial line           to LS_RTE_SAREC-I_ARECN assigning <S_ARECN>.
        move 'I'                      to <S_ARECN>-SIGN.
        move 'LE'                     to <S_ARECN>-OPTION.
        move ME->S_PRQTY_BUNDLE-PRQTY to <S_ARECN>-LOW.

        IR_RTE_PSTEP->SET_RTE_SAREC( IF_IAATY  = C_IAATY_NOPCBUNDLE
                                     II_ARECN  = LS_RTE_SAREC-I_ARECN
                                     IF_MAXSEL = LS_RTE_SAREC-MAXSEL
                                     IF_ASORT  = LS_RTE_SAREC-ASORT ).

      endif.

    catch /VCXI/CX_CKX.
  endtry.

endmethod.
method ADD_LIMITS_TO_RTE_PSTEP.

  data:          LF_LDUOM               type        /VCXI/VSMC_LDUOM,
                 LF_LDVAL               type        /VCXI/VSMR_LDVAL.
  data:          LI_LVVAL               type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
  data:          LT_LTYPE               type        /VCXI/CKX_TT_OBJECT.
  data:          LR_LTYPE               type ref to /VCXI/CL_VSMC_LTYPE,
                 LR_OBJECT              type ref to /VCXI/IF_CKX_OBJECT.
  field-symbols: <S_LVVAL>              type        /VCXI/VSMR_S_RTE_RANGE_LVVAL.

  SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
  LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
  loop at LT_LTYPE into LR_OBJECT.
    move LR_OBJECT ?to LR_LTYPE.

    clear: LF_LDVAL,
           LF_LDUOM,
           LI_LVVAL.

***----------------------------------------------------------------------------
    case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Shipping Unit (Processing)
      when 'XC_LT_VP_SHUNT'.
        append initial line to LI_LVVAL assigning <S_LVVAL>.
        move 'I'                          to <S_LVVAL>-SIGN.
        move 'EQ'                         to <S_LVVAL>-OPTION.
        move ME->F_SHUNT                  to <S_LVVAL>-LOW.

***   PC per Bundle (Processing)
      when 'P0_LT_DP_BUNDLE_NUM_PC'.
        check ME->S_PRQTY_BUNDLE-PRQTY     is not initial and
              ME->S_PRQTY_BUNDLE-PRQTY_UOM is not initial.
        move ME->S_PRQTY_BUNDLE-PRQTY      to LF_LDVAL.
        move ME->S_PRQTY_BUNDLE-PRQTY_UOM  to LF_LDUOM.

      when others.
        continue.
    endcase.


***----------------------------------------------------------------------------
*** Set
    case LR_LTYPE->F_MLTYP.
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
        IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                    IF_LDVAL = LF_LDVAL
                                    IF_LDUOM = LF_LDUOM ).
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
        IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                    II_LVVAL = LI_LVVAL ).
    endcase.
  endloop.

endmethod.
method ADD_SPVRE_CPM_MFSI_P.

  data:  LF_TABIX            type        I,
         LF_NO_CPM           type        I,
         LF_IMFXC            type        ZVCXI_XCSP_IMFXC,
         LF_NEXTL            type        ZVCXI_XCSP_NEXTL,
         LF_MFICF            type        ZVCXI_XCSP_MFICF,
         LF_MFICP            type        ZVCXI_XCSP_MFICP.
  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM,
         LS_CPM_IN           type        ZVCXI_P0SR_S_CPM_IN,
         LS_PCDIM            type        ZVCXI_P0SP_S_PCDIM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_MFSI_P     type ref to /VCXI/CL_VKSR_SPVRE.

  loop at ME->T_IMFXC_IN into LF_IMFXC
                         where TABLE_LINE cp '*CPM*'.    "Process only CPM
    move SY-TABIX to LF_TABIX.
    add 1 to LF_NO_CPM.

    if LR_SPVCE is not bound.
***------------------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_P'
                                          IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).
    endif.

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MFSI_P
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_MFMGR.
    append LR_SPVRE_MFSI_P to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MFSI_P->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set MF X-Connect
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC          to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move LF_IMFXC                                    to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** "Next Low-Level Code" Flag
    read table ME->T_NEXTL into LF_NEXTL index LF_TABIX.
    if SY-SUBRC eq 0.
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL        to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
      move LF_NEXTL                                    to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).
    endif.

*** Define Consumption Factor
    read table ME->T_CPM_IN into LS_CPM_IN index LF_NO_CPM.
    LF_MFICF = LS_CPM_IN-PMQTY .

*** Set Consumption Factor
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_MFICF        to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LF_MFICF                                    to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Define Consumption Factor per
    LF_MFICP = ME->S_PCDIM_OUT-PCUPS .

*** Set Consumption Factor Per
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_MFICP        to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LF_MFICP                                    to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** PC Direction
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_PCDIR      to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

  endloop.

endmethod.
method ADD_SPVRE_MC_PACKMAT.

  data:  LS_PACKMAT          type        ZVCXI_P0SR_S_PACKMAT,
         LS_LEOKY            type        /VCXI/VKSR_S_LEOKY,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
  loop at ME->T_PACKMAT into LS_PACKMAT.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_PACKMAT-ISVCE
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MC_PACKMAT
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_PARENT.
    append LR_SPVRE_MC_PACKMAT to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MC_PACKMAT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Material Number
    clear LS_LEOKY.
    move LS_PACKMAT-MATNR                            to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_LEOKY-SETBY.
    LR_SPVRE_MC_PACKMAT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***------------------------------------------------------------------------------------------------
*** Set Text
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_TEXT   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move LS_PACKMAT-TEXT                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PURCH    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
    move LS_PACKMAT-PURCH                              to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Vendor
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
    move LS_PACKMAT-LIFNR                              to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
    LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set specific Packmat Data
    case LS_PACKMAT-ISVCE.
      when 'MC_PACKMAT_A'.
        ME->SET_SPVRE_VALUE_MC_PACKMAT_A( IR_SPVRE_MC_PACKMAT = LR_SPVRE_MC_PACKMAT
                                          IS_PACKMAT          = LS_PACKMAT ).

      when 'MC_PACKMAT_L'.
        ME->SET_SPVRE_VALUE_MC_PACKMAT_L( IR_SPVRE_MC_PACKMAT = LR_SPVRE_MC_PACKMAT
                                          IS_PACKMAT          = LS_PACKMAT ).

      when 'MC_PACKMAT_P'.
        ME->SET_SPVRE_VALUE_MC_PACKMAT_P( IR_SPVRE_MC_PACKMAT = LR_SPVRE_MC_PACKMAT
                                          IS_PACKMAT          = LS_PACKMAT ).

      when 'MC_PACKMAT_W'.
        ME->SET_SPVRE_VALUE_MC_PACKMAT_W( IR_SPVRE_MC_PACKMAT = LR_SPVRE_MC_PACKMAT
                                          IS_PACKMAT          = LS_PACKMAT ).

    endcase.

    check LS_PACKMAT-T_PSCALE is not initial.

***------------------------------------------------------------------------------------------------
*** Add Price Scale
    ME->ADD_SPVRE_PSCALE_MGR( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                        IR_SPVRE_PARENT = LR_SPVRE_MC_PACKMAT
                                        IT_PSCALE       = LS_PACKMAT-T_PSCALE
                              changing  CT_SPVRE        = CT_SPVRE ).

  endloop.

endmethod.
method ADD_SPVRE_PSCALE_MGR.

  data:  LS_PSCALE           type        ZVCXI_XCSR_S_PSCALE.
  data:  LR_SPVCE_PSCALE_MGR type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVCE_PSCALE     type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_PSCALE_MGR type ref to /VCXI/CL_VKSR_SPVRE,
         LR_SPVRE_PSCALE     type ref to /VCXI/CL_VKSR_SPVRE.

  check IT_PSCALE is not initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE_PSCALE_MGR = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'PSCALE_MGR'
                                                 IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_PSCALE_MGR
    exporting
      IR_SPVCE  = LR_SPVCE_PSCALE_MGR
      IR_PARENT = IR_SPVRE_PARENT.
  append LR_SPVRE_PSCALE_MGR to CT_SPVRE.

*** Set In Use
  LR_SPVRE_PSCALE_MGR->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Add Scales
  loop at IT_PSCALE into LS_PSCALE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE_PSCALE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_PSCALE-ISVCE
                                               IR_SPVCE_PARENT = LR_SPVRE_PSCALE_MGR->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_PSCALE
      exporting
        IR_SPVCE  = LR_SPVCE_PSCALE
        IR_PARENT = LR_SPVRE_PSCALE_MGR.
    append LR_SPVRE_PSCALE to CT_SPVRE.

*** Set In Use
    LR_SPVRE_PSCALE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set specific Price Scale Data
    case LS_PSCALE-ISVCE.
      when 'PSCALE_A'.
        ME->SET_SPVRE_VALUE_PSCALE_A( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                      IS_PSCALE       = LS_PSCALE ).

      when 'PSCALE_P'.
        ME->SET_SPVRE_VALUE_PSCALE_P( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                      IS_PSCALE       = LS_PSCALE ).

      when 'PSCALE_W'.
        ME->SET_SPVRE_VALUE_PSCALE_W( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                      IS_PSCALE       = LS_PSCALE ).

      when 'PSCALE_L'.
        ME->SET_SPVRE_VALUE_PSCALE_L( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                      IS_PSCALE       = LS_PSCALE ).

    endcase.

  endloop.

endmethod.
method COMPARE.

  data:  LR_BL_PSTEP_GRP type ref to ZCL_VCXI_P0SR_BL_PSTEP_GRP.

*** Super Compare
  RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
  check RF_SIMILAR eq ABAP_TRUE.

  move IR_BL_PSTEP ?to LR_BL_PSTEP_GRP.

***----------------------------------------------------------------------------
*** PC Dimensions
  if ME->S_PCDIM_OUT eq LR_BL_PSTEP_GRP->S_PCDIM_OUT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

***----------------------------------------------------------------------------
*** Shipping Unit
  if ME->F_SHUNT eq LR_BL_PSTEP_GRP->F_SHUNT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

***----------------------------------------------------------------------------
*** Packaging Materials
  if ME->T_PACKMAT eq LR_BL_PSTEP_GRP->T_PACKMAT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

***----------------------------------------------------------------------------
*** Configured Packaging Materials
  if ME->T_CPM_IN eq LR_BL_PSTEP_GRP->T_CPM_IN.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

***----------------------------------------------------------------------------
*** Number PC per Bundle
  if ME->S_PRQTY_BUNDLE eq LR_BL_PSTEP_GRP->S_PRQTY_BUNDLE.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                      IF_DATE    = IF_DATE
                      IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
  move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
  ME->INIT_MANU( ).

*** Initialize Outsourcing Info
  move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
  ME->INIT_OUTSO( ).

endmethod.
method COPY.

  data:  LR_BL_PSTEP_GRP type ref to ZCL_VCXI_P0SR_BL_PSTEP_GRP.

*** Super Copy
  RR_BL_PSTEP = SUPER->COPY( ).
  move RR_BL_PSTEP ?to LR_BL_PSTEP_GRP.

***----------------------------------------------------------------------------
*** PC Dimensions
  move ME->S_PCDIM_OUT    to LR_BL_PSTEP_GRP->S_PCDIM_OUT.

***----------------------------------------------------------------------------
*** Shipping Unit
  move ME->F_SHUNT        to LR_BL_PSTEP_GRP->F_SHUNT.

***----------------------------------------------------------------------------
*** Packaging Materials
  move ME->T_PACKMAT      to LR_BL_PSTEP_GRP->T_PACKMAT.
  move ME->T_CPM_IN       to LR_BL_PSTEP_GRP->T_CPM_IN.

***----------------------------------------------------------------------------
*** Number PC per Bundle
  move ME->S_PRQTY_BUNDLE  to LR_BL_PSTEP_GRP->S_PRQTY_BUNDLE.

endmethod.
method DESERIALIZE.

  data:  LF_XML   type STRING.

  check IF_XML is not initial.

*** Deserialize
  call transformation ID
       source xml IF_XML
       result SUPER_XML      = LF_XML

              S_PCDIM_OUT    = ME->S_PCDIM_OUT
              S_PRQTY_STACK  = ME->S_PRQTY_STACK
              S_PRQTY_BUNDLE = ME->S_PRQTY_BUNDLE

              F_SHUNT        = ME->F_SHUNT

              T_PACKMAT      = ME->T_PACKMAT
              T_CPM_IN       = ME->T_CPM_IN.

*** Super Deserialize
  SUPER->DESERIALIZE( IF_XML = LF_XML ).

endmethod.
method FILL_SPVRE_ADDON.

  SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     IR_ARBPL       = IR_ARBPL
                           changing  CT_SPVRE       = CT_SPVRE ).

  case IR_SPVRE_ADDON->GET_ID( ).
    when 'P0_AT_GRP'.
      ME->FILL_SPVRE_ADDON_GRP( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                          IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                changing  CT_SPVRE       = CT_SPVRE ).
  endcase.

endmethod.
method FILL_SPVRE_ADDON_GRP.

  data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Shipping Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_SHUNT  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move ME->F_SHUNT                                 to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Previous Quantity ( only in Case of Bundle it is filled)
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PRQTY  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PRQTY_BUNDLE-PRQTY                    to LS_PARAM-ATFLV.
  move ME->S_PRQTY_BUNDLE-PRQTY_UOM                to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Ups
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_UNIT=>C_PARID_PCUPS  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCUPS                       to LS_PARAM-ATFLV.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Packaging Material
  ME->ADD_SPVRE_MC_PACKMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = IR_SPVRE_ADDON
                            changing  CT_SPVRE        = CT_SPVRE ).

endmethod.
method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
  check CF_ID_GRP   is initial and
        CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
  move 'GRP_CONV' to CF_ID_GRP.
  move 'CONV'     to CF_ID_ARBPL.

*** If Manual
  if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
    move 'GRP_CONV' to CF_ID_GRP.
    move 'MANU'     to CF_ID_ARBPL.
  endif.

*** If Outsourcing
  if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
    move 'GRP_CONV' to CF_ID_GRP.
    move 'OUTSO'    to CF_ID_ARBPL.
  endif.

endmethod.
method GET_SPVRE_ACTVY.

  data:  LS_PARAM        type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_ACTVY  type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity Unitizing
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_GRP'
                                      IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_ACTVY
    exporting
      IR_SPVCE  = LR_SPVCE
      IR_PARENT = IR_SPVRE_ARBPL.
  append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
  LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Ups
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_UNIT=>C_PARID_PCUPS  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCUPS                       to LS_PARAM-ATFLV.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Packaging Material
  ME->ADD_SPVRE_MC_PACKMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                            changing  CT_SPVRE        = RT_SPVRE ).

endmethod.
method GET_SPVRE_MF.

  data:  LF_MFO   type ABAP_BOOL.

*** Delay MFO
  move ABAP_TRUE to LF_MFO.

*** Process Super
  SUPER->GET_SPVRE_MF( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                 IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                       changing  CT_SPVRE       = CT_SPVRE
                                 CF_MFI         = CF_MFI
                                 CF_MFO         = LF_MFO ).

***------------------------------------------------------------------------------------------------
*** Add Configured Packaging Material as MFSI
  ME->ADD_SPVRE_CPM_MFSI_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).

***------------------------------------------------------------------------------------------------
*** Add MFSO PC (replace if needed)
  ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                  IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                        changing  CT_SPVRE       = CT_SPVRE ).
  move ABAP_TRUE to CF_MFO.

endmethod.
method INIT_BY_SPEC.

  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_SHIPMGR     type ref to ZCL_VCXI_XCSU_PR_SHIPMGR,
         LR_PR_SHIPUNIT    type ref to ZCL_VCXI_XCSU_PR_SHIPUNIT.
  data:  LT_GATE_BUNDLE    type        /VCXI/VKSR_TT_GATE.

  SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                       IT_PRVDR = IT_PRVDR ).
***------------------------------------------------------------------------------------------------
*** Get Shipping Manager
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SHIPMGR.
        if LR_PR_SHIPMGR is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

  check LR_PR_SHIPMGR is bound.

  move IT_PRVDR to LT_GATE_BUNDLE.
  LR_PR_SHIPMGR->FILTER_BY_SHUNT( exporting IF_ATTID_SHUNT = ZCL_VCXI_XCSU_PR_SHIPMGR=>C_ATTID_SHUNT_BUNDLE
                                  changing  CT_GATE        = LT_GATE_BUNDLE ).

***------------------------------------------------------------------------------------------------
*** Get Shipping unit
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SHIPUNIT.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

*** Get Number of PC per Bundle
    if LR_PR_SHIPUNIT is bound.
      ME->F_SHUNT = LR_PR_SHIPUNIT->GET_SHUNT( ).
      check LT_GATE_BUNDLE is not initial.
      LR_PR_SHIPUNIT->GET_PRQTY( importing ES_PRQTY = ME->S_PRQTY_BUNDLE ).
    endif.
  endloop.

*** Get PC Dimensions
  ME->INIT_BY_SPEC_PCDIM( IR_GATE  = IR_GATE
                          IT_PRVDR = IT_PRVDR ).

*** Get Packaging Materials
  ME->INIT_BY_SPEC_PACKMAT( IR_GATE  = IR_GATE
                            IT_PRVDR = IT_PRVDR ).

*** Get Configured Packaging Materials
  ME->INIT_BY_SPEC_CPM_IN( IR_GATE  = IR_GATE
                           IT_PRVDR = IT_PRVDR ).

endmethod.
method INIT_BY_SPEC_CPM_IN.

  data:          LS_PMQTY          type        ZVCXI_XCSU_S_PMQTY.
  data:          LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_CPM         type ref to ZCL_VCXI_XCSU_PR_CPM.
  field-symbols: <S_CPM_IN>        type        ZVCXI_P0SR_S_CPM_IN.

***------------------------------------------------------------------------------------------------
*** Process all Packaging Materials
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_CPM.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

    append initial line to ME->T_CPM_IN assigning <S_CPM_IN>.

*** Packaging Material Quantity
    LR_PR_CPM->GET_PMQTY( importing ES_PMQTY = LS_PMQTY ).
    move-corresponding LS_PMQTY       to <S_CPM_IN>.

  endloop.

endmethod.
method INIT_BY_SPEC_PACKMAT.

  data: LS_PMQTY type        ZVCXI_XCSU_S_PMQTY,
        LS_ATTRI type        /VCXI/VKS_S_ATTRI.
  data: LT_GATE  type        /VCXI/VKSR_TT_GATE.
  data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
        LR_GATE_PSCALE type ref to /VCXI/CL_VKSR_GATE,
        LR_PR_PACKMAT  type ref to ZCL_VCXI_XCSU_PR_PACKMAT,
        LR_PR_PSCALE   type ref to ZCL_VCXI_XCS_PR_PSCALE.
  field-symbols: <S_PACKMAT> type        ZVCXI_P0SR_S_PACKMAT,
                 <S_PSCALE>  type        ZVCXI_XCSR_S_PSCALE.

***------------------------------------------------------------------------------------------------
*** Process all Packaging Materials
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_PACKMAT.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

    append initial line to ME->T_PACKMAT assigning <S_PACKMAT>.

*** Set SVC ID
    LS_ATTRI = LR_GATE->GET_ATTRI( IF_ATTID = C_ATTID_ISVCE ).
    move LS_ATTRI-ATTVA to <S_PACKMAT>-ISVCE.

*** Material Number and Text
    move LR_PR_PACKMAT->GET_PMATN( )  to <S_PACKMAT>-MATNR.
    move LR_PR_PACKMAT->GET_TEXT( )   to <S_PACKMAT>-TEXT.

*** Packaging Material Quantity
    LR_PR_PACKMAT->GET_PMQTY( importing ES_PMQTY = LS_PMQTY ).
    move-corresponding LS_PMQTY       to <S_PACKMAT>.

*** Get Purchase Flag
    move LR_PR_PACKMAT->GET_PURCH( )  to <S_PACKMAT>-PURCH.

*** Get Purchased Info's if needed
    check LR_PR_PACKMAT->GET_PURCH( ) ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

    move LR_PR_PACKMAT->GET_PRICE( )  to <S_PACKMAT>-S_PRICE.
    move LR_PR_PACKMAT->GET_PRICP( )  to <S_PACKMAT>-S_PRICP.
    move LR_PR_PACKMAT->GET_LIFNR( )  to <S_PACKMAT>-LIFNR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Price Scale
    loop at IT_PRVDR into LR_GATE_PSCALE.
      clear: LR_PR_PSCALE.
      try.
***       Check Scale is part of Packaging Material
          check LR_GATE_PSCALE->IS_IN_LINE( IR_GATE = LR_GATE ) eq ABAP_TRUE.
          move LR_GATE_PSCALE->R_CLSPR ?to LR_PR_PSCALE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_PSCALE.
      endtry.
      check LR_PR_PSCALE is bound.

      append initial line to <S_PACKMAT>-T_PSCALE assigning <S_PSCALE>.

***   Add Price Scales
      move LR_GATE_PSCALE->F_ID  to <S_PSCALE>-ISVCE.

      <S_PSCALE>-S_PSQTY = LR_PR_PSCALE->GET_PSQTY( ).
      <S_PSCALE>-S_PRICE = LR_PR_PSCALE->GET_PRICE( ).
      <S_PSCALE>-S_PRICP = LR_PR_PSCALE->GET_PRICP( ).

    endloop.
  endloop.

endmethod.
method INIT_BY_SPEC_PCDIM.

  data:  LS_DIMEN                      type        ZVCXI_XCSU_S_DIMEN,
         LS_TBQTY                      type        ZVCXI_XCSU_S_TBQTY.
  data:  LT_DIMEN                      type        ZVCXI_XCSU_TT_DIMEN.
  data:  LR_GATE                       type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_SHIPUNIT                type ref to ZCL_VCXI_XCSU_PR_SHIPUNIT,
         LR_CX_SY_CONVERSION_OVERFLOW  type ref to CX_SY_CONVERSION_OVERFLOW.

***------------------------------------------------------------------------------------------------
*** Get Shipping Unit Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SHIPUNIT.
        if LR_PR_SHIPUNIT is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_SHIPUNIT is bound.

***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
  LR_PR_SHIPUNIT->GET_DIMEN( importing ET_DIMEN = LT_DIMEN ).

  try.
***   Length of Unit
      read table LT_DIMEN with key DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH
      into LS_DIMEN.
      if SY-SUBRC = 0.
        move LS_DIMEN-DIMVA             to ME->S_PCDIM_OUT-PCLEN.
        move LS_DIMEN-DIMVA_UOM         to ME->S_PCDIM_OUT-PCLEN_UOM.
      endif.

***   Width of Unit
      read table LT_DIMEN with key DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH
      into LS_DIMEN.
      if SY-SUBRC = 0.
        move LS_DIMEN-DIMVA             to ME->S_PCDIM_OUT-PCWID.
        move LS_DIMEN-DIMVA_UOM         to ME->S_PCDIM_OUT-PCWID_UOM.
      endif.

***   Height of Unit
      read table LT_DIMEN with key DIMEN = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT
      into LS_DIMEN.
      if SY-SUBRC = 0.
        move LS_DIMEN-DIMVA             to ME->S_PCDIM_OUT-PCHEI.
        move LS_DIMEN-DIMVA_UOM         to ME->S_PCDIM_OUT-PCHEI_UOM.
      endif.

***   Ups Total of Unit
      LS_TBQTY = LR_PR_SHIPUNIT->GET_TBQTY( ).
      move LS_TBQTY-TBQTY               to ME->S_PCDIM_OUT-PCUPS.

***   PC Direction
      move 'A'                          to ME->S_PCDIM_OUT-PCDIR.

    catch CX_SY_CONVERSION_OVERFLOW into LR_CX_SY_CONVERSION_OVERFLOW.
      /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_CONVERSION_OVERFLOW ).
  endtry.


*** Get PC Type and Direction
  ZCL_VCXI_P0SR_CUST_PSTEP=>GET_PSTEP_INFO( exporting IF_IPSTP = ME->F_IPSTP
                                            importing EF_PCTYP = ME->S_PCDIM_OUT-PCTYP
                                                      EF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR
                                                      EF_PCDOP = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDOP ).

  if ME->S_PCDIM_OUT-PCTYP is initial.
*** Set Shipping Unit as PC Type
    move ME->F_SHUNT to ME->S_PCDIM_OUT-PCTYP.
  endif.

*** Set Direction
  ME->ZIF_VCXI_P0SR_PCDIR~SET_PCDIR( IF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR ).

*** Set Number of Outs always to 1
  move 1 to ME->S_PCDIM_OUT-NOOUT.

endmethod.
method SERIALIZE.

*** Super Serialize
  RF_XML = SUPER->SERIALIZE( ).

*** Serialize
  call transformation ID
       source SUPER_XML      = RF_XML

              S_PCDIM_OUT    = ME->S_PCDIM_OUT
              S_PRQTY_STACK  = ME->S_PRQTY_STACK
              S_PRQTY_BUNDLE = ME->S_PRQTY_BUNDLE

              F_SHUNT        = ME->F_SHUNT

              T_PACKMAT      = ME->T_PACKMAT
              T_CPM_IN       = ME->T_CPM_IN

       result xml RF_XML.

endmethod.
method SET_SPVRE_VALUE_MC_PACKMAT_A.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_A  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PMQTY                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PMQTY_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

  check IS_PACKMAT-PURCH eq ABAP_TRUE.

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICE  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICE                            to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICE_CURR                       to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_A  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICP                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICP_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Vendor
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_PACKMAT-LIFNR                              to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
method SET_SPVRE_VALUE_MC_PACKMAT_L.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PMQTY                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PMQTY_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

  check IS_PACKMAT-PURCH eq ABAP_TRUE.

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICE  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICE                            to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICE_CURR                       to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICP                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICP_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Vendor
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_PACKMAT-LIFNR                              to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
method SET_SPVRE_VALUE_MC_PACKMAT_P.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_P  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PMQTY                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PMQTY_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

  check IS_PACKMAT-PURCH eq ABAP_TRUE.

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICE  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICE                            to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICE_CURR                       to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_P  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICP                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICP_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Vendor
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_PACKMAT-LIFNR                              to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
method SET_SPVRE_VALUE_MC_PACKMAT_W.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_W  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PMQTY                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PMQTY_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

  check IS_PACKMAT-PURCH eq ABAP_TRUE.

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICE  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICE                            to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICE_CURR                       to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_W  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PACKMAT-PRICP                              to LS_PARAM-ATFLV.
  move IS_PACKMAT-PRICP_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Vendor
  clear LS_PARAM.
  move ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_PACKMAT-LIFNR                              to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
method SET_SPVRE_VALUE_PSCALE_A.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_A       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_A       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method SET_SPVRE_VALUE_PSCALE_L.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_L       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_L       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method SET_SPVRE_VALUE_PSCALE_P.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_P       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_P       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method SET_SPVRE_VALUE_PSCALE_W.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_W       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_W       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_IN.
endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_OUT.

  field-symbols: <S_PCDIM> type ZVCXI_P0SP_S_PCDIM.

  loop at CT_PCDIM assigning <S_PCDIM>.
    move ME->S_PCDIM_OUT to <S_PCDIM>.
  endloop.

endmethod.
method ZIF_VCXI_P0SR_PCDIR~SET_PCDIR.

  move IF_PCDIR to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.

*** Turn PC Dimension OUT
  ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                    IF_PCDIR = IF_PCDIR ).

endmethod.
