
class ZCL_VCXI_PXSS_CUST_INK definition
  public
  inheriting from ZCL_VCXI_XCS_CUST_MATNR
  create protected .

public section.

  data S_SLDCO type ZVCXI_PXS_S_SLDCO read-only .

  class-methods GET_INSTANCE_INK
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS default SY-DATUM
    returning
      value(RR_INSTANCE) type ref to ZCL_VCXI_PXSS_CUST_INK
    raising
      /VCXI/CX_CKX .
  methods CALC_APVOL
    importing
      !IS_APWGT type ZVCXI_PXS_S_APWGT
      !IS_APVOP type ZVCXI_PXS_S_APVOP
      !IF_UOM type /VCXI/CKX_UOM
    returning
      value(RS_APVOL) type ZVCXI_PXS_S_APVOL
    raising
      /VCXI/CX_CKX .
  methods CALC_APWGT
    importing
      !IS_APVOL type ZVCXI_PXS_S_APVOL
      !IS_APVOP type ZVCXI_PXS_S_APVOP
      !IF_UOM type /VCXI/CKX_UOM
    returning
      value(RS_APWGT) type ZVCXI_PXS_S_APWGT
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_MAPID_SLDCO type /VCXI/CKXC_MAPID value 'SLDCO' ##NO_TEXT.
  constants C_SETID_INK type /VCXI/CKXC_SETID value 'ZVCXI_PXS_INK' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS
    raising
      /VCXI/CX_CKX .
  methods LOAD_BY_CCM
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_CUST_INK definition
class ZCL_VCXI_PXSS_CUST_INK implementation.
  method CALC_APVOL.

    data: LS_CALCV_WEIGHT type ZVCXI_XCS_S_CALCV.


*** Convert to Weight
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_APWGT-APWGT
                                                        IF_CALCV_UOM_1 = IS_APWGT-APWGT_UOM
                                                        IF_CALCV_2     = IS_APVOP-APVOP
                                                        IF_CALCV_UOM_2 = IS_APVOP-APVOP_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                              importing EF_CALCV       = LS_CALCV_WEIGHT-CALCV
                                                        EF_CALCV_UOM   = LS_CALCV_WEIGHT-CALCV_UOM ).

*** Convert Weight to Volume based on Material
    ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_MATNR_UNIT( exporting IF_MATNR     = ME->F_MATNR
                                                             IF_VALUE_IN  = LS_CALCV_WEIGHT-CALCV
                                                             IF_UOM_IN    = LS_CALCV_WEIGHT-CALCV_UOM
                                                             IF_UOM_OUT   = IF_UOM
                                                   importing EF_VALUE_OUT = RS_APVOL-APVOL
                                                             EF_UOM_OUT   = RS_APVOL-APVOL_UOM ).

  endmethod.
  method CALC_APWGT.

    data: LS_CALCV_WEIGHT type ZVCXI_XCS_S_CALCV.


*** Convert Volum to Weight based on Material
    ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_MATNR_UNIT( exporting IF_MATNR     = ME->F_MATNR
                                                             IF_VALUE_IN  = IS_APVOL-APVOL
                                                             IF_UOM_IN    = IS_APVOL-APVOL_UOM
                                                             IF_UOM_OUT   = 'KG'
                                                   importing EF_VALUE_OUT = LS_CALCV_WEIGHT-CALCV
                                                             EF_UOM_OUT   = LS_CALCV_WEIGHT-CALCV_UOM ).

*** Convert to Mass Coverage
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_CALCV_WEIGHT-CALCV
                                                        IF_CALCV_UOM_1 = LS_CALCV_WEIGHT-CALCV_UOM
                                                        IF_CALCV_2     = IS_APVOP-APVOP
                                                        IF_CALCV_UOM_2 = IS_APVOP-APVOP_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                        IF_UOM         = IF_UOM
                                              importing EF_CALCV       = RS_APWGT-APWGT
                                                        EF_CALCV_UOM   = RS_APWGT-APWGT_UOM ).

  endmethod.
  method CONSTRUCTOR.

    try.
        SUPER->CONSTRUCTOR( IF_MATNR = IF_MATNR
                            IF_WERKS = IF_WERKS
                            IF_DATE  = IF_DATE ).

***     Load Data by Cross Classification Mapping
        ME->LOAD_BY_CCM( ).

      cleanup.
        ME->DO_FREE( ).
    endtry.

  endmethod.
  method GET_INSTANCE_INK.

    data:  LS_INSTANCE type YS_INSTANCE.

***--------------------------------------------------------------------------------------
*** Check for buffered instance and ensure correct Class Type
    read table ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE into LS_INSTANCE
                                                   with key MATNR = IF_MATNR
                                                            WERKS = IF_WERKS
                                                            DATE  = IF_DATE.
    if SY-SUBRC eq 0.
      try.
          move LS_INSTANCE-R_INSTANCE ?to RR_INSTANCE.
        catch CX_SY_MOVE_CAST_ERROR.
          delete ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE where R_INSTANCE eq LS_INSTANCE-R_INSTANCE.
          clear RR_INSTANCE.
      endtry.
    endif.

***--------------------------------------------------------------------------------------
    if RR_INSTANCE is initial.
      try.
***       Constructor call of redefined Class
          create object RR_INSTANCE
            exporting
              IF_MATNR = IF_MATNR
              IF_WERKS = IF_WERKS
              IF_DATE  = IF_DATE.

        cleanup.
          clear RR_INSTANCE.
      endtry.
    endif.

  endmethod.
  method LOAD_BY_CCM.

    data: LF_OBJNUM type  OBJNUM.
    data: LS_SETVA type  /VCXI/CKXC_S_SETVA,
          LS_MAPVC type  /VCXI/CKXC_S_MAPVC,
          LS_MAPVN type  /VCXI/CKXC_S_MAPVN.
    data: LT_SETVA type  /VCXI/CKXC_TT_SETVA.

*** Get Ink Info
    move ME->F_MATNR to LF_OBJNUM.
    LT_SETVA = /VCXI/CL_CKXC_CCM=>GET_SETVA( IF_SETID  = C_SETID_INK
                                             IF_OBJNUM = LF_OBJNUM
                                             IF_MCTXT  = 'SVC' ).

    loop at LT_SETVA into LS_SETVA.
      clear: LS_MAPVC,
             LS_MAPVN.

      case LS_SETVA-MAPID.
***     Solid Content
        when C_MAPID_SLDCO.
          read table LS_SETVA-T_MAPVN into LS_MAPVN index 1.
          if SY-SUBRC eq 0.
            move LS_MAPVN-ATFLV     to ME->S_SLDCO-SLDCO.
            move LS_MAPVN-ATFLV_UOM to ME->S_SLDCO-SLDCO_UOM.
          endif.

      endcase.
    endloop.

  endmethod.
