
class ZCL_VCXI_FFSP_GRID_FIOUT definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
      !IF_TABNAME type TABNAME default 'ZVCXI_FFSP_S_FIOUT_GRID'
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_FIOUT
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_FIOUT_VIS
    importing
      !IR_PR_FIOUT type ref to ZCL_VCXI_FFSP_PR_FIOUT
    returning
      value(RS_FIOUT_VIS) type ZVCXI_FFSP_S_FIOUT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_FIOUT_VIS
    importing
      !IR_PR_FIOUT type ref to ZCL_VCXI_FFSP_PR_FIOUT
      !IS_FIOUT_VIS type ZVCXI_FFSP_S_FIOUT_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSP_GRID_FIOUT definition
class ZCL_VCXI_FFSP_GRID_FIOUT implementation.
method CHANGE_STYLE_FIOUT.

  free CT_STYL.

***--------------------------------------------------------------------------------------
*** Set Film Width = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIWID'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Film Width Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIWID_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Repeat Length = Editable if needed
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RELEN'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Repeat Length Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RELEN_UOM'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Number of Ups = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPS'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_FFSP_PR_FIOUT=>C_IPRVT_FIOUT.

endmethod.
method GET_FIELDCAT.

  data: LF_LOCKED type        /VCXI/CKX_LOCKED,
        LF_INUSE  type        /VCXI/VKSR_INUSE.
  field-symbols: <S_FCAT>  type        LVC_S_FCAT.

***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

      when 'FIWID'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'RELEN'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'NOUPS'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'NOOUT'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.
  endloop.

endmethod.
method GET_FIOUT_VIS.

*** Get Film Width
  IR_PR_FIOUT->GET_FIWID( importing ES_FIWID = RS_FIOUT_VIS-S_FIWID ).

*** Repeat Length
  IR_PR_FIOUT->GET_RELEN( importing ES_RELEN = RS_FIOUT_VIS-S_RELEN ).

*** Get Number Ups
  IR_PR_FIOUT->GET_NOUPS( importing EF_NOUPS = RS_FIOUT_VIS-NOUPS ).

*** Get Number Outs
  IR_PR_FIOUT->GET_NOOUT( importing EF_NOOUT = RS_FIOUT_VIS-NOOUT ).

endmethod.
method GET_GRID_DATA.

  data: LS_FIOUT_GRID type        ZVCXI_FFSP_S_FIOUT_GRID.
  data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
  data: LR_GATE     type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_FIOUT type ref to   ZCL_VCXI_FFSP_PR_FIOUT.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_FFSP_PR_FIOUT=>C_IPRVT_FIOUT
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_FIOUT_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_FIOUT.
        check LR_PR_FIOUT is bound.

***--------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_FIOUT_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_FIOUT_GRID-GATKY.
        move LR_GATE               to LS_FIOUT_GRID-R_GATE.

        LS_FIOUT_GRID-S_FIOUT_VIS = ME->GET_FIOUT_VIS( IR_PR_FIOUT = LR_PR_FIOUT ).

***--------------------------------------------------------------------------------------
***     Set Styles
        ME->CHANGE_STYLE_FIOUT( changing CT_STYL = LS_FIOUT_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_FIOUT_GRID-T_STYL ).

***--------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_FIOUT_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data: LS_FIOUT_GRID type       ZVCXI_FFSP_S_FIOUT_GRID.
  data: LR_PR_FIOUT type ref to  ZCL_VCXI_FFSP_PR_FIOUT,
        LR_CX_CKX   type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move-corresponding <S_DATA> to LS_FIOUT_GRID.

        move LS_FIOUT_GRID-R_GATE->R_CLSPR ?to LR_PR_FIOUT.

***     Set Values to PR Class
        ME->SET_FIOUT_VIS( IR_PR_FIOUT  = LR_PR_FIOUT
                           IS_FIOUT_VIS = LS_FIOUT_GRID-S_FIOUT_VIS ).
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_FIOUT_VIS.

  data:  LS_FIOUT_VIS   type ZVCXI_FFSP_S_FIOUT_VIS.

*** Get Current data to do Update only if Value changed.
  LS_FIOUT_VIS = ME->GET_FIOUT_VIS( IR_PR_FIOUT = IR_PR_FIOUT ).

***--------------------------------------------------------------------------------------
*** Set Film Width
  if LS_FIOUT_VIS-S_FIWID ne IS_FIOUT_VIS-S_FIWID.
    IR_PR_FIOUT->SET_FIWID( IS_FIWID = IS_FIOUT_VIS-S_FIWID
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Repeat Length
  if LS_FIOUT_VIS-S_RELEN ne IS_FIOUT_VIS-S_RELEN.
    IR_PR_FIOUT->SET_RELEN( IS_RELEN = IS_FIOUT_VIS-S_RELEN
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Number Ups
  if LS_FIOUT_VIS-NOUPS ne IS_FIOUT_VIS-NOUPS.
    IR_PR_FIOUT->SET_NOUPS( IF_NOUPS = IS_FIOUT_VIS-NOUPS
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Number Out
  if LS_FIOUT_VIS-NOOUT ne IS_FIOUT_VIS-NOOUT.
    IR_PR_FIOUT->SET_NOOUT( IF_NOOUT = IS_FIOUT_VIS-NOOUT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
