
class ZCL_VCXI_P5SP_GRID_MFO definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_P5SP_S_MFO_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_MFO
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFO_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_MFO_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P5SP_GRID_MFO definition
class ZCL_VCXI_P5SP_GRID_MFO implementation.
  method CHANGE_STYLE_MFO.

    free CT_STYL.

*** Set ID of MF x-connection = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Sheet Matnr = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Low Level Code = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZIF_VCXI_XCSP_MFO=>C_IPRVT_XCS_MFO.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_COLPOS type I.
    field-symbols: <S_FCAT> type LVC_S_FCAT.


***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
          move 'X' to <S_FCAT>-TECH.

***     ID for MF x-connect
        when 'IMFXC'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

      endcase.


***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'IMFXC'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFRAT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'DISST'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

      if <S_FCAT>-FIELDNAME eq 'WEBWI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'WEBWI_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RLETA'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RLETA_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOOUT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_P5SP_S_MFO_GRID( POSID  = LR_GATE->GET_POSID( )
                                                      GATKY  = LR_GATE->F_GATKY
                                                      R_GATE = LR_GATE
                                                    ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_MFO_VIS( exporting IR_GATE = LR_GATE
                       changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_MFO( exporting IR_GATE = LR_GATE
                                          IS_DATA = <S_DATA>
                                 changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_MFO_VIS.

    data: LS_MFO_VIS type ZVCXI_P5SP_S_MFO_VIS.
    data: LR_PR_MF type ref to ZCL_VCXI_XCSP_PR_MF,
          LR_MFSO  type ref to ZIF_VCXI_XCSP_MFSO.


***------------------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MF.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_MF is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_MFO_VIS.

***------------------------------------------------------------------------------------------------
*** Get Material Number, Description and X-connect
    LS_MFO_VIS-MATNR       = LR_PR_MF->GET_MATNR( ).
    LS_MFO_VIS-MATNR_DESCR = LR_PR_MF->GET_MATNR_DESCR( ).
    LS_MFO_VIS-IMFXC       = LR_PR_MF->GET_IMFXC( ).

*** Get Consumption and Material Flow Ratio
    LS_MFO_VIS       = corresponding #( base ( LS_MFO_VIS  ) LR_PR_MF->GET_CONSU( ) ).
    LS_MFO_VIS-MFRAT = LR_PR_MF->GET_MFRAT( ).

*** Get Low Level Code and Number of Outs
*{   REPLACE        HEDK927906                                        1
*\    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFSO.
   TRY.
*}   REPLACE
      LR_MFSO ?= LR_PR_MF.
      LS_MFO_VIS-DISST = LR_MFSO->GET_DISST( ).
      LS_MFO_VIS-NOOUT = LR_MFSO->ZIF_VCXI_XCSP_MFO~GET_NOOUT( ).
*{   REPLACE        HEDK927906                                        2
*\    endif.
        CATCH CX_SY_MOVE_CAST_ERROR.
     ENDTRY.
*}   REPLACE

***------------------------------------------------------------------------------------------------
*** Get Rool Diemension
*{   REPLACE        HEDK927906                                        3
*\    if LR_PR_MF is instance of ZIF_VCXI_P5SP_RLDIM.
*\      LS_MFO_VIS = corresponding #( base ( LS_MFO_VIS  ) cast ZIF_VCXI_P5SP_RLDIM( LR_PR_MF )->GET_RLDIM( ) ).
*\    endif.
     TRY.
         LS_MFO_VIS = corresponding #( base ( LS_MFO_VIS  ) cast ZIF_VCXI_P5SP_RLDIM( LR_PR_MF )->GET_RLDIM( ) ).
      CATCH CX_SY_MOVE_CAST_ERROR.
     ENDTRY.
*}   REPLACE

***------------------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_MFO_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MFO_GRID type ZVCXI_P5SP_S_MFO_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_MFO_GRID.

          check LS_MFO_GRID-R_GATE is bound and
                LS_MFO_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_MFO_VIS( IR_GATE = LS_MFO_GRID-R_GATE
                           IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method SET_MFO_VIS.

    data: LS_MFO_VIS_OLD type ZVCXI_P5SP_S_MFO_VIS,
          LS_MFO_VIS_NEW type ZVCXI_P5SP_S_MFO_VIS.
    data: LR_PR_MF type ref to ZCL_VCXI_XCSP_PR_MF.


***------------------------------------------------------------------------------------------------
*** Get PR Class
*{   REPLACE        HEDK927906                                        1
*\    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_XCSP_PR_MF.
    TRY.
*}   REPLACE
    LR_PR_MF ?= IR_GATE->R_CLSPR.
*{   INSERT         HEDK927906                                        2
   catch CX_SY_MOVE_CAST_ERROR.
   ENDTRY.
*}   INSERT
    check LR_PR_MF is bound.

*** Get old Values
    ME->GET_MFO_VIS( exporting IR_GATE = IR_GATE
                     changing  CS_DATA = LS_MFO_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_MFO_VIS_NEW.

***------------------------------------------------------------------------------------------------
*** ID for MF x-connection
    if LS_MFO_VIS_NEW-IMFXC ne LS_MFO_VIS_OLD-IMFXC.
      LR_PR_MF->SET_IMFXC( IF_IMFXC = LS_MFO_VIS_NEW-IMFXC
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
