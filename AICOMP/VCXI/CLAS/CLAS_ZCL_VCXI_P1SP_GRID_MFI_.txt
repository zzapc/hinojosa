
class ZCL_VCXI_P1SP_GRID_MFI definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data F_MFMI_P_IS_ACTIV type ABAP_BOOL .
  data F_MFSI_IS_ACTIV type ABAP_BOOL .
  data F_MFMI_IS_PURCH type ABAP_BOOL .
  data F_MFMI_PAPER_IS_ACTIV type ABAP_BOOL .

  methods CHECK_PSCALE_MGR_ACTIV
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_ACTIV) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFI
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFI_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_MFI_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SP_GRID_MFI definition
class ZCL_VCXI_P1SP_GRID_MFI implementation.
  method CHANGE_STYLE_MFI.

    data: LS_MFI_VIS type ZVCXI_P1SP_S_MFI_VIS.


    free CT_STYL.

***------------------------------------------------------------------------------------------------
*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_MFI_VIS.

***------------------------------------------------------------------------------------------------
*** Material Number
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZIF_VCXI_XCSP_MFM then ME->F_STYLE_ENABLED
                                                                                                              else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

*** Set ID of MF x-connection = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Component Scrap = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'KAUSF'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICF'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor per = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Setup Percentage = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFISP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Low-Level Code = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Next Low Level Code = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NEXTL'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZIF_VCXI_XCSP_MFSI then ME->F_STYLE_ENABLED
                                                                                                               else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

***------------------------------------------------------------------------------------------------
*** Purchase Material
    case LS_MFI_VIS-PURCH.
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***     Set Vendor = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

***------------------------------------------------------------------------------------------------
*** Dummy Flag
    if IR_GATE->R_CLSPR is instance of ZCL_VCXI_XCSP_PR_MFMI and
       cast ZCL_VCXI_XCSP_PR_MFMI( IR_GATE->R_CLSPR )->IS_DUMMY( ) eq ABAP_TRUE.
***   Purchase =  Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    else.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

***------------------------------------------------------------------------------------------------
*** Set Flute = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FLUTE'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** PC Dimension
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCTYP'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCLEN'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCWID'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCHEI'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCUPS'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCDIR'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_P0SP_PR_MFMI_P then ME->F_STYLE_ENABLED
                                                                                                                    else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

*** Base Weight
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGT'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_PCSP_PR_MFMI_PAPER then ME->F_STYLE_ENABLED
                                                                                                                        else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGP'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_PCSP_PR_MFMI_PAPER then ME->F_STYLE_ENABLED
                                                                                                                        else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

*** Paper Width
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PAWID'
                                IF_STYLE     = cond #( when IR_GATE->R_CLSPR is instance of ZCL_VCXI_PCSP_PR_MFMI_PAPER then ME->F_STYLE_ENABLED
                                                                                                                        else ME->F_STYLE_DISABLED )
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CHECK_PSCALE_MGR_ACTIV.

    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PSCALE_MGR type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***------------------------------------------------------------------
*** If we are connect to a Scale Manager -> Request Price depending on Consumption
    LT_GATE = IR_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCS_PSCALE_MGR=>C_IPRVT_XCS_PSCALE_MGR
                                  IF_INUSE = ABAP_TRUE ).

*** Assign Reference of Price Scale Manager
    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC eq 0.
      try.
          move LR_GATE->R_CLSPR ?to LR_PSCALE_MGR.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PSCALE_MGR.
      endtry.
    endif.

    check LR_PSCALE_MGR is bound.
    move ABAP_TRUE to RF_ACTIV.

  endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_PCSP_S_MFMI_P_MFSI_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZIF_VCXI_XCSP_MFI=>C_IPRVT_XCS_MFI.

endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED          type        /VCXI/CKX_LOCKED,
          LF_INUSE           type        /VCXI/VKSR_INUSE,
          LF_HIDE_MFMI_DATA  type        ABAP_BOOL,
          LF_HIDE_MFSI_DATA  type        ABAP_BOOL,
          LF_HIDE_PURCH_DATA type        ABAP_BOOL,
          LF_MFMI_IS_ACTIV   type        ABAP_BOOL.
    field-symbols: <S_FCAT>                 type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Get Show Hide Data
    if ME->F_MFMI_PAPER_IS_ACTIV eq ABAP_FALSE and
         ME->F_MFMI_P_IS_ACTIV   eq ABAP_FALSE.
      LF_HIDE_MFMI_DATA  = ABAP_TRUE.
      LF_MFMI_IS_ACTIV  = ABAP_FALSE.
    else.
      LF_HIDE_MFMI_DATA = ABAP_FALSE.
      LF_MFMI_IS_ACTIV  = ABAP_TRUE.
    endif.

    if ME->F_MFSI_IS_ACTIV eq ABAP_FALSE.
      LF_HIDE_MFSI_DATA  = ABAP_TRUE.
    else.
      LF_HIDE_MFSI_DATA  = ABAP_FALSE.
    endif.

    if ME->F_MFMI_IS_PURCH eq ABAP_FALSE.
      LF_HIDE_PURCH_DATA = ABAP_TRUE.
    else.
      LF_HIDE_PURCH_DATA = ABAP_FALSE.
    endif.


***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'FLUTE'.
          move ABAP_TRUE    to <S_FCAT>-TECH.

***     ID for MF x-connect
        when 'IMFXC'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

***     PC Direction
        when 'PCDIR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

***     Always Visible and Editable
        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

***     Component Factor and per / Setup %
        when 'MFICF' or 'MFICP' or 'MFISP'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

***     Component Scrap
        when 'KAUSF'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFSI_IS_ACTIV to <S_FCAT>-EDIT.
          endif.
        when 'MFICF_UOM' or 'MFISP_UOM' or 'KAUSF_UOM'.

***     Only Visible if MFSI is there
        when 'DISST'.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.

***     Next Low-Level Code
        when 'NEXTL'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE         to <S_FCAT>-EDIT.
          endif.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.
          move ABAP_TRUE           to <S_FCAT>-CHECKBOX.

***     Only Editable if MFMI is there
        when 'BAWGT' or 'BAWGP'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move LF_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
          endif.

***     Only Editable if MFMI Paper is there
        when 'PAWID'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFMI_PAPER_IS_ACTIV to <S_FCAT>-EDIT.
          endif.

***     Only Available if MFSI is there
        when 'PCWID' or 'PCLEN' or 'PCHEI'
          or 'PCUPS'.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.

***     Only Visible if MFMI is there and it is purchased
        when 'LIFNR' or 'PRICE' or 'PRICP'.
          move LF_HIDE_PURCH_DATA  to <S_FCAT>-NO_OUT.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFMI_IS_PURCH to <S_FCAT>-EDIT.
          endif.

        when 'TEXT'.
          move LF_HIDE_MFMI_DATA   to <S_FCAT>-NO_OUT.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move LF_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
          endif.

        when 'PRICE_CURR' or 'PRICP_UOM' or 'LIFNR_DESCR'.
          move LF_HIDE_PURCH_DATA to <S_FCAT>-NO_OUT.

        when 'PURCH'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move LF_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
          endif.

      endcase.
    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_P5SP_S_MFI_GRID( POSID  = LR_GATE->GET_POSID( )
                                                      GATKY  = LR_GATE->F_GATKY
                                                      R_GATE = LR_GATE
                                                    ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_MFI_VIS( exporting IR_GATE = LR_GATE
                       changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_MFI( exporting IR_GATE = LR_GATE
                                          IS_DATA = <S_DATA>
                                 changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_MFI_VIS.

    data: LS_MFI_VIS type ZVCXI_P1SP_S_MFI_VIS.
    data: LR_PR_MF type ref to ZCL_VCXI_XCSP_PR_MF,
          LR_MFI   type ref to ZIF_VCXI_XCSP_MFI,
          LR_MFM   type ref to ZIF_VCXI_XCSP_MFM.


***------------------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MF.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_MF is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_MFI_VIS.

***------------------------------------------------------------------------------------------------
*** Get Material Number, Description and X-connect
    LS_MFI_VIS-MATNR       = LR_PR_MF->GET_MATNR( ).
    LS_MFI_VIS-MATNR_DESCR = LR_PR_MF->GET_MATNR_DESCR( ).
    LS_MFI_VIS-IMFXC       = LR_PR_MF->GET_IMFXC( ).

*** Get Consumption and Material Flow Ratio
    LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_PR_MF->GET_CONSU( ) ).
    LS_MFI_VIS-MFRAT = LR_PR_MF->GET_MFRAT( ).

*** Get Material Flow In Infos
    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFI.
      LR_MFI ?= LR_PR_MF.
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFI->GET_MFISP( ) ).
      LS_MFI_VIS-MFICF = LR_MFI->GET_MFICF( ).
      LS_MFI_VIS-MFICP = LR_MFI->GET_MFICP( ).
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFI->GET_KAUSF( ) ).
    endif.

*** Get Material Flow SFG Infos
    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFSI.
      LS_MFI_VIS-DISST = cast ZIF_VCXI_XCSP_MFSI( LR_PR_MF )->GET_DISST( ).
      LS_MFI_VIS-NEXTL = cast ZIF_VCXI_XCSP_MFSI( LR_PR_MF )->GET_NEXTL( ).
    endif.

*** Get Material Flow Material Infos
    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFM.
      LR_MFM ?= LR_PR_MF.
      LS_MFI_VIS-TEXT        = LR_MFM->GET_TEXT( ).
      LS_MFI_VIS-PURCH       = LR_MFM->GET_PURCH( ).
      LS_MFI_VIS-LIFNR       = LR_MFM->GET_LIFNR( ).
      LS_MFI_VIS-LIFNR_DESCR = LR_MFM->GET_LIFNR_DESCR( ).
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFM->GET_PRICE( ) ).
      LS_MFI_VIS       = corresponding #( base ( LS_MFI_VIS  ) LR_MFM->GET_PRICP( ) ).
    endif.

***------------------------------------------------------------------------------------------------
*** PC Dimensions
    if LR_PR_MF is instance of ZIF_VCXI_P0SP_MFP.
      LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZIF_VCXI_P0SP_MFP( LR_PR_MF )->GET_PCDIM( ) ).
    endif.

    case type of LR_PR_MF.
      when type ZCL_VCXI_PCSP_PR_MFSI_P.
***     Get Base Weight
        LS_MFI_VIS-FLUTE = cast ZCL_VCXI_PCSP_PR_MFSI_P( LR_PR_MF )->GET_FLUTE( ).

      when type ZCL_VCXI_P0SP_PR_MFMI_P.
***     Get Base Weight
        LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZCL_VCXI_P0SP_PR_MFMI_P( LR_PR_MF )->GET_BAWGT( ) ).
        LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZCL_VCXI_P0SP_PR_MFMI_P( LR_PR_MF )->GET_BAWGP( ) ).

      when type ZCL_VCXI_PCSP_PR_MFMI_PAPER.
***     Get Base Weight
        LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZCL_VCXI_PCSP_PR_MFMI_PAPER( LR_PR_MF )->GET_BAWGT( ) ).
        LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZCL_VCXI_PCSP_PR_MFMI_PAPER( LR_PR_MF )->GET_BAWGP( ) ).

***     Paper Width
        LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZCL_VCXI_PCSP_PR_MFMI_PAPER( LR_PR_MF )->GET_PAWID( ) ).
    endcase.

*** Get Roll Diemension
    if LR_PR_MF is instance of ZIF_VCXI_P5SP_RLDIM.
      LS_MFI_VIS = corresponding #( base ( LS_MFI_VIS  ) cast ZIF_VCXI_P5SP_RLDIM( LR_PR_MF )->GET_RLDIM( )  mapping PAWID     = WEBWI
                                                                                                                     PAWID_UOM = WEBWI_UOM ).
    endif.

***------------------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_MFI_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MFI_GRID type ZVCXI_P5SP_S_MFI_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_MFI_GRID.

          check LS_MFI_GRID-R_GATE is bound and
                LS_MFI_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_MFI_VIS( IR_GATE = LS_MFI_GRID-R_GATE
                           IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method SET_MFI_VIS.

    data: LS_MFI_VIS_OLD type ZVCXI_P1SP_S_MFI_VIS,
          LS_MFI_VIS_NEW type ZVCXI_P1SP_S_MFI_VIS.
    data: LR_PR_MF type ref to ZCL_VCXI_XCSP_PR_MF,
          LR_MFI   type ref to ZIF_VCXI_XCSP_MFI,
          LR_MFM   type ref to ZIF_VCXI_XCSP_MFM,
          LR_MFMI  type ref to ZCL_VCXI_P5SP_PR_MFMI.


***------------------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_XCSP_PR_MF.
    LR_PR_MF ?= IR_GATE->R_CLSPR.
    check LR_PR_MF is bound.

*** Get old Values
    ME->GET_MFI_VIS( exporting IR_GATE = IR_GATE
                     changing  CS_DATA = LS_MFI_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_MFI_VIS_NEW.

***------------------------------------------------------------------------------------------------
*** Material
    if LS_MFI_VIS_NEW-MATNR ne LS_MFI_VIS_OLD-MATNR.
      LR_PR_MF->SET_MATNR( IF_MATNR = LS_MFI_VIS_NEW-MATNR
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** ID for MF x-connection
    if LS_MFI_VIS_NEW-IMFXC ne LS_MFI_VIS_OLD-IMFXC.
      LR_PR_MF->SET_IMFXC( IF_IMFXC = LS_MFI_VIS_NEW-IMFXC
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


*** Set Material Flow In Infos
    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFI.
      LR_MFI ?= LR_PR_MF.

      if LS_MFI_VIS_NEW-MFISP ne LS_MFI_VIS_OLD-MFISP.
        LR_MFI->SET_MFISP( IS_MFISP = corresponding #( LS_MFI_VIS_NEW )
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-MFICF ne LS_MFI_VIS_OLD-MFICF.
        LR_MFI->SET_MFICF( IF_MFICF = LS_MFI_VIS_NEW-MFICF
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-MFICP ne LS_MFI_VIS_OLD-MFICP.
        LR_MFI->SET_MFICP( IF_MFICP = LS_MFI_VIS_NEW-MFICP
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*      if LS_MFI_VIS_NEW-KAUSF ne LS_MFI_VIS_OLD-KAUSF.
*        LR_MFI->SET_KAUSF( IS_KAUSF = corresponding #( LS_MFI_VIS_NEW )
*                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
*      endif.


*** Set Material Flow Material Infos
    if LR_PR_MF is instance of ZIF_VCXI_XCSP_MFM.
      LR_MFM ?= LR_PR_MF.
      if LS_MFI_VIS_NEW-TEXT ne LS_MFI_VIS_OLD-TEXT.
        LR_MFM->SET_TEXT( IF_TEXT  = LS_MFI_VIS_NEW-TEXT
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-PURCH ne LS_MFI_VIS_OLD-PURCH.
        LR_MFM->SET_PURCH( IF_PURCH  = LS_MFI_VIS_NEW-PURCH
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-PRICE ne LS_MFI_VIS_OLD-PRICE.
        LR_MFM->SET_PRICE( IS_PRICE = corresponding #( LS_MFI_VIS_NEW )
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_MFI_VIS_NEW-PRICP ne LS_MFI_VIS_OLD-PRICP.
        LR_MFM->SET_PRICP( IS_PRICP = corresponding #( LS_MFI_VIS_NEW )
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.


    case type of LR_PR_MF.
***------------------------------------------------------------------------------------------------
***   Paper
      when type ZCL_VCXI_PCSP_PR_MFMI_PAPER into data(LR_PC_MFMI_PAPER).
***     Base Weight
        if LS_MFI_VIS_NEW-S_BAWGT ne LS_MFI_VIS_OLD-S_BAWGT.
          LR_PC_MFMI_PAPER->SET_BAWGT( IS_BAWGT = LS_MFI_VIS_NEW-S_BAWGT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

        if LS_MFI_VIS_NEW-S_BAWGP ne LS_MFI_VIS_OLD-S_BAWGP.
          LR_PC_MFMI_PAPER->SET_BAWGP( IS_BAWGP = LS_MFI_VIS_NEW-S_BAWGP
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

***     Paper Width
        if LS_MFI_VIS_NEW-S_PAWID ne LS_MFI_VIS_OLD-S_PAWID.
          LR_PC_MFMI_PAPER->SET_PAWID( IS_PAWID = LS_MFI_VIS_NEW-S_PAWID
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

***------------------------------------------------------------------------------------------------
***   Material Flow Material In (PC)
      when type ZCL_VCXI_P0SP_PR_MFMI_P into data(LR_P0_MFMI_P).
***     PC Dimensions
        if LS_MFI_VIS_NEW-S_PCDIM ne LS_MFI_VIS_OLD-S_PCDIM.
          LR_P0_MFMI_P->SET_PCDIM( IS_PCDIM = LS_MFI_VIS_NEW-S_PCDIM
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

***     Base Weight
        if LS_MFI_VIS_NEW-S_BAWGT ne LS_MFI_VIS_OLD-S_BAWGT.
          LR_P0_MFMI_P->SET_BAWGT( IS_BAWGT = LS_MFI_VIS_NEW-S_BAWGT
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

        if LS_MFI_VIS_NEW-S_BAWGP ne LS_MFI_VIS_OLD-S_BAWGP.
          LR_P0_MFMI_P->SET_BAWGP( IS_BAWGP = LS_MFI_VIS_NEW-S_BAWGP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

***------------------------------------------------------------------------------------------------
***   Material Flow Material In (Roll)
      when type ZCL_VCXI_P5SP_PR_MFMI into data(LR_P5_MFMI).
        if LS_MFI_VIS_NEW-S_PAWID ne LS_MFI_VIS_OLD-S_PAWID.
          LR_P5_MFMI->SET_WEBWI( IS_WEBWI = value #( WEBWI     = LS_MFI_VIS_NEW-PAWID
                                                     WEBWI_UOM = LS_MFI_VIS_NEW-PAWID_UOM )
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

    endcase.

  endmethod.
