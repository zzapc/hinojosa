
class ZCL_VCXI_PCSP_GRID_MFMI_MFSI definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data F_MFMI_IS_ACTIV type ABAP_BOOL .
  data F_MFSI_IS_ACTIV type ABAP_BOOL .
  data F_MFMI_IS_PURCH type ABAP_BOOL .

  methods CHECK_PSCALE_MGR_ACTIV
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_ACTIV) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFMI
    importing
      !IF_PURCH type ZVCXI_XCS_PURCH
      !IF_DUMMY type ABAP_BOOL
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFSI
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFSI_P_VIS
    importing
      !IR_PR_MFSI_P type ref to ZCL_VCXI_PCSP_PR_MFSI_P
    returning
      value(RS_MFSI_P_VIS) type ZVCXI_PCSP_S_MFMI_MFSI_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_MFMI_P_VIS
    importing
      !IR_PR_MFMI_P type ref to ZCL_VCXI_PCSP_PR_MFMI_P
    returning
      value(RS_MFMI_P_VIS) type ZVCXI_PCSP_S_MFMI_MFSI_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFMI_P_VIS
    importing
      !IR_PR_MFMI_P type ref to ZCL_VCXI_PCSP_PR_MFMI_P
      !IS_MFMI_P_VIS type ZVCXI_PCSP_S_MFMI_MFSI_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFSI_P_VIS
    importing
      !IR_PR_MFSI_P type ref to ZCL_VCXI_PCSP_PR_MFSI_P
      !IS_MFMI_MFSI_VIS type ZVCXI_PCSP_S_MFMI_MFSI_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSP_GRID_MFMI_MFSI definition
class ZCL_VCXI_PCSP_GRID_MFMI_MFSI implementation.
method CHANGE_STYLE_MFMI.

  free CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Set Sheet Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set ID of MF x-connection = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Component Scrap = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'KAUSF'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICF'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Setup Percentage = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFISP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low-Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Next Low Level Code = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NEXTL'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Flute = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FLUTE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Type = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCTYP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCLEN'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Width = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCWID'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Height = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCHEI'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).
*** Set PC Ups = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCUPS'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Direction = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCDIR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Base Weight = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Base Weight Per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor, Price and Price Unit based on Procurement Option
  case IF_PURCH.
    when ZIF_VCXI_XCSP_MFM=>C_PURCH_DIRECT_PRICE.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZIF_VCXI_XCSP_MFM=>C_PURCH_DIRECT.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZIF_VCXI_XCSP_MFM=>C_PURCH_STOCK.
***   Set Vendor = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
  endcase.

*** Set Purchase Flag not Editable if it is a Dummy
  if IF_DUMMY eq ABAP_TRUE.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
  else.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).
  endif.

endmethod.
method CHANGE_STYLE_MFSI.

  free CT_STYL.

*** Make PC Direction changeable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCDIR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set ID of MF x-connection = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICF'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Setup Percentage = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFISP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Next Low Level Code = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NEXTL'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------------
*** Set Style Details -> all other DISABLED because nothing needs to be edit in MFSI
*** Set Sheet Matnr = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Component Scrap = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'KAUSF'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Flute = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FLUTE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Type = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCTYP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCLEN'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCWID'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC height = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCHEI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Ups = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCUPS'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------------
*** Not needed Fields for MFSI
*** Set Text = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Base Weight = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Base Weight Per = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BAWGP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor, Price and Price Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LFINR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CHECK_PSCALE_MGR_ACTIV.

  data:          LT_GATE              type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to /VCXI/CL_VKSR_GATE,
                 LR_PSCALE_MGR        type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***------------------------------------------------------------------
*** If we are connect to a Scale Manager -> Request Price depending on Consumption
  LT_GATE = IR_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCS_PSCALE_MGR=>C_IPRVT_XCS_PSCALE_MGR
                                IF_INUSE = ABAP_TRUE ).

*** Assign Reference of Price Scale Manager
  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC eq 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_PSCALE_MGR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PSCALE_MGR.
    endtry.
  endif.

  check LR_PSCALE_MGR is bound.
  move ABAP_TRUE to RF_ACTIV.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_PCSP_S_MFMI_MFSI_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZIF_VCXI_XCSP_MFI=>C_IPRVT_XCS_MFI.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED          type        /VCXI/CKX_LOCKED,
                 LF_INUSE           type        /VCXI/VKSR_INUSE,
                 LF_HIDE_MFMI_DATA  type        ABAP_BOOL,
                 LF_HIDE_MFSI_DATA  type        ABAP_BOOL,
                 LF_HIDE_PURCH_DATA type        ABAP_BOOL.
  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Get Show Hide Data
  if ME->F_MFMI_IS_ACTIV eq ABAP_FALSE.
    LF_HIDE_MFMI_DATA  = ABAP_TRUE.
  else.
    LF_HIDE_MFMI_DATA  = ABAP_FALSE.
  endif.

  if ME->F_MFSI_IS_ACTIV eq ABAP_FALSE.
    LF_HIDE_MFSI_DATA  = ABAP_TRUE.
  else.
    LF_HIDE_MFSI_DATA  = ABAP_FALSE.
  endif.

  if ME->F_MFMI_IS_PURCH eq ABAP_FALSE.
    LF_HIDE_PURCH_DATA = ABAP_TRUE.
  else.
    LF_HIDE_PURCH_DATA = ABAP_FALSE.
  endif.


***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

***   ID for MF x-connect
      when 'IMFXC'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

***   PC Direction
      when 'PCDIR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

***   Always Visible and Editable
      when 'MATNR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE  to <S_FCAT>-EDIT.
        endif.

***   Component Factor and per / Setup % / Scrap
      when 'MFICF' or 'MFICP' or 'MFISP' or 'KAUSF'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE to <S_FCAT>-EDIT.
        endif.
      when 'MFICF_UOM' or 'MFISP_UOM' or 'KAUSF_UOM'.

***   Only Visible if MFSI is there
      when 'DISST'.
        move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.

***   Next Low-Level Code
      when 'NEXTL'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE         to <S_FCAT>-EDIT.
        endif.
        move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.
        move ABAP_TRUE           to <S_FCAT>-CHECKBOX.

***   Only Editable if MFMI is there
      when 'PCWID' or 'PCLEN' or 'PCHEI'
        or 'PCUPS' or 'FLUTE' or 'BAWGT' or 'BAWGP'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ME->F_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
        endif.

***   Only Visible if MFMI is there and it is purchased
      when 'LIFNR' or 'PRICE' or 'PRICP'.
        move LF_HIDE_PURCH_DATA  to <S_FCAT>-NO_OUT.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ME->F_MFMI_IS_PURCH to <S_FCAT>-EDIT.
        endif.

      when 'TEXT'.
        move LF_HIDE_MFMI_DATA   to <S_FCAT>-NO_OUT.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ME->F_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
        endif.

      when 'PRICE_CURR' or 'PRICP_UOM' or 'LIFNR_DESCR'.
        move LF_HIDE_PURCH_DATA to <S_FCAT>-NO_OUT.

      when 'PURCH'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ME->F_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
        endif.

    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data: LF_PSCALE_ACTIV type          ABAP_BOOL,
        LF_PURCH        type          ABAP_BOOL.
  data: LS_MFMI_MFSI_VIS  type          ZVCXI_PCSP_S_MFMI_MFSI_VIS,
        LS_MFMI_MFSI_GRID type          ZVCXI_PCSP_S_MFMI_MFSI_GRID.
  data: LT_GATE           type          /VCXI/VKSR_TT_GATE.
  data: LR_GATE      type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_MFMI_P type ref to   ZCL_VCXI_PCSP_PR_MFMI_P,
        LR_PR_MFSI_P type ref to   ZCL_VCXI_PCSP_PR_MFSI_P.
  field-symbols: <T_DATA> type  standard table,
                 <S_DATA> type          ANY.

*** Clear Indicator for Sheet and Material Flow
  clear: ME->F_MFMI_IS_ACTIV, ME->F_MFSI_IS_ACTIV, ME->F_MFMI_IS_PURCH.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get Gates of Material Flow in PC
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_MFMI_P=>C_IPRVT_P0_MFMI_P
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_MFMI_MFSI_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MFMI_P.
        check LR_PR_MFMI_P is bound.

***     Set Indicator that an PC is activ
        if LR_GATE->IS_INUSE( ) eq ABAP_TRUE.
          move ABAP_TRUE to ME->F_MFMI_IS_ACTIV.
        endif.

        move LR_GATE->GET_POSID( ) to LS_MFMI_MFSI_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_MFMI_MFSI_GRID-GATKY.
        move LR_GATE               to LS_MFMI_MFSI_GRID-R_GATE.

        LS_MFMI_MFSI_VIS = ME->GET_MFMI_P_VIS( IR_PR_MFMI_P = LR_PR_MFMI_P ).
        move-corresponding LS_MFMI_MFSI_VIS to LS_MFMI_MFSI_GRID.

***     Get Flags for Fieldcat
        case LS_MFMI_MFSI_VIS-PURCH.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
            ME->F_MFMI_IS_PURCH =  LS_MFMI_MFSI_VIS-PURCH.
          when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
            if ME->F_MFMI_IS_PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
              ME->F_MFMI_IS_PURCH =  LS_MFMI_MFSI_VIS-PURCH.
            endif.
        endcase.

        if LS_MFMI_MFSI_VIS-PURCH ne ZIF_VCXI_XCSP_MFM=>C_PURCH_STOCK.
          LF_PSCALE_ACTIV = ME->CHECK_PSCALE_MGR_ACTIV( IR_GATE = LR_GATE ).
          if LF_PSCALE_ACTIV eq ABAP_FALSE.
            move ABAP_TRUE to LF_PURCH.
          endif.
        endif.

*** --------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_MFMI( exporting IF_PURCH = LF_PURCH
                                         IF_DUMMY = LR_PR_MFMI_P->IS_DUMMY( )
                               changing  CT_STYL  = LS_MFMI_MFSI_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MFMI_MFSI_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MFMI_MFSI_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

*** --------------------------------------------------------------------------------------------
*** Get Gates of MFSI_P
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_MFSI_P=>C_IPRVT_P0_MFSI_P
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_MFMI_MFSI_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MFSI_P.
        check LR_PR_MFSI_P is bound.

***     Set Indicator that an MFSI_P is activ
        move ABAP_TRUE to ME->F_MFSI_IS_ACTIV.

        move LR_GATE->GET_POSID( ) to LS_MFMI_MFSI_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_MFMI_MFSI_GRID-GATKY.
        move LR_GATE               to LS_MFMI_MFSI_GRID-R_GATE.

        LS_MFMI_MFSI_VIS = ME->GET_MFSI_P_VIS( IR_PR_MFSI_P = LR_PR_MFSI_P ).
        move-corresponding LS_MFMI_MFSI_VIS to LS_MFMI_MFSI_GRID.

*** --------------------------------------------------------------------------------------------
***     Set Style Details -> all DISABLED because nothing needs to be edit in MFSI
        ME->CHANGE_STYLE_MFSI( changing  CT_STYL  = LS_MFMI_MFSI_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MFMI_MFSI_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MFMI_MFSI_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

  sort <T_DATA> by ('POSID').

endmethod.
method GET_MFMI_P_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_MFISP type ZVCXI_XCSP_S_MFISP,
         LS_KAUSF type ZVCXI_XCSP_S_KAUSF,
         LS_PRICE type ZVCXI_XCS_S_PRICE,
         LS_PRICP type ZVCXI_XCS_S_PRICP,
         LS_PCDIM type ZVCXI_P0SP_S_PCDIM,
         LS_BAWGT type ZVCXI_P0S_S_BAWGT,
         LS_BAWGP type ZVCXI_P0S_S_BAWGP.

*** Material
  move IR_PR_MFMI_P->GET_MATNR( )         to RS_MFMI_P_VIS-MATNR.
  move IR_PR_MFMI_P->GET_MATNR_DESCR( )   to RS_MFMI_P_VIS-MATNR_DESCR.

*** x-connect
  move IR_PR_MFMI_P->GET_IMFXC( )         to RS_MFMI_P_VIS-IMFXC.

*** Consumption
  move IR_PR_MFMI_P->GET_CONSU( )         to LS_CONSU.
  move-corresponding LS_CONSU             to RS_MFMI_P_VIS.

*** MF Ratio
  move IR_PR_MFMI_P->GET_MFRAT( )         to RS_MFMI_P_VIS-MFRAT.

*** Setup Percentage for Material Flow In
  move IR_PR_MFMI_P->GET_MFISP( )         to LS_MFISP.
  move-corresponding LS_MFISP             to RS_MFMI_P_VIS.

*** Consumption Factor for Material Flow In and per
  move IR_PR_MFMI_P->GET_MFICF( )         to RS_MFMI_P_VIS-MFICF.
  move IR_PR_MFMI_P->GET_MFICP( )         to RS_MFMI_P_VIS-MFICP.

*** Get Component Scrap
  move IR_PR_MFMI_P->GET_KAUSF( )         to LS_KAUSF.
  move-corresponding LS_KAUSF             to RS_MFMI_P_VIS.

*** Text
  move IR_PR_MFMI_P->GET_TEXT( )          to RS_MFMI_P_VIS-TEXT.

*** Vendor
  move IR_PR_MFMI_P->GET_LIFNR( )         to RS_MFMI_P_VIS-LIFNR.
  move IR_PR_MFMI_P->GET_LIFNR_DESCR( )   to RS_MFMI_P_VIS-LIFNR_DESCR.

*** Price
  move IR_PR_MFMI_P->GET_PRICE( )         to LS_PRICE.
  move-corresponding LS_PRICE             to RS_MFMI_P_VIS.

  move IR_PR_MFMI_P->GET_PRICP( )         to LS_PRICP.
  move-corresponding LS_PRICP             to RS_MFMI_P_VIS.

*** Purchased Flag
  move IR_PR_MFMI_P->GET_PURCH( )         to RS_MFMI_P_VIS-PURCH.

*** Flute
  move IR_PR_MFMI_P->GET_FLUTE( )         to RS_MFMI_P_VIS-FLUTE.

*** PC Dimensions
  move IR_PR_MFMI_P->GET_PCDIM( )         to LS_PCDIM.
  move-corresponding LS_PCDIM             to RS_MFMI_P_VIS.

*** Get Base Weight
  move IR_PR_MFMI_P->GET_BAWGT( )         to LS_BAWGT.
  move-corresponding LS_BAWGT             to RS_MFMI_P_VIS.

  move IR_PR_MFMI_P->GET_BAWGP( )         to LS_BAWGP.
  move-corresponding LS_BAWGP             to RS_MFMI_P_VIS.

endmethod.
method GET_MFSI_P_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_MFISP type ZVCXI_XCSP_S_MFISP,
         LS_KAUSF type ZVCXI_XCSP_S_KAUSF,
         LS_PCDIM type ZVCXI_P0SP_S_PCDIM.

*** Get MaterialNumber, Description, Low Level Code and x-connect
  move IR_PR_MFSI_P->GET_MATNR( )       to RS_MFSI_P_VIS-MATNR.
  move IR_PR_MFSI_P->GET_MATNR_DESCR( ) to RS_MFSI_P_VIS-MATNR_DESCR.
  move IR_PR_MFSI_P->GET_DISST( )       to RS_MFSI_P_VIS-DISST.
  move IR_PR_MFSI_P->GET_NEXTL( )       to RS_MFSI_P_VIS-NEXTL.
  move IR_PR_MFSI_P->GET_IMFXC( )       to RS_MFSI_P_VIS-IMFXC.

*** Get Consumption
  move IR_PR_MFSI_P->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU           to RS_MFSI_P_VIS.

*** MF Ratio
  move IR_PR_MFSI_P->GET_MFRAT( )       to RS_MFSI_P_VIS-MFRAT.

*** Get Consumption Factor and per
  move IR_PR_MFSI_P->GET_MFICF( )       to RS_MFSI_P_VIS-MFICF.
  move IR_PR_MFSI_P->GET_MFICP( )       to RS_MFSI_P_VIS-MFICP.

*** Get Setup Percentage
  move IR_PR_MFSI_P->GET_MFISP( )       to LS_MFISP.
  move-corresponding LS_MFISP           to RS_MFSI_P_VIS.

*** Get Component Scrap
  move IR_PR_MFSI_P->GET_KAUSF( )         to LS_KAUSF.
  move-corresponding LS_KAUSF             to RS_MFSI_P_VIS.

*** Get Flute
  move IR_PR_MFSI_P->GET_FLUTE( )       to RS_MFSI_P_VIS-FLUTE.

*** Get PC Dimensions
  move IR_PR_MFSI_P->GET_PCDIM( )       to LS_PCDIM.
  move-corresponding LS_PCDIM           to RS_MFSI_P_VIS.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_MFMI_MFSI_VIS     type          ZVCXI_PCSP_S_MFMI_MFSI_VIS,
                 LS_MFMI_MFSI_GRID    type          ZVCXI_PCSP_S_MFMI_MFSI_GRID.
  data:          LR_PR_MFMI_P         type ref to   ZCL_VCXI_PCSP_PR_MFMI_P,
                 LR_PR_MFSI_P         type ref to   ZCL_VCXI_PCSP_PR_MFSI_P,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        clear: LR_PR_MFMI_P,
               LR_PR_MFSI_P.

        move-corresponding <S_DATA>          to LS_MFMI_MFSI_GRID.
        move-corresponding LS_MFMI_MFSI_GRID to LS_MFMI_MFSI_VIS.
        check LS_MFMI_MFSI_GRID-R_GATE is bound.

***----------------------------------------------------------------------------
***     Changes to MFMI PC
        try.
            move LS_MFMI_MFSI_GRID-R_GATE->R_CLSPR ?to LR_PR_MFMI_P.
            check LR_PR_MFMI_P is bound.

***         Set Values to PR Class
            move-corresponding LS_MFMI_MFSI_GRID to LS_MFMI_MFSI_VIS.
            ME->SET_MFMI_P_VIS( IR_PR_MFMI_P  = LR_PR_MFMI_P
                                IS_MFMI_P_VIS = LS_MFMI_MFSI_VIS ).
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MFMI_P.
        endtry.

***----------------------------------------------------------------------------
***     Changes to MFSI PC
        try.
            move LS_MFMI_MFSI_GRID-R_GATE->R_CLSPR ?to LR_PR_MFSI_P.
            check LR_PR_MFSI_P is bound.

***         Set Values to PR Class
            ME->SET_MFSI_P_VIS( IR_PR_MFSI_P     = LR_PR_MFSI_P
                                IS_MFMI_MFSI_VIS = LS_MFMI_MFSI_VIS ).
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MFSI_P.
        endtry.

      endloop.

***   Request Refresh for ALV
      move ABAP_TRUE to ME->F_REFRESH_REQ.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_MFMI_P_VIS.

  data:  LS_MFISP      type ZVCXI_XCSP_S_MFISP,
         LS_KAUSF      type ZVCXI_XCSP_S_KAUSF,
         LS_PRICE      type ZVCXI_XCS_S_PRICE,
         LS_PRICP      type ZVCXI_XCS_S_PRICP,
         LS_PCDIM      type ZVCXI_P0SP_S_PCDIM,
         LS_BAWGT      type ZVCXI_P0S_S_BAWGT,
         LS_BAWGP      type ZVCXI_P0S_S_BAWGP,
         LS_MFMI_P_VIS type ZVCXI_PCSP_S_MFMI_MFSI_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MFMI_P_VIS = ME->GET_MFMI_P_VIS( IR_PR_MFMI_P = IR_PR_MFMI_P ).

*** Material
  if IS_MFMI_P_VIS-MATNR ne LS_MFMI_P_VIS-MATNR.
    IR_PR_MFMI_P->SET_MATNR( IF_MATNR = IS_MFMI_P_VIS-MATNR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** ID for MF x-connection
  if LS_MFMI_P_VIS-IMFXC ne IS_MFMI_P_VIS-IMFXC.
    IR_PR_MFMI_P->SET_IMFXC( IF_IMFXC = IS_MFMI_P_VIS-IMFXC
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Setup Percentage for Material Flow In
  if IS_MFMI_P_VIS-MFISP ne LS_MFMI_P_VIS-MFISP.
    move-corresponding IS_MFMI_P_VIS to LS_MFISP.
    IR_PR_MFMI_P->SET_MFISP( IS_MFISP = LS_MFISP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Consumption Factor for Material Flow In and per
  if IS_MFMI_P_VIS-MFICF ne LS_MFMI_P_VIS-MFICF.
    IR_PR_MFMI_P->SET_MFICF( IF_MFICF = IS_MFMI_P_VIS-MFICF
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if IS_MFMI_P_VIS-MFICP ne LS_MFMI_P_VIS-MFICP.
    IR_PR_MFMI_P->SET_MFICP( IF_MFICP = IS_MFMI_P_VIS-MFICP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Setup Component Scrap
  if IS_MFMI_P_VIS-KAUSF ne LS_MFMI_P_VIS-KAUSF.
    move-corresponding IS_MFMI_P_VIS to LS_KAUSF.
    IR_PR_MFMI_P->SET_KAUSF( IS_KAUSF = LS_KAUSF
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Text
  if IS_MFMI_P_VIS-TEXT ne LS_MFMI_P_VIS-TEXT.
    IR_PR_MFMI_P->SET_TEXT( IF_TEXT = IS_MFMI_P_VIS-TEXT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Vendor
  if IS_MFMI_P_VIS-PURCH ne LS_MFMI_P_VIS-PURCH.
    IR_PR_MFMI_P->SET_PURCH( IF_PURCH = IS_MFMI_P_VIS-PURCH
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Vendor
  if IS_MFMI_P_VIS-LIFNR ne LS_MFMI_P_VIS-LIFNR.
    IR_PR_MFMI_P->SET_LIFNR( IF_LIFNR = IS_MFMI_P_VIS-LIFNR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price
  if IS_MFMI_P_VIS-PRICE ne LS_MFMI_P_VIS-PRICE.
    move-corresponding IS_MFMI_P_VIS to LS_PRICE.
    IR_PR_MFMI_P->SET_PRICE( IS_PRICE = LS_PRICE
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if IS_MFMI_P_VIS-PRICP ne LS_MFMI_P_VIS-PRICP.
    move-corresponding IS_MFMI_P_VIS to LS_PRICP.
    IR_PR_MFMI_P->SET_PRICP( IS_PRICP = LS_PRICP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Flute
  if IS_MFMI_P_VIS-FLUTE ne LS_MFMI_P_VIS-FLUTE.
    IR_PR_MFMI_P->SET_FLUTE( IF_FLUTE = IS_MFMI_P_VIS-FLUTE
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** PC Dimensions
  move-corresponding IS_MFMI_P_VIS to LS_PCDIM.
  IR_PR_MFMI_P->SET_PCDIM( IS_PCDIM = LS_PCDIM
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Base Weight
  if IS_MFMI_P_VIS-BAWGT ne LS_MFMI_P_VIS-BAWGT.
    move-corresponding IS_MFMI_P_VIS to LS_BAWGT.
    IR_PR_MFMI_P->SET_BAWGT( IS_BAWGT = LS_BAWGT
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if IS_MFMI_P_VIS-BAWGP ne LS_MFMI_P_VIS-BAWGP.
    move-corresponding IS_MFMI_P_VIS to LS_BAWGP.
    IR_PR_MFMI_P->SET_BAWGP( IS_BAWGP = LS_BAWGP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method SET_MFSI_P_VIS.

  data:  LS_MFMI_MFSI_VIS     type ZVCXI_PCSP_S_MFMI_MFSI_VIS,
         LS_MFISP             type ZVCXI_XCSP_S_MFISP.

*** Get Current data to do Update only if Value changed.
  LS_MFMI_MFSI_VIS = ME->GET_MFSI_P_VIS( IR_PR_MFSI_P = IR_PR_MFSI_P ).

*** ID for MF x-connection
  if LS_MFMI_MFSI_VIS-IMFXC ne IS_MFMI_MFSI_VIS-IMFXC.
    IR_PR_MFSI_P->SET_IMFXC( IF_IMFXC = IS_MFMI_MFSI_VIS-IMFXC
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Next Low-Level Code Flag
  if LS_MFMI_MFSI_VIS-NEXTL ne IS_MFMI_MFSI_VIS-NEXTL.
    IR_PR_MFSI_P->SET_NEXTL( IF_NEXTL = IS_MFMI_MFSI_VIS-NEXTL
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** PC Directions
  if IS_MFMI_MFSI_VIS-PCDIR ne LS_MFMI_MFSI_VIS-PCDIR.
    IR_PR_MFSI_P->ZIF_VCXI_P0SP_MFP~SET_PCDIR( IF_PCDIR = IS_MFMI_MFSI_VIS-PCDIR
                                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Setup Percentage for Material Flow In
  if LS_MFMI_MFSI_VIS-MFISP ne IS_MFMI_MFSI_VIS-MFISP.
    move-corresponding IS_MFMI_MFSI_VIS to LS_MFISP.
    IR_PR_MFSI_P->SET_MFISP( IS_MFISP = LS_MFISP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Consumption Factor for Material Flow In and per
  if LS_MFMI_MFSI_VIS-MFICF ne IS_MFMI_MFSI_VIS-MFICF.
    IR_PR_MFSI_P->SET_MFICF( IF_MFICF = IS_MFMI_MFSI_VIS-MFICF
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MFMI_MFSI_VIS-MFICP ne IS_MFMI_MFSI_VIS-MFICP.
    IR_PR_MFSI_P->SET_MFICP( IF_MFICP = IS_MFMI_MFSI_VIS-MFICP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
