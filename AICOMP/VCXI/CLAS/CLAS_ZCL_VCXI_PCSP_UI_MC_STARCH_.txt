
class ZCL_VCXI_PCSP_UI_MC_STARCH definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MC_STARCH_VIS type ZVCXI_PCSP_S_MC_STARCH_VIS .
  data F_CURSOR type SCRFNAME .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_MC_STARCH_VIS
    importing
      !IS_MC_STARCH_VIS type ZVCXI_PCSP_S_MC_STARCH_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_MC_STARCH type ref to ZCL_VCXI_PCSP_PR_MC_STARCH .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSP_UI_MC_STARCH definition
class ZCL_VCXI_PCSP_UI_MC_STARCH implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_PCSP_UI_MC_STARCH_BIND'
    exporting
      IR_UI_MC_STARCH = ME
    importing
      ES_DYNP         = ME->S_DYNP.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_MC_STARCH.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          else.
***         Special Handling for Purchased Fields
            if SCREEN-GROUP2 eq 'PUR'.
***         Make it Editable
              if ME->S_MC_STARCH_VIS-PURCH eq ABAP_TRUE.
                case SCREEN-GROUP1.
                  when 'INP'.
                    SCREEN-INVISIBLE = 0.
                    SCREEN-REQUIRED = 0.
                    SCREEN-INPUT = 1.
                  when 'OUT'.
                    SCREEN-INVISIBLE = 0.
                    SCREEN-REQUIRED = 0.
                    SCREEN-INPUT = 0.
                endcase.
***           Hide all Purchase relevant Fields
              else.
                SCREEN-INVISIBLE = 1.
                SCREEN-REQUIRED = 0.
                SCREEN-INPUT = 0.
              endif.
            endif.
          endif.
***       Special Handling for Purchased Flag
          if SCREEN-GROUP2 eq 'FPU' and
             ME->R_PR_MC_STARCH->IS_DUMMY( ) eq ABAP_TRUE.
            SCREEN-INPUT = 0.
          endif.
          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

  ME->INIT_VIS( ).

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
method DO_UPDATE_MC_STARCH_VIS.

  data: LS_PRICE type ZVCXI_XCS_S_PRICE,
        LS_PRICP type ZVCXI_XCS_S_PRICP,
        LS_AVGCO type ZVCXI_XCS_S_AVGCO,
        LS_AVGCP type ZVCXI_XCS_S_AVGCP.


  move-corresponding IS_MC_STARCH_VIS to:
                     LS_PRICE, LS_PRICP, LS_AVGCO, LS_AVGCP.

*** Set Material Number
  if ME->S_MC_STARCH_VIS-MATNR ne IS_MC_STARCH_VIS-MATNR.
    ME->R_PR_MC_STARCH->SET_MATNR( IF_MATNR = IS_MC_STARCH_VIS-MATNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Vendor
  if ME->S_MC_STARCH_VIS-LIFNR ne IS_MC_STARCH_VIS-LIFNR.
    ME->R_PR_MC_STARCH->SET_LIFNR( IF_LIFNR = IS_MC_STARCH_VIS-LIFNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Purchase Flag
  if ME->S_MC_STARCH_VIS-PURCH ne IS_MC_STARCH_VIS-PURCH.
    ME->R_PR_MC_STARCH->SET_PURCH( IF_PURCH  = IS_MC_STARCH_VIS-PURCH
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Text
  if ME->S_MC_STARCH_VIS-TEXT ne IS_MC_STARCH_VIS-TEXT.
    ME->R_PR_MC_STARCH->SET_TEXT( IF_TEXT  = IS_MC_STARCH_VIS-TEXT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Price and Price Per
  if ME->S_MC_STARCH_VIS-PRICE ne IS_MC_STARCH_VIS-PRICE.
    ME->R_PR_MC_STARCH->SET_PRICE( IS_PRICE = LS_PRICE
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MC_STARCH_VIS-PRICP ne IS_MC_STARCH_VIS-PRICP.
    ME->R_PR_MC_STARCH->SET_PRICP( IS_PRICP = LS_PRICP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Average Consumption and Consumption per
  if ME->S_MC_STARCH_VIS-AVGCO ne IS_MC_STARCH_VIS-AVGCO.
    ME->R_PR_MC_STARCH->SET_AVGCO( IS_AVGCO = LS_AVGCO
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MC_STARCH_VIS-AVGCP ne IS_MC_STARCH_VIS-AVGCP.
    ME->R_PR_MC_STARCH->SET_AVGCP( IS_AVGCP = LS_AVGCP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Starch Factor
  if ME->S_MC_STARCH_VIS-STARF ne IS_MC_STARCH_VIS-STARF.
    ME->R_PR_MC_STARCH->SET_STARF( IF_STARF = IS_MC_STARCH_VIS-STARF
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_MC_STARCH.

endmethod.
method INIT_VIS.

  data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
        LS_PRICE type ZVCXI_XCS_S_PRICE,
        LS_PRICP type ZVCXI_XCS_S_PRICP,
        LS_AVGCO type ZVCXI_XCS_S_AVGCO,
        LS_AVGCP type ZVCXI_XCS_S_AVGCP.

  free: ME->S_MC_STARCH_VIS.

*** Get All Material Consumption Data
  move ME->R_PR_MC_STARCH->GET_MATNR( )       to ME->S_MC_STARCH_VIS-MATNR.
  move ME->R_PR_MC_STARCH->GET_MATNR_DESCR( ) to ME->S_MC_STARCH_VIS-MATNR_DESCR.

  move ME->R_PR_MC_STARCH->GET_CONSU( ) to LS_CONSU.
  move-corresponding LS_CONSU to ME->S_MC_STARCH_VIS.

  move ME->R_PR_MC_STARCH->GET_TEXT( )        to ME->S_MC_STARCH_VIS-TEXT.

  move ME->R_PR_MC_STARCH->GET_LIFNR( )       to ME->S_MC_STARCH_VIS-LIFNR.
  move ME->R_PR_MC_STARCH->GET_LIFNR_DESCR( ) to ME->S_MC_STARCH_VIS-LIFNR_DESCR.

  move ME->R_PR_MC_STARCH->GET_PRICE( ) to LS_PRICE.
  move-corresponding LS_PRICE to ME->S_MC_STARCH_VIS.

  move ME->R_PR_MC_STARCH->GET_PRICP( ) to LS_PRICP.
  move-corresponding LS_PRICP to ME->S_MC_STARCH_VIS.

  move ME->R_PR_MC_STARCH->GET_PURCH( )       to ME->S_MC_STARCH_VIS-PURCH.

*** Get Average Consumption and Consumption per
  move ME->R_PR_MC_STARCH->GET_AVGCO( ) to LS_AVGCO.
  move-corresponding LS_AVGCO to ME->S_MC_STARCH_VIS.

  move ME->R_PR_MC_STARCH->GET_AVGCP( ) to LS_AVGCP.
  move-corresponding LS_AVGCP to ME->S_MC_STARCH_VIS.

*** Get Starch Factor
  move ME->R_PR_MC_STARCH->GET_STARF( )       to ME->S_MC_STARCH_VIS-STARF.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
