
class ZCL_VCXI_FBSP_UI_ACTVY_BMAKE definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_CURSOR type SCRFNAME read-only .
  data S_ACTVY_BMAKE_VIS type ZVCXI_FBSP_S_ACTVY_BMAKE_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_ACTVY_BMAKE_VIS
    importing
      !IS_ACTVY_BMAKE_VIS type ZVCXI_FBSP_S_ACTVY_BMAKE_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_MC_HANDLE type ref to ZCL_VCXI_FBSP_GRID_MC_HANDLE .
  data R_PR_ACTVY_BMAKE type ref to ZCL_VCXI_FBSP_PR_ACTVY_BMAKE .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_UI_ACTVY_BMAKE definition
class ZCL_VCXI_FBSP_UI_ACTVY_BMAKE implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_FBSP_UI_ACTVY_BMAKE_BIND'
    exporting
      IR_UI_ACTVY_BMAKE = ME
    importing
      ES_DYNP           = ME->S_DYNP.

** Create Grid for MC Handle
  create object ME->R_GRID_MC_HANDLE
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0100CC_GRID_MC_HANDLE'.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_ACTVY_BMAKE.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DEACTIVATE.

  SUPER->DEACTIVATE( ).

  if ME->R_GRID_MC_HANDLE is bound.
    ME->R_GRID_MC_HANDLE->DO_FREE( ).
    clear ME->R_GRID_MC_HANDLE.
  endif.

endmethod.
method DO_MODIFY_SCREEN.

  data: LF_LOCKED type        /VCXI/CKX_LOCKED,
        LF_INUSE  type        /VCXI/VKSR_INUSE.
  data: LR_CX_CKX type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

  ME->INIT_VIS( ).

  if ME->R_GRID_MC_HANDLE is bound.
    if ME->R_GRID_MC_HANDLE->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_MC_HANDLE->F_REFRESH_REQ.
    endif.
    ME->R_GRID_MC_HANDLE->REFRESH_GRID( ).
  endif.

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
  method DO_UPDATE_ACTVY_BMAKE_VIS.

    check ME->R_PR_ACTVY_BMAKE is bound.

***--------------------------------------------------------------------------------------
*** Set Bag Type
    if ME->S_ACTVY_BMAKE_VIS-IBAGT ne IS_ACTVY_BMAKE_VIS-IBAGT.
      ME->R_PR_ACTVY_BMAKE->SET_IBAGT( IF_IBAGT = IS_ACTVY_BMAKE_VIS-IBAGT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Width
    if ME->S_ACTVY_BMAKE_VIS-S_BGWID ne IS_ACTVY_BMAKE_VIS-S_BGWID.
      ME->R_PR_ACTVY_BMAKE->SET_BGWID( IS_BGWID = IS_ACTVY_BMAKE_VIS-S_BGWID
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Height
    if ME->S_ACTVY_BMAKE_VIS-S_BGHEI ne IS_ACTVY_BMAKE_VIS-S_BGHEI.
      ME->R_PR_ACTVY_BMAKE->SET_BGHEI( IS_BGHEI = IS_ACTVY_BMAKE_VIS-S_BGHEI
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Weight
    if ME->S_ACTVY_BMAKE_VIS-S_BGWGT ne IS_ACTVY_BMAKE_VIS-S_BGWGT.
      ME->R_PR_ACTVY_BMAKE->SET_BGWGT( IS_BGWGT = IS_ACTVY_BMAKE_VIS-S_BGWGT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Outs
    if ME->S_ACTVY_BMAKE_VIS-NOOUT ne IS_ACTVY_BMAKE_VIS-NOOUT.
      ME->R_PR_ACTVY_BMAKE->SET_NOOUT( IF_NOOUT = IS_ACTVY_BMAKE_VIS-NOOUT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Ups
    if ME->S_ACTVY_BMAKE_VIS-NOUPS ne IS_ACTVY_BMAKE_VIS-NOUPS.
      ME->R_PR_ACTVY_BMAKE->SET_NOUPS( IF_NOUPS = IS_ACTVY_BMAKE_VIS-NOUPS
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
method DO_USER_COMMAND.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_MC_HANDLE is bound.
    ME->R_GRID_MC_HANDLE->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_ACTVY_BMAKE.

endmethod.
  method INIT_VIS.

    free: ME->S_ACTVY_BMAKE_VIS.

***--------------------------------------------------------------------------------------
*** Get Bag Type
    ME->R_PR_ACTVY_BMAKE->GET_IBAGT( importing EF_IBAGT = ME->S_ACTVY_BMAKE_VIS-IBAGT
                                               EF_DESCR = ME->S_ACTVY_BMAKE_VIS-IBAGT_DESCR ).

*** Get Bag Width
    ME->R_PR_ACTVY_BMAKE->GET_BGWID( importing ES_BGWID = ME->S_ACTVY_BMAKE_VIS-S_BGWID ).

*** Get Bag Height
    ME->R_PR_ACTVY_BMAKE->GET_BGHEI( importing ES_BGHEI = ME->S_ACTVY_BMAKE_VIS-S_BGHEI ).

*** Get Bag Weight
    ME->R_PR_ACTVY_BMAKE->GET_BGWGT( importing ES_BGWGT = ME->S_ACTVY_BMAKE_VIS-S_BGWGT ).

*** Get Number of Outs
    ME->R_PR_ACTVY_BMAKE->GET_NOOUT( importing EF_NOOUT = ME->S_ACTVY_BMAKE_VIS-NOOUT ).

*** Get Number of Ups
    ME->R_PR_ACTVY_BMAKE->GET_NOUPS( importing EF_NOUPS = ME->S_ACTVY_BMAKE_VIS-NOUPS ).

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
