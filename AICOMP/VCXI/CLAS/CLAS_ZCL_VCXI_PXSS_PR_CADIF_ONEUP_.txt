
class ZCL_VCXI_PXSS_PR_CADIF_ONEUP definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  abstract
  create public .

public section.

  constants C_IEVNT_O_CADDE_CHANGED type /VCXI/VKSC_IEVNT value 'CADDE_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_FPDFR_CHANGED type /VCXI/VKSC_IEVNT value 'FPDFR_CHANGED' ##NO_TEXT.
  constants C_IPRVT_PX_CADIF_ONEUP type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_CADIF_ONEUP' ##NO_TEXT.
  constants C_OREVR_DEFAULT type ZVCXI_PXS_OREVR value 'D' ##NO_TEXT.
  constants C_OREVR_MANDATORY type ZVCXI_PXS_OREVR value 'M' ##NO_TEXT.
  constants C_OREVR_OPTIONAL type ZVCXI_PXS_OREVR value '' ##NO_TEXT.
  constants C_PARID_CADDE type /VCXI/VKS_PARID value 'ZVCXI_PX_CADDE' ##NO_TEXT.
  constants C_PARID_CADDL type /VCXI/VKS_PARID value 'ZVCXI_PX_CADDL' ##NO_TEXT.
  constants C_PARID_FPDFR type /VCXI/VKS_PARID value 'ZVCXI_PX_FPDFR' ##NO_TEXT.
  constants C_PARID_ICADO type /VCXI/VKS_PARID value 'ZVCXI_PX_ICADO' ##NO_TEXT.

  methods GET_CADDE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_CADDE) type ZVCXI_PXS_CADDE
    raising
      /VCXI/CX_CKX .
  methods GET_CADDL
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RT_CADDL) type ZVCXI_PXS_TT_CADDL
    raising
      /VCXI/CX_CKX .
  methods GET_CADIF_IO
    returning
      value(RR_CADIF_IO) type ref to DATA
    raising
      /VCXI/CX_CKX .
  methods GET_CADLS
    returning
      value(RF_CADLS) type ZVCXI_PXS_CADLS
    raising
      /VCXI/CX_CKX .
  methods GET_CADPI
    returning
      value(RF_CADPI) type ZVCXI_PXS_CADPI
    raising
      /VCXI/CX_CKX .
  methods GET_CADPO
    returning
      value(RF_CADPO) type ZVCXI_PXS_CADPO
    raising
      /VCXI/CX_CKX .
  methods GET_FPDFR
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FPDFR) type ZVCXI_PXS_FPDFR
    raising
      /VCXI/CX_CKX .
  methods GET_GCADO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_GCADO) type ZVCXI_PXS_GCADO
    raising
      /VCXI/CX_CKX .
  methods GET_ICADO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_ICADO) type ZVCXI_PXS_ICADO
    raising
      /VCXI/CX_CKX .
  methods GET_OREVR
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_OREVR) type ZVCXI_PXS_OREVR
    raising
      /VCXI/CX_CKX .
  methods SET_CADDE
    importing
      !IF_CADDE type ZVCXI_PXS_CADDE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_CADDL
    importing
      !IT_CADDL type ZVCXI_PXS_TT_CADDL optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_CADIF_IO
    importing
      value(IS_CADIF_IO) type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_FPDFR
    importing
      !IF_FPDFR type ZVCXI_PXS_FPDFR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_ICADO
    importing
      !IF_ICADO type ZVCXI_PXS_ICADO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_GCADO type /VCXI/VKSC_IEVNT value 'INIT_GCADO' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_OREVR type /VCXI/VKSC_IEVNT value 'RECALC_OREVR' ##NO_TEXT.
  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.
  constants C_IEVNT_O_GCADO_CHANGED type /VCXI/VKSC_IEVNT value 'GCADO_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_ICADO_CHANGED type /VCXI/VKSC_IEVNT value 'ICADO_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_OREVR_CHANGED type /VCXI/VKSC_IEVNT value 'OREVR_CHANGED' ##NO_TEXT.
  constants C_PARID_OREVR type /VCXI/VKS_PARID value 'ZVCXI_PX_OREVR' ##NO_TEXT.

  methods CHECK_CADDE
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods CREATE_CADIF_IO
    returning
      value(RR_CADIF_IO) type ref to DATA
    raising
      /VCXI/CX_CKX .
  methods FILL_BY_PARENT
  abstract
    importing
      !IR_CADIF_IO type ref to DATA
    raising
      /VCXI/CX_CKX .
  methods FILL_BY_SCORE_MGR
    importing
      !IR_CADIF_IO type DATA
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_CADIF_PRJ
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_CADIF_PRJ) type ref to ZCL_VCXI_PXSS_PR_CADIF_PRJ
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_CSTEP_CLOS
  abstract
    exporting
      !ER_GATE_CSTEP type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_CSTEP) type ref to ZCL_VCXI_PXSS_PR_CSTEP
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SCORE_MGR
    exporting
      !ER_GATE_SCORE_MGR type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_SCORE_MGR) type ref to ZCL_VCXI_PXSS_PR_SCORE_MGR
    raising
      /VCXI/CX_CKX .
  methods GET_SSCOR
    returning
      value(RF_SSCOR) type ZVCXI_P0SS_SSCOR
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_GCADO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_OREVR
  abstract
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
  methods SET_GCADO
    importing
      !IF_GCADO type ZVCXI_PXS_GCADO
    raising
      /VCXI/CX_CKX .
  methods SET_OREVR
    importing
      !IF_OREVR type ZVCXI_PXS_OREVR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CSTEP_CLOS
  abstract
    importing
      !IS_CADIF_IO type ANY
    raising
      /VCXI/CX_CKX .
  methods UPDATE_JOINT
    importing
      !IS_CADIF_IO type ANY
      !IR_GATE_CSTEP type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods UPDATE_PARENT
  abstract
    importing
      !IS_CADIF_IO type ANY
    raising
      /VCXI/CX_CKX .
  methods UPDATE_SCORE_MGR
    importing
      !IS_CADIF_IO type ANY
    raising
      /VCXI/CX_CKX .
  methods FILL_BY_CSTEP_CLOS
  abstract
    importing
      !IR_CADIF_IO type DATA
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_PR_CADIF_ONEUP definition
class ZCL_VCXI_PXSS_PR_CADIF_ONEUP implementation.
  method CHECK_CADDE.

*** Check Design Error
    if ME->GET_CADDE( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Design Error occured in CAD system.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '802' ).
      endif.
    endif.

  endmethod.
  method CREATE_CADIF_IO.

*** Create Data Reference
    create data RR_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.

  endmethod.
  method FILL_BY_SCORE_MGR.

    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.
    data: LR_PR_SCORE_MGR type ref to ZCL_VCXI_PXSS_PR_SCORE_MGR.
    field-symbols: <S_CADIF_IO> type ANY.


***--------------------------------------------------------------------------------------
*** Get Score Manager Provider
    LR_PR_SCORE_MGR = ME->GET_PRVDR_SCORE_MGR( ).
    check LR_PR_SCORE_MGR is bound.

*** Dereferencing and "Cast" I/O Structure
    assign IR_CADIF_IO->* to <S_CADIF_IO>.
    move-corresponding <S_CADIF_IO> to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Get Panel Orientation
    LS_CADIF_IO-PANOR = LR_PR_SCORE_MGR->GET_PANOR( ).

*** Get Scores
    data(LF_PATTERN_FROM) = ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( IF_DIMEN = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_WIDTH )
                         && ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( IF_DIMEN = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_LENGTH ).
    data(LF_PATTERN_TO)   = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_WIDTH
                         && ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_LENGTH.

    loop at LR_PR_SCORE_MGR->GET_SCORE_COM( ) into data(LS_SCORE_COM).
      append value #( DIMEN   = TRANSLATE( VAL = LS_SCORE_COM-ISCOR(1) FROM = LF_PATTERN_FROM TO = LF_PATTERN_TO )
                      S_SCORP = LS_SCORE_COM-S_SCORP
                      TSCOR   = LS_SCORE_COM-TSCOR
                      FSLIN   = LS_SCORE_COM-FSLIN
                    ) to LS_CADIF_IO-T_SCORE_IO.
    endloop.

*** Get Tapes
    LS_CADIF_IO-T_TAPE_COM  = LR_PR_SCORE_MGR->GET_TAPE_COM( ).


***------------------------------------------------------------------------------------------------
*** "Cast" I/O Structure back to generic structure
    move-corresponding LS_CADIF_IO to <S_CADIF_IO>.

  endmethod.
  method GET_CADDE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CADDE ).
    move LS_PARAM-ATWRT to RF_CADDE.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_CADDL.

    data: LS_PARAM  type /VCXI/VKSR_S_PARAM.


***--------------------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CADDL ).

    if LS_PARAM-STRNG is not initial.
      call transformation ID
           source xml LS_PARAM-STRNG
           result T_CADDL = RT_CADDL.
    endif.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method GET_CADIF_IO.

    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.
    field-symbols: <S_CADIF_IO> type ANY.


***--------------------------------------------------------------------------------------
*** Create Data Reference
    RR_CADIF_IO = ME->CREATE_CADIF_IO( ).

*** Dereferencing and "Cast" I/O Structure
    assign RR_CADIF_IO->* to <S_CADIF_IO>.
    move-corresponding <S_CADIF_IO> to LS_CADIF_IO.

***--------------------------------------------------------------------------------------
*** Get CAD Project Owner & ID and OneUp GUID & ID
    LS_CADIF_IO-CADPO = ME->GET_CADPO( ).
    LS_CADIF_IO-CADPI = ME->GET_CADPI( ).
    LS_CADIF_IO-GCADO = ME->GET_GCADO( ).
    LS_CADIF_IO-ICADO = ME->GET_ICADO( ).
    LS_CADIF_IO-CADDE = ME->GET_CADDE( ).

*** Get Flag - PDF Requested
    LS_CADIF_IO-FPDFR = ME->GET_FPDFR( ).

***--------------------------------------------------------------------------------------
*** "Cast" I/O Structure back to generic structure
    move-corresponding LS_CADIF_IO to <S_CADIF_IO>.


*** Fill by Parent
    ME->FILL_BY_PARENT( IR_CADIF_IO = RR_CADIF_IO ).

*** Fill by Score Manager
    ME->FILL_BY_SCORE_MGR( IR_CADIF_IO = RR_CADIF_IO ).
*{   INSERT         HEDK933127                                        1
*** Fill by Converion Step Closing
    ME->FILL_BY_CSTEP_CLOS( IR_CADIF_IO = RR_CADIF_IO ).
*}   INSERT

  endmethod.
  method GET_CADLS.

    data: LR_PR_CADIF_PRJ type ref to ZCL_VCXI_PXSS_PR_CADIF_PRJ.

    LR_PR_CADIF_PRJ = ME->GET_PRVDR_CADIF_PRJ( ).
    check LR_PR_CADIF_PRJ is bound.
    RF_CADLS = LR_PR_CADIF_PRJ->GET_CADLS( ).

  endmethod.
  method GET_CADPI.

    data: LR_PR_CADIF_PRJ type ref to ZCL_VCXI_PXSS_PR_CADIF_PRJ.

    LR_PR_CADIF_PRJ = ME->GET_PRVDR_CADIF_PRJ( ).
    check LR_PR_CADIF_PRJ is bound.
    RF_CADPI = LR_PR_CADIF_PRJ->GET_CADPI( ).

  endmethod.
  method GET_CADPO.

    data: LR_PR_CADIF_PRJ type ref to ZCL_VCXI_PXSS_PR_CADIF_PRJ.

    LR_PR_CADIF_PRJ = ME->GET_PRVDR_CADIF_PRJ( ).
    check LR_PR_CADIF_PRJ is bound.
    RF_CADPO = LR_PR_CADIF_PRJ->GET_CADPO( ).

  endmethod.
  method GET_FPDFR.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FPDFR ).
    move LS_PARAM-ATWRT to RF_FPDFR.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_GCADO.

    data: LS_LEOKY type /VCXI/VKSR_S_LEOKY.


    LS_LEOKY = ME->R_GATE->GET_LEOKY( ).
    RF_GCADO = LS_LEOKY-LEOKY.
    EF_SETBY = LS_LEOKY-SETBY.

  endmethod.
  method GET_ICADO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_ICADO ).
    move LS_PARAM-ATWRT to RF_ICADO.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_OREVR.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_OREVR ).
    move LS_PARAM-ATWRT to RF_OREVR.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRVDR_CADIF_PRJ.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_CADIF_PRJ.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_IPRVT_PX_CADIF_PRJ
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_CADIF_PRJ.

  endmethod.
  method GET_PRVDR_SCORE_MGR.

    data: LT_GATE         type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Get Score Manager provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_IPRVT_PX_SCORE_MGR
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Get Score Manager Reference
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_SCORE_MGR.
          check RR_PR_SCORE_MGR is bound.
          move LR_GATE to ER_GATE_SCORE_MGR.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: RR_PR_SCORE_MGR, ER_GATE_SCORE_MGR.
      endtry.
    endloop.

  endmethod.
  method GET_SSCOR.

*** Get Attribute Value
    RF_SSCOR = ME->R_GATE->GET_ATTRI( IF_ATTID = 'SSCOR' )-ATTVA.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Design Error
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_CADDE( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Design Error
    ME->CHECK_CADDE( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

      when C_IEVNT_I_INIT_GCADO.
        ME->HANDLE_INIT_GCADO( ).
      when C_IEVNT_I_RECALC_OREVR.
        ME->HANDLE_RECALC_OREVR( ).
    endcase.

  endmethod.
  method HANDLE_INIT_GCADO.

    data:  LF_GCADO  type ZVCXI_PXS_GCADO.


    check ME->GET_GCADO( ) is initial.

    try.
        LF_GCADO = CL_SYSTEM_UUID=>CREATE_UUID_C22_STATIC( ).
      catch CX_UUID_ERROR.                              "#EC NO_HANDLER
    endtry.

    ME->SET_GCADO( IF_GCADO = LF_GCADO ).

  endmethod.
method HANDLE_SET_DEFAULT.

  ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

endmethod.
  method SET_CADDE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CADDE ).

    move IF_CADDE to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_CADDE_CHANGED ).
    endif.

  endmethod.
  method SET_CADDL.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CADDL ).

    if IT_CADDL is supplied.
      call transformation ID
           source T_CADDL = IT_CADDL
           result xml LS_PARAM-STRNG.
    endif.
    if IF_SETBY is initial.
      clear LS_PARAM-STRNG.
    endif.
    LS_PARAM-SETBY = IF_SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method SET_CADIF_IO.

    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.


*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LS_CADIF_IO.

***--------------------------------------------------------------------------------------
*** Check validity of I/O values
    if LS_CADIF_IO-CADPO ne ME->GET_CADPO( ) or
       LS_CADIF_IO-GCADO ne ME->GET_GCADO( ).
      break TBD.
    endif.

*** Set OneUp ID
    ME->SET_ICADO( IF_ICADO = LS_CADIF_IO-ICADO ).

*** Set CAD Design Error
    ME->SET_CADDE( IF_CADDE = LS_CADIF_IO-CADDE ).

*** Set Document List
    ME->SET_CADDL( IT_CADDL = corresponding #( LS_CADIF_IO-T_CADIF_DOC_IO ) ).


***--------------------------------------------------------------------------------------
*** Update Parent from I/O Structure
    ME->UPDATE_PARENT( IS_CADIF_IO = IS_CADIF_IO ).

*** Update Score Manager from I/O Structure
    ME->UPDATE_SCORE_MGR( IS_CADIF_IO = IS_CADIF_IO ).

*** Update Converion Step Closing
    ME->UPDATE_CSTEP_CLOS( IS_CADIF_IO = IS_CADIF_IO ).

  endmethod.
  method SET_FPDFR.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FPDFR ).

    move IF_FPDFR to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FPDFR_CHANGED ).
    endif.

  endmethod.
  method SET_GCADO.

    data:  LF_CHANGED type ABAP_BOOL.


    LF_CHANGED = ME->R_GATE->SET_LEOKY( IS_LEOKY = value #( LEOKY = IF_GCADO
                                                            SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_GCADO_CHANGED ).
    endif.

  endmethod.
  method SET_ICADO.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_ICADO ).

    move IF_ICADO to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_ICADO_CHANGED ).
    endif.

  endmethod.
  method SET_OREVR.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_OREVR ).

    move IF_OREVR to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_OREVR_CHANGED ).
    endif.

  endmethod.
  method UPDATE_JOINT.

    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.
    data: LT_GATE      type /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.
    data: LR_DATA_OLD type ref to DATA,
          LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_JOINT type ref to ZCL_VCXI_PXSS_PR_JOINT.


*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LS_CADIF_IO.

***--------------------------------------------------------------------------------------
*** Get first defined Joints
    LT_GATE = IR_GATE_CSTEP->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_JOINT=>C_IPRVT_PX_JOINT
                                        IF_INUSE  = ABAP_TRUE
                                        IF_SORTED = ABAP_TRUE ).
    if LT_GATE is not initial.
      LR_GATE = LT_GATE[ 1 ].
    else.
***   Create one if not existing
      LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_PXSS_PR_JOINT=>C_IPRVT_PX_JOINT ).
      LR_GATE = ME->R_GATE->CREATE_ELEMENT( IF_ID = value #( LT_PRVDR_DEF[ 1 ]-ID default 'JOINT' ) ).
      LR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).
    endif.
    check LR_GATE is bound.

    LR_PR_JOINT = cast ZCL_VCXI_PXSS_PR_JOINT( LR_GATE->R_CLSPR ).

*** Set Joint Type
    LR_PR_JOINT->SET_JOITY( IF_JOITY = LS_CADIF_IO-JOITY
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Joint Dimension
    LR_PR_JOINT->SET_JOIWI( IS_JOIWI = LS_CADIF_IO-S_JOIWI
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    LR_PR_JOINT->SET_JOILE( IS_JOILE = LS_CADIF_IO-S_JOILE
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endmethod.
  method UPDATE_SCORE_MGR.

    data: LF_NSCOR type ZVCXI_P0SS_NSCOR.
    data: LS_SCORE_IO type ZVCXI_PXSS_S_CADIF_SCORE_IO.
    data: LT_SCORE_COM type ZVCXI_PXSS_TT_SCORE_COM.

    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.
    data: LR_PR_SCORE_MGR type ref to ZCL_VCXI_PXSS_PR_SCORE_MGR.


*** Get Score Manager Provider
    LR_PR_SCORE_MGR = ME->GET_PRVDR_SCORE_MGR( ).
    check LR_PR_SCORE_MGR is bound.

*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LS_CADIF_IO.

*** Add Scores on the Width (automatically add Edge Score)
    clear LF_NSCOR.
    loop at LS_CADIF_IO-T_SCORE_IO into LS_SCORE_IO where DIMEN = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_WIDTH.
      add 1 to LF_NSCOR.
      append value #( ISCOR   = ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( IF_DIMEN = LS_SCORE_IO-DIMEN ) && LF_NSCOR
                      S_SCORP = LS_SCORE_IO-S_SCORP
                      TSCOR   = LS_SCORE_IO-TSCOR
                      FSLIN   = LS_SCORE_IO-FSLIN
                    ) to LT_SCORE_COM.
    endloop.
    if LF_NSCOR eq 0.
      add 1 to LF_NSCOR.
      append value #( ISCOR     = ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_WIDTH ) && LF_NSCOR
                      SCORP     = LS_CADIF_IO-SHTPW
                      SCORP_UOM = LS_CADIF_IO-SHTPW_UOM
                      TSCOR     = ZCL_VCXI_PXSS_BL_SCORE=>GET_TSCOR_EDGE( ) )
                    to LT_SCORE_COM.
    endif.

*** Add Scores on the Length (automatically add Edge Score)
    clear LF_NSCOR.
    loop at LS_CADIF_IO-T_SCORE_IO into LS_SCORE_IO where DIMEN = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_LENGTH.
      add 1 to LF_NSCOR.
      append value #( ISCOR   = ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( IF_DIMEN = LS_SCORE_IO-DIMEN ) && LF_NSCOR
                      S_SCORP = LS_SCORE_IO-S_SCORP
                      TSCOR   = LS_SCORE_IO-TSCOR
                      FSLIN   = LS_SCORE_IO-FSLIN
                    ) to LT_SCORE_COM.
    endloop.
    if LF_NSCOR eq 0.
      add 1 to LF_NSCOR.
      append value #( ISCOR     = ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_LENGTH ) && LF_NSCOR
                      SCORP     = LS_CADIF_IO-SHTPW
                      SCORP_UOM = LS_CADIF_IO-SHTPW_UOM
                      TSCOR     = ZCL_VCXI_PXSS_BL_SCORE=>GET_TSCOR_EDGE( ) )
                    to LT_SCORE_COM.
    endif.

    sort LT_SCORE_COM by ISCOR.

***------------------------------------------------------------------------------------------------
*** Set Scores Status to "CAD Defined"
    LR_PR_SCORE_MGR->SET_SSCOR( IF_SSCOR = ME->GET_SSCOR( )
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Panel Orientation
    LR_PR_SCORE_MGR->SET_PANOR( IF_PANOR = LS_CADIF_IO-PANOR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Scores & Tapes
    LR_PR_SCORE_MGR->SET_SCORE_COM( IT_SCORE_COM = LT_SCORE_COM ).
    LR_PR_SCORE_MGR->SET_TAPE_COM(  IT_TAPE_COM  = LS_CADIF_IO-T_TAPE_COM  ).

  endmethod.
