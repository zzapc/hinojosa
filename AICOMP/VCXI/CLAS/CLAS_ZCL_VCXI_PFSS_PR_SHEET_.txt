
class ZCL_VCXI_PFSS_PR_SHEET definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_SHEET
  create public .

public section.

  constants C_GRAIO_HORIZONTAL type ZVCXI_PFSS_GRAIO value 'H'. "#EC NOTEXT
  constants C_GRAIO_VERTICAL type ZVCXI_PFSS_GRAIO value 'V'. "#EC NOTEXT
  constants C_IPRVT_PF_SHEET type /VCXI/VKSC_IPRVT value 'ZVCXI_PFSS_SHEET'. "#EC NOTEXT

  methods GET_GRAIO
    returning
      value(RF_GRAIO) type ZVCXI_PFSS_GRAIO
    raising
      /VCXI/CX_CKX .
  methods GET_GRAIO_DESCR
    returning
      value(RF_GRAIO_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods SET_GRAIO
    importing
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_GRAIO type ZVCXI_PFSS_GRAIO
    preferred parameter IF_SETBY
    raising
      /VCXI/CX_CKX .

  methods GET_CALIP
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods ZIF_VCXI_P0SS_SHTDIM~GET_SDIVI_DESCR
    redefinition .
protected section.

  constants C_IEVNT_O_GRAIO_CHANGED type /VCXI/VKSC_IEVNT value 'GRAIO_CHANGED'. "#EC NOTEXT
  constants C_PARID_GRAIO type /VCXI/VKS_PARID value 'ZVCXI_PF_GRAIO'. "#EC NOTEXT

  methods GET_PCDIM_GROSS
    redefinition .
  methods GET_PCDIM_NET
    redefinition .
  methods GET_ORIEN
    redefinition .
private section.
endclass. "ZCL_VCXI_PFSS_PR_SHEET definition
class ZCL_VCXI_PFSS_PR_SHEET implementation.
method GET_CALIP.

***------------------------------------------------------------------------------------------------
*** Get Caliper from Specification (Global Collector)
  check ME->R_PR_SPEC is bound.
  RS_CALIP = ME->R_PR_SPEC->GET_CALIP( IF_POOTI = '*' ).

endmethod.
method GET_GRAIO.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GRAIO ).
  move LS_PARAM-ATWRT to RF_GRAIO.

endmethod.
method GET_GRAIO_DESCR.

  constants: LC_DOMNAME type                   DOMNAME value 'ZVCXI_PFSS_GRAIO'.
  data:      LT_D07V    type standard table of DD07V.
  data:      LS_D07V    type                   DD07V.
  data:      LF_GRAIO   type                   ZVCXI_PFSS_GRAIO.

  LF_GRAIO = ME->GET_GRAIO( ).

*** Return Grain Orientation Description
  call function 'DD_DOMVALUES_GET'
    exporting
      DOMNAME   = LC_DOMNAME
      TEXT      = 'X'
      LANGU     = SY-LANGU
    tables
      DD07V_TAB = LT_D07V.

  check LT_D07V is not initial.
  read table LT_D07V with key DOMVALUE_L = LF_GRAIO into LS_D07V.
  check SY-SUBRC = 0.

  RF_GRAIO_DESCR = LS_D07V-DDTEXT.

endmethod.
method GET_ORIEN.

  move ME->GET_GRAIO( ) to RF_ORIEN.

endmethod.
method GET_PCDIM_GROSS.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_CB           type ref to ZCL_VCXI_PFSS_PR_CB.

***------------------------------------------------------------------------------------------------
*** Call Super Implementation
  RS_PCDIM = SUPER->GET_PCDIM_GROSS( ).

***------------------------------------------------------------------------------------------------
*** Get Converted Board Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSS_PR_CB=>C_IPRVT_PF_CB
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC eq 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_CB.
      catch CX_SY_MOVE_CAST_ERROR.
        exit.
    endtry.

    if LR_PR_CB is bound.
***   Multiply by Total Number Ups of Converted Board
      RS_PCDIM-PCUPS = RS_PCDIM-PCUPS * LR_PR_CB->GET_NOUPT( ).
    endif.
  endif.

endmethod.
method GET_PCDIM_NET.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_CB           type ref to ZCL_VCXI_PFSS_PR_CB.

***------------------------------------------------------------------------------------------------
*** Call Super Implementation
  RS_PCDIM = SUPER->GET_PCDIM_NET( ).

***------------------------------------------------------------------------------------------------
*** Get Converted Board Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSS_PR_CB=>C_IPRVT_PF_CB
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC eq 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_CB.
      catch CX_SY_MOVE_CAST_ERROR.
        exit.
    endtry.

    if LR_PR_CB is bound.
***   Multiply by Total Number Ups of Converted Board
      RS_PCDIM-PCUPS = RS_PCDIM-PCUPS * LR_PR_CB->GET_NOUPT( ).
    endif.
  endif.

endmethod.
method GET_STATUS.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Grain Orientation
  if ME->GET_GRAIO( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Grain Orientation
  if ME->GET_GRAIO( ) is not initial.
*** Grain Orientation is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PFSS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '301' ).
  else.
*** Grain Orientation is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PFSS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '302' ).
  endif.

endmethod.
method SET_GRAIO.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GRAIO ).

  move IF_GRAIO     to LS_PARAM-ATWRT.
  move IF_SETBY     to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_GRAIO_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SS_SHTDIM~GET_SDIVI_DESCR.

  constants: LC_DOMNAME type                   DOMNAME value 'ZVCXI_PFSS_SDIVI'.
  data:      LT_D07V    type standard table of DD07V.
  data:      LS_D07V    type                   DD07V.
  data:      LF_SDIVI   type                   ZVCXI_PFSS_SDIVI.

  LF_SDIVI = ME->GET_SDIVI( ).

*** Return Sheet Direction Description
  call function 'DD_DOMVALUES_GET'
    exporting
      DOMNAME   = LC_DOMNAME
      TEXT      = 'X'
      LANGU     = SY-LANGU
    tables
      DD07V_TAB = LT_D07V.

  check LT_D07V is not initial.
  read table LT_D07V with key DOMVALUE_L = LF_SDIVI into LS_D07V.
  check SY-SUBRC = 0.

  RF_SDIVI_DESCR = LS_D07V-DDTEXT.

endmethod.
