
class ZCL_VCXI_XCM_MBQ_STP_S206 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.

  methods COPY_QMAT
    importing
      !IF_TMATN type MATNR
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
    returning
      value(RF_COUNT) type I
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S206 definition
class ZCL_VCXI_XCM_MBQ_STP_S206 implementation.
  method COPY_QMAT.

    data: LS_QMAT type QMAT.
    data: LT_BAPIRET2    type table of BAPIRET2,
          LT_QMAT_SOURCE type ZVCXI_XCI_TT_QMAT,
          LT_QMAT_TARGET type ZVCXI_XCI_TT_QMAT.
    data: LR_BOB_MAT_SOURCE type ref to ZCL_VCXI_XCI_BOB_MAT,
          LR_BOB_MAT_TARGET type ref to ZCL_VCXI_XCI_BOB_MAT.


***--------------------------------------------------------------------------------------
*** Load Plant Data of Template Material
    create object LR_BOB_MAT_SOURCE.
    LR_BOB_MAT_SOURCE->INIT_FROM_DB( exporting IF_MATNR    = IF_TMATN
                                               IF_WERKS    = IF_WERKS
                                     importing ET_BAPIRET2 = LT_BAPIRET2 ).

*** Ensure Tamplate has requested Data defined
    check LR_BOB_MAT_SOURCE->GET_WERKS( ) eq IF_WERKS.

*** Load Plant Data of new Material
    create object LR_BOB_MAT_TARGET.
    LR_BOB_MAT_TARGET->INIT_FROM_DB( exporting IF_MATNR    = IF_MATNR
                                               IF_WERKS    = IF_WERKS
                                     importing ET_BAPIRET2 = LT_BAPIRET2 ).

*** Ensure Target has requested Data defined
    check LR_BOB_MAT_SOURCE->GET_WERKS( ) eq IF_WERKS.

***--------------------------------------------------------------------------------------
*** Get Inspection Data of Template and Target
    LT_QMAT_SOURCE = LR_BOB_MAT_SOURCE->GET_QMAT( ).
    LT_QMAT_TARGET = LR_BOB_MAT_TARGET->GET_QMAT( ).

*** Copy to Target
    loop at LT_QMAT_SOURCE into LS_QMAT.
***   Don't override existing
      check not LINE_EXISTS( LT_QMAT_TARGET[ ART = LS_QMAT-ART ] ).
***   Adjust Material and add to Target List
      LS_QMAT-MATNR = IF_MATNR.
      append LS_QMAT to LT_QMAT_TARGET.
    endloop.

*** Save Inspection Data to Target
    LR_BOB_MAT_TARGET->SAVE_QMAT( IT_QMAT = LT_QMAT_TARGET ).
    RF_COUNT = lines( LT_QMAT_TARGET ).

  endmethod.
  method EXECUTE.

    data: LF_COUNT type I.
    data: LS_MATLI type ZVCXI_XCM_MBQ_S_MATLI,
          LS_QMAT  type ZVCXI_XCM_MBQ_S_QMAT.
    data: LR_ACTDAT  type ref to DATA.
    field-symbols: <S_ACTDAT_QMAT> type ZVCXI_XCM_MBQ_S_ACTDAT_QMAT.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Create Production Version
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_QMAT ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_QMAT ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_QMAT>.


***--------------------------------------------------------------------------------------
***     Process defined Plants
        loop at <S_ACTDAT_QMAT>-T_QMAT into LS_QMAT.
***       Copy Inspection Type of Plant
          LF_COUNT = ME->COPY_QMAT( IF_TMATN = <S_ACTDAT_QMAT>-TMATN
                                    IF_MATNR = LS_MATLI-MATNR
                                    IF_WERKS = LS_QMAT-WERKS ).

***       Inspection setup of &1 type(s) for material &2 (&3) created.
          ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCM_MBQ'
                                           IF_MSGTY = 'S'
                                           IF_MSGNO = '203'
                                           IF_MSGV1 = |{ LF_COUNT }|
                                           IF_MSGV2 = LS_MATLI-MATNR
                                           IF_MSGV3 = LS_QMAT-WERKS ).
        endloop.

***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S206 implementation
