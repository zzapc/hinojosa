
class ZCL_VCXI_F0S_BL_MAKTX definition
  public
  create private .

public section.

  class-methods CLASS_CONSTRUCTOR .
  class-methods GET_FM
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_FNAME) type RS38L_FNAM
    raising
      /VCXI/CX_CKX .
  class-methods GET_MAKTX
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_MAKTX) type MAKTX
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    YT_TC100 type standard table of ZVCXI_F0S_TC100 .

  class-data T_TC100 type YT_TC100 .
private section.
endclass. "ZCL_VCXI_F0S_BL_MAKTX definition
class ZCL_VCXI_F0S_BL_MAKTX implementation.
  method CLASS_CONSTRUCTOR.

    select * into table T_TC100 from ZVCXI_F0S_TC100.

  endmethod.
  method GET_FM.

    data: LS_TC100      type        ZVCXI_F0S_TC100.
    data: LR_APPDATA    type ref to /VCXI/CL_VKSR_APPDATA.

    LR_APPDATA = IR_GATE->GET_APPDATA( ).
    check LR_APPDATA is bound.

    clear LS_TC100.
    read table T_TC100 into LS_TC100 with key CMATN = LR_APPDATA->S_CMPRK-CMATN
                                              PRFID = LR_APPDATA->S_CMPRK-PRFID
                                              WERKS = LR_APPDATA->F_WERKS
                                              ICELM = IR_GATE->F_ID.
    if SY-SUBRC ne 0.
      read table T_TC100 into LS_TC100 with key CMATN = LR_APPDATA->S_CMPRK-CMATN
                                                PRFID = LR_APPDATA->S_CMPRK-PRFID
                                                WERKS = ''
                                                ICELM = IR_GATE->F_ID.
      if SY-SUBRC ne 0.
        read table T_TC100 into LS_TC100 with key CMATN = ''
                                                  PRFID = ''
                                                  WERKS = LR_APPDATA->F_WERKS
                                                  ICELM = IR_GATE->F_ID.
        if SY-SUBRC ne 0.
          read table T_TC100 into LS_TC100 with key CMATN = ''
                                                    PRFID = ''
                                                    WERKS = ''
                                                    ICELM = IR_GATE->F_ID.
        endif.
      endif.
    endif.

    move LS_TC100-FNAME to RF_FNAME.

  endmethod.
  method GET_MAKTX.

    data: LF_FNAME                  type        RS38L_FNAM.
    data: LR_CX_SY_DYN_CALL_ERROR   type ref to CX_SY_DYN_CALL_ERROR.


    check IR_GATE          is bound and
          IR_GATE->F_FREED ne ABAP_TRUE.

***--------------------------------------------------------------------------------------
*** Get Determination Function Module
    move GET_FM( IR_GATE = IR_GATE ) to LF_FNAME.
    check LF_FNAME is not initial.

***--------------------------------------------------------------------------------------
*** Dynamic Call of Executable Function Module
    try.
        call function LF_FNAME
          exporting
            IR_GATE  = IR_GATE
          importing
            EF_MAKTX = RF_MAKTX.

      catch CX_SY_DYN_CALL_ERROR into LR_CX_SY_DYN_CALL_ERROR.
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_DYN_CALL_ERROR ).
    endtry.

  endmethod.
