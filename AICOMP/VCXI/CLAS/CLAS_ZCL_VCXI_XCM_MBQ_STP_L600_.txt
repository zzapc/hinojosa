
class ZCL_VCXI_XCM_MBQ_STP_L600 definition
  public
  inheriting from ZCL_VCXI_XCM_STP_L000
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_RPSEG type ref to /VCXI/CL_CKMR_RPSEG
    raising
      /VCXI/CX_CKX .
protected section.

  data R_DCO_INPUT type ref to ZCL_VCXI_XCM_MBQ_DCO_SDOC .
  data R_DCO_OUTPUT type ref to ZCL_VCXI_XCM_MBQ_DCO_SDOC .

  methods CHECK_ACTCON
    importing
      !IT_ACTCON type ZVCXI_XCM_MBQ_TT_ACTCON
    exporting
      !EF_FULL_DMSLI type ABAP_BOOL
    returning
      value(RF_RELEVANT) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods SORT_DMSLI
    importing
      !IT_DMSLI type ZVCXI_XCM_MBQ_TT_DMSLI
    returning
      value(RT_DMSLI) type ZVCXI_XCM_MBQ_TT_DMSLI .

  methods ANALYZE_RESULT_DCO
    redefinition .
  methods GET_SUBPROCESS_DCO
    redefinition .
  methods EXECUTE_SUBPROCESS
    redefinition .
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_L600 definition
class ZCL_VCXI_XCM_MBQ_STP_L600 implementation.
  method ANALYZE_RESULT_DCO.

    data: LR_DCO_SDOC type ref to ZCL_VCXI_XCM_MBQ_DCO_SDOC.


*** Map Resulting DCO of SubProcess
    IR_RPROC->MAP_DCO( changing CR_DCO = LR_DCO_SDOC ).
    check LR_DCO_SDOC is bound.

*** Update active DMS Document List entry only
    ME->R_DCO_OUTPUT->UPDATE_DMSLI( IS_DMSLI = LR_DCO_SDOC->T_DMSLI[ DLCNT = LR_DCO_SDOC->F_DLCNT ] ).

  endmethod.
  method CHECK_ACTCON.

*** Check Relevancy
    check LINE_EXISTS( IT_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_DMS ] ).

    RF_RELEVANT = ABAP_TRUE.

  endmethod.
  method CONSTRUCTOR.

*** Super Constructor
    SUPER->CONSTRUCTOR( IR_RPSEG = IR_RPSEG ).

*** Map DCO to Required Input/Output
    ME->R_RPSEG->MAP_DCO( changing CR_DCO = ME->R_DCO_INPUT ).
    ME->R_RPSEG->MAP_DCO( changing CR_DCO = ME->R_DCO_OUTPUT ).

  endmethod.
  method EXECUTE_SUBPROCESS.

*** Submit to avoid issues with later configuration (e.g. Tool Data)
    IR_RPROC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = /VCXI/CL_CKMR_RPROC=>C_FCODE_EXECUTE_SUBMIT ).

  endmethod.
  method GET_SUBPROCESS_DCO.

    data: LF_FULL_DMSLI type ABAP_BOOL.
    data: LS_DMSLI type ZVCXI_XCM_MBQ_S_DMSLI.
    data: LT_DMSLI type ZVCXI_XCM_MBQ_TT_DMSLI.
    data: LR_DCO_SDOC type ref to ZCL_VCXI_XCM_MBQ_DCO_SDOC.


***--------------------------------------------------------------------------------------
*** Sort DMS Document List
    LT_DMSLI = ME->SORT_DMSLI( IT_DMSLI = ME->R_DCO_INPUT->T_DMSLI ).

***--------------------------------------------------------------------------------------
*** Create subprocess for each DMS Document
    loop at LT_DMSLI into LS_DMSLI.
***   Check for relevant Activitiy
      check ME->CHECK_ACTCON( exporting IT_ACTCON     = LS_DMSLI-T_ACTCON
                              importing EF_FULL_DMSLI = LF_FULL_DMSLI ).

***   Copy DCO by Serialize-Deserialize
      LR_DCO_SDOC ?= /VCXI/CL_CKMR_CLDCO=>DESERIALIZE( IF_XMLDC = ME->R_DCO_INPUT->SERIALIZE( ) ).

***   Set only current DMS Document into DMS Document List or full list if requested by Activity
      if LF_FULL_DMSLI ne ABAP_TRUE.
        LR_DCO_SDOC->SET_DMSLI( IT_DMSLI = value #( ( LS_DMSLI ) ) ).
      else.
        LR_DCO_SDOC->SET_DMSLI( IT_DMSLI = LT_DMSLI ).
      endif.
      LR_DCO_SDOC->SET_DLCNT( IF_DLCNT = LS_DMSLI-DLCNT ).

***   Add DCO to return list
      append LR_DCO_SDOC to RT_DCO.
    endloop.

  endmethod.
  method SORT_DMSLI.

    RT_DMSLI = IT_DMSLI.
    sort RT_DMSLI by DLCNT.

  endmethod.
