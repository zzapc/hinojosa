
class ZCL_VCXI_XCM_MBQ_STP_S502 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S502 definition
class ZCL_VCXI_XCM_MBQ_STP_S502 implementation.
  method EXECUTE.

    data: LF_ERROR type ABAP_BOOL.
    data: LS_MATLI type ZVCXI_XCM_MBQ_S_MATLI,
          LS_CKKEY type ZVCXI_XCM_MBQ_S_CKKEY.
    data: LT_CMFMSG type TCMFMSG.
    data: LR_BOB_CK_MAT type ref to ZCL_VCXI_XCI_BOB_CK_MAT,
          LR_ACTDAT     type ref to DATA.
    field-symbols: <S_ACTDAT_CKC> type ZVCXI_XCM_MBQ_S_ACTDAT_CKC.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Create Material Cost Estimate
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CKC ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CKC ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_CKC>.


***--------------------------------------------------------------------------------------
***     Create each Cost Estimate
        loop at <S_ACTDAT_CKC>-T_CKKEY into LS_CKKEY.
          LR_BOB_CK_MAT = ZCL_VCXI_XCI_BOB_CK_MAT=>CREATE( IF_MATNR = LS_MATLI-MATNR
                                                           IF_WERKS = LS_CKKEY-WERKS
                                                           IF_KLVAR = LS_CKKEY-KLVAR
                                                           IF_TVERS = LS_CKKEY-TVERS
                                                           IF_DATE  = LS_CKKEY-DATE ).

***       The cost estimate is being saved
          ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'CK'
                                           IF_MSGTY = 'S'
                                           IF_MSGNO = '039' ).

***       Get Protocol Messages
          LT_CMFMSG = LR_BOB_CK_MAT->GET_LOG( ).
          loop at LT_CMFMSG into data(LS_CMFMSG).
            ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = LS_CMFMSG-ARBGB
                                             IF_MSGTY = LS_CMFMSG-MSGTY
                                             IF_MSGNO = conv #( LS_CMFMSG-MSGNR )
                                             IF_MSGV1 = LS_CMFMSG-MSGV1
                                             IF_MSGV2 = LS_CMFMSG-MSGV2
                                             IF_MSGV3 = LS_CMFMSG-MSGV3
                                             IF_MSGV4 = LS_CMFMSG-MSGV4 ).
          endloop.

          if LR_BOB_CK_MAT->S_CCS-KEKO-MAXMSG eq 'E'.
            LF_ERROR = ABAP_TRUE.
          endif.
        endloop.

***     Set Status to Complete or Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = switch #( LF_ERROR when ABAP_FALSE then /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED
                                                                              else /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ) ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S502 definition
endclass. "ZCL_VCXI_XCM_MBQ_STP_S502 implementation
