
class ZCL_VCXI_P1SS_PR_CSTEP_EMBOS definition
  public
  inheriting from ZCL_VCXI_P1SS_PR_CSTEP
  create public .

public section.

  constants C_IEVNT_I_LOAD_TOOL_DATA type /VCXI/VKSC_IEVNT value 'LOAD_TOOL_DATA' ##NO_TEXT.
  constants C_IEVNT_O_EMBTD_CHANGED type /VCXI/VKSC_IEVNT value 'EMBTD_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_EMBTN_CHANGED type /VCXI/VKSC_IEVNT value 'EMBTN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_SHTDI_CHANGED type /VCXI/VKSC_IEVNT value 'SHTDI_CHANGED' ##NO_TEXT.
  constants C_PARID_EMBTD type /VCXI/VKS_PARID value 'ZVCXI_PX_EMBTD' ##NO_TEXT.
  constants C_PARID_EMBTN type /VCXI/VKS_PARID value 'ZVCXI_PX_EMBTN' ##NO_TEXT.
  constants C_PARID_SHTDI type /VCXI/VKS_PARID value 'ZVCXI_P0_SHTDI' ##NO_TEXT.

  methods GET_EMBTD
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RF_EMBTD) type ZVCXI_PXS_EMBTD
    raising
      /VCXI/CX_CKX .
  methods GET_EMBTN
    exporting
      !ER_CUST_TOOL_EMB type ref to ZCL_VCXI_PXSS_CUST_TOOL_EMB
      !EF_DESCR type /VCXI/CKX_DESCR
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_RELEA type ABAP_BOOL
      !ES_BAPIRET2 type BAPIRET2
    returning
      value(RF_EMBTN) type ZVCXI_PXS_EMBTN
    raising
      /VCXI/CX_CKX .
  methods GET_SHTDI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_SHTDI) type ZVCXI_P0SS_SHTDI
    raising
      /VCXI/CX_CKX .
  methods SET_EMBTD
    importing
      !IF_EMBTD type ZVCXI_PXS_EMBTD optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_EMBTN
    importing
      !IF_EMBTN type ZVCXI_PXS_EMBTN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SHTDI
    importing
      !IF_SHTDI type ZVCXI_P0SS_SHTDI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_EMBTD type /VCXI/VKSC_IEVNT value 'RECALC_EMBTD' ##NO_TEXT.

  methods CHECK_TOOL_DATA
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_LOAD_TOOL_DATA
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_EMBTD
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P1SS_PR_CSTEP_EMBOS definition
class ZCL_VCXI_P1SS_PR_CSTEP_EMBOS implementation.
  method CHECK_TOOL_DATA.

    data: LS_BAPIRET2 type BAPIRET2.
    data: LR_CUST_TOOL_EMB type ref to ZCL_VCXI_PXSS_CUST_TOOL_EMB.


***----------------------------------------------------------------------------
*** Get Tool Instance
    ME->GET_EMBTN( importing ER_CUST_TOOL_EMB = LR_CUST_TOOL_EMB
                             ES_BAPIRET2      = LS_BAPIRET2 ).
    if LS_BAPIRET2 is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
        IR_MESSAGE->ADD_MESSAGE_BY_BAPIRET2( IS_BAPIRET2 = LS_BAPIRET2 ).
      endif.
    endif.
    check LR_CUST_TOOL_EMB is bound.

  endmethod.
  method GET_EMBTD.

    data: LF_DESCR type /VCXI/CKX_DESCR.
    data: LS_PARAM type /VCXI/VKSR_S_PARAM.


    if ME->GET_EMBTN( importing EF_DESCR = LF_DESCR ) is initial.
      LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_EMBTD ).
      move LS_PARAM-STRNG to RF_EMBTD.
      move LS_PARAM-SETBY to EF_SETBY.

      if EF_FOVRR is requested.
        EF_FOVRR = cond #( when ZCL_VCXI_PXSS_BL_MAKTX=>GET_FM( exporting IR_GATE = ME->R_GATE ) is initial then ABAP_UNDEFINED
                           when EF_SETBY eq /VCXI/CL_VKSR_GATE=>C_SETBY_USER                                then ABAP_TRUE
                                                                                                            else ABAP_FALSE ).
      endif.
    else.
      RF_EMBTD = LF_DESCR.
    endif.

  endmethod.
  method GET_EMBTN.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM,
          LS_MAKT  type MAKT.


***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_EMBTN ).
    move LS_PARAM-ATWRT to RF_EMBTN.
    move LS_PARAM-SETBY to EF_SETBY.

*** Release Status Default
    EF_RELEA = ABAP_UNDEFINED.

    check RF_EMBTN is not initial.

***----------------------------------------------------------------------------
    if ER_CUST_TOOL_EMB is requested or
       EF_RELEA         is requested.
      try.
***       Get Tool Customizing Instance
          ER_CUST_TOOL_EMB = ZCL_VCXI_PXSS_CUST_TOOL_EMB=>GET_INSTANCE_TOOL_EMB( IF_MATNR = RF_EMBTN
                                                                                 IF_WERKS = ME->GET_WERKS( )
                                                                                 IF_DATE  = ME->R_GATE->GET_APPDATA( )->F_DCONF ).
        catch /VCXI/CX_CKX into data(LR_CX_CKX).
          if ES_BAPIRET2 is requested.
            ES_BAPIRET2 = LR_CX_CKX->GET_BAPIRET2( ).
          endif.
          clear ER_CUST_TOOL_EMB.
      endtry.
    endif.

*** Release Status
    if EF_RELEA is requested and
       ER_CUST_TOOL_EMB is bound and
       ER_CUST_TOOL_EMB->IS_RELEASED( ).
      EF_RELEA = ABAP_TRUE.
    else.
      EF_RELEA = ABAP_FALSE.
    endif.

    if EF_DESCR is requested.
***   Identify Description
      call function 'MAKT_SINGLE_READ'
        exporting
          MATNR  = RF_EMBTN
          SPRAS  = SY-LANGU
        importing
          WMAKT  = LS_MAKT
        exceptions
          others = 0.
      EF_DESCR = LS_MAKT-MAKTX.
    endif.

  endmethod.
  method GET_SHTDI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.
    data:  LT_D07V    type standard table of DD07V.


***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHTDI ).
    move LS_PARAM-ATWRT to RF_SHTDI.
    move LS_PARAM-SETBY to EF_SETBY.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Description
      call function 'DD_DOMVALUES_GET'
        exporting
          DOMNAME   = 'ZVCXI_P0SS_SHTDI'
          TEXT      = 'X'
          LANGU     = SY-LANGU
        tables
          DD07V_TAB = LT_D07V.
      EF_DESCR = value #( LT_D07V[ DOMVALUE_L = RF_SHTDI ]-DDTEXT optional ).
    endif.

  endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Tool Data
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_TOOL_DATA( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Tool Data
    ME->CHECK_TOOL_DATA( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_EMBTD.
        ME->HANDLE_RECALC_EMBTD( ).
      when C_IEVNT_I_LOAD_TOOL_DATA.
        ME->HANDLE_LOAD_TOOL_DATA( ).
    endcase.

  endmethod.
  method HANDLE_LOAD_TOOL_DATA.
*
**** Ensure a tool has been specified
*    check ME->GET_DCTTN( ) is not initial.
*
**** Load Tool Data
*    ME->ZIF_VCXI_PXSS_DCUT~SET_TOOL_DATA( ).

  endmethod.
  method HANDLE_RECALC_EMBTD.

    data: LF_FOVRR type ZVCXI_XCS_FOVRR,
          LF_MAKTX type MAKTX.

    if ME->GET_EMBTN( ) is initial.
***   Only calcualate if calculation is active
      ME->GET_EMBTD( importing EF_FOVRR = LF_FOVRR ).
      check LF_FOVRR eq ABAP_FALSE.

***   Get generated Material Description
      LF_MAKTX = ZCL_VCXI_PXSS_BL_MAKTX=>GET_MAKTX( IR_GATE = ME->R_GATE ).

***   Set new Description
      ME->SET_EMBTD( IF_EMBTD = LF_MAKTX ).

    else.
***   Initialize Tool Description
      ME->SET_EMBTD( IF_SETBY = SPACE ).
    endif.

  endmethod.
  method SET_EMBTD.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_EMBTD ).

    move IF_EMBTD  to LS_PARAM-STRNG.
    move IF_SETBY  to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_EMBTD_CHANGED ).
    endif.

  endmethod.
  method SET_EMBTN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_EMBTN ).

    move IF_EMBTN  to LS_PARAM-ATWRT.
    move IF_SETBY  to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_EMBTN_CHANGED ).
    endif.

  endmethod.
  method SET_SHTDI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHTDI ).

    move IF_SHTDI  to LS_PARAM-ATWRT.
    move IF_SETBY  to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SHTDI_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LF_TEMBO type ZVCXI_PXS_TEMBO,
          LF_LABEL type STRING,
          LF_DESCR type /VCXI/CKX_DESCR.
    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE.


*** Get Attribute Data
    LF_LABEL = CR_NETGRAPH_JSON->GET_LABEL( IF_VALUE = LF_TEMBO ).
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_EMBOS=>C_IPRVT_PX_EMBOS
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ) into data(LR_GATE).
      cast ZCL_VCXI_PXSS_PR_EMBOS( LR_GATE->R_CLSPR )->GET_TEMBO( importing EF_DESCR = LF_DESCR ).
      CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_LABEL = LF_LABEL
                                            IF_VALUE = LF_DESCR
                                  changing  CT_ATTR  = LT_ATTR ).
      clear LF_LABEL.
    endloop.

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR      = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON       = 'sap-icon://print'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY
                                                    IT_ATTR       = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
