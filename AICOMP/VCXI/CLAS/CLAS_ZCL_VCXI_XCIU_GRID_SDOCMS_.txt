
class ZCL_VCXI_XCIU_GRID_SDOCMS definition
  public
  create public .

public section.

  type-pools ABAP .
  data F_REFRESH_REQ type ABAP_BOOL .

  methods CONSTRUCTOR
    importing
      !IR_UI_IDAT_SDOC type ref to ZCL_VCXI_XCIU_UI_IDAT_SDOC
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
protected section.

  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data R_UI_IDAT_SDOC type ref to ZCL_VCXI_XCIU_UI_IDAT_SDOC .
  data T_SDOCMS_GRID type ZVCXI_XCIU_TT_SDOCMS_GRID .

  methods GET_FIELDCAT
    returning
      value(RT_FCAT) type LVC_T_FCAT
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods INIT_SDOCMS_GRID
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCIU_GRID_SDOCMS definition
class ZCL_VCXI_XCIU_GRID_SDOCMS implementation.
method CONSTRUCTOR.

  move IR_UI_IDAT_SDOC   to ME->R_UI_IDAT_SDOC.

*** Request Refresh
  move ABAP_TRUE to ME->F_REFRESH_REQ.

*** Initialize Container
  ME->INIT_CONTAINER( ).

*** Initialize Grid
  ME->INIT_GRID( ).

endmethod.
method DO_FREE.

*** Free Grid
  if ME->R_GRID is bound.
*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).

    ME->R_GRID->FREE( exceptions
                        CNTL_ERROR        = 1
                        CNTL_SYSTEM_ERROR = 2
                        others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_GRID.
  endif.

*** Free Container
  if ME->R_CONTAINER is bound.
    ME->R_CONTAINER->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_CONTAINER.
  endif.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>        type        LVC_S_FCAT.

*** Get Field Catalog
  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      I_STRUCTURE_NAME       = 'ZVCXI_XCIU_S_SDOCMS_GRID'
    changing
      CT_FIELDCAT            = RT_FCAT
    exceptions
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      others                 = 3.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'TSTMP' or
           'GUIDM' or
           'MSGID' or
           'MSGTY' or
           'MSGNO' or
           'MSGV1' or
           'MSGV2' or
           'MSGV3' or
           'MSGV4' or
           'ICON'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.

*     when MESSAGE
*          UNAME
*          VBELN

    endcase.
  endloop.

endmethod.
method INIT_CONTAINER.

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = '0100CC_SDOCMS'
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

endmethod.
method INIT_GRID.

  check ME->R_GRID is not bound.

  create object ME->R_GRID
    exporting
      I_PARENT          = ME->R_CONTAINER
      I_APPL_EVENTS     = ABAP_TRUE
    exceptions
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      others            = 5.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
method INIT_SDOCMS_GRID.

  data:          LS_SDOCMS            type          ZVCXI_XCI_S_SDOCMS,
                 LS_MSG               type          /VCXI/CKXM_S_MSG.
  field-symbols: <S_SDOCMS_GRID>      type          ZVCXI_XCIU_S_SDOCMS_GRID.

  free: ME->T_SDOCMS_GRID.

*** Fill Table
  loop at ME->R_UI_IDAT_SDOC->R_IDAT_SDOC->T_SDOCMS into LS_SDOCMS.
    loop at LS_SDOCMS-T_MSG into LS_MSG.
      append initial line to ME->T_SDOCMS_GRID assigning <S_SDOCMS_GRID>.
      move-corresponding LS_SDOCMS to <S_SDOCMS_GRID>.
      move-corresponding LS_MSG    to <S_SDOCMS_GRID>.
    endloop.
  endloop.

endmethod.
method REFRESH_GRID.

  data:          LS_LAYOUT            type        LVC_S_LAYO.
  data:          LT_TOOLBAR_EXCLUDING type        UI_FUNCTIONS,
                 LT_FCAT              type        LVC_T_FCAT.

  check ME->F_REFRESH_REQ eq ABAP_TRUE.
  move ABAP_FALSE to ME->F_REFRESH_REQ.

***--------------------------------------------------------------------------------------
*** Get Grid Data
  ME->INIT_SDOCMS_GRID( ).

***--------------------------------------------------------------------------------------
*** Field Catalog
  move ME->GET_FIELDCAT( )                to LT_FCAT.

*** Toolbar Exclusion
  append CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL  to LT_TOOLBAR_EXCLUDING.

*** Layout
  move 'X'       to LS_LAYOUT-CWIDTH_OPT.
  move 'X'       to LS_LAYOUT-NO_TOOLBAR.
  move 'T_STYL'  to LS_LAYOUT-STYLEFNAME.

***--------------------------------------------------------------------------------------
*** Relfreh ALV Grid
  ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
    exporting
      IT_TOOLBAR_EXCLUDING          = LT_TOOLBAR_EXCLUDING
      IS_LAYOUT                     = LS_LAYOUT
    changing
      IT_FIELDCATALOG               = LT_FCAT
      IT_OUTTAB                     = ME->T_SDOCMS_GRID
    exceptions
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3
      others                        = 4 ).
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
