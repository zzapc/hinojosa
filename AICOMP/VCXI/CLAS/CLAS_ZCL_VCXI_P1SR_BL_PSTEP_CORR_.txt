
class ZCL_VCXI_P1SR_BL_PSTEP_CORR definition
  public
  inheriting from ZCL_VCXI_P1SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_PXSR_CONV_ATP .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .
  interfaces ZIF_VCXI_P1SR_ADJ_FLUTE .
  interfaces ZIF_VCXI_PXSR_CONV_LTP .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_CORR type /VCXI/VSMC_IPSTP value 'P1_PS_CORR' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_CORR
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_IMFXC
    redefinition .
  methods GET_IQCFT
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods REPLACE_MFSI_BY_MFMI
    redefinition .
  methods GET_MFICF_BY_IMFXC
    redefinition .
protected section.

  constants C_ATTID_ISVCE type /VCXI/VKS_ATTID value 'ISVCE_MFMI' ##NO_TEXT.
  constants C_IAATY_BOARD type /VCXI/VSMC_IAATY value 'PC_AA_BOARD' ##NO_TEXT.
  constants C_IAATY_FLUTE type /VCXI/VSMC_IAATY value 'PC_AA_FLUTE' ##NO_TEXT.
  data F_BOARD type ZVCXI_PCS_BOARD .
  data F_FLUTE type ZVCXI_PCS_FLUTE .
  data R_ARBPL type ref to /VCXI/CL_VSMC_ARBPL .
  data S_COLEN type ZVCXI_PCS_S_COLEN .
  data S_COWID type ZVCXI_PCS_S_COWID .
  data S_MS_STARCH type ZVCXI_P1SR_S_MS_STARCH .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data T_MS_PAPER type ZVCXI_P1SR_TT_MS_PAPER .
  data T_SCORE type ZVCXI_PXSR_TT_SCORE .
  data T_PRPLIN type ZVCXI_P1SR_TT_PRPLIN .

  methods INIT_BY_PRPLIN
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_STARCH
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFMI_PAPER
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_CORR
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_BOARD
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_CORR
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    exporting
      !ER_PR_CORR type ref to ZCL_VCXI_P1SS_PR_CORR
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_PAPER
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_STARCH
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods ADD_SPVRE_MFSI_L
    redefinition .
  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SR_BL_PSTEP_CORR definition
class ZCL_VCXI_P1SR_BL_PSTEP_CORR implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

***--------------------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***--------------------------------------------------------------------------------------
*** Aspect - PC_AA_BOARD
    try.
        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_BOARD
                                     II_AVVAL  = value #( ( SIGN   = 'I'
                                                            OPTION = 'EQ'
                                                            LOW    = ME->F_BOARD ) ) ).
      catch /VCXI/CX_CKX.                               "#EC NO_HANDLER
    endtry.

***----------------------------------------------------------------------------
*** Aspect - PC_AA_FLUTE
    try.
        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_FLUTE
                                     II_AVVAL  = value #( ( SIGN   = 'I'
                                                            OPTION = 'EQ'
                                                            LOW    = ME->F_FLUTE ) ) ).
      catch /VCXI/CX_CKX.                               "#EC NO_HANDLER
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_SCORE_NUM type I,
          LF_LDUOM     type /VCXI/VSMC_LDUOM,
          LF_LDVAL     type /VCXI/VSMR_LDVAL.
    data: LS_SCORE       type ZVCXI_PXSR_S_SCORE,
          LS_SCORE_FIRST type ZVCXI_PXSR_S_SCORE,
          LS_SCORE_MIN   type ZVCXI_PXSR_S_SCORE.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols:  <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***--------------------------------------------------------------------------------------
*** Ananlyze applied Scores
    loop at ME->T_SCORE into LS_SCORE.
***   Count Length Scores
      add 1 to LF_SCORE_NUM.

***   Get First and minimal Score
      case LF_SCORE_NUM.
        when 1.
          move LS_SCORE to LS_SCORE_FIRST.
        when 2.
          move LS_SCORE to LS_SCORE_MIN.
        when others.
          if LS_SCORE-SCORP lt LS_SCORE_MIN-SCORP.
            move LS_SCORE to LS_SCORE_MIN.
          endif.
      endcase.
    endloop.

***--------------------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      free: LF_LDVAL,
            LF_LDUOM,
            LI_LVVAL.

***--------------------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).

***     Sheet Length (Outbound)
        when 'P0_LT_DO_SHTLEN'.
          move ME->S_PCDIM_OUT-PCLEN       to LF_LDVAL.
          move ME->S_PCDIM_OUT-PCLEN_UOM   to LF_LDUOM.

***     Sheet Width (Outbound)
        when 'P0_LT_DO_SHTWID'.
          move ME->S_PCDIM_OUT-PCWID       to LF_LDVAL.
          move ME->S_PCDIM_OUT-PCWID_UOM   to LF_LDUOM.

***     Distance from edge of the sheet to the first score
        when 'PC_LT_DP_DISTANCESCTOKN'.
          if LS_SCORE_FIRST-ISCOR is not initial.
            move LS_SCORE_FIRST-SCORP      to LF_LDVAL.
            move LS_SCORE_FIRST-SCORP_UOM  to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Minimum Score Distance
        when 'PC_LT_DP_SCORE_DIST_MIN'.
          if LS_SCORE_MIN-ISCOR is not initial.
            move LS_SCORE_MIN-SCORP        to LF_LDVAL.
            move LS_SCORE_MIN-SCORP_UOM    to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Number of Scores
        when 'PC_LT_DP_SCORE_NUM'.
          if LF_SCORE_NUM is not initial.
            move LF_SCORE_NUM                to LF_LDVAL.
            move 'ST'                        to LF_LDUOM.
          else.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Flute Type
        when 'PC_LT_VP_FLUTE'.
          append initial line to LI_LVVAL  assigning <S_LVVAL>.
          move 'I'                         to <S_LVVAL>-SIGN.
          move 'EQ'                        to <S_LVVAL>-OPTION.
          move ME->F_FLUTE                 to <S_LVVAL>-LOW.

***     Score Type
        when 'PC_LT_VP_SCORE_TYPE'.
          loop at ME->T_SCORE into LS_SCORE.
            append initial line to LI_LVVAL assigning <S_LVVAL>.
            move 'I'                       to <S_LVVAL>-SIGN.
            move 'EQ'                      to <S_LVVAL>-OPTION.
            move LS_SCORE-TSCOR            to <S_LVVAL>-LOW.
          endloop.
          if LI_LVVAL is initial.
***         Not applicable Limit
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

        when others.
          continue.
      endcase.

***--------------------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          sort LI_LVVAL.
          delete adjacent duplicates from LI_LVVAL.

          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

***--------------------------------------------------------------------------------------
*** Set Workcenter Restriction
    if ME->R_ARBPL is bound.
      clear IR_RTE_PSTEP->T_ARBPL.
      append ME->R_ARBPL to IR_RTE_PSTEP->T_ARBPL.
    endif.

  endmethod.
  method ADD_SPVRE_MC_STARCH.

    data: LS_LEOKY type        /VCXI/VKSR_S_LEOKY,
          LS_PARAM type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE           type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_STARCH type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_STARCH'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MC_STARCH
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_PARENT.
    append LR_SPVRE_MC_STARCH to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MC_STARCH->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Set Material Number
    clear LS_LEOKY.
    move ME->S_MS_STARCH-MATNR                       to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_LEOKY-SETBY.
    LR_SPVRE_MC_STARCH->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***--------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_AVGCO_W to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_MS_STARCH-AVGCO                       to LS_PARAM-ATFLV.
    move ME->S_MS_STARCH-AVGCO_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_AVGCP_A to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_MS_STARCH-AVGCP                       to LS_PARAM-ATFLV.
    move ME->S_MS_STARCH-AVGCP_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Set Starch Factor
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_STARF   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_MS_STARCH-STARF                       to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Set Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_PURCH   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move ME->S_MS_STARCH-PURCH                       to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

    if ME->S_MS_STARCH-PURCH eq ABAP_TRUE.

***--------------------------------------------------------------------------------------
***   Set Price
      clear LS_PARAM.
      move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_PRICE   to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move ME->S_MS_STARCH-PRICE                       to LS_PARAM-ATFLV.
      move ME->S_MS_STARCH-PRICE_CURR                  to LS_PARAM-CURKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Set Price Unit
      clear LS_PARAM.
      move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_PRICP_W  to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
      move ME->S_MS_STARCH-PRICP                        to LS_PARAM-ATFLV.
      move ME->S_MS_STARCH-PRICP_UOM                    to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
      LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Set Vendor
      clear LS_PARAM.
      move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_LIFNR    to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
      move ME->S_MS_STARCH-LIFNR                        to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
      LR_SPVRE_MC_STARCH->SET_PARAM( IS_PARAM = LS_PARAM ).

    endif.

  endmethod.
  method ADD_SPVRE_MFMI_PAPER.

    data: LR_SPVCE type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE type ref to /VCXI/CL_VKSR_SPVRE.


    loop at ME->T_MS_PAPER into data(LS_MS_PAPER).

***------------------------------------------------------------------------------------------------
***   Create Supervisor Runtime Element
      LR_SPVRE = new #( IR_SPVCE  = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_PAPER-ISVCE
                                                             IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE )
                        IR_PARENT = IR_SPVRE_MFMGR ).
      append LR_SPVRE to CT_SPVRE.

***   Set In Use
      LR_SPVRE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Material Number
      LR_SPVRE->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_PAPER-MATNR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Paper ID
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_PAPER-BPAID
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Basis Weight
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_MFMI_PAPER=>C_PARID_BAWGT
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_PAPER-BAWGT
                                               UNIT  = LS_MS_PAPER-BAWGT_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Basis Weight Per
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_MFMI_PAPER=>C_PARID_BAWGP_A
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_PAPER-BAWGP
                                               UNIT  = LS_MS_PAPER-BAWGP_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Paper Width
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_MFMI_PAPER=>C_PARID_PAWID
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_PAPER-PAWID
                                               UNIT  = LS_MS_PAPER-PAWID_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Paper Factor
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_MFMI_PAPER=>C_PARID_MFICF
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_PAPER-BPFAC
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Text
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_MFMI_PAPER=>C_PARID_TEXT
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_PAPER-TEXT
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).


***------------------------------------------------------------------------------------------------
***   Purchase Flag
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PURCH
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_PAPER-PURCH
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Purchase Information
      check LS_MS_PAPER-PURCH ne ZIF_VCXI_XCSP_MFM=>C_PURCH_STOCK.

***   Price
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICE
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_PAPER-PRICE
                                               CURKY = LS_MS_PAPER-PRICE_CURR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Price Unit
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_MS_PAPER-ISVCE when 'MFMI_PAPER_A' then ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICP_A
                                                                                   when 'MFMI_PAPER_L' then ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICP_L
                                                                                   when 'MFMI_PAPER_P' then ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICP_P
                                                                                   when 'MFMI_PAPER_W' then ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICP_W )
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_PAPER-PRICP
                                               UNIT  = LS_MS_PAPER-PRICP_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Vendor
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_LIFNR
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_PAPER-LIFNR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Add Price Scale Manager
      IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE
                                              IT_PSCALE       = LS_MS_PAPER-T_PSCALE
                                    changing  CT_SPVRE        = CT_SPVRE ).
    endloop.

  endmethod.
  method ADD_SPVRE_MFSI_L.

    data: LF_TABIX type I,
          LF_IMFXC type ZVCXI_XCSP_IMFXC,
          LF_NEXTL type ZVCXI_XCSP_NEXTL,
          LF_MFICF type  ZVCXI_XCSP_MFICF,
          LF_MFICP type  ZVCXI_XCSP_MFICP.
    data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFSI_L type ref to /VCXI/CL_VKSR_SPVRE.


    check ME->T_IMFXC_IN is not initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_L'
                                        IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

    loop at ME->T_IMFXC_IN into LF_IMFXC.
      move SY-TABIX to LF_TABIX.

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MFSI_L
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MFSI_L to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MFSI_L->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***   Set MF X-Connect
      LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_IMFXC
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set "Next Low-Level Code" Flag
      LF_NEXTL = value #( ME->T_NEXTL[ LF_TABIX ] default ABAP_TRUE ).
      LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_NEXTL
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Consumption Factor for Material Flow In
      ME->GET_MFICF_BY_IMFXC( exporting IF_IMFXC = LF_IMFXC
                              importing EF_MFICF = LF_MFICF
                                        EF_MFICP = LF_MFICP ).
      LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_MFICF
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LF_MFICF
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
      LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_MFICP
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LF_MFICP
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endloop.

  endmethod.
 method COMPARE.

   data:  LR_BL_PSTEP_CORR type ref to ZCL_VCXI_P1SR_BL_PSTEP_CORR.

*** Super Compare
   RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
   check RF_SIMILAR eq ABAP_TRUE.

   move IR_BL_PSTEP ?to LR_BL_PSTEP_CORR.

***--------------------------------------------------------------------------------------
*** PC Dimensions
   if ME->S_PCDIM_OUT eq LR_BL_PSTEP_CORR->S_PCDIM_OUT.
     move ABAP_TRUE  to RF_SIMILAR.
   else.
     move ABAP_FALSE to RF_SIMILAR.
     exit.
   endif.

***--------------------------------------------------------------------------------------
*** Board ID, Flute and Corrugation Width/Length
   if ME->F_BOARD eq LR_BL_PSTEP_CORR->F_BOARD and
      ME->F_FLUTE eq LR_BL_PSTEP_CORR->F_FLUTE and
      ME->S_COWID eq LR_BL_PSTEP_CORR->S_COWID and
      ME->S_COLEN eq LR_BL_PSTEP_CORR->S_COLEN and
      ME->R_ARBPL eq LR_BL_PSTEP_CORR->R_ARBPL.
     move ABAP_TRUE  to RF_SIMILAR.
   else.
     move ABAP_FALSE to RF_SIMILAR.
     exit.
   endif.

***--------------------------------------------------------------------------------------
*** Paper, Preprint Liner and Starch
   if ME->T_MS_PAPER  eq LR_BL_PSTEP_CORR->T_MS_PAPER  and
      ME->T_PRPLIN    eq LR_BL_PSTEP_CORR->T_PRPLIN    and
      ME->S_MS_STARCH eq LR_BL_PSTEP_CORR->S_MS_STARCH.
     move ABAP_TRUE  to RF_SIMILAR.
   else.
     move ABAP_FALSE to RF_SIMILAR.
     exit.
   endif.

***--------------------------------------------------------------------------------------
*** Scores
   if ME->T_SCORE eq LR_BL_PSTEP_CORR->T_SCORE.
     move ABAP_TRUE  to RF_SIMILAR.
   else.
     move ABAP_FALSE to RF_SIMILAR.
     exit.
   endif.

 endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_L to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_CORR type ref to ZCL_VCXI_P1SR_BL_PSTEP_CORR.

*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_CORR.

***--------------------------------------------------------------------------------------
*** PC Dimensions
    move ME->S_PCDIM_OUT   to LR_BL_PSTEP_CORR->S_PCDIM_OUT.

***--------------------------------------------------------------------------------------
*** Board ID, Flute and Corrugation Width/Length
    move ME->F_BOARD       to LR_BL_PSTEP_CORR->F_BOARD.
    move ME->F_FLUTE       to LR_BL_PSTEP_CORR->F_FLUTE.
    move ME->S_COWID       to LR_BL_PSTEP_CORR->S_COWID.
    move ME->S_COLEN       to LR_BL_PSTEP_CORR->S_COLEN.
    move ME->R_ARBPL       to LR_BL_PSTEP_CORR->R_ARBPL.

***--------------------------------------------------------------------------------------
*** Paper, Preprint Liner and Starch
    move ME->T_MS_PAPER    to LR_BL_PSTEP_CORR->T_MS_PAPER.
    move ME->T_PRPLIN      to LR_BL_PSTEP_CORR->T_PRPLIN.
    move ME->S_MS_STARCH   to LR_BL_PSTEP_CORR->S_MS_STARCH.

***--------------------------------------------------------------------------------------
*** Scores
    move ME->T_SCORE       to LR_BL_PSTEP_CORR->T_SCORE.

  endmethod.
  method DESERIALIZE.

    data: LF_GUID_ARBPL type /VCXI/CKX_GUID.


    check IF_XML is not initial.

*** Deserialize
    call transformation ID
         source xml IF_XML
         result F_GUID_ARBPL = LF_GUID_ARBPL.

    if LF_GUID_ARBPL is not initial.
      ME->R_ARBPL ?= /VCXI/CL_VSMC_ARBPL=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID_ARBPL ).
    endif.

*** Super Deserialize
    SUPER->DESERIALIZE( IF_XML = IF_XML ).

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'PC_AT_CORR'.
        ME->FILL_SPVRE_ADDON_CORR( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
method FILL_SPVRE_ADDON_CORR.

  data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Ups
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_PCUPS  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCUPS                       to LS_PARAM-ATFLV.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Direction
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_PCDIR  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCDIR                       to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Set Board ID
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_BOARD
                                                 PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                 ATWRT = ME->F_BOARD
                                                 SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Flute
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_FLUTE
                                                 PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                 ATWRT = ME->F_FLUTE
                                                 SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Corrugation Width
  if ME->S_COWID-COWID is not initial.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_COWID
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_COWID-COWID
                                                   UNIT  = ME->S_COWID-COWID_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
  endif.

*** Set Corrugation Length
  if ME->S_COLEN-COLEN is not initial.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_COLEN
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_COLEN-COLEN
                                                   UNIT  = ME->S_COLEN-COLEN_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
  endif.

***--------------------------------------------------------------------------------------
*** Add Material Consumption for Starch
  ME->ADD_SPVRE_MC_STARCH( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = IR_SPVRE_ADDON
                           changing  CT_SPVRE        = CT_SPVRE ).

endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Standard (Overrule existing)
    CF_ID_ARBPL = cond #( when ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE then 'OUTSO_LTP'
                                                                               else 'CORR' ).

  endmethod.
  method GET_IMFXC.

    RT_IMFXC_IN = value #( for LS_PRPLIN in ME->T_PRPLIN ( LS_PRPLIN-IMFXC ) ).

  endmethod.
  method GET_IQCFT.

*** Super Features
    RT_FEATURE = SUPER->GET_IQCFT( IF_IATYP = IF_IATYP ).


*    /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'name'     FTVAL = LF_VALUE )
*                                      changing  CT_FEATURE = RT_FEATURE ).

  endmethod.
  method GET_MFICF_BY_IMFXC.

    SUPER->GET_MFICF_BY_IMFXC( exporting IF_IMFXC = IF_IMFXC
                               importing EF_MFICF = EF_MFICF
                                         EF_MFICP = EF_MFICP ).

*** Paper Factor of Preprint Liner
    data(LS_PRPLIN) = value #( ME->T_PRPLIN[ IMFXC = IF_IMFXC ] optional ).
    if LS_PRPLIN-IMFXC is not initial.
      EF_MFICF = LS_PRPLIN-MFICF.
      EF_MFICP = LS_PRPLIN-MFICP.
    endif.

  endmethod.
  method GET_SPVRE_ACTVY.

    data:  LS_PARAM        type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_CORR'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_PCTYP
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->S_PCDIM_OUT-PCTYP
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Length
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_PCLEN
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCLEN
                                                   UNIT  = ME->S_PCDIM_OUT-PCLEN_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Width
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_PCWID
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCWID
                                                   UNIT  = ME->S_PCDIM_OUT-PCWID_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Height
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_PCHEI
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCHEI
                                                   UNIT  = ME->S_PCDIM_OUT-PCHEI_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Number of Ups
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_PCUPS
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCUPS
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set PC Direction
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_PCDIR
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->S_PCDIM_OUT-PCDIR
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***--------------------------------------------------------------------------------------
*** Set Board ID
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_BOARD
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->F_BOARD
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Flute
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_FLUTE
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->F_FLUTE
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Corrugation Width
    if ME->S_COWID-COWID is not initial.
      LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ACTVY_CORR=>C_PARID_COWID
                                                     PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                     ATFLV = ME->S_COWID-COWID
                                                     UNIT  = ME->S_COWID-COWID_UOM
                                                     SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endif.

*** Set Corrugation Length
    if ME->S_COLEN-COLEN is not initial.
      LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PCSP_PR_ADDON_CORR=>C_PARID_COLEN
                                                     PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                     ATFLV = ME->S_COLEN-COLEN
                                                     UNIT  = ME->S_COLEN-COLEN_UOM
                                                     SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endif.

***--------------------------------------------------------------------------------------
*** Add Material Consumption for Starch
    ME->ADD_SPVRE_MC_STARCH( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                       IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                             changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_SPVRE_MF.

***--------------------------------------------------------------------------------------
*** Add Paper
    ME->ADD_SPVRE_MFMI_PAPER( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                        IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                              changing  CT_SPVRE       = CT_SPVRE ).

*** Add SFG Preprint as MFSI
    ME->ADD_SPVRE_MFSI_L( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                    IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                          changing  CT_SPVRE       = CT_SPVRE ).
    move ABAP_TRUE to CF_MFI.

***--------------------------------------------------------------------------------------
*** Add MFSO PC
    if CF_MFO ne ABAP_TRUE.
      ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).
      move ABAP_TRUE to CF_MFO.
    endif.

  endmethod.
  method GET_XML_DREF.

    data:  LR_DATA type ref to DATA.
    field-symbols: <F_GUID_ARBPL> type ANY.


*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_PCDIM_OUT'  VALUE = ref #( ME->S_PCDIM_OUT ) ) to RT_DATA.
    append value #( NAME = 'F_BOARD'      VALUE = ref #( ME->F_BOARD     ) ) to RT_DATA.
    append value #( NAME = 'F_FLUTE'      VALUE = ref #( ME->F_FLUTE     ) ) to RT_DATA.
    append value #( NAME = 'S_COWID'      VALUE = ref #( ME->S_COWID     ) ) to RT_DATA.
    append value #( NAME = 'S_COLEN'      VALUE = ref #( ME->S_COLEN     ) ) to RT_DATA.
    append value #( NAME = 'T_MS_PAPER'   VALUE = ref #( ME->T_MS_PAPER  ) ) to RT_DATA.
    append value #( NAME = 'T_PRPLIN'     VALUE = ref #( ME->T_PRPLIN    ) ) to RT_DATA.
    append value #( NAME = 'S_MS_STARCH'  VALUE = ref #( ME->S_MS_STARCH ) ) to RT_DATA.
    append value #( NAME = 'T_SCORE'      VALUE = ref #( ME->T_SCORE     ) ) to RT_DATA.

*** Work Center GUID if bound
    if ME->R_ARBPL is bound.
      create data LR_DATA type /VCXI/CKX_GUID.
      assign LR_DATA->* to <F_GUID_ARBPL>.
      <F_GUID_ARBPL> = ME->R_ARBPL->/VCXI/IF_CKX_OBJECT~GET_GUID( ).
      append value #( NAME = 'F_GUID_ARBPL'  VALUE = LR_DATA ) to RT_DATA.
    endif.

  endmethod.
  method INIT_BY_PRPLIN.

    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PRPLIN     type ref to ZCL_VCXI_P1SS_PR_PRPLIN,
          LR_PR_MS_XPROC   type ref to ZCL_VCXI_PXSS_PR_MS_XPROC,
          LR_GATE_MS_XPROC type ref to /VCXI/CL_VKSR_GATE.


*** Loop at defined Preprint Liner
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_PRPLIN.
      LR_PR_PRPLIN ?= LR_GATE->R_CLSPR.

***   Board Paper ID
      data(LF_BPAID) = LR_PR_PRPLIN->GET_BPAID( ).
      check LINE_EXISTS( ME->T_MS_PAPER[ BPAID = LF_BPAID ] ).    "only continue if included in Board

***   Get Procurement
      LR_PR_MS_XPROC = LR_PR_PRPLIN->GET_PRVDR_MS_XPROC( importing ER_GATE = LR_GATE_MS_XPROC ).
      if LR_PR_MS_XPROC is bound.
***     Update standard Board Paper with Preprint Liner
        assign ME->T_MS_PAPER[ BPAID = LR_PR_PRPLIN->GET_BPAID( ) ] to field-symbol(<S_MS_PAPER>).
        <S_MS_PAPER>-MATNR    = LR_PR_MS_XPROC->GET_MATNR( ).
        <S_MS_PAPER>-S_BAWGT  = LR_PR_PRPLIN->GET_BAWGT( IS_BAWGP = <S_MS_PAPER>-S_BAWGP ).
        <S_MS_PAPER>-S_PAWID  = corresponding #( LR_PR_PRPLIN->GET_WEBWI( ) mapping PAWID     = WEBWI
                                                                                    PAWID_UOM = WEBWI_UOM ).
        <S_MS_PAPER>-PURCH    = LR_PR_MS_XPROC->GET_PURCH( ).
        <S_MS_PAPER>-LIFNR    = LR_PR_MS_XPROC->GET_LIFNR( ).
        <S_MS_PAPER>-S_PRICE  = LR_PR_MS_XPROC->GET_PRICE( ).
        <S_MS_PAPER>-S_PRICP  = LR_PR_MS_XPROC->GET_PRICP( ).
        <S_MS_PAPER>-T_PSCALE = ME->GET_PSCALE( IR_GATE_PARENT = LR_GATE_MS_XPROC ).

      else.
***     Add Connection
        append value #( IMFXC = LR_PR_PRPLIN->GET_GXCON( )
                        MFICF = ME->T_MS_PAPER[ BPAID = LF_BPAID ]-BPFAC  " Paper Factor
                        MFICP = 1
                      ) to ME->T_PRPLIN.

***     Preprint Liner Connection substitutes normal Board Paper
        delete ME->T_MS_PAPER where BPAID = LR_PR_PRPLIN->GET_BPAID( ).

      endif.

    endloop.

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


*** Get Outbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_OUT = value #( LT_PCDIM[ 1 ] optional ).

    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Get Work Center, PC Dimensions, Scores
    ME->INIT_BY_SPEC_CORR( IT_PRVDR = IT_PRVDR ).

*** Get Board, Flute, Corrugation Width
    ME->INIT_BY_SPEC_BOARD( IT_PRVDR = IT_PRVDR ).

*** Starch
    ME->INIT_BY_SPEC_STARCH( IT_PRVDR = IT_PRVDR ).

*** Paper
    ME->INIT_BY_SPEC_PAPER( IT_PRVDR = IT_PRVDR ).

*** Preprint Liner
    ME->INIT_BY_PRPLIN( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method INIT_BY_SPEC_BOARD.

    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BOARD type ref to ZCL_VCXI_P1SS_PR_BOARD.

***--------------------------------------------------------------------------------------
*** Get Board Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
          exit.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.
    check LR_PR_BOARD is bound.

***--------------------------------------------------------------------------------------
*** Get Board and FLute
    move LR_PR_BOARD->GET_BOARD( ) to ME->F_BOARD.
    move LR_PR_BOARD->GET_FLUTE( ) to ME->F_FLUTE.

***--------------------------------------------------------------------------------------
*** Get Corrugation Width
    ME->S_COWID = LR_PR_BOARD->GET_COWID( ).

  endmethod.
  method INIT_BY_SPEC_CORR.

    data: LF_LAST_C type ZVCXI_P0SS_ISCOR,
          LF_LAST_L type ZVCXI_P0SS_ISCOR.
    data: LS_SCORE_AP type ZVCXI_PXSS_S_SCORE_AP.
    data: LT_SCORE_AP type ZVCXI_PXSS_TT_SCORE_AP.
    data: LR_GATE    type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_SCORE>   type ZVCXI_PXSR_S_SCORE.


***--------------------------------------------------------------------------------------
*** Get Corrugation Reference
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_CORR.
      ER_PR_CORR ?= LR_GATE->R_CLSPR.
      exit.
    endloop.

    check ER_PR_CORR  is bound.

***--------------------------------------------------------------------------------------
*** Get Work Center
    ER_PR_CORR->GET_ARBPL( importing ER_ARBPL = ME->R_ARBPL ).

***--------------------------------------------------------------------------------------
*** Get applied Scores
    ER_PR_CORR->ZIF_VCXI_PXSS_SCORES_AP~GET_SCORE_AP( importing ET_SCORE_AP = LT_SCORE_AP ).

*** Get Edge Scores
    ZCL_VCXI_PXSS_BL_SCORE=>GET_EDGE_SCORES( exporting IT_SCORE_COM  = conv #( LT_SCORE_AP )
                                             importing EF_ISCOR_C =  LF_LAST_C
                                                       EF_ISCOR_L =  LF_LAST_L ).

    loop at LT_SCORE_AP into LS_SCORE_AP
                       where FAPPL eq ABAP_TRUE.
***   Ignore Edge Scores
      check LS_SCORE_AP-ISCOR ne LF_LAST_C and
            LS_SCORE_AP-ISCOR ne LF_LAST_L.

      append initial line to ME->T_SCORE assigning <S_SCORE>.
      move-corresponding LS_SCORE_AP to <S_SCORE>.
      move LS_SCORE_AP-ISCOR+0(1)    to <S_SCORE>-CSCOR.
      move LS_SCORE_AP-ISCOR+1(1)    to <S_SCORE>-NSCOR.
    endloop.

***--------------------------------------------------------------------------------------
*** Get Corrugation Length
    ME->S_COLEN = ER_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->S_COLEN.

  endmethod.
  method INIT_BY_SPEC_PAPER.

    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_PAPER type ref to ZCL_VCXI_P1SS_PR_MS_PAPER.


    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_MS_PAPER.
      LR_PR_MS_PAPER ?= LR_GATE->R_CLSPR.

      append value #( ISVCE   = LR_GATE->GET_ATTRI( IF_ATTID = C_ATTID_ISVCE )-ATTVA
                      MATNR   = LR_PR_MS_PAPER->GET_MATNR( )
                      BPAID   = LR_PR_MS_PAPER->GET_BPAID( )
                      S_BAWGT = LR_PR_MS_PAPER->GET_BAWGT( )
                      S_BAWGP = LR_PR_MS_PAPER->GET_BAWGP( )
                      BPFAC   = LR_PR_MS_PAPER->GET_BPFAC( )
*                      S_PAWID = cond #( when ME->S_COWID is not initial then LR_PR_MS_PAPER->GET_PAWID( ) )
                      S_PAWID = value #( PAWID     = ME->S_COWID-COWID
                                         PAWID_UOM = ME->S_COWID-COWID_UOM )
                      PURCH   = LR_PR_MS_PAPER->GET_PURCH( )
                      LIFNR   = LR_PR_MS_PAPER->GET_LIFNR( )
                      S_PRICE = LR_PR_MS_PAPER->GET_PRICE( )
                      S_PRICP = LR_PR_MS_PAPER->GET_PRICP( )
                    ) to ME->T_MS_PAPER.
    endloop.

  endmethod.
method INIT_BY_SPEC_STARCH.

  data: LS_AVGCO type        ZVCXI_XCS_S_AVGCO,
        LS_AVGCP type        ZVCXI_XCS_S_AVGCP.
  data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE,
        LR_PR_MS_STARCH type ref to ZCL_VCXI_P1SS_PR_MS_STARCH.


***------------------------------------------------------------------------------------------------
*** Get Starch Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_STARCH.
        if LR_PR_MS_STARCH is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_MS_STARCH is bound.

***------------------------------------------------------------------------------------------------
*** Get Starch Info
  move LR_PR_MS_STARCH->GET_MATNR( ) to ME->S_MS_STARCH-MATNR.

  move LR_PR_MS_STARCH->GET_AVGCO( ) to LS_AVGCO.
  move-corresponding LS_AVGCO to ME->S_MS_STARCH.
  move LR_PR_MS_STARCH->GET_AVGCP( ) to LS_AVGCP.
  move-corresponding LS_AVGCP to ME->S_MS_STARCH.

  move LR_PR_MS_STARCH->GET_STARF( ) to ME->S_MS_STARCH-STARF.

*** Purchasing Info
  move LR_PR_MS_STARCH->GET_PURCH( ) to ME->S_MS_STARCH-PURCH.
  move LR_PR_MS_STARCH->GET_LIFNR( ) to ME->S_MS_STARCH-LIFNR.
  move LR_PR_MS_STARCH->GET_PRICE( ) to ME->S_MS_STARCH-S_PRICE.
  move LR_PR_MS_STARCH->GET_PRICP( ) to ME->S_MS_STARCH-S_PRICP.

endmethod.
  method REPLACE_MFSI_BY_MFMI.

    field-symbols: <T_MFMI> type standard table,
                   <S_MFMI> type ANY.


    check IR_MFMI is bound and
          LINE_EXISTS( ME->T_PRPLIN[ IMFXC = IF_IMFXC ] ).
    assign IR_MFMI->* to <T_MFMI>.

    loop at <T_MFMI> assigning <S_MFMI>.
      append corresponding #( <S_MFMI> ) to ME->T_MS_PAPER.
    endloop.
    delete ME->T_PRPLIN where IMFXC eq IF_IMFXC.

  endmethod.
  method ZIF_VCXI_P1SR_ADJ_FLUTE~ADJ_FLUTE.

    move ME->F_FLUTE to CF_FLUTE.

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.

    return.

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    refresh: CT_PCDIM.
    append ME->S_PCDIM_OUT to CT_PCDIM.

  endmethod.
  method ZIF_VCXI_PXSR_CONV_ATP~CONV_PC_TO_AREA.

    data: LF_NOUPW type F.
    data: LS_COLEN type ZVCXI_PCS_S_COLEN,
          LS_PCARE type ZVCXI_P0SP_S_PCARE.
    field-symbols: <S_AREADIM>  type ZVCXI_P0SP_S_AREADIM.


*** Use PC Length as Corrugation Length
    LS_COLEN = ME->S_COLEN.
    if LS_COLEN-COLEN is initial.
      LS_COLEN = value #( COLEN     = ME->S_PCDIM_OUT-PCLEN
                          COLEN_UOM = ME->S_PCDIM_OUT-PCLEN_UOM ).
    endif.

***--------------------------------------------------------------------------------------
    if ME->S_COWID-COWID is initial.
***   Calculate Single Sheet Area
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_COLEN-COLEN
                                                          IF_CALCV_UOM_1 = LS_COLEN-COLEN_UOM
                                                          IF_CALCV_2     = ME->S_PCDIM_OUT-PCWID
                                                          IF_CALCV_UOM_2 = ME->S_PCDIM_OUT-PCWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = LS_PCARE-PCARE
                                                          EF_CALCV_UOM   = LS_PCARE-PCARE_UOM ).

      append initial line to RT_AREADIM assigning <S_AREADIM>.
      move-corresponding LS_PCARE              to <S_AREADIM>.
      move               ME->S_PCDIM_OUT-PCUPS to <S_AREADIM>-PCUPS.


***--------------------------------------------------------------------------------------
    else.
      check ME->S_PCDIM_OUT-PCWID is not initial.

***   Check how many times the Sheet fits in the Corrugation Width
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = ME->S_COWID-COWID
                                                          IF_CALCV_UOM_1 = ME->S_COWID-COWID_UOM
                                                          IF_CALCV_2     = ME->S_PCDIM_OUT-PCWID
                                                          IF_CALCV_UOM_2 = ME->S_PCDIM_OUT-PCWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LF_NOUPW ).

***   Calculate Corrugation Area (Multi-Sheet + Siderun)
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_COLEN-COLEN
                                                          IF_CALCV_UOM_1 = LS_COLEN-COLEN_UOM
                                                          IF_CALCV_2     = ME->S_COWID-COWID
                                                          IF_CALCV_UOM_2 = ME->S_COWID-COWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = LS_PCARE-PCARE
                                                          EF_CALCV_UOM   = LS_PCARE-PCARE_UOM ).

      append initial line to RT_AREADIM assigning <S_AREADIM>.
      move-corresponding LS_PCARE to <S_AREADIM>.
      <S_AREADIM>-PCUPS = ME->S_PCDIM_OUT-PCUPS * FLOOR( LF_NOUPW ).

    endif.

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.
  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
