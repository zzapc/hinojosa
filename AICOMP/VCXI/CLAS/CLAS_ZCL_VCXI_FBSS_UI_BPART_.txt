
class ZCL_VCXI_FBSS_UI_BPART definition
  public
  inheriting from ZCL_VCXI_F0S_UI_TAB
  create public .

public section.

  data S_BPART_VIS type ZVCXI_FBSS_S_BPART_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_F0S_TABPT default '0100S_BP_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_BPART_VIS
    importing
      !IS_BPART_VIS type ZVCXI_FBSS_S_BPART_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
protected section.

  data R_PR_BPART type ref to ZCL_VCXI_FBSS_PR_BPART .
  data R_TOOLBAR type ref to ZCL_VCXI_F0S_TOOLBAR_PRVDR .
  data F_OPDIR_DISABLE type ABAP_BOOL .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSS_UI_BPART definition
class ZCL_VCXI_FBSS_UI_BPART implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FBSS_UI_BPART_BIND'
      exporting
        IR_UI_BPART   = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.


*** Create Toolbar for Provider
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_BP_TOOLBAR'.

***--------------------------------------------------------------------------------------
*** Set Overwrite Part Direction
    if LINES( ME->R_PR_BPART->GET_ALLOWED_BPDIR( ) ) le 1.
***   If only one direction is filled than disable the Bag Part Direction
      move ABAP_TRUE to ME->F_OPDIR_DISABLE.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_BPART.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

*** Free Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Changeable if Override Flag is set.
          case SCREEN-GROUP1.
            when 'OPW'.
              if ME->S_BPART_VIS-FOVRR_BPWID eq ABAP_FALSE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'OPL'.
              if ME->S_BPART_VIS-FOVRR_BPLEN eq ABAP_FALSE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'OPD'.
***           If Overwrite Part Direction filled than screen field Read-Only
              if ME->F_OPDIR_DISABLE eq ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.
***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    data: LT_PRVDR_SELECTED type /VCXI/VKSR_TT_GATE.

    SUPER->DO_PBO( ).

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar and provide active tab as Selected Provider (for inserting/deletion)
    append ME->R_OLD_GATE to LT_PRVDR_SELECTED.
    ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = LT_PRVDR_SELECTED ).

  endmethod.
  method DO_UPDATE_BPART_VIS.

    check ME->R_PR_BPART is bound.

***--------------------------------------------------------------------------------------
*** Set Bag Part Direction
    if ME->S_BPART_VIS-BPDIR ne IS_BPART_VIS-BPDIR.
      ME->R_PR_BPART->SET_BPDIR( IF_BPDIR = IS_BPART_VIS-BPDIR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Bag Part Width if it is "Overriden"
    if ME->S_BPART_VIS-FOVRR_BPWID eq ABAP_TRUE.
      if ME->S_BPART_VIS-S_BPWID ne IS_BPART_VIS-S_BPWID.
        ME->R_PR_BPART->SET_BPWID( IS_BPWID = IS_BPART_VIS-S_BPWID
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Part Width
    if ME->S_BPART_VIS-FOVRR_BPWID ne IS_BPART_VIS-FOVRR_BPWID.
      ME->R_PR_BPART->SET_FOVRR_BPWID( IF_FOVRR = IS_BPART_VIS-FOVRR_BPWID ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Bag Part Length if it is "Overriden"
    if ME->S_BPART_VIS-FOVRR_BPLEN eq ABAP_TRUE.
      if ME->S_BPART_VIS-S_BPLEN ne IS_BPART_VIS-S_BPLEN.
        ME->R_PR_BPART->SET_BPLEN( IS_BPLEN = IS_BPART_VIS-S_BPLEN
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Part Length
    if ME->S_BPART_VIS-FOVRR_BPLEN ne IS_BPART_VIS-FOVRR_BPLEN.
      ME->R_PR_BPART->SET_FOVRR_BPLEN( IF_FOVRR = IS_BPART_VIS-FOVRR_BPLEN ).
    endif.

*** Set Part Cutout
    if ME->S_BPART_VIS-S_COARE ne IS_BPART_VIS-S_COARE.
      ME->R_PR_BPART->SET_COARE( IS_COARE = IS_BPART_VIS-S_COARE
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_BPART.

  endmethod.
  method INIT_VIS.

    free: ME->S_BPART_VIS.
    check ME->R_PR_BPART is bound.

***--------------------------------------------------------------------------------------
*** Bag Part Direction
    ME->R_PR_BPART->GET_BPDIR( importing EF_BPDIR = ME->S_BPART_VIS-BPDIR ).

*** Bag Part Width
    ME->R_PR_BPART->GET_BPWID( importing ES_BPWID = ME->S_BPART_VIS-S_BPWID ).
    move ME->R_PR_BPART->GET_FOVRR_BPWID( ) to ME->S_BPART_VIS-FOVRR_BPWID.

*** Bag Part Length
    ME->R_PR_BPART->GET_BPLEN( importing ES_BPLEN = ME->S_BPART_VIS-S_BPLEN ).
    move ME->R_PR_BPART->GET_FOVRR_BPLEN( ) to ME->S_BPART_VIS-FOVRR_BPLEN.

*** Bag Part Area
    ME->R_PR_BPART->GET_BPARE( importing ES_BPARE = ME->S_BPART_VIS-S_BPARE ).
    move ME->S_BPART_VIS-BPARE_UOM to ME->S_BPART_VIS-BPARE_UOMC6.

*** Bag Part Weight
    ME->R_PR_BPART->GET_BPWGT( importing ES_BPWGT = ME->S_BPART_VIS-S_BPWGT ).

*** Bag Part Cutout
    ME->R_PR_BPART->GET_COARE( importing ES_COARE = ME->S_BPART_VIS-S_COARE ).
    move ME->S_BPART_VIS-COARE_UOM to ME->S_BPART_VIS-COARE_UOMC6.


  endmethod.
