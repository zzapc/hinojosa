
class ZCL_VCXI_XCUR_SMDCNTRL definition
  public
  create public .

public section.

  data F_FSIDA type ZVCXI_XCI_FSIDA read-only .

  events CHANGED .

  class-methods DESERIALIZE
    importing
      !IF_XML type /VCXI/CKX_STRING
    returning
      value(RR_SMDCNTRL) type ref to ZCL_VCXI_XCUR_SMDCNTRL
    raising
      /VCXI/CX_CKX .
  methods SERIALIZE
    returning
      value(RF_XML) type /VCXI/CKX_STRING
    raising
      /VCXI/CX_CKX .
  methods SET_FSIDA
    importing
      !IF_FSIDA type ZVCXI_XCI_FSIDA
    raising
      /VCXI/CX_CKX .
protected section.

  methods GET_XML_DREF
    returning
      value(RT_DATA) type ABAP_TRANS_SRCBIND_TAB
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCUR_SMDCNTRL definition
class ZCL_VCXI_XCUR_SMDCNTRL implementation.
  method DESERIALIZE.

    data: LF_CLSNA    type STRING,
          LF_INFO_XML type /VCXI/CKMR_XMLDC.
    data: LT_DATA type ABAP_TRANS_SRCBIND_TAB.


    check IF_XML is not initial.

***------------------------------------------------------------------------------------------------
*** Open XML to get Class Name
    call transformation ID
         source xml IF_XML
         result CLSNA_SMDCNTRL = LF_CLSNA.
    check LF_CLSNA is not initial.

***------------------------------------------------------------------------------------------------
    try.
***     Create Instance of SmartMD Control Settings
        create object RR_SMDCNTRL
          type
            (LF_CLSNA).

***   Catch Creation Errors
      catch CX_SY_CREATE_OBJECT_ERROR into data(LR_CX_SY_CREATE_OBJECT_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_CREATE_OBJECT_ERROR ).
    endtry.

***------------------------------------------------------------------------------------------------
*** Get Data References for XML Serialize/Deserialize
    LT_DATA = RR_SMDCNTRL->GET_XML_DREF( ).

*** Open XML
    call transformation ID
         source xml IF_XML
         result (LT_DATA).

  endmethod.
  method GET_XML_DREF.

    RT_DATA = value #( ( NAME = 'F_FSIDA' VALUE = ref #( ME->F_FSIDA ) )
                      ).

  endmethod.
  method SERIALIZE.

    data: LF_CLSNA type        STRING.
    data: LT_DATA type ABAP_TRANS_SRCBIND_TAB.
    data: LR_CLASSDESCR type ref to CL_ABAP_CLASSDESCR.

***------------------------------------------------------------------------------------------------
*** Get Data References for XML Serialize/Deserialize
    LT_DATA = ME->GET_XML_DREF( ).

*** Add Class Name for Deserialization to XML
    LR_CLASSDESCR ?= CL_ABAP_CLASSDESCR=>DESCRIBE_BY_OBJECT_REF( P_OBJECT_REF = ME ).
    LF_CLSNA = LR_CLASSDESCR->GET_RELATIVE_NAME( ).
    append value #( NAME = 'CLSNA_SMDCNTRL' VALUE = ref #( LF_CLSNA ) ) to LT_DATA.

***------------------------------------------------------------------------------------------------
*** Create XML
    call transformation ID
         source (LT_DATA)
         result xml RF_XML.

  endmethod.
  method SET_FSIDA.

    check ME->F_FSIDA ne IF_FSIDA.

    ME->F_FSIDA = IF_FSIDA.
    raise event CHANGED.

  endmethod.
