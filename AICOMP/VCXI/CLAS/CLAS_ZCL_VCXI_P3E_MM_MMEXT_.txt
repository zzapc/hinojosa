
class ZCL_VCXI_P3E_MM_MMEXT definition
  public
  inheriting from ZCL_VCXI_PXE_MM_MMEXT
  create public .

public section.

  data S_MMEXT type ZVCXI_P3E_MM_S_MMEXT read-only .
  constants C_CNTXT_P3 type ZVCXI_XCE_MM_CNTXT value 'P3' ##NO_TEXT.
  data T_APINFO type ZVCXI_P3SS_TT_APINFO read-only .

  methods SET_MMEXT
    importing
      !IS_MMEXT type ZVCXI_P3E_MM_S_MMEXT
    raising
      /VCXI/CX_CKX .

  methods SAVE
    redefinition .
  methods SET_EXTVAL
    redefinition .
  methods UPDATE_BY_FG
    redefinition .
  methods COPY
    redefinition .
protected section.

  methods LOAD_FROM_DB
    redefinition .
private section.
endclass. "ZCL_VCXI_P3E_MM_MMEXT definition
class ZCL_VCXI_P3E_MM_MMEXT implementation.
  method COPY.

    RR_MMEXT = SUPER->COPY( IF_MATNR = IF_MATNR
                            IF_WERKS = IF_WERKS ).

    check RR_MMEXT is bound.

*** Copy Values
    cast ZCL_VCXI_P3E_MM_MMEXT( RR_MMEXT )->S_MMEXT  = ME->S_MMEXT.
    cast ZCL_VCXI_P3E_MM_MMEXT( RR_MMEXT )->T_APINFO = ME->T_APINFO.

  endmethod.
  method LOAD_FROM_DB.

    data: LS_TD100 type ZVCXI_P3E_TD100.


***----------------------------------------------------------------------------
*** Load from SUPER
    SUPER->LOAD_FROM_DB( ).

***----------------------------------------------------------------------------
*** Load Material Master Extension
    select single *
           into LS_TD100
           from ZVCXI_P3E_TD100
          where MATNR eq ME->F_MATNR
           and  WERKS eq ME->F_WERKS.
    if SY-SUBRC eq 0.
***   Load current values
      ME->S_MMEXT = LS_TD100-S_MMEXT.
    endif.

*** Load Assembly Part Information
    select *
           into corresponding fields of table ME->T_APINFO
           from ZVCXI_P3E_TD110
          where MATNR eq ME->F_MATNR
           and  WERKS eq ME->F_WERKS
          order by APICT.

  endmethod.
  method SAVE.

    data: LS_TD100 type ZVCXI_P3E_TD100.
    data: LT_TD110 type table of ZVCXI_P3E_TD110.


*** Save SUPER
    SUPER->SAVE( ).

***----------------------------------------------------------------------------
*** Save Material Master Extension (Header)
    LS_TD100 = value #( MATNR   = ME->F_MATNR
                        WERKS   = ME->F_WERKS
                        S_MMEXT = ME->S_MMEXT ).
    modify ZVCXI_P3E_TD100 from LS_TD100.

*** Assembly Part Information
    LT_TD110 = value #( for LS_APINFO in ME->T_APINFO index into LF_APICT
                                                      ( MATNR    = ME->F_MATNR
                                                        WERKS    = ME->F_WERKS
                                                        APICT    = LF_APICT
                                                        S_APINFO = LS_APINFO ) ).
    delete from ZVCXI_P3E_TD110 where MATNR eq ME->F_MATNR
                                 and  WERKS eq ME->F_WERKS.
    modify ZVCXI_P3E_TD110 from table LT_TD110.

  endmethod.
  method SET_EXTVAL.

    data: LS_EXTVAL type ZVCXI_P3E_MM_S_EXTVAL.


    SUPER->SET_EXTVAL( IS_EXTVAL = IS_EXTVAL ).

***----------------------------------------------------------------------------
*** "Cast" Extension Values
    LS_EXTVAL = corresponding #( IS_EXTVAL ).

*** Extension Header
    ME->SET_MMEXT( IS_MMEXT = LS_EXTVAL-S_MMEXT ).

*** Assembly Part Information
    if ME->T_APINFO ne LS_EXTVAL-T_APINFO.
      ME->T_APINFO = LS_EXTVAL-T_APINFO.
      raise event /VCXI/IF_CKX_OBJECT~CHANGED.
    endif.

  endmethod.
  method SET_MMEXT.

    check ME->S_MMEXT ne IS_MMEXT.
    ME->S_MMEXT = IS_MMEXT.
    raise event /VCXI/IF_CKX_OBJECT~CHANGED.

  endmethod.
  method UPDATE_BY_FG.

    data: LR_EA_AFG     type ref to ZCL_VCXI_P3SS_EA_AFG,
          LR_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP.


***----------------------------------------------------------------------------
*** Get Element API Reference
    try.
        LR_EA_AFG ?= IR_SVCEL->GET_CLSEA( ).
      catch CX_SY_MOVE_CAST_ERROR into data(LR_CX_SY_MOVE_CAST_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_MOVE_CAST_ERROR ).
    endtry.
    check LR_EA_AFG is bound.

*** Get Assembly Forward Property XML (Outbound)
    LR_BL_ASFPROP = LR_EA_AFG->GET_ASFPX( ).

***----------------------------------------------------------------------------
*** Set Extension Values
    ME->SET_EXTVAL( IS_EXTVAL = value ZVCXI_P3E_MM_S_EXTVAL( S_HNDDIM = LR_BL_ASFPROP->S_HNDDIM
                                                             S_ADDWT  = LR_BL_ASFPROP->S_ADDWT
                                                             T_JOITY  = LR_BL_ASFPROP->T_JOITY
                                                             T_APINFO = LR_BL_ASFPROP->T_APINFO ) ).
  endmethod.
