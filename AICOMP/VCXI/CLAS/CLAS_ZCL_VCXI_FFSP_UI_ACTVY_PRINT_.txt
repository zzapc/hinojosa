
class ZCL_VCXI_FFSP_UI_ACTVY_PRINT definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_CURSOR type SCRFNAME read-only .
  data S_ACTVY_PRINT_VIS type ZVCXI_FFSP_S_ACTVY_PRINT_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_ACTVY_PRINT_VIS
    importing
      !IS_ACTVY_PRINT_VIS type ZVCXI_FFSP_S_ACTVY_PRINT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_MC_INK type ref to ZCL_VCXI_FFSP_GRID_MC_INK .
  data R_GRID_MC_TOOL type ref to ZCL_VCXI_FFSP_GRID_MC_TOOL .
  data R_PR_ACTVY_PRINT type ref to ZCL_VCXI_FFSP_PR_ACTVY_PRINT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSP_UI_ACTVY_PRINT definition
class ZCL_VCXI_FFSP_UI_ACTVY_PRINT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSP_UI_ACTVY_PRINT_BIND'
      exporting
        IR_UI_ACTVY_PRINT = ME
      importing
        ES_DYNP           = ME->S_DYNP.

** Create Grid for GRID_MC_INK
    create object ME->R_GRID_MC_INK
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_MC_INK'.

** Create Grid for GRID_MC_TOOL
    create object ME->R_GRID_MC_TOOL
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_MC_TOOL'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                     IR_UIGATE = IR_UIGATE
                     IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_ACTVY_PRINT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_MC_INK is bound.
      ME->R_GRID_MC_INK->DO_FREE( ).
      clear ME->R_GRID_MC_INK.
    endif.

    if ME->R_GRID_MC_TOOL is bound.
      ME->R_GRID_MC_TOOL->DO_FREE( ).
      clear ME->R_GRID_MC_TOOL.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                             IF_DYNNR = IF_DYNNR ).

    try.

        if IF_REPID eq ME->S_DYNP-REPID and
           IF_DYNNR eq ME->S_DYNP-DYNNR.

          LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
          LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***       Modify Scree using DynamicVC
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

          loop at screen.
            if LF_LOCKED ne ABAP_TRUE or
               LF_INUSE  ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
            modify screen.
          endloop.
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
method DO_PBO.

  ME->INIT_VIS( ).

  if ME->R_GRID_MC_INK is bound.
    if ME->R_GRID_MC_INK->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_MC_INK->F_REFRESH_REQ.
    endif.
    ME->R_GRID_MC_INK->REFRESH_GRID( ).
  endif.

  if ME->R_GRID_MC_TOOL is bound.
    if ME->R_GRID_MC_TOOL->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_MC_TOOL->F_REFRESH_REQ.
    endif.
    ME->R_GRID_MC_TOOL->REFRESH_GRID( ).
  endif.

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
  method DO_UPDATE_ACTVY_PRINT_VIS.

*** Set Print Type
    if ME->S_ACTVY_PRINT_VIS-TPRIN ne IS_ACTVY_PRINT_VIS-TPRIN.
      ME->R_PR_ACTVY_PRINT->SET_TPRIN( IF_TPRIN = IS_ACTVY_PRINT_VIS-TPRIN
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Print Category
    if ME->S_ACTVY_PRINT_VIS-PRCAT ne IS_ACTVY_PRINT_VIS-PRCAT.
      ME->R_PR_ACTVY_PRINT->SET_PRCAT( IF_PRCAT = IS_ACTVY_PRINT_VIS-PRCAT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Print Width
    if ME->S_ACTVY_PRINT_VIS-PRWID ne IS_ACTVY_PRINT_VIS-PRWID.
      ME->R_PR_ACTVY_PRINT->SET_PRWID( IS_PRWID = IS_ACTVY_PRINT_VIS-S_PRWID
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Internal Print Thickness
    if ME->S_ACTVY_PRINT_VIS-PRTIN ne IS_ACTVY_PRINT_VIS-PRTIN.
      ME->R_PR_ACTVY_PRINT->SET_PRTIN( IS_PRTIN = IS_ACTVY_PRINT_VIS-S_PRTIN
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_MC_INK is bound.
      ME->R_GRID_MC_INK->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_MC_TOOL is bound.
      ME->R_GRID_MC_TOOL->CHECK_CHANGED_DATA( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_ACTVY_PRINT.

  endmethod.
  method INIT_VIS.

*** Get Print Type
    ME->R_PR_ACTVY_PRINT->GET_TPRIN( importing EF_TPRIN = ME->S_ACTVY_PRINT_VIS-TPRIN ).

*** Get Print Category
    ME->R_PR_ACTVY_PRINT->GET_PRCAT( importing EF_PRCAT = ME->S_ACTVY_PRINT_VIS-PRCAT ).

*** Get Number of Colors
    move ME->R_PR_ACTVY_PRINT->GET_NOCOL( ) to ME->S_ACTVY_PRINT_VIS-NOCOL.

*** Get Print Width
    ME->R_PR_ACTVY_PRINT->GET_PRWID( importing ES_PRWID = ME->S_ACTVY_PRINT_VIS-S_PRWID ).

*** Get Internal Print Thickness
    ME->R_PR_ACTVY_PRINT->GET_PRTIN( importing ES_PRTIN = ME->S_ACTVY_PRINT_VIS-S_PRTIN ).

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
