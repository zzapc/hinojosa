
class ZCL_VCXI_P1SS_PR_PRPLIN definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  final
  create public .

public section.

  interfaces ZIF_VCXI_PXSS_COMM_PREV .
  interfaces ZIF_VCXI_P5SS_COMM_PREV .
  interfaces ZIF_VCXI_XCS_NGREP .
  interfaces ZIF_VCXI_PXSS_FDSUB .

  constants C_IPRVT_P1_PRPLIN type /VCXI/VKSC_IPRVT value 'ZVCXI_P1SS_PRPLIN' ##NO_TEXT.
  constants C_PARID_BPAID type /VCXI/VKS_PARID value 'ZVCXI_PC_BPAID' ##NO_TEXT.
  constants C_PARID_BPFAC type /VCXI/VKS_PARID value 'ZVCXI_PC_BPFAC' ##NO_TEXT.
  constants C_PARID_WEBWI type /VCXI/VKS_PARID value 'ZVCXI_PX_WEBWI' ##NO_TEXT.

  methods GET_REPLE
    returning
      value(RS_REPLE) type ZVCXI_PXS_S_REPLE
    raising
      /VCXI/CX_CKX .
  methods GET_PWIDT
    importing
      !IF_UOM type /VCXI/CKX_UOM optional
    returning
      value(RS_PWIDT) type ZVCXI_PCSS_S_PWIDT
    raising
      /VCXI/CX_CKX .
  methods GET_BAWGT
    importing
      !IS_BAWGP type ZVCXI_P0S_S_BAWGP optional
    exporting
      !ES_BAWGP type ZVCXI_P0S_S_BAWGP
    returning
      value(RS_BAWGT) type ZVCXI_P0S_S_BAWGT
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_BPAID
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_BPAID) type ZVCXI_PCS_BPAID
    raising
      /VCXI/CX_CKX .
  methods GET_CALIP
    returning
      value(RS_CALIP) type ZVCXI_P0SS_S_CALIP
    raising
      /VCXI/CX_CKX .
  methods GET_BPFAC
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_BPFAC) type ZVCXI_PCSS_BPFAC
    raising
      /VCXI/CX_CKX .
  methods GET_COWID
    importing
      !IF_UOM type /VCXI/CKX_UOM optional
    returning
      value(RS_COWID) type ZVCXI_PCS_S_COWID
    raising
      /VCXI/CX_CKX .
  methods GET_GXCON
    returning
      value(RF_GXCON) type ZVCXI_PXSS_GXCON
    raising
      /VCXI/CX_CKX .
  methods GET_NOUPS
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NOUPS) type ZVCXI_PXS_NOUPS
    raising
      /VCXI/CX_CKX .
  methods GET_PRODH
    exporting
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_PRODH) type PRODH_D
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_MS_XPROC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_MS_XPROC) type ref to ZCL_VCXI_PXSS_PR_MS_XPROC
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_XCONI
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_XCONI) type ref to ZCL_VCXI_PXSS_PR_XCONI
    raising
      /VCXI/CX_CKX .
  methods GET_RLBPX
    exporting
      !EF_RLBPX type ZVCXI_P5S_RLBPX
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RR_BL_RLBPROP) type ref to ZCL_VCXI_P5SS_BL_RLBPROP
    raising
      /VCXI/CX_CKX .
  methods GET_RLFPX
    exporting
      !EF_RLFPX type ZVCXI_P5S_RLFPX
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RR_BL_RLFPROP) type ref to ZCL_VCXI_P5SS_BL_RLFPROP
    raising
      /VCXI/CX_CKX .
  methods GET_SURWT
    importing
      !IF_UOM type /VCXI/CKX_UOM optional
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_SURWT) type ZVCXI_PXS_S_SURWT
    raising
      /VCXI/CX_CKX .
  methods GET_WEBWI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_WEBWI) type ZVCXI_PXS_S_WEBWI
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods SET_BPAID
    importing
      !IF_BPAID type ZVCXI_PCS_BPAID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_WEBWI
    importing
      !IS_WEBWI type ZVCXI_PXS_S_WEBWI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_DESCR
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_BPFAC type /VCXI/VKSC_IEVNT value 'RECALC_BPFAC' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_NOUPS type /VCXI/VKSC_IEVNT value 'RECALC_NOUPS' ##NO_TEXT.
  constants C_IEVNT_I_REQ_BACKWARD type /VCXI/VKSC_IEVNT value 'REQ_BACKWARD' ##NO_TEXT.
  constants C_IEVNT_I_REQ_FORWARD type /VCXI/VKSC_IEVNT value 'REQ_FORWARD' ##NO_TEXT.
  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.
  constants C_IEVNT_O_BPFAC_CHANGED type /VCXI/VKSC_IEVNT value 'BPFAC_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOUPS_CHANGED type /VCXI/VKSC_IEVNT value 'NOUPS_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PRINT_CHANGED type /VCXI/VKSC_IEVNT value 'PRINT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RLBPX_CHANGED type /VCXI/VKSC_IEVNT value 'RLBPX_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RLFPX_CHANGED type /VCXI/VKSC_IEVNT value 'RLFPX_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_SURWT_CHANGED type /VCXI/VKSC_IEVNT value 'SURWT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_WEBWI_CHANGED type /VCXI/VKSC_IEVNT value 'WEBWI_CHANGED' ##NO_TEXT.
  constants C_PARID_NOUPS type /VCXI/VKS_PARID value 'ZVCXI_PX_NOUPS' ##NO_TEXT.
  constants C_PARID_RLBPX type /VCXI/VKS_PARID value 'ZVCXI_P5_RLBPX' ##NO_TEXT.
  constants C_PARID_RLFPX type /VCXI/VKS_PARID value 'ZVCXI_P5_RLFPX' ##NO_TEXT.
  constants C_PARID_SURWT type /VCXI/VKS_PARID value 'ZVCXI_PX_SURWT' ##NO_TEXT.

  methods HANDLE_RECALC_WEBWI
    raising
      /VCXI/CX_CKX .
  methods CHECK_WEBWI
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods CHECK_PRINT
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods SET_BPFAC
    importing
      !IF_BPFAC type ZVCXI_PCSS_BPFAC
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_CSPLIT
    returning
      value(RT_CSPLIT) type ZVCXI_PXSS_TT_CSPLIT
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_PREPR
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_PREPR) type ref to ZCL_VCXI_P1SS_PR_PREPR
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_CORR
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_CORR) type ref to ZCL_VCXI_P1SS_PR_CORR
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SPEC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_PXS_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods CHECK_BPAID
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods SET_RLFPX
    importing
      !IF_RLFPX type ZVCXI_P5S_RLFPX
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SURWT
    importing
      !IS_SURWT type ZVCXI_PXS_S_SURWT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods CHECK_BPFAC
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_NOUPS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_BPFAC
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P1SS_PR_PRPLIN definition
class ZCL_VCXI_P1SS_PR_PRPLIN implementation.
  method CHECK_BPAID.

*** Check Paper ID
    if ME->GET_BPAID( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Paper ID is maintained
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '039' ).
      endif.

    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Paper ID is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '040' ).
      endif.
    endif.

  endmethod.
  method CHECK_BPFAC.

*** Check Paper Factor
    if ME->GET_BPFAC( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Paper Factor is maintained
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '041' ).
      endif.

    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Paper Factor is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '042' ).
      endif.
    endif.

  endmethod.
  method CHECK_PRINT.

    data(LR_BL_RLFPROP) = ME->GET_RLFPX( ).

    if LR_BL_RLFPROP->T_PRINT is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Print is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '093' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Print is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '094' ).
      endif.
    endif.

  endmethod.
  method CHECK_WEBWI.

    data(LS_WEBWI) = ME->GET_WEBWI( ).

    if LS_WEBWI-WEBWI gt 0.
***   Get Corrugation Width and Paper Width Tolerance
      data(LS_COWID) = ME->GET_COWID( IF_UOM = LS_WEBWI-WEBWI_UOM ).
      data(LS_PWIDT) = ME->GET_PWIDT( IF_UOM = LS_WEBWI-WEBWI_UOM ).

***   Corrugation Width minus Paper Width Tolerance needs to be smaller than Paper Width
      if LS_WEBWI-WEBWI gt LS_COWID-COWID.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
        if IR_MESSAGE is bound.
***       Web Width is greater than Corrugation Width
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '091' ).
        endif.
      elseif LS_WEBWI-WEBWI lt LS_COWID-COWID - LS_PWIDT-PWIDT.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
        if IR_MESSAGE is bound.
***       Web Width is smaller than Corrugation Width (considering Tolerance)
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '092' ).
        endif.
      else.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
        if IR_MESSAGE is bound.
***       Web Width is maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P5SS'
                                   IF_MSGTY = 'S'
                                   IF_MSGNO = '151' ).
        endif.
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Web Width is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P5SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '152' ).
      endif.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Communicate only with Children (avoid communication with e.g. Corrugation)
    ME->ZIF_VCXI_PXSS_COMM_PREV~F_COMWC = ABAP_TRUE.

  endmethod.
  method GET_BAWGT.

*** Get Surface Weight (Inbound)
    data(LS_SURWT) = ME->ZIF_VCXI_P5SS_COMM_PREV~GET_SURWT( ).

    if IS_BAWGP is supplied.
      ES_BAWGP = IS_BAWGP.
    else.
      ES_BAWGP-BAWGP     = 1000.
      ES_BAWGP-BAWGP_UOM = 'M2'.
    endif.

    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                        IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                        IF_CALCV_2     = ES_BAWGP-BAWGP
                                                        IF_CALCV_UOM_2 = ES_BAWGP-BAWGP_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                              importing EF_CALCV       = RS_BAWGT-BAWGT
                                                        EF_CALCV_UOM   = RS_BAWGT-BAWGT_UOM ).
  endmethod.
  method GET_BPAID.

    data: LS_PARAM  type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BPAID ).
    move LS_PARAM-ATWRT to RF_BPAID.
    move LS_PARAM-SETBY to EF_SETBY.

    check RF_BPAID is not initial.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Paper ID Description
      EF_DESCR = ZCL_VCXI_PCSS_CUST_BOARD=>GET_BPAID_DESCR( IF_BPAID = RF_BPAID ).
    endif.

  endmethod.
  method GET_BPFAC.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BPFAC ).
    move LS_PARAM-ATFLV to RF_BPFAC.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_CALIP.

    data: LR_BL_RLFPROP type ref to ZCL_VCXI_P5SS_BL_RLFPROP.


*** Get Roll Forward Property XML (Outbound)
    LR_BL_RLFPROP = ME->ZIF_VCXI_P5SS_COMM_PREV~GET_RLFPX( ).
    check LR_BL_RLFPROP is bound.

*** Get Caliper
    RS_CALIP = LR_BL_RLFPROP->S_CALIP.

  endmethod.
  method GET_COWID.

*** Get Corrugation Provider
    data(LR_PR_CORR) = ME->GET_PRVDR_CORR( ).
    check LR_PR_CORR is bound.

*** Get Production Board
    data(LR_PR_BOARD) = LR_PR_CORR->GET_BOARD( IF_MBOAR = ZCL_VCXI_P1SS_PR_BOARD=>F_MBOAR_P ).
    check LR_PR_BOARD is bound.

*** Get Corrugation Width
    RS_COWID = LR_PR_BOARD->GET_COWID( ).


*** Adjust Unit if requested
    if IF_UOM is supplied.
      ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = RS_COWID-COWID
                                                         IF_UOM_IN    = RS_COWID-COWID_UOM
                                                         IF_UOM_OUT   = IF_UOM
                                               importing EF_VALUE_OUT = RS_COWID-COWID
                                                         EF_UOM_OUT   = RS_COWID-COWID_UOM ).
    endif.

  endmethod.
  method GET_CSPLIT.

*** Get Corrugation Provider
    data(LR_PR_CORR) = ME->GET_PRVDR_CORR( ).

    if LR_PR_CORR is bound.
***   Get Cost Split Distribution
      RT_CSPLIT = LR_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->T_CSPLIT.
    endif.

  endmethod.
  method GET_DESCR.

    RF_DESCR = |{ SUPER->GET_DESCR( ) } - { ME->GET_BPAID( ) }|.

  endmethod.
  method GET_GXCON.

    data: LR_PR_XCONI type ref to ZCL_VCXI_PXSS_PR_XCONI.


*** Get Connections Inbound
    LR_PR_XCONI = ME->GET_PRVDR_XCONI( ).
    check LR_PR_XCONI is bound.

*** Return its X-Connect GUID
    RF_GXCON = LR_PR_XCONI->GET_GXCON( ).

  endmethod.
  method GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).
    move LS_PARAM-ATFLV to RF_NOUPS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRODH.

    data: LR_BL_RLFPROP type ref to ZCL_VCXI_P5SS_BL_RLFPROP.


*** Get Roll Forward Property XML (Outbound)
    LR_BL_RLFPROP = ME->ZIF_VCXI_P5SS_COMM_PREV~GET_RLFPX( ).
    check LR_BL_RLFPROP is bound.

*** Get Product Hierarchy
    RF_PRODH = LR_BL_RLFPROP->F_PRODH.

    check RF_PRODH is not initial.

    if EF_DESCR is requested.
      EF_DESCR = ZCL_VCXI_XCS_SERVICE=>GET_PRODH_DESCR( IF_PRODH = RF_PRODH ).
    endif.

  endmethod.
  method GET_PRVDR_CORR.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_CORR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Corrugation
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P1SS_PR_CORR=>C_IPRVT_P1_CORR
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_CORR.

  endmethod.
  method GET_PRVDR_MS_XPROC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_MS_XPROC.

***------------------------------------------------------------------------------------------------
*** Find Provider for MS Procurement
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_XPROC=>C_IPRVT_PX_MS_XPROC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_MS_XPROC.

  endmethod.
  method GET_PRVDR_PREPR.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_PREPR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Preprint
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P1SS_PR_PREPR=>C_IPRVT_P1_PREPR
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_PREPR.

  endmethod.
  method GET_PRVDR_SPEC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           ER_PR_SPEC.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SPEC=>C_IPRVT_PX_SPEC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to ER_PR_SPEC.

  endmethod.
  method GET_PRVDR_XCONI.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_XCONI.

***------------------------------------------------------------------------------------------------
*** Find Provider for Connection In
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XCONI=>C_IPRVT_XCONI
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_XCONI.

  endmethod.
  method GET_PWIDT.

*** Get Tolerance
    RS_PWIDT = ZCL_VCXI_PCSS_CUST_BOARD=>GET_PWIDT( IF_WERKS = ME->GET_WERKS( ) ).


*** Adjust Unit if requested
    if IF_UOM is supplied.
      ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = RS_PWIDT-PWIDT
                                                         IF_UOM_IN    = RS_PWIDT-PWIDT_UOM
                                                         IF_UOM_OUT   = IF_UOM
                                               importing EF_VALUE_OUT = RS_PWIDT-PWIDT
                                                         EF_UOM_OUT   = RS_PWIDT-PWIDT_UOM ).
    endif.

  endmethod.
  method GET_REPLE.

    RS_REPLE = ME->GET_RLFPX( )->S_REPLE.

  endmethod.
  method GET_RLBPX.

***--------------------------------------------------------------------------------------
*** Create fresh instance of Roll Backward Property
    RR_BL_RLBPROP = ZCL_VCXI_P5SS_BL_RLBPROP=>FACTORY( ).

    if RR_BL_RLBPROP is bound.
***   Cost Split Distribution
      RR_BL_RLBPROP->SET_CSPLIT( IT_CSPLIT = ME->GET_CSPLIT( ) ).
    endif.

***--------------------------------------------------------------------------------------
*** Return Roll Backward Property XML (Outbound)
    if EF_RLBPX is requested.
      move RR_BL_RLBPROP->GET_RLBPX( ) to EF_RLBPX.
    endif.

  endmethod.
  method GET_RLFPX.

***--------------------------------------------------------------------------------------
*** Get Roll Forward Property (Inbound)
    RR_BL_RLFPROP = ME->ZIF_VCXI_P5SS_COMM_PREV~GET_RLFPX( importing EF_SETBY = EF_SETBY ).

***--------------------------------------------------------------------------------------
*** Get new Roll Forward Property XML
    if EF_RLFPX is requested.
      EF_RLFPX = RR_BL_RLFPROP->GET_RLFPX( ).
    endif.

  endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Paper ID
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_BPAID( ) ).

*** Check Paper Factor
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_BPFAC( ) ).

*** Check Web Width
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_WEBWI( ) ).

*** Check Print
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_PRINT( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Paper ID
    ME->CHECK_BPAID( IR_MESSAGE = IR_MESSAGE ).

*** Check Paper Factor
    ME->CHECK_BPFAC( IR_MESSAGE = IR_MESSAGE ).

*** Check Web Width
    ME->CHECK_WEBWI( IR_MESSAGE = IR_MESSAGE ).

*** Check Print
    ME->CHECK_PRINT( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_SURWT.

***--------------------------------------------------------------------------------------
*** Get Surface Weight (Inbound)
    RS_SURWT = ME->ZIF_VCXI_P5SS_COMM_PREV~GET_SURWT( importing EF_SETBY = EF_SETBY ).

    check RS_SURWT is not initial.

*** Convert Unit
    if IF_UOM is supplied.
      ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = RS_SURWT-SURWT
                                                         IF_UOM_IN    = RS_SURWT-SURWT_UOM
                                                         IF_UOM_OUT   = IF_UOM
                                               importing EF_VALUE_OUT = RS_SURWT-SURWT
                                                         EF_UOM_OUT   = RS_SURWT-SURWT_UOM ).
    endif.

*** Apply Paper Factor
    RS_SURWT-SURWT = RS_SURWT-SURWT * ME->GET_BPFAC( ).

  endmethod.
  method GET_WEBWI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_WEBWI ).
    RS_WEBWI-WEBWI     = LS_PARAM-ATFLV.
    RS_WEBWI-WEBWI_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
method GET_WERKS.

  data: LR_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC.

  ME->GET_PRVDR_SPEC( importing ER_PR_SPEC = LR_PR_SPEC ).
  check LR_PR_SPEC is bound.
  RF_WERKS = LR_PR_SPEC->GET_WERKS( ).

endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

      when C_IEVNT_I_RECALC_BPFAC.
        ME->HANDLE_RECALC_BPFAC( ).
      when C_IEVNT_I_RECALC_NOUPS.
        ME->HANDLE_RECALC_NOUPS( ).

***   Event Backwarding/Forwardin for Communication
      when C_IEVNT_I_REQ_BACKWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_PREV~C_IEVNT_O_BACKWARD_REQ ).
      when C_IEVNT_I_REQ_FORWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_PREV~C_IEVNT_O_FORWARD_REQ ).


    endcase.

  endmethod.
  method HANDLE_RECALC_BPFAC.

*** Get Flute Customizing of Corrugation
    data(LR_PR_CORR) = ME->GET_PRVDR_CORR( ).
    LR_PR_CORR->GET_FLUTE( importing ER_FLUTE = data(LR_FLUTE) ).

*** Get Flute Paper Info
    data(LS_FPAPI) = LR_FLUTE->GET_FPAPI_BY_DATE( IF_WERKS = LR_PR_CORR->GET_WERKS( )
                                                  IF_ARBPL = LR_PR_CORR->GET_ARBPL( )
                                                  IF_BPAID = ME->GET_BPAID( )
                                                  IF_DATE  = ME->R_GATE->GET_APPDATA( )->F_DCONF ).

*** Set new Paper Factor
    ME->SET_BPFAC( IF_BPFAC = LS_FPAPI-BPFAC ).

  endmethod.
  method HANDLE_RECALC_NOUPS.

    data: LF_NOUPS type ZVCXI_PXS_NOUPS.


*** Get Corrugation Provider
    data(LR_PR_CORR) = ME->GET_PRVDR_CORR( ).

***--------------------------------------------------------------------------------------
    if LR_PR_CORR is bound.
***   Get Number Ups of Corrugation (Inbound)
      LF_NOUPS = LR_PR_CORR->GET_NOUPS( ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Number Ups (Outbound)
    ME->SET_NOUPS( IF_NOUPS = LF_NOUPS ).

  endmethod.
  method HANDLE_RECALC_WEBWI.

**** Get Corrugation Width
*    data(LS_COWID) = ME->GET_COWID( ).

  endmethod.
  method HANDLE_SET_DEFAULT.

    ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

  endmethod.
  method SET_BPAID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BPAID ).

    move IF_BPAID to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
method SET_BPFAC.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BPFAC ).

  move IF_BPFAC     to LS_PARAM-ATFLV.
  move IF_SETBY     to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BPFAC_CHANGED ).
  endif.

endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).

    move IF_NOUPS     to LS_PARAM-ATFLV.
    move IF_SETBY     to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOUPS_CHANGED ).
    endif.

  endmethod.
  method SET_RLFPX.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RLFPX ).

    move IF_RLFPX   to LS_PARAM-STRNG.
    move IF_SETBY   to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RLFPX_CHANGED ).
    endif.

  endmethod.
  method SET_SURWT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SURWT ).

    move IS_SURWT-SURWT     to LS_PARAM-ATFLV.
    move IS_SURWT-SURWT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SURWT_CHANGED ).
    endif.

  endmethod.
  method SET_WEBWI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_WEBWI ).

    LS_PARAM-ATFLV = IS_WEBWI-WEBWI.
    LS_PARAM-UNIT  = IS_WEBWI-WEBWI_UOM.
    LS_PARAM-SETBY = IF_SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_WEBWI_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P5SS_COMM_PREV~GET_NOUPS.

*** Get Number of Ups (Outbound)
    RF_NOUPS = ME->GET_NOUPS( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method ZIF_VCXI_P5SS_COMM_PREV~GET_RLBPX.

***--------------------------------------------------------------------------------------
*** Get Roll Backward Property (Outbound)
    RR_BL_RLBPROP = ME->GET_RLBPX( importing EF_SETBY = EF_SETBY ).

***--------------------------------------------------------------------------------------
*** Return XML
    if EF_RLBPX is requested.
      move RR_BL_RLBPROP->GET_RLBPX( ) to EF_RLBPX.
    endif.

  endmethod.
  method ZIF_VCXI_P5SS_COMM_PREV~GET_RLFPX.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Get Parameter
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RLFPX ).
    move LS_PARAM-STRNG to EF_RLFPX.
    move LS_PARAM-SETBY to EF_SETBY.

***--------------------------------------------------------------------------------------
*** Get Roll Forward Property Instance
    if RR_BL_RLFPROP is requested.
      RR_BL_RLFPROP = ZCL_VCXI_P5SS_BL_RLFPROP=>FACTORY( IF_RLFPX = EF_RLFPX ).
    endif.

  endmethod.
  method ZIF_VCXI_P5SS_COMM_PREV~GET_SURWT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SURWT ).
    move LS_PARAM-ATFLV to RS_SURWT-SURWT.
    move LS_PARAM-UNIT  to RS_SURWT-SURWT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_P5SS_COMM_PREV~GET_WEBWI.

*** Get Web Width (Outbound)
    RS_WEBWI = ME->GET_WEBWI( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method ZIF_VCXI_PXSS_COMM_PREV~DO_FORWARD.

    data: LS_SURWT      type ZVCXI_PXS_S_SURWT,
          LS_SURWT_NEXT type ZVCXI_PXS_S_SURWT.
    data: LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
          LR_COMM_NEXT       type ref to ZIF_VCXI_P5SS_COMM_NEXT,
          LR_BL_RLFPROP      type ref to ZCL_VCXI_P5SS_BL_RLFPROP,
          LR_BL_RLFPROP_NEXT type ref to ZCL_VCXI_P5SS_BL_RLFPROP.

***------------------------------------------------------------------------------------------------
*** Process all provided Gates
    loop at IT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_COMM_NEXT.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_COMM_NEXT.
      endtry.
      check LR_COMM_NEXT is bound.

***   Get Sum of Surface Weight
      LS_SURWT_NEXT = LR_COMM_NEXT->GET_SURWT( ).
      if LS_SURWT_NEXT is not initial.
        if LS_SURWT is initial.
          move LS_SURWT_NEXT to LS_SURWT.
        else.
          ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT_NEXT-SURWT
                                                              IF_CALCV_UOM_1 = LS_SURWT_NEXT-SURWT_UOM
                                                              IF_CALCV_2     = LS_SURWT-SURWT
                                                              IF_CALCV_UOM_2 = LS_SURWT-SURWT_UOM
                                                              IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                              IF_UOM         = LS_SURWT-SURWT_UOM
                                                    importing EF_CALCV       = LS_SURWT-SURWT
                                                              EF_CALCV_UOM   = LS_SURWT-SURWT_UOM ).

        endif.
      endif.

***   Combine Roll Forward Property
      LR_BL_RLFPROP_NEXT = LR_COMM_NEXT->GET_RLFPX( ).
      if LR_BL_RLFPROP is not bound.
        move LR_BL_RLFPROP_NEXT to LR_BL_RLFPROP.
      else.
        LR_BL_RLFPROP->MERGE( IR_BL_RLFPROP = LR_BL_RLFPROP_NEXT ).
      endif.

    endloop.

*** Forward Surface Weight
    ME->SET_SURWT( IS_SURWT = LS_SURWT ).

*** Forward Roll Forward Property XML
    if LR_BL_RLFPROP is bound.
      ME->SET_RLFPX( IF_RLFPX = LR_BL_RLFPROP->GET_RLFPX( ) ).
    else.
      ME->SET_RLFPX( IF_RLFPX = SPACE ).
    endif.

  endmethod.
  method ZIF_VCXI_PXSS_FDSUB~GET_PRVDR_MS_XPROC.

    RR_PR_MS_XPROC = ME->GET_PRVDR_MS_XPROC( importing ER_GATE = ER_GATE ).

  endmethod.
  method ZIF_VCXI_PXSS_FDSUB~GET_PRVDR_XCONI.

    RR_PR_XCONI = ME->GET_PRVDR_XCONI( importing ER_GATE = ER_GATE ).

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LR_GATE_CORR     type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_XCONI    type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_MS_XPROC type ref to /VCXI/CL_VKSR_GATE.


*** Get Corrugation
    ME->GET_PRVDR_CORR( importing ER_GATE = LR_GATE_CORR ).

***--------------------------------------------------------------------------------------
*** Get Connection In
    ME->GET_PRVDR_XCONI( importing ER_GATE = LR_GATE_XCONI ).
    if LR_GATE_XCONI is not initial.
***   Register Connection In to Corrugation
      CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = LR_GATE_XCONI
                                          IF_NODE_KEY = CR_NETGRAPH_JSON->GET_NODE_KEY_BY_OBJECT( LR_GATE_CORR ) ).
    endif.

***--------------------------------------------------------------------------------------
*** Get Procurement
    ME->GET_PRVDR_MS_XPROC( importing ER_GATE = LR_GATE_MS_XPROC ).

    if LR_GATE_MS_XPROC is not initial.
      if LR_GATE_MS_XPROC->R_CLSPR is instance of ZIF_VCXI_XCS_NGREP.
        cast ZIF_VCXI_XCS_NGREP( LR_GATE_MS_XPROC->R_CLSPR )->FILL( exporting IF_GROUP_KEY     = IF_GROUP_KEY
                                                                    changing  CR_NETGRAPH_JSON = CR_NETGRAPH_JSON ).
      endif.

***   Add Line to Corrugation
      CR_NETGRAPH_JSON->ADD_LINE( IF_NODE_KEY_FROM = CR_NETGRAPH_JSON->GET_NODE_KEY_BY_OBJECT( LR_GATE_MS_XPROC )
                                  IF_NODE_KEY_TO   = CR_NETGRAPH_JSON->GET_NODE_KEY_BY_OBJECT( LR_GATE_CORR ) ).
    endif.

  endmethod.
