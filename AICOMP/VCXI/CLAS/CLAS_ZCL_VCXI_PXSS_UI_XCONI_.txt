
class ZCL_VCXI_PXSS_UI_XCONI definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_XCONI_VIS type ZVCXI_PXSS_S_XCONI_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_IN_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_CONOUT type SYUCOMM value 'CONOUT' ##NO_TEXT.
  data F_CURSOR type SCRFNAME .
  data R_PR_XCONI type ref to ZCL_VCXI_PXSS_PR_XCONI .

  methods HANDLE_UC_CONOUT
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_UI_XCONI definition
class ZCL_VCXI_PXSS_UI_XCONI implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_XCONI.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

****       Navigation to Connected Gate only if bound
*          if SCREEN-NAME eq '0100BT_CONOUT' and
*             ME->R_PR_XCONI->GET_CONNECTED_GATE( ) is not bound.
*            move 0 to SCREEN-INPUT.
*          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_XCONI_VIS type ZVCXI_PXSS_S_XCONI_VIS.


    check ME->R_PR_XCONI is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_XCONI_VIS.

***--------------------------------------------------------------------------------------
*** ...

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
***   Navigation to Connected Gate
      when C_UC_CONOUT.
        ME->HANDLE_UC_CONOUT( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_XCONI.

  endmethod.
  method HANDLE_UC_CONOUT.

    data: LT_GATE  type /VCXI/VKSR_TT_GATE.
    data: LR_PR_SOV     type ref to ZCL_VCXI_PXSS_PR_SOV,
          LR_GATE_XCONO type ref to /VCXI/CL_VKSR_GATE.


***--------------------------------------------------------------------------------------
*** Get Connected Gate
    check ME->R_PR_XCONI is bound.
    move ME->R_PR_XCONI->GET_CONNECTED_GATE( ) to LR_GATE_XCONO.

***--------------------------------------------------------------------------------------
*** Connection Options
    if LR_GATE_XCONO is not bound.
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SOV=>C_IPRVT_PX_SOV ).
      check LT_GATE is not initial.
      LR_PR_SOV ?= LT_GATE[ 1 ]->R_CLSPR.
      check LR_PR_SOV is bound.
      LT_GATE = LR_PR_SOV->GET_PRVDR_XCONO( IF_CONNECTED = ABAP_FALSE ).
      loop at LT_GATE into LR_GATE_XCONO.
        if cast ZCL_VCXI_PXSS_PR_XCONO( LR_GATE_XCONO->R_CLSPR )->IS_XCONI_COMPATIBLE( IR_GATE_XCONI = ME->R_GATE ) ne ABAP_TRUE or
           ME->R_PR_XCONI->IS_XCONO_COMPATIBLE( IR_GATE_XCONO = LR_GATE_XCONO ) ne ABAP_TRUE.
          delete LT_GATE.
        endif.
      endloop.
      clear LR_GATE_XCONO.
      if LINES( LT_GATE ) eq 1.
        LR_GATE_XCONO = LT_GATE[ 1 ].
        LR_PR_SOV->CONNECT( IR_GATE_IN  = ME->R_GATE
                            IR_GATE_OUT = LR_GATE_XCONO ).
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Navigate to Connection
    check LR_GATE_XCONO is bound and
          LR_GATE_XCONO->GET_CLSUI( ) is not initial.
*** Open UI
    ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = LR_GATE_XCONO ).

*** Open Tree Node
    ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = LR_GATE_XCONO->F_GATKY ).

*** Highlight Tree Node
    ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = LR_GATE_XCONO->F_GATKY ).

  endmethod.
  method INIT_VIS.

    free: ME->S_XCONI_VIS.
    check ME->R_PR_XCONI is bound.

***--------------------------------------------------------------------------------------
*** Material Description
    ME->S_XCONI_VIS-MAKTX = ME->R_PR_XCONI->GET_MAKTX( ).

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
