
class ZCL_VCXI_XCE_PP_IM_WRKORD_CONF definition
  public
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces IF_EX_WORKORDER_CONFIRM .
protected section.
private section.
endclass. "ZCL_VCXI_XCE_PP_IM_WRKORD_CONF definition
class ZCL_VCXI_XCE_PP_IM_WRKORD_CONF implementation.
  method IF_EX_WORKORDER_CONFIRM~AT_CANCEL_CHECK.
  endmethod.
  method IF_EX_WORKORDER_CONFIRM~AT_SAVE.

    data: LS_BAPIRET2 type BAPIRET2.


    try.
***     Ensure the Order is a Production Order
        call function 'BAPI_PRODORD_EXIST_CHECK'
          exporting
            NUMBER = IS_CONFIRMATION-AUFNR
          importing
            RETURN = LS_BAPIRET2.
        check LS_BAPIRET2 is initial.

***     Prepare update of Tool Usage by Work Order (as we can raise messages here)
        ZCL_VCXI_XCE_PP_TOOL_USAGE=>PREP_BY_WORKORDER( IS_AFRU  = corresponding #( IS_CONFIRMATION ) ).


***   Error Handling
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        message id      LR_CX_CKX->F_MSGID
                type    LR_CX_CKX->F_MSGTY
                number  LR_CX_CKX->F_MSGNO
                with    LR_CX_CKX->F_MSGV1
                        LR_CX_CKX->F_MSGV2
                        LR_CX_CKX->F_MSGV3
                        LR_CX_CKX->F_MSGV4
                raising ERROR_WITH_MESSAGE.
    endtry.

  endmethod.
  method IF_EX_WORKORDER_CONFIRM~BEFORE_UPDATE.

    try.
***     Actually updating Tool Usage by Work Order, as the Batch classification is now no longer initialized by SAP
        ZCL_VCXI_XCE_PP_TOOL_USAGE=>UPDATE( ).

***   Error Handling
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method IF_EX_WORKORDER_CONFIRM~IN_UPDATE.
  endmethod.
  method IF_EX_WORKORDER_CONFIRM~INDIVIDUAL_CAPACITY.
  endmethod.
endclass. "ZCL_VCXI_XCE_PP_IM_WRKORD_CONF definition
endclass. "ZCL_VCXI_XCE_PP_IM_WRKORD_CONF implementation
