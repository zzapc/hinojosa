
class ZCL_VCXI_FFSP_PR_ADDON_LAMI definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_FFSP_ADJ_FIDIM .

  constants C_IAATY_FIWID type /VCXI/VSMC_IAATY value 'FF_AA_FIWID' ##NO_TEXT.
  constants C_IAATY_TGLUE type /VCXI/VSMC_IAATY value 'FF_AA_TGLUE' ##NO_TEXT.
  constants C_PARID_FIWID type /VCXI/VKS_PARID value 'ZVCXI_F0_FIWID' ##NO_TEXT.

  methods GET_FIWID
    returning
      value(RS_FIWID) type ZVCXI_F0S_S_FIWID
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_FIDIM type /VCXI/VKSC_IEVNT value 'RECALC_FIDIM' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_FIWID_CHANGED type /VCXI/VKSC_IEVNT value 'FIWID_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_FIWID
    importing
      !IS_FIWID type ZVCXI_F0S_S_FIWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAREC
    redefinition .
  methods GET_RTE_SAVAL
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSP_PR_ADDON_LAMI definition
class ZCL_VCXI_FFSP_PR_ADDON_LAMI implementation.
  method GET_FIWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FIWID ).
    move LS_PARAM-ATFLV to RS_FIWID-FIWID.
    move LS_PARAM-UNIT  to RS_FIWID-FIWID_UOM.

  endmethod.
  method GET_RTE_SAREC.

    data:          LF_GAATY      type /VCXI/VSMC_GAATY.
    data:          LS_FIWID      type ZVCXI_F0S_S_FIWID.
    data:          LR_CX_CKX     type ref to /VCXI/CX_CKX.
    field-symbols: <S_RTE_SAREC> type /VCXI/VSMR_S_RTE_SAREC,
                   <S_ARECN>     type /VCXI/VSMR_S_RTE_RANGE_ARECN.

*** Get Super
    RT_RTE_SAREC = SUPER->GET_RTE_SAREC( ).

    check ME->R_RTE_CADDON          is bound and
          ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - Film Width
    try.
        move ME->GET_FIWID( ) to LS_FIWID.

        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_FIWID
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move LS_FIWID-FIWID      to <S_ARECN>-LOW.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        return.
    endtry.

  endmethod.
  method GET_RTE_SAVAL.

    data: LF_GAATY type        /VCXI/VSMC_GAATY,
          LF_TGLUE type        ZVCXI_FFS_TGLUE.
    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MC_GLUE type ref to ZCL_VCXI_FFSP_PR_MC_GLUE,
          LR_CX_CKX     type ref to /VCXI/CX_CKX.
    field-symbols: <S_RTE_SAVAL> type        /VCXI/VSMR_S_RTE_SAVAL,
                   <S_AVVAL>     type        /VCXI/VSMR_S_RTE_RANGE_AVVAL.

*** Get Super
    RT_RTE_SAVAL = SUPER->GET_RTE_SAVAL( ).

    check ME->R_RTE_CADDON          is bound and
          ME->R_RTE_CADDON->R_ATYPE is bound.

*** Get all Glues
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_GLUE=>C_IPRVT_MC_GLUE
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Aspect - Glue Type
    try.
        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_TGLUE
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
        append initial line to RT_RTE_SAVAL assigning <S_RTE_SAVAL>.
        move LF_GAATY to <S_RTE_SAVAL>-GAATY.

        if LT_GATE is not initial.
          loop at LT_GATE into LR_GATE.
            move LR_GATE->R_CLSPR ?to LR_PR_MC_GLUE.
            LR_PR_MC_GLUE->GET_TGLUE( importing EF_TGLUE = LF_TGLUE ).

            append initial line to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
            move 'I'              to <S_AVVAL>-SIGN.
            move 'EQ'             to <S_AVVAL>-OPTION.
            move LF_TGLUE         to <S_AVVAL>-LOW.
          endloop.
        else.
***       No Glue Type in case of Dry Lamination
          append initial line to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
          move 'I'              to <S_AVVAL>-SIGN.
          move 'EQ'             to <S_AVVAL>-OPTION.
          move SPACE            to <S_AVVAL>-LOW.
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        return.
    endtry.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

***   Film Dimensions
      when C_IEVNT_I_RECALC_FIDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_ADJ_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE        type        /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI       type        ZVCXI_XCSP_S_MQTYI.
    data: LF_UPDATE_ALL  type        ABAP_BOOL.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MACHINE  type ref to ZCL_VCXI_XCSP_PR_MACHINE,
          LR_PR_MC       type ref to ZCL_VCXI_XCSP_PR_MC.

***--------------------------------------------------------------------------------------
*** Should all MCs updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE
                       transporting no fields.
    if SY-SUBRC eq 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
                         transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
      clear: LR_PR_MACHINE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MACHINE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_MACHINE.
      endtry.
      if LR_PR_MACHINE is bound.
        move LR_PR_MACHINE->GET_MQTYI( ) to LS_MQTYI.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MC.
          check LR_PR_MC is bound.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method SET_FIWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FIWID ).

    move IS_FIWID-FIWID                      to LS_PARAM-ATFLV.
    move IS_FIWID-FIWID_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_ADJ_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSP_ADJ_FIDIM~CALC_FIDIM_OUT.

    data: LS_FIDIM_IN   type        ZVCXI_FFSP_S_FIDIM,
          LS_FIDIM_OUT  type        ZVCXI_FFSP_S_FIDIM,
          LS_GLTIN      type        ZVCXI_FFS_S_GLTIN,
          LS_FITIN      type        ZVCXI_FFS_S_FITIN,
          LS_FITEX      type        ZVCXI_FFS_S_FITEX,
          LS_SURWT      type        ZVCXI_F0S_S_SURWT.
    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MC_GLUE type ref to ZCL_VCXI_FFSP_PR_MC_GLUE,
          LR_PR_MC_RECI type ref to ZCL_VCXI_FFSP_PR_MC_RECI.

*** Get first inbound Dimensions as base
    read table CT_FIDIM into LS_FIDIM_OUT index 1.

***--------------------------------------------------------------------------------------
*** Collect inbound Dimensions
    loop at CT_FIDIM into LS_FIDIM_IN from 2.
***   Adjust Film Width
      if ZCL_VCXI_XCS_SERVICE_CALC=>COMPARE_WITH_ANY( IF_CALCV_1     = LS_FIDIM_IN-FIWID
                                                      IF_CALCV_UOM_1 = LS_FIDIM_IN-FIWID_UOM
                                                      IF_CALCV_2     = LS_FIDIM_OUT-FIWID
                                                      IF_CALCV_UOM_2 = LS_FIDIM_OUT-FIWID_UOM
                                                      IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_GT ) eq ABAP_TRUE.
        move LS_FIDIM_IN-FIWID     to LS_FIDIM_OUT-FIWID.
        move LS_FIDIM_IN-FIWID_UOM to LS_FIDIM_OUT-FIWID_UOM.
      endif.

***   Calculate Internal Thickness
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIDIM_IN-FITIN
                                                          IF_CALCV_UOM_1 = LS_FIDIM_IN-FITIN_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITIN
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITIN_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITIN
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITIN_UOM ).

***   Calculate External Thickness
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIDIM_IN-FITEX
                                                          IF_CALCV_UOM_1 = LS_FIDIM_IN-FITEX_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITEX
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITEX_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITEX
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITEX_UOM ).
***   Calculate Surface Weight
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIDIM_IN-SURWT
                                                          IF_CALCV_UOM_1 = LS_FIDIM_IN-SURWT_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-SURWT
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-SURWT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-SURWT
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-SURWT_UOM ).
    endloop.

*** Number of Outs
    move 1 to LS_FIDIM_OUT-NOOUT.

***--------------------------------------------------------------------------------------
*** Get all Glues
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_GLUE=>C_IPRVT_MC_GLUE
                                     IF_INUSE = ABAP_TRUE ).

*** Add Information of all Glues
    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_MC_GLUE.

***   Get Glue Thickness
      LR_PR_MC_GLUE->GET_GLTIN( importing ES_GLTIN = LS_GLTIN ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_GLTIN-GLTIN
                                                          IF_CALCV_UOM_1 = LS_GLTIN-GLTIN_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITIN
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITIN_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITIN
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITIN_UOM ).

***   Get Surface Weight
      LR_PR_MC_GLUE->GET_SURWT( importing ES_SURWT = LS_SURWT ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                          IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-SURWT
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-SURWT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-SURWT
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-SURWT_UOM ).
    endloop.

***--------------------------------------------------------------------------------------
*** Get all Extrusion Recipes
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_RECI=>C_IPRVT_MC_RECI
                                     IF_INUSE = ABAP_TRUE ).

*** Add Information of all Extrusion Recipes
    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_MC_RECI.

***   Get Internal Thickness
      move LR_PR_MC_RECI->GET_FITIN( ) to  LS_FITIN.
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FITIN-FITIN
                                                          IF_CALCV_UOM_1 = LS_FITIN-FITIN_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITIN
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITIN_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITIN
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITIN_UOM ).

***   Get External Thickness
      move LR_PR_MC_RECI->GET_FITEX( ) to  LS_FITEX.
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FITEX-FITEX
                                                          IF_CALCV_UOM_1 = LS_FITEX-FITEX_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITEX
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITEX_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITEX
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITEX_UOM ).

***   Get Surface Weight
      move LR_PR_MC_RECI->GET_SURWT( IF_UOM = LS_FIDIM_OUT-SURWT_UOM ) to LS_SURWT.
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                          IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-SURWT
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-SURWT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-SURWT
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-SURWT_UOM ).
    endloop.

***--------------------------------------------------------------------------------------
*** Receive defined Dimensions
    free CT_FIDIM.
    append LS_FIDIM_OUT to CT_FIDIM.

***--------------------------------------------------------------------------------------
*** Buffer Film Width (Outbound) for Aspect
    ME->SET_FIWID( IS_FIWID = LS_FIDIM_OUT-S_FIWID ).

  endmethod.
