
class ZCL_VCXI_FFSS_POPUP_FSEDIT definition
  public
  create protected .

public section.

  types YR_DREF type ref to DATA .
  types:
    YT_DREF type standard table of YR_DREF .

  constants C_REF_TABLE type LVC_RTNAME value 'ZVCXI_FFSS_S_POPUP_FSEDIT_GRID' ##NO_TEXT.
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_OKAY type SYUCOMM value 'OKAY' ##NO_TEXT.
  data F_REFRESH_REQ type ABAP_BOOL .

  class-methods CLASS_CONSTRUCTOR .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IF_CONTAINER_NAME type SCRFNAME default '0100CC_GRID_EDIT'
      !IF_FLDNAME type NAME_KOMP
    changing
      !CT_VALUES type YT_DREF
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    YT_TC110T type standard table of ZVCXI_FRS_TC110T .
  types:
    YT_TC120T type standard table of ZVCXI_FRS_TC120T .
  types:
    YT_TC130T type standard table of ZVCXI_FFS_TC130T .
  types:
    YT_TC230T type standard table of ZVCXI_FFS_TC230T .
  types:
    YT_TC310T type standard table of ZVCXI_FFS_TC310T .
  types:
    YT_TC150T type standard table of ZVCXI_FFS_TC150T .

  data F_CONTAINER_NAME type SCRFNAME .
  data F_REF_FIELD type NAME_KOMP .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_DATA type ref to DATA .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data S_DD03L type DD03L .
  data T_DATA type YT_DREF .
  data T_FIELDCAT type LVC_T_FCAT .
  class-data T_TC110T type YT_TC110T .
  class-data T_TC120T type YT_TC120T .
  class-data T_TC130T type YT_TC130T .
  class-data T_TC230T type YT_TC230T .
  class-data T_TC310T type YT_TC310T .
  class-data T_TC150T type YT_TC150T .

  methods READ_CUSTOMIZING
    importing
      !IF_VALUE type ANY
    exporting
      !EF_DESCR type /VCXI/CKX_DESCR .
  methods INIT_DATA
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods CHECK_CHANGED_DATA
    returning
      value(RF_CHANGED) type FLAG
    raising
      /VCXI/CX_CKX .
  methods DISPLAY_ALV
    raising
      /VCXI/CX_CKX .
  methods GET_ALV_DATA
    raising
      /VCXI/CX_CKX .
  methods GET_FIELDCAT
    returning
      value(RT_FCAT) type LVC_T_FCAT
    raising
      /VCXI/CX_CKX .
  methods GET_LAYOUT
    returning
      value(RS_LAYOUT) type LVC_S_LAYO
    raising
      /VCXI/CX_CKX .
  methods GET_TOOLBAR
    returning
      value(RT_TOOLBAR) type UI_FUNCTIONS
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
  methods UPDATE_VALUES
    changing
      !CT_VALUES type YT_DREF
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_CONTAINER_NAME type SCRFNAME
      !IF_FLDNAME type NAME_KOMP
      !IT_VALUES type YT_DREF
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods REGISTER_F4_FIELDS
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CHANGED_DATA
    for event DATA_CHANGED of CL_GUI_ALV_GRID
    importing
      !ER_DATA_CHANGED
      !E_ONF4
      !E_ONF4_BEFORE
      !E_ONF4_AFTER
      !E_UCOMM .
private section.
endclass. "ZCL_VCXI_FFSS_POPUP_FSEDIT definition
class ZCL_VCXI_FFSS_POPUP_FSEDIT implementation.
  method CHECK_CHANGED_DATA.

*** Check if something changed in ALV
    ME->R_GRID->CHECK_CHANGED_DATA( importing E_VALID = RF_CHANGED ).

  endmethod.
  method CLASS_CONSTRUCTOR.

*** Layer Types
    select * from ZVCXI_FRS_TC110T
      into table T_TC110T
      where LANGU eq SY-LANGU.                            "#EC CI_SUBRC

*** Layer Colors
    select * from ZVCXI_FRS_TC120T
      into table T_TC120T
      where LANGU eq SY-LANGU.                            "#EC CI_SUBRC

*** Surface Properties
    select * from ZVCXI_FFS_TC130T
      into table T_TC130T
      where LANGU eq SY-LANGU.                            "#EC CI_SUBRC

*** Ink Type
    select * from ZVCXI_FFS_TC230T
      into table T_TC230T
      where LANGU eq SY-LANGU.                            "#EC CI_SUBRC

*** Glue Type
    select * from ZVCXI_FFS_TC310T
      into table T_TC310T
      where LANGU eq SY-LANGU.                            "#EC CI_SUBRC

*** Treatment Type
    select * from ZVCXI_FFS_TC150T
      into table T_TC150T
      where LANGU eq SY-LANGU.                            "#EC CI_SUBRC

  endmethod.
  method CONSTRUCTOR.

    ME->F_CONTAINER_NAME = IF_CONTAINER_NAME.
    ME->F_REF_FIELD      = IF_FLDNAME.
    ME->T_DATA           = IT_VALUES.

*** Get Info about Reference Structure
    select * up to 1 rows
      into corresponding fields of ME->S_DD03L
      from DD03L
      where TABNAME   = ME->C_REF_TABLE
        and FIELDNAME = ME->F_REF_FIELD
        and AS4LOCAL  = 'A'.
    endselect.

*** Initialize ALV Data
    ME->INIT_DATA( ).

*** Get full Fieldcat
    ME->T_FIELDCAT = GET_FIELDCAT( ).

*** Request Refresh
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method DISPLAY_ALV.

    data: LS_LAYOUT            type     LVC_S_LAYO,
          LS_ROW               type     LVC_S_ROID,
          LS_COL               type     LVC_S_COL.
    data: LT_TOOLBAR           type     UI_FUNCTIONS.
    field-symbols: <T_DATA>    type standard table.

*** Get data for display
    assign ME->R_DATA->* to <T_DATA>.
    free: <T_DATA>.
    ME->GET_ALV_DATA( ).

*** Initialize Toolbar and Layout
    move ME->GET_LAYOUT( )  to LS_LAYOUT.
    move ME->GET_TOOLBAR( ) to LT_TOOLBAR.

*** Refresh ALV
    ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
      exporting
        IT_TOOLBAR_EXCLUDING          = LT_TOOLBAR
        IS_LAYOUT                     = LS_LAYOUT
      changing
        IT_FIELDCATALOG               = ME->T_FIELDCAT
        IT_OUTTAB                     = <T_DATA>
      exceptions
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        others                        = 4 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Set Focus
    move 1 to LS_ROW-ROW_ID.
    move ME->F_REF_FIELD to LS_COL-FIELDNAME.
    ME->R_GRID->SET_CURRENT_CELL_VIA_ID( IS_ROW_NO    = LS_ROW
                                         IS_COLUMN_ID = LS_COL ).
    ME->R_GRID->SET_FOCUS( ME->R_CONTAINER ).

  endmethod.
  method DO_FREE.

    if ME->R_CONTAINER is bound and ME->F_REFRESH_REQ is not initial.
      ME->R_CONTAINER->FREE( ).
    endif.

    clear ME->R_CONTAINER.
    clear ME->R_GRID.
    clear ME->T_DATA.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Set PF-Status
    ME->SET_PF_STATUS( ).

***--------------------------------------------------------------------------------------
*** Display ALV
    ME->REFRESH_GRID( ).

  endmethod.
  method DO_USER_COMMAND.

  case IF_UCOMM.
    when C_UC_OKAY.
      ME->HANDLE_UC_OKAY( ).
    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).
  endcase.

  endmethod.
  method GET_ALV_DATA.

    data: LF_DESCR              type /VCXI/CKX_DESCR.
    field-symbols: <T_DATA>     type standard table.
    field-symbols: <S_ROW>      type ANY,
                   <S_DATA>     type YR_DREF,
                   <S_FIELDCAT> like line of T_FIELDCAT.
    field-symbols: <F_CELL>     type ANY,
                   <F_VALUE>    type ANY.

*** Create Rows
    assign ME->R_DATA->* to <T_DATA>.

    loop at T_DATA assigning <S_DATA>.

      append initial line to <T_DATA> assigning <S_ROW>.

***   Name Column content comes from fieldcat
      read table ME->T_FIELDCAT assigning <S_FIELDCAT> index 2.
      check SY-SUBRC = 0.
      assign component 1 of structure <S_ROW> to <F_CELL>.
      if SY-SUBRC is initial.
        move <S_FIELDCAT>-SCRTEXT_M to <F_CELL>.
        move text-VAL               to <S_FIELDCAT>-SCRTEXT_M.
      endif.

***   Value Column content comes from instance member
      assign component 2 of structure <S_ROW> to <F_CELL>.
      if SY-SUBRC is initial.
        assign <S_DATA>->* to <F_VALUE>.
        <F_CELL> = <F_VALUE>.
      endif.

      if <F_VALUE> is assigned .
        ME->READ_CUSTOMIZING( exporting IF_VALUE = <F_VALUE>
                              importing EF_DESCR = LF_DESCR ).
        if LF_DESCR is not initial.
          assign component 3 of structure <S_ROW> to <F_CELL>.
          if SY-SUBRC is initial.
            move LF_DESCR to <F_CELL>.
          endif.
        endif.
      endif.

    endloop.

  endmethod.
  method GET_FIELDCAT.

    data: LR_TABDESCR type ref to CL_ABAP_STRUCTDESCR,
          LR_DATA     type ref to DATA.
    data: LS_FIELDCAT type LVC_S_FCAT,
          LS_DFIES    type DFIES.
    data: LT_DFIES    type DDFIELDS.

    field-symbols: <T_DATA> type any table.

    assign ME->R_DATA->* to <T_DATA>.
    create data LR_DATA like line of <T_DATA>.

    LR_TABDESCR ?= CL_ABAP_STRUCTDESCR=>DESCRIBE_BY_DATA_REF( LR_DATA ).
    LT_DFIES = CL_SALV_DATA_DESCR=>READ_STRUCTDESCR( LR_TABDESCR ).

    loop at LT_DFIES into LS_DFIES.
      move-corresponding LS_DFIES to LS_FIELDCAT.
      move 'A' to LS_FIELDCAT-COL_OPT.

      case SY-TABIX.
        when 1.
***       Element Column
          move text-ELM to LS_FIELDCAT-SCRTEXT_M.
          clear LS_FIELDCAT-EDIT.

        when 2.
***       Value Column
          move: ABAP_TRUE       to LS_FIELDCAT-EDIT,
                ME->C_REF_TABLE to LS_FIELDCAT-REF_TABLE,
                ME->F_REF_FIELD to LS_FIELDCAT-REF_FIELD.

          if ME->S_DD03L-SHLPORIGIN is not initial.
            move: ABAP_TRUE to LS_FIELDCAT-F4AVAILABL.
          endif.

        when 3.
***       Description Column
          move text-DES to: LS_FIELDCAT-SCRTEXT_S,
                            LS_FIELDCAT-SCRTEXT_M.
          clear LS_FIELDCAT-EDIT.

        when others.
      endcase.

      append LS_FIELDCAT to RT_FCAT.
      clear LS_FIELDCAT.
    endloop.

    move RT_FCAT to T_FIELDCAT.

  endmethod.
  method GET_LAYOUT.

*** Prepare Layout
    move ABAP_TRUE to RS_LAYOUT-NO_TOOLBAR.
*    move ABAP_TRUE to RS_LAYOUT-NO_HEADERS.
*    move ABAP_TRUE to RS_LAYOUT-CWIDTH_OPT.
    move ABAP_TRUE to RS_LAYOUT-NO_ROWMARK.
    clear RS_LAYOUT-EDIT.

  endmethod.
  method GET_TOOLBAR.

*** Exlcude All Functions
    append CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL to RT_TOOLBAR.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Clear return table
    clear ME->T_DATA.
*** Leave Popup
    leave to screen 0.

  endmethod.
  method HANDLE_UC_OKAY.

    data: LR_DATA  type ref to DATA.
    data: LF_INDEX type I.

    field-symbols: <T_DATA>  type standard table,
                   <S_DATA>  type ANY,
                   <S_ANY>   type ANY,
                   <S_FIELD> type ANY.

*** If something changed, update values in internal table
    if ME->CHECK_CHANGED_DATA( ) = ABAP_TRUE.

      assign ME->R_DATA->* to <T_DATA>.
      check SY-SUBRC eq 0.
      loop at <T_DATA> assigning <S_DATA>.
        move SY-TABIX to LF_INDEX.
        assign component 2 of structure <S_DATA> to <S_FIELD>.
        if SY-SUBRC = 0.
          create data LR_DATA type STRING.
          assign LR_DATA->* to <S_ANY>.
          if <S_ANY> is assigned.
            move <S_FIELD> to <S_ANY>.
            modify ME->T_DATA from LR_DATA index LF_INDEX.
          endif.
        endif.
      endloop.

    else.
      clear ME->T_DATA.
    endif.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method INIT_CONTAINER.

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = ME->F_CONTAINER_NAME
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

  endmethod.
  method INIT_DATA.

    data: LS_FIELDCAT type LVC_S_FCAT.
    data: LT_FIELDCAT type LVC_T_FCAT.

***--------------------------------------------------------------------------------------
*** Create ALV Table
*** Element column
    LS_FIELDCAT-FIELDNAME = 'VNAME'.
    LS_FIELDCAT-REF_TABLE = ME->C_REF_TABLE.
    LS_FIELDCAT-REF_FIELD = 'VNAME'.
    append LS_FIELDCAT to LT_FIELDCAT.

*** Value column
    LS_FIELDCAT-FIELDNAME  = ME->F_REF_FIELD.
    LS_FIELDCAT-REF_TABLE  = ME->C_REF_TABLE.
    LS_FIELDCAT-REF_FIELD  = ME->F_REF_FIELD.
    append LS_FIELDCAT to LT_FIELDCAT.

*** Description column
    LS_FIELDCAT-FIELDNAME = 'DESCR'.
    LS_FIELDCAT-REF_TABLE = ME->C_REF_TABLE.
    LS_FIELDCAT-REF_FIELD = 'DESCR'.
    append LS_FIELDCAT to LT_FIELDCAT.

*** Table
    CL_ALV_TABLE_CREATE=>CREATE_DYNAMIC_TABLE( exporting IT_FIELDCATALOG = LT_FIELDCAT
                                               importing EP_TABLE        = ME->R_DATA ).

  endmethod.
  method INIT_GRID.

    if ME->R_GRID is not bound.
      create object ME->R_GRID
        exporting
          I_PARENT          = ME->R_CONTAINER
        exceptions
          ERROR_CNTL_CREATE = 1
          ERROR_CNTL_INIT   = 2
          ERROR_CNTL_LINK   = 3
          ERROR_DP_CREATE   = 4
          others            = 5.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

***   Set Enter as Event
      ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

      set handler ME->UPDATE_CHANGED_DATA for ME->R_GRID.

***   Register F4-Fields
      ME->REGISTER_F4_FIELDS( ).

    endif.

  endmethod.
  method READ_CUSTOMIZING.

    data: LS_TC110T type ZVCXI_FRS_TC110T,
          LS_TC120T type ZVCXI_FRS_TC120T,
          LS_TC130T type ZVCXI_FFS_TC130T,
          LS_TC150T type ZVCXI_FFS_TC150T,
          LS_TC230T type ZVCXI_FFS_TC230T,
          LS_TC310T type ZVCXI_FFS_TC310T.

    clear: EF_DESCR.

    case ME->F_REF_FIELD.
      when ZCL_VCXI_FFSS_POPUP_FISTRUCT=>C_KOMP_SUPRO.
        read table T_TC130T into LS_TC130T with key SUPRO = IF_VALUE.
        check SY-SUBRC is initial.
        move LS_TC130T-DESCR to EF_DESCR.

      when ZCL_VCXI_FFSS_POPUP_FISTRUCT=>C_KOMP_TTREA.
        read table T_TC150T into LS_TC150T with key TTREA = IF_VALUE.
        check SY-SUBRC is initial.
        move LS_TC150T-DESCR to EF_DESCR.

      when ZCL_VCXI_FFSS_POPUP_FISTRUCT=>C_KOMP_TLAYR.
        read table T_TC110T into LS_TC110T with key TLAYR = IF_VALUE.
        check SY-SUBRC is initial.
        move LS_TC110T-DESCR to EF_DESCR.

      when ZCL_VCXI_FFSS_POPUP_FISTRUCT=>C_KOMP_LRCOL.
        read table T_TC120T into LS_TC120T with key LRCOL = IF_VALUE.
        check SY-SUBRC is initial.
        move LS_TC120T-DESCR to EF_DESCR.

      when ZCL_VCXI_FFSS_POPUP_FISTRUCT=>C_KOMP_TINK.
        read table T_TC230T into LS_TC230T with key TINK = IF_VALUE.
        check SY-SUBRC is initial.
        move LS_TC230T-DESCR to EF_DESCR.

      when ZCL_VCXI_FFSS_POPUP_FISTRUCT=>C_KOMP_TGLUE.
        read table T_TC310T into LS_TC310T with key TGLUE = IF_VALUE.
        check SY-SUBRC is initial.
        move LS_TC310T-DESCR to EF_DESCR.

    endcase.

  endmethod.
  method REFRESH_GRID.

*** Initialize Data
    ME->INIT_CONTAINER( ).
    ME->INIT_GRID( ).

*** Display ALV
    ME->DISPLAY_ALV( ).

  endmethod.
  method REGISTER_F4_FIELDS.

    data: LS_F4        type                   LVC_S_F4,
          LS_FCAT      type                   LVC_S_FCAT.
    data: LT_F4        type                   LVC_T_F4.

***----------------------------------------------------------------------------
*** Register F4 Help for all relevant Fields
    loop at ME->T_FIELDCAT into LS_FCAT.

***   No F4 Help at fieldcat - check explicit Field of Table
      if LS_FCAT-F4AVAILABL eq ABAP_FALSE.
        call function 'F4IF_DETERMINE_SEARCHHELP'
          exporting
            TABNAME           = LS_FCAT-DOMNAME
            FIELDNAME         = SPACE
          exceptions
            FIELD_NOT_FOUND   = 1
            NO_HELP_FOR_FIELD = 2
            INCONSISTENT_HELP = 3
            others            = 4.

        if SY-SUBRC ne 0.
          call function 'F4IF_DETERMINE_SEARCHHELP'
            exporting
              TABNAME           = LS_FCAT-REF_TABLE
              FIELDNAME         = LS_FCAT-FIELDNAME
            exceptions
              FIELD_NOT_FOUND   = 1
              NO_HELP_FOR_FIELD = 2
              INCONSISTENT_HELP = 3
              others            = 4.
        endif.

        if SY-SUBRC eq 0.
          move ABAP_TRUE to LS_FCAT-F4AVAILABL.
        endif.
      endif.

      if LS_FCAT-F4AVAILABL eq ABAP_TRUE.
***     Add to Register Table
        clear LS_F4.
        move LS_FCAT-FIELDNAME to LS_F4-FIELDNAME.
        move ABAP_TRUE         to LS_F4-REGISTER.
        move ABAP_TRUE         to LS_F4-CHNGEAFTER.
        insert LS_F4 into table LT_F4.
      endif.

    endloop.

***------------------------------------------------------------------
*** Register F4
    ME->R_GRID->REGISTER_F4_FOR_FIELDS( IT_F4 = LT_F4 ).

  endmethod.
  method SET_PF_STATUS.

    data:  LT_EXCLUDE  type table of SYUCOMM.

    set pf-status '0100' of program 'SAPLZVCXI_FFSS_POPUP_FSEDIT' excluding LT_EXCLUDE.

  endmethod.
  method START.

    data:  LR_POPUP_FSEDIT   type ref to ZCL_VCXI_FFSS_POPUP_FSEDIT.

*** Create Instance
    create object LR_POPUP_FSEDIT
      exporting
        IF_CONTAINER_NAME = IF_CONTAINER_NAME
        IF_FLDNAME        = IF_FLDNAME
        IT_VALUES         = CT_VALUES.

*** Call Popup
    call function 'ZVCXI_FFSS_POPUP_FSEDIT'
      exporting
        IR_POPUP_FSEDIT = LR_POPUP_FSEDIT.

*** Update values
    LR_POPUP_FSEDIT->UPDATE_VALUES( changing CT_VALUES = CT_VALUES ).

*** Free the Popup
    LR_POPUP_FSEDIT->DO_FREE( ).

  endmethod.
  method UPDATE_CHANGED_DATA.

    data: LF_DESCR type /VCXI/CKX_DESCR,
          LS_MOD   type LVC_S_MODI.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ANY,
                   <S_VAL2> type ANY,
                   <S_VAL3> type ANY.

    loop at ER_DATA_CHANGED->MT_MOD_CELLS into LS_MOD.

***   get DATA for display
      assign ME->R_DATA->* to <T_DATA>.

      read table <T_DATA> assigning <S_DATA> index LS_MOD-ROW_ID.
      check SY-SUBRC is initial.

      assign component 2 of structure <S_DATA> to <S_VAL2>.
      if SY-SUBRC is initial.
        move LS_MOD-VALUE to <S_VAL2>.

        ME->READ_CUSTOMIZING( exporting IF_VALUE = LS_MOD-VALUE "<S_VAL2>
                              importing EF_DESCR = LF_DESCR ).

        if LF_DESCR is not initial.
          assign component 3 of structure <S_DATA> to <S_VAL3>.
          if SY-SUBRC is initial.
            move LF_DESCR to <S_VAL3>.
          endif.
        endif.
      endif.

    endloop.

    unassign:  <T_DATA>, <S_DATA>, <S_VAL2>, <S_VAL3>.

    ME->R_GRID->REFRESH_TABLE_DISPLAY( ).

  endmethod.
  method UPDATE_VALUES.

    clear CT_VALUES.
    move ME->T_DATA to CT_VALUES.

  endmethod.
