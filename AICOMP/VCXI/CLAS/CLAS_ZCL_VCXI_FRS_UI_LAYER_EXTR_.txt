
class ZCL_VCXI_FRS_UI_LAYER_EXTR definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_LAYER_EXTR_VIS type ZVCXI_FRS_S_LAYER_EXTR_VIS .
  data R_GRID_INGR type ref to ZCL_VCXI_FRS_GRID_INGR .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_BDATA_EXTR_VIS
    importing
      !IS_LAYER_EXTR_VIS type ZVCXI_FRS_S_LAYER_EXTR_VIS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_LAYER_EXTR type ref to ZCL_VCXI_FRS_PR_LAYER_EXTR .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FRS_UI_LAYER_EXTR definition
class ZCL_VCXI_FRS_UI_LAYER_EXTR implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FRS_UI_LAYER_EXTR_BIND'
      exporting
        IR_UI_LAYER_EXTR = ME
      importing
        ES_DYNP          = ME->S_DYNP.

*** Create Grid for Ingredient
    create object ME->R_GRID_INGR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_INGR'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_LAYER_EXTR.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_INGR is bound.
      ME->R_GRID_INGR->DO_FREE( ).
      clear ME->R_GRID_INGR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data:  LF_LOCKED      type        /VCXI/CKX_LOCKED.
    data:  LR_CX_CKX      type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

*** Init GRID
    if ME->R_GRID_INGR is bound.
      move ABAP_TRUE to ME->R_GRID_INGR->F_REFRESH_REQ.
      ME->R_GRID_INGR->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_BDATA_EXTR_VIS.

***--------------------------------------------------------------------------------------
*** Set Layer Type
    if ME->S_LAYER_EXTR_VIS-TLAYR ne IS_LAYER_EXTR_VIS-TLAYR.
      ME->R_PR_LAYER_EXTR->SET_TLAYR( exporting IF_TLAYR = IS_LAYER_EXTR_VIS-TLAYR
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Layer Color
    if ME->S_LAYER_EXTR_VIS-LRCOL ne IS_LAYER_EXTR_VIS-LRCOL.
      ME->R_PR_LAYER_EXTR->SET_LRCOL( exporting IF_LRCOL = IS_LAYER_EXTR_VIS-LRCOL
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Layer Thickness
    if ME->S_LAYER_EXTR_VIS-S_LRTHI ne IS_LAYER_EXTR_VIS-S_LRTHI.
      ME->R_PR_LAYER_EXTR->SET_LRTHI( exporting IS_LRTHI = IS_LAYER_EXTR_VIS-S_LRTHI
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_INGR is bound.
      ME->R_GRID_INGR->CHECK_CHANGED_DATA( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_LAYER_EXTR.

  endmethod.
  method INIT_VIS.

    free: ME->S_LAYER_EXTR_VIS.

***--------------------------------------------------------------------------------------
*** Get Layer Type
    ME->R_PR_LAYER_EXTR->GET_TLAYR( importing EF_TLAYR        = ME->S_LAYER_EXTR_VIS-TLAYR
                                              EF_TLAYR_DESCR  = ME->S_LAYER_EXTR_VIS-TLAYR_DESCR ).

***--------------------------------------------------------------------------------------
*** Get Layer Color
    ME->R_PR_LAYER_EXTR->GET_LRCOL( importing EF_LRCOL        = ME->S_LAYER_EXTR_VIS-LRCOL
                                              EF_LRCOL_DESCR  = ME->S_LAYER_EXTR_VIS-LRCOL_DESCR ).

***--------------------------------------------------------------------------------------
*** Get Layer Thickness
    ME->R_PR_LAYER_EXTR->GET_LRTHI( importing ES_LRTHI = ME->S_LAYER_EXTR_VIS-S_LRTHI ).

***--------------------------------------------------------------------------------------
*** Get Layer Density
    ME->R_PR_LAYER_EXTR->GET_LRDEN( importing ES_LRDEN = ME->S_LAYER_EXTR_VIS-S_LRDEN ).
    move ME->S_LAYER_EXTR_VIS-LRDEN_UOM to ME->S_LAYER_EXTR_VIS-LRDEN_UOMC6.

  endmethod.
