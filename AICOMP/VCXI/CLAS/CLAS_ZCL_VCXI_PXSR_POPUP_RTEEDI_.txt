
class ZCL_VCXI_PXSR_POPUP_RTEEDI definition
  public
  inheriting from ZCL_VCXI_XCSR_POPUP_RTEEDI
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_BL_PRTE type ref to ZCL_VCXI_XCSR_BL_PRTE
      !IR_PR_RTESPV type ref to ZCL_VCXI_XCSR_PR_RTESPV
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
      !IF_LOCKED type /VCXI/CKX_LOCKED
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSR_S_RTEEDI_GRID'
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_UC_RHICO
    importing
      !IS_ROW type LVC_S_ROW
    raising
      /VCXI/CX_CKX .
  methods GET_SYSOM
    returning
      value(RF_SYSOM) type /VCXI/VKS_SYSOM
    raising
      /VCXI/CX_CKX .

  methods FILL_LINE_BY_PSTEP
    redefinition .
  methods FORWARD_COMBO_DATA_CHANGES
    redefinition .
  methods HANDLE_HOTSPOT_CLICK
    redefinition .
  methods REFRESH_FIELDCAT
    redefinition .
  methods REFRESH_STYLE
    redefinition .
  methods TRANSFER_CHANGES
    redefinition .
  methods UPDATE_BL_PRTE
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSR_POPUP_RTEEDI definition
class ZCL_VCXI_PXSR_POPUP_RTEEDI implementation.
method CONSTRUCTOR.

  call method SUPER->CONSTRUCTOR
    exporting
      IR_BL_PRTE   = IR_BL_PRTE
      IR_PR_RTESPV = IR_PR_RTESPV
      IR_APPDATA   = IR_APPDATA
      IF_LOCKED    = IF_LOCKED
      IF_TABNAME   = IF_TABNAME.

endmethod.
  method FILL_LINE_BY_PSTEP.

    data:  LS_RTEEDI_GRID       type          ZVCXI_PXSR_S_RTEEDI_GRID.


***--------------------------------------------------------------------------------------
*** Fill Super Data
    SUPER->FILL_LINE_BY_PSTEP( exporting IR_RTE_PSTEP = IR_RTE_PSTEP
                               changing  CS_DATA      = CS_DATA ).

    move-corresponding CS_DATA to LS_RTEEDI_GRID.

***--------------------------------------------------------------------------------------
*** PC Direction and Handling Option of Production Step
    if IR_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_PCDIR.
      LS_RTEEDI_GRID-PCDIR = cast ZIF_VCXI_PXSR_PCDIR( IR_RTE_PSTEP->R_BLOBJ )->F_PCDIR.
      LS_RTEEDI_GRID-PCDOP = cast ZIF_VCXI_PXSR_PCDIR( IR_RTE_PSTEP->R_BLOBJ )->F_PCDOP.
    endif.

*** Roll Handling of last Production Step per Work Center
    if IR_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_RHNDL and
       ME->GET_COMBO( IF_INDEX = SY-TABIX + 1 ) ne ABAP_TRUE.
***   Icon for Roll Handling Popup
      LS_RTEEDI_GRID-RHICO = ICON_MODIFY.
    endif.

***--------------------------------------------------------------------------------------
    move-corresponding LS_RTEEDI_GRID to CS_DATA.

  endmethod.
  method FORWARD_COMBO_DATA_CHANGES.

    data: LF_PCDIR type ZVCXI_P0SP_PCDIR,
          LF_INDEX type I.
    data: LS_MODI        type LVC_S_MODI,
          LS_RTEEDI_GRID type ZVCXI_PXSR_S_RTEEDI_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ANY.


***--------------------------------------------------------------------------------------
*** Call Super Implemenation
    SUPER->FORWARD_COMBO_DATA_CHANGES( IT_GOOD_CELLS = IT_GOOD_CELLS ).

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
*** Process updated PC Direction
    loop at IT_GOOD_CELLS into LS_MODI where FIELDNAME eq 'PCDIR'.

***   Find updated Entry
      read table <T_DATA> assigning <S_DATA> index LS_MODI-ROW_ID.
      check SY-SUBRC eq 0.
      move-corresponding <S_DATA> to LS_RTEEDI_GRID.

***   Buffer PC Direction
      move LS_RTEEDI_GRID-PCDIR to LF_PCDIR.

***   Update Combined
      LF_INDEX = LS_MODI-ROW_ID + 1.
      loop at <T_DATA> assigning <S_DATA> from LF_INDEX.
        move-corresponding <S_DATA> to LS_RTEEDI_GRID.
        if LS_RTEEDI_GRID-COMBO ne ABAP_TRUE.
          exit.
        else.
          if LS_RTEEDI_GRID-PCDOP ne ZIF_VCXI_PXSR_PCDIR=>C_PCDOP_MANDATORY.
            move LF_PCDIR to LS_RTEEDI_GRID-PCDIR.
          endif.
        endif.
        move-corresponding LS_RTEEDI_GRID to <S_DATA>.
      endloop.
    endloop.

  endmethod.
  method GET_SYSOM.

    data: LR_CUPRFL  type ref to /VCXI/CL_VKSC_CUPRFL.

*** Get Instance of Configuration Profile
    LR_CUPRFL = /VCXI/CL_VKSC_CUPRFL=>GET_INSTANCE_BY_CMPRK( IS_CMPRK = ME->R_APPDATA->S_CMPRK ).
    check LR_CUPRFL is bound.

*** Get System of Measurement for production step plant
    RF_SYSOM = LR_CUPRFL->GET_SYSOM_BY_WERKS( IF_WERKS = ME->R_APPDATA->F_WERKS ).

  endmethod.
  method HANDLE_HOTSPOT_CLICK.

*** Call Super
    SUPER->HANDLE_HOTSPOT_CLICK( E_ROW_ID    = E_ROW_ID
                                 E_COLUMN_ID = E_COLUMN_ID
                                 ES_ROW_NO   = ES_ROW_NO ).

    try.
        case E_COLUMN_ID-FIELDNAME.
          when 'RHICO'.
            ME->HANDLE_UC_RHICO( IS_ROW = E_ROW_ID ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_RHICO.

    data: LS_RTEEDI_GRID type ZVCXI_PXSR_S_RTEEDI_GRID.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Get table line
    read table <T_DATA> assigning <S_DATA> index IS_ROW-INDEX.
    check SY-SUBRC eq 0.
    move-corresponding <S_DATA> to LS_RTEEDI_GRID.

*** Find Work Center
    loop at ME->R_BL_PRTE_NEW->R_RTE_PRTE->T_RTE_ARBPL into LR_RTE_ARBPL.
      read table LR_RTE_ARBPL->T_RTE_PSTEP with key TABLE_LINE = LS_RTEEDI_GRID-R_RTE_PSTEP
                                           transporting no fields.
      if SY-SUBRC eq 0.
        exit.
      else.
        clear LR_RTE_ARBPL.
      endif.
    endloop.
    check LR_RTE_ARBPL is bound.

*** Call Popup
    ZCL_VCXI_PXSR_POPUP_RHNDL=>START( IR_RTE_ARBPL = LR_RTE_ARBPL
                                      IF_LOCKED    = ME->F_LOCKED
                                      IF_SYSOM     = ME->GET_SYSOM( ) ).

*** Update Production Route
    ME->UPDATE_BL_PRTE( ).

*** Check Production Route
    ME->R_BL_PRTE_NEW->CHECK( ).

  endmethod.
  method REFRESH_FIELDCAT.

    data: LF_PCDIR type ABAP_BOOL,
          LF_RHNDL type ABAP_BOOL.
    data: LS_RTEEDI_GRID type ZVCXI_PXSR_S_RTEEDI_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


    SUPER->REFRESH_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_RTEEDI_GRID.

***   PC Direction
      if LS_RTEEDI_GRID-R_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_PCDIR.
        LF_PCDIR = ABAP_TRUE.
      endif.

***   Roll Handling
      if LS_RTEEDI_GRID-R_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_RHNDL.
        LF_RHNDL = ABAP_TRUE.
      endif.
    endloop.

***--------------------------------------------------------------------------------------
*** Change Field catalog attributes
    loop at ME->T_FCAT assigning field-symbol(<S_FCAT>).
      case <S_FCAT>-FIELDNAME.

***     PC Direction
        when 'PCDIR'.
          <S_FCAT>-NO_OUT  = switch #( LF_PCDIR when ABAP_TRUE then ABAP_FALSE else ABAP_TRUE ).
          if ME->F_LOCKED eq ABAP_TRUE.
            move ABAP_TRUE     to <S_FCAT>-EDIT.
          endif.
***     PC Direction Handling Option
        when 'PCDOP'.
          <S_FCAT>-NO_OUT  = switch #( LF_PCDIR when ABAP_TRUE then ABAP_FALSE else ABAP_TRUE ).

***     Roll Handling Button
        when 'RHICO'.
          <S_FCAT>-NO_OUT  = switch #( LF_RHNDL when ABAP_TRUE then ABAP_FALSE else ABAP_TRUE ).
          <S_FCAT>-ICON    = ABAP_TRUE.
          <S_FCAT>-HOTSPOT = ABAP_TRUE.
          <S_FCAT>-JUST    = 'C'.    "Align Center

      endcase.
    endloop.

  endmethod.
  method REFRESH_STYLE.

    data: LS_RTEEDI_GRID  type ZVCXI_PXSR_S_RTEEDI_GRID.
    data: LT_STYLE        type table of LVC_S_STYL.
    data: LR_PCDIR        type ref to   ZIF_VCXI_PXSR_PCDIR.
    field-symbols: <T_DATA>  type standard table,
                   <S_DATA>  type          ANY,
                   <S_STYLE> type          LVC_S_STYL.

    SUPER->REFRESH_STYLE( ).

***----------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Update Style
    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_RTEEDI_GRID.
      move LS_RTEEDI_GRID-TSTYL   to LT_STYLE.

***--------------------------------------------------------------------------------------
***   PC Direction
      try.
          move LS_RTEEDI_GRID-R_RTE_PSTEP->R_BLOBJ ?to LR_PCDIR.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PCDIR.
      endtry.

      append initial line to LT_STYLE assigning <S_STYLE>.
      move 'PCDIR'                                 to <S_STYLE>-FIELDNAME.
      if LR_PCDIR             is bound and
         LS_RTEEDI_GRID-COMBO ne ABAP_TRUE and
         LS_RTEEDI_GRID-PCDOP ne ZIF_VCXI_PXSR_PCDIR=>C_PCDOP_MANDATORY.
        add CL_GUI_ALV_GRID=>MC_STYLE_ENABLED      to <S_STYLE>-STYLE.
      else.
        move CL_GUI_ALV_GRID=>MC_STYLE_DISABLED    to <S_STYLE>-STYLE.
      endif.

***----------------------------------------------------------------------------
***   Roll Handling Icon
      append initial line to LT_STYLE assigning <S_STYLE>.
      move 'RHICO'                                 to <S_STYLE>-FIELDNAME.
      if LS_RTEEDI_GRID-RHICO is not initial.
        add CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT      to <S_STYLE>-STYLE.
      else.
        add CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO   to <S_STYLE>-STYLE.
      endif.

***--------------------------------------------------------------------------------------
***   Update Style Table
      move LT_STYLE to LS_RTEEDI_GRID-TSTYL.
      move-corresponding LS_RTEEDI_GRID to <S_DATA>.

    endloop.

  endmethod.
  method TRANSFER_CHANGES.

    data: LF_PCDIR type ZVCXI_P0SP_PCDIR.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL.


*** Super
    SUPER->TRANSFER_CHANGES( ).

***--------------------------------------------------------------------------------------
*** Adjust PC Direction of Material Flow In
    loop at ME->R_BL_PRTE_NEW->R_RTE_PRTE->T_RTE_ARBPL into LR_RTE_ARBPL.
      try.
***       Get PC Direction of Work Center
          LF_PCDIR = cast ZCL_VCXI_PXSR_BL_PRTE( ME->R_BL_PRTE_NEW )->GET_PCDIR_BY_RTE_ARBPL( IR_RTE_ARBPL = LR_RTE_ARBPL ).
          exit.
        catch /VCXI/CX_CKX.
          clear LF_PCDIR.
      endtry.
    endloop.
    cast ZCL_VCXI_PXSR_BL_PRTE( ME->R_BL_PRTE_ORG )->SET_PCDIR_OF_MFI( IF_PCDIR = LF_PCDIR ).

  endmethod.
  method UPDATE_BL_PRTE.

    data: LF_INDEX type I,
          LF_PCDIR type ZVCXI_P0SP_PCDIR.
    data: LS_RTEEDI_GRID   type ZVCXI_PXSR_S_RTEEDI_GRID.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL,
          LR_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP,
          LR_PCDIR     type ref to ZIF_VCXI_PXSR_PCDIR,
          LR_BL_PRTE   type ref to ZCL_VCXI_PXSR_BL_PRTE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

***--------------------------------------------------------------------------------------
*** Run Super Implementation
    SUPER->UPDATE_BL_PRTE( ).

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Set PC Direction
    clear LF_INDEX.
    loop at ME->R_BL_PRTE_NEW->R_RTE_PRTE->T_RTE_ARBPL into LR_RTE_ARBPL.
      loop at LR_RTE_ARBPL->T_RTE_PSTEP into LR_RTE_PSTEP.
        add 1 to LF_INDEX.

        read table <T_DATA> assigning <S_DATA> index LF_INDEX.
        if SY-SUBRC eq 0.
          move-corresponding <S_DATA> to LS_RTEEDI_GRID.

          try.
              move LR_RTE_PSTEP->R_BLOBJ ?to LR_PCDIR.
              if LR_PCDIR is bound.
                LR_PCDIR->SET_PCDIR( IF_PCDIR = LS_RTEEDI_GRID-PCDIR ).
              endif.
            catch CX_SY_MOVE_CAST_ERROR.
              continue.
          endtry.

        endif.
      endloop.

***   Get first PC Direction of Work Center
      if LF_PCDIR is initial.
        LF_PCDIR = cast ZCL_VCXI_PXSR_BL_PRTE( ME->R_BL_PRTE_NEW )->GET_PCDIR_BY_RTE_ARBPL( IR_RTE_ARBPL = LR_RTE_ARBPL ).
      endif.
    endloop.

***--------------------------------------------------------------------------------------
*** Adjust PC Direction of Material Flow In
    cast ZCL_VCXI_PXSR_BL_PRTE( ME->R_BL_PRTE_NEW )->SET_PCDIR_OF_MFI( IF_PCDIR = LF_PCDIR ).

***--------------------------------------------------------------------------------------
*** Update Roll Handling for complete Route
    try.
        move ME->R_BL_PRTE_NEW ?to LR_BL_PRTE.
        check LR_BL_PRTE is bound.

        LR_BL_PRTE->UPDATE_RHNDL( ).
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

  endmethod.
