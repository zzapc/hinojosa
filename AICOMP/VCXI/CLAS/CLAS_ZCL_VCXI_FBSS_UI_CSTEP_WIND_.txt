
class ZCL_VCXI_FBSS_UI_CSTEP_WIND definition
  public
  inheriting from ZCL_VCXI_FBSS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_WIND_VIS type ZVCXI_FBSS_S_CSTEP_WIND_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_MS_WNMAT type ref to ZCL_VCXI_FBSS_GRID_MS_WNMAT .
  data R_PR_CSTEP_WIND type ref to ZCL_VCXI_FBSS_PR_CSTEP_WIND .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSS_UI_CSTEP_WIND definition
class ZCL_VCXI_FBSS_UI_CSTEP_WIND implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_FBSS_UI_CSTEP_WIND_BIND'
      exporting
        IR_UI_CSTEP_WIND = ME
      importing
        ES_DYNP          = ME->S_DYNP.

***--------------------------------------------------------------------------------------
*** Create Grid for Winding Materials
    create object ME->R_GRID_MS_WNMAT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_MS_WNMAT'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_WIND.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_MS_WNMAT is bound.
      ME->R_GRID_MS_WNMAT->DO_FREE( ).
      clear ME->R_GRID_MS_WNMAT.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        loop at screen.
***       Roll Diameter changeable if Override Flag is set
          if SCREEN-GROUP1 eq 'ORD'.
            if ME->S_CSTEP_WIND_VIS-FOVRR_RLDIA eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Grid
    if ME->R_GRID_MS_WNMAT is bound.
      ME->R_GRID_MS_WNMAT->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_MS_WNMAT->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_CSTEP_WIND_VIS type ZVCXI_FBSS_S_CSTEP_WIND_VIS.


*** Call SUPER
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).

    check ME->R_PR_CSTEP_WIND is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_CSTEP_WIND_VIS.

***--------------------------------------------------------------------------------------
*** Winding Mandrel
    if ME->S_CSTEP_WIND_VIS-S_WMDRL ne LS_CSTEP_WIND_VIS-S_WMDRL.
      ME->R_PR_CSTEP_WIND->SET_WMDRL( IS_WMDRL = LS_CSTEP_WIND_VIS-S_WMDRL
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Update Roll Diameter if it is "Overriden"
    ME->S_CSTEP_WIND_VIS-S_RLDIA = ME->R_PR_CSTEP_WIND->GET_RLDIA( importing EF_FOVRR = ME->S_CSTEP_WIND_VIS-FOVRR_RLDIA ).
    if ME->S_CSTEP_WIND_VIS-FOVRR_RLDIA eq ABAP_TRUE and
       ME->S_CSTEP_WIND_VIS-S_RLDIA ne LS_CSTEP_WIND_VIS-S_RLDIA.
      ME->R_PR_CSTEP_WIND->SET_RLDIA( IS_RLDIA = LS_CSTEP_WIND_VIS-S_RLDIA
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Roll Diameter
    if ME->S_CSTEP_WIND_VIS-FOVRR_RLDIA ne LS_CSTEP_WIND_VIS-FOVRR_RLDIA.
      ME->R_PR_CSTEP_WIND->SET_RLDIA( IF_FOVRR = LS_CSTEP_WIND_VIS-FOVRR_RLDIA ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Process Changes in Grid
    if ME->R_GRID_MS_WNMAT is bound.
      ME->R_GRID_MS_WNMAT->CHECK_CHANGED_DATA( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_WIND.

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    move ME->S_CSTEP_VIS to ME->S_CSTEP_WIND_VIS-S_CSTEP_VIS.

    check ME->R_PR_CSTEP_WIND is bound.

*** Bag/Roll
    ME->S_CSTEP_WIND_VIS-BGPRL = ME->R_PR_CSTEP_WIND->GET_BGPRL( ).

*** Winding Mandrel
    ME->S_CSTEP_WIND_VIS-S_WMDRL = ME->R_PR_CSTEP_WIND->GET_WMDRL( ).

*** Roll Diameter
    ME->S_CSTEP_WIND_VIS-S_RLDIA = ME->R_PR_CSTEP_WIND->GET_RLDIA( importing EF_FOVRR = ME->S_CSTEP_WIND_VIS-FOVRR_RLDIA ).

  endmethod.
