
class ZCL_VCXI_P4SS_UI_SPLR definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_CURSOR type SCRFNAME read-only .
  data S_SPLR_VIS type ZVCXI_P4SS_S_SPLR_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_SPLR type ref to ZCL_VCXI_P4SS_PR_SPLR .
  data R_GRID_PSCALE type ref to ZCL_VCXI_XCS_GRID_PSCALE .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P4SS_UI_SPLR definition
class ZCL_VCXI_P4SS_UI_SPLR implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P4SS_UI_SPLR_BIND'
      exporting
        IR_UI_SPLR = ME
      importing
        ES_DYNP    = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_SPLR.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Price Scale Grid
    if ME->R_GRID_PSCALE is bound.
      ME->R_GRID_PSCALE->DO_FREE( ).
      clear ME->R_GRID_PSCALE.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_PURCH  type ZVCXI_XCS_PURCH.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).
        LF_PURCH  = ME->R_PR_SPLR->GET_PURCH( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Fields for Direct Procurement and Price
          if LF_PURCH ne ZCL_VCXI_P4SS_PR_PRFG=>C_PURCH_DIRECT_PRICE and
             SCREEN-GROUP1 eq 'DPP'.
            SCREEN-INPUT  = 0.
            SCREEN-ACTIVE = 0.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Refresh Price Scale Grid
    if ME->R_PR_SPLR->GET_PURCH( ) eq ZCL_VCXI_P4SS_PR_PRFG=>C_PURCH_DIRECT_PRICE.
***   Create Grid for Price Scale
      if ME->R_GRID_PSCALE is not bound.
        create object ME->R_GRID_PSCALE
          exporting
            IR_GATE           = ME->R_GATE
            IR_UIGATE         = ME->R_UIGATE
            IF_CONTAINER_NAME = '0110CC_PSCALE'.
      endif.
***   Refresh Grid
      ME->R_GRID_PSCALE->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_PSCALE->REFRESH_GRID( ).
    else.
      if ME->R_GRID_PSCALE is bound.
        ME->R_GRID_PSCALE->DO_FREE( ).
        clear ME->R_GRID_PSCALE.
      endif.
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_SPLR_VIS type ZVCXI_P4SS_S_SPLR_VIS.


    check ME->R_PR_SPLR is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_SPLR_VIS.

***--------------------------------------------------------------------------------------
*** Set Vendor
    if ME->S_SPLR_VIS-LIFNR ne LS_SPLR_VIS-LIFNR.
      ME->R_PR_SPLR->SET_LIFNR( IF_LIFNR = LS_SPLR_VIS-LIFNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Number Used by Supplier
    if ME->S_SPLR_VIS-IDNLF ne LS_SPLR_VIS-IDNLF.
      ME->R_PR_SPLR->SET_IDNLF( IF_IDNLF = LS_SPLR_VIS-IDNLF
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Purchase Order Unit of Measure
    if ME->S_SPLR_VIS-BSTME ne LS_SPLR_VIS-BSTME.
      ME->R_PR_SPLR->SET_BSTME( IF_BSTME = LS_SPLR_VIS-BSTME
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_SPLR_VIS-UMBSZ ne LS_SPLR_VIS-UMBSZ.
      ME->R_PR_SPLR->SET_UMBSZ( IF_UMBSZ = LS_SPLR_VIS-UMBSZ
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_SPLR_VIS-UMBSN ne LS_SPLR_VIS-UMBSN.
      ME->R_PR_SPLR->SET_UMBSN( IF_UMBSN = LS_SPLR_VIS-UMBSN
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_SPLR.

  endmethod.
  method INIT_VIS.

    check ME->R_PR_SPLR is bound.
    free: ME->S_SPLR_VIS.


***--------------------------------------------------------------------------------------
*** Get Vendor
    ME->S_SPLR_VIS-LIFNR = ME->R_PR_SPLR->GET_LIFNR( importing EF_NAME1 = ME->S_SPLR_VIS-NAME1 ).

*** Material Number Used by Supplier
    ME->S_SPLR_VIS-IDNLF = ME->R_PR_SPLR->GET_IDNLF( ).

*** Purchase Order Unit of Measure
    ME->S_SPLR_VIS-BSTME = ME->R_PR_SPLR->GET_BSTME( ).
    ME->S_SPLR_VIS-UMBSZ = ME->R_PR_SPLR->GET_UMBSZ( importing EF_UMBSZ_UOM = ME->S_SPLR_VIS-UMBSZ_UOM ).
    ME->S_SPLR_VIS-UMBSN = ME->R_PR_SPLR->GET_UMBSN( importing EF_UMBSN_UOM = ME->S_SPLR_VIS-UMBSN_UOM ).

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
