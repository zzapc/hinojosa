
class ZCL_VCXI_FFSS_ND_CSTEP_SLIT definition
  public
  inheriting from ZCL_VCXI_F0SS_ND_CSTEP
  create public .

public section.
protected section.

  methods INIT_NODE
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_ND_CSTEP_SLIT definition
class ZCL_VCXI_FFSS_ND_CSTEP_SLIT implementation.
  method INIT_NODE.

    data:           LF_NOOUT            type        ZVCXI_XCS_NOOUT.
    data:           LS_TRWID            type        ZVCXI_F0S_S_TRWID.
    data:           LR_SLIT             type ref to ZCL_VCXI_FFSS_PR_CSTEP_SLIT.
    field-symbols:  <S_NVAL>            type        YS_NVALS.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->INIT_NODE( ).

***--------------------------------------------------------------------------------------
*** Check Input Gate is Slitting
    try.
        move ME->R_GATE->R_CLSPR ?to LR_SLIT.
      catch CX_SY_MOVE_CAST_ERROR.
        clear LR_SLIT.
    endtry.

    check LR_SLIT is bound.

*** Set Number of Outs
    append initial line to ME->T_NVALS assigning <S_NVAL>.
    <S_NVAL>-FL   = 2.
    move text-D01 to <S_NVAL>-VAL.

    append initial line to ME->T_NVALS assigning <S_NVAL>.
    <S_NVAL>-FL   = 3.
    LR_SLIT->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).
    move LF_NOOUT to <S_NVAL>-VAL.

*** Set Trim on Width
    append initial line to ME->T_NVALS assigning <S_NVAL>.
    <S_NVAL>-FL   = 4.
    move text-D02 to <S_NVAL>-VAL.

    append initial line to ME->T_NVALS assigning <S_NVAL>.
    <S_NVAL>-FL   = 5.
    LR_SLIT->GET_TRWID( importing ES_TRWID = LS_TRWID ).
    <S_NVAL>-VAL = ME->CONV_ANY_TO_VAL( IF_VALUE = LS_TRWID-TRWID
                                        IF_UOM   = LS_TRWID-TRWID_UOM ).

  endmethod.
endclass. "ZCL_VCXI_FFSS_ND_CSTEP_SLIT definition
endclass. "ZCL_VCXI_FFSS_ND_CSTEP_SLIT implementation
