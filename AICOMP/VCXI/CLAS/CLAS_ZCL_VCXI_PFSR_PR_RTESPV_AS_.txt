
class ZCL_VCXI_PFSR_PR_RTESPV_AS definition
  public
  inheriting from ZCL_VCXI_P0SR_PR_RTESPV_AS
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV optional
    raising
      /VCXI/CX_CKX .
  methods GET_PF_COMP_RTESEL
    returning
      value(RT_COMP_RTESEL) type ZVCXI_PFSR_TT_COMP_RTESEL
    raising
      /VCXI/CX_CKX .

  methods FILL_PROD
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_PFSR_PR_RTESPV_AS definition
class ZCL_VCXI_PFSR_PR_RTESPV_AS implementation.
  method CONSTRUCTOR.

    data:  LR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV.

*** Use or create the BL Routing Supervisor
    if IR_BL_RTESPV is bound.
      move IR_BL_RTESPV to LR_BL_RTESPV.
    else.
      create object LR_BL_RTESPV
        type
        ZCL_VCXI_PFSR_BL_RTESPV
        exporting
          IR_GATE = IR_GATE.
    endif.

*** Call Super
    call method SUPER->CONSTRUCTOR
      exporting
        IR_GATE      = IR_GATE
        IR_BL_RTESPV = LR_BL_RTESPV.

  endmethod.
method FILL_PROD.

  data:  LS_EXQTY        type        /VCXI/VKCR_S_EXQTY.
  data:  LT_CPM_RTESEL   type        ZVCXI_P0SR_TT_CPM_RTESEL,
         LT_COMP_RTESEL  type        ZVCXI_PFSR_TT_COMP_RTESEL.
  data:  LR_BL_RTESPV    type ref to ZCL_VCXI_PFSR_BL_RTESPV,
         LR_RTEFIL       type ref to ZCL_VCXI_XCSR_BL_PRTE.

  check ME->R_BL_RTESPV is bound.

  if ME->R_PR_RTESPV_HL is not bound.
*** Get Explosion Quantity
    move ME->GET_EXQTY( )   to LS_EXQTY.

***----------------------------------------------------------------------------
*** Refresh Auto
    ME->REFRESH_AUTO( ).
    ME->R_GATE->RAISE_EVENTS( ).

    if ME->R_RTESEL is not bound.
***   No Selected Route defined.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCSR'
                                            IF_MSGNO = '310' ).
    endif.

*** Get Selected Route of Configured Packaging Material
    LT_CPM_RTESEL = ME->GET_CPM_RTESEL( ).

*** Get Selected Route of Component
    LT_COMP_RTESEL = ME->GET_PF_COMP_RTESEL( ).


***----------------------------------------------------------------------------
*** Copy Selected Route to Filled Route
    move ME->R_RTESEL->COPY( ) to LR_RTEFIL.

    move ME->R_BL_RTESPV ?to LR_BL_RTESPV.
    LR_BL_RTESPV->SET_PF_BL_PRTE_AS( IR_BL_PRTE     = LR_RTEFIL
                                     IT_CPM_RTESEL  = LT_CPM_RTESEL
                                     IT_COMP_RTESEL = LT_COMP_RTESEL
                                     IS_EXQTY       = LS_EXQTY ).

    raise event PROD_FILLED exporting IR_BL_PRTE = LR_RTEFIL.

  else.
***----------------------------------------------------------------------------
*** Use Higher Level
    ME->R_PR_RTESPV_HL->FILL_PROD( ).
  endif.

endmethod.
  method GET_PF_COMP_RTESEL.

    data: LF_PPASS type        N length 2,
          LF_COMP  type        N length 2.
    data: LT_GATE_COMP_AS type        /VCXI/VKSR_TT_GATE,
          LT_GATE_RTESPV  type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE_COMP_AS type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_COMP_AS   type ref to ZCL_VCXI_P0SS_PR_COMP_AS,
          LR_GATE_RTESPV  type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_RTESPV    type ref to ZCL_VCXI_PFSR_PR_RTESPV.
    field-symbols: <S_COMP_RTESEL> type        ZVCXI_PFSR_S_COMP_RTESEL,
                   <S_LAMI_RTESEL> type        ZVCXI_P0SR_S_LAMI_RTESEL.

***------------------------------------------------------------------------------------------------
*** Find Provider for Component of AS
    LT_GATE_COMP_AS = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_AS=>C_IPRVT_P0_COMP_AS
                                             IF_INUSE  = ABAP_TRUE
                                             IF_SORTED = ABAP_TRUE ).
    check LT_GATE_COMP_AS is not initial.

*** Find Provider for Routing Supervisor of Components
    LT_GATE_RTESPV = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SR_PR_RTESPV=>C_IPRVT_P0_RTESPV
                                            IF_INUSE = ABAP_TRUE ).
    check LT_GATE_RTESPV is not initial.

***------------------------------------------------------------------------------------------------
*** Loop at Components
    loop at LT_GATE_COMP_AS into LR_GATE_COMP_AS.
      try.
          move LR_GATE_COMP_AS->R_CLSPR ?to LR_PR_COMP_AS.
          check LR_PR_COMP_AS is bound.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

      append initial line to RT_COMP_RTESEL assigning <S_COMP_RTESEL>.
      move LR_GATE_COMP_AS             to <S_COMP_RTESEL>-R_GATE_COMP_AS.
      move LR_PR_COMP_AS->GET_PPASS( ) to <S_COMP_RTESEL>-PPASS.

***   Get Routing Supervisor
      loop at LT_GATE_RTESPV into LR_GATE_RTESPV.
        check LR_GATE_RTESPV->IS_IN_LINE( IR_GATE = LR_GATE_COMP_AS ) eq ABAP_TRUE.

        try.
            move LR_GATE_RTESPV->R_CLSPR ?to LR_PR_RTESPV.
            check LR_PR_RTESPV is bound.
          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.

***     Refresh Auto and get Selected Route
        LR_PR_RTESPV->REFRESH_AUTO( ).
        ME->R_GATE->RAISE_EVENTS( ).
        move LR_PR_RTESPV->R_RTESEL to <S_COMP_RTESEL>-R_RTESEL_CB.

        if LR_PR_RTESPV->R_RTESEL is not bound.
***       No Selected Route defined.
          /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                                IF_MSGID = 'ZVCXI_XCSR'
                                                IF_MSGNO = '310' ).
        endif.

***     Get Selected Route of UCB
        <S_COMP_RTESEL>-R_RTESEL_UCB = LR_PR_RTESPV->GET_UCB_RTESEL( ).

***     Get Selected Route of Laminating
        <S_COMP_RTESEL>-T_LAMI_RTESEL = LR_PR_RTESPV->GET_LAMI_RTESEL( ).

      endloop.
    endloop.

    sort RT_COMP_RTESEL by PPASS.

***------------------------------------------------------------------------------------------------
*** Set MF X-Connect
    loop at RT_COMP_RTESEL assigning <S_COMP_RTESEL>.
      if <S_COMP_RTESEL>-PPASS ne LF_PPASS.
        clear LF_COMP.
      endif.

***   Generate MF X-Connect
      move <S_COMP_RTESEL>-PPASS to LF_PPASS.
      add  1                     to LF_COMP.
      concatenate 'OP_J' LF_PPASS '_C' LF_COMP into <S_COMP_RTESEL>-IMFXC.

      loop at <S_COMP_RTESEL>-T_LAMI_RTESEL assigning <S_LAMI_RTESEL>.
        concatenate LF_COMP '_' <S_LAMI_RTESEL>-IMFXC into <S_LAMI_RTESEL>-IMFXC.
      endloop.
    endloop.

  endmethod.
endclass. "ZCL_VCXI_PFSR_PR_RTESPV_AS implementation
