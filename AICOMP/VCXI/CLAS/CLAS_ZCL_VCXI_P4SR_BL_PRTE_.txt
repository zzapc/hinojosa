
class ZCL_VCXI_P4SR_BL_PRTE definition
  public
  inheriting from ZCL_VCXI_PXSR_BL_PRTE
  create public .

public section.

  methods GET_SPVRE_MFMI
    redefinition .
protected section.

  constants C_IMATY_QUANTIY type /VCXI/VSMC_IMATY value 'PC_MA_QUANTITY' ##NO_TEXT.
private section.
endclass. "ZCL_VCXI_P4SR_BL_PRTE definition
class ZCL_VCXI_P4SR_BL_PRTE implementation.
  method GET_SPVRE_MFMI.

    data: LS_MC_PROC type ZVCXI_P4SR_S_MC_PROC.
    data: LR_SPVRE_MC_PROC type ref to /VCXI/CL_VKSR_SPVRE.
    field-symbols: <T_MFMI> type standard table,
                   <S_MFMI> type          ANY.

    check ME->R_MFMI is bound.
    assign ME->R_MFMI->* to <T_MFMI>.

    loop at <T_MFMI> assigning <S_MFMI>.
      move-corresponding <S_MFMI> to LS_MC_PROC.

***--------------------------------------------------------------------------------------
***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_PROC
        exporting
          IR_SPVCE  = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_PROC_P'
                                               IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE )
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MC_PROC to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_PROC->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
***   Set Leading Object
      LR_SPVRE_MC_PROC->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MC_PROC-MATNR
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Plant
      LR_SPVRE_MC_PROC->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P4SP_PR_MC_PROC=>C_PARID_WERKS
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                       ATWRT = LS_MC_PROC-WERKS
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Set Text
      LR_SPVRE_MC_PROC->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P4SP_PR_MC_PROC=>C_PARID_TEXT
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                       ATWRT = LS_MC_PROC-TEXT
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Set Procurement Option
      LR_SPVRE_MC_PROC->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P4SP_PR_MC_PROC=>C_PARID_PURCH
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                       ATWRT = LS_MC_PROC-PURCH
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Vendor Number
      LR_SPVRE_MC_PROC->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P4SP_PR_MC_PROC=>C_PARID_LIFNR
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                       ATWRT = LS_MC_PROC-LIFNR
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***--------------------------------------------------------------------------------------
***   Add Price Scale Manager
      IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MC_PROC
                                              IT_PSCALE       = LS_MC_PROC-T_PSCALE
                                    changing  CT_SPVRE        = CT_SPVRE ).
    endloop.

  endmethod.
endclass. "ZCL_VCXI_P4SR_BL_PRTE implementation
