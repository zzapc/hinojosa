
class ZCL_VCXI_XCUR_G100 definition
  public
  inheriting from ZCL_VCXI_XCM_STP_G000
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_RPSEG type ref to /VCXI/CL_CKMR_RPSEG
    raising
      /VCXI/CX_CKX .
protected section.

  data R_DCO_INPUT type ref to ZCL_VCXI_XCUR_DCO_MUROB .
  data R_DCO_OUTPUT type ref to ZCL_VCXI_XCUR_DCO_MUROB .

  methods GET_SUBPROCESS_DCO
    redefinition .
  methods ANALYZE_RESULT_DCO
    redefinition .
private section.
endclass. "ZCL_VCXI_XCUR_G100 definition
class ZCL_VCXI_XCUR_G100 implementation.
  method ANALYZE_RESULT_DCO.
  endmethod.
  method CONSTRUCTOR.

*** Super Constructor
    SUPER->CONSTRUCTOR( IR_RPSEG = IR_RPSEG ).

*** Map DCO to Required Input/Output
    ME->R_RPSEG->MAP_DCO( changing CR_DCO = ME->R_DCO_INPUT ).
    ME->R_RPSEG->MAP_DCO( changing CR_DCO = ME->R_DCO_OUTPUT ).

  endmethod.
  method GET_SUBPROCESS_DCO.

    data:   LF_XMLDC            type        /VCXI/CKMR_XMLDC.


*** Only create sub-process for Sales Documents
    check ME->R_DCO_INPUT->S_MUROB-VBELN is not initial and
          ME->R_DCO_INPUT->S_MUROB-POSNR is not initial.

*** Only create sub-process if an update is needed
    if ME->R_DCO_INPUT->R_IDAT_SVC is not bound or
       ME->R_DCO_INPUT->R_IDAT_SVC->T_SVCEL is initial.
***   No Update of Configuration identified.
      ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCUR'
                                       IF_MSGTY = 'I'
                                       IF_MSGNO = '410' ).
      exit.
    endif.

*** Copy DCO by Serialize-Deserialize
    LF_XMLDC = ME->R_DCO_INPUT->SERIALIZE( ).
    RR_DCO = /VCXI/CL_CKMR_CLDCO=>DESERIALIZE( IF_XMLDC = LF_XMLDC ).

  endmethod.
endclass. "ZCL_VCXI_XCUR_G100 implementation
