
class ZCL_VCXI_P2SS_UI_SSTEP_DCUT definition
  public
  inheriting from ZCL_VCXI_P2SS_UI_SSTEP
  create public .

public section.

  data S_SSTEP_DCUT_VIS type ZVCXI_P2SS_S_SSTEP_DCUT_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_SCORE_AP type ref to ZCL_VCXI_PXSS_GRID_SCORE_AP .
  data R_PR_SSTEP_DCUT type ref to ZCL_VCXI_P2SS_PR_SSTEP_DCUT .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SS_UI_SSTEP_DCUT definition
class ZCL_VCXI_P2SS_UI_SSTEP_DCUT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P2SS_UI_SSTEP_DCUT_BIND'
      exporting
        IR_UI_SSTEP_DCUT = ME
      importing
        ES_DYNP          = ME->S_DYNP.


***--------------------------------------------------------------------------------------
*** Create Grid for GRID_SCORE
    create object ME->R_GRID_SCORE_AP
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_SCORE_AP'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_SSTEP_DCUT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_SCORE_AP is bound.
      ME->R_GRID_SCORE_AP->DO_FREE( ).
      clear ME->R_GRID_SCORE_AP.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_TOOL_RELEASED type ABAP_BOOL.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***     Is Tool Released
        ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_DCTTN( importing EF_RELEA = LF_TOOL_RELEASED ).

        loop at screen.
***       Hide Tool Description Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_DCTTD' and
             ME->S_SSTEP_DCUT_VIS-FOVRR_DCTTD eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Disable Tool Description if generated
          if SCREEN-NAME cp '*-DCTTD' and
             ME->S_SSTEP_DCUT_VIS-FOVRR_DCTTD eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.
***       Disable Tool Desciption for existing Tools
          if ME->S_SSTEP_DCUT_VIS-DCTTN is not initial.
            if SCREEN-NAME cp '*-DCTTD'.
              SCREEN-INPUT      = 0.
              SCREEN-DISPLAY_3D = 0.
            endif.
            if SCREEN-NAME cp '*-FOVRR_DCTTD'.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Disable fields if tool is released
          if SCREEN-GROUP2 eq 'TIR' and
             LF_TOOL_RELEASED eq ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize GRID
    if ME->R_GRID_SCORE_AP is bound.
      ME->R_GRID_SCORE_AP->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_SCORE_AP->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_SSTEP_DCUT_VIS type ZVCXI_P2SS_S_SSTEP_DCUT_VIS.


*** Call SUPER
    SUPER->DO_UPDATE_VIS( IS_SSTEP_VIS = IS_SSTEP_VIS ).

    check ME->R_PR_SSTEP_DCUT is bound.

*** "Cast" Vis Structure
    move-corresponding IS_SSTEP_VIS to LS_SSTEP_DCUT_VIS.

***--------------------------------------------------------------------------------------
*** Set Die Cut Type
    if ME->S_SSTEP_DCUT_VIS-TDCUT ne LS_SSTEP_DCUT_VIS-TDCUT.
      ME->R_PR_SSTEP_DCUT->SET_TDCUT( IF_TDCUT = LS_SSTEP_DCUT_VIS-TDCUT
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Die Cut Tool Number
    if ME->S_SSTEP_DCUT_VIS-DCTTN ne LS_SSTEP_DCUT_VIS-DCTTN.
      ME->R_PR_SSTEP_DCUT->SET_DCTTN( IF_DCTTN = LS_SSTEP_DCUT_VIS-DCTTN
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Die Cut Tool Description
    if ME->S_SSTEP_DCUT_VIS-DCTTD        ne LS_SSTEP_DCUT_VIS-DCTTD or
       ME->S_SSTEP_DCUT_VIS-FOVRR_DCTTD  ne LS_SSTEP_DCUT_VIS-FOVRR_DCTTD.
      if LS_SSTEP_DCUT_VIS-FOVRR_DCTTD ne ABAP_FALSE.
        ME->R_PR_SSTEP_DCUT->SET_DCTTD( IF_DCTTD = LS_SSTEP_DCUT_VIS-DCTTD
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_SSTEP_DCUT->SET_DCTTD( IF_DCTTD = LS_SSTEP_DCUT_VIS-DCTTD
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Sheet Direction
    if ME->S_SSTEP_DCUT_VIS-SHTDI ne LS_SSTEP_DCUT_VIS-SHTDI.
      ME->R_PR_SSTEP_DCUT->SET_SHTDI( IF_SHTDI = LS_SSTEP_DCUT_VIS-SHTDI
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Rule Length
    if ME->S_SSTEP_DCUT_VIS-S_RULEN ne LS_SSTEP_DCUT_VIS-S_RULEN.
      ME->R_PR_SSTEP_DCUT->SET_RULEN( IS_RULEN = LS_SSTEP_DCUT_VIS-S_RULEN
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Trim on Width (Total)
    if ME->S_SSTEP_DCUT_VIS-S_TRWIT ne LS_SSTEP_DCUT_VIS-S_TRWIT.
      ME->R_PR_SSTEP_DCUT->SET_TRWIT( IS_TRWIT = LS_SSTEP_DCUT_VIS-S_TRWIT
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim on Length (Total)
    if ME->S_SSTEP_DCUT_VIS-S_TRLET ne LS_SSTEP_DCUT_VIS-S_TRLET.
      ME->R_PR_SSTEP_DCUT->SET_TRLET( IS_TRLET = LS_SSTEP_DCUT_VIS-S_TRLET
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


*** Set Net Sheet Width
    if ME->S_SSTEP_DCUT_VIS-S_SHTNW ne LS_SSTEP_DCUT_VIS-S_SHTNW.
      ME->R_PR_SSTEP_DCUT->SET_SHTNW( IS_SHTNW = LS_SSTEP_DCUT_VIS-S_SHTNW
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Net Sheet Length
    if ME->S_SSTEP_DCUT_VIS-S_SHTNL ne LS_SSTEP_DCUT_VIS-S_SHTNL.
      ME->R_PR_SSTEP_DCUT->SET_SHTNL( IS_SHTNL = LS_SSTEP_DCUT_VIS-S_SHTNL
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


***--------------------------------------------------------------------------------------
*** Set Trim Left
    if ME->S_SSTEP_DCUT_VIS-S_TRLEF ne LS_SSTEP_DCUT_VIS-S_TRLEF.
      ME->R_PR_SSTEP_DCUT->SET_TRLEF( IS_TRLEF = LS_SSTEP_DCUT_VIS-S_TRLEF
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim Right
    if ME->S_SSTEP_DCUT_VIS-S_TRRIG ne LS_SSTEP_DCUT_VIS-S_TRRIG.
      ME->R_PR_SSTEP_DCUT->SET_TRRIG( IS_TRRIG = LS_SSTEP_DCUT_VIS-S_TRRIG
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim Top
    if ME->S_SSTEP_DCUT_VIS-S_TRTOP ne LS_SSTEP_DCUT_VIS-S_TRTOP.
      ME->R_PR_SSTEP_DCUT->SET_TRTOP( IS_TRTOP = LS_SSTEP_DCUT_VIS-S_TRTOP
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim Bottom
    if ME->S_SSTEP_DCUT_VIS-S_TRBOT ne LS_SSTEP_DCUT_VIS-S_TRBOT.
      ME->R_PR_SSTEP_DCUT->SET_TRBOT( IS_TRBOT = LS_SSTEP_DCUT_VIS-S_TRBOT
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endmethod.
  method DO_USER_COMMAND.

    if ME->R_GRID_SCORE_AP is bound.
      ME->R_GRID_SCORE_AP->CHECK_CHANGED_DATA( ).
    endif.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_SSTEP_DCUT.

  endmethod.
  method INIT_VIS.

    data: LR_CUST_TOOL_DCT  type ref to ZCL_VCXI_PXSS_CUST_TOOL_DCT.


    SUPER->INIT_VIS( ).
    free: ME->S_SSTEP_DCUT_VIS.

***--------------------------------------------------------------------------------------
*** Die Cut Tool Number
    ME->S_SSTEP_DCUT_VIS-DCTTN = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_DCTTN( importing ER_CUST_TOOL_DCT = LR_CUST_TOOL_DCT ).

*** Get Tool Status Icon based on Release Status
    ME->S_SSTEP_DCUT_VIS-DCTTN_ICON = cond #( when LR_CUST_TOOL_DCT is not bound                 then SPACE
                                              when LR_CUST_TOOL_DCT->IS_RELEASED( ) eq ABAP_TRUE then ICON_CONNECT
                                                                                                 else ICON_DISCONNECT ).
*** Die Cut Tool Description
    ME->S_SSTEP_DCUT_VIS-DCTTD = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_DCTTD( importing EF_FOVRR = ME->S_SSTEP_DCUT_VIS-FOVRR_DCTTD ).

***--------------------------------------------------------------------------------------
*** Die Cut Type
    ME->S_SSTEP_DCUT_VIS-TDCUT = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TDCUT( ).

*** Sheet Direction
    ME->S_SSTEP_DCUT_VIS-SHTDI = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_SHTDI( ).

*** Rule Length
    ME->S_SSTEP_DCUT_VIS-S_RULEN = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_RULEN( ).

***--------------------------------------------------------------------------------------
*** Trim on Width (Total)
    ME->S_SSTEP_DCUT_VIS-S_TRWIT = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TRWIT( ).

*** Trim on Length (Total)
    ME->S_SSTEP_DCUT_VIS-S_TRLET = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TRLET( ).


*** Net Sheet Width
    ME->S_SSTEP_DCUT_VIS-S_SHTNW = ME->R_PR_SSTEP_DCUT->GET_SHTNW( ).

*** Net Sheet Length
    ME->S_SSTEP_DCUT_VIS-S_SHTNL = ME->R_PR_SSTEP_DCUT->GET_SHTNL( ).

***--------------------------------------------------------------------------------------
*** Trim Left
    ME->S_SSTEP_DCUT_VIS-S_TRLEF = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TRLEF( ).

*** Trim Right
    ME->S_SSTEP_DCUT_VIS-S_TRRIG = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TRRIG( ).

*** Trim Top
    ME->S_SSTEP_DCUT_VIS-S_TRTOP = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TRTOP( ).

*** Trim Bottom
    ME->S_SSTEP_DCUT_VIS-S_TRBOT = ME->R_PR_SSTEP_DCUT->ZIF_VCXI_PXSS_DCUT~GET_TRBOT( ).

  endmethod.
