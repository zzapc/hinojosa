
class ZCL_VCXI_FFSS_PR_CSTEP_GUFOL definition
  public
  inheriting from ZCL_VCXI_FFSS_PR_CSTEP
  create public .

public section.

  constants C_PARID_GULEF type /VCXI/VKS_PARID value 'ZVCXI_F0_GULEF' ##NO_TEXT.
  constants C_PARID_GURIG type /VCXI/VKS_PARID value 'ZVCXI_F0_GURIG' ##NO_TEXT.

  methods GET_GULEF
    exporting
      !ES_GULEF type ZVCXI_F0S_S_GULEF
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_GULEF
    importing
      !IS_GULEF type ZVCXI_F0S_S_GULEF
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_GURIG
    exporting
      !ES_GURIG type ZVCXI_F0S_S_GURIG
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_GURIG
    importing
      !IS_GURIG type ZVCXI_F0S_S_GURIG
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CA:C'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_IEVNT_O_GULEF_CHANGED type /VCXI/VKSC_IEVNT value 'GULEF_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_GURIG_CHANGED type /VCXI/VKSC_IEVNT value 'GURIG_CHANGED' ##NO_TEXT.

  methods CHECK_FGUAL
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_GULEF
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_GURIG
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSS_PR_CSTEP_GUFOL definition
class ZCL_VCXI_FFSS_PR_CSTEP_GUFOL implementation.
  method CHECK_FGUAL.
*** 0 Gusset Is Allowed.
*** 1 Gusset Is Not Allowed.

    data: LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

    move 0 to RF_RETURN.

***--------------------------------------------------------------------------------------
*** Get Customizing Data
    ME->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).

    if LR_BL_FIFPROP->IS_FGUAL( ) eq ABAP_FALSE.
      move 1 to RF_RETURN.
    endif.

  endmethod.
  method CHECK_GULEF.
*** 0 Left Gusset Width is maintained.
*** 1 Left Gusset Width is not maintained.
*** 2 Left Gusset is maintained, but not valid

    data: LS_FIWID     type ZVCXI_F0S_S_FIWID,
          LS_GULEF     type ZVCXI_F0S_S_GULEF,
          LS_GURIG     type ZVCXI_F0S_S_GURIG,
          LS_GULEF_MAX type ZVCXI_F0S_S_GULEF.


***--------------------------------------------------------------------------------------
*** Get Values
    ME->ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID( importing ES_FIWID = LS_FIWID ).
    ME->GET_GULEF( importing ES_GULEF = LS_GULEF ).
    ME->GET_GURIG( importing ES_GURIG = LS_GURIG ).


***--------------------------------------------------------------------------------------
*** Start Positive
    move 0 to RF_RETURN.

*** Left Gusset Width is not maintained.
    if LS_GULEF-GULEF is initial.
      move 1 to RF_RETURN.
      exit.
    endif.

*** Max Left Gusset = ( Film Width - ( Right Gusset * 2 ) ) / 4
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIWID-FIWID
                                                        IF_CALCV_UOM_1 = LS_FIWID-FIWID_UOM
                                                        IF_CALCV_2     = LS_GURIG-GURIG * 2
                                                        IF_CALCV_UOM_2 = LS_GURIG-GURIG_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                        IF_UOM         = LS_GULEF-GULEF_UOM
                                              importing EF_CALCV       = LS_GULEF_MAX-GULEF
                                                        EF_CALCV_UOM   = LS_GULEF_MAX-GULEF_UOM ).
    LS_GULEF_MAX-GULEF = LS_GULEF_MAX-GULEF / 4.

*** Left Gusset is maintained, but not valid
    if LS_GULEF-GULEF gt LS_GULEF_MAX-GULEF.
      move 2 to RF_RETURN.
      exit.
    endif.

  endmethod.
  method CHECK_GURIG.
*** 0 Right Gusset Width is maintained.
*** 1 Right Gusset Width is not maintained.
*** 2 Right Gusset is maintained, but not valid

    data: LS_FIWID     type ZVCXI_F0S_S_FIWID,
          LS_GURIG     type ZVCXI_F0S_S_GURIG,
          LS_GULEF     type ZVCXI_F0S_S_GULEF,
          LS_GURIG_MAX type ZVCXI_F0S_S_GURIG.


***--------------------------------------------------------------------------------------
*** Get Values
    ME->ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID( importing ES_FIWID = LS_FIWID ).
    ME->GET_GURIG( importing ES_GURIG = LS_GURIG ).
    ME->GET_GULEF( importing ES_GULEF = LS_GULEF ).


***--------------------------------------------------------------------------------------
*** Start Positive
    move 0 to RF_RETURN.

*** Right Gusset Width is not maintained.
    if LS_GURIG-GURIG is initial.
      move 1 to RF_RETURN.
      exit.
    endif.

*** Max Right Gusset = ( Film Width - ( Left Gusset * 2 ) ) / 4
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIWID-FIWID
                                                        IF_CALCV_UOM_1 = LS_FIWID-FIWID_UOM
                                                        IF_CALCV_2     = LS_GULEF-GULEF * 2
                                                        IF_CALCV_UOM_2 = LS_GULEF-GULEF_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                        IF_UOM         = LS_GURIG-GURIG_UOM
                                              importing EF_CALCV       = LS_GURIG_MAX-GURIG
                                                        EF_CALCV_UOM   = LS_GURIG_MAX-GURIG_UOM ).
    LS_GURIG_MAX-GURIG = LS_GURIG_MAX-GURIG / 4.

*** Right Gusset is maintained, but not valid
    if LS_GURIG-GURIG gt LS_GURIG_MAX-GURIG.
      move 2 to RF_RETURN.
      exit.
    endif.

  endmethod.
  method GET_GULEF.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GULEF ).

    move LS_PARAM-ATFLV to ES_GULEF-GULEF.
    move LS_PARAM-UNIT  to ES_GULEF-GULEF_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_GURIG.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GURIG ).

    move LS_PARAM-ATFLV to ES_GURIG-GURIG.
    move LS_PARAM-UNIT  to ES_GURIG-GURIG_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

    data: LF_NO_GULEF type ABAP_BOOL.

***--------------------------------------------------------------------------------------
*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check Left Gusset Width
    case ME->CHECK_GULEF( ).
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
        move ABAP_TRUE to LF_NO_GULEF.
      when 2.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.

*** Check Right Gusset Width
    case ME->CHECK_GURIG( ).
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
***     At least one Gusset Width must be maintained
        if LF_NO_GULEF eq ABAP_TRUE.
          RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                         IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
        endif.
      when 2.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.


***--------------------------------------------------------------------------------------
*** Check if Gusset is allowed
    if ME->CHECK_FGUAL( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

  endmethod.
  method GET_STATUS_MSG.

    data: LF_NO_GULEF type ABAP_BOOL.

***--------------------------------------------------------------------------------------
*** Super Status Messages
    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***--------------------------------------------------------------------------------------
*** Check Left Gusset Width
    case ME->CHECK_GULEF( ).
      when 0.
***     Left Gusset is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '341' ).
      when 1.
        move ABAP_TRUE to LF_NO_GULEF.
      when 2.
***     Left Gusset is maintained, but not valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '346' ).
    endcase.

*** Check Right Gusset Width
    case ME->CHECK_GURIG( ).
      when 0.
***     Right Gusset is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '342' ).
      when 1.
        if LF_NO_GULEF eq ABAP_TRUE.
***       No Gusset is maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '343' ).
        endif.
      when 2.
***     Right Gusset is maintained, but not valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '347' ).
    endcase.

***--------------------------------------------------------------------------------------
*** Check Gusset is Allowed
    if ME->CHECK_FGUAL( ) eq 0.
***   Gusset is allowed based on customizing.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '344' ).
    else.
***   Gusset is not allowed based on customizing.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '345' ).
    endif.

  endmethod.
  method SET_GULEF.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GULEF ).

    move IS_GULEF-GULEF      to LS_PARAM-ATFLV.
    move IS_GULEF-GULEF_UOM  to LS_PARAM-UNIT.
    move IF_SETBY            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_GULEF_CHANGED ).
    endif.

  endmethod.
  method SET_GURIG.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GURIG ).

    move IS_GURIG-GURIG      to LS_PARAM-ATFLV.
    move IS_GURIG-GURIG_UOM  to LS_PARAM-UNIT.
    move IF_SETBY            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_GURIG_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX.

    data: LS_GULEF type ZVCXI_F0S_S_GULEF,
          LS_GURIG type ZVCXI_F0S_S_GURIG.


    SUPER->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing EF_FIFPX      = EF_FIFPX
                                                        EF_SETBY      = EF_SETBY
                                                        ER_BL_FIFPROP = ER_BL_FIFPROP ).
    check ER_BL_FIFPROP is bound.

***--------------------------------------------------------------------------------------
*** Left Gusset Width
    ME->GET_GULEF( importing ES_GULEF = LS_GULEF ).
    ER_BL_FIFPROP->SET_GULEF( IS_GULEF = LS_GULEF ).

*** Get Right Gusset Width
    ME->GET_GURIG( importing ES_GURIG = LS_GURIG ).
    ER_BL_FIFPROP->SET_GURIG( IS_GURIG = LS_GURIG ).

***--------------------------------------------------------------------------------------
*** Get new Film Forward Property XML
    EF_FIFPX = ER_BL_FIFPROP->GET_FIFPX( ).

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR      = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON       = 'sap-icon://screen-split-three'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
