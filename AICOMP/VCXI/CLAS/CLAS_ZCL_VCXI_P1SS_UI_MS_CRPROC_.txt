
class ZCL_VCXI_P1SS_UI_MS_CRPROC definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_MS_XPROC
  create public .

public section.

  data C_UC_LOAD_BOARD type SYUCOMM value 'LOAD_BOARD' ##NO_TEXT.
  data S_MS_CRPROC_VIS type ZVCXI_P1SS_S_MS_CRPROC_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0101S_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_CPROP_OUT type SYUCOMM value 'CPROP_OUT' ##NO_TEXT.
  constants C_UC_SCSTR_OUT type SYUCOMM value 'SCSTR_OUT' ##NO_TEXT.
  data R_GRID_PRINT_COM type ref to ZCL_VCXI_PXSS_GRID_PRINT_COM .
  data R_PR_MS_CRPROC type ref to ZCL_VCXI_P1SS_PR_MS_CRPROC .

  methods HANDLE_UC_LOAD_BOARD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CPROP
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SCSTR
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_MS_CRPROC definition
class ZCL_VCXI_P1SS_UI_MS_CRPROC implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_MS_CRPROC_BIND'
      exporting
        IR_UI_MS_CRPROC = ME
      importing
        ES_DYNP         = ME->S_DYNP.

***--------------------------------------------------------------------------------------
*** Create Grid for Print
    create object ME->R_GRID_PRINT_COM
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_PRINT_COM'
        IR_PRINT_COM      = ME->R_PR_MS_CRPROC.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_CRPROC.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Price Scale Grid
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->DO_FREE( ).
      clear ME->R_GRID_PRINT_COM.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        loop at screen.
***       Handling Dimension changeable if Override Flag is set
          if SCREEN-GROUP1 eq 'OHD'.
            if ME->S_MS_CRPROC_VIS-FOVRR_HNDDIM ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Grid
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_PRINT_COM->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_MS_CRPROC_VIS type ZVCXI_P1SS_S_MS_CRPROC_VIS.


*** Call SUPER
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_MS_CRPROC is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_MS_CRPROC_VIS.

***--------------------------------------------------------------------------------------
*** Set Sales Board ID
    if ME->S_MS_CRPROC_VIS-SABOA ne LS_MS_CRPROC_VIS-SABOA.
      ME->R_PR_MS_CRPROC->SET_SABOA( IF_SABOA = LS_MS_CRPROC_VIS-SABOA
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Production Board ID
    if ME->S_MS_CRPROC_VIS-PRBOA ne LS_MS_CRPROC_VIS-PRBOA.
      ME->R_PR_MS_CRPROC->SET_PRBOA( IF_PRBOA = LS_MS_CRPROC_VIS-PRBOA
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flute
    if ME->S_MS_CRPROC_VIS-FLUTE ne LS_MS_CRPROC_VIS-FLUTE.
      ME->R_PR_MS_CRPROC->SET_FLUTE( IF_FLUTE = LS_MS_CRPROC_VIS-FLUTE
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Caliper
    if ME->S_MS_CRPROC_VIS-S_CALIP ne LS_MS_CRPROC_VIS-S_CALIP.
      ME->R_PR_MS_CRPROC->SET_CALIP( IS_CALIP = LS_MS_CRPROC_VIS-S_CALIP
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Surface Weight
    if ME->S_MS_CRPROC_VIS-S_SURWT ne LS_MS_CRPROC_VIS-S_SURWT.
      ME->R_PR_MS_CRPROC->SET_SURWT( IS_SURWT = LS_MS_CRPROC_VIS-S_SURWT
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Additional Weight
    if ME->S_MS_CRPROC_VIS-S_ADDWT ne LS_MS_CRPROC_VIS-S_ADDWT.
      ME->R_PR_MS_CRPROC->SET_ADDWT( IS_ADDWT = LS_MS_CRPROC_VIS-S_ADDWT
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Handling Dimension if it is "Overriden"
    if ME->S_MS_CRPROC_VIS-FOVRR_HNDDIM eq ABAP_TRUE and
       ME->S_MS_CRPROC_VIS-S_HNDDIM ne LS_MS_CRPROC_VIS-S_HNDDIM.
      ME->R_PR_MS_CRPROC->SET_HNDDIM( IS_HNDDIM = LS_MS_CRPROC_VIS-S_HNDDIM
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Handling Dimension
    if ME->S_MS_CRPROC_VIS-FOVRR_HNDDIM ne LS_MS_CRPROC_VIS-FOVRR_HNDDIM.
      ME->R_PR_MS_CRPROC->SET_HNDDIM( IF_FOVRR = LS_MS_CRPROC_VIS-FOVRR_HNDDIM ).
    endif.


  endmethod.
  method DO_USER_COMMAND.

    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->CHECK_CHANGED_DATA( ).
    endif.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_LOAD_BOARD.
        ME->HANDLE_UC_LOAD_BOARD( ).

***   Corrugation Property Popup
      when C_UC_CPROP_OUT.
        ME->HANDLE_UC_CPROP( exporting IF_UCOMM = IF_UCOMM  ).
***   Scores String Popup
      when C_UC_SCSTR_OUT.
        ME->HANDLE_UC_SCSTR( exporting IF_UCOMM = IF_UCOMM ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MS_CRPROC.

  endmethod.
  method HANDLE_UC_CPROP.

    data: LS_SURWT type ZVCXI_PXS_S_SURWT.
    data: LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP,
          LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.


*** Get Corrugator Property (Outbound)
    LR_BL_CRBPROP = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( ).
    LR_BL_CRFPROP = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( ).
    LS_SURWT = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT( ).

*** Start Popup
    ZCL_VCXI_P1SS_POPUP_CRPROP=>START( IR_BL_CRBPROP = LR_BL_CRBPROP
                                       IR_BL_CRFPROP = LR_BL_CRFPROP
                                       IF_WERKS      = ME->R_PR_MS_CRPROC->GET_WERKS( )
                                       IS_SURWT      = LS_SURWT ).

  endmethod.
  method HANDLE_UC_LOAD_BOARD.

    data: LF_BOARD type ZVCXI_PCS_BOARD,
          LF_MBOAR type ZVCXI_PCSS_MBOAR,
          LF_WERKS type WERKS_D.

***--------------------------------------------------------------------------------------
*** Call Search Help
    ZCL_VCXI_PCSS_CUST_BOARD=>SHLP_LOAD_BOARD( exporting IF_DCONF  = ME->R_GATE->GET_APPDATA( )->F_DCONF
                                                         IF_LOCKED = ME->R_GATE->IS_LOCKED( )
                                               importing EF_BOARD  = LF_BOARD
                                                         EF_MBOAR  = LF_MBOAR
                                                         EF_WERKS  = LF_WERKS ).

*** Load the selected Board
    check LF_BOARD is not initial and
          LF_MBOAR is not initial.
    ME->R_PR_MS_CRPROC->LOAD_BOARD( IF_BOARD = LF_BOARD
                                    IF_WERKS = LF_WERKS
                                    IF_MBOAR = LF_MBOAR ).

  endmethod.
  method HANDLE_UC_SCSTR.

    data: LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP.


*** Get Score String (Outbound)
    LR_BL_CRBPROP = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( ).
    check LR_BL_CRBPROP is bound.

*** Start Popup
    ZCL_VCXI_PXSS_POPUP_SCSTR=>START( IT_SCORE_COM = LR_BL_CRBPROP->T_SCORE
                                      IT_TAPE_COM  = LR_BL_CRBPROP->T_TAPE_COM ).

  endmethod.
  method INIT_VIS.

    data: LT_SCORE_COM  type ZVCXI_PXSS_TT_SCORE_COM.
    data: LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.


    SUPER->INIT_VIS( ).

    free: ME->S_MS_CRPROC_VIS.
    ME->S_MS_CRPROC_VIS-S_MS_XPROC_VIS = ME->S_MS_XPROC_VIS.

***--------------------------------------------------------------------------------------
*** Sales and Production Board
    ME->S_MS_CRPROC_VIS-SABOA = ME->R_PR_MS_CRPROC->GET_SABOA( ).
    ME->S_MS_CRPROC_VIS-PRBOA = ME->R_PR_MS_CRPROC->GET_PRBOA( ).

*** Flute
    ME->S_MS_CRPROC_VIS-FLUTE = ME->R_PR_MS_CRPROC->GET_FLUTE( ).

*** Caliper
    ME->S_MS_CRPROC_VIS-S_CALIP = ME->R_PR_MS_CRPROC->GET_CALIP( ).

*** Surface Weight
    ME->S_MS_CRPROC_VIS-S_SURWT = ME->R_PR_MS_CRPROC->GET_SURWT( ).

*** Additional Weight
    ME->S_MS_CRPROC_VIS-S_ADDWT = ME->R_PR_MS_CRPROC->GET_ADDWT( ).

*** Procuremnt Sheet Size and Score Strings
    LT_SCORE_COM = ME->R_PR_MS_CRPROC->GET_SCORES( importing ES_PRSLE = ME->S_MS_CRPROC_VIS-S_PRSLE
                                                             ES_PRSWI = ME->S_MS_CRPROC_VIS-S_PRSWI ).
    ME->S_MS_CRPROC_VIS-SSTRL = ZCL_VCXI_PXSS_BL_SCORE=>GET_SCSTR_COM( IT_SCORE_COM = LT_SCORE_COM
                                                                       IF_DIMEN     = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_LENGTH ).
    ME->S_MS_CRPROC_VIS-SSTRC = ZCL_VCXI_PXSS_BL_SCORE=>GET_SCSTR_COM( IT_SCORE_COM = LT_SCORE_COM
*                                                                       IT_TAPE_COM  = ME->R_PR_MS_CRPROC->GET_TAPES( )
                                                                       IF_DIMEN     = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_WIDTH ).


*** Handling Dimension
    ME->S_MS_CRPROC_VIS-S_HNDDIM = ME->R_PR_MS_CRPROC->GET_HNDDIM( importing EF_FOVRR = ME->S_MS_CRPROC_VIS-FOVRR_HNDDIM ).

***--------------------------------------------------------------------------------------
*** Get Sheet Dimension (Outbound)
    ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_SHTDIM( importing ES_SHTLE = ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-S_SHTLE
                                                                      ES_SHTWI = ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-S_SHTWI ).

*** Number Ups (Outbound)
    ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-NOUPS = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_NOUPS( ).

*** Surface Weight (Outbound)
    ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-S_SURWT = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT( ).

*** Get Caliper and Flute (Outbound)
    LR_BL_CRFPROP = ME->R_PR_MS_CRPROC->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( ).
    if LR_BL_CRFPROP is bound.
      ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-FLUTE   = LR_BL_CRFPROP->GET_FLUTE( importing EF_DESCR = ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-FLUTE_DESCR ).
      ME->S_MS_CRPROC_VIS-S_IOSEC_OUT-S_CALIP = LR_BL_CRFPROP->S_CALIP.
    endif.

  endmethod.
