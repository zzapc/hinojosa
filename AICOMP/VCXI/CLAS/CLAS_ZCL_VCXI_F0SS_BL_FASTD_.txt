
class ZCL_VCXI_F0SS_BL_FASTD definition
  public
  create public .

public section.

  constants C_SFDAT_NONSTANDARD type ZVCXI_F0SS_SFDAT value 'N' ##NO_TEXT.
  constants C_SFDAT_STANDARD type ZVCXI_F0SS_SFDAT value 'S' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_ID_BY_IPRVT
    importing
      !IF_IPRVT type /VCXI/VKSC_IPRVT
    returning
      value(RF_ID) type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_BUFFER,
           TABIX             type        I,
           R_SPVRE_FCOMP_IN  type ref to /VCXI/CL_VKSR_SPVRE,
           R_SPVRE_FCOMP_OUT type ref to /VCXI/CL_VKSR_SPVRE,
         end of YS_BUFFER .
  types:
    YT_BUFFER type table of YS_BUFFER with default key .
  types:
    begin of YS_XCON_SPVRE,
           R_SPVRE_XCONO type ref to /VCXI/CL_VKSR_SPVRE,
           R_SPVRE_XCONI type ref to /VCXI/CL_VKSR_SPVRE,
         end of   YS_XCON_SPVRE .
  types:
    YT_XCON_SPVRE type table of YS_XCON_SPVRE with default key .

  data T_SPVCE type /VCXI/CKX_TT_OBJECT .
  data R_GATE type ref to /VCXI/CL_VKSR_GATE .
  class-data T_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF .

  methods ADD_SPVRE_BY_GATE
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IF_COPY_CHILDREN type ABAP_BOOL
    exporting
      !ER_SPVRE type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods CREATE_XCON
    importing
      !IT_XCON_SPVRE type YT_XCON_SPVRE
    raising
      /VCXI/CX_CKX .
  methods COPY_FROM_GATE
    importing
      !IR_SPVRE type ref to /VCXI/CL_VKSR_SPVRE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE
    importing
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IF_ID type /VCXI/CKX_ID
    exporting
      !ER_SPVRE type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SOV
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_SOV type ref to ZCL_VCXI_F0SS_PR_SOV
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_BY_SPVRE
    importing
      !IR_SPVRE type ref to /VCXI/CL_VKSR_SPVRE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_GATE) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_SPVCE
    importing
      !IF_ID type /VCXI/CKX_ID
      !IR_SPVCE_PARENT type ref to /VCXI/CL_VKSC_SPVCE
    returning
      value(RR_SPVCE) type ref to /VCXI/CL_VKSC_SPVCE
    raising
      /VCXI/CX_CKX .
  methods GET_SPVRE
    importing
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE optional
      !IF_ID type /VCXI/CKX_ID
      !IT_SPVRE type /VCXI/VKSR_TT_SPVRE optional
    exporting
      !ER_SPVRE type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE optional
    raising
      /VCXI/CX_CKX .
  methods GET_SPVRE_BY_GATE
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_SPVRE type /VCXI/VKSR_TT_SPVRE
    returning
      value(RR_SPVRE) type ref to /VCXI/CL_VKSR_SPVRE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_F0SS_BL_FASTD definition
class ZCL_VCXI_F0SS_BL_FASTD implementation.
method ADD_SPVRE.

  data:  LF_ID_PARENT type        /VCXI/CKX_ID.
  data:  LR_SPVCE     type ref to /VCXI/CL_VKSC_SPVCE.

  clear ER_SPVRE.

*** Get Parent Customizing Element if bound
  if IR_SPVRE_PARENT is bound.
    move IR_SPVRE_PARENT->R_SPVCE to LR_SPVCE.
  endif.

*** Get Customizing Element
  LR_SPVCE = ME->GET_SPVCE( IF_ID           = IF_ID
                            IR_SPVCE_PARENT = LR_SPVCE ).

*** Create
  create object ER_SPVRE
    exporting
      IR_SPVCE  = LR_SPVCE
      IR_PARENT = IR_SPVRE_PARENT.
  append ER_SPVRE to CT_SPVRE.

*** Set InUse
  ER_SPVRE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

endmethod.
  method ADD_SPVRE_BY_GATE.

    data: LS_PRVDR_DEF   type /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_PRVDR_DEF  type /VCXI/VKSR_TT_PRVDR_DEF,
          LT_GATE       type /VCXI/VKSR_TT_GATE,
          LT_GATE_CHILD type /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Add Runtime Element based on ID of Gate
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = IR_SPVRE_PARENT
                             IF_ID           = IR_GATE->F_ID
                   importing ER_SPVRE        = ER_SPVRE
                   changing  CT_SPVRE        = CT_SPVRE ).

*** Copy values from Gate
    ME->COPY_FROM_GATE( IR_GATE  = IR_GATE
                        IR_SPVRE = ER_SPVRE ).


***--------------------------------------------------------------------------------------
    if IF_COPY_CHILDREN eq ABAP_TRUE.
***   Get Child Provider
      LT_PRVDR_DEF = IR_GATE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
      loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
        LT_GATE = IR_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                      IF_INUSE = ABAP_TRUE ).
        loop at LT_GATE into LR_GATE.
          read table LT_GATE_CHILD with key TABLE_LINE = LR_GATE
                                   transporting no fields.
          if SY-SUBRC ne 0.
            append LR_GATE to LT_GATE_CHILD.
          endif.
        endloop.
      endloop.
      IR_GATE->SORT_GATE( changing CT_GATE = LT_GATE_CHILD ).

***   Copy Children
      loop at LT_GATE_CHILD into LR_GATE.
        ME->ADD_SPVRE_BY_GATE( exporting IR_GATE          = LR_GATE
                                         IR_SPVRE_PARENT  = ER_SPVRE
                                         IF_COPY_CHILDREN = IF_COPY_CHILDREN
                               changing  CT_SPVRE         = CT_SPVRE ).
      endloop.
    endif.

  endmethod.
method CONSTRUCTOR.

***--------------------------------------------------------------------------------------
*** Buffer Gate for which the BL Instance was created
  move IR_GATE to ME->R_GATE.

*** Get Supervised Customizing Elements
  ME->T_SPVCE = ME->R_GATE->GET_SPVCE( ).
  if ME->T_SPVCE is initial.
*** No Supervised Cust.Element are defined - check SmartVC Customizing.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                          IF_MSGID = 'ZVCXI_F0SS'
                                          IF_MSGNO = '105' ).
  endif.

*** Get Provider Type Definitions
  ME->T_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( ).

endmethod.
  method COPY_FROM_GATE.

    data: LS_LEOKY type        /VCXI/VKSR_S_LEOKY,
          LS_PARAM type        /VCXI/VKSR_S_PARAM.
    data: LT_PARAM type        /VCXI/VKSR_TT_PARAM.

*** Copy Leading Object
    move IR_GATE->GET_LEOKY( ) to LS_LEOKY.
    IR_SPVRE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

*** Get all superviable Parameter
    LT_PARAM = IR_GATE->GET_PARAM_ALL( IF_PARSP = ABAP_TRUE ).

*** Copy Parameter
    loop at LT_PARAM into LS_PARAM.
      IR_SPVRE->SET_PARAM( IS_PARAM = LS_PARAM ).
    endloop.

  endmethod.
  method CREATE_XCON.

    data: LS_XCON_SPVRE type YS_XCON_SPVRE.
    data: LT_PRVDR type /VCXI/VKSR_TT_GATE,
          LT_XCONR type ZVCXI_F0SS_TT_XCONR.
    data: LR_PR_SOV type ref to ZCL_VCXI_F0SS_PR_SOV.
    field-symbols: <S_XCONR> type ZVCXI_F0SS_S_XCONR.


***--------------------------------------------------------------------------------------
*** Get Specification Overview
    ME->GET_PRVDR_SOV( importing ER_PR_SOV = LR_PR_SOV ).
    check LR_PR_SOV is bound.

*** Get all Provider after Supervisor
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

*** Get current Connections
    move LR_PR_SOV->GET_XCONR( ) to LT_XCONR.

***--------------------------------------------------------------------------------------
*** Define new Connections
    loop at IT_XCON_SPVRE into LS_XCON_SPVRE.
      append initial line to LT_XCONR assigning <S_XCONR>.
      <S_XCONR>-R_GATE_OUT = ME->GET_GATE_BY_SPVRE( IR_SPVRE = LS_XCON_SPVRE-R_SPVRE_XCONO
                                                    IT_PRVDR = LT_PRVDR ).
      <S_XCONR>-R_GATE_IN  = ME->GET_GATE_BY_SPVRE( IR_SPVRE = LS_XCON_SPVRE-R_SPVRE_XCONI
                                                    IT_PRVDR = LT_PRVDR ).
    endloop.

*** Set new Connections
    LR_PR_SOV->SET_XCONR( IT_XCONR = LT_XCONR ).
    ME->R_GATE->RAISE_EVENTS( IF_LEVNT = 9 ).

  endmethod.
method GET_GATE_BY_SPVRE.

  read table IT_PRVDR into RR_GATE
                      with key TABLE_LINE->F_GATKY = IR_SPVRE->F_GATKY.
  if SY-SUBRC ne 0.
*** No provider matches the given Supervised Runtime Element
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                          IF_MSGID = 'ZVCXI_F0SS'
                                          IF_MSGNO = '101' ).
  endif.

endmethod.
  method GET_ID_BY_IPRVT.

    data:  LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF.

    read table ME->T_PRVDR_DEF into LS_PRVDR_DEF
                               with key IPRVT = IF_IPRVT.
    if SY-SUBRC eq 0.
      move LS_PRVDR_DEF-ID to RF_ID.
    else.
***   Provider Type &1 not defined for Fast Data.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_F0SS'
                                            IF_MSGNO = '107'
                                            IF_MSGV1 = IF_IPRVT ).
    endif.

  endmethod.
  method GET_PRVDR_SOV.

    data: LT_GATE   type        /VCXI/VKSR_TT_GATE.

*** Get Specification Overview
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_F0SS_PR_SOV=>C_IPRVT_F0_SOV ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC eq 0.
    move ER_GATE->R_CLSPR ?to ER_PR_SOV.

  endmethod.
  method GET_SPVCE.

    data: LF_ID type /VCXI/CKX_ID.
    data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
          LR_SPVCE  type ref to /VCXI/CL_VKSC_SPVCE.

    loop at ME->T_SPVCE into LR_OBJECT.
      move LR_OBJECT ?to LR_SPVCE.

      if LR_SPVCE->/VCXI/IF_CKX_OBJECT~GET_ID( )       eq IF_ID and
         LR_SPVCE->/VCXI/IF_CKX_OBJECT_H~GET_PARENT( ) eq IR_SPVCE_PARENT.
        move LR_SPVCE to RR_SPVCE.
        exit.
      endif.
    endloop.

    if RR_SPVCE is not bound.
      if IR_SPVCE_PARENT is not bound.
***     Supervised Cust.Element &1 can't be found.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                              IF_MSGID = 'ZVCXI_F0SS'
                                              IF_MSGNO = '103'
                                              IF_MSGV1 = IF_ID ).
      else.
***     Supervised Cust.Element &1 can't be found as child of &2.
        move IR_SPVCE_PARENT->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LF_ID.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                              IF_MSGID = 'ZVCXI_F0SS'
                                              IF_MSGNO = '104'
                                              IF_MSGV1 = IF_ID
                                              IF_MSGV2 = LF_ID ).
      endif.
    endif.

  endmethod.
method GET_SPVRE.

  data:  LF_ID_PARENT type        /VCXI/CKX_ID.
  data:  LR_SPVCE     type ref to /VCXI/CL_VKSC_SPVCE.

  clear ER_SPVRE.

*** Fill Changeable only Input is supplied
  if CT_SPVRE is not supplied.
    move IT_SPVRE to CT_SPVRE.
  endif.

*** Get Parent Customizing Element
  if IR_SPVRE_PARENT is bound.
    move IR_SPVRE_PARENT->R_SPVCE to LR_SPVCE.
  endif.

*** Get Customizing Element
  LR_SPVCE = ME->GET_SPVCE( IF_ID           = IF_ID
                            IR_SPVCE_PARENT = LR_SPVCE ).

*** Find Element
  loop at CT_SPVRE into ER_SPVRE.
    if ER_SPVRE->R_PARENT  eq IR_SPVRE_PARENT and
       ER_SPVRE->R_SPVCE   eq LR_SPVCE.
      exit.
    else.
      clear ER_SPVRE.
    endif.
  endloop.

*** Create if needed
  if ER_SPVRE is not bound.
    if CT_SPVRE is supplied.
      create object ER_SPVRE
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append ER_SPVRE to CT_SPVRE.
    else.
***   Supervised Runtime Element &1 not found.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_F0SS'
                                            IF_MSGNO = '106'
                                            IF_MSGV1 = IF_ID ).
    endif.
  endif.

endmethod.
method GET_SPVRE_BY_GATE.

  data:  LR_SPVRE   type ref to /VCXI/CL_VKSR_SPVRE.

  loop at IT_SPVRE into LR_SPVRE.
    if LR_SPVRE->F_GATKY eq IR_GATE->F_GATKY.
      move LR_SPVRE to RR_SPVRE.
    endif.
  endloop.
  if RR_SPVRE is not bound.
*** No Supervised Runtime Element matches the given Gate
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                          IF_MSGID = 'ZVCXI_F0SS'
                                          IF_MSGNO = '102' ).
  endif.

endmethod.
