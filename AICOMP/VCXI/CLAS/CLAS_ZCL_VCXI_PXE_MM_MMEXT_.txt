
class ZCL_VCXI_PXE_MM_MMEXT definition
  public
  inheriting from ZCL_VCXI_XCE_MM_MMEXT
  create protected .

public section.

  data T_SCORE_COM type ZVCXI_PXSS_TT_SCORE_COM read-only .
  data T_JOITY type ZVCXI_PXS_TT_JOITY read-only .
  data T_PRINT_COM type ZVCXI_PXSS_TT_PRINT_COM read-only .

  methods SET_PRINT_COM
    importing
      !IT_PRINT_COM type ZVCXI_PXSS_TT_PRINT_COM
    raising
      /VCXI/CX_CKX .
  methods SET_SCORE_COM
    importing
      !IT_SCORE_COM type ZVCXI_PXSS_TT_SCORE_COM
    raising
      /VCXI/CX_CKX .

  methods SAVE
    redefinition .
  methods SET_EXTVAL
    redefinition .
  methods COPY
    redefinition .
protected section.

  methods GET_ALTUOM
    importing
      !IR_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
    returning
      value(RR_EA_ALTUOM) type ref to ZCL_VCXI_PXSS_EA_ALTUOM
    raising
      /VCXI/CX_CKX .
  methods GET_FG
    importing
      !IR_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
    returning
      value(RR_EA_FG) type ref to ZCL_VCXI_PXSS_EA_FG
    raising
      /VCXI/CX_CKX .

  methods LOAD_FROM_DB
    redefinition .
  methods UPDATE_KTEXT
    redefinition .
  methods UPDATE_MARA
    redefinition .
  methods UPDATE_MEINH
    redefinition .
private section.
endclass. "ZCL_VCXI_PXE_MM_MMEXT definition
class ZCL_VCXI_PXE_MM_MMEXT implementation.
  method COPY.

    RR_MMEXT = SUPER->COPY( IF_MATNR = IF_MATNR
                            IF_WERKS = IF_WERKS ).

    check RR_MMEXT is bound.

*** Copy Values
    cast ZCL_VCXI_PXE_MM_MMEXT( RR_MMEXT )->T_JOITY     = ME->T_JOITY.
    cast ZCL_VCXI_PXE_MM_MMEXT( RR_MMEXT )->T_PRINT_COM = ME->T_PRINT_COM.
    cast ZCL_VCXI_PXE_MM_MMEXT( RR_MMEXT )->T_SCORE_COM = ME->T_SCORE_COM.

  endmethod.
  method GET_ALTUOM.

    data: LR_CLSEA  type ref to /VCXI/CL_VKSR_CLSEA,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.

***--------------------------------------------------------------------------------------
*** Get Alternative UoM Element
    loop at IR_SVCEL->/VCXI/IF_CKX_OBJECT_H~GET_CHILDREN( ) into LR_OBJECT.
      LR_CLSEA = cast /VCXI/CL_VKSRA_SVC_ELEMENT( LR_OBJECT )->GET_CLSEA( ).
      if LR_CLSEA is bound and
         LR_CLSEA is instance of ZCL_VCXI_PXSS_EA_ALTUOM.
        RR_EA_ALTUOM ?= LR_CLSEA.
        exit.
      endif.
    endloop.

  endmethod.
  method GET_FG.

*** Get Element API Reference
    try.
        RR_EA_FG ?= IR_SVCEL->GET_CLSEA( ).
      catch CX_SY_MOVE_CAST_ERROR into data(LR_CX_SY_MOVE_CAST_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_MOVE_CAST_ERROR ).
    endtry.

  endmethod.
  method LOAD_FROM_DB.

***----------------------------------------------------------------------------
*** Load from SUPER
    SUPER->LOAD_FROM_DB( ).

***----------------------------------------------------------------------------
*** Load Scores
    select *
           into corresponding fields of table ME->T_SCORE_COM
           from ZVCXI_PXE_TD110
          where MATNR eq ME->F_MATNR
           and  WERKS eq ME->F_WERKS
          order by ISCOR.

*** Load Joint Types
    select JOITY
           into table ME->T_JOITY
           from ZVCXI_PXE_TD120
          where MATNR eq ME->F_MATNR
           and  WERKS eq ME->F_WERKS
           order by JOICT.

*** Load Print
    select *
           into corresponding fields of table ME->T_PRINT_COM
           from ZVCXI_PXE_TD130
          where MATNR eq ME->F_MATNR
           and  WERKS eq ME->F_WERKS
          order by PRICT.

  endmethod.
  method SAVE.

    data: LT_TD110 type table of ZVCXI_PXE_TD110,
          LT_TD120 type table of ZVCXI_PXE_TD120,
          LT_TD130 type table of ZVCXI_PXE_TD130.


*** Save SUPER
    SUPER->SAVE( ).

***----------------------------------------------------------------------------
*** Save Score Information
    LT_TD110 = value #( for LS_SCORE_COM in ME->T_SCORE_COM ( MATNR   = ME->F_MATNR
                                                              WERKS   = ME->F_WERKS
                                                              ISCOR   = LS_SCORE_COM-ISCOR
                                                              S_SCORP = LS_SCORE_COM-S_SCORP
                                                              TSCOR   = LS_SCORE_COM-TSCOR
                                                              FSLIN   = LS_SCORE_COM-FSLIN ) ).
    delete from ZVCXI_PXE_TD110 where MATNR eq ME->F_MATNR
                                 and  WERKS eq ME->F_WERKS.
    modify ZVCXI_PXE_TD110 from table LT_TD110.

*** Save Joint Information
    LT_TD120 = value #( for LF_JOITY in ME->T_JOITY index into LF_JOICT
                                                    ( MATNR = ME->F_MATNR
                                                      WERKS = ME->F_WERKS
                                                      JOICT = LF_JOICT
                                                      JOITY = LF_JOITY ) ).
    delete from ZVCXI_PXE_TD120 where MATNR eq ME->F_MATNR
                                 and  WERKS eq ME->F_WERKS.
    modify ZVCXI_PXE_TD120 from table LT_TD120.

*** Save Pint Information
    LT_TD130 = value #( for LS_PRINT_COM in ME->T_PRINT_COM index into LF_PRICT
                                                            ( MATNR       = ME->F_MATNR
                                                              WERKS       = ME->F_WERKS
                                                              PRICT       = LF_PRICT
                                                              S_PRINT_COM = LS_PRINT_COM ) ).
    delete from ZVCXI_PXE_TD130 where MATNR eq ME->F_MATNR
                                 and  WERKS eq ME->F_WERKS.
    modify ZVCXI_PXE_TD130 from table LT_TD130.

  endmethod.
  method SET_EXTVAL.

    data: LS_EXTVAL type ZVCXI_PXE_MM_S_EXTVAL.


    SUPER->SET_EXTVAL( IS_EXTVAL = IS_EXTVAL ).

***----------------------------------------------------------------------------
*** "Cast" Extension Values
    LS_EXTVAL = corresponding #( IS_EXTVAL ).

*** Scores
    sort LS_EXTVAL-T_SCORE_COM by ISCOR.
    ME->SET_SCORE_COM( IT_SCORE_COM = LS_EXTVAL-T_SCORE_COM ).

*** Joint
    if ME->T_JOITY ne LS_EXTVAL-T_JOITY.
      ME->T_JOITY = LS_EXTVAL-T_JOITY.
      raise event /VCXI/IF_CKX_OBJECT~CHANGED.
    endif.

*** Print
    ME->SET_PRINT_COM( IT_PRINT_COM = LS_EXTVAL-T_PRINT_COM ).

  endmethod.
  method SET_PRINT_COM.

    check ME->T_PRINT_COM ne IT_PRINT_COM.

    ME->T_PRINT_COM = IT_PRINT_COM.
    raise event /VCXI/IF_CKX_OBJECT~CHANGED.

  endmethod.
  method SET_SCORE_COM.

    check ME->T_SCORE_COM ne IT_SCORE_COM.

    ME->T_SCORE_COM = IT_SCORE_COM.
    raise event /VCXI/IF_CKX_OBJECT~CHANGED.

  endmethod.
  method UPDATE_KTEXT.

    data: LR_EA_FG     type ref to ZCL_VCXI_PXSS_EA_FG.


    SUPER->UPDATE_KTEXT( exporting IS_MARA  = IS_MARA
                                   IR_SVC   = IR_SVC
                                   IR_SVCEL = IR_SVCEL
                         changing  CT_KTEXT = CT_KTEXT ).

***--------------------------------------------------------------------------------------
*** Get Element API Reference
    LR_EA_FG = ME->GET_FG( IR_SVCEL = IR_SVCEL ).
    check LR_EA_FG is bound.

    data(LF_MAKTX) = LR_EA_FG->GET_MAKTX( ).

*** Update all Description
    loop at CT_KTEXT assigning field-symbol(<S_KTEXT>).
      <S_KTEXT>-MAKTX = LF_MAKTX.
    endloop.

  endmethod.
  method UPDATE_MARA.

    SUPER->UPDATE_MARA( exporting IR_SVC   = IR_SVC
                                  IR_SVCEL = IR_SVCEL
                        changing  CS_MARA  = CS_MARA ).

***--------------------------------------------------------------------------------------
*** Get Element API Reference
    data(LR_EA_FG) = ME->GET_FG( IR_SVCEL = IR_SVCEL ).
    if LR_EA_FG is bound.
***   Product Hierarchy
      CS_MARA-PRDHA = LR_EA_FG->GET_PRODH( ).
    endif.

***--------------------------------------------------------------------------------------
*** Get Alternative UoM Element
    data(LR_EA_ALTUOM) = ME->GET_ALTUOM( IR_SVCEL = IR_SVCEL ).
    if LR_EA_ALTUOM is bound.
***   Get Info of Base Uom
      data(LS_ALTUOM) = LR_EA_ALTUOM->GET_ALTUOM( IF_LRMEI = CS_MARA-MEINS ).
      CS_MARA = corresponding #( base ( CS_MARA ) LS_ALTUOM ).
    endif.

  endmethod.
  method UPDATE_MEINH.

    data: LR_EA_ALTUOM type ref to ZCL_VCXI_PXSS_EA_ALTUOM.
    field-symbols: <S_MEINH> type SMEINH.


***--------------------------------------------------------------------------------------
*** Get Alternative UoM Element
    LR_EA_ALTUOM = ME->GET_ALTUOM( IR_SVCEL = IR_SVCEL ).
    if LR_EA_ALTUOM is bound.
***   Process all customized Alternate Unit Definition
      loop at LR_EA_ALTUOM->GET_ALTUOM_DEF( ) into data(LS_ALTUOM_DEF).

        if LINE_EXISTS( CT_MEINH[ MEINH = LS_ALTUOM_DEF-LRMEI ] ).
          assign CT_MEINH[ MEINH = LS_ALTUOM_DEF-LRMEI ] to <S_MEINH>.
        else.
***       Add customized Alt.UoM before otherwise defined UoMs
          insert value #( MEINH = LS_ALTUOM_DEF-LRMEI ) into table CT_MEINH assigning <S_MEINH>.
        endif.

***     Get Denominator/Numerator an other Infos
        data(LS_ALTUOM) = LR_EA_ALTUOM->GET_ALTUOM( IF_LRMEI = <S_MEINH>-MEINH ).
        <S_MEINH> = corresponding #( base ( <S_MEINH> ) LS_ALTUOM ).
      endloop.
    endif.
***--------------------------------------------------------------------------------------
*** Verify/Update all Conversions
    SUPER->UPDATE_MEINH( exporting IS_MARA  = IS_MARA
                                   IR_SVC   = IR_SVC
                                   IR_SVCEL = IR_SVCEL
                         changing  CT_MEINH = CT_MEINH ).

  endmethod.
