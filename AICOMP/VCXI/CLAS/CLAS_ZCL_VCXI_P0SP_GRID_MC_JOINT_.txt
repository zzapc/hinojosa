
class ZCL_VCXI_P0SP_GRID_MC_JOINT definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  type-pools ABAP .
  data F_PURCHASED type ABAP_BOOL .
  data F_JGLUE type ABAP_BOOL .
  data F_JTAPE type ABAP_BOOL .
  data F_JSTITCH type ABAP_BOOL .
  data F_JOINT type ABAP_BOOL .

  methods CHANGE_STYLE_JOINT
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MC_JGLUE
    importing
      !IF_PURCH type ZVCXI_XCS_PURCH
      !IF_DUMMY type ABAP_BOOL
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MC_JSTITCH
    importing
      !IF_PURCH type ZVCXI_XCS_PURCH
      !IF_DUMMY type ABAP_BOOL
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MC_JTAPE
    importing
      !IF_PURCH type ZVCXI_XCS_PURCH
      !IF_DUMMY type ABAP_BOOL
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_JOINT_VIS
    importing
      !IR_PR_JOINT type ref to ZCL_VCXI_P0SP_PR_JOINT
    returning
      value(RS_JOINT_VIS) type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_MC_JGLUE_VIS
    importing
      !IR_PR_MC_JGLUE type ref to ZCL_VCXI_P0SP_PR_MC_JGLUE
    returning
      value(RS_MC_JGLUE_VIS) type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_MC_JSTITCH_VIS
    importing
      !IR_PR_MC_JSTITCH type ref to ZCL_VCXI_P0SP_PR_MC_JSTITCH
    returning
      value(RS_MC_JSTITCH_VIS) type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_MC_JTAPE_VIS
    importing
      !IR_PR_MC_JTAPE type ref to ZCL_VCXI_P0SP_PR_MC_JTAPE
    returning
      value(RS_MC_JTAPE_VIS) type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_JOINT_VIS
    importing
      !IR_PR_JOINT type ref to ZCL_VCXI_P0SP_PR_JOINT
      !IS_JOINT_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MC_JGLUE_VIS
    importing
      !IR_PR_MC_JGLUE type ref to ZCL_VCXI_P0SP_PR_MC_JGLUE
      !IS_MC_JGLUE_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MC_JSTITCH_VIS
    importing
      !IR_PR_MC_JSTITCH type ref to ZCL_VCXI_P0SP_PR_MC_JSTITCH
      !IS_MC_JSTITCH_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MC_JTAPE_VIS
    importing
      !IR_PR_MC_JTAPE type ref to ZCL_VCXI_P0SP_PR_MC_JTAPE
      !IS_MC_JTAPE_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SP_GRID_MC_JOINT definition
class ZCL_VCXI_P0SP_GRID_MC_JOINT implementation.
method CHANGE_STYLE_JOINT.

  free CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Set Joint Matnr = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint type = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOITY'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Width = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCO'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption per = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Stitch Length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STILE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor Price and Price Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** --------------------------------------------------------------------------------------------
*** Set Purchase Flag not editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CHANGE_STYLE_MC_JGLUE.

  free CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Set Joint Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint type = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOITY'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Width = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCO'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Stitch Length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STILE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor Price and Price Unit = Editable if PURCH = ABAP_TRUE
  if IF_PURCH eq ABAP_TRUE.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

  else.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endif.

*** --------------------------------------------------------------------------------------------
*** Set Purchase Flag not editable in case of Dummy
  if IF_DUMMY eq ABAP_TRUE.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
  else.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
  endif.

endmethod.
method CHANGE_STYLE_MC_JSTITCH.

  free CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Set Joint Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint type = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOITY'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCO'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Stitch Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STILE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor Price and Price Unit = Editable if PURCH = ABAP_TRUE
  if IF_PURCH eq ABAP_TRUE.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

  else.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endif.

*** --------------------------------------------------------------------------------------------
*** Set Purchase Flag not editable in case of Dummy
  if IF_DUMMY eq ABAP_TRUE.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
  else.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
  endif.

endmethod.
method CHANGE_STYLE_MC_JTAPE.

  free CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Set Joint Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint type = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOITY'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Joint Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCO'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption per = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Stitch Length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STILE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor Price and Price Unit = Editable if PURCH = ABAP_TRUE
  if IF_PURCH eq ABAP_TRUE.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

  else.

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endif.

*** --------------------------------------------------------------------------------------------
*** Set Purchase Flag not editable in case of Dummy
  if IF_DUMMY eq ABAP_TRUE.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
  else.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_P0SP_S_MC_JOINT_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED type        /VCXI/CKX_LOCKED,
                 LF_INUSE  type        /VCXI/VKSR_INUSE,
                 LF_COLPOS type        I                 value 4.
  field-symbols: <S_FCAT>  type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

*** Set Edit for all fields which should Editable at all
*** -> Don't forget to set also a Style for this Field
      when 'MATNR' or 'TEXT'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.
        if ME->F_JGLUE eq ABAP_FALSE and
           ME->F_JSTITCH eq ABAP_FALSE and
           ME->F_JTAPE eq ABAP_FALSE.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.
        endif.

      when 'MATNR_DESCR' or 'CONSU' or 'CONSU_UOM'.
        if ME->F_JGLUE eq ABAP_FALSE and
           ME->F_JSTITCH eq ABAP_FALSE and
           ME->F_JTAPE eq ABAP_FALSE.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.
        endif.

      when 'JOILE' or 'JOITY'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

*** Set Edit for Fields if Glue or Stitch is activ
*** -> Don't forget to set also a Style for this Field
      when 'AVGCO' or 'AVGCP'.
        if ME->F_JGLUE eq ABAP_TRUE or ME->F_JSTITCH eq ABAP_TRUE.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE     to <S_FCAT>-EDIT.
          endif.
        elseif ME->F_JGLUE eq ABAP_FALSE and ME->F_JSTITCH eq ABAP_FALSE.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.
        endif.

*** Hide Fields if Glue or Stitch is not activ
*** -> Don't forget to set also a Style for this Field
      when 'AVGCO_UOM' or 'AVGCP_UOM'.
        if ME->F_JGLUE eq ABAP_FALSE and ME->F_JSTITCH eq ABAP_FALSE.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.
        endif.

*** Set Edit for Fields if Glue is activ
*** -> Don't forget to set also a Style for this Field
      when 'JOIWI'.
        if ME->F_JGLUE eq ABAP_TRUE or
           ME->F_JOINT eq ABAP_TRUE.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE     to <S_FCAT>-EDIT.
          endif.
        else.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.
        endif.

*** Hide Fields if Glue is not activ
*** -> Don't forget to set also a Style for this Field
      when 'JOIWI_UOM'.
        if ME->F_JGLUE eq ABAP_FALSE or
           ME->F_JOINT eq ABAP_FALSE.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.
        endif.

*** Set Edit for Fields if Stitch is activ
*** -> Don't forget to set also a Style for this Field
      when 'STILE'.
        if ME->F_JSTITCH eq ABAP_TRUE.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE     to <S_FCAT>-EDIT.
          endif.
        elseif ME->F_JSTITCH eq ABAP_FALSE.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.
        endif.

*** Hide Fields if Stitch is not activ
*** -> Don't forget to set also a Style for this Field
      when 'STILE_UOM'.
        if ME->F_JSTITCH eq ABAP_FALSE.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.
        endif.

*** Set Edit for Price fields if it is purchased
*** And Hide it if not needed
*** -> Don't forget to set also a Style for this Field
      when 'LIFNR' or 'PRICE' or 'PRICP'.
        if ME->F_PURCHASED eq ABAP_TRUE.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.
        else.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.
        endif.

***   Purchase Flag always editable
      when 'PURCH'.
        move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.
        if ME->F_JGLUE eq ABAP_FALSE and
           ME->F_JSTITCH eq ABAP_FALSE and
           ME->F_JTAPE eq ABAP_FALSE.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.
        endif.

      when 'LIFNR_DESCR' or 'PRICE_CURR' or 'PRICP_UOM'.
        if ME->F_PURCHASED eq ABAP_FALSE.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.
        endif.

    endcase.

***     Set Position for each Field
    if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'CONSU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'CONSU_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'JOITY'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'JOITY_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'JOILE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'JOILE_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'JOIWI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'JOIWI_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCO'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCO_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'STILE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'STILE_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TEXT'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PURCH'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'LIFNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICE_CURR'.  <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.

  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LF_DUMMY             type          ABAP_BOOL.
  data:          LS_MC_JOINT_VIS      type          ZVCXI_P0SP_S_MC_JOINT_VIS,
                 LS_MC_JOINT_GRID     type          ZVCXI_P0SP_S_MC_JOINT_GRID.
  data:          LT_GATE_MC           type          /VCXI/VKSR_TT_GATE,
                 LT_GATE_JOINT        type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_MC_JGLUE       type ref to   ZCL_VCXI_P0SP_PR_MC_JGLUE,
                 LR_PR_MC_JSTITCH     type ref to   ZCL_VCXI_P0SP_PR_MC_JSTITCH,
                 LR_PR_MC_JTAPE       type ref to   ZCL_VCXI_P0SP_PR_MC_JTAPE,
                 LR_PR_JOINT          type ref to   ZCL_VCXI_P0SP_PR_JOINT.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  clear: ME->F_JGLUE, ME->F_JSTITCH, ME->F_JOINT, ME->F_PURCHASED.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of MC Joint
  LT_GATE_MC = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                      IF_INUSE  = ABAP_TRUE
                                      IF_SORTED = ABAP_TRUE ).

*** Get Gates of Joint
  LT_GATE_JOINT = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_JOINT=>C_IPRVT_P0_JOINT
                                         IF_INUSE  = ABAP_TRUE
                                         IF_SORTED = ABAP_TRUE ).

*** --------------------------------------------------------------------------------------------
*** --------------------------------------------------------------------------------------------
*** Add MC Joint
  loop at LT_GATE_MC into LR_GATE.

    clear: LS_MC_JOINT_GRID, LR_PR_MC_JGLUE, LR_PR_MC_JSTITCH, LR_PR_MC_JTAPE, LF_DUMMY.

    check LR_GATE->IS_INUSE( ) eq ABAP_TRUE
      and LR_GATE->R_CLSPR     is bound.

*** Work with Joint Glue
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_JGLUE.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MC_JGLUE.
    endtry.

    if  LR_PR_MC_JGLUE is bound.
      move ABAP_TRUE to ME->F_JGLUE.

*** --------------------------------------------------------------------------------------------
***   Get Data from PR Class
      move LR_GATE->GET_POSID( ) to LS_MC_JOINT_GRID-POSID.
      move LR_GATE->F_GATKY      to LS_MC_JOINT_GRID-GATKY.
      move LR_GATE               to LS_MC_JOINT_GRID-R_GATE.

      LS_MC_JOINT_VIS = ME->GET_MC_JGLUE_VIS( IR_PR_MC_JGLUE = LR_PR_MC_JGLUE ).
      move-corresponding LS_MC_JOINT_VIS to LS_MC_JOINT_GRID.

      if LS_MC_JOINT_VIS-PURCH eq ABAP_TRUE.
        move LS_MC_JOINT_VIS-PURCH to ME->F_PURCHASED.
      endif.

      move LR_PR_MC_JGLUE->IS_DUMMY( ) to LF_DUMMY.

*** --------------------------------------------------------------------------------------------
***   Set Style Details
      ME->CHANGE_STYLE_MC_JGLUE( exporting IF_PURCH = LS_MC_JOINT_GRID-PURCH
                                           IF_DUMMY = LF_DUMMY
                                 changing  CT_STYL  = LS_MC_JOINT_GRID-T_STYL ).

***   Call DVC Service - Modify Style
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                           changing  CT_STYL = LS_MC_JOINT_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_MC_JOINT_GRID to <S_DATA>.

    endif.

*** --------------------------------------------------------------------------------------------
*** --------------------------------------------------------------------------------------------
*** Work with Joint Stitch
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_JSTITCH.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MC_JSTITCH.
    endtry.

    if  LR_PR_MC_JSTITCH is bound.
      move ABAP_TRUE to ME->F_JSTITCH.

*** --------------------------------------------------------------------------------------------
***   Get Data from PR Class
      move LR_GATE->GET_POSID( ) to LS_MC_JOINT_GRID-POSID.
      move LR_GATE->F_GATKY      to LS_MC_JOINT_GRID-GATKY.
      move LR_GATE               to LS_MC_JOINT_GRID-R_GATE.

      LS_MC_JOINT_VIS = ME->GET_MC_JSTITCH_VIS( IR_PR_MC_JSTITCH = LR_PR_MC_JSTITCH ).
      move-corresponding LS_MC_JOINT_VIS to LS_MC_JOINT_GRID.

      if LS_MC_JOINT_VIS-PURCH eq ABAP_TRUE.
        move LS_MC_JOINT_VIS-PURCH to ME->F_PURCHASED.
      endif.

      move LR_PR_MC_JSTITCH->IS_DUMMY( ) to LF_DUMMY.

*** --------------------------------------------------------------------------------------------
***   Set Style Details
      ME->CHANGE_STYLE_MC_JSTITCH( exporting IF_PURCH = LS_MC_JOINT_GRID-PURCH
                                           IF_DUMMY = LF_DUMMY
                                   changing  CT_STYL  = LS_MC_JOINT_GRID-T_STYL ).

***   Call DVC Service - Modify Style
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                           changing  CT_STYL = LS_MC_JOINT_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_MC_JOINT_GRID to <S_DATA>.

    endif.

*** --------------------------------------------------------------------------------------------
*** --------------------------------------------------------------------------------------------
*** Work with Joint Tape
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_JTAPE.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MC_JTAPE.
    endtry.

    if  LR_PR_MC_JTAPE is bound.
      move ABAP_TRUE to ME->F_JTAPE.

*** --------------------------------------------------------------------------------------------
***   Get Data from PR Class
      move LR_GATE->GET_POSID( ) to LS_MC_JOINT_GRID-POSID.
      move LR_GATE->F_GATKY      to LS_MC_JOINT_GRID-GATKY.
      move LR_GATE               to LS_MC_JOINT_GRID-R_GATE.

      LS_MC_JOINT_VIS = ME->GET_MC_JTAPE_VIS( IR_PR_MC_JTAPE = LR_PR_MC_JTAPE ).
      move-corresponding LS_MC_JOINT_VIS to LS_MC_JOINT_GRID.

      if LS_MC_JOINT_VIS-PURCH eq ABAP_TRUE.
        move LS_MC_JOINT_VIS-PURCH to ME->F_PURCHASED.
      endif.

      move LR_PR_MC_JTAPE->IS_DUMMY( ) to LF_DUMMY.

*** --------------------------------------------------------------------------------------------
***   Set Style Details
      ME->CHANGE_STYLE_MC_JTAPE( exporting IF_PURCH = LS_MC_JOINT_GRID-PURCH
                                           IF_DUMMY = LF_DUMMY
                                 changing  CT_STYL  = LS_MC_JOINT_GRID-T_STYL ).

***   Call DVC Service - Modify Style
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                           changing  CT_STYL = LS_MC_JOINT_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_MC_JOINT_GRID to <S_DATA>.

    endif.

  endloop.


*** --------------------------------------------------------------------------------------------
*** --------------------------------------------------------------------------------------------
*** Add Joint
  loop at LT_GATE_JOINT into LR_GATE.

    clear: LS_MC_JOINT_GRID, LR_PR_JOINT.

    check LR_GATE->IS_INUSE( ) eq ABAP_TRUE
      and LR_GATE->R_CLSPR     is bound.

*** Work with Joint
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_JOINT.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_JOINT.
    endtry.

    if LR_PR_JOINT is bound.
      move ABAP_TRUE to ME->F_JOINT.

*** --------------------------------------------------------------------------------------------
***   Get Data from PR Class
      move LR_GATE->GET_POSID( ) to LS_MC_JOINT_GRID-POSID.
      move LR_GATE->F_GATKY      to LS_MC_JOINT_GRID-GATKY.
      move LR_GATE               to LS_MC_JOINT_GRID-R_GATE.

      LS_MC_JOINT_VIS = ME->GET_JOINT_VIS( IR_PR_JOINT = LR_PR_JOINT ).
      move-corresponding LS_MC_JOINT_VIS to LS_MC_JOINT_GRID.

*** --------------------------------------------------------------------------------------------
***   Set Style Details
      ME->CHANGE_STYLE_JOINT( changing  CT_STYL  = LS_MC_JOINT_GRID-T_STYL ).

***   Call DVC Service - Modify Style
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                           changing  CT_STYL = LS_MC_JOINT_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_MC_JOINT_GRID to <S_DATA>.

    endif.

  endloop.

endmethod.
method GET_JOINT_VIS.

  data:  LS_JOILE type ZVCXI_P0S_S_JOILE,
         LS_JOIWI type ZVCXI_P0S_S_JOIWI.

*** Get Joint Type
  move IR_PR_JOINT->GET_JOITY( )       to RS_JOINT_VIS-JOITY.
  move IR_PR_JOINT->GET_JOITY_DESCR( ) to RS_JOINT_VIS-JOITY_DESCR.

*** Get Joint Length and Width
  move IR_PR_JOINT->GET_JOIWI( )       to LS_JOIWI.
  move-corresponding LS_JOIWI          to RS_JOINT_VIS.

  move IR_PR_JOINT->GET_JOILE( )       to LS_JOILE.
  move-corresponding LS_JOILE          to RS_JOINT_VIS.

endmethod.
method GET_MC_JGLUE_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_PRICE type ZVCXI_XCS_S_PRICE,
         LS_PRICP type ZVCXI_XCS_S_PRICP,
         LS_JOILE type ZVCXI_P0S_S_JOILE,
         LS_JOIWI type ZVCXI_P0S_S_JOIWI,
         LS_AVGCO type ZVCXI_XCS_S_AVGCO,
         LS_AVGCP type ZVCXI_XCS_S_AVGCP.

*** Get MaterialNumber, Description and Joint Type
  move IR_PR_MC_JGLUE->GET_MATNR( )       to RS_MC_JGLUE_VIS-MATNR.
  move IR_PR_MC_JGLUE->GET_MATNR_DESCR( ) to RS_MC_JGLUE_VIS-MATNR_DESCR.
  move IR_PR_MC_JGLUE->GET_JOITY( )       to RS_MC_JGLUE_VIS-JOITY.
  move IR_PR_MC_JGLUE->GET_JOITY_DESCR( ) to RS_MC_JGLUE_VIS-JOITY_DESCR.

*** Get Consumption
  move IR_PR_MC_JGLUE->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU             to RS_MC_JGLUE_VIS.

*** Get Joint Length and Width
  move IR_PR_MC_JGLUE->GET_JOIWI( )       to LS_JOIWI.
  move-corresponding LS_JOIWI             to RS_MC_JGLUE_VIS.

  move IR_PR_MC_JGLUE->GET_JOILE( )       to LS_JOILE.
  move-corresponding LS_JOILE             to RS_MC_JGLUE_VIS.

*** Get Average Consumption and Consumption per
  move IR_PR_MC_JGLUE->GET_AVGCO( )       to LS_AVGCO.
  move-corresponding LS_AVGCO             to RS_MC_JGLUE_VIS.
  move IR_PR_MC_JGLUE->GET_AVGCP( )       to LS_AVGCP.
  move-corresponding LS_AVGCP             to RS_MC_JGLUE_VIS.

*** Get Vendor, Description and Purchase Flag and Text
  move IR_PR_MC_JGLUE->GET_LIFNR( )       to RS_MC_JGLUE_VIS-LIFNR.
  move IR_PR_MC_JGLUE->GET_LIFNR_DESCR( ) to RS_MC_JGLUE_VIS-LIFNR_DESCR.
  move IR_PR_MC_JGLUE->GET_PURCH( )       to RS_MC_JGLUE_VIS-PURCH.
  move IR_PR_MC_JGLUE->GET_TEXT( )        to RS_MC_JGLUE_VIS-TEXT.

*** Get Price
  move IR_PR_MC_JGLUE->GET_PRICE( )       to LS_PRICE.
  move-corresponding LS_PRICE             to RS_MC_JGLUE_VIS.

*** Get Price Unit
  move IR_PR_MC_JGLUE->GET_PRICP( )       to LS_PRICP.
  move-corresponding LS_PRICP           to RS_MC_JGLUE_VIS.

endmethod.
method GET_MC_JSTITCH_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_PRICE type ZVCXI_XCS_S_PRICE,
         LS_PRICP type ZVCXI_XCS_S_PRICP,
         LS_JOILE type ZVCXI_P0S_S_JOILE,
         LS_STILE type ZVCXI_P0S_S_STILE,
         LS_AVGCO type ZVCXI_XCS_S_AVGCO,
         LS_AVGCP type ZVCXI_XCS_S_AVGCP.

*** Get MaterialNumber, Description and Joint Type
  move IR_PR_MC_JSTITCH->GET_MATNR( )       to RS_MC_JSTITCH_VIS-MATNR.
  move IR_PR_MC_JSTITCH->GET_MATNR_DESCR( ) to RS_MC_JSTITCH_VIS-MATNR_DESCR.
  move IR_PR_MC_JSTITCH->GET_JOITY( )       to RS_MC_JSTITCH_VIS-JOITY.
  move IR_PR_MC_JSTITCH->GET_JOITY_DESCR( ) to RS_MC_JSTITCH_VIS-JOITY_DESCR.

*** Get Consumption
  move IR_PR_MC_JSTITCH->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU               to RS_MC_JSTITCH_VIS.

*** Get Joint Length and Stitch Length
  move IR_PR_MC_JSTITCH->GET_STILE( )       to LS_STILE.
  move-corresponding LS_STILE               to RS_MC_JSTITCH_VIS.

  move IR_PR_MC_JSTITCH->GET_JOILE( )       to LS_JOILE.
  move-corresponding LS_JOILE               to RS_MC_JSTITCH_VIS.

*** Get Average Consumption and Consumption per
  move IR_PR_MC_JSTITCH->GET_AVGCO( )       to LS_AVGCO.
  move-corresponding LS_AVGCO               to RS_MC_JSTITCH_VIS.
  move IR_PR_MC_JSTITCH->GET_AVGCP( )       to LS_AVGCP.
  move-corresponding LS_AVGCP               to RS_MC_JSTITCH_VIS.

*** Get Vendor, Description and Purchase Flag and Text
  move IR_PR_MC_JSTITCH->GET_LIFNR( )       to RS_MC_JSTITCH_VIS-LIFNR.
  move IR_PR_MC_JSTITCH->GET_LIFNR_DESCR( ) to RS_MC_JSTITCH_VIS-LIFNR_DESCR.
  move IR_PR_MC_JSTITCH->GET_PURCH( )       to RS_MC_JSTITCH_VIS-PURCH.
  move IR_PR_MC_JSTITCH->GET_TEXT( )        to RS_MC_JSTITCH_VIS-TEXT.

*** Get Price
  move IR_PR_MC_JSTITCH->GET_PRICE( )       to LS_PRICE.
  move-corresponding LS_PRICE               to RS_MC_JSTITCH_VIS.

*** Get Price Unit
  move IR_PR_MC_JSTITCH->GET_PRICP( )       to LS_PRICP.
  move-corresponding LS_PRICP               to RS_MC_JSTITCH_VIS.

endmethod.
method GET_MC_JTAPE_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_PRICE type ZVCXI_XCS_S_PRICE,
         LS_PRICP type ZVCXI_XCS_S_PRICP,
         LS_JOILE type ZVCXI_P0S_S_JOILE.

*** Get MaterialNumber, Description and Joint Type
  move IR_PR_MC_JTAPE->GET_MATNR( )       to RS_MC_JTAPE_VIS-MATNR.
  move IR_PR_MC_JTAPE->GET_MATNR_DESCR( ) to RS_MC_JTAPE_VIS-MATNR_DESCR.
  move IR_PR_MC_JTAPE->GET_JOITY( )       to RS_MC_JTAPE_VIS-JOITY.
  move IR_PR_MC_JTAPE->GET_JOITY_DESCR( ) to RS_MC_JTAPE_VIS-JOITY_DESCR.

*** Get Consumption
  move IR_PR_MC_JTAPE->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU             to RS_MC_JTAPE_VIS.

*** Get Joint Length
  move IR_PR_MC_JTAPE->GET_JOILE( )       to LS_JOILE.
  move-corresponding LS_JOILE             to RS_MC_JTAPE_VIS.

*** Get Vendor, Description and Purchase Flag and Text
  move IR_PR_MC_JTAPE->GET_LIFNR( )       to RS_MC_JTAPE_VIS-LIFNR.
  move IR_PR_MC_JTAPE->GET_LIFNR_DESCR( ) to RS_MC_JTAPE_VIS-LIFNR_DESCR.
  move IR_PR_MC_JTAPE->GET_PURCH( )       to RS_MC_JTAPE_VIS-PURCH.
  move IR_PR_MC_JTAPE->GET_TEXT( )        to RS_MC_JTAPE_VIS-TEXT.

*** Get Price
  move IR_PR_MC_JTAPE->GET_PRICE( )       to LS_PRICE.
  move-corresponding LS_PRICE             to RS_MC_JTAPE_VIS.

*** Get Price Unit
  move IR_PR_MC_JTAPE->GET_PRICP( )       to LS_PRICP.
  move-corresponding LS_PRICP             to RS_MC_JTAPE_VIS.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_MC_JOINT_VIS      type          ZVCXI_P0SP_S_MC_JOINT_VIS,
                 LS_MC_JOINT_GRID     type          ZVCXI_P0SP_S_MC_JOINT_GRID.
  data:          LR_PR_MC_JGLUE       type ref to   ZCL_VCXI_P0SP_PR_MC_JGLUE,
                 LR_PR_MC_JTAPE       type ref to   ZCL_VCXI_P0SP_PR_MC_JTAPE,
                 LR_PR_MC_JSTITCH     type ref to   ZCL_VCXI_P0SP_PR_MC_JSTITCH,
                 LR_PR_JOINT          type ref to   ZCL_VCXI_P0SP_PR_JOINT,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move-corresponding <S_DATA> to LS_MC_JOINT_GRID.
        check LS_MC_JOINT_GRID-R_GATE is bound.

        clear: LR_PR_MC_JGLUE, LR_PR_MC_JTAPE, LR_PR_MC_JSTITCH, LR_PR_JOINT.

***     Work with Joint Glue
        try.
            move LS_MC_JOINT_GRID-R_GATE->R_CLSPR ?to LR_PR_MC_JGLUE.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MC_JGLUE.
        endtry.

        if LR_PR_MC_JGLUE is bound.
***       Set Values to PR Class
          move-corresponding LS_MC_JOINT_GRID to LS_MC_JOINT_VIS.
          ME->SET_MC_JGLUE_VIS( IR_PR_MC_JGLUE  = LR_PR_MC_JGLUE
                                IS_MC_JGLUE_VIS = LS_MC_JOINT_VIS ).
          continue.
        endif.

***     Work with Joint Stitch
        try.
            move LS_MC_JOINT_GRID-R_GATE->R_CLSPR ?to LR_PR_MC_JSTITCH.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MC_JSTITCH.
        endtry.

        if LR_PR_MC_JSTITCH is bound.
***       Set Values to PR Class
          move-corresponding LS_MC_JOINT_GRID to LS_MC_JOINT_VIS.
          ME->SET_MC_JSTITCH_VIS( IR_PR_MC_JSTITCH  = LR_PR_MC_JSTITCH
                                  IS_MC_JSTITCH_VIS = LS_MC_JOINT_VIS ).
          continue.
        endif.

***     Work with Joint Tape
        try.
            move LS_MC_JOINT_GRID-R_GATE->R_CLSPR ?to LR_PR_MC_JTAPE.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MC_JTAPE.
        endtry.

        if LR_PR_MC_JTAPE is bound.
***       Set Values to PR Class
          move-corresponding LS_MC_JOINT_GRID to LS_MC_JOINT_VIS.
          ME->SET_MC_JTAPE_VIS( IR_PR_MC_JTAPE  = LR_PR_MC_JTAPE
                                IS_MC_JTAPE_VIS = LS_MC_JOINT_VIS ).
        endif.

***     Work with Joint
        try.
            move LS_MC_JOINT_GRID-R_GATE->R_CLSPR ?to LR_PR_JOINT.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_JOINT.
        endtry.

        if LR_PR_JOINT is bound.
***       Set Values to PR Class
          move-corresponding LS_MC_JOINT_GRID to LS_MC_JOINT_VIS.
          ME->SET_JOINT_VIS( IR_PR_JOINT  = LR_PR_JOINT
                             IS_JOINT_VIS = LS_MC_JOINT_VIS ).
          continue.
        endif.

      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.


endmethod.
method SET_JOINT_VIS.

  data:  LS_JOIWI        type ZVCXI_P0S_S_JOIWI,
         LS_JOILE        type ZVCXI_P0S_S_JOILE,
         LS_JOINT_VIS    type ZVCXI_P0SP_S_MC_JOINT_VIS.

*** Get Current data to do Update only if Value changed.
  LS_JOINT_VIS = ME->GET_JOINT_VIS( IR_PR_JOINT = IR_PR_JOINT ).

*** Joint type
  if LS_JOINT_VIS-JOITY ne IS_JOINT_VIS-JOITY.
    IR_PR_JOINT->SET_JOITY( IF_JOITY = IS_JOINT_VIS-JOITY
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint Width and Length
  if LS_JOINT_VIS-JOILE ne IS_JOINT_VIS-JOILE.
    move-corresponding IS_JOINT_VIS to LS_JOILE.
    IR_PR_JOINT->SET_JOILE( IS_JOILE = LS_JOILE
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_JOINT_VIS-JOIWI ne IS_JOINT_VIS-JOIWI.
    move-corresponding IS_JOINT_VIS to LS_JOIWI.
    IR_PR_JOINT->SET_JOIWI( IS_JOIWI = LS_JOIWI
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.


endmethod.
method SET_MC_JGLUE_VIS.

  data:  LS_JOIWI        type ZVCXI_P0S_S_JOIWI,
         LS_JOILE        type ZVCXI_P0S_S_JOILE,
         LS_PRICE        type ZVCXI_XCS_S_PRICE,
         LS_PRICP        type ZVCXI_XCS_S_PRICP,
         LS_AVGCO        type ZVCXI_XCS_S_AVGCO,
         LS_AVGCP        type ZVCXI_XCS_S_AVGCP,
         LS_MC_JGLUE_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MC_JGLUE_VIS = ME->GET_MC_JGLUE_VIS( IR_PR_MC_JGLUE = IR_PR_MC_JGLUE ).

*** Material
  if LS_MC_JGLUE_VIS-MATNR ne IS_MC_JGLUE_VIS-MATNR.
    IR_PR_MC_JGLUE->SET_MATNR( IF_MATNR = IS_MC_JGLUE_VIS-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint Width and Length
  if LS_MC_JGLUE_VIS-JOILE ne IS_MC_JGLUE_VIS-JOILE.
    move-corresponding IS_MC_JGLUE_VIS to LS_JOILE.
    IR_PR_MC_JGLUE->SET_JOILE( IS_JOILE = LS_JOILE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_JGLUE_VIS-JOIWI ne IS_MC_JGLUE_VIS-JOIWI.
    move-corresponding IS_MC_JGLUE_VIS to LS_JOIWI.
    IR_PR_MC_JGLUE->SET_JOIWI( IS_JOIWI = LS_JOIWI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Average Consumption  & Consumption per
  if LS_MC_JGLUE_VIS-AVGCO ne IS_MC_JGLUE_VIS-AVGCO.
    move-corresponding IS_MC_JGLUE_VIS to LS_AVGCO.
    IR_PR_MC_JGLUE->SET_AVGCO( IS_AVGCO = LS_AVGCO
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_JGLUE_VIS-AVGCP ne IS_MC_JGLUE_VIS-AVGCP.
    move-corresponding IS_MC_JGLUE_VIS to LS_AVGCP.
    IR_PR_MC_JGLUE->SET_AVGCP( IS_AVGCP = LS_AVGCP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint type
  if LS_MC_JGLUE_VIS-JOITY ne IS_MC_JGLUE_VIS-JOITY.
    IR_PR_MC_JGLUE->SET_JOITY( IF_JOITY = IS_MC_JGLUE_VIS-JOITY
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Text
  if LS_MC_JGLUE_VIS-TEXT ne IS_MC_JGLUE_VIS-TEXT.
    IR_PR_MC_JGLUE->SET_TEXT( IF_TEXT = IS_MC_JGLUE_VIS-TEXT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Purchase Flag
  if LS_MC_JGLUE_VIS-PURCH ne IS_MC_JGLUE_VIS-PURCH.
    IR_PR_MC_JGLUE->SET_PURCH( IF_PURCH = IS_MC_JGLUE_VIS-PURCH
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Vendor
  if LS_MC_JGLUE_VIS-LIFNR ne IS_MC_JGLUE_VIS-LIFNR.
    IR_PR_MC_JGLUE->SET_LIFNR( IF_LIFNR = IS_MC_JGLUE_VIS-LIFNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price
  if LS_MC_JGLUE_VIS-PRICE ne IS_MC_JGLUE_VIS-PRICE.
    move-corresponding IS_MC_JGLUE_VIS to LS_PRICE.
    IR_PR_MC_JGLUE->SET_PRICE( IS_PRICE = LS_PRICE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_JGLUE_VIS-PRICP ne IS_MC_JGLUE_VIS-PRICP.
    move-corresponding IS_MC_JGLUE_VIS to LS_PRICP.
    IR_PR_MC_JGLUE->SET_PRICP( IS_PRICP = LS_PRICP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method SET_MC_JSTITCH_VIS.

  data:  LS_STILE          type ZVCXI_P0S_S_STILE,
         LS_JOILE          type ZVCXI_P0S_S_JOILE,
         LS_PRICE          type ZVCXI_XCS_S_PRICE,
         LS_PRICP          type ZVCXI_XCS_S_PRICP,
         LS_AVGCO          type ZVCXI_XCS_S_AVGCO,
         LS_AVGCP          type ZVCXI_XCS_S_AVGCP,
         LS_MC_JSTITCH_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MC_JSTITCH_VIS = ME->GET_MC_JSTITCH_VIS( IR_PR_MC_JSTITCH = IR_PR_MC_JSTITCH ).

*** Material
  if LS_MC_JSTITCH_VIS-MATNR ne IS_MC_JSTITCH_VIS-MATNR.
    IR_PR_MC_JSTITCH->SET_MATNR( IF_MATNR = IS_MC_JSTITCH_VIS-MATNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint Length and Stitch Length
  if LS_MC_JSTITCH_VIS-JOILE ne IS_MC_JSTITCH_VIS-JOILE.
    move-corresponding IS_MC_JSTITCH_VIS to LS_JOILE.
    IR_PR_MC_JSTITCH->SET_JOILE( IS_JOILE = LS_JOILE
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_JSTITCH_VIS-STILE ne IS_MC_JSTITCH_VIS-STILE.
    move-corresponding IS_MC_JSTITCH_VIS to LS_STILE.
    IR_PR_MC_JSTITCH->SET_STILE( IS_STILE = LS_STILE
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Average Consumption  & Consumption per
  if LS_MC_JSTITCH_VIS-AVGCO ne IS_MC_JSTITCH_VIS-AVGCO.
    move-corresponding IS_MC_JSTITCH_VIS to LS_AVGCO.
    IR_PR_MC_JSTITCH->SET_AVGCO( IS_AVGCO = LS_AVGCO
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.


  if LS_MC_JSTITCH_VIS-AVGCP ne IS_MC_JSTITCH_VIS-AVGCP.
    move-corresponding IS_MC_JSTITCH_VIS to LS_AVGCP.
    IR_PR_MC_JSTITCH->SET_AVGCP( IS_AVGCP = LS_AVGCP
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint type
  if LS_MC_JSTITCH_VIS-JOITY ne IS_MC_JSTITCH_VIS-JOITY.
    IR_PR_MC_JSTITCH->SET_JOITY( IF_JOITY = IS_MC_JSTITCH_VIS-JOITY
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Text
  if LS_MC_JSTITCH_VIS-TEXT ne IS_MC_JSTITCH_VIS-TEXT.
    IR_PR_MC_JSTITCH->SET_TEXT( IF_TEXT = IS_MC_JSTITCH_VIS-TEXT
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Purchase Flag
  if LS_MC_JSTITCH_VIS-PURCH ne IS_MC_JSTITCH_VIS-PURCH.
    IR_PR_MC_JSTITCH->SET_PURCH( IF_PURCH = IS_MC_JSTITCH_VIS-PURCH
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Vendor
  if LS_MC_JSTITCH_VIS-LIFNR ne IS_MC_JSTITCH_VIS-LIFNR.
    IR_PR_MC_JSTITCH->SET_LIFNR( IF_LIFNR = IS_MC_JSTITCH_VIS-LIFNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price
  if LS_MC_JSTITCH_VIS-PRICE ne IS_MC_JSTITCH_VIS-PRICE.
    move-corresponding IS_MC_JSTITCH_VIS to LS_PRICE.
    IR_PR_MC_JSTITCH->SET_PRICE( IS_PRICE = LS_PRICE
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_JSTITCH_VIS-PRICP ne IS_MC_JSTITCH_VIS-PRICP.
    move-corresponding IS_MC_JSTITCH_VIS to LS_PRICP.
    IR_PR_MC_JSTITCH->SET_PRICP( IS_PRICP = LS_PRICP
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method SET_MC_JTAPE_VIS.

  data:  LS_JOILE        type ZVCXI_P0S_S_JOILE,
         LS_PRICE        type ZVCXI_XCS_S_PRICE,
         LS_PRICP        type ZVCXI_XCS_S_PRICP,
         LS_MC_JTAPE_VIS type ZVCXI_P0SP_S_MC_JOINT_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MC_JTAPE_VIS = ME->GET_MC_JTAPE_VIS( IR_PR_MC_JTAPE = IR_PR_MC_JTAPE ).

*** Material
  if LS_MC_JTAPE_VIS-MATNR ne IS_MC_JTAPE_VIS-MATNR.
    IR_PR_MC_JTAPE->SET_MATNR( IF_MATNR = IS_MC_JTAPE_VIS-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint Length
  if LS_MC_JTAPE_VIS-JOILE ne IS_MC_JTAPE_VIS-JOILE.
    move-corresponding IS_MC_JTAPE_VIS to LS_JOILE.
    IR_PR_MC_JTAPE->SET_JOILE( IS_JOILE = LS_JOILE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Joint type
  if LS_MC_JTAPE_VIS-JOITY ne IS_MC_JTAPE_VIS-JOITY.
    IR_PR_MC_JTAPE->SET_JOITY( IF_JOITY = IS_MC_JTAPE_VIS-JOITY
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Text
  if LS_MC_JTAPE_VIS-TEXT ne IS_MC_JTAPE_VIS-TEXT.
    IR_PR_MC_JTAPE->SET_TEXT( IF_TEXT = IS_MC_JTAPE_VIS-TEXT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Purchase Flag
  if LS_MC_JTAPE_VIS-PURCH ne IS_MC_JTAPE_VIS-PURCH.
    IR_PR_MC_JTAPE->SET_PURCH( IF_PURCH = IS_MC_JTAPE_VIS-PURCH
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Vendor
  if LS_MC_JTAPE_VIS-LIFNR ne IS_MC_JTAPE_VIS-LIFNR.
    IR_PR_MC_JTAPE->SET_LIFNR( IF_LIFNR = IS_MC_JTAPE_VIS-LIFNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price
  if LS_MC_JTAPE_VIS-PRICE ne IS_MC_JTAPE_VIS-PRICE.
    move-corresponding IS_MC_JTAPE_VIS to LS_PRICE.
    IR_PR_MC_JTAPE->SET_PRICE( IS_PRICE = LS_PRICE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_JTAPE_VIS-PRICP ne IS_MC_JTAPE_VIS-PRICP.
    move-corresponding IS_MC_JTAPE_VIS to LS_PRICP.
    IR_PR_MC_JTAPE->SET_PRICP( IS_PRICP = LS_PRICP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
