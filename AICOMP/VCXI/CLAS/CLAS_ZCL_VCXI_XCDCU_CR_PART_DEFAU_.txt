
class ZCL_VCXI_XCDCU_CR_PART_DEFAU definition
  public
  inheriting from ZCL_VCXI_XCDCU_CR_PART
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_CONDREC type ref to ZCL_VCXI_XCDC_CONDREC
    raising
      /VCXI/CX_CKX .
  methods OPEN_REG
    raising
      /VCXI/CX_CKX .

  methods DO_FREE
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods GET_STRIPDESCR
    redefinition .
protected section.

  data R_GRID_DVALUE type ref to ZCL_VCXI_XCDCU_GRID_CR_DVALUE .
  data R_GRID_DEXIT type ref to ZCL_VCXI_XCDCU_GRID_CR_DEXIT .
  data R_DUI_CONDREC type ref to ZCL_VCXI_XCDCU_DUI_CONDREC .
private section.
endclass. "ZCL_VCXI_XCDCU_CR_PART_DEFAU definition
class ZCL_VCXI_XCDCU_CR_PART_DEFAU implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_CONDREC = IR_CONDREC ).

***----------------------------------------------------------------------------
  if ME->R_GRID_DVALUE is not bound.
*** Create Grid for DVC Condition Value Default
    create object ME->R_GRID_DVALUE
      exporting
        IR_CUSTOMIZING = ME->R_CONDREC.
  endif.

***----------------------------------------------------------------------------
  if ME->R_GRID_DEXIT is not bound.
*** Create Grid for DVC Condition Exit Default
    create object ME->R_GRID_DEXIT
      exporting
        IR_CUSTOMIZING = ME->R_CONDREC.
  endif.

  call function 'ZVCXI_XCDCU_DUI_CRP_DEFAU'
    exporting
      IR_PART_DEFAU = ME.

endmethod.
method DO_FREE.

  SUPER->DO_FREE( ).

***------------------------------------------------------------------
*** Free Default Value Grid
  if ME->R_GRID_DVALUE is bound.
    ME->R_GRID_DVALUE->DO_FREE( ).
    clear ME->R_GRID_DVALUE.
  endif.

***------------------------------------------------------------------
*** Free Default Exit Grid
  if ME->R_GRID_DEXIT is bound.
    ME->R_GRID_DEXIT->DO_FREE( ).
    clear ME->R_GRID_DEXIT.
  endif.

endmethod.
method DO_PBO.

*** Refresh Grid
  if ME->R_GRID_DVALUE is bound.
    move ABAP_TRUE to ME->R_GRID_DVALUE->F_REFRESH_REQ.
    if ME->F_REFRESH_REQUESTED = ABAP_TRUE.
      move ABAP_TRUE to ME->R_GRID_DVALUE->F_REFRESH_ALL_REQ.
    endif.
    ME->R_GRID_DVALUE->REFRESH_GRID( ).
  endif.

  if ME->R_GRID_DEXIT is bound.
    move ABAP_TRUE to ME->R_GRID_DEXIT->F_REFRESH_REQ.
    if ME->F_REFRESH_REQUESTED = ABAP_TRUE.
      move ABAP_TRUE to ME->R_GRID_DEXIT->F_REFRESH_ALL_REQ.
    endif.
    ME->R_GRID_DEXIT->REFRESH_GRID( ).
  endif.

endmethod.
method DO_USER_COMMAND.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_DVALUE is bound.
    ME->R_GRID_DVALUE->CHECK_CHANGED_DATA( ).
  endif.

  if ME->R_GRID_DEXIT is bound.
    ME->R_GRID_DEXIT->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
method GET_STRIPDESCR.

  if ME->R_CONDREC->T_CR_DVALUE is initial and
     ME->R_CONDREC->T_CR_DEXIT  is initial.
    concatenate ICON_WF_WORKITEM_READY 'Defaults'(001) into RF_DESCR.
  else.
    concatenate ICON_WF_WORKITEM_COMPLETED 'Defaults'(001) into RF_DESCR.
  endif.

endmethod.
method OPEN_REG.


endmethod.
