
class ZCL_VCXI_XCDCU_DUI definition
  public
  abstract
  create public .

public section.

  data S_DYNP type /VCXI/CKX_S_DYNP_KEY .
  data R_OBJECT type ref to /VCXI/IF_CKX_OBJECT .
  data R_UIFW type ref to ZCL_VCXI_XCDCU_UIFW read-only .

  class-methods FACTORY
    importing
      !IR_UIFW type ref to ZCL_VCXI_XCDCU_UIFW
      !IR_OBJECT type ref to /VCXI/IF_CKX_OBJECT
    returning
      value(RR_DUI) type ref to ZCL_VCXI_XCDCU_DUI
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to ZCL_VCXI_XCDCU_UIFW
      !IR_OBJECT type ref to /VCXI/IF_CKX_OBJECT
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
  abstract
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR .
protected section.

  constants C_UC_CHOOSE type SYUCOMM value 'CHOOSE'. "#EC NOTEXT
  constants C_UC_CD type SYUCOMM value 'CD'. "#EC NOTEXT
  data R_MSG type ref to /VCXI/CL_CKXM_MESSAGE .

  methods HANDLE_UC_CD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_CHANGED
    for event CHANGED of /VCXI/IF_CKX_OBJECT .
  methods HANDLE_UC_CHOOSE
  abstract
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_TOGGLE
  abstract
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CHECK_S
  abstract
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCDCU_DUI definition
class ZCL_VCXI_XCDCU_DUI implementation.
method CONSTRUCTOR.

  move IR_UIFW   to ME->R_UIFW.
  move IR_OBJECT to ME->R_OBJECT.

  set handler ME->HANDLE_CHANGED for ME->R_OBJECT.

*** Register as Detail Screen
  ME->R_UIFW->REGISTER_DUI( IR_DUI = ME ).

*** Initialize Scroll Position
  call function 'SCREEN_INIT'.

endmethod.
method DO_FREE.

  set handler ME->HANDLE_CHANGED for ME->R_OBJECT activation ABAP_FALSE.

  ME->R_UIFW->UNREGISTER_DUI( IR_DUI = ME ).

  free: ME->R_OBJECT,
        ME->R_UIFW.

endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when ZCL_VCXI_XCDCU_DUI=>C_UC_CHOOSE.
      ME->HANDLE_UC_CHOOSE( ).

    when ZCL_VCXI_XCDCU_UIFW=>C_UC_TOGGLE.
      ME->HANDLE_UC_TOGGLE( ).

    when ZCL_VCXI_XCDCU_UIFW=>C_UC_CHECK_S.
      ME->HANDLE_UC_CHECK_S( ).

    when ZCL_VCXI_XCDCU_UIFW=>C_UC_CD.
      ME->HANDLE_UC_CD( ).
  endcase.

endmethod.
method FACTORY.

  case IR_OBJECT->F_TOOBJ.
    when ZCL_VCXI_XCDC_CONDDEF=>C_TOOBJ_CONDDEF.
      create object RR_DUI
        type
          ZCL_VCXI_XCDCU_DUI_CONDDEF
        exporting
          IR_UIFW                  = IR_UIFW
          IR_OBJECT                = IR_OBJECT.

    when ZCL_VCXI_XCDC_CONDREC=>C_TOOBJ_CONDREC.
      create object RR_DUI
        type
          ZCL_VCXI_XCDCU_DUI_CONDREC
        exporting
          IR_UIFW                  = IR_UIFW
          IR_OBJECT                = IR_OBJECT.

  endcase.

endmethod.
method HANDLE_CHANGED.

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.
***   Request and Handle Refresh of Screen
      ME->R_UIFW->REQUEST_DUI_REFRESH( ).
      ME->R_UIFW->HANDLE_DUI_REFRESH_REQ( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_UC_CD.

  data:  LF_CDOCL                type          CDHDR-OBJECTCLAS,
         LF_CDOID                type          CDHDR-OBJECTID,
         LF_APPLICATIONID        type          REPID,
         LF_MSGV2                type          SYMSGV.
  data:  LT_CDRED_STR            type          CDRED_STR_TAB,
         LT_EDITPOS_WITH_HEADER  type table of CDRED.
  data:  LR_OBJECT_CD            type ref to   /VCXI/IF_CKX_OBJECT_CD.

***----------------------------------------------------------------------------
*** Get Change Document Info
  try.
      move ME->R_OBJECT ?to LR_OBJECT_CD.
      check LR_OBJECT_CD is bound.
    catch CX_SY_MOVE_CAST_ERROR.
***   No change document positions found
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '649'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.
  endtry.

  LR_OBJECT_CD->GET_INFO( importing EF_CDOCL = LF_CDOCL
                                    EF_CDOID = LF_CDOID ).


***----------------------------------------------------------------------------
*** Read Change Documents
  call function 'CHANGEDOCUMENT_READ'
    exporting
      OBJECTCLASS       = LF_CDOCL
      OBJECTID          = LF_CDOID
    importing
      ET_CDRED_STR      = LT_CDRED_STR[]
    tables
      EDITPOS           = LT_EDITPOS_WITH_HEADER
    exceptions
      NO_POSITION_FOUND = 1
      others            = 2.
  case SY-SUBRC.
    when 0.
***   Display the Records
      LF_APPLICATIONID = LF_CDOCL.
      call function 'CHANGEDOCUMENT_DISPLAY'
        exporting
          I_APPLICATIONID  = LF_APPLICATIONID
          FLG_AUTOCONDENSE = 'X'
          I_OBJECTCLAS     = LF_CDOCL
          IT_CDRED_STR     = LT_CDRED_STR[]
        tables
          I_CDRED          = LT_EDITPOS_WITH_HEADER.
    when 1.
***   No change document positions found
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '649'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.
    when 2.
***   Error in change document creation/analysis: & &
      move SY-SUBRC to LF_MSGV2.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '327'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.

  endcase.

endmethod.
method SET_CURSOR.

  check ME->R_UIFW is bound.
  ME->R_UIFW->SET_CURSOR( ).

endmethod.
