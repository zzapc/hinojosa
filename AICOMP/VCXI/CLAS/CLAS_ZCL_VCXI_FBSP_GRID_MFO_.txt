
class ZCL_VCXI_FBSP_GRID_MFO definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_FBSP_S_MFO_GRID'
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_MFSO
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFSO_P_VIS
    importing
      !IR_PR_MFSO type ref to ZCL_VCXI_XCSP_PR_MFSO
    returning
      value(RS_MFO_VIS) type ZVCXI_FBSP_S_MFO_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFSO_P_VIS
    importing
      !IR_PR_MFSO type ref to ZCL_VCXI_XCSP_PR_MFSO
      !IS_MFO_VIS type ZVCXI_FBSP_S_MFO_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods ADD_PRVDR
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_GRID_MFO definition
class ZCL_VCXI_FBSP_GRID_MFO implementation.
  method ADD_PRVDR.

    data: LF_POSID type        /VCXI/VKSR_POSID,
          LF_ID    type        /VCXI/CKX_ID.
    data: LS_PRVDR_DEF         type        /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_GATE              type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE              type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Find ID
    move IF_ID to LF_ID.

    if LF_ID is initial and
       LINES( ME->T_PRVDR_DEF ) gt 1.

***   No Provider Type available to add
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCS'
          IF_MSGNO = '013' ).

    elseif LF_ID is initial and
           LINES( ME->T_PRVDR_DEF ) le 1.
      read table ME->T_PRVDR_DEF into LS_PRVDR_DEF index 1.
      if SY-SUBRC = 0.
        move LS_PRVDR_DEF-ID to LF_ID.
      else.

***     No Provider Type available to add
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
            IF_MSGTY = 'E'
            IF_MSGID = 'ZVCXI_XCS'
            IF_MSGNO = '013' ).

      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get Cursor in Grid
    LT_GATE = ME->GET_SELECTED_GATES( IF_LAST_GATE = ABAP_TRUE ).
    read table LT_GATE into LR_GATE index 1.
    if LR_GATE is bound.

***   Add 5 to insert after selected position
      LF_POSID = LR_GATE->GET_POSID( ).
      add C_POSID_5 to LF_POSID.

    else.

***   Move to End
      move '9999' to LF_POSID.

    endif.

***--------------------------------------------------------------------------------------
*** Create Provider
    RR_GATE = ME->R_GATE->CREATE_ELEMENT( IF_ID = LF_ID ).
    if RR_GATE->IS_INUSE( ) eq ABAP_FALSE.
      RR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).
    endif.
    RR_GATE->SET_POSID( IF_POSID = LF_POSID ).

*** Reorg position ID's
    RR_GATE->REORG_POSID( ).

*** Refresh is required
    ME->F_REFRESH_REQ = ABAP_TRUE.

  endmethod.
method CHANGE_STYLE_MFSO.

  free CT_STYL.

*** Set ID of MF x-connection = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Number = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZIF_VCXI_XCSP_MFO=>C_IPRVT_XCS_MFO.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE,
          LF_COLPOS type        I.
    field-symbols: <S_FCAT>    type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL' or 'SURWT_UOMC6'.
          move 'X' to <S_FCAT>-TECH.

***     ID for MF x-connect
        when 'IMFXC'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

***     ID for Bag Type
        when 'IBAGT'.
          move ABAP_TRUE to <S_FCAT>-F4AVAILABL.

      endcase.

***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'IMFXC'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFRAT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'DISST'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'IBAGT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWID'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWID_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGHEI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGHEI_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWGT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWGT_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SHUNT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_GRID_DATA.

    data: LS_MFO_GRID       type          ZVCXI_FBSP_S_MFO_GRID.
    data: LT_GATE           type          /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to   /VCXI/CL_VKSR_GATE,
          LR_PR_MFSO type ref to   ZCL_VCXI_XCSP_PR_MFSO.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Gates of MFSO_L
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
***--------------------------------------------------------------------------------------
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MFSO.
          check LR_PR_MFSO is bound.

          move LR_GATE->GET_POSID( ) to LS_MFO_GRID-POSID.
          move LR_GATE->F_GATKY      to LS_MFO_GRID-GATKY.
          move LR_GATE               to LS_MFO_GRID-R_GATE.

          LS_MFO_GRID-S_MFO_VIS = ME->GET_MFSO_P_VIS( IR_PR_MFSO = LR_PR_MFSO ).

***       Change Style Details -> all DISABLED because nothing needs to be edit in MFSO
          ME->CHANGE_STYLE_MFSO( changing CT_STYL = LS_MFO_GRID-T_STYL ).

***       Call DVC Service - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = LS_MFO_GRID-T_STYL ).

***       Add Entry
          append initial line to <T_DATA> assigning <S_DATA>.
          move-corresponding LS_MFO_GRID to <S_DATA>.

        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_MFSO_P_VIS.

    data:  LR_PR_MFSO_P  type ref to ZCL_VCXI_FBSP_PR_MFSO_P.


    move IR_PR_MFSO ?to LR_PR_MFSO_P.

***--------------------------------------------------------------------------------------
*** Get MaterialNumber, Description, Low Level Code and X-connect
    move IR_PR_MFSO->GET_MATNR( )       to RS_MFO_VIS-MATNR.
    move IR_PR_MFSO->GET_MATNR_DESCR( ) to RS_MFO_VIS-MATNR_DESCR.
    move IR_PR_MFSO->GET_DISST( )       to RS_MFO_VIS-DISST.
    move IR_PR_MFSO->GET_IMFXC( )       to RS_MFO_VIS-IMFXC.

*** Get Consumption
    RS_MFO_VIS-S_CONSU = IR_PR_MFSO->GET_CONSU( ).

*** MF Ratio
    move IR_PR_MFSO->GET_MFRAT( )       to RS_MFO_VIS-MFRAT.

***--------------------------------------------------------------------------------------
*** Bag Type
    LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_IBAGT( importing EF_IBAGT = RS_MFO_VIS-IBAGT ).

*** Bag Width
    LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_BGWID( importing ES_BGWID = RS_MFO_VIS-S_BGWID ).

*** Bag Height
    LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_BGHEI( importing ES_BGHEI = RS_MFO_VIS-S_BGHEI ).

*** Bag Weight
    LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_BGWGT( importing ES_BGWGT = RS_MFO_VIS-S_BGWGT ).

*** Number of Ups
    LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_NOUPS( importing EF_NOUPS = RS_MFO_VIS-NOUPS ).

*** Number of Outs
    LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_NOOUT( importing EF_NOOUT = RS_MFO_VIS-NOOUT ).

*** Shipping Unit ID
    RS_MFO_VIS-SHUNT = LR_PR_MFSO_P->ZIF_VCXI_FBSP_BGDIM~GET_SHUNT( ).

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MFO_GRID      type    ZVCXI_FBSP_S_MFO_GRID.
    data: LR_PR_MFSO type ref to   ZCL_VCXI_XCSP_PR_MFSO,
          LR_CX_CKX  type ref to   /VCXI/CX_CKX.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_MFO_GRID.

          move LS_MFO_GRID-R_GATE->R_CLSPR ?to LR_PR_MFSO.

***       Set Values to PR Class
          ME->SET_MFSO_P_VIS( IR_PR_MFSO = LR_PR_MFSO
                              IS_MFO_VIS = LS_MFO_GRID-S_MFO_VIS ).
        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
method SET_MFSO_P_VIS.

  data:  LS_MFO_VIS type ZVCXI_FBSP_S_MFO_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MFO_VIS = ME->GET_MFSO_P_VIS( IR_PR_MFSO = IR_PR_MFSO ).

*** ID for MF x-connection
  if LS_MFO_VIS-IMFXC ne IS_MFO_VIS-IMFXC.
    IR_PR_MFSO->SET_IMFXC( IF_IMFXC = IS_MFO_VIS-IMFXC
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
