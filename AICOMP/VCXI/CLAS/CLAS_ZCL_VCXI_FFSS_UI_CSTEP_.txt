
class ZCL_VCXI_FFSS_UI_CSTEP definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_CSTEP_VIS type ZVCXI_FFSS_S_CSTEP_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  constants C_UC_FPROP_IN type SYUCOMM value 'FPROP_IN' ##NO_TEXT.
  constants C_UC_FPROP_OUT type SYUCOMM value 'FPROP_OUT' ##NO_TEXT.
  constants C_UC_FSTRC_IN type SYUCOMM value 'FSTRC_IN' ##NO_TEXT.
  constants C_UC_FSTRC_OUT type SYUCOMM value 'FSTRC_OUT' ##NO_TEXT.
  data R_PR_CSTEP type ref to ZCL_VCXI_FFSS_PR_CSTEP .
  data R_TEXTEDIT_CSTEP type ref to ZCL_VCXI_F0S_TEXTEDIT .

  methods HANDLE_UC_FPROP
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FSTRC
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_CSTEP definition
class ZCL_VCXI_FFSS_UI_CSTEP implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT_CSTEP
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_TEXTEDIT_CSTEP is bound.
***--------------------------------------------------------------------------------------
***   Update the Long Text before leaving the screen
      if ME->R_TEXTEDIT_CSTEP is bound.
        ME->R_TEXTEDIT_CSTEP->UPDATE_TEXT( ).
      endif.

      ME->R_TEXTEDIT_CSTEP->DO_FREE( ).
      clear ME->R_TEXTEDIT_CSTEP.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.
***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Update TextEdit
    if ME->R_TEXTEDIT_CSTEP is bound.
      ME->R_TEXTEDIT_CSTEP->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
***   Film Structure Popup
      when C_UC_FSTRC_IN or C_UC_FSTRC_OUT.
        ME->HANDLE_UC_FSTRC( exporting IF_UCOMM = IF_UCOMM ).

***   Film Property Popup
      when C_UC_FPROP_IN or C_UC_FPROP_OUT.
        ME->HANDLE_UC_FPROP( exporting IF_UCOMM = IF_UCOMM  ).
    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP.

  endmethod.
  method HANDLE_UC_FPROP.

    data: LS_FIWID      type        ZVCXI_F0S_S_FIWID,
          LS_FITIN      type        ZVCXI_FFS_S_FITIN,
          LR_BL_FIBPROP type ref to ZCL_VCXI_FFSS_BL_FIBPROP,
          LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

    case IF_UCOMM.
      when C_UC_FPROP_IN.
***     Get Film Property (Inbound)
        ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_FIBPX( importing ER_BL_FIBPROP = LR_BL_FIBPROP ).
        ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).

***     Move corresponding data (Inbound)
        move: ME->S_CSTEP_VIS-S_FIWID_IN to LS_FIWID,
              ME->S_CSTEP_VIS-S_FITIN_IN to LS_FITIN.

      when C_UC_FPROP_OUT.
***     Get Film Property (Outbound)
        ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIBPX( importing ER_BL_FIBPROP = LR_BL_FIBPROP ).
        ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).

***     Move corresponding data (Outbound)
        move: ME->S_CSTEP_VIS-S_FIWID_OUT to LS_FIWID,
              ME->S_CSTEP_VIS-S_FITIN_OUT to LS_FITIN.

    endcase.

*** Start Popup
    ZCL_VCXI_FFSS_POPUP_FIPROP=>START( IR_BL_FIBPROP = LR_BL_FIBPROP
                                       IR_BL_FIFPROP = LR_BL_FIFPROP
                                       IS_FIWID      = LS_FIWID
                                       IS_FITIN      = LS_FITIN ).

  endmethod.
  method HANDLE_UC_FSTRC.

    data: LR_BL_FISTRUCT    type ref to ZCL_VCXI_FFSS_BL_FISTRUCT.

    case IF_UCOMM.
      when C_UC_FSTRC_IN.
***     Get Film Structure (Inbound)
        ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).

      when C_UC_FSTRC_OUT.
***     Get Film Structure (Outbound)
        ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).
    endcase.

*** Start Popup
    check LR_BL_FISTRUCT is bound.
    ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT ).

  endmethod.
  method INIT_VIS.

    check ME->R_PR_CSTEP is bound.
    free: ME->S_CSTEP_VIS.

***--------------------------------------------------------------------------------------
*** Film Width (Outbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIWID( importing ES_FIWID = ME->S_CSTEP_VIS-S_FIWID_OUT ).

*** Trim Requirement on Width (Outbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_TREQW( importing ES_TREQW = ME->S_CSTEP_VIS-S_TREQW_OUT ).

*** Number of Ups (Outbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_NOUPS( importing EF_NOUPS = ME->S_CSTEP_VIS-NOUPS_OUT ).

*** Internal Film Thickness (Outbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_FITIN( importing ES_FITIN = ME->S_CSTEP_VIS-S_FITIN_OUT ).

*** Film Thickness External (Outbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_FITEX( importing ES_FITEX = ME->S_CSTEP_VIS-S_FITEX_OUT ).

*** Surface Weight (Outbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_NEXT~GET_SURWT( importing ES_SURWT = ME->S_CSTEP_VIS-S_SURWT_OUT ).
    move ME->S_CSTEP_VIS-S_SURWT_OUT-SURWT_UOM to ME->S_CSTEP_VIS-SURWT_UOMC6OUT.


***--------------------------------------------------------------------------------------
*** Film Width (Inbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID( importing ES_FIWID = ME->S_CSTEP_VIS-S_FIWID_IN ).

*** Trim Requirement on Width (Inbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_TREQW( importing ES_TREQW = ME->S_CSTEP_VIS-S_TREQW_IN ).

*** Number of Ups (Inbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_NOUPS( importing EF_NOUPS = ME->S_CSTEP_VIS-NOUPS_IN ).

*** Internal Film Thickness (Inbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_FITIN( importing ES_FITIN = ME->S_CSTEP_VIS-S_FITIN_IN ).

*** Film Thickness External (Inbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_FITEX( importing ES_FITEX = ME->S_CSTEP_VIS-S_FITEX_IN ).

*** Surface Weight (Inbound)
    ME->R_PR_CSTEP->ZIF_VCXI_FFSS_COMM_PREV~GET_SURWT( importing ES_SURWT = ME->S_CSTEP_VIS-S_SURWT_IN ).
    move ME->S_CSTEP_VIS-S_SURWT_IN-SURWT_UOM to ME->S_CSTEP_VIS-SURWT_UOMC6IN.

  endmethod.
