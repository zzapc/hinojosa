
class ZCL_VCXI_XCM_MBQ_STP_S401 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  abstract
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.

  methods CREATE_MMEXT
  abstract
    importing
      !IF_MATNR type MATNR
      !IS_ACTDAT_MMEXT type ANY
    raising
      /VCXI/CX_CKX .
  methods GET_MMEXT
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_CNTXT type ZVCXI_XCE_MM_CNTXT
    returning
      value(RR_MMEXT) type ref to ZCL_VCXI_XCE_MM_MMEXT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S401 definition
class ZCL_VCXI_XCM_MBQ_STP_S401 implementation.
  method EXECUTE.

    data: LS_MATLI    type ZVCXI_XCM_MBQ_S_MATLI,
          LS_BAPIRET2 type BAPIRET2.
    data: LR_ACTDAT type ref to DATA.
    field-symbols: <S_ACTDAT_MMEXT> type ANY.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - MM Extension
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_MMEXT ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_MMEXT ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_MMEXT>.


***--------------------------------------------------------------------------------------
***     Create Material Extension
        ME->CREATE_MMEXT( IF_MATNR        = LS_MATLI-MATNR
                          IS_ACTDAT_MMEXT = <S_ACTDAT_MMEXT> ).

***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
  method GET_MMEXT.

*** Get MM Extension Instance
    RR_MMEXT ?= ZCL_VCXI_XCE_MM_MMEXT=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = ZCL_VCXI_XCE_MM_MMEXT=>ENCRYPT_GUID( IF_MATNR = IF_MATNR
                                                                                                                        IF_WERKS = IF_WERKS
                                                                                                                        IF_CNTXT = IF_CNTXT ) ).

  endmethod.
