
class ZCL_VCXI_P0SU_PR_CPMCNF definition
  public
  inheriting from ZCL_VCXI_XCSU_PR_CPMCNF
  create public .

public section.

  methods ZIF_VCXI_XCSU_CPMCNF~DET_EFFCT
    redefinition .
  methods ZIF_VCXI_XCSU_CPMCNF~GET_MATDE
    redefinition .
protected section.

  methods GET_AREA_WEIGHT
    returning
      value(RR_PR_AREA_WEIGHT) type ref to ZCL_VCXI_P0SS_PR_AREA_WEIGHT
    raising
      /VCXI/CX_CKX .
  methods GET_SPEC
    returning
      value(RR_PR_SPEC) type ref to ZCL_VCXI_P0SS_PR_SPEC
    raising
      /VCXI/CX_CKX .
  methods GET_SPEC_AS
    returning
      value(RR_PR_SPEC_AS) type ref to ZCL_VCXI_P0SS_PR_SPEC_AS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SU_PR_CPMCNF definition
class ZCL_VCXI_P0SU_PR_CPMCNF implementation.
method GET_AREA_WEIGHT.

  data:          LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Get Area and Weight Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_AREA_WEIGHT=>C_IPRVT_P0_AREA_WEIGHT
                                   IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    try.
        if LR_GATE->IS_IN_LINE( IR_GATE = ME->R_GATE ) eq ABAP_TRUE.
          move LR_GATE->R_CLSPR ?to RR_PR_AREA_WEIGHT.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: RR_PR_AREA_WEIGHT.
    endtry.
  endloop.

endmethod.
method GET_SPEC.

  data:          LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_SPEC=>C_IPRVT_P0_SPEC
                                   IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    try.
        if LR_GATE->IS_IN_LINE( IR_GATE = ME->R_GATE ) eq ABAP_TRUE.
          move LR_GATE->R_CLSPR ?to RR_PR_SPEC.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: RR_PR_SPEC.
    endtry.
  endloop.

endmethod.
method GET_SPEC_AS.

  data:          LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_SPEC_AS=>C_IPRVT_P0_SPEC_AS
                                   IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    try.
        if LR_GATE->IS_IN_LINE( IR_GATE = ME->R_GATE ) eq ABAP_TRUE.
          move LR_GATE->R_CLSPR ?to RR_PR_SPEC_AS.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: RR_PR_SPEC_AS.
    endtry.
  endloop.

endmethod.
  method ZIF_VCXI_XCSU_CPMCNF~DET_EFFCT.

    data: LS_PROLE       type        ZVCXI_P0S_S_PROLE,
          LS_PROWI       type        ZVCXI_P0S_S_PROWI,
          LS_PROHE       type        ZVCXI_P0S_S_PROHE,
          LS_WDRNP       type        ZVCXI_P0SS_S_WDRNP,
          LS_PACKMAT_DIM type        ZVCXI_XCSU_S_PACKMAT_DIM.
    data: LR_PR_SPEC        type ref to ZCL_VCXI_P0SS_PR_SPEC,
          LR_PR_SPEC_AS     type ref to ZCL_VCXI_P0SS_PR_SPEC_AS,
          LR_PR_AREA_WEIGHT type ref to ZCL_VCXI_P0SS_PR_AREA_WEIGHT.
    field-symbols: <S_EFFCT>          type        ZVCXI_XCSU_S_EFFCT.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
    LR_PR_SPEC    = ME->GET_SPEC( ).
    LR_PR_SPEC_AS = ME->GET_SPEC_AS( ).

***------------------------------------------------------------------------------------------------
*** Get Area and Weight Reference
    LR_PR_AREA_WEIGHT = ME->GET_AREA_WEIGHT( ).

***------------------------------------------------------------------------------------------------
*** Get Data
    if LR_PR_SPEC is bound.
      LS_PROLE = LR_PR_SPEC->GET_PROLE( ).
      LS_PROWI = LR_PR_SPEC->GET_PROWI( ).
      LS_PROHE = LR_PR_SPEC->GET_PROHE( ).
    elseif LR_PR_SPEC_AS is bound.
      LS_PROLE = LR_PR_SPEC_AS->GET_PROLE( ).
      LS_PROWI = LR_PR_SPEC_AS->GET_PROWI( ).
      LS_PROHE = LR_PR_SPEC_AS->GET_PROHE( ).
    endif.

    if LR_PR_AREA_WEIGHT is bound.
      LS_WDRNP = LR_PR_AREA_WEIGHT->GET_WDRNP( ).
    endif.

*** Get in in Format of Material Master
    LS_PACKMAT_DIM-LAENG = LS_PROLE-PROLE.
    LS_PACKMAT_DIM-MEABM = LS_PROLE-PROLE_UOM.
    LS_PACKMAT_DIM-BREIT = LS_PROWI-PROWI.
    LS_PACKMAT_DIM-HOEHE = LS_PROHE-PROHE.
    LS_PACKMAT_DIM-BRGEW = LS_WDRNP-WDRNP.
    LS_PACKMAT_DIM-GEWEI = LS_WDRNP-WDRNP_UOM.

***------------------------------------------------------------------------------------------------
*** Adjust Effects
    loop at CT_EFFCT assigning <S_EFFCT>.
      case <S_EFFCT>-DIMEN.
        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH.
          if LS_PROLE is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-MEABM
                                                               IF_VALUE_IN  = LS_PACKMAT_DIM-LAENG
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.

        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH.
          if LS_PROWI is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-MEABM
                                                               IF_VALUE_IN  = LS_PACKMAT_DIM-BREIT
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.

        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT.
          if LS_PROHE is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-MEABM
                                                               IF_VALUE_IN  = LS_PACKMAT_DIM-HOEHE
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.

        when ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WEIGHT.
          if LS_WDRNP is not initial.
            ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM
                                                               IF_UOM_IN    = LS_PACKMAT_DIM-GEWEI
                                                               IF_VALUE_IN  = LS_PACKMAT_DIM-BRGEW
                                                     importing EF_VALUE_OUT = <S_EFFCT>-DIMVA
                                                               EF_UOM_OUT   = <S_EFFCT>-DIMVA_UOM ).
          endif.
      endcase.
    endloop.

  endmethod.
  method ZIF_VCXI_XCSU_CPMCNF~GET_MATDE.

    data: LR_PR_SPEC    type ref to ZCL_VCXI_P0SS_PR_SPEC,
          LR_PR_SPEC_AS type ref to ZCL_VCXI_P0SS_PR_SPEC_AS.

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
    LR_PR_SPEC = ME->GET_SPEC( ).

    if LR_PR_SPEC is bound.
      RF_MATDE = LR_PR_SPEC->GET_MATDE( ).
    else.
      LR_PR_SPEC_AS = ME->GET_SPEC_AS( ).

      if LR_PR_SPEC_AS is bound.
        RF_MATDE = LR_PR_SPEC_AS->GET_MATDE( ).
      endif.
    endif.

  endmethod.
