
class ZCL_VCXI_P1SR_BL_PSTEP_GUIL definition
  public
  inheriting from ZCL_VCXI_P1SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_GUIL type /VCXI/VSMC_IPSTP value 'PX_PS_GUIL' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_GUIL
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  data F_NOCUT type ZVCXI_PXS_NOCUT .
  data F_PCPCU type ZVCXI_PXS_PCPCU .
  data S_CUTHE type ZVCXI_PXS_S_CUTHE .
  data S_PCDIM_IN type ZVCXI_P0SP_S_PCDIM .
  data T_PCDIM_OUT type ZVCXI_P0SP_TT_PCDIM .

  methods INIT_BY_CSTEP_GUIL
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_GUIL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_PCDIM_OUT
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SR_BL_PSTEP_GUIL definition
class ZCL_VCXI_P1SR_BL_PSTEP_GUIL implementation.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Sheet Length (Inbound)
        when 'P0_LT_DI_SHTLEN'.
          move ME->S_PCDIM_IN-PCLEN     to LF_LDVAL.
          move ME->S_PCDIM_IN-PCLEN_UOM to LF_LDUOM.

***     Sheet Width (Inbound)
        when 'P0_LT_DI_SHTWID'.
          move ME->S_PCDIM_IN-PCWID     to LF_LDVAL.
          move ME->S_PCDIM_IN-PCWID_UOM to LF_LDUOM.

***     Cut Height (Processing)
        when 'PX_LT_DP_CUTHE'.
          move ME->S_CUTHE-CUTHE     to LF_LDVAL.
          move ME->S_CUTHE-CUTHE_UOM to LF_LDUOM.

***     Number of Cuts (Processing)
        when 'PX_LT_DP_NOCUT'.
          move ME->F_NOCUT to LF_LDVAL.
          move 'ST'        to LF_LDUOM.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_GUIL type ref to ZCL_VCXI_P1SR_BL_PSTEP_GUIL.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_GUIL.

*** PC Dimensions
    if ME->S_PCDIM_IN  eq LR_BL_PSTEP_GUIL->S_PCDIM_IN  and
       ME->T_PCDIM_OUT eq LR_BL_PSTEP_GUIL->T_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Number of Cuts, Cut Height and PC/Cut
    if ME->F_NOCUT eq LR_BL_PSTEP_GUIL->F_NOCUT and
       ME->S_CUTHE eq LR_BL_PSTEP_GUIL->S_CUTHE and
       ME->F_PCPCU eq LR_BL_PSTEP_GUIL->F_PCPCU.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_GUIL type ref to ZCL_VCXI_P1SR_BL_PSTEP_GUIL.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_GUIL.

*** PC Dimensions
    move ME->S_PCDIM_IN    to LR_BL_PSTEP_GUIL->S_PCDIM_IN.
    move ME->T_PCDIM_OUT   to LR_BL_PSTEP_GUIL->T_PCDIM_OUT.

*** Number of Cuts, Cut Height and PC/Cut
    move ME->F_NOCUT       to LR_BL_PSTEP_GUIL->F_NOCUT.
    move ME->S_CUTHE       to LR_BL_PSTEP_GUIL->S_CUTHE.
    move ME->F_PCPCU       to LR_BL_PSTEP_GUIL->F_PCPCU.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'PX_AT_GUIL'.
        ME->FILL_SPVRE_ADDON_GUIL( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                             IR_ARBPL       = IR_ARBPL
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_GUIL.

***------------------------------------------------------------------------------------------------
*** Number of Cuts
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_GUIL=>C_PARID_NOCUT
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->F_NOCUT
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** PC/Cut
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_GUIL=>C_PARID_PCPCU
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->F_PCPCU
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
*** Add PC Out
    ME->ADD_SPVRE_PCOUT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                   IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                   IT_PCDIM        = ME->T_PCDIM_OUT
                         changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    move 'CONV'     to CF_ID_ARBPL.

**** If Manual
*    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
*      move 'MANU'     to CF_ID_ARBPL.
*    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_PCDIM_OUT.

    data: LF_PCTYP type ZVCXI_P0SP_PCTYP.
    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.

***--------------------------------------------------------------------------------------
*** Get PC Type and Direction
    ZCL_VCXI_P0SR_CUST_PSTEP=>GET_PSTEP_INFO( exporting IF_IPSTP = ME->F_IPSTP
                                              importing EF_PCTYP = LF_PCTYP ).

***--------------------------------------------------------------------------------------
*** Process Outbound Provider
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_CSTEP_GUIL.

***   Get Handling Dimensions based on Corrugator Forward Property (Outbound)
      LR_BL_CRFPROP = cast ZIF_VCXI_P1SS_COMM_NEXT( LR_GATE->R_CLSPR )->GET_CRFPX( ).
      if LR_BL_CRFPROP is bound.
        LS_HNDDIM = LR_BL_CRFPROP->S_HNDDIM.
      else.
        clear LS_HNDDIM.
      endif.

***   Add PC Dimension
      append value #( PCTYP     = LF_PCTYP
                      PCLEN     = LS_HNDDIM-HNDLE
                      PCLEN_UOM = LS_HNDDIM-HNDLE_UOM
                      PCWID     = LS_HNDDIM-HNDWI
                      PCWID_UOM = LS_HNDDIM-HNDWI_UOM
                      PCHEI     = LS_HNDDIM-HNDHE
                      PCHEI_UOM = LS_HNDDIM-HNDHE_UOM

                      PCUPS     = cast ZIF_VCXI_P1SS_COMM_NEXT( LR_GATE->R_CLSPR )->GET_NOUPS( )
                      NOOUT     = cast ZCL_VCXI_P1SS_PR_CSTEP_GUIL( LR_GATE->R_CLSPR )->GET_NOUTT( )
                      PCDIR     = 'A'
                    ) to RT_PCDIM.

    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element for Activity Slit/Slot/Score
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_GUIL'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Number of Cuts
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ACTVY_GUIL=>C_PARID_NOCUT
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->F_NOCUT
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** PC per Cut
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ACTVY_GUIL=>C_PARID_PCPCU
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->F_PCPCU
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
*** Add PC Out
    ME->ADD_SPVRE_PCOUT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                   IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                                   IT_PCDIM        = ME->T_PCDIM_OUT
                         changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_PCDIM_IN'   VALUE = ref #( ME->S_PCDIM_IN  ) ) to RT_DATA.
    append value #( NAME = 'T_PCDIM_OUT'  VALUE = ref #( ME->T_PCDIM_OUT ) ) to RT_DATA.

    append value #( NAME = 'F_NOCUT'  VALUE = ref #( ME->F_NOCUT ) ) to RT_DATA.
    append value #( NAME = 'S_CUTHE'  VALUE = ref #( ME->S_CUTHE ) ) to RT_DATA.
    append value #( NAME = 'F_PCPCU'  VALUE = ref #( ME->F_PCPCU ) ) to RT_DATA.

  endmethod.
  method INIT_BY_CSTEP_GUIL.

    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_GUIL type ref to ZCL_VCXI_P1SS_PR_CSTEP_GUIL.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Guillotining
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_CSTEP_GUIL.
      LR_PR_CSTEP_GUIL ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_CSTEP_GUIL  is bound.


***--------------------------------------------------------------------------------------
*** Number of Cuts, Cut Height and PC/Cut
    ME->F_NOCUT = LR_PR_CSTEP_GUIL->GET_NOCUT( ).
    ME->S_CUTHE = LR_PR_CSTEP_GUIL->GET_CUTHE( ).
    ME->F_PCPCU = LR_PR_CSTEP_GUIL->GET_PCPCU( ).

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


*** Initialize by CStep Guillotining
    ME->INIT_BY_CSTEP_GUIL( IT_PRVDR = IT_PRVDR ).

*** Get Inbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_IN( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_IN = value #( LT_PCDIM[ 1 ] optional ).

*** Get Outbound PC Dimension
    ME->T_PCDIM_OUT = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).

*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.
  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    CT_PCDIM = ME->T_PCDIM_OUT.

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.

    RT_PCDIM = value #( ( ME->S_PCDIM_IN ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    field-symbols: <S_PCDIM_OUT>  type ZVCXI_P0SP_S_PCDIM.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
    ME->S_PCDIM_IN  = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_IN
                                      IF_PCDIR = IF_PCDIR ).

*** Turn PC Dimension OUT
    loop at ME->T_PCDIM_OUT assigning <S_PCDIM_OUT>.
      <S_PCDIM_OUT> = ME->TURN_PCDIM( IS_PCDIM = <S_PCDIM_OUT>
                                      IF_PCDIR = IF_PCDIR ).
    endloop.

  endmethod.
