
class ZCL_VCXI_XCSUC_UI_CPACK definition
  public
  create public .

public section.

  constants C_UC_CD type SYUCOMM value 'CD'. "#EC NOTEXT
  constants C_UC_TOGGLE type SYUCOMM value 'TOGGLE'. "#EC NOTEXT
  data F_CURSOR type SCRFNAME .
  data R_CPACK type ref to ZCL_VCXI_XCSUC_CPACK read-only .
  data S_CPACK_VIS type ZVCXI_XCSUC_S_CPACK_VIS read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    changing
      !CF_UCOMM type SYUCOMM .
  methods SET_CURSOR .
  type-pools ABAP .
  class-methods START_UI
    importing
      !IF_CPACK type ZVCXI_XCSU_CPACK
      !IF_CHANGE type ABAP_BOOL default ABAP_FALSE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_CPACK type ZVCXI_XCSU_CPACK
      !IF_CHANGE type ABAP_BOOL default ABAP_FALSE
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_CPACK_VIS
    importing
      !IS_CPACK_VIS type ZVCXI_XCSUC_S_CPACK_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
protected section.

  data F_CHANGE type ABAP_BOOL value abap_false. "#EC NOTEXT .
  constants C_UC_BACK type SYUCOMM value 'BACK'. "#EC NOTEXT
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  constants C_UC_EXIT type SYUCOMM value 'EXIT'. "#EC NOTEXT
  constants C_UC_SAVE type SYUCOMM value 'SAVE'. "#EC NOTEXT
  data F_REFRESH_REQ type ABAP_BOOL .
  data R_GRID_CPACK type ref to ZCL_VCXI_XCSUC_S_GRID_CPACK .
  constants C_UC_REQ_TR type SYUCOMM value 'REQ_TR'. "#EC NOTEXT
  data R_MSG type ref to /VCXI/CL_CKXM_MESSAGE .
  constants C_UC_CHECK type SYUCOMM value 'CHECK'. "#EC NOTEXT

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods CHECK_FOR_CHANGES
    returning
      value(RF_CANCELED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_BACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXIT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SAVE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_REQ_TR
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_TOGGLE
    raising
      /VCXI/CX_CKX .
  methods SET_PFSTATUS
    raising
      /VCXI/CX_CKX .
  methods SET_TITLE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CHECK
    raising
      /VCXI/CX_CKX .
private section.

  data S_DYNP type /VCXI/CKX_S_DYNP_KEY .
endclass. "ZCL_VCXI_XCSUC_UI_CPACK definition
class ZCL_VCXI_XCSUC_UI_CPACK implementation.
method CHECK_FOR_CHANGES.

  data:  LF_ANSWER          type C.

*** If Changes are allowed
  if ME->R_CPACK->F_CHANGED eq ABAP_TRUE.
    call function 'POPUP_TO_CONFIRM'
      exporting
        TEXT_QUESTION  = 'Changed data will be lost. Do you want to save?'(Q01)
      importing
        ANSWER         = LF_ANSWER
      exceptions
        TEXT_NOT_FOUND = 1
        others         = 2.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

    case LF_ANSWER.
      when '1'.
***     Save and than go on
        ME->HANDLE_UC_SAVE( ).
        move ABAP_FALSE to RF_CANCELED.
      when '2'.
***     Do nothing but go on
        move ABAP_FALSE to RF_CANCELED.
      when 'A'.
***     Cancel
        move ABAP_TRUE to RF_CANCELED.
    endcase.
  endif.

endmethod.
method CONSTRUCTOR.

  data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
  data: LF_GUID   type        /VCXI/CKX_GUID.

***----------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_XCSUC_CPACK=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCSUC_CPACK=>C_ACTVT_DISPLAY ).

*** Bind UI Framework
  call function 'ZVCXI_XCSUC_UI_CPACK_BIND'
    exporting
      IR_UI_CPACK = ME
    importing
      RS_DYNP     = ME->S_DYNP.

  select single CPACK
           from ZVCXI_XCS_TD370
           into LF_GUID where CPACK = IF_CPACK.
  if SY-SUBRC = 0.
*** Get Packaging Code Customizing
    move IF_CPACK to LF_GUID.
    try.
        LR_OBJECT = ZCL_VCXI_XCSUC_CPACK=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
      catch /VCXI/CX_CKX.
        clear: LR_OBJECT.
    endtry.

    if LR_OBJECT is bound.
      try.
          move LR_OBJECT ?to   ME->R_CPACK.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: ME->R_CPACK.
      endtry.
    endif.

*** Create new one
  else.
    ME->R_CPACK = ZCL_VCXI_XCSUC_CPACK=>CREATE( IF_CPACK = IF_CPACK ).
  endif.

  check ME->R_CPACK is bound.
*** Do Locking if needed
  if IF_CHANGE = ABAP_TRUE and
     ME->R_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
    ME->R_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK( ).
  endif.

***----------------------------------------------------------------------------
  if ME->R_GRID_CPACK is not bound.
*** Create Grid for Packaging Code
    create object ME->R_GRID_CPACK
      exporting
        IR_CUSTOMIZING = ME->R_CPACK.
  endif.

***----------------------------------------------------------------------------
*** Create Message Object
  if ME->R_MSG is not bound.
    create object ME->R_MSG.
  endif.

endmethod.
method DO_FREE.

***------------------------------------------------------------------
*** Free Packaging Code Grid
  if ME->R_GRID_CPACK is bound.
    ME->R_GRID_CPACK->DO_FREE( ).
    clear ME->R_GRID_CPACK.
  endif.

*** Free Packaging Code Customizing
  ME->R_CPACK->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_FREE ).

  clear: ME->R_CPACK.

endmethod.
method DO_MODIFY_SCREEN.

*** no Input allowed if it is not locked
  if ME->R_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.

    loop at screen.
      SCREEN-INPUT = 0.
      modify screen.
    endloop.

  endif.

endmethod.
method DO_PBO.

  data: LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

      ME->SET_PFSTATUS( ).
      ME->SET_TITLE( ).

      ME->INIT_VIS( ).

***   Refresh Grid
      if ME->R_GRID_CPACK is bound.
        if ME->F_REFRESH_REQ eq ABAP_TRUE.
          move ABAP_TRUE to ME->R_GRID_CPACK->F_REFRESH_ALL_REQ.
        endif.
        move ABAP_TRUE to ME->R_GRID_CPACK->F_REFRESH_REQ.
        ME->R_GRID_CPACK->REFRESH_S_GRID( ).
      endif.

      move ABAP_FALSE to ME->F_REFRESH_REQ.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method DO_UPDATE_CPACK_VIS.

  if IS_CPACK_VIS-DESCR ne ME->S_CPACK_VIS-DESCR.
    ME->R_CPACK->SET_DESCR( IF_DESCR = IS_CPACK_VIS-DESCR ).
  endif.

endmethod.
method DO_USER_COMMAND .

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

      if ME->R_GRID_CPACK is bound.
        ME->R_GRID_CPACK->CHECK_CHANGED_DATA( ).
      endif.

      case CF_UCOMM.
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_BACK.
          clear CF_UCOMM.
          ME->HANDLE_UC_BACK( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_EXIT.
          clear CF_UCOMM.
          ME->HANDLE_UC_EXIT( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_CANCEL.
          clear CF_UCOMM.
          ME->HANDLE_UC_CANCEL( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_SAVE.
          ME->HANDLE_UC_SAVE( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_TOGGLE.
          ME->HANDLE_UC_TOGGLE( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_REQ_TR.
          ME->HANDLE_UC_REQ_TR( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_CD.
          ME->HANDLE_UC_CD( ).
        when ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_CHECK.
          ME->HANDLE_UC_CHECK( ).
      endcase.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

  clear CF_UCOMM.

endmethod.
method HANDLE_UC_BACK .

*** Check for changes and ask user to save them
  if ME->CHECK_FOR_CHANGES( ) ne ABAP_TRUE.
    ME->DO_FREE( ).
    leave to screen 0.
  endif.

endmethod.
method HANDLE_UC_CANCEL .

*** Check for changes and ask user to save them
  if ME->CHECK_FOR_CHANGES( ) ne ABAP_TRUE.
    ME->DO_FREE( ).
    leave to screen 0.
  endif.

endmethod.
method HANDLE_UC_CD.

  data:  LF_CDOCL                type          CDHDR-OBJECTCLAS,
         LF_CDOID                type          CDHDR-OBJECTID,
         LF_APPLICATIONID        type          REPID,
         LF_MSGV2                type          SYMSGV.
  data:  LT_CDRED_STR            type          CDRED_STR_TAB,
         LT_EDITPOS_WITH_HEADER  type table of CDRED.
  data:  LR_OBJECT_CD            type ref to   /VCXI/IF_CKX_OBJECT_CD.

***----------------------------------------------------------------------------
*** Get Change Document Info
  try.
      move ME->R_CPACK ?to LR_OBJECT_CD.
      check LR_OBJECT_CD is bound.
    catch CX_SY_MOVE_CAST_ERROR.
***   No change document positions found
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '649'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.
  endtry.

  LR_OBJECT_CD->GET_INFO( importing EF_CDOCL = LF_CDOCL
                                    EF_CDOID = LF_CDOID ).


***----------------------------------------------------------------------------
*** Read Change Documents
  call function 'CHANGEDOCUMENT_READ'
    exporting
      OBJECTCLASS       = LF_CDOCL
      OBJECTID          = LF_CDOID
    importing
      ET_CDRED_STR      = LT_CDRED_STR[]
    tables
      EDITPOS           = LT_EDITPOS_WITH_HEADER
    exceptions
      NO_POSITION_FOUND = 1
      others            = 2.
  case SY-SUBRC.
    when 0.
***   Display the Records
      LF_APPLICATIONID = LF_CDOCL.
      call function 'CHANGEDOCUMENT_DISPLAY'
        exporting
          I_APPLICATIONID  = LF_APPLICATIONID
          FLG_AUTOCONDENSE = 'X'
          I_OBJECTCLAS     = LF_CDOCL
          IT_CDRED_STR     = LT_CDRED_STR[]
        tables
          I_CDRED          = LT_EDITPOS_WITH_HEADER.
    when 1.
***   No change document positions found
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '649'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.
    when 2.
***   Error in change document creation/analysis: & &
      move SY-SUBRC to LF_MSGV2.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '327'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.

  endcase.

endmethod.
method HANDLE_UC_CHECK.

*** Call Check of Packaging Code
  ME->R_CPACK->DO_CHECK( IR_MSG = ME->R_MSG ).

  if ME->R_MSG->T_MSG is not initial.
    ME->R_MSG->DISPLAY_MSG( ).
    ME->R_MSG->INIT_MSG( ).
  endif.

endmethod.
method HANDLE_UC_EXIT .

*** Check for changes and ask user to save them
  if ME->CHECK_FOR_CHANGES( ) ne ABAP_TRUE.
    ME->DO_FREE( ).
    leave to screen 0.
  endif.

endmethod.
method HANDLE_UC_REQ_TR.

  data:  LR_OBJECT_ACTION type ref to /VCXI/IF_CKX_OBJECT_ACTION.

  try.

***   Request Transport
      move ME->R_CPACK ?to LR_OBJECT_ACTION.
      check LR_OBJECT_ACTION is bound.

      LR_OBJECT_ACTION->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_REQ_TR ).

    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

endmethod.
method HANDLE_UC_SAVE.

  data:  LR_OBJECT_ACTION type ref to /VCXI/IF_CKX_OBJECT_ACTION.

  try.

***   Save
      move ME->R_CPACK ?to LR_OBJECT_ACTION.
      check LR_OBJECT_ACTION is bound.

***   First Check
      ME->HANDLE_UC_CHECK( ).

***   Then Save
      LR_OBJECT_ACTION->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_SAVE ).

    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

endmethod.
method HANDLE_UC_TOGGLE.

  data: LR_OBJECT_LOCKING type ref to /VCXI/IF_CKX_OBJECT_LOCKING.

***------------------------------------------------------------------
*** Only works if object is open
  check ME->R_CPACK is bound.
  move ME->R_CPACK ?to LR_OBJECT_LOCKING.

  if LR_OBJECT_LOCKING->IS_LOCKED( ) eq ABAP_TRUE.
*** Check for changes and ask user to save them
    check ME->CHECK_FOR_CHANGES( ) ne ABAP_TRUE.

    LR_OBJECT_LOCKING->DO_UNLOCK( ).

  else.
    LR_OBJECT_LOCKING->DO_LOCK( ).
  endif.

*** Request Screen Refresh
  ME->F_REFRESH_REQ = ABAP_TRUE.

endmethod.
method INIT_VIS.

  data: LS_LOG     type /VCXI/CKX_S_LOG,
        LS_LOG_EXT type /VCXI/CKX_S_LOG_EXT.

  clear: ME->S_CPACK_VIS.

*** Get Packaging Code and Description
  move ME->R_CPACK->/VCXI/IF_CKX_OBJECT~GET_ID( )    to ME->S_CPACK_VIS-CPACK.
  move ME->R_CPACK->/VCXI/IF_CKX_OBJECT~GET_DESCR( ) to ME->S_CPACK_VIS-DESCR.

*** Get Log Data
  move ME->R_CPACK->/VCXI/IF_CKX_OBJECT~GET_LOG( )   to LS_LOG.
  LS_LOG_EXT = /VCXI/CL_CKX_SERVICE=>GET_LOG_EXT( IS_LOG = LS_LOG ).
  move-corresponding LS_LOG_EXT                      to ME->S_CPACK_VIS.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method SET_PFSTATUS.

  data:  LT_EXCLUDE type standard table of SYUCOMM.

***----------------------------------------------------------------------------
*** Exclude REQ_TR if not locked
  if ME->R_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_TRUE.
    append ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_REQ_TR    to LT_EXCLUDE.
  endif.

*** Exclude SAVE if not changed or Transport is requested
  if ME->R_CPACK->F_TRANS_REQ ne ABAP_TRUE and
     ME->R_CPACK->F_CHANGED   ne ABAP_TRUE.
    append ZCL_VCXI_XCSUC_UI_CPACK=>C_UC_SAVE      to LT_EXCLUDE.
  endif.

***----------------------------------------------------------------------------
*** Set PF-Status
  set pf-status '0100' of program ME->S_DYNP-REPID excluding LT_EXCLUDE.

endmethod.
method SET_TITLE.

  data:  LR_OBJECT_LOCKING type ref to /VCXI/IF_CKX_OBJECT_LOCKING.

  if ME->R_CPACK is bound.
    move ME->R_CPACK ?to LR_OBJECT_LOCKING.

    if LR_OBJECT_LOCKING->IS_LOCKED( ) eq ABAP_TRUE.
      set titlebar '0100_EDIT' of program ME->S_DYNP-REPID.
    else.
      set titlebar '0100_DISP' of program ME->S_DYNP-REPID.
    endif.
  else.
    set titlebar '0100' of program ME->S_DYNP-REPID.
  endif.

endmethod.
method START_UI.

  data:  LR_UI_CPACK type ref to ZCL_VCXI_XCSUC_UI_CPACK.

  BREAK ADD_AUTHCHECK_KFISCHER.
**** Check Authorization
*  ZCL_VCXI_XCDC_DVCCOND=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCDC_DVCCOND=>C_ACTVT_DISPLAY ).

*** Create Instance of UI
  create object LR_UI_CPACK
    exporting
      IF_CPACK  = IF_CPACK
      IF_CHANGE = IF_CHANGE.

*** Call Screen
  call function 'ZVCXI_XCSUC_UI_CPACK_START'.

endmethod.
