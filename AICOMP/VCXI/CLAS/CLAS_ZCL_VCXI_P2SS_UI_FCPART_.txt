
class ZCL_VCXI_P2SS_UI_FCPART definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_XPART
  create public .

public section.

  data S_FCPART_VIS type ZVCXI_P2SS_S_FCPART_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_FCP_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods DO_PBO
    redefinition .
protected section.

  constants C_UC_FCPROP type SYUCOMM value 'FCPART_FCPROP' ##NO_TEXT.
  data R_PR_FCPART type ref to ZCL_VCXI_P2SS_PR_FCPART .
  data R_TOOLBAR type ref to ZCL_VCXI_XCS_TOOLBAR_PRVDR .

  methods GET_IELEM_BY_SCREEN
    importing
      !IF_GROUP2 type SCREEN-GROUP2
    returning
      value(RF_IELEM) type ZVCXI_P0SS_IELEM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FCPROP
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SS_UI_FCPART definition
class ZCL_VCXI_P2SS_UI_FCPART implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P2SS_UI_FCPART_BIND'
      exporting
        IR_UI_FCPART  = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

***--------------------------------------------------------------------------------------
*** Create Toolbar to add Connection
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TOOLBAR'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_FCPART.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_BOXPA  type ZVCXI_P0SS_BOXPA.
    data: LR_CUST_PRSTY  type ref to ZCL_VCXI_PXSS_CUST_PRSTY.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***     Get ECMA Customizing and Part of Box
        ME->R_PR_FCPART->GET_ECMA( importing ER_CUST_PRSTY = LR_CUST_PRSTY ).
        LF_BOXPA = ME->R_PR_FCPART->GET_BOXPA( ).

***----------------------------------------------------------------------------
***     Modify Screen
        loop at screen.
***       Hide Custom Product Sheet W/L
          if SCREEN-GROUP1 eq 'CST'.
            if LR_CUST_PRSTY is not bound or
               LR_CUST_PRSTY->GET_FCUSD( ) ne ABAP_TRUE.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Hide Joint Dimension if no Joint Flap is defined
          if SCREEN-GROUP1 eq 'NJO' and
             ME->S_FCPART_VIS-JOIPO eq ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_JOIPO_NONE.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Hide Part of Box if not defined by Product Style
          if SCREEN-GROUP1 eq 'BXP'.
            if LR_CUST_PRSTY is not bound or
               LR_CUST_PRSTY->GET_BOXPA( ) is initial.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Adjust based on Product Style Element
          if SCREEN-GROUP1 eq 'PSE'.
            if LR_CUST_PRSTY is bound.
              if LR_CUST_PRSTY->IS_IELEM_USED( IF_IELEM = ME->GET_IELEM_BY_SCREEN( IF_GROUP2 = SCREEN-GROUP2 )
                                               IF_BOXPA = LF_BOXPA ) eq ABAP_FALSE.
                move 0 to SCREEN-ACTIVE.
              endif.
            else.
              SCREEN-ACTIVE = switch #( ME->GET_IELEM_BY_SCREEN( IF_GROUP2 = SCREEN-GROUP2 )
                                            when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_LENGTH then 1
                                            when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_WIDTH  then 1
                                            when ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT then 1
                                                                                          else 0 ).
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = value #( ( ME->R_OLD_GATE ) ) ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_FCPART_VIS  type ZVCXI_P2SS_S_FCPART_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_FCPART is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_FCPART_VIS.

***--------------------------------------------------------------------------------------
*** Set ECMA Code
    if ME->S_FCPART_VIS-ECMA ne LS_FCPART_VIS-ECMA.
      ME->R_PR_FCPART->SET_ECMA( IF_ECMA  = LS_FCPART_VIS-ECMA
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Part of Box
    if ME->S_FCPART_VIS-BOXPA ne LS_FCPART_VIS-BOXPA.
      ME->R_PR_FCPART->SET_BOXPA( IF_BOXPA = LS_FCPART_VIS-BOXPA
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Product Length
    if ME->S_FCPART_VIS-S_PROLE ne LS_FCPART_VIS-S_PROLE.
      ME->R_PR_FCPART->SET_PROLE( IS_PROLE = LS_FCPART_VIS-S_PROLE
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Width
    if ME->S_FCPART_VIS-S_PROWI ne LS_FCPART_VIS-S_PROWI.
      ME->R_PR_FCPART->SET_PROWI( IS_PROWI = LS_FCPART_VIS-S_PROWI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Height
    if ME->S_FCPART_VIS-S_PROHE ne LS_FCPART_VIS-S_PROHE.
      ME->R_PR_FCPART->SET_PROHE( IS_PROHE = LS_FCPART_VIS-S_PROHE
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Height2
    if ME->S_FCPART_VIS-S_PROH2 ne LS_FCPART_VIS-S_PROH2.
      ME->R_PR_FCPART->SET_PROH2( IS_PROH2 = LS_FCPART_VIS-S_PROH2
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Product Sheet Length
    if ME->S_FCPART_VIS-S_SHTPL ne LS_FCPART_VIS-S_SHTPL.
      ME->R_PR_FCPART->SET_SHTPL( IS_SHTPL = LS_FCPART_VIS-S_SHTPL
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Sheet Width
    if ME->S_FCPART_VIS-S_SHTPW ne LS_FCPART_VIS-S_SHTPW.
      ME->R_PR_FCPART->SET_SHTPW( IS_SHTPW = LS_FCPART_VIS-S_SHTPW
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Tuck in Flap
    if ME->S_FCPART_VIS-S_FTUCK ne LS_FCPART_VIS-S_FTUCK.
      ME->R_PR_FCPART->SET_FTUCK( IS_FTUCK = LS_FCPART_VIS-S_FTUCK
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Dust Flap
    if ME->S_FCPART_VIS-S_FDUST ne LS_FCPART_VIS-S_FDUST.
      ME->R_PR_FCPART->SET_FDUST( IS_FDUST = LS_FCPART_VIS-S_FDUST
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Grain Orientation
    if ME->S_FCPART_VIS-GRAIO ne LS_FCPART_VIS-GRAIO.
      ME->R_PR_FCPART->SET_GRAIO( IF_GRAIO = LS_FCPART_VIS-GRAIO
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Cut Out Area
    if ME->S_FCPART_VIS-S_COUAR ne LS_FCPART_VIS-S_COUAR.
      ME->R_PR_FCPART->SET_COUAR( IS_COUAR = LS_FCPART_VIS-S_COUAR
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Joint Position
    if ME->S_FCPART_VIS-JOIPO ne LS_FCPART_VIS-JOIPO.
      ME->R_PR_FCPART->SET_JOIPO( IF_JOIPO = LS_FCPART_VIS-JOIPO
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Joint Width
    if ME->S_FCPART_VIS-S_JOIWI ne LS_FCPART_VIS-S_JOIWI.
      ME->R_PR_FCPART->SET_JOIWI( IS_JOIWI = LS_FCPART_VIS-S_JOIWI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Joint Length
    if ME->S_FCPART_VIS-S_JOILE ne LS_FCPART_VIS-S_JOILE.
      ME->R_PR_FCPART->SET_JOILE( IS_JOILE = LS_FCPART_VIS-S_JOILE
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Joint Extension Top
    if ME->S_FCPART_VIS-S_JEXTT ne LS_FCPART_VIS-S_JEXTT.
      ME->R_PR_FCPART->SET_JEXTT( IS_JEXTT = LS_FCPART_VIS-S_JEXTT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Joint Extension Bottom
    if ME->S_FCPART_VIS-S_JEXTB ne LS_FCPART_VIS-S_JEXTB.
      ME->R_PR_FCPART->SET_JEXTB( IS_JEXTB = LS_FCPART_VIS-S_JEXTB
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_FCPROP.
        ME->HANDLE_UC_FCPROP( ).

    endcase.

  endmethod.
  method GET_IELEM_BY_SCREEN.

    RF_IELEM = switch #( IF_GROUP2 when 'PLE' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_LENGTH
                                   when 'PWI' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_WIDTH
                                   when 'PHE' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT
                                   when 'PH2' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_HEIGHT2
                                   when 'FDU' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_FDUST
                                   when 'FTU' then ZCL_VCXI_P0SS_CUST_PRSTY=>C_IELEM_FTUCK ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_FCPART.

  endmethod.
  method HANDLE_UC_FCPROP.

*** Start Popup
    ZCL_VCXI_P2SS_POPUP_FCPROP=>START( IR_BL_FCBPROP = ME->R_PR_FCPART->GET_FCBPX( )
                                       IR_BL_FCFPROP = ME->R_PR_FCPART->GET_FCFPX( )
                                       IF_WERKS      = ME->R_PR_FCPART->GET_WERKS( )
                                       IS_SURWT      = ME->R_PR_FCPART->GET_SURWT( ) ).

  endmethod.
  method INIT_VIS.

    data: LR_BL_FCFPROP type ref to ZCL_VCXI_P2SS_BL_FCFPROP.


    free: ME->S_FCPART_VIS.

    SUPER->INIT_VIS( ).
    ME->S_FCPART_VIS-S_XPART_VIS = ME->S_XPART_VIS.
    check ME->R_PR_FCPART is bound.

***--------------------------------------------------------------------------------------
*** Get ECMA
    ME->S_FCPART_VIS-ECMA = ME->R_PR_FCPART->GET_ECMA( importing EF_DESCR = ME->S_FCPART_VIS-ECMA_DESCR ).

*** Get Part of Box
    ME->S_FCPART_VIS-BOXPA = ME->R_PR_FCPART->GET_BOXPA( ).

*** Get Product Dimension
    ME->S_FCPART_VIS-PRODIM_DESCR = ME->R_PR_FCPART->GET_PRODIM_DESCR( ).
    ME->S_FCPART_VIS-S_PROWI = ME->R_PR_FCPART->GET_PROWI( ).
    ME->S_FCPART_VIS-S_PROLE = ME->R_PR_FCPART->GET_PROLE( ).
    ME->S_FCPART_VIS-S_PROHE = ME->R_PR_FCPART->GET_PROHE( ).
    ME->S_FCPART_VIS-S_PROH2 = ME->R_PR_FCPART->GET_PROH2( ).

*** Get Product Sheet Dimension
    ME->S_FCPART_VIS-S_SHTPW = ME->R_PR_FCPART->GET_SHTPW( ).
    ME->S_FCPART_VIS-S_SHTPL = ME->R_PR_FCPART->GET_SHTPL( ).

*** Get Tuck in/Dust Flap
    ME->S_FCPART_VIS-S_FTUCK = ME->R_PR_FCPART->GET_FTUCK( ).
    ME->S_FCPART_VIS-S_FDUST = ME->R_PR_FCPART->GET_FDUST( ).

*** Get Grain Orientation
    ME->S_FCPART_VIS-GRAIO = ME->R_PR_FCPART->GET_GRAIO( ).

*** Get Cut Out Area
    ME->S_FCPART_VIS-S_COUAR = ME->R_PR_FCPART->GET_COUAR( ).

***------------------------------------------------------------------------------------------------
*** Get Sheet Dimension (Outbound)
    ME->S_FCPART_VIS-S_IOSEC-S_SHTLE = ME->R_PR_FCPART->GET_SHTLE( ).
    ME->S_FCPART_VIS-S_IOSEC-S_SHTWI = ME->R_PR_FCPART->GET_SHTWI( ).
    ME->S_FCPART_VIS-S_IOSEC-GRADI   = ZCL_VCXI_P2SS_BL_FCFPROP=>DET_GRADI( IS_SHTWI = ME->S_FCPART_VIS-S_IOSEC-S_SHTWI
                                                                            IS_SHTLE = ME->S_FCPART_VIS-S_IOSEC-S_SHTLE ).

*** Number Ups (Outbound)
    ME->S_FCPART_VIS-S_IOSEC-NOUPS = ME->R_PR_FCPART->GET_NOUPS( ).

*** Get Caliper, Paper Grade and Grammage (Outbound)
    LR_BL_FCFPROP = ME->R_PR_FCPART->GET_FCFPX( ).
    if LR_BL_FCFPROP is bound.
      ME->S_FCPART_VIS-S_IOSEC-S_CALIP = LR_BL_FCFPROP->S_CALIP.
      ME->S_FCPART_VIS-S_IOSEC-PAPGR   = LR_BL_FCFPROP->F_PAPGR.
      ME->S_FCPART_VIS-S_IOSEC-S_GRAMM = LR_BL_FCFPROP->S_GRAMM.
    endif.

***------------------------------------------------------------------------------------------------
*** Joint Dimensions
    ME->S_FCPART_VIS-JOIPO   = ME->R_PR_FCPART->GET_JOIPO( ).
    ME->S_FCPART_VIS-S_JOIWI = ME->R_PR_FCPART->GET_JOIWI( ).
    ME->S_FCPART_VIS-S_JOILE = ME->R_PR_FCPART->GET_JOILE( ).
    ME->S_FCPART_VIS-S_JEXTT = ME->R_PR_FCPART->GET_JEXTT( ).
    ME->S_FCPART_VIS-S_JEXTB = ME->R_PR_FCPART->GET_JEXTB( ).

  endmethod.
