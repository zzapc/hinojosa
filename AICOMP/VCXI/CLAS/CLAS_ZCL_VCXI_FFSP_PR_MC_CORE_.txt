
class ZCL_VCXI_FFSP_PR_MC_CORE definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  create public .

public section.

  constants C_IPRVT_MC_CORE type /VCXI/VKSC_IPRVT value 'ZVCXI_FFSP_MC_CORE' ##NO_TEXT.
  constants C_PARID_ROPCO type /VCXI/VKS_PARID value 'ZVCXI_FF_ROPCO' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCO
    exporting
      !ES_AVGCO type ZVCXI_XCS_S_AVGCO
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCP
    exporting
      !ES_AVGCP type ZVCXI_XCS_S_AVGCP
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCO
    importing
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCP
    importing
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_ROPCO
    exporting
      !EF_ROPCO type ZVCXI_FFS_ROPCO
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_ROPCO
    importing
      !IF_ROPCO type ZVCXI_FFS_ROPCO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .

  methods CALC_CONSU
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_FFSP_PR_MC_CORE definition
class ZCL_VCXI_FFSP_PR_MC_CORE implementation.
  method CALC_CONSU.

    data: LF_ROPCO type ZVCXI_FFS_ROPCO.
    data: LS_AVGCO type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP type ZVCXI_XCS_S_AVGCP,
          LS_CONSU type ZVCXI_XCSP_S_CONSU,
          LS_CALCV type ZVCXI_XCS_S_CALCV.

    check IS_MQTYI is not initial.

***----------------------------------------------------------------------------
*** Get Average Consumption
    ME->GET_AVGCO( importing ES_AVGCO = LS_AVGCO ).
    ME->GET_AVGCP( importing ES_AVGCP = LS_AVGCP ).

*** Get Rolls/Core
    ME->GET_ROPCO( importing EF_ROPCO = LF_ROPCO ).


***----------------------------------------------------------------------------
*** Calculate PCs
    if LS_AVGCP-AVGCP is not initial and
       LF_ROPCO       is not initial.

***   Get Number of Rolls
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_MQTYI-MQTYI
                                                          IF_CALCV_UOM_1 = IS_MQTYI-MQTYI_UOM
                                                          IF_CALCV_2     = LS_AVGCP-AVGCP
                                                          IF_CALCV_UOM_2 = LS_AVGCP-AVGCP_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LS_CALCV-CALCV
                                                          EF_CALCV_UOM   = LS_CALCV-CALCV_UOM ).
      LS_CALCV-CALCV = CEIL( LS_CALCV-CALCV ) * LS_AVGCO-AVGCO.

***   Calculate Number of Cores
      LS_CONSU-CONSU   = CEIL( LS_CALCV-CALCV / LF_ROPCO ).
    else.
      LS_CONSU-CONSU   = 0.
    endif.
    LS_CONSU-CONSU_UOM = LS_AVGCO-AVGCO_UOM.

***----------------------------------------------------------------------------
*** Set Consumption
    ME->SET_CONSU( IS_CONSU = LS_CONSU ).

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

    ME->F_PARID_CONSU = C_PARID_CONSU_P.
    ME->F_PARID_PRICP = C_PARID_PRICP_P.
    ME->F_PARID_AVGCO = C_PARID_AVGCO_P.
    ME->F_PARID_AVGCP = C_PARID_AVGCP_L.

  endmethod.
  method GET_AVGCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).
    move LS_PARAM-ATFLV to ES_AVGCO-AVGCO.
    move LS_PARAM-UNIT  to ES_AVGCO-AVGCO_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_AVGCP.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).
    move LS_PARAM-ATFLV to ES_AVGCP-AVGCP.
    move LS_PARAM-UNIT  to ES_AVGCP-AVGCP_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_ROPCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_ROPCO ).
    move LS_PARAM-ATFLV to EF_ROPCO.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method SET_AVGCO.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).

    move IS_AVGCO-AVGCO     to LS_PARAM-ATFLV.
    move IS_AVGCO-AVGCO_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_AVGCP.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).

    move IS_AVGCP-AVGCP     to LS_PARAM-ATFLV.
    move IS_AVGCP-AVGCP_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_ROPCO.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_ROPCO ).

    move IF_ROPCO to LS_PARAM-ATFLV.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
