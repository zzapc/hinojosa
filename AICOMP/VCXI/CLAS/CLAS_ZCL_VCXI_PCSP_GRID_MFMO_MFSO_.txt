
class ZCL_VCXI_PCSP_GRID_MFMO_MFSO definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data F_MFMO_IS_ACTIV type ABAP_BOOL .
  data F_MFSO_IS_ACTIV type ABAP_BOOL .

  methods CHANGE_STYLE_MFMO
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFSO
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFSO_P_VIS
    importing
      !IR_PR_MFSO_P type ref to ZCL_VCXI_PCSP_PR_MFSO_P
    returning
      value(RS_MFSO_P_VIS) type ZVCXI_PCSP_S_MFMO_MFSO_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_MFMO_P_VIS
    importing
      !IR_PR_MFMO_P type ref to ZCL_VCXI_PCSP_PR_MFMO_P
    returning
      value(RS_MFMO_P_VIS) type ZVCXI_PCSP_S_MFMO_MFSO_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFMO_P_VIS
    importing
      !IR_PR_MFMO_P type ref to ZCL_VCXI_PCSP_PR_MFMO_P
      !IS_MFMO_P_VIS type ZVCXI_PCSP_S_MFMO_MFSO_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFSO_P_VIS
    importing
      !IR_PR_MFSO_P type ref to ZCL_VCXI_PCSP_PR_MFSO_P
      !IS_MFMO_MFSO_VIS type ZVCXI_PCSP_S_MFMO_MFSO_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSP_GRID_MFMO_MFSO definition
class ZCL_VCXI_PCSP_GRID_MFMO_MFSO implementation.
method CHANGE_STYLE_MFMO.

  free CT_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Set Sheet Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set ID of MF x-connection = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low-Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Flute = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FLUTE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Type = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCTYP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCLEN'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCWID'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC height = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCHEI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).
*** Set PC Ups = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCUPS'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC direction = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCDIR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CHANGE_STYLE_MFSO.

  free CT_STYL.

*** Set ID of MF x-connection = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------------
*** Set Style Details -> all other DISABLED because nothing needs to be edit in MFSO
*** Set Sheet Matnr = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Flute = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FLUTE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Type = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCTYP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCLEN'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCWID'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC height = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCHEI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Ups = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCUPS'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set PC Direction = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PCDIR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_PCSP_S_MFMO_MFSO_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZIF_VCXI_XCSP_MFO=>C_IPRVT_XCS_MFO.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED          type        /VCXI/CKX_LOCKED,
                 LF_INUSE           type        /VCXI/VKSR_INUSE,
                 LF_HIDE_MFSO_DATA  type        ABAP_BOOL.
  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Get Show Hide Data
  if ME->F_MFSO_IS_ACTIV eq ABAP_FALSE.
    LF_HIDE_MFSO_DATA  = ABAP_TRUE.
  else.
    LF_HIDE_MFSO_DATA  = ABAP_FALSE.
  endif.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

***   ID for MF x-connect
      when 'IMFXC'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

***   PC Direction
      when 'PCDIR'.

***   Always Visible and Editable
      when 'MATNR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE  to <S_FCAT>-EDIT.
        endif.

***   Only Visible if MFSO is there
      when 'DISST'.
        move LF_HIDE_MFSO_DATA   to <S_FCAT>-NO_OUT.

***   Only Editable if MFMI is there
      when 'PCWID' or 'PCLEN' or 'PCHEI'
        or 'PCUPS' or 'FLUTE'.

    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_MFMO_MFSO_VIS     type          ZVCXI_PCSP_S_MFMO_MFSO_VIS,
                 LS_MFMO_MFSO_GRID    type          ZVCXI_PCSP_S_MFMO_MFSO_GRID.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_MFMO_P         type ref to   ZCL_VCXI_PCSP_PR_MFMO_P,
                 LR_PR_MFSO_P         type ref to   ZCL_VCXI_PCSP_PR_MFSO_P.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Clear Indicator for Sheet and Material Flow
  clear: ME->F_MFMO_IS_ACTIV, ME->F_MFSO_IS_ACTIV.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get Gates of Material Flow out PC
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_MFMO_P=>C_IPRVT_P0_MFMO_P
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_MFMO_MFSO_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MFMO_P.
        check LR_PR_MFMO_P is bound.

***     Set Indicator that an PC is activ
        if LR_GATE->IS_INUSE( ) eq ABAP_TRUE.
          move ABAP_TRUE to ME->F_MFMO_IS_ACTIV.
        endif.

        move LR_GATE->GET_POSID( ) to LS_MFMO_MFSO_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_MFMO_MFSO_GRID-GATKY.
        move LR_GATE               to LS_MFMO_MFSO_GRID-R_GATE.

        LS_MFMO_MFSO_VIS = ME->GET_MFMO_P_VIS( IR_PR_MFMO_P = LR_PR_MFMO_P ).
        move-corresponding LS_MFMO_MFSO_VIS to LS_MFMO_MFSO_GRID.

*** --------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_MFMO( changing CT_STYL = LS_MFMO_MFSO_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MFMO_MFSO_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MFMO_MFSO_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

*** --------------------------------------------------------------------------------------------
*** Get Gates of MFSO_P
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_MFSO_P=>C_IPRVT_P0_MFSO_P
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_MFMO_MFSO_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MFSO_P.
        check LR_PR_MFSO_P is bound.

***     Set Indicator that an MFSO_P is activ
        move ABAP_TRUE to ME->F_MFSO_IS_ACTIV.

        move LR_GATE->GET_POSID( ) to LS_MFMO_MFSO_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_MFMO_MFSO_GRID-GATKY.
        move LR_GATE               to LS_MFMO_MFSO_GRID-R_GATE.

        LS_MFMO_MFSO_VIS = ME->GET_MFSO_P_VIS( IR_PR_MFSO_P = LR_PR_MFSO_P ).
        move-corresponding LS_MFMO_MFSO_VIS to LS_MFMO_MFSO_GRID.

*** --------------------------------------------------------------------------------------------
***     Set Style Details -> all DISABLED because nothing needs to be edit in MFSO
        ME->CHANGE_STYLE_MFSO( changing  CT_STYL  = LS_MFMO_MFSO_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MFMO_MFSO_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MFMO_MFSO_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

  sort <T_DATA> by ('POSID').

endmethod.
method GET_MFMO_P_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_PCDIM type ZVCXI_P0SP_S_PCDIM.

*** Material
  move IR_PR_MFMO_P->GET_MATNR( )         to RS_MFMO_P_VIS-MATNR.
  move IR_PR_MFMO_P->GET_MATNR_DESCR( )   to RS_MFMO_P_VIS-MATNR_DESCR.

*** x-connect
  move IR_PR_MFMO_P->GET_IMFXC( )         to RS_MFMO_P_VIS-IMFXC.

*** Consumption
  move IR_PR_MFMO_P->GET_CONSU( )         to LS_CONSU.
  move-corresponding LS_CONSU             to RS_MFMO_P_VIS.

*** MF Ratio
  move IR_PR_MFMO_P->GET_MFRAT( )         to RS_MFMO_P_VIS-MFRAT.

*** Flute
  move IR_PR_MFMO_P->GET_FLUTE( )         to RS_MFMO_P_VIS-FLUTE.

*** PC Dimensions
  move IR_PR_MFMO_P->GET_PCDIM( )         to LS_PCDIM.
  move-corresponding LS_PCDIM             to RS_MFMO_P_VIS.

endmethod.
method GET_MFSO_P_VIS.

  data:  LS_CONSU type ZVCXI_XCSP_S_CONSU,
         LS_PCDIM type ZVCXI_P0SP_S_PCDIM.

*** Get MaterialNumber, Description, Low Level Code and x-connect
  move IR_PR_MFSO_P->GET_MATNR( )       to RS_MFSO_P_VIS-MATNR.
  move IR_PR_MFSO_P->GET_MATNR_DESCR( ) to RS_MFSO_P_VIS-MATNR_DESCR.
  move IR_PR_MFSO_P->GET_DISST( )       to RS_MFSO_P_VIS-DISST.
  move IR_PR_MFSO_P->GET_IMFXC( )       to RS_MFSO_P_VIS-IMFXC.

*** Get Consumption
  move IR_PR_MFSO_P->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU           to RS_MFSO_P_VIS.

*** MF Ratio
  move IR_PR_MFSO_P->GET_MFRAT( )       to RS_MFSO_P_VIS-MFRAT.

*** Get Flute
  move IR_PR_MFSO_P->GET_FLUTE( )       to RS_MFSO_P_VIS-FLUTE.

*** Get PC Dimensions
  move IR_PR_MFSO_P->GET_PCDIM( )       to LS_PCDIM.
  move-corresponding LS_PCDIM           to RS_MFSO_P_VIS.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_MFMO_MFSO_VIS     type          ZVCXI_PCSP_S_MFMO_MFSO_VIS,
                 LS_MFMO_MFSO_GRID    type          ZVCXI_PCSP_S_MFMO_MFSO_GRID.
  data:          LR_PR_MFMO_P         type ref to   ZCL_VCXI_PCSP_PR_MFMO_P,
                 LR_PR_MFSO_P         type ref to   ZCL_VCXI_PCSP_PR_MFSO_P,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        clear: LR_PR_MFMO_P,
               LR_PR_MFSO_P.

        move-corresponding <S_DATA>          to LS_MFMO_MFSO_GRID.
        move-corresponding LS_MFMO_MFSO_GRID to LS_MFMO_MFSO_VIS.
        check LS_MFMO_MFSO_GRID-R_GATE is bound.

***----------------------------------------------------------------------------
***     Changes to MFMO PC
        try.
            move LS_MFMO_MFSO_GRID-R_GATE->R_CLSPR ?to LR_PR_MFMO_P.
            check LR_PR_MFMO_P is bound.

***         Set Values to PR Class
            move-corresponding LS_MFMO_MFSO_GRID to LS_MFMO_MFSO_VIS.
            ME->SET_MFMO_P_VIS( IR_PR_MFMO_P  = LR_PR_MFMO_P
                                IS_MFMO_P_VIS = LS_MFMO_MFSO_VIS ).
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MFMO_P.
        endtry.

***----------------------------------------------------------------------------
***     Changes to MFSI PC
        try.
            move LS_MFMO_MFSO_GRID-R_GATE->R_CLSPR ?to LR_PR_MFSO_P.
            check LR_PR_MFSO_P is bound.

***         Set Values to PR Class
            ME->SET_MFSO_P_VIS( IR_PR_MFSO_P     = LR_PR_MFSO_P
                                IS_MFMO_MFSO_VIS = LS_MFMO_MFSO_VIS ).
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_MFSO_P.
        endtry.

      endloop.

***   Request Refresh for ALV
      move ABAP_TRUE to ME->F_REFRESH_REQ.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_MFMO_P_VIS.

  data:  LS_MFMO_P_VIS type ZVCXI_PCSP_S_MFMO_MFSO_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MFMO_P_VIS = ME->GET_MFMO_P_VIS( IR_PR_MFMO_P = IR_PR_MFMO_P ).

*** Material
  if IS_MFMO_P_VIS-MATNR ne LS_MFMO_P_VIS-MATNR.
    IR_PR_MFMO_P->SET_MATNR( IF_MATNR = IS_MFMO_P_VIS-MATNR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** ID for MF x-connection
  if LS_MFMO_P_VIS-IMFXC ne IS_MFMO_P_VIS-IMFXC.
    IR_PR_MFMO_P->SET_IMFXC( IF_IMFXC = IS_MFMO_P_VIS-IMFXC
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method SET_MFSO_P_VIS.

  data:  LS_MFMO_MFSO_VIS     type ZVCXI_PCSP_S_MFMO_MFSO_VIS.

*** Get Current data to do Update only if Value changed.
  LS_MFMO_MFSO_VIS = ME->GET_MFSO_P_VIS( IR_PR_MFSO_P = IR_PR_MFSO_P ).

*** ID for MF x-connection
  if LS_MFMO_MFSO_VIS-IMFXC ne IS_MFMO_MFSO_VIS-IMFXC.
    IR_PR_MFSO_P->SET_IMFXC( IF_IMFXC = IS_MFMO_MFSO_VIS-IMFXC
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
