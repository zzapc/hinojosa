
class ZCL_VCXI_XCUR_GRID_MURFP definition
  public
  final
  create public .

public section.

  methods CHECK_CHANGED_DATA
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_POPUP_MURGR type ref to ZCL_VCXI_XCUR_POPUP_MURGR
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    importing
      !IF_INDEX type I
    raising
      /VCXI/CX_CKX .
protected section.

  data F_INDEX type I .
  data T_MURFP_GRID type ZVCXI_XCUR_TT_MURFP_GRID .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data T_FIELDCAT type LVC_T_FCAT .
  data R_MUCEL type ref to ZCL_VCXI_XCUC_MUCEL .
  data R_POPUP_MURGR type ref to ZCL_VCXI_XCUR_POPUP_MURGR .
  data R_TABLEDESCR type ref to CL_ABAP_TABLEDESCR .
  data R_ELEMDESCR type ref to CL_ABAP_ELEMDESCR .

  methods GET_LAYOUT
    returning
      value(RS_LAYOUT) type LVC_S_LAYO
    raising
      /VCXI/CX_CKX .
  methods SET_LINE
    importing
      !IF_OPT_ICON type ICON_D optional
      !IF_PVRFR type ANY optional
      !IF_PVRTO type ANY optional
      !IF_SEL_ICON type ICON_D optional
      !IT_STYL type LVC_T_STYL optional
      !IF_DATEL type ROLLNAME optional
      !IF_UNIT type /VCXI/CKX_UOM optional
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods INIT_DATA
    raising
      /VCXI/CX_CKX .
  methods BUILD_FIELDCAT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_BUTTON_CLICK
    for event BUTTON_CLICK of CL_GUI_ALV_GRID
    importing
      !ES_COL_ID
      !ES_ROW_NO .
  methods HANDLE_UC_MORE
    importing
      !IS_MURFP_GRID type ZVCXI_XCUR_S_MURFP_GRID
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods HANDLE_DATA_CHANGED
    for event DATA_CHANGED of CL_GUI_ALV_GRID
    importing
      !ER_DATA_CHANGED
      !E_ONF4
      !E_ONF4_BEFORE
      !E_ONF4_AFTER
      !E_UCOMM .
  methods HANDLE_DATA_CHANGED_FINISHED
    for event DATA_CHANGED_FINISHED of CL_GUI_ALV_GRID
    importing
      !E_MODIFIED
      !ET_GOOD_CELLS .
  methods CONVERT_VALUE
    importing
      !IF_DATEL type ROLLNAME
      !IF_VALUE type ANY
      !IF_UNIT type /VCXI/CKX_UOM
    changing
      value(CF_VALUE) type ANY
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCUR_GRID_MURFP definition
class ZCL_VCXI_XCUR_GRID_MURFP implementation.
  method BUILD_FIELDCAT .

    field-symbols: <S_FCAT> type LVC_S_FCAT.


***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        I_STRUCTURE_NAME       = 'ZVCXI_XCUR_S_MURFP_GRID'
      changing
        CT_FIELDCAT            = ME->T_FIELDCAT
      exceptions
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        others                 = 3.

    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

****--------------------------------------------------------------------------------------
*** Modify Field Catalog
    loop at ME->T_FIELDCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'FACTV'.
          <S_FCAT>-EDIT     = switch #( ME->R_POPUP_MURGR->F_LOCKED when ABAP_TRUE then ABAP_TRUE ).
          <S_FCAT>-CHECKBOX = ABAP_TRUE.

        when 'OPT_ICON'.
          <S_FCAT>-JUST = 'C'.
          move 'Option'(C01)     to: <S_FCAT>-COLTEXT,
                                     <S_FCAT>-SCRTEXT_L,
                                     <S_FCAT>-SCRTEXT_M,
                                     <S_FCAT>-SCRTEXT_S.
        when 'SEL_ICON'.
          <S_FCAT>-JUST = 'C'.
          move 'More'(C02)       to: <S_FCAT>-COLTEXT,
                                     <S_FCAT>-SCRTEXT_L,
                                     <S_FCAT>-SCRTEXT_M,
                                     <S_FCAT>-SCRTEXT_S.

      endcase.
    endloop.

  endmethod.
method CHECK_CHANGED_DATA.

  if ME->R_GRID is bound.
*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
  method CONSTRUCTOR.

    ME->R_POPUP_MURGR = IR_POPUP_MURGR.

  endmethod.
  method CONVERT_VALUE.

    data: LF_FMNAM type RS38L_FNAM,
          LF_VALUE type LVC_VALUE.
    data: LS_DD04L type DD04L,
          LS_DD01V type DD01V.
    data: LR_DATA type ref to DATA.
    field-symbols: <F_DATA> type ANY.


    CF_VALUE = IF_VALUE.

*** Get Data Element Info
    call function 'DD_DTEL_GET'
      exporting
        ROLL_NAME  = IF_DATEL
      importing
        DD04L_WA_A = LS_DD04L
      exceptions
        others     = 99.

    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Numeric Value - do conversion
    if LS_DD04L-DECIMALS gt 0.
      write IF_VALUE to LF_VALUE decimals LS_DD04L-DECIMALS.
      condense LF_VALUE.
      CF_VALUE = LF_VALUE.
    endif.

*** Convert for Unit
    if IF_UNIT is not initial.
      create data LR_DATA type P length LS_DD04L-LENG decimals LS_DD04L-DECIMALS.
      assign LR_DATA->* to <F_DATA>.
      <F_DATA> = IF_VALUE.

      write <F_DATA> to LF_VALUE unit IF_UNIT.
      condense LF_VALUE.
      CF_VALUE = LF_VALUE.
    endif.

*** Non-numeric Value - Only proceed if Domain Name found
    check LS_DD04L-DOMNAME is not initial.

*** Non-numeric Value - Get Domain Info
    call function 'DD_DOHD_GET'
      exporting
        DOMAIN_NAME = LS_DD04L-DOMNAME
      importing
        DD01V_WA_A  = LS_DD01V
      exceptions
        others      = 99.

    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Non-numeric Value - Only proceed if Conversion Exit is found
    check LS_DD01V-CONVEXIT is not initial.

*** Non-numeric Value - Do Conversion with Conversion Exit
    LF_FMNAM = |CONVERSION_EXIT_{ LS_DD01V-CONVEXIT }_OUTPUT|.

    call function LF_FMNAM
      exporting
        INPUT  = IF_VALUE
      importing
        OUTPUT = CF_VALUE.

  endmethod.
method DO_FREE .

*** Check for Changes
  if ME->R_GRID is bound.
    ME->R_GRID->CHECK_CHANGED_DATA( ).
  endif.

  if ME->R_GRID is bound.
    ME->R_GRID->FREE( exceptions
                        CNTL_ERROR        = 1
                        CNTL_SYSTEM_ERROR = 2
                        others            = 3 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_GRID.
  endif.

  if ME->R_CONTAINER is bound.
    ME->R_CONTAINER->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_CONTAINER.
  endif.

  clear ME->R_MUCEL.

endmethod.
  method GET_LAYOUT.

    RS_LAYOUT-CWIDTH_OPT = 'X'.
    RS_LAYOUT-STYLEFNAME = 'T_STYL'.

  endmethod.
method HANDLE_BUTTON_CLICK.

  data: LS_MURFP_GRID type ZVCXI_XCUR_S_MURFP_GRID.


  try.
      check LINE_EXISTS( ME->T_MURFP_GRID[ ES_ROW_NO-ROW_ID ] ).
      LS_MURFP_GRID = ME->T_MURFP_GRID[ ES_ROW_NO-ROW_ID ].

      case ES_COL_ID-FIELDNAME.
        when 'SEL_ICON'.
          ME->HANDLE_UC_MORE( IS_MURFP_GRID = LS_MURFP_GRID ).
      endcase.

    catch /VCXI/CX_CKX into data(LR_CX_CKX).
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_DATA_CHANGED.

endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MURFP_GRID type ZVCXI_XCUR_S_MURFP_GRID,
          LS_MURFP      type ZVCXI_XCUR_S_MURFP.
    data: LT_MURFP      type ZVCXI_XCUR_TT_MURFP.


    check E_MODIFIED eq ABAP_TRUE.

    try.
        check ME->R_POPUP_MURGR is bound and
              LINE_EXISTS( ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ] ).

***     Get current Parameter-based Updates
        LT_MURFP = ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ]-T_MURFP.

***     Process Filters
        loop at ME->T_MURFP_GRID into LS_MURFP_GRID.
          check LINE_EXISTS( ET_GOOD_CELLS[ ROW_ID = SY-TABIX ] ).

***       Active Filter
          if LS_MURFP_GRID-FACTV eq ABAP_TRUE.
            if LINE_EXISTS( LT_MURFP[ R_PARAM = LS_MURFP_GRID-R_PARAM ] ).
              LS_MURFP = LT_MURFP[ R_PARAM = LS_MURFP_GRID-R_PARAM ].
            else.
              LS_MURFP = value #( R_PARAM = LS_MURFP_GRID-R_PARAM
                                  R_RANGE = ZCL_VCXI_XCUR_MURDE=>CREATE_RANGE( IF_DATEL = ME->R_MUCEL->T_MUCFP[ R_PARAM = LS_MURFP_GRID-R_PARAM ]-DATEL ) ).
              insert LS_MURFP into table LT_MURFP.
            endif.

***         Update Values
            LT_MURFP[ R_PARAM = LS_MURFP-R_PARAM ] = LS_MURFP.

***       Deactive Parameter
          else.
            delete LT_MURFP where R_PARAM = LS_MURFP_GRID-R_PARAM.
          endif.
        endloop.

***     Set updated Parameter-based Filters
        ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ]-T_MURFP = LT_MURFP.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_MORE.

    data: LF_HELP_FIELD type RSSCR_DBFI,
          LF_DISPLAY    type ABAP_BOOL.
    data: LS_SHLP  type SHLP_DESCR_T,
          LS_MURFP type ZVCXI_XCUR_S_MURFP.
    data: LR_ELEMDESCR type ref to CL_ABAP_ELEMDESCR.
    data: LI_TEXT type range of TEXT128.
    field-symbols: <I_RANGE>        type standard table,
                   <I_RANGE_DIALOG> type standard table.


***--------------------------------------------------------------------------------------
*** Get Information of Date Element
    data(LF_DATEL) = ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ]-R_MUCEL->T_MUCFP[ R_PARAM = IS_MURFP_GRID-R_PARAM ]-DATEL.
    ZCL_VCXI_XCUC_MUCEL=>GET_DATEL_INFO( exporting IF_DATEL     = LF_DATEL
                                         importing ER_ELEMDESCR = LR_ELEMDESCR ).
    check LR_ELEMDESCR is bound.

*** Get Parameter-based Filter of Update Element
    LS_MURFP = ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ]-T_MURFP[ R_PARAM = IS_MURFP_GRID-R_PARAM ].

*** String in full length is not supported by "More" Popup
    if LR_ELEMDESCR->TYPE_KIND ne CL_ABAP_ELEMDESCR=>TYPEKIND_STRING.
      data(LR_RANGE_DIALOG) = LS_MURFP-R_RANGE.
    else.
      get reference of LI_TEXT into LR_RANGE_DIALOG.
    endif.

*** Get Range
    assign LS_MURFP-R_RANGE->* to <I_RANGE>.
    assign LR_RANGE_DIALOG->*  to <I_RANGE_DIALOG>.

    <I_RANGE_DIALOG> = corresponding #( <I_RANGE> ).

*** Get Search Help
    call function 'F4IF_DETERMINE_SEARCHHELP'
      exporting
        TABNAME           = LF_DATEL
        FIELDNAME         = SPACE
      importing
        SHLP              = LS_SHLP
      exceptions
        FIELD_NOT_FOUND   = 1
        NO_HELP_FOR_FIELD = 2
        INCONSISTENT_HELP = 3
        others            = 4.
    if SY-SUBRC         ne 0    or
       LS_SHLP-SHLPTYPE eq 'FV'.
      move LS_SHLP-SHLPNAME to LF_HELP_FIELD.
      clear LS_SHLP.
    endif.

*** Display Mode
    LF_DISPLAY = switch #( ME->R_POPUP_MURGR->F_LOCKED when ABAP_TRUE then ABAP_FALSE
                                                                      else ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Call Select Options
    call function 'COMPLEX_SELECTIONS_DIALOG'
      exporting
        TITLE             = 'Select Values'(S01)
        HELP_FIELD        = LF_HELP_FIELD
        SEARCH_HELP       = LS_SHLP-SHLPNAME
        JUST_DISPLAY      = LF_DISPLAY
        LOWER_CASE        = LR_ELEMDESCR->GET_DDIC_FIELD( )-LOWERCASE
      tables
        RANGE             = <I_RANGE_DIALOG>
      exceptions
        NO_RANGE_TAB      = 1
        CANCELLED         = 2
        INTERNAL_ERROR    = 3
        INVALID_FIELDNAME = 4
        others            = 5.
    if SY-SUBRC ne 0 and
       SY-SUBRC ne 2.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Fill internal Range by Dialog
    <I_RANGE> = corresponding #( <I_RANGE_DIALOG> ).

  endmethod.
method INIT_CONTAINER .

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = '0200CC_MURFP'
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

endmethod.
  method INIT_DATA.

    data: LF_UNIT  type /VCXI/CKX_UOM.
    data: LS_MUREL type ZVCXI_XCUR_S_MUREL,
          LS_MUCFP type ZVCXI_XCUC_S_MUCFP,
          LS_MURFP type ZVCXI_XCUR_S_MURFP,
          LS_MUMAP type ZVCXI_XCUR_S_MUMAP.
    field-symbols: <S_MURFP_GRID> type ZVCXI_XCUR_S_MURFP_GRID,
                   <I_RANGE>      type standard table,
                   <S_RANGE>      type ANY,
                   <F_SIGN>       type ANY,
                   <F_OPTION>     type ANY,
                   <F_LOW>        type ANY,
                   <F_HIGH>       type ANY,
                   <F_VALUE_TO>   type ANY.


    clear ME->T_MURFP_GRID.

*** Get current Update Element
    LS_MUREL = ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ].
    check LS_MUREL-R_MUCEL is bound.

    loop at LS_MUREL-R_MUCEL->T_MUCFP into LS_MUCFP.
***   Add new Entry
      append value #( R_PARAM = LS_MUCFP-R_PARAM ) to ME->T_MURFP_GRID assigning <S_MURFP_GRID>.

***   Parameter Description
      ZCL_VCXI_XCUC_MUCEL=>GET_PARAM_INFO( exporting IR_PARAM = <S_MURFP_GRID>-R_PARAM
                                                     IF_SYSOM = ME->R_POPUP_MURGR->S_MURGR_VIS-SYSOM
                                           importing EF_PARID = <S_MURFP_GRID>-PARID
                                                     EF_DESCR = <S_MURFP_GRID>-PARAM_DESCR
                                                     EF_UNIT  = LF_UNIT ).

***   Load current Runtime Data
      if LINE_EXISTS( LS_MUREL-T_MURFP[ R_PARAM = LS_MUCFP-R_PARAM ] ).
        LS_MURFP = LS_MUREL-T_MURFP[ R_PARAM = LS_MUCFP-R_PARAM ].
        <S_MURFP_GRID>-FACTV = ABAP_TRUE.

***     Get Range From
        if LS_MURFP-R_RANGE is bound.
          assign LS_MURFP-R_RANGE->* to <I_RANGE>.

          if <I_RANGE> is initial.
***         Empty Range
            ME->SET_LINE( exporting IF_OPT_ICON = ICON_SELECTION
                                    IF_SEL_ICON = ICON_ENTER_MORE
                          changing  CS_DATA     = <S_MURFP_GRID> ).
          else.
            assign LS_MURFP-R_RANGE->* to <I_RANGE>.
****        Use first line of Range
            assign component 'SIGN'   of structure <I_RANGE>[ 1 ] to <F_SIGN>.
            assign component 'OPTION' of structure <I_RANGE>[ 1 ] to <F_OPTION>.
            assign component 'LOW'    of structure <I_RANGE>[ 1 ] to <F_LOW>.
            assign component 'HIGH'   of structure <I_RANGE>[ 1 ] to <F_HIGH>.

            ME->SET_LINE( exporting IF_OPT_ICON = ZCL_VCXI_XCUR_SERVICE=>GET_SEL_ICON( IF_SIGN      = <F_SIGN>
                                                                                       IF_OPTION    = <F_OPTION> )
                                    IF_PVRFR    = <F_LOW>
                                    IF_PVRTO    = <F_HIGH>
                                    IF_SEL_ICON = switch #( LINES( <I_RANGE> ) when 1 then ICON_ENTER_MORE
                                                                               else        ICON_DISPLAY_MORE )
                                    IF_DATEL    = LS_MUCFP-DATEL
                                    IF_UNIT     = LF_UNIT
                          changing  CS_DATA     = <S_MURFP_GRID> ).
          endif.
        endif.

      endif.

    endloop.

  endmethod.
method INIT_GRID .

  if ME->R_GRID is not bound.
    create object ME->R_GRID
      exporting
        I_PARENT          = ME->R_CONTAINER
        I_APPL_EVENTS     = 'X'
      exceptions
        ERROR_CNTL_CREATE = 1
        ERROR_CNTL_INIT   = 2
        ERROR_CNTL_LINK   = 3
        ERROR_DP_CREATE   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Set Enter as Event
    ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

*** Set Event Hanlder for Input
    set handler ME->HANDLE_DATA_CHANGED_FINISHED for ME->R_GRID.
    set handler ME->HANDLE_DATA_CHANGED          for ME->R_GRID.

*** Button in ALV Column
    set handler ME->HANDLE_BUTTON_CLICK  for ME->R_GRID.

*** Build Field Catalog
    ME->BUILD_FIELDCAT( ).

  endif.

endmethod.
  method REFRESH_GRID .

    ME->F_INDEX = IF_INDEX.

*** Initialize Update Customizing Element
    ME->R_MUCEL = ME->R_POPUP_MURGR->T_MUREL[ ME->F_INDEX ]-R_MUCEL.

*** Initialize Data
    ME->INIT_DATA( ).

*** Initial Display
    if ME->R_GRID is not bound.

      ME->INIT_CONTAINER( ).
      ME->INIT_GRID( ).

      ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY( exporting
                                                 IT_TOOLBAR_EXCLUDING          = value #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
                                                 IS_LAYOUT                     = ME->GET_LAYOUT( )
                                               changing
                                                 IT_FIELDCATALOG               = ME->T_FIELDCAT
                                                 IT_OUTTAB                     = ME->T_MURFP_GRID
                                               exceptions
                                                 INVALID_PARAMETER_COMBINATION = 1
                                                 PROGRAM_ERROR                 = 2
                                                 TOO_MANY_LINES                = 3
                                                 others                        = 4 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

*** Update of Data
    else.
      ME->R_GRID->SET_FRONTEND_FIELDCATALOG( IT_FIELDCATALOG = ME->T_FIELDCAT ).
      ME->R_GRID->SET_FRONTEND_LAYOUT( IS_LAYOUT = ME->GET_LAYOUT( ) ).
      ME->R_GRID->REFRESH_TABLE_DISPLAY( exceptions FINISHED = 1 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
  method SET_LINE.

    field-symbols: <F_OPT_ICON> type ICON_D,
                   <F_PVRFR>    type ANY,
                   <F_PVRTO>    type ANY,
                   <F_SEL_ICON> type ICON_D,
                   <F_PVNEW>    type ANY,
                   <T_STYL>     type LVC_T_STYL.


***--------------------------------------------------------------------------------------
*** Range
    if IF_OPT_ICON is supplied.
      assign component 'OPT_ICON' of structure CS_DATA to <F_OPT_ICON>.
      <F_OPT_ICON> = IF_OPT_ICON.
    endif.

    if IF_PVRFR is supplied.
      assign component 'PVRFR' of structure CS_DATA to <F_PVRFR>.
      ME->CONVERT_VALUE( exporting IF_DATEL = IF_DATEL
                                   IF_VALUE = IF_PVRFR
                                   IF_UNIT  = IF_UNIT
                         changing  CF_VALUE = <F_PVRFR> ).
    endif.

    if IF_PVRTO is supplied.
      assign component 'PVRTO' of structure CS_DATA to <F_PVRTO>.
      ME->CONVERT_VALUE( exporting IF_DATEL = IF_DATEL
                                   IF_VALUE = IF_PVRTO
                                   IF_UNIT  = IF_UNIT
                         changing  CF_VALUE = <F_PVRTO> ).
    endif.

***--------------------------------------------------------------------------------------
*** "More" Icon
    if IF_SEL_ICON is supplied.
      assign component 'SEL_ICON' of structure CS_DATA to <F_SEL_ICON>.
      <F_SEL_ICON> = IF_SEL_ICON.
    endif.

***--------------------------------------------------------------------------------------
*** Style Table
    assign component 'T_STYL' of structure CS_DATA to <T_STYL>.
    if IT_STYL is supplied.
      <T_STYL> = IT_STYL.
    endif.

***--------------------------------------------------------------------------------------
*** "More" Icon as Button
    insert value #( FIELDNAME = 'SEL_ICON'
                    STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON ) into table <T_STYL>.

  endmethod.
