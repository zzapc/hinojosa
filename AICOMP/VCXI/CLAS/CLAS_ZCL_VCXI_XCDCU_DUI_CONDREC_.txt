
class ZCL_VCXI_XCDCU_DUI_CONDREC definition
  public
  inheriting from ZCL_VCXI_XCDCU_DUI
  create public .

public section.

  data S_CR_VIS type ZVCXI_XCDCU_S_CR_VIS .
  data S_TAB_DESCR type ZVCXI_XCD_S_TAB_DESCR .
  constants C_UC_REQ_TR type SYUCOMM value 'CR_REQ_TR'. "#EC NOTEXT

  methods DO_UPDATE_CONDREC_VIS
    importing
      !IS_CR_VIS type ZVCXI_XCDCU_S_CR_VIS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to ZCL_VCXI_XCDCU_UIFW
      !IR_OBJECT type ref to /VCXI/IF_CKX_OBJECT
    raising
      /VCXI/CX_CKX .
  methods OPEN_CONDDEF
    raising
      /VCXI/CX_CKX .

  methods DO_FREE
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_FILTER type ref to ZCL_VCXI_XCDCU_GRID_CR_FILTER .
  data R_GRID_VALUE type ref to ZCL_VCXI_XCDCU_GRID_CR_VALUE .
  data R_CONDREC type ref to ZCL_VCXI_XCDC_CONDREC .
  data R_GRID_EXIT type ref to ZCL_VCXI_XCDCU_GRID_CR_EXIT .
  data R_PART_DEFAU type ref to ZCL_VCXI_XCDCU_CR_PART_DEFAU .
  data R_PART_SCRIM type ref to ZCL_VCXI_XCDCU_CR_PART_SCRIM .
  data R_PART_FUNCT type ref to ZCL_VCXI_XCDCU_CR_PART_FUNCT .

  methods INIT_TAB
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_REQ_TR
    raising
      /VCXI/CX_CKX .
  methods INIT_DEFAU
    raising
      /VCXI/CX_CKX .
  methods INIT_FUNCT
    raising
      /VCXI/CX_CKX .
  methods INIT_SCRIM
    raising
      /VCXI/CX_CKX .
  methods INTI_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_UC_CHECK_S
    redefinition .
  methods HANDLE_UC_CHOOSE
    redefinition .
  methods HANDLE_UC_TOGGLE
    redefinition .
private section.
endclass. "ZCL_VCXI_XCDCU_DUI_CONDREC definition
class ZCL_VCXI_XCDCU_DUI_CONDREC implementation.
method CONSTRUCTOR.

  data: LR_CONDREC type ref to ZCL_VCXI_XCDC_CONDREC.

***--------------------------------------------------------------------------------------
*** Get Condition Record
  try.
      move IR_OBJECT ?to LR_CONDREC.
    catch CX_SY_MOVE_CAST_ERROR.
      raise exception type /VCXI/CX_CKX.
  endtry.

*** Check Authorization
  ZCL_VCXI_XCDC_CONDREC=>CHECK_AUTH( IF_ACTVT   = ZCL_VCXI_XCDC_CONDREC=>C_ACTVT_DISPLAY
                                     IR_CONDDEF = LR_CONDREC->R_CONDDEF
                                     IR_CONDREC = LR_CONDREC ).

***--------------------------------------------------------------------------------------
*** Do Super
  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_OBJECT = IR_OBJECT ).


  try.
      move IR_OBJECT ?to ME->R_CONDREC.
    catch CX_SY_MOVE_CAST_ERROR.
      raise exception type /VCXI/CX_CKX.
  endtry.


***----------------------------------------------------------------------------
  if ME->R_GRID_FILTER is not bound.
*** Create Grid for DVC Filter
    create object ME->R_GRID_FILTER
      exporting
        IR_CUSTOMIZING = ME->R_CONDREC.
  endif.

***----------------------------------------------------------------------------
  if ME->R_GRID_VALUE is not bound.
*** Create Grid for DVC Condition Value
    create object ME->R_GRID_VALUE
      exporting
        IR_CUSTOMIZING = ME->R_CONDREC.
  endif.

***----------------------------------------------------------------------------
  if ME->R_GRID_EXIT is not bound.
*** Create Grid for DVC Condition Exit
    create object ME->R_GRID_EXIT
      exporting
        IR_CUSTOMIZING = ME->R_CONDREC
        IR_DUI_CONDREC = ME.
  endif.


  call function 'ZVCXI_XCDCU_DUI_CONDREC_BIND'
    exporting
      IR_DUI_CONDREC = ME
    importing
      ES_DYNP        = ME->S_DYNP.

  ME->INIT_SCRIM( ).
  ME->INIT_FUNCT( ).
  ME->INIT_DEFAU( ).

endmethod.
method DO_FREE.

  SUPER->DO_FREE( ).

***------------------------------------------------------------------
*** Free Filter Grid
  if ME->R_GRID_FILTER is bound.
    ME->R_GRID_FILTER->DO_FREE( ).
    clear ME->R_GRID_FILTER.
  endif.

***------------------------------------------------------------------
*** Free Value Grid
  if ME->R_GRID_VALUE is bound.
    ME->R_GRID_VALUE->DO_FREE( ).
    clear ME->R_GRID_VALUE.
  endif.

***------------------------------------------------------------------
*** Free Value Grid
  if ME->R_GRID_EXIT is bound.
    ME->R_GRID_EXIT->DO_FREE( ).
    clear ME->R_GRID_EXIT.
  endif.

***------------------------------------------------------------------
*** Free Screen Impact Part
  if ME->R_PART_SCRIM is bound.
    ME->R_PART_SCRIM->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Function Part
  if ME->R_PART_FUNCT is bound.
    ME->R_PART_FUNCT->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Default Part
  if ME->R_PART_DEFAU is bound.
    ME->R_PART_DEFAU->DO_FREE( ).
  endif.

endmethod.
method DO_PBO.

*** initialze Visualization
  ME->INTI_VIS( ).

  ME->INIT_TAB( ).

***----------------------------------------------------------------------------
*** Active Tab
  if ( ME->R_PART_SCRIM is not bound and ME->R_UIFW->F_ACTIVE_TAB eq '0100STRIP_SCRIM' ) or
     ( ME->R_PART_FUNCT is not bound and ME->R_UIFW->F_ACTIVE_TAB eq '0100STRIP_FUNCT' ) or
     ( ME->R_PART_DEFAU is not bound and ME->R_UIFW->F_ACTIVE_TAB eq '0100STRIP_DEFAU' ).
    clear ME->R_UIFW->F_ACTIVE_TAB.
  endif.

*** Refresh Grid
  if ME->R_GRID_FILTER is bound.
    ME->R_GRID_FILTER->REFRESH_GRID( ).
  endif.
  if ME->R_GRID_VALUE is bound.
    ME->R_GRID_VALUE->REFRESH_GRID( ).
  endif.
  if ME->R_GRID_EXIT is bound.
    ME->R_GRID_EXIT->REFRESH_GRID( ).
  endif.

  ME->MODIFY_SCREEN( ).

****------------------------------------------------------------------
**** If there are inconsistent Values -> show Message
  if ME->R_CONDREC->R_MESSAGE is bound.
    ME->R_CONDREC->R_MESSAGE->DISPLAY_MSG( ).
    ME->R_CONDREC->R_MESSAGE->INIT_MSG( ).
  endif.

endmethod.
method DO_UPDATE_CONDREC_VIS.

  if ME->S_CR_VIS-ICORE ne IS_CR_VIS-ICORE.
    ME->R_CONDREC->SET_ID( IF_ID = IS_CR_VIS-ICORE ).
  endif.

  if ME->S_CR_VIS-SCORE ne IS_CR_VIS-SCORE.
    ME->R_CONDREC->SET_SCORE( IF_SCORE = IS_CR_VIS-SCORE ).
  endif.

endmethod.
method DO_USER_COMMAND.


  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_FILTER is bound.
    ME->R_GRID_FILTER->CHECK_CHANGED_DATA( ).
  endif.

  if ME->R_GRID_VALUE is bound.
    ME->R_GRID_VALUE->CHECK_CHANGED_DATA( ).
  endif.

  if ME->R_GRID_EXIT is bound.
    ME->R_GRID_EXIT->CHECK_CHANGED_DATA( ).
  endif.


  case IF_UCOMM.
    when '0100STRIP_SCRIM' or
         '0100STRIP_FUNCT' or
         '0100STRIP_DEFAU'.
      move IF_UCOMM to ME->R_UIFW->F_ACTIVE_TAB.

    when ZCL_VCXI_XCDCU_DUI_CONDREC=>C_UC_REQ_TR.
      ME->HANDLE_UC_REQ_TR( ).

    when others.
      if ME->R_PART_SCRIM is bound.
        ME->R_PART_SCRIM->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_FUNCT is bound.
        ME->R_PART_FUNCT->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_DEFAU is bound.
        ME->R_PART_DEFAU->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
  endcase.

endmethod.
method HANDLE_UC_CHECK_S.

  create object ME->R_MSG.

  ME->R_CONDREC->DO_CHECK( IR_MSG = ME->R_MSG ).

  if ME->R_MSG->T_MSG is not initial.
    ME->R_MSG->DISPLAY_MSG( ).
    ME->R_MSG->INIT_MSG( ).
  endif.

endmethod.
method HANDLE_UC_CHOOSE.

  data:  LR_OBJECT   type ref to /VCXI/IF_CKX_OBJECT.

  case ME->R_UIFW->F_CURSOR.
    when 'ZVCXI_XCDCU_S_CR_VIS-ICODE'.
      if ME->R_CONDREC->R_CONDDEF is bound.

        try.
            move ME->R_CONDREC->R_CONDDEF ?to LR_OBJECT.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_OBJECT.
        endtry.

        check LR_OBJECT is bound.
        ME->R_UIFW->OPEN_NEW_DUI( IR_OBJECT = LR_OBJECT ).

      endif.
  endcase.

endmethod.
method HANDLE_UC_REQ_TR.

  ME->R_CONDREC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCDC_CONDREC=>C_FCODE_CONDREC_REQ_TR ).

endmethod.
method HANDLE_UC_TOGGLE.

*** Request Machine ALV Refresh
  if ME->R_GRID_FILTER is bound.
    move ABAP_TRUE to ME->R_GRID_FILTER->F_REFRESH_ALL_REQ.
    move ABAP_TRUE to ME->R_GRID_FILTER->F_REFRESH_REQ.
  endif.
  if ME->R_GRID_VALUE is bound.
    move ABAP_TRUE to ME->R_GRID_VALUE->F_REFRESH_ALL_REQ.
    move ABAP_TRUE to ME->R_GRID_VALUE->F_REFRESH_REQ.
  endif.
  if ME->R_GRID_EXIT is bound.
    move ABAP_TRUE to ME->R_GRID_EXIT->F_REFRESH_ALL_REQ.
    move ABAP_TRUE to ME->R_GRID_EXIT->F_REFRESH_REQ.
  endif.

*** Initialize Add-on Tab List
  ME->INIT_TAB( ).

endmethod.
method INIT_DEFAU.

  try.

      create object ME->R_PART_DEFAU
        exporting
          IR_CONDREC     = ME->R_CONDREC.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_FUNCT.

  try.

      create object ME->R_PART_FUNCT
        exporting
          IR_CONDREC = ME->R_CONDREC.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_SCRIM.

  try.

      create object ME->R_PART_SCRIM
        exporting
          IR_CONDREC = ME->R_CONDREC.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_TAB.

***----------------------------------------------------------------------------
*** Initialize TabStrip Description and Refresh
  if ME->R_PART_SCRIM is bound.
    ME->S_CR_VIS-STRIPDESCR_SCRIM = ME->R_PART_SCRIM->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_SCRIM->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_FUNCT is bound.
    ME->S_CR_VIS-STRIPDESCR_FUNCT = ME->R_PART_FUNCT->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_FUNCT->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_DEFAU is bound.
    ME->S_CR_VIS-STRIPDESCR_DEFAU  = ME->R_PART_DEFAU->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_DEFAU->F_REFRESH_REQUESTED.
  endif.

endmethod.
method INTI_VIS.

  data:  LS_LOG      type /VCXI/CKX_S_LOG,
         LS_LOG_EXT  type /VCXI/CKX_S_LOG_EXT.

  free: ME->S_CR_VIS.

  move ME->R_OBJECT->GET_ID( )            to ME->S_CR_VIS-ICORE.
  move ME->R_CONDREC->F_SCORE             to ME->S_CR_VIS-SCORE.
  move ME->R_CONDREC->R_CONDDEF->/VCXI/IF_CKX_OBJECT~GET_ID( )
                                          to ME->S_CR_VIS-ICODE.

*** Get Source
  move-corresponding ME->R_CONDREC->S_SRC to ME->S_CR_VIS.

*** Get Log Data
  move ME->R_OBJECT->GET_LOG( )           to LS_LOG.
  LS_LOG_EXT = /VCXI/CL_CKX_SERVICE=>GET_LOG_EXT( IS_LOG = LS_LOG ).
  move-corresponding LS_LOG_EXT           to ME->S_CR_VIS.

endmethod.
method MODIFY_SCREEN.

***------------------------------------------------------------------------------------------------
*** Modify Screen
  loop at screen.
    if ME->R_CONDREC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_TRUE.
      move 0 to SCREEN-INPUT.
      move 0 to SCREEN-REQUIRED.
    endif.

*** Hide Screen Group Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_XCDCU_S_CR_VIS-STRIPDESCR_SCRIM'.
      if ME->R_PART_SCRIM is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Function Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_XCDCU_S_CR_VIS-STRIPDESCR_FUNCT'.
      if ME->R_PART_FUNCT is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Default Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_XCDCU_S_CR_VIS-STRIPDESCR_DEFAU'.
      if ME->R_PART_DEFAU is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

    modify screen.
  endloop.

endmethod.
method OPEN_CONDDEF.

  data:  LR_OBJECT   type ref to /VCXI/IF_CKX_OBJECT.

  check ME->R_CONDREC->R_CONDDEF is bound.

  try.
      move ME->R_CONDREC->R_CONDDEF ?to LR_OBJECT.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_OBJECT.
  endtry.

  check LR_OBJECT is bound.
  ME->R_UIFW->OPEN_NEW_DUI( IR_OBJECT = LR_OBJECT ).

endmethod.
