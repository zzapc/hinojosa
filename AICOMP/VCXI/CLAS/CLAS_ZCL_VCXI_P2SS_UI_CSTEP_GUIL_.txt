
class ZCL_VCXI_P2SS_UI_CSTEP_GUIL definition
  public
  inheriting from ZCL_VCXI_P2SS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_GUIL_VIS type ZVCXI_P2SS_S_CSTEP_GUIL_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_CSTEP_GUIL type ref to ZCL_VCXI_P2SS_PR_CSTEP_GUIL .
  constants C_UC_SPTNL type SYUCOMM value 'SPTNL' ##NO_TEXT.
  constants C_UC_SPTNW type SYUCOMM value 'SPTNW' ##NO_TEXT.

  methods HANDLE_UC_SPTRN
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SS_UI_CSTEP_GUIL definition
class ZCL_VCXI_P2SS_UI_CSTEP_GUIL implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P2SS_UI_CSTEP_GUIL_BIND'
      exporting
        IR_UI_CSTEP_GUIL = ME
      importing
        ES_DYNP          = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_GUIL.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***----------------------------------------------------------------------------
***     Modify Screen
        loop at screen.
***       Handling Dimension changeable if Override Flag is set
          if SCREEN-GROUP1 eq 'OHD'.
            if ME->S_CSTEP_GUIL_VIS-FOVRR_HNDDIM eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       PC per Cut changeable if Override Flag is set and Cut Height is calculated
          if ME->S_CSTEP_GUIL_VIS-FOVRR_PCPCU eq ABAP_FALSE.
            if SCREEN-GROUP1 eq 'OPC'.
              move 0 to SCREEN-INPUT.
            endif.
          else.
            if SCREEN-GROUP1 eq 'CCH'.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_CSTEP_GUIL_VIS type ZVCXI_P2SS_S_CSTEP_GUIL_VIS.


*** Call SUPER
    SUPER->DO_UPDATE_VIS( IS_CSTEP_VIS = IS_CSTEP_VIS ).

    check ME->R_PR_CSTEP_GUIL is bound.

*** "Cast" Vis Structure
    move-corresponding IS_CSTEP_VIS to LS_CSTEP_GUIL_VIS.

***--------------------------------------------------------------------------------------
*** Set Trim on Width (Total)
    if ME->S_CSTEP_GUIL_VIS-S_TRWIT ne LS_CSTEP_GUIL_VIS-S_TRWIT.
      ME->R_PR_CSTEP_GUIL->SET_TRWIT( IS_TRWIT = LS_CSTEP_GUIL_VIS-S_TRWIT
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim on Length (Total)
    if ME->S_CSTEP_GUIL_VIS-S_TRLET ne LS_CSTEP_GUIL_VIS-S_TRLET.
      ME->R_PR_CSTEP_GUIL->SET_TRLET( IS_TRLET = LS_CSTEP_GUIL_VIS-S_TRLET
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


***--------------------------------------------------------------------------------------
*** Set Number of Outs on Length
    if ME->S_CSTEP_GUIL_VIS-NOUTL ne LS_CSTEP_GUIL_VIS-NOUTL.
      ME->R_PR_CSTEP_GUIL->SET_NOUTL( IF_NOUTL = LS_CSTEP_GUIL_VIS-NOUTL
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Outs on Width
    if ME->S_CSTEP_GUIL_VIS-NOUTW ne LS_CSTEP_GUIL_VIS-NOUTW.
      ME->R_PR_CSTEP_GUIL->SET_NOUTW( IF_NOUTW = LS_CSTEP_GUIL_VIS-NOUTW
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Cuts
    if ME->S_CSTEP_GUIL_VIS-NOCUT ne LS_CSTEP_GUIL_VIS-NOCUT.
      ME->R_PR_CSTEP_GUIL->SET_NOCUT( IF_NOCUT = LS_CSTEP_GUIL_VIS-NOCUT
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Cut Height
    if ME->S_CSTEP_GUIL_VIS-S_CUTHE ne LS_CSTEP_GUIL_VIS-S_CUTHE.
      ME->R_PR_CSTEP_GUIL->SET_CUTHE( IS_CUTHE = LS_CSTEP_GUIL_VIS-S_CUTHE
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set PC/Cut if it is "Overriden"
    if ME->S_CSTEP_GUIL_VIS-FOVRR_PCPCU eq ABAP_TRUE and
       ME->S_CSTEP_GUIL_VIS-PCPCU ne LS_CSTEP_GUIL_VIS-PCPCU.
      ME->R_PR_CSTEP_GUIL->SET_PCPCU( IF_PCPCU = LS_CSTEP_GUIL_VIS-PCPCU
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override PC/Cut
    if ME->S_CSTEP_GUIL_VIS-FOVRR_PCPCU ne LS_CSTEP_GUIL_VIS-FOVRR_PCPCU.
      ME->R_PR_CSTEP_GUIL->SET_PCPCU( IF_FOVRR = LS_CSTEP_GUIL_VIS-FOVRR_PCPCU ).
    endif.


***--------------------------------------------------------------------------------------
*** Set Trim Left
    if ME->S_CSTEP_GUIL_VIS-S_TRLEF ne LS_CSTEP_GUIL_VIS-S_TRLEF.
      ME->R_PR_CSTEP_GUIL->SET_TRLEF( IS_TRLEF = LS_CSTEP_GUIL_VIS-S_TRLEF
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim Right
    if ME->S_CSTEP_GUIL_VIS-S_TRRIG ne LS_CSTEP_GUIL_VIS-S_TRRIG.
      ME->R_PR_CSTEP_GUIL->SET_TRRIG( IS_TRRIG = LS_CSTEP_GUIL_VIS-S_TRRIG
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim Top
    if ME->S_CSTEP_GUIL_VIS-S_TRTOP ne LS_CSTEP_GUIL_VIS-S_TRTOP.
      ME->R_PR_CSTEP_GUIL->SET_TRTOP( IS_TRTOP = LS_CSTEP_GUIL_VIS-S_TRTOP
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim Bottom
    if ME->S_CSTEP_GUIL_VIS-S_TRBOT ne LS_CSTEP_GUIL_VIS-S_TRBOT.
      ME->R_PR_CSTEP_GUIL->SET_TRBOT( IS_TRBOT = LS_CSTEP_GUIL_VIS-S_TRBOT
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


***--------------------------------------------------------------------------------------
*** Update Handling Dimension if it is "Overriden"
    if ME->S_CSTEP_GUIL_VIS-FOVRR_HNDDIM eq ABAP_TRUE and
       ME->S_CSTEP_GUIL_VIS-S_HNDDIM ne LS_CSTEP_GUIL_VIS-S_HNDDIM.
      ME->R_PR_CSTEP_GUIL->SET_HNDDIM( IS_HNDDIM = LS_CSTEP_GUIL_VIS-S_HNDDIM
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Handling Dimension
    if ME->S_CSTEP_GUIL_VIS-FOVRR_HNDDIM ne LS_CSTEP_GUIL_VIS-FOVRR_HNDDIM.
      ME->R_PR_CSTEP_GUIL->SET_HNDDIM( IF_FOVRR = LS_CSTEP_GUIL_VIS-FOVRR_HNDDIM ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.

***   Score Pattern Pop Up
      when C_UC_SPTNW or C_UC_SPTNL.
        ME->HANDLE_UC_SPTRN( exporting IF_UCOMM = IF_UCOMM  ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_GUIL.

  endmethod.
  method HANDLE_UC_SPTRN.

    data: LF_SPTRN type ZVCXI_PXS_SPTRN.


    case IF_UCOMM.
      when C_UC_SPTNW.
***     Get Score Pattern Width
        LF_SPTRN = ME->R_PR_CSTEP_GUIL->GET_SPTNW( ).

      when C_UC_SPTNL.
***     Get Score Pattern Length
        LF_SPTRN = ME->R_PR_CSTEP_GUIL->GET_SPTNL( ).

    endcase.

*** Start Popup
    check ZCL_VCXI_PXSS_POPUP_SPTRN=>START( changing CF_SPTRN = LF_SPTRN ) ne ABAP_TRUE.

    case IF_UCOMM.
      when C_UC_SPTNW.
***     Get Score Pattern Width
        ME->R_PR_CSTEP_GUIL->SET_SPTNW( IF_SPTNW = LF_SPTRN
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

      when C_UC_SPTNL.
***     Get Score Pattern Length
        ME->R_PR_CSTEP_GUIL->SET_SPTNL( IF_SPTNL = LF_SPTRN
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    endcase.

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    free: ME->S_CSTEP_GUIL_VIS.
    ME->S_CSTEP_GUIL_VIS-S_CSTEP_VIS = ME->S_CSTEP_VIS.

***--------------------------------------------------------------------------------------
*** Trim on Width (Total)
    ME->S_CSTEP_GUIL_VIS-S_TRWIT = ME->R_PR_CSTEP_GUIL->GET_TRWIT( ).

*** Trim on Length (Total)
    ME->S_CSTEP_GUIL_VIS-S_TRLET = ME->R_PR_CSTEP_GUIL->GET_TRLET( ).


*** Net Sheet Width
    ME->S_CSTEP_GUIL_VIS-S_SHTNW = ME->R_PR_CSTEP_GUIL->GET_SHTNW( ).

*** Net Sheet Length
    ME->S_CSTEP_GUIL_VIS-S_SHTNL = ME->R_PR_CSTEP_GUIL->GET_SHTNL( ).


***--------------------------------------------------------------------------------------
*** Number of Outs on Length and Pattern
    ME->S_CSTEP_GUIL_VIS-NOUTL = ME->R_PR_CSTEP_GUIL->GET_NOUTL( ).
    ME->S_CSTEP_GUIL_VIS-SPTNL = ME->R_PR_CSTEP_GUIL->GET_SPTNL( ).

*** Number of Outs on Width
    ME->S_CSTEP_GUIL_VIS-NOUTW = ME->R_PR_CSTEP_GUIL->GET_NOUTW( ).
    ME->S_CSTEP_GUIL_VIS-SPTNW = ME->R_PR_CSTEP_GUIL->GET_SPTNW( ).

*** Number of Outs
    ME->S_CSTEP_GUIL_VIS-NOUTT = ME->R_PR_CSTEP_GUIL->GET_NOUTT( ).


*** Number of Cuts
    ME->S_CSTEP_GUIL_VIS-NOCUT = ME->R_PR_CSTEP_GUIL->GET_NOCUT( ).

*** Cut Height
    ME->S_CSTEP_GUIL_VIS-S_CUTHE = ME->R_PR_CSTEP_GUIL->GET_CUTHE( ).

*** PC per Cut
    ME->S_CSTEP_GUIL_VIS-PCPCU = ME->R_PR_CSTEP_GUIL->GET_PCPCU( importing EF_FOVRR = ME->S_CSTEP_GUIL_VIS-FOVRR_PCPCU ).


***--------------------------------------------------------------------------------------
*** Trim Left
    ME->S_CSTEP_GUIL_VIS-S_TRLEF = ME->R_PR_CSTEP_GUIL->GET_TRLEF( ).

*** Trim Right
    ME->S_CSTEP_GUIL_VIS-S_TRRIG = ME->R_PR_CSTEP_GUIL->GET_TRRIG( ).

*** Trim Top
    ME->S_CSTEP_GUIL_VIS-S_TRTOP = ME->R_PR_CSTEP_GUIL->GET_TRTOP( ).

*** Trim Bottom
    ME->S_CSTEP_GUIL_VIS-S_TRBOT = ME->R_PR_CSTEP_GUIL->GET_TRBOT( ).

***--------------------------------------------------------------------------------------
*** Handling Dimension
    ME->S_CSTEP_GUIL_VIS-S_HNDDIM = ME->R_PR_CSTEP_GUIL->GET_HNDDIM( importing EF_FOVRR = ME->S_CSTEP_GUIL_VIS-FOVRR_HNDDIM ).

  endmethod.
