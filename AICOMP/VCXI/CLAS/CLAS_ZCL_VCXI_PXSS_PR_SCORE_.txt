
class ZCL_VCXI_PXSS_PR_SCORE definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_PX_SCORE type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_SCORE' ##NO_TEXT.
  constants C_PARID_FSLIN type /VCXI/VKS_PARID value 'ZVCXI_PX_FSLIN' ##NO_TEXT.
  constants C_PARID_SCORP type /VCXI/VKS_PARID value 'ZVCXI_P0_SCORP' ##NO_TEXT.
  constants C_PARID_TSCOR type /VCXI/VKS_PARID value 'ZVCXI_P0_TSCOR' ##NO_TEXT.

  methods GET_FSLIN
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FSLIN) type ZVCXI_PXSS_FSLIN
    raising
      /VCXI/CX_CKX .
  methods GET_ISCOR
    exporting
      !EF_CSCOR type ZVCXI_P0SS_CSCOR
      !EF_NSCOR type ZVCXI_P0SS_NSCOR
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_ISCOR) type ZVCXI_P0SS_ISCOR
    raising
      /VCXI/CX_CKX .
  methods GET_SCORP
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_SCORP) type ZVCXI_P0SS_S_SCORP
    raising
      /VCXI/CX_CKX .
  methods GET_TSCOR
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_TSCOR) type ZVCXI_P0SS_TSCOR
    raising
      /VCXI/CX_CKX .
  methods SET_FSLIN
    importing
      !IF_FSLIN type ZVCXI_PXSS_FSLIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_ISCOR
    importing
      !IF_CSCOR type ZVCXI_P0SS_CSCOR
      !IF_NSCOR type ZVCXI_P0SS_NSCOR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SCORP
    importing
      !IS_SCORP type ZVCXI_P0SS_S_SCORP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TSCOR
    importing
      !IF_TSCOR type ZVCXI_P0SS_TSCOR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.
  constants C_IEVNT_O_FSLIN_CHANGED type /VCXI/VKSC_IEVNT value 'FSLIN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_SCORP_CHANGED type /VCXI/VKSC_IEVNT value 'SCORP_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_TSCOR_CHANGED type /VCXI/VKSC_IEVNT value 'TSCOR_CHANGED' ##NO_TEXT.

  methods CHECK_TSCOR
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_PR_SCORE definition
class ZCL_VCXI_PXSS_PR_SCORE implementation.
  method CHECK_TSCOR.

    data: LF_TSCOR type ZVCXI_P0SS_TSCOR.


*** Get current Score Type
    LF_TSCOR = ME->GET_TSCOR( ).

***----------------------------------------------------------------------------
    if LF_TSCOR is initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Score Type is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '415' ).
      endif.
      exit.
    endif.


***----------------------------------------------------------------------------
*** Check if Score Type is Valid
    if LINE_EXISTS( ZCL_VCXI_P0SS_CUST_PRSTY=>T_TSCOR_INFO[ TSCOR = LF_TSCOR ] ).
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Score Type is maintained and valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '413' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Score Type is maintained but not valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '414' ).
      endif.
    endif.

  endmethod.
  method GET_FSLIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FSLIN ).
    move LS_PARAM-ATWRT to RF_FSLIN.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_ISCOR.

    data: LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

***----------------------------------------------------------------------------
*** Get Leading Ojbect
    LS_LEOKY = ME->R_GATE->GET_LEOKY( ).

    move LS_LEOKY-LEOKY      to RF_ISCOR.
    move LS_LEOKY-LEOKY+0(1) to EF_CSCOR.
    move LS_LEOKY-LEOKY+1(2) to EF_NSCOR.
    move LS_LEOKY-SETBY      to EF_SETBY.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Description
      EF_DESCR = ZCL_VCXI_PXSS_BL_SCORE=>GET_DESCR_ISCOR( IF_ISCOR = RF_ISCOR ).
    endif.

  endmethod.
  method GET_SCORP.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SCORP ).
    move LS_PARAM-ATFLV to RS_SCORP-SCORP.
    move LS_PARAM-UNIT  to RS_SCORP-SCORP_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Score Type
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_TSCOR( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Score Type is filled
    ME->CHECK_TSCOR( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_TSCOR.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TSCOR ).
    move LS_PARAM-ATWRT to RF_TSCOR.
    move LS_PARAM-SETBY to EF_SETBY.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Description
      EF_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_TSCOR_INFO( IF_TSCOR = RF_TSCOR )-DESCR.
    endif.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

    endcase.

  endmethod.
method HANDLE_SET_DEFAULT.

  ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

endmethod.
  method SET_FSLIN.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FSLIN ).

    LS_PARAM-ATWRT = IF_FSLIN.
    LS_PARAM-SETBY = cond #( when IF_SETBY is supplied          then IF_SETBY
                             when LS_PARAM-SETBY is not initial then LS_PARAM-SETBY
                                                                else IF_SETBY ).

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FSLIN_CHANGED ).
    endif.

  endmethod.
  method SET_ISCOR.

    data:  LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

    move IF_CSCOR to LS_LEOKY-LEOKY+0(1).
    move IF_NSCOR to LS_LEOKY-LEOKY+1(2).
    move IF_SETBY to LS_LEOKY-SETBY.

    ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

  endmethod.
  method SET_SCORP.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SCORP ).

    LS_PARAM-ATFLV = IS_SCORP-SCORP.
    LS_PARAM-UNIT  = IS_SCORP-SCORP_UOM.
    LS_PARAM-SETBY = cond #( when IF_SETBY is supplied          then IF_SETBY
                             when LS_PARAM-SETBY is not initial then LS_PARAM-SETBY
                                                                else IF_SETBY ).

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SCORP_CHANGED ).
    endif.

  endmethod.
  method SET_TSCOR.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TSCOR ).

    LS_PARAM-ATWRT = IF_TSCOR.
    LS_PARAM-SETBY = cond #( when IF_SETBY is supplied          then IF_SETBY
                             when LS_PARAM-SETBY is not initial then LS_PARAM-SETBY
                                                                else IF_SETBY ).

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TSCOR_CHANGED ).
    endif.

  endmethod.
