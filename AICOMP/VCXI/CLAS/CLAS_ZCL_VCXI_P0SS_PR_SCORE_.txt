
class ZCL_VCXI_P0SS_PR_SCORE definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_P0_SCORE type /VCXI/VKSC_IPRVT value 'ZVCXI_P0SS_SCORE' ##NO_TEXT.
  constants C_PARID_SCORP type /VCXI/VKS_PARID value 'ZVCXI_P0_SCORP' ##NO_TEXT.
  constants C_PARID_TSCOR type /VCXI/VKS_PARID value 'ZVCXI_P0_TSCOR' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_ISCOR
    exporting
      !EF_CSCOR type ZVCXI_P0SS_CSCOR
      !EF_NSCOR type ZVCXI_P0SS_NSCOR
      !EF_ISCOR type ZVCXI_P0SS_ISCOR
    raising
      /VCXI/CX_CKX .
  methods GET_ISCOR_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_SCORP
    returning
      value(RS_SCORP) type ZVCXI_P0SS_S_SCORP
    raising
      /VCXI/CX_CKX .
  methods GET_TSCOR
    returning
      value(RF_TSCOR) type ZVCXI_P0SS_TSCOR
    raising
      /VCXI/CX_CKX .
  methods GET_TSCOR_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods SET_ISCOR
    importing
      !IF_CSCOR type ZVCXI_P0SS_CSCOR
      !IF_NSCOR type ZVCXI_P0SS_NSCOR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SCORP
    importing
      !IS_SCORP type ZVCXI_P0SS_S_SCORP optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TSCOR
    importing
      !IF_TSCOR type ZVCXI_P0SS_TSCOR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_O_SCORP_CHANGED type /VCXI/VKSC_IEVNT value 'SCORP_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_O_TSCOR_CHANGED type /VCXI/VKSC_IEVNT value 'TSCOR_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT'. "#EC NOTEXT

  methods CHECK_TSCOR
    returning
      value(RF_RESULT) type I
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SS_PR_SCORE definition
class ZCL_VCXI_P0SS_PR_SCORE implementation.
method CHECK_TSCOR.

***  0 Score Type is maintained and valid.
***  1 Score Type is maintained but not valid.
***  2 Score Type is not maintained.

  data: LF_TSCOR type ZVCXI_P0SS_TSCOR.

  LF_TSCOR = ME->GET_TSCOR( ).
  if LF_TSCOR is initial.
    RF_RESULT = 2.
    exit.
  endif.

*** Check if Score Type is Valid
  read table ZCL_VCXI_P0SS_CUST_PRSTY=>T_TSCOR_INFO with key TSCOR = LF_TSCOR
                                                    transporting no fields.
  if SY-SUBRC eq 0.
    RF_RESULT = 0.
  else.
    RF_RESULT = 1.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

endmethod.
method GET_ISCOR.

  data:  LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

  LS_LEOKY = ME->R_GATE->GET_LEOKY( ).

  move LS_LEOKY-LEOKY+0(1) to EF_CSCOR.
  move LS_LEOKY-LEOKY+1(2) to EF_NSCOR.
  move LS_LEOKY-LEOKY      to EF_ISCOR.

endmethod.
  method GET_ISCOR_DESCR.

    data: LF_CSCOR type ZVCXI_P0SS_CSCOR,
          LF_NSCOR type ZVCXI_P0SS_NSCOR.

    ME->GET_ISCOR( importing EF_CSCOR = LF_CSCOR
                             EF_NSCOR = LF_NSCOR ).

*** Identify Description
    select single DESCR
           into RF_DESCR
           from ZVCXI_P0S_TC030T
          where CSCOR eq LF_CSCOR
           and  LANGU eq SY-LANGU.
    if SY-SUBRC ne 0.
      clear RF_DESCR.
    endif.

*** Return Score ID Description
    concatenate RF_DESCR LF_NSCOR into RF_DESCR separated by SPACE.


  endmethod.
method GET_SCORP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SCORP ).
  move LS_PARAM-ATFLV to RS_SCORP-SCORP.
  move LS_PARAM-UNIT  to RS_SCORP-SCORP_UOM.

endmethod.
method GET_STATUS.

  RF_ELMST = SUPER->GET_STATUS( ).

*** Check Score Type
  if ME->CHECK_TSCOR( ) eq 0.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

*** Check Score Type is filled
  case ME->CHECK_TSCOR( ).
    when 0.
***   Score Type is maintained and valid.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '120' ).
    when 1.
***   Score Type is maintained but not valid.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '121' ).
    when 2.
***   Score Type is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '122' ).
  endcase.

endmethod.
method GET_TSCOR.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TSCOR ).
  move LS_PARAM-ATWRT to RF_TSCOR.

endmethod.
method GET_TSCOR_DESCR.

  data: LF_TSCOR       type ZVCXI_P0SS_TSCOR.
  data: LS_TSCOR_INFO  type ZVCXI_P0SS_S_TSCOR_INFO.

  LF_TSCOR = ME->GET_TSCOR( ).

*** Get Score Type Description from Score Manager
  LS_TSCOR_INFO = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_TSCOR_INFO( IF_TSCOR = LF_TSCOR ).
  move LS_TSCOR_INFO-DESCR to RF_DESCR.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_SET_DEFAULT.
      ME->HANDLE_SET_DEFAULT( ).

  endcase.

endmethod.
method HANDLE_SET_DEFAULT.

  ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

endmethod.
method SET_ISCOR.

  data:  LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

  move IF_CSCOR to LS_LEOKY-LEOKY+0(1).
  move IF_NSCOR to LS_LEOKY-LEOKY+1(2).
  move IF_SETBY to LS_LEOKY-SETBY.

  ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

endmethod.
method SET_SCORP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SCORP ).

  if IS_SCORP is supplied.
    move IS_SCORP-SCORP     to LS_PARAM-ATFLV.
    move IS_SCORP-SCORP_UOM to LS_PARAM-UNIT.
  endif.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SCORP_CHANGED ).
  endif.

endmethod.
method SET_TSCOR.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TSCOR ).

  move IF_TSCOR to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TSCOR_CHANGED ).
  endif.

endmethod.
