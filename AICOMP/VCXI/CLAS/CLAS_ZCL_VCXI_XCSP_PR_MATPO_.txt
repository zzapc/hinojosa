
class ZCL_VCXI_XCSP_PR_MATPO definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_XCS_MATPO type /VCXI/VKSC_IPRVT value 'ZVCXI_XCSP_MATPO'. "#EC NOTEXT

  methods CHANGE_MATNR
    importing
      !IF_DISST type /VCXI/VKC_DISST
      !IF_DISST_REQ type /VCXI/VKC_DISST optional
      !IR_MFI type ref to /VCXI/CL_VKSR_GATE
    changing
      !CF_MATNR type MATNR
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  types:
    begin of YS_MATPO,
                   MATNR       type        MATNR,
                   DISST       type        /VCXI/VKC_DISST,
                   R_GATE_MFI  type ref to /VCXI/CL_VKSR_GATE,
                 end   of YS_MATPO .
  types:
    YT_MATPO type standard table of YS_MATPO with default key .

  constants C_IEVNT_I_INIT_MATPO type /VCXI/VKSC_IEVNT value 'INIT_MATPO'. "#EC NOTEXT
  constants C_IEVNT_I_REGISTER_MFMGR type /VCXI/VKSC_IEVNT value 'REGISTER_MFMGR'. "#EC NOTEXT
  data T_MATPO type YT_MATPO .

  methods GET_MATNR
    importing
      !IF_DISST type /VCXI/VKC_DISST
      !IR_GATE_MFI type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_MATNR) type MATNR
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_MATPO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_REGISTER_MFMGR
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods REGISTER_MFI_TO_MATPO
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSP_PR_MATPO definition
class ZCL_VCXI_XCSP_PR_MATPO implementation.
method CHANGE_MATNR.

  field-symbols: <S_MATPO> type YS_MATPO.

*** If initial try to initialize it
  if ME->T_MATPO is initial.
    ME->HANDLE_INIT_MATPO( ).
  endif.

***----------------------------------------------------------------------------
*** Unregister Materialnumber
  read table ME->T_MATPO assigning <S_MATPO>
    with key MATNR      = CF_MATNR
             DISST      = IF_DISST
             R_GATE_MFI = IR_MFI.

***  Try to unassign Materialnumber
  if SY-SUBRC = 0.
*** Unassigne Materialnumber
    clear: <S_MATPO>-R_GATE_MFI.

*** Materialnumber for this MFI is not registered
  else.


  endif.

*** if needed -> register a new one.
  check IF_DISST_REQ is not initial.

  CF_MATNR = ME->GET_MATNR( IF_DISST    = IF_DISST_REQ
                            IR_GATE_MFI = IR_MFI ).

endmethod.
method GET_MATNR.

  field-symbols: <S_MATPO> type YS_MATPO.

***----------------------------------------------------------------------------
*** Find available Material Number for requested Low-Level Code
  loop at ME->T_MATPO assigning <S_MATPO>
                      where DISST      eq IF_DISST
                        and R_GATE_MFI is initial.

*** Set User of Material Number
    move IR_GATE_MFI     to <S_MATPO>-R_GATE_MFI.

*** Return Material Number
    move <S_MATPO>-MATNR to RF_MATNR.

    exit.
  endloop.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
*** Initialize Material Pool
    when C_IEVNT_I_INIT_MATPO.
      ME->HANDLE_INIT_MATPO( ).

*** Register Material Flow Manager
    when C_IEVNT_I_REGISTER_MFMGR.
      ME->HANDLE_REGISTER_MFMGR( IT_GATE = IT_GATE_PROVIDER ).
  endcase.

endmethod.
method HANDLE_INIT_MATPO.

  data:          LS_TC021         type          ZVCXI_XCS_TC021.
  data:          LT_TC021         type table of ZVCXI_XCS_TC021.
  data:          LR_APPDATA       type ref to /VCXI/CL_VKSR_APPDATA.
  field-symbols: <S_MATPO>        type YS_MATPO.

  check ME->T_MATPO is initial.

***----------------------------------------------------------------------------
*** Get Application Data
  try.
      move ME->R_GATE->GET_APPDATA( ) ?to LR_APPDATA.
    catch CX_SY_MOVE_CAST_ERROR.
      clear LR_APPDATA.
  endtry.
  check LR_APPDATA is bound.

***----------------------------------------------------------------------------
*** Get Customized Materials
  select * into table LT_TC021
           from ZVCXI_XCS_TC021
          where CMATN eq LR_APPDATA->S_CMPRK-CMATN
           and  PRFID eq LR_APPDATA->S_CMPRK-PRFID.

  loop at LT_TC021 into LS_TC021.
    append initial line to ME->T_MATPO assigning <S_MATPO>.
    move LS_TC021-MATNR to <S_MATPO>-MATNR.
    move LS_TC021-DISST to <S_MATPO>-DISST.
  endloop.

endmethod.
method HANDLE_REGISTER_MFMGR.

  data: LT_GATE_MFI type        /VCXI/VKSR_TT_GATE.
  data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
        LR_GATE_MFI type ref to /VCXI/CL_VKSR_GATE.

***----------------------------------------------------------------------------
*** Register each MFI of Requesting Manager if manager request an new level
  loop at IT_GATE into LR_GATE.
    check LR_GATE->R_CLSPR is bound and
          LR_GATE->R_CLSPR is instance of ZIF_VCXI_XCSP_MFMGR.

***----------------------------------------------------------------------------
*** Get all Material Flow In
    LT_GATE_MFI = cast ZIF_VCXI_XCSP_MFMGR( LR_GATE->R_CLSPR )->GET_MFI( ).

*** Register Material Flow In to Material Pool
    loop at LT_GATE_MFI into LR_GATE_MFI.
      ME->REGISTER_MFI_TO_MATPO( IR_GATE = LR_GATE_MFI ).
    endloop.
  endloop.

endmethod.
method REGISTER_MFI_TO_MATPO.

  data:          LF_MATNR    type        MATNR,
                 LF_DISST    type        /VCXI/VKC_DISST.
  data:          LR_MFSI     type ref to ZIF_VCXI_XCSP_MFSI.
  field-symbols: <S_MATPO>   type        YS_MATPO.


  try.
      move IR_GATE->R_CLSPR ?to LR_MFSI.
      check LR_MFSI is bound and
            LR_MFSI->GET_NEXTL( ) eq ABAP_TRUE.

      LF_DISST = LR_MFSI->GET_DISST( ).
      LF_MATNR = LR_MFSI->GET_MATNR( ).

***----------------------------------------------------------------------------
***   Material number is already assigned
      if LF_MATNR is not initial.
        read table ME->T_MATPO assigning <S_MATPO>
                               with key MATNR = LF_MATNR
                                        DISST = LF_DISST.

***     Try to assign Materialnumber
        if SY-SUBRC = 0.
***       Materialnumber can be assigned to MFI
          if <S_MATPO>-R_GATE_MFI is initial.
            move IR_GATE to <S_MATPO>-R_GATE_MFI.
          endif.
        endif.

***----------------------------------------------------------------------------
***   Materialnumber is initial and need to be set by Pool
      else.
        LF_MATNR = ME->GET_MATNR( IF_DISST    = LF_DISST
                                  IR_GATE_MFI = IR_GATE ).

***     Set new Material Number
        LR_MFSI->SET_MATNR( IF_MATNR = LF_MATNR ).

      endif.

    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

endmethod.
