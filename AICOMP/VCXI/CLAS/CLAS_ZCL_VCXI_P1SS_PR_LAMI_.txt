
class ZCL_VCXI_P1SS_PR_LAMI definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_P1SS_COMM_NEXT .
  interfaces ZIF_VCXI_PXSS_COMM_NEXT .
  interfaces ZIF_VCXI_PXSS_LAMI .
  interfaces ZIF_VCXI_PXSS_LTEXT .
  interfaces ZIF_VCXI_PXSS_FDI .
  interfaces ZIF_VCXI_XCS_NGREP .

  constants C_IPRVT_P1_LAMI type /VCXI/VKSC_IPRVT value 'ZVCXI_P1SS_LAMI' ##NO_TEXT.
  constants C_ATTID_VALID_TBOAR type /VCXI/VKS_ATTID value 'VALID_TBOAR' ##NO_TEXT.

  methods GET_CRBPX
    exporting
      !EF_CRBPX type ZVCXI_P1S_CRBPX
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RR_BL_CRBPROP) type ref to ZCL_VCXI_P1SS_BL_CRBPROP
    raising
      /VCXI/CX_CKX .
  methods GET_SHTLE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_SHTLE) type ZVCXI_P0SS_S_SHTLE
    raising
      /VCXI/CX_CKX .
  methods GET_SHTWI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_SHTWI) type ZVCXI_P0SS_S_SHTWI
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods GET_VALID_TBOAR
    returning
      value(RF_VALID_TBOAR) type STRING
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_SHTDIM type /VCXI/VKSC_IEVNT value 'RECALC_SHTDIM' ##NO_TEXT.
  constants C_IEVNT_I_REQ_BACKWARD type /VCXI/VKSC_IEVNT value 'REQ_BACKWARD' ##NO_TEXT.
  constants C_IEVNT_I_REQ_FORWARD type /VCXI/VKSC_IEVNT value 'REQ_FORWARD' ##NO_TEXT.
  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.
  constants C_IEVNT_O_CRBPX_CHANGED type /VCXI/VKSC_IEVNT value 'CRBPX_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOUPS_CHANGED type /VCXI/VKSC_IEVNT value 'NOUPS_CHANGED' ##NO_TEXT.
  constants C_PARID_CRBPX type /VCXI/VKS_PARID value 'ZVCXI_P1_CRBPX' ##NO_TEXT.
  constants C_PARID_NOUPS type /VCXI/VKS_PARID value 'ZVCXI_PX_NOUPS' ##NO_TEXT.
  constants C_PARID_SHTLE type /VCXI/VKS_PARID value 'ZVCXI_P0_SHTLE' ##NO_TEXT.
  constants C_PARID_SHTWI type /VCXI/VKS_PARID value 'ZVCXI_P0_SHTWI' ##NO_TEXT.
  constants C_IEVNT_I_REQ_LGLCD_CHANGED type /VCXI/VKSC_IEVNT value 'REQ_LGLCD_CHANGED' ##NO_TEXT.

  methods GET_PRVDR_BOARD
    importing
      !IF_MBOAR type ZVCXI_PCSS_MBOAR
    returning
      value(RR_PR_BOARD) type ref to ZCL_VCXI_P1SS_PR_BOARD
    raising
      /VCXI/CX_CKX .
  methods CHECK_XSHT
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods CHECK_RDLET
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_REDUC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_REDUC) type ref to ZIF_VCXI_PXSS_REDUC
    raising
      /VCXI/CX_CKX .
  methods CHECK_RDWIT
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_SHTDIM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_MS_LGLUE
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_MS_LGLUE) type ref to ZCL_VCXI_PXSS_PR_MS_LGLUE
    raising
      /VCXI/CX_CKX .
  methods SET_CRBPX
    importing
      !IF_CRBPX type ZVCXI_P1S_CRBPX
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_PXS_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SHTLE
    importing
      !IS_SHTLE type ZVCXI_P0SS_S_SHTLE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SHTWI
    importing
      !IS_SHTWI type ZVCXI_P0SS_S_SHTWI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SPEC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P1SS_PR_LAMI definition
class ZCL_VCXI_P1SS_PR_LAMI implementation.
  method CHECK_RDLET.

    data: LR_REDUC   type ref to ZIF_VCXI_PXSS_REDUC,
          LR_PR_XSHT type ref to ZCL_VCXI_PXSS_PR_XSHT.


***----------------------------------------------------------------------------
*** Get Provider
    LR_REDUC = ME->GET_PRVDR_REDUC( ).
    check LR_REDUC is bound.

    LR_PR_XSHT = ME->ZIF_VCXI_PXSS_LAMI~GET_PRVDR_XSHT( ).
    check LR_PR_XSHT is bound.

***----------------------------------------------------------------------------
*** Check for duplicate Reduction
    if LR_REDUC->GET_RDLET( )-RDLET is not initial and
       LR_PR_XSHT->ZIF_VCXI_PXSS_REDUC~GET_RDLET( )-RDLET is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Reduction on Length can't be maintained twice.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '558' ).
      endif.
    endif.

  endmethod.
  method CHECK_RDWIT.

    data: LR_REDUC   type ref to ZIF_VCXI_PXSS_REDUC,
          LR_PR_XSHT type ref to ZCL_VCXI_PXSS_PR_XSHT.


***----------------------------------------------------------------------------
*** Get Provider
    LR_REDUC = ME->GET_PRVDR_REDUC( ).
    check LR_REDUC is bound.

    LR_PR_XSHT = ME->ZIF_VCXI_PXSS_LAMI~GET_PRVDR_XSHT( ).
    check LR_PR_XSHT is bound.

***----------------------------------------------------------------------------
*** Check for duplicate Reduction
    if LR_REDUC->GET_RDWIT( )-RDWIT is not initial and
       LR_PR_XSHT->ZIF_VCXI_PXSS_REDUC~GET_RDWIT( )-RDWIT is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Reduction on Width can't be maintained twice.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '559' ).
      endif.
    endif.

  endmethod.
  method CHECK_XSHT.

***----------------------------------------------------------------------------
*** Check exactly one Sheet has been defined
    case LINES( ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XSHT=>C_IPRVT_PX_XSHT
                                       IF_INUSE = ABAP_TRUE ) ).
      when 1.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
        if IR_MESSAGE is bound.
***       The Lamination Sheet is maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                   IF_MSGTY = 'S'
                                   IF_MSGNO = '555' ).
        endif.

      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
        if IR_MESSAGE is bound.
***       No Lamination Sheet is maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '556' ).
        endif.

      when others.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
        if IR_MESSAGE is bound.
***       Too many Lamination Sheets are maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '557' ).
        endif.

    endcase.

  endmethod.
  method GET_CRBPX.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Get Parameter
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CRBPX ).
    move LS_PARAM-STRNG to EF_CRBPX.
    move LS_PARAM-SETBY to EF_SETBY.

***--------------------------------------------------------------------------------------
*** Get new Corrugator Backward Property XML
    if RR_BL_CRBPROP is requested.
      RR_BL_CRBPROP = ZCL_VCXI_P1SS_BL_CRBPROP=>FACTORY( IF_CRBPX = EF_CRBPX ).
    endif.

  endmethod.
  method GET_PRVDR_BOARD.

    data: LT_GATE            type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BOARD type ref to ZCL_VCXI_P1SS_PR_BOARD.

***--------------------------------------------------------------------------------------
*** Get all Boards
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P1SS_PR_BOARD=>C_IPRVT_BOARD
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Get Boards References
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
          check LR_PR_BOARD is bound.

          check LR_PR_BOARD->GET_MBOAR( ) eq IF_MBOAR.
          move LR_PR_BOARD to RR_PR_BOARD.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_BOARD.
      endtry.
    endloop.

  endmethod.
  method GET_PRVDR_MS_LGLUE.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_MS_LGLUE.

***------------------------------------------------------------------------------------------------
*** Find Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_LGLUE=>C_IPRVT_PX_MS_LGLUE
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_MS_LGLUE.

  endmethod.
  method GET_PRVDR_REDUC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_REDUC.

***------------------------------------------------------------------------------------------------
*** Find Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_PXSS_REDUC=>C_IPRVT_PX_REDUC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_REDUC.

  endmethod.
  method GET_PRVDR_SPEC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           ER_PR_SPEC.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SPEC=>C_IPRVT_PX_SPEC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to ER_PR_SPEC.

  endmethod.
  method GET_SHTLE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHTLE ).
    move LS_PARAM-ATFLV to RS_SHTLE-SHTLE.
    move LS_PARAM-UNIT  to RS_SHTLE-SHTLE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_SHTWI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHTWI ).
    move LS_PARAM-ATFLV to RS_SHTWI-SHTWI.
    move LS_PARAM-UNIT  to RS_SHTWI-SHTWI_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Lamination Sheet
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_XSHT( ) ).

*** Check Reduction on Length
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_RDLET( ) ).

*** Check Reduction on Width
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_RDWIT( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Lamination Sheet
    ME->CHECK_XSHT( IR_MESSAGE = IR_MESSAGE ).

*** Check Reduction on Length
    ME->CHECK_RDLET( IR_MESSAGE = IR_MESSAGE ).

*** Check Reduction on Width
    ME->CHECK_RDWIT( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_VALID_TBOAR.

*** Get valid Board Types via Attribute
    try.
        RF_VALID_TBOAR = ME->R_GATE->GET_ATTRI( IF_ATTID = C_ATTID_VALID_TBOAR )-ATTVA.
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method GET_WERKS.

    data: LR_PR_SPEC type ref to ZCL_VCXI_PXSS_PR_SPEC.

    ME->GET_PRVDR_SPEC( importing ER_PR_SPEC = LR_PR_SPEC ).
    check LR_PR_SPEC is bound.
    RF_WERKS = LR_PR_SPEC->GET_WERKS( ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

***   Event Forwarding for Communication
      when C_IEVNT_I_REQ_FORWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_NEXT~C_IEVNT_O_FORWARD_REQ ).

***   Event Backwarding for Communication
      when C_IEVNT_I_REQ_BACKWARD.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_COMM_NEXT~C_IEVNT_O_BACKWARD_REQ ).

      when C_IEVNT_I_REQ_LGLCD_CHANGED.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_LAMI~C_IEVNT_O_LGLCD_CHANGED ).

      when C_IEVNT_I_RECALC_SHTDIM.
        ME->HANDLE_RECALC_SHTDIM( ).
    endcase.

  endmethod.
  method HANDLE_RECALC_SHTDIM.

    data: LS_SHTLE type ZVCXI_P0SS_S_SHTLE,
          LS_SHTWI type ZVCXI_P0SS_S_SHTWI.


***--------------------------------------------------------------------------------------
*** Get Sheet Dimension (Outbound)
    ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_SHTDIM( importing ES_SHTLE = LS_SHTLE
                                                      ES_SHTWI = LS_SHTWI ).

*** Set Sheet Dimensions (Inbound)
    ME->SET_SHTWI( IS_SHTWI = LS_SHTWI ).
    ME->SET_SHTLE( IS_SHTLE = LS_SHTLE ).

  endmethod.
  method HANDLE_SET_DEFAULT.

    ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

  endmethod.
  method SET_CRBPX.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.
    data: LT_CSPLIT type ZVCXI_PXSS_TT_CSPLIT.


*** Buffer old Cost Split
    LT_CSPLIT = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->T_CSPLIT.

***------------------------------------------------------------------------------------------------
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CRBPX ).

    move IF_CRBPX   to LS_PARAM-STRNG.
    move IF_SETBY   to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_CRBPX_CHANGED ).
    endif.

***------------------------------------------------------------------------------------------------
*** Compare Cost Split and raise event if changed.
    if LT_CSPLIT ne ME->GET_CRBPX( )->T_CSPLIT.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_LAMI~C_IEVNT_O_CSPLIT_CHANGED ).
    endif.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).

    move IF_NOUPS     to LS_PARAM-ATFLV.
    move IF_SETBY     to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOUPS_CHANGED ).
    endif.

  endmethod.
  method SET_SHTLE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHTLE ).

    move IS_SHTLE-SHTLE     to LS_PARAM-ATFLV.
    move IS_SHTLE-SHTLE_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_LAMI~C_IEVNT_O_SHTDIM_CHANGED ).
    endif.

  endmethod.
  method SET_SHTWI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHTWI ).

    move IS_SHTWI-SHTWI     to LS_PARAM-ATFLV.
    move IS_SHTWI-SHTWI_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_PXSS_LAMI~C_IEVNT_O_SHTDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Get Parameter
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_CRBPX ).
    move LS_PARAM-STRNG to EF_CRBPX.
    move LS_PARAM-SETBY to EF_SETBY.

***--------------------------------------------------------------------------------------
*** Get Corrugator Backward Property Instance
    if RR_BL_CRBPROP is requested.
      RR_BL_CRBPROP = ZCL_VCXI_P1SS_BL_CRBPROP=>FACTORY( IF_CRBPX = EF_CRBPX ).
    endif.

  endmethod.
  method ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX.

    data: LR_PR_XSHT type ref to ZCL_VCXI_PXSS_PR_XSHT.


***--------------------------------------------------------------------------------------
*** Get Corrugator Forward Property (Inbound)
    RR_BL_CRFPROP = ZCL_VCXI_P1SS_BL_CRFPROP=>FACTORY( ).
    check RR_BL_CRFPROP is bound.

***--------------------------------------------------------------------------------------
    LR_PR_XSHT = ME->ZIF_VCXI_PXSS_LAMI~GET_PRVDR_XSHT( ).
    if LR_PR_XSHT is bound.
***   Set Caliper, Handling Dimensions, Product Hierarchy and Additional Weight
      RR_BL_CRFPROP->SET_CALIP(  IS_CALIP  = LR_PR_XSHT->GET_CALIP( )  ).
      RR_BL_CRFPROP->SET_HNDDIM( IS_HNDDIM = LR_PR_XSHT->GET_HNDDIM( ) ).
      RR_BL_CRFPROP->SET_PRODH(  IF_PRODH  = LR_PR_XSHT->GET_PRODH( )  ).
      RR_BL_CRFPROP->SET_ADDWT(  IS_ADDWT  = LR_PR_XSHT->GET_ADDWT( )  ).
    endif.

*** Use Determined Product Hierarchy
    RR_BL_CRFPROP->SET_PRODH( IF_PRODH = RR_BL_CRFPROP->DET_PRODH( IR_GATE = ME->R_GATE ) ).

***--------------------------------------------------------------------------------------
*** Get new Corrugator Forward Property XML
    if EF_CRFPX is requested.
      EF_CRFPX = RR_BL_CRFPROP->GET_CRFPX( ).
    endif.

  endmethod.
  method ZIF_VCXI_P1SS_COMM_NEXT~GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).
    move LS_PARAM-ATFLV to RF_NOUPS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_P1SS_COMM_NEXT~GET_SHTDIM.

    ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->GET_SHTDIM( importing ES_SHTLE = ES_SHTLE
                                                                    ES_SHTWI = ES_SHTWI ).

  endmethod.
  method ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT.

    data: LS_SURWT type ZVCXI_PXS_S_SURWT.
    data: LR_PR_XSHT     type ref to ZCL_VCXI_PXSS_PR_XSHT,
          LR_PR_MS_LGLUE type ref to ZCL_VCXI_PXSS_PR_MS_LGLUE.


***------------------------------------------------------------------------------------------------
*** Consider Sheet
    LR_PR_XSHT = ME->ZIF_VCXI_PXSS_LAMI~GET_PRVDR_XSHT( ).
    if LR_PR_XSHT is bound.
***   Summarize Surface Weight
      LS_SURWT = LR_PR_XSHT->GET_SURWT( ).
      if RS_SURWT is initial.
        RS_SURWT = LS_SURWT.
      else.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = RS_SURWT-SURWT
                                                            IF_CALCV_UOM_1 = RS_SURWT-SURWT_UOM
                                                            IF_CALCV_2     = LS_SURWT-SURWT
                                                            IF_CALCV_UOM_2 = LS_SURWT-SURWT_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                            IF_UOM         = RS_SURWT-SURWT_UOM
                                                  importing EF_CALCV       = RS_SURWT-SURWT
                                                            EF_CALCV_UOM   = RS_SURWT-SURWT_UOM ).
      endif.
    endif.

***------------------------------------------------------------------------------------------------
*** Consider Lamination Glue
    LR_PR_MS_LGLUE = ME->GET_PRVDR_MS_LGLUE( ).
    if LR_PR_MS_LGLUE is bound.
***   Summarize Surface Weight
      LS_SURWT = LR_PR_MS_LGLUE->GET_SURWT( ).
      if RS_SURWT is initial.
        RS_SURWT = LS_SURWT.
      else.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = RS_SURWT-SURWT
                                                            IF_CALCV_UOM_1 = RS_SURWT-SURWT_UOM
                                                            IF_CALCV_2     = LS_SURWT-SURWT
                                                            IF_CALCV_UOM_2 = LS_SURWT-SURWT_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                            IF_UOM         = RS_SURWT-SURWT_UOM
                                                  importing EF_CALCV       = RS_SURWT-SURWT
                                                            EF_CALCV_UOM   = RS_SURWT-SURWT_UOM ).
      endif.
    endif.

  endmethod.
  method ZIF_VCXI_PXSS_COMM_NEXT~DO_BACKWARD.

    data: LF_NOUPS type ZVCXI_PXS_NOUPS.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_COMM_PREV  type ref to ZIF_VCXI_P1SS_COMM_PREV,
          LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP.

***------------------------------------------------------------------------------------------------
*** Create new Corrugator Backward Property Instance
    LR_BL_CRBPROP = ZCL_VCXI_P1SS_BL_CRBPROP=>FACTORY( ).

***------------------------------------------------------------------------------------------------
*** Process all provided Gates
    loop at IT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_COMM_PREV.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_COMM_PREV.
      endtry.
      check LR_COMM_PREV is bound.

***   Get Number of Ups
      LF_NOUPS = LR_COMM_PREV->GET_NOUPS( ).

***   Combine Corrugator Backward Property
      LR_BL_CRBPROP->MERGE( IR_BL_CRBPROP = LR_COMM_PREV->GET_CRBPX( ) ).
    endloop.

*** Backward Number of Ups
    ME->SET_NOUPS( IF_NOUPS = LF_NOUPS ).

*** Backward Corrugator Backward Property XML
    ME->SET_CRBPX( IF_CRBPX = LR_BL_CRBPROP->GET_CRBPX( ) ).

  endmethod.
  method ZIF_VCXI_PXSS_FDI~GET_DATA.

    field-symbols: <S_FDI_LAMI> type ZVCXI_PXSS_S_FDI_LAMI.


***--------------------------------------------------------------------------------------
*** Create Data Reference
    create data RR_DATA type ZVCXI_PXSS_S_FDI_LAMI.
    assign RR_DATA->* to <S_FDI_LAMI>.


***--------------------------------------------------------------------------------------
*** Description of Lamination
    <S_FDI_LAMI>-DESCR_LAMI = ME->R_GATE->GET_DESCR( ).

  endmethod.
  method ZIF_VCXI_PXSS_FDI~SET_DATA.
  endmethod.
  method ZIF_VCXI_PXSS_LAMI~GET_CSPLIT.

    RT_CSPLIT = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->T_CSPLIT.

  endmethod.
  method ZIF_VCXI_PXSS_LAMI~GET_LGLCD.

    data: LR_PR_BOARD type ref to ZCL_VCXI_P1SS_PR_BOARD.

***----------------------------------------------------------------------------
*** Get Production Board to determine Flute
    LR_PR_BOARD = ME->GET_PRVDR_BOARD( IF_MBOAR = ZCL_VCXI_P1SS_PR_BOARD=>F_MBOAR_P ).
    check LR_PR_BOARD is bound.

*** Return Flute as Consumption Driver
    RF_LGLCD = LR_PR_BOARD->GET_FLUTE( ).

  endmethod.
  method ZIF_VCXI_PXSS_LAMI~GET_NOUPS.

*** Get Number of Ups (Outbound)
    RF_NOUPS = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_NOUPS( ).

  endmethod.
  method ZIF_VCXI_PXSS_LAMI~GET_PRVDR_XSHT.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_XSHT.

***------------------------------------------------------------------------------------------------
*** Find Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XSHT=>C_IPRVT_PX_XSHT
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_XSHT.

  endmethod.
  method ZIF_VCXI_PXSS_LAMI~GET_SHTDIM.

    ES_SHTWI = ME->GET_SHTWI( ).
    ES_SHTLE = ME->GET_SHTLE( ).

  endmethod.
  method ZIF_VCXI_PXSS_LTEXT~GET_LTEXT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_PXSS_LTEXT~C_PARID_LTEXT ).
    move LS_PARAM-STRNG to RF_LTEXT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_PXSS_LTEXT~SET_LTEXT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_PXSS_LTEXT~C_PARID_LTEXT ).

    move IF_LTEXT   to LS_PARAM-STRNG.
    move IF_SETBY   to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE,
          LT_GATE type /VCXI/VKSR_TT_GATE.


*** Ensure Gate has not been added already
    check CR_NETGRAPH_JSON->GET_NODE_KEY_BY_OBJECT( ME->R_GATE ) is initial.

*** Get Attribute Data
    data(LR_PR_BOARD) = ME->GET_PRVDR_BOARD( IF_MBOAR = ZCL_VCXI_P1SS_PR_BOARD=>F_MBOAR_P ).
    if LR_PR_BOARD is bound.
      CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE = LR_PR_BOARD->GET_BOARD( )      "Board ID
                                  changing  CT_ATTR  = LT_ATTR ).
      CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE = LR_PR_BOARD->GET_FLUTE( )      "Flute
                                  changing  CT_ATTR  = LT_ATTR ).
      data(LS_CALIP) = LR_PR_BOARD->GET_CALIP( ).
      CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE = LS_CALIP-CALIP
                                            IF_UOM   = LS_CALIP-CALIP_UOM
                                  changing  CT_ATTR  = LT_ATTR ).
    endif.

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE     = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR     = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON      = 'sap-icon://combine'
                                                    IF_STATUS    = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY = IF_GROUP_KEY
                                                    IT_ATTR      = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

***------------------------------------------------------------------------------------------------
*** Find Provider for X-Sheets
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_XSHT=>C_IPRVT_PX_XSHT
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      if LR_GATE->R_CLSPR is instance of ZIF_VCXI_XCS_NGREP.
        cast ZIF_VCXI_XCS_NGREP( LR_GATE->R_CLSPR )->FILL( exporting IF_GROUP_KEY     = IF_GROUP_KEY
                                                           changing  CR_NETGRAPH_JSON = CR_NETGRAPH_JSON ).
      endif.
    endloop.

  endmethod.
