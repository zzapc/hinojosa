
class ZCL_VCXI_PXSS_UI_MS_CORE definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_CORE_VIS type ZVCXI_PXSS_S_MS_CORE_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_MS_CORE type ref to ZCL_VCXI_PXSS_PR_MS_CORE .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_UI_MS_CORE definition
class ZCL_VCXI_PXSS_UI_MS_CORE implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_MS_CORE_BIND'
      exporting
        IR_UI_MS_CORE = ME
      importing
        ES_DYNP       = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_CORE.

      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize VIS
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_MS_CORE_VIS  type ZVCXI_PXSS_S_MS_CORE_VIS.


    check ME->R_PR_MS_CORE is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_MS_CORE_VIS.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_MS_CORE_VIS-MATNR ne LS_MS_CORE_VIS-MATNR.
      ME->R_PR_MS_CORE->SET_MATNR( IF_MATNR = LS_MS_CORE_VIS-MATNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Rolls/Core
    if ME->S_MS_CORE_VIS-RLPCR ne LS_MS_CORE_VIS-RLPCR.
      ME->R_PR_MS_CORE->SET_RLPCR( IF_RLPCR = LS_MS_CORE_VIS-RLPCR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Margin
    if ME->S_MS_CORE_VIS-S_CRMAR ne LS_MS_CORE_VIS-S_CRMAR.
      ME->R_PR_MS_CORE->SET_CRMAR( IS_CRMAR = LS_MS_CORE_VIS-S_CRMAR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Target Core Length
    if ME->S_MS_CORE_VIS-S_CLETA ne LS_MS_CORE_VIS-S_CLETA.
      ME->R_PR_MS_CORE->SET_CLETA( IS_CLETA = LS_MS_CORE_VIS-S_CLETA
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
    endif.

  endmethod.
  method INIT_VIS.

    free: ME->S_MS_CORE_VIS.
    check ME->R_PR_MS_CORE is bound.

***--------------------------------------------------------------------------------------
*** Material
    move ME->R_PR_MS_CORE->GET_MATNR( )       to ME->S_MS_CORE_VIS-MATNR.
    move ME->R_PR_MS_CORE->GET_MATNR_DESCR( ) to ME->S_MS_CORE_VIS-MATNR_DESCR.

***--------------------------------------------------------------------------------------
*** Get Core Information
    ME->S_MS_CORE_VIS-S_CRDII = ME->R_PR_MS_CORE->GET_CRDII( ).
    ME->S_MS_CORE_VIS-S_CRLEN = ME->R_PR_MS_CORE->GET_CRLEN( ).
    ME->S_MS_CORE_VIS-S_CRWTH = ME->R_PR_MS_CORE->GET_CRWTH( ).
    ME->S_MS_CORE_VIS-S_CRWGT = ME->R_PR_MS_CORE->GET_CRWGT( ).
    ME->S_MS_CORE_VIS-RLPCR   = ME->R_PR_MS_CORE->GET_RLPCR( ).
    ME->S_MS_CORE_VIS-S_CRMAR = ME->R_PR_MS_CORE->GET_CRMAR( ).
    ME->S_MS_CORE_VIS-S_CLETA = ME->R_PR_MS_CORE->GET_CLETA( ).

  endmethod.
