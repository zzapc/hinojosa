
class ZCL_VCXI_P0SSC_GRID_PTYPE definition
  public
  inheriting from ZCL_VCXI_P0SSC_GRID
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_CUSTOMIZING type ref to OBJECT
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_PTYPE_T,
                  PTYPE       type ZVCXI_P0S_PTYPE,
                  PTYPE_DESCR type /VCXI/CKX_DESCR,
         end of   YS_PTYPE_T .
  types:
    YT_PTYPE_T type standard table of YS_PTYPE_T with default key .

  constants C_FUNC_ADD type UI_FUNC value 'ADD'. "#EC NOTEXT
  constants C_FUNC_DEL type UI_FUNC value 'DELETE'. "#EC NOTEXT
  data T_PTYPE_T type YT_PTYPE_T .
  data R_PRSTY type ref to ZCL_VCXI_P0SSC_PRSTY .

  methods ADD_PTYPE
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_PTYPE
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHECK_SEL_DELETE
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods DELETE_PTYPE
    importing
      !IT_PRSTY_PTYPE type ZVCXI_P0SSC_TT_PRSTY_PTYPE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_USER_COMMAND
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SSC_GRID_PTYPE definition
class ZCL_VCXI_P0SSC_GRID_PTYPE implementation.
method ADD_PTYPE.

  data:  LS_RETURN       type          DDSHRETVAL,
         LS_PRSTY_PTYPE  type          ZVCXI_P0SSC_S_PRSTY_PTYPE.
  data:  LT_RETURN       type table of DDSHRETVAL.

  call function 'F4IF_FIELD_VALUE_REQUEST'
    exporting
      TABNAME           = 'ZVCXI_P0S_TC203'
      FIELDNAME         = 'PTYPE'
      MULTIPLE_CHOICE   = 'X'
    tables
      RETURN_TAB        = LT_RETURN
    exceptions
      FIELD_NOT_FOUND   = 1
      NO_HELP_FOR_FIELD = 2
      INCONSISTENT_HELP = 3
      NO_VALUES_FOUND   = 4
      others            = 5.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

*** Process Result
  loop at LT_RETURN into LS_RETURN.

    move-corresponding ME->R_PRSTY->S_PRSTY to LS_PRSTY_PTYPE.
    move               LS_RETURN-FIELDVAL   to LS_PRSTY_PTYPE-PTYPE.

*** Add Product Type
    ME->R_PRSTY->ADD_PTYPE( IS_PRSTY_PTYPE = LS_PRSTY_PTYPE ).

  endloop.


endmethod.
method CHANGE_STYLE_PTYPE.

*** Set Product Type = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PTYPE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Product Type Description = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PTYPE_DESCR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).
endmethod.
method CHECK_SEL_DELETE.

  data: LT_CELL type LVC_T_CELL,
        LT_ROW  type LVC_T_ROW.

  ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
  ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

*** Delete is only available if Cells are selected
  if lines( LT_CELL ) gt 0 or
     lines( LT_ROW )  gt 0.
    move ABAP_TRUE to RF_OKAY.
  else.
    move ABAP_FALSE to RF_OKAY.
  endif.

endmethod.
method CONSTRUCTOR.

  data:          LT_TC100T   type standard table of ZVCXI_P0S_TC100T.
  data:          LS_TC100T   type                   ZVCXI_P0S_TC100T.
  field-symbols: <S_PTYPE_T> type                   YS_PTYPE_T.

  SUPER->CONSTRUCTOR( IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IR_CUSTOMIZING    = IR_CUSTOMIZING ).

*** Try to Assign Customizing Reference
  try.
      move IR_CUSTOMIZING ?to R_PRSTY.
    catch CX_SY_MOVE_CAST_ERROR.
***   Product Style Customizing Reference can't be assigned.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_P0SSC'
          IF_MSGNO = '101' ).
  endtry.

  move 'Product Type'(001) to ME->F_DESCR.

*** Get Product Type Descriptions*** Return Product Type description
  select * from ZVCXI_P0S_TC100T
           into table LT_TC100T
          where LANGU eq SY-LANGU.

  check LT_TC100T is not initial.
  loop at LT_TC100T into LS_TC100T.
    append initial line to ME->T_PTYPE_T assigning <S_PTYPE_T>.
    <S_PTYPE_T>-PTYPE       = LS_TC100T-PTYPE.
    <S_PTYPE_T>-PTYPE_DESCR = LS_TC100T-DESCR.
  endloop.

endmethod.
method DELETE_PTYPE.

  data:  LS_PRSTY_PTYPE  type          ZVCXI_P0SSC_S_PRSTY_PTYPE.

*** Process Result
  loop at IT_PRSTY_PTYPE into LS_PRSTY_PTYPE.

*** Delete Product Type
    ME->R_PRSTY->DELETE_PTYPE( IS_PRSTY_PTYPE = LS_PRSTY_PTYPE ).

  endloop.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'TPRST' or 'PRSTY' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_PRSTY_PTYPE       type          ZVCXI_P0SSC_S_PRSTY_PTYPE,
                 LS_PRSTY_PTYPE_GRID  type          ZVCXI_P0SSC_S_PRSTY_PTYPE_GRID,
                 LS_PTYPE_T           type          YS_PTYPE_T.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get Product Style - Product Type Entries
  loop at ME->R_PRSTY->T_PRSTY_PTYPE into LS_PRSTY_PTYPE.
    clear: LS_PRSTY_PTYPE_GRID.

    move-corresponding LS_PRSTY_PTYPE to LS_PRSTY_PTYPE_GRID.

*** --------------------------------------------------------------------------------------------
*** Set Description
    read table ME->T_PTYPE_T
      into LS_PTYPE_T
      with key PTYPE = LS_PRSTY_PTYPE-PTYPE.

    if SY-SUBRC = 0.
      move LS_PTYPE_T-PTYPE_DESCR to LS_PRSTY_PTYPE_GRID-PTYPE_DESCR.
    endif.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
    ME->CHANGE_STYLE_PTYPE( changing CT_STYL = LS_PRSTY_PTYPE_GRID-T_STYL ).

*** --------------------------------------------------------------------------------------------
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.
    move-corresponding LS_PRSTY_PTYPE_GRID to <S_DATA>.

  endloop.

endmethod.
method GET_LAYOUT.

  RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Toolbar to Activ
  move ABAP_FALSE to RS_LAYOUT-NO_TOOLBAR.
  move 'A'        to RS_LAYOUT-SEL_MODE.

endmethod.
method HANDLE_TOOLBAR.

  data:  LS_TOOLBAR      type        STB_BUTTON.
  data:  LF_DISABLED     type        ABAP_BOOL.
  data:  LR_CX_CKX       type ref to /VCXI/CX_CKX.

  try.

      if ME->R_PRSTY->IS_LOCKED( ) eq ABAP_FALSE.
        move ABAP_TRUE to LF_DISABLED.
      endif.

***----------------------------------------------------------------------------
***   Insert Toolbar elements Add and Delete
      clear LS_TOOLBAR.
      move C_FUNC_ADD                 to LS_TOOLBAR-FUNCTION.
      move 'Add'(002)                 to LS_TOOLBAR-TEXT.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_INSERT_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

      clear LS_TOOLBAR.
      move C_FUNC_DEL                 to LS_TOOLBAR-FUNCTION.
      move 'Delete'(003)              to LS_TOOLBAR-TEXT.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_DELETE_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_USER_COMMAND.

  data:          LS_CELL         type          LVC_S_CELL,
                 LS_ROW          type          LVC_S_ROW.
  data:          LT_CELL         type          LVC_T_CELL,
                 LT_ROW          type          LVC_T_ROW,
                 LT_PRSTY_PTYPE  type          ZVCXI_P0SSC_TT_PRSTY_PTYPE.
  data:          LR_CX_CKX       type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>        type standard table,
                 <S_PRSTY_PTYPE> type          ZVCXI_P0SSC_S_PRSTY_PTYPE,
                 <S_DATA>        type          any.

  try.

***   Get Product Type Data
      assign ME->R_DATA->* to <T_DATA>.
      free: <T_DATA>.
      ME->GET_GRID_DATA( IR_DATA = ME->R_DATA ).

      ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
      ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

      case E_UCOMM.

        when C_FUNC_ADD.
***     Add new Product Type
          ME->ADD_PTYPE( ).

        when C_FUNC_DEL.
***     Delete Product Types
          if ME->CHECK_SEL_DELETE( ) eq ABAP_FALSE.
***         No Row Selected. Please Select all Row's you wanna Delete.
            raise exception type /VCXI/CX_CKX
             exporting
                F_MSGTY = 'E'
                F_MSGID = 'ZVCXI_P0SSC'
                F_MSGNO = '002'.
          endif.

***       Get Selected Product Type's
          loop at LT_CELL into LS_CELL.
            read table <T_DATA> assigning <S_DATA> index LS_CELL-ROW_ID-INDEX.
            check SY-SUBRC = 0.

            append initial line to LT_PRSTY_PTYPE assigning <S_PRSTY_PTYPE>.
            move-corresponding <S_DATA> to <S_PRSTY_PTYPE>.
          endloop.

          loop at LT_ROW into LS_ROW.
            read table <T_DATA> assigning <S_DATA> index LS_ROW-INDEX.
            check SY-SUBRC = 0.

            append initial line to LT_PRSTY_PTYPE assigning <S_PRSTY_PTYPE>.
            move-corresponding <S_DATA> to <S_PRSTY_PTYPE>.
          endloop.

***       Delete Selected Product Type's
          ME->DELETE_PTYPE( IT_PRSTY_PTYPE = LT_PRSTY_PTYPE ).

      endcase.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

  ME->F_REFRESH_REQ = ABAP_TRUE.

endmethod.
method SET_EVENT.

  SUPER->SET_EVENT( ).

*** Add Event for Double Click, UserCommand and Toolbar
  set handler ME->HANDLE_USER_COMMAND for ME->R_GRID.
  set handler ME->HANDLE_TOOLBAR      for ME->R_GRID.

endmethod.
