
class ZCL_VCXI_XCSU_POPUP_PALOP definition
  public
  create protected .

public section.

  data S_PALOP_VIS type ZVCXI_XCSU_S_PALOP_VIS read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IR_BL_PALOP type ref to ZCL_VCXI_XCSU_BL_PALOP
      !IF_LOCKED type /VCXI/CKX_LOCKED
    returning
      value(RF_COPTI) type ZVCXI_XCSU_COPTI
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  constants C_UC_DETAIL type SYUCOMM value 'DETAIL'. "#EC NOTEXT
  constants C_UC_EXECUTE type SYUCOMM value '0100UC_EXECUTE'. "#EC NOTEXT
  constants C_UC_OKAY type SYUCOMM value 'OKAY'. "#EC NOTEXT
  data F_COPTI type ZVCXI_XCSU_COPTI .
  data F_LOCKED type /VCXI/CKX_LOCKED .
  data R_BL_PALOP type ref to ZCL_VCXI_XCSU_BL_PALOP .
  data R_GRID_PALOP_DIMEN type ref to ZCL_VCXI_XCSU_GRID_PALOP_DIMEN .
  data R_GRID_PALOP_LIMIT type ref to ZCL_VCXI_XCSU_GRID_PALOP_LIMIT .
  data R_GRID_PALOP_OPTI type ref to ZCL_VCXI_XCSU_GRID_PALOP_OPTI .
  data R_GRID_PALOP_RES type ref to ZCL_VCXI_XCSU_GRID_PALOP_RES .

  methods CONSTRUCTOR
    importing
      !IR_BL_PALOP type ref to ZCL_VCXI_XCSU_BL_PALOP
      !IF_LOCKED type /VCXI/CKX_LOCKED
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RES_DOUBLE_CLICK
    for event DOUBLE_CLICK of ZCL_VCXI_XCSU_GRID_PALOP_RES .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DETAIL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXECUTE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSU_POPUP_PALOP definition
class ZCL_VCXI_XCSU_POPUP_PALOP implementation.
method CONSTRUCTOR.

  move IR_BL_PALOP to ME->R_BL_PALOP.

  if ME->R_BL_PALOP is not bound.
*** No BL - Pallet Optimization available.
    raise exception type /VCXI/CX_CKX
      exporting
        F_MSGTY = 'W'
        F_MSGID = 'ZVCXI_XCSU'
        F_MSGNO = '623'.
  endif.

  move IF_LOCKED to ME->F_LOCKED.

endmethod.
method DO_FREE.

*** Free Grid of Optimizaiton Value
  if ME->R_GRID_PALOP_OPTI is bound.
    ME->R_GRID_PALOP_OPTI->DO_FREE( ).
    clear ME->R_GRID_PALOP_OPTI.
  endif.

*** Free Grid of Dimension
  if ME->R_GRID_PALOP_DIMEN is bound.
    ME->R_GRID_PALOP_DIMEN->DO_FREE( ).
    clear ME->R_GRID_PALOP_DIMEN.
  endif.

*** Free Grid of Limit
  if ME->R_GRID_PALOP_LIMIT is bound.
    ME->R_GRID_PALOP_LIMIT->DO_FREE( ).
    clear ME->R_GRID_PALOP_LIMIT.
  endif.

*** Free Grid of Optimizaiton Result
  if ME->R_GRID_PALOP_RES is bound.
    ME->R_GRID_PALOP_RES->DO_FREE( ).
    clear ME->R_GRID_PALOP_RES.
  endif.

endmethod.
method DO_PBO.

  clear: ME->S_PALOP_VIS.

***------------------------------------------------------------------
*** Set Packaging Code
  move ME->R_BL_PALOP->F_CPACK   to ME->S_PALOP_VIS-CPACK.
*** Get Optimization Counter
  move ME->R_BL_PALOP->F_COPTI   to ME->S_PALOP_VIS-COPTI.
  move ME->R_BL_PALOP->F_COPTI_G to ME->S_PALOP_VIS-COPTI_G.
  move ME->R_BL_PALOP->F_COPTI_Y to ME->S_PALOP_VIS-COPTI_Y.
  move ME->R_BL_PALOP->F_COPTI_R to ME->S_PALOP_VIS-COPTI_R.
  move ICON_GREEN_LIGHT          to ME->S_PALOP_VIS-STATU_GREEN.
  move ICON_YELLOW_LIGHT         to ME->S_PALOP_VIS-STATU_YELLOW.
  move ICON_RED_LIGHT            to ME->S_PALOP_VIS-STATU_RED.

***------------------------------------------------------------------
*** Set PF-Status
  if ME->F_LOCKED eq ABAP_TRUE.
    set pf-status '0100_CHANGE' of program 'SAPLZVCXI_XCSU_POPUP_PALOP'.
  else.
    set pf-status '0100_DISPLAY' of program 'SAPLZVCXI_XCSU_POPUP_PALOP'.
  endif.

***------------------------------------------------------------------
*** Optimization Values
  if ME->R_GRID_PALOP_OPTI is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_OPTI
      exporting
        IF_TABNAME        = 'ZVCXI_XCSU_S_PALOP_OPTI_GRID'
        IF_CONTAINER_NAME = '0100CC_PALOP_OPTI'
        IR_BL_PALOP       = ME->R_BL_PALOP.
  endif.
*** Refresh
  ME->R_GRID_PALOP_OPTI->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Ingoing Dimensions
  if ME->R_GRID_PALOP_DIMEN is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_DIMEN
      exporting
        IF_CONTAINER_NAME = '0100CC_PALOP_DIMEN_IN'
        IT_DIMEN          = ME->R_BL_PALOP->T_DIMEN_IN.
  endif.
** Refresh
  ME->R_GRID_PALOP_DIMEN->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Limits of Unit
  if ME->R_GRID_PALOP_LIMIT is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_LIMIT
      exporting
        IF_CONTAINER_NAME = '0100CC_PALOP_LIMIT_UNIT'
        IT_LIMIT          = ME->R_BL_PALOP->T_LIMIT_UNIT.
  endif.
*** Refresh
  ME->R_GRID_PALOP_LIMIT->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Optimization Result
  if ME->R_GRID_PALOP_RES is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_RES
      exporting
        IF_TABNAME        = 'ZVCXI_XCSU_S_PALOP_RES_GRID'
        IF_CONTAINER_NAME = '0100CC_PALOP_RES'
        IR_BL_PALOP       = ME->R_BL_PALOP.
    if ME->F_LOCKED eq ABAP_TRUE.
      set handler ME->HANDLE_RES_DOUBLE_CLICK for ME->R_GRID_PALOP_RES.
    endif.
  endif.
** Refresh
  ME->R_GRID_PALOP_RES->REFRESH_GRID( ).

endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when C_UC_OKAY.
      ME->HANDLE_UC_OKAY( ).

    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).

    when C_UC_DETAIL.
      ME->HANDLE_UC_DETAIL( ).

    when C_UC_EXECUTE.
      ME->HANDLE_UC_EXECUTE( ).

  endcase.

endmethod.
method HANDLE_RES_DOUBLE_CLICK.

  data:  LR_CX_CKX   type ref to /VCXI/CX_CKX.

  try.
      ME->HANDLE_UC_OKAY( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_UC_CANCEL.

*** Leave Popup
  leave to screen 0.

endmethod.
method HANDLE_UC_DETAIL.

  data:  LF_COPTI     type        ZVCXI_XCSU_COPTI.
  data:  LS_PALOP_RES type        ZVCXI_XCSU_S_PALOP_RES.
  data:  LR_CX_CKX    type ref to /VCXI/CX_CKX.

  try.

***------------------------------------------------------------------
***   Save selected Result
      LF_COPTI = ME->R_GRID_PALOP_RES->GET_COPTI_SEL( ).

      if LF_COPTI is initial.
***     Please select one of the Results.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'W'
            F_MSGID = 'ZVCXI_XCSU'
            F_MSGNO = '622'.
      endif.

      read table ME->R_BL_PALOP->T_RES into LS_PALOP_RES
                                       with key COPTI = LF_COPTI.

***------------------------------------------------------------------
***   Open Details of Selected Record
      ZCL_VCXI_XCSU_POPUP_PALOP_D=>START( IS_PALOP_RES = LS_PALOP_RES ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'W' ).
  endtry.

endmethod.
method HANDLE_UC_EXECUTE.

  data: LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

***------------------------------------------------------------------
***   Start Optimization
      ME->R_BL_PALOP->EXE_PALOP( ).
      ME->R_GRID_PALOP_RES->F_REFRESH_REQ = ABAP_TRUE.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'W' ).
  endtry.

endmethod.
method HANDLE_UC_OKAY.

  data:  LF_COPTI  type        ZVCXI_XCSU_COPTI.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

***------------------------------------------------------------------
***   Save selected Result
      LF_COPTI = ME->F_COPTI = ME->R_GRID_PALOP_RES->GET_COPTI_SEL( ).

      if LF_COPTI is initial.
***     Please select one of the Results.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'W'
            F_MSGID = 'ZVCXI_XCSU'
            F_MSGNO = '622'.
      endif.

***------------------------------------------------------------------
***   Leave Popup
      leave to screen 0.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'W' ).
  endtry.

endmethod.
method START.

  data:  LR_POPUP_PALOP type ref to ZCL_VCXI_XCSU_POPUP_PALOP.

*** Create Instance
  create object LR_POPUP_PALOP
    exporting
      IR_BL_PALOP = IR_BL_PALOP
      IF_LOCKED   = IF_LOCKED.

*** Call Popup
  call function 'ZVCXI_XCSU_POPUP_PALOP_START'
    exporting
      IR_POPUP_PALOP = LR_POPUP_PALOP.

*** Return selection
  RF_COPTI = LR_POPUP_PALOP->F_COPTI.

*** Free the Popup
  LR_POPUP_PALOP->DO_FREE( ).

endmethod.
