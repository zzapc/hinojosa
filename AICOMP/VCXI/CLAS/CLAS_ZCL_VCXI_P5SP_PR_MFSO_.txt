
class ZCL_VCXI_P5SP_PR_MFSO definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MFSO
  create public .

public section.

  interfaces ZIF_VCXI_P5SP_RLDIM .
  interfaces ZIF_VCXI_P5SP_MFO .
  interfaces ZIF_VCXI_P5SP_UMREZ_UMREN .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_PXS_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_RLETA
    importing
      !IS_RLETA type ZVCXI_PXS_S_RLETA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SURWT
    importing
      !IS_SURWT type ZVCXI_PXS_S_SURWT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_WEBWI
    importing
      !IS_WEBWI type ZVCXI_PXS_S_WEBWI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods ZIF_VCXI_XCSP_MFSO~DO_BACKWARD
    redefinition .
protected section.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
  methods SET_UMREZ_UMREN
    importing
      !IF_UMREZ type CP_UMREZ
      !IF_UMREN type CP_UMREN
    raising
      /VCXI/CX_CKX .

  methods CALC_MFRAT
    redefinition .
  methods CONV_TO_CONSU
    redefinition .
private section.
endclass. "ZCL_VCXI_P5SP_PR_MFSO definition
class ZCL_VCXI_P5SP_PR_MFSO implementation.
method CALC_MFRAT.

  data: LF_NOUPS type        ZVCXI_P0SS_NOUPS,
        LF_ICSPA type        ZVCXI_XCSP_ICSPA,
        LF_COMPF type        ZVCXI_XCSP_COMPF.
  data: LT_GATE_MFO   type        /VCXI/VKSR_TT_GATE.
  data: LR_PR_MFSI_L type ref to ZCL_VCXI_P5SP_PR_MFSI_L,
        LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
        LR_MFSO      type ref to ZIF_VCXI_XCSP_MFSO.


*** Initialize Material Flow Manager if neede
  if ME->R_PR_MFMGR is not bound.
    ME->HANDLE_INIT_MFMGR( ).
  endif.
  check ME->R_PR_MFMGR is bound.

***----------------------------------------------------------------------------
*** Super
  RF_MFRAT = SUPER->CALC_MFRAT( IR_MFSI  = IR_MFSI ).

*** Cast to MF Class
  try.
      move IR_MFSI ?to LR_PR_MFSI_L.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.
  check LR_PR_MFSI_L is bound.

***----------------------------------------------------------------------------
*** Consider Ups for SFGs
  if LR_PR_MFSI_L->ZIF_VCXI_XCSP_MFSI~GET_NEXTL( ) eq ABAP_TRUE.
    LF_NOUPS = ME->ZIF_VCXI_P5SP_RLDIM~GET_NOUPS( ).

*** Get all MFSOs and delete those are disabled by Cost Split
    move ME->R_PR_MFMGR->ZIF_VCXI_XCSP_MFMGR~GET_MFO( ) to LT_GATE_MFO.
    loop at LT_GATE_MFO into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_MFSO.
      if LR_MFSO->IS_ACTIVE_BY_CSPLIT( ) eq 2.
        delete LT_GATE_MFO.
      endif.
    endloop.

*** Adjust by Cost Split Ratio
    if LINES( LT_GATE_MFO ) eq 1.
      LR_PR_MFSI_L->GET_CSPLIT( importing EF_ICSPA = LF_ICSPA
                                          EF_COMPF = LF_COMPF ).
      if LF_ICSPA is not initial.
        LF_NOUPS = LF_NOUPS * LF_COMPF.
      endif.
    endif.

    RF_MFRAT = LF_NOUPS.
  endif.

endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Pramameter dimensions
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method CONV_TO_CONSU.

    data: LF_NOUPS type ZVCXI_P0SS_NOUPS.
    data: LS_WEBWI     type ZVCXI_PXS_S_WEBWI.
    data: LT_RLDIM_MFO type ZVCXI_P5SP_TT_RLDIM.


*** Adjust Consumption based on Quantity Factor
    SUPER->CONV_TO_CONSU( exporting IR_MFSI  = IR_MFSI
                          changing  CS_CONSU = CS_CONSU ).

*** Adjust Dimension
    case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = CS_CONSU-CONSU_UOM ).
***------------------------------------------------------------------------------------------------
      when ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
***     1:1 Forward

***------------------------------------------------------------------------------------------------
***   Convert from Area
      when ZCL_VCXI_P5SP_SERVICE=>F_DIMID_AREA.
        case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
          when ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
***         Area to Length
            CS_CONSU = corresponding #( ZCL_VCXI_P5SP_SERVICE=>CONV_A_TO_L( IS_CALCV = value #( CALCV     = CS_CONSU-CONSU
                                                                                                CALCV_UOM = CS_CONSU-CONSU_UOM )
                                                                            IS_RLDIM = value #( S_WEBWI = ME->ZIF_VCXI_P5SP_RLDIM~GET_WEBWI( ) ) )
                                        mapping CONSU     = CALCV
                                                CONSU_UOM = CALCV_UOM ).
          when 'AAAADL'.  "PC
***         Area to PC
            CS_CONSU = corresponding #( ZCL_VCXI_P5SP_SERVICE=>CONV_A_TO_P( IS_CALCV = value #( CALCV     = CS_CONSU-CONSU
                                                                                                CALCV_UOM = CS_CONSU-CONSU_UOM )
                                                                            IS_RLDIM = value #( S_WEBWI = ME->ZIF_VCXI_P5SP_RLDIM~GET_WEBWI( )
                                                                                                S_RLETA = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLETA( ) ) )
                                        mapping CONSU     = CALCV
                                                CONSU_UOM = CALCV_UOM ).
        endcase.

***------------------------------------------------------------------------------------------------
***   Convert from Length
      when ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
        case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
          when 'AAAADL'.  "PC
***         Length to PC
            CS_CONSU = corresponding #( ZCL_VCXI_P5SP_SERVICE=>CONV_L_TO_P( IS_CALCV = value #( CALCV     = CS_CONSU-CONSU
                                                                                                CALCV_UOM = CS_CONSU-CONSU_UOM )
                                                                            IS_RLDIM = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLDIM( ) )
                                        mapping CONSU     = CALCV
                                                CONSU_UOM = CALCV_UOM ).
        endcase.

***------------------------------------------------------------------------------------------------
***   Convert from PC
      when 'AAAADL'.
        case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
          when  ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
***         PC to Length
            CS_CONSU = corresponding #( ZCL_VCXI_P5SP_SERVICE=>CONV_P_TO_L( IS_CALCV = value #( CALCV     = CS_CONSU-CONSU
                                                                                                CALCV_UOM = CS_CONSU-CONSU_UOM )
                                                                            IS_RLDIM = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLDIM( ) )
                                        mapping CONSU     = CALCV
                                                CONSU_UOM = CALCV_UOM ).
        endcase.
    endcase.

***------------------------------------------------------------------------------------------------
*** Last MFSO if MFSI is Organizer
    if ME->F_MFSI_ORGLC eq ABAP_TRUE.
      LF_NOUPS = ZIF_VCXI_P5SP_RLDIM~GET_NOUPS( ).
      check LF_NOUPS ne 0.
      CS_CONSU-CONSU = CS_CONSU-CONSU / LF_NOUPS.
    endif.

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.


    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

*** Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop..

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_NOUPS ).

    move IF_NOUPS                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method SET_RLETA.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_RLETA ).

    move IS_RLETA-RLETA                      to LS_PARAM-ATFLV.
    move IS_RLETA-RLETA_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method SET_SURWT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_SURWT ).

    move IS_SURWT-SURWT                      to LS_PARAM-ATFLV.
    move IS_SURWT-SURWT_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method SET_UMREZ_UMREN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


***------------------------------------------------------------------------------------------------
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREZ ).

    LS_PARAM-ATFLV = IF_UMREZ.
    LS_PARAM-SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_UMREZ_UMREN~C_IEVNT_O_UMREZ_UMREN_CHANGED ).
    endif.

***------------------------------------------------------------------------------------------------
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREN ).

    LS_PARAM-ATFLV = IF_UMREN.
    LS_PARAM-SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_UMREZ_UMREN~C_IEVNT_O_UMREZ_UMREN_CHANGED ).
    endif.

  endmethod.
  method SET_WEBWI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_WEBWI ).

    move IS_WEBWI-WEBWI                      to LS_PARAM-ATFLV.
    move IS_WEBWI-WEBWI_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P5SP_MFO~SET_RLDIM.

    ME->SET_WEBWI( IS_WEBWI = IS_RLDIM-S_WEBWI ).
    ME->SET_SURWT( IS_SURWT = IS_RLDIM-S_SURWT ).
    ME->SET_RLETA( IS_RLETA = IS_RLDIM-S_RLETA ).
    ME->SET_NOUPS( IF_NOUPS = IS_RLDIM-NOUPS ).
    ME->ZIF_VCXI_XCSP_MFO~SET_NOOUT( IF_NOOUT = IS_RLDIM-NOOUT ).

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_NOUPS ).
    RF_NOUPS = LS_PARAM-ATFLV.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_RLDIM.

    RS_RLDIM = value #( S_WEBWI = ME->ZIF_VCXI_P5SP_RLDIM~GET_WEBWI( )
                        S_SURWT = ME->ZIF_VCXI_P5SP_RLDIM~GET_SURWT( )
                        S_RLETA = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLETA( )
                        NOOUT   = ME->ZIF_VCXI_XCSP_MFO~GET_NOOUT( )
                        NOUPS   = ME->ZIF_VCXI_P5SP_RLDIM~GET_NOUPS( )
                      ).

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_RLETA.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_RLETA ).
    RS_RLETA-RLETA     = LS_PARAM-ATFLV.
    RS_RLETA-RLETA_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_SURWT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_SURWT ).
    RS_SURWT-SURWT     = LS_PARAM-ATFLV.
    RS_SURWT-SURWT_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_WEBWI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_WEBWI ).
    RS_WEBWI-WEBWI     = LS_PARAM-ATFLV.
    RS_WEBWI-WEBWI_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_UMREZ_UMREN~GET_UMREZ_UMREN.

    EF_UMREZ = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREZ )-ATFLV.
    EF_UMREN = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREN )-ATFLV.

  endmethod.
  method ZIF_VCXI_XCSP_MFSO~DO_BACKWARD.

    data: LF_UMREZ type UMREZ,
          LF_UMREN type UMREN.
    data: LS_CALCV_BASE type ZVCXI_XCS_S_CALCV,
          LS_CALCV_ALT  type ZVCXI_XCS_S_CALCV.


    SUPER->ZIF_VCXI_XCSP_MFSO~DO_BACKWARD( IR_MFSI = IR_MFSI ).


    if IR_MFSI is bound.
***   Determine UMREZ/UMREN by conversion of a fix Value
      LS_CALCV_BASE-CALCV     = 1000.
      LS_CALCV_BASE-CALCV_UOM = 'M2'.


***------------------------------------------------------------------------------------------------
      if IR_MFSI->GET_NEXTL( ) ne ABAP_TRUE and
         IR_MFSI is instance of ZIF_VCXI_P5SP_UMREZ_UMREN.
        cast ZIF_VCXI_P5SP_UMREZ_UMREN( IR_MFSI )->GET_UMREZ_UMREN( importing EF_UMREZ = LF_UMREZ
                                                                              EF_UMREN = LF_UMREN ).
        if LF_UMREZ ne 0.
          LS_CALCV_ALT-CALCV   = LS_CALCV_BASE-CALCV * LF_UMREN / LF_UMREZ.
        endif.
        LS_CALCV_ALT-CALCV_UOM = IR_MFSI->GET_CONSU( )-CONSU_UOM.

***     Adjust Dimension
        case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = LS_CALCV_ALT-CALCV_UOM ).
***       Convert from PC
          when 'AAAADL'.
            case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
              when  ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
***             PC to Length
                LS_CALCV_ALT = ZCL_VCXI_P5SP_SERVICE=>CONV_P_TO_L( IS_CALCV = LS_CALCV_ALT
                                                                   IS_RLDIM = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLDIM( ) ).
            endcase.
        endcase.

***------------------------------------------------------------------------------------------------
      else.
        case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
          when  ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
***         Area to Length
            LS_CALCV_ALT = ZCL_VCXI_P5SP_SERVICE=>CONV_A_TO_L( IS_CALCV = LS_CALCV_BASE
                                                               IS_RLDIM = value #( S_WEBWI = ME->ZIF_VCXI_P5SP_RLDIM~GET_WEBWI( ) ) ).
          when 'AAAADL'.  "PC
***         Area to Length
            LS_CALCV_ALT = ZCL_VCXI_P5SP_SERVICE=>CONV_A_TO_P( IS_CALCV = LS_CALCV_BASE
                                                               IS_RLDIM = value #( S_WEBWI = ME->ZIF_VCXI_P5SP_RLDIM~GET_WEBWI( )
                                                                                   S_RLETA = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLETA( ) ) ).
        endcase.
      endif.

***------------------------------------------------------------------------------------------------
***   Calculate new Numerator/Denominator
      ZCL_VCXI_XCS_SERVICE_UNIT=>CALC_UMREZ_UMREN( exporting IS_CALCV_BASE = LS_CALCV_BASE
                                                             IS_CALCV_ALT  = LS_CALCV_ALT
                                                   importing EF_UMREZ      = LF_UMREZ
                                                             EF_UMREN      = LF_UMREN ).
    endif.


    ME->SET_UMREZ_UMREN( IF_UMREZ = LF_UMREZ
                         IF_UMREN = LF_UMREN ).

  endmethod.
