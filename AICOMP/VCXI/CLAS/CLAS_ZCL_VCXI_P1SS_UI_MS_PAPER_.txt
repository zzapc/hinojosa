
class ZCL_VCXI_P1SS_UI_MS_PAPER definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_PAPER_VIS type ZVCXI_P1SS_S_MS_PAPER_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods UPDATE_BY_MS_PAPER_VIS
    importing
      !IS_MS_PAPER_VIS type ZVCXI_P1SS_S_MS_PAPER_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_MS_PAPER type ref to ZCL_VCXI_P1SS_PR_MS_PAPER .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_MS_PAPER definition
class ZCL_VCXI_P1SS_UI_MS_PAPER implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_MS_PAPER_BIND'
      exporting
        IR_UI_MS_PAPER = ME
      importing
        ES_DYNP        = ME->S_DYNP.

  endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_MS_PAPER.
    catch CX_SY_MOVE_CAST_ERROR.

***   UI ABAP Class doesn't work together with PR ABAP Class
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.

        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ) .
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          case SCREEN-GROUP1.
***         Substitution Flag
            when 'FSB'.
              if ME->R_PR_MS_PAPER->GET_SUBPA( ) eq ABAP_UNDEFINED.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
                move 0 to SCREEN-INPUT.
              endif.

***         Only during Substitution
            when 'SUB'.
              if ME->R_PR_MS_PAPER->GET_SUBPA( ) ne ABAP_TRUE.
                SCREEN-INPUT = 0.
              endif.

***         Only changeable if it is a Dummy Material
            when 'FPU'.
              if ME->R_PR_MS_PAPER->IS_DUMMY( ) eq ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

***         Only changeable if Purchase Info is set.
            when 'PUR'.
              if ME->R_PR_MS_PAPER->GET_PURCH( ) eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.

          case SCREEN-GROUP2.
***         Hide Price Fields
            when 'PRI'.
              if ME->R_PR_MS_PAPER->GET_PURCH( ) ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.

***       Check Locked Flag, set from External (Parent) element
          if ME->R_PR_MS_PAPER->GET_F_LOCKED( ) eq ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
method DO_PBO.

*** Initialize VIS Structure
  ME->INIT_VIS( ).

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_MS_PAPER.

endmethod.
  method INIT_VIS.

    free: ME->S_MS_PAPER_VIS.
    check ME->R_PR_MS_PAPER is bound.

    move ME->R_PR_MS_PAPER->GET_MATNR( )        to ME->S_MS_PAPER_VIS-BPMAT.
    move ME->R_PR_MS_PAPER->GET_MATNR_DESCR( )  to ME->S_MS_PAPER_VIS-BPMAT_DESCR.

    ME->S_MS_PAPER_VIS-BPAID   = ME->R_PR_MS_PAPER->GET_BPAID( importing EF_DESCR = ME->S_MS_PAPER_VIS-BPAID_DESCR ).
    ME->S_MS_PAPER_VIS-BPFAC   = ME->R_PR_MS_PAPER->GET_BPFAC( ).
    ME->S_MS_PAPER_VIS-S_BAWGT = ME->R_PR_MS_PAPER->GET_BAWGT( ).
    ME->S_MS_PAPER_VIS-S_BAWGP = ME->R_PR_MS_PAPER->GET_BAWGP( ).
    ME->S_MS_PAPER_VIS-S_CALIP = ME->R_PR_MS_PAPER->GET_CALIP( ).

    ME->S_MS_PAPER_VIS-SUBPA   = ME->R_PR_MS_PAPER->GET_SUBPA( ).

    ME->S_MS_PAPER_VIS-PURCH   = ME->R_PR_MS_PAPER->GET_PURCH( ).
    ME->S_MS_PAPER_VIS-FPTOS   = ME->R_PR_MS_PAPER->GET_FPTOS( ).
    ME->S_MS_PAPER_VIS-S_PRICE = ME->R_PR_MS_PAPER->GET_PRICE( ).
    ME->S_MS_PAPER_VIS-S_PRICP = ME->R_PR_MS_PAPER->GET_PRICP( ).
    ME->S_MS_PAPER_VIS-LIFNR   = ME->R_PR_MS_PAPER->GET_LIFNR( ).

  endmethod.
method UPDATE_BY_MS_PAPER_VIS.

  data: LS_PRICE type ZVCXI_XCS_S_PRICE,
        LS_PRICP type ZVCXI_XCS_S_PRICP.

  check ME->R_PR_MS_PAPER is bound.

  if ME->S_MS_PAPER_VIS-BPMAT ne IS_MS_PAPER_VIS-BPMAT.
    ME->R_PR_MS_PAPER->SET_MATNR( IF_MATNR = IS_MS_PAPER_VIS-BPMAT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MS_PAPER_VIS-SUBPA ne IS_MS_PAPER_VIS-SUBPA.
    ME->R_PR_MS_PAPER->SET_SUBPA( IF_SUBPA = IS_MS_PAPER_VIS-SUBPA
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Only update if Substitution is active
  if ME->S_MS_PAPER_VIS-SUBPA eq ABAP_TRUE.
    if ME->S_MS_PAPER_VIS-BAWGT ne IS_MS_PAPER_VIS-BAWGT.
      ME->R_PR_MS_PAPER->SET_BAWGT( IS_BAWGT = IS_MS_PAPER_VIS-S_BAWGT
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_MS_PAPER_VIS-BAWGP ne IS_MS_PAPER_VIS-BAWGP.
      ME->R_PR_MS_PAPER->SET_BAWGP( IS_BAWGP = IS_MS_PAPER_VIS-S_BAWGP
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_MS_PAPER_VIS-CALIP ne IS_MS_PAPER_VIS-CALIP.
      ME->R_PR_MS_PAPER->SET_CALIP( IS_CALIP = IS_MS_PAPER_VIS-S_CALIP
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endif.

*** Purchasing Information
  if ME->S_MS_PAPER_VIS-PURCH ne IS_MS_PAPER_VIS-PURCH.
    ME->R_PR_MS_PAPER->SET_PURCH( IF_PURCH = IS_MS_PAPER_VIS-PURCH
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MS_PAPER_VIS-FPTOS ne IS_MS_PAPER_VIS-FPTOS.
    ME->R_PR_MS_PAPER->SET_FPTOS( IF_FPTOS = IS_MS_PAPER_VIS-FPTOS
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MS_PAPER_VIS-PRICE ne IS_MS_PAPER_VIS-PRICE.
    ME->R_PR_MS_PAPER->SET_PRICE( IS_PRICE = IS_MS_PAPER_VIS-S_PRICE
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MS_PAPER_VIS-PRICP ne IS_MS_PAPER_VIS-PRICP.
    ME->R_PR_MS_PAPER->SET_PRICP( IS_PRICP = IS_MS_PAPER_VIS-S_PRICP
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_MS_PAPER_VIS-LIFNR ne IS_MS_PAPER_VIS-LIFNR.
    ME->R_PR_MS_PAPER->SET_LIFNR( IF_LIFNR = IS_MS_PAPER_VIS-LIFNR
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
