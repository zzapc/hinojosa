
class ZCL_VCXI_XCDCU_POPUP_DVCFILTER definition
  public
  final
  create protected .

public section.

  type-pools ABAP .
  data F_REFRESH_REQUESTED type ABAP_BOOL .
  data S_DVCFILTER_VIS type ZVCXI_XCDCU_S_DVCFILTER_VIS .

  methods DO_MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_DVCFILTER_VIS
    importing
      !IS_DVCFILTER_VIS type ZVCXI_XCDCU_S_DVCFILTER_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    changing
      !CF_UCOMM type SYUCOMM .
  class-methods CALL_POPUP
    importing
      !IF_GDVCF type ZVCXI_XCD_GDVCF
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR .
protected section.

  data F_CURSOR type SCRFNAME .
  data R_DVCFILTER type ref to ZCL_VCXI_XCDC_DVCFILTER .
  constants C_UC_OKAY type UI_FUNC value 'OKAY'. "#EC NOTEXT
  data R_GRID_DF_VALID type ref to ZCL_VCXI_XCDCU_GRID_DF_VALID .
  data R_GRID_DF_CD_EXIT type ref to ZCL_VCXI_XCDCU_GRID_DF_CD_EXIT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods SET_PFSTATUS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_GDVCF type ZVCXI_XCD_GDVCF
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCDCU_POPUP_DVCFILTER definition
class ZCL_VCXI_XCDCU_POPUP_DVCFILTER implementation.
method CALL_POPUP.

  data: LR_POPUP_DVCFILTER  type ref to ZCL_VCXI_XCDCU_POPUP_DVCFILTER.

  create object LR_POPUP_DVCFILTER
    exporting
      IF_GDVCF = IF_GDVCF.

*** Display Overview Popup
  call function 'ZVCXI_XCDCU_POPUP_DVCF_START'
    exporting
      IR_POPUP_DVCFILTER = LR_POPUP_DVCFILTER.


endmethod.
method CONSTRUCTOR.

  data: LF_GUID   type        /VCXI/CKX_GUID.
  data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.

*** Get DVC Filter
  move IF_GDVCF to LF_GUID.
  LR_OBJECT = ZCL_VCXI_XCDC_DVCFILTER=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).

  try.
      move LR_OBJECT ?to ME->R_DVCFILTER.
    catch CX_SY_MOVE_CAST_ERROR.
***   Filter Object cant be assigned
      clear: ME->R_DVCFILTER.
  endtry.

  check ME->R_DVCFILTER is bound.

***----------------------------------------------------------------------------
*** Grid of Condition Definition Validation
  if ME->R_GRID_DF_VALID is not bound.
*** Create Grid for DVC Filter
    create object ME->R_GRID_DF_VALID
      exporting
        IR_CUSTOMIZING = ME->R_DVCFILTER.
  endif.

*** Grid of Condition Definition Exit
  if ME->R_GRID_DF_CD_EXIT is not bound.
*** Create Grid for DVC Filter
    create object ME->R_GRID_DF_CD_EXIT
      exporting
        IR_CUSTOMIZING = ME->R_DVCFILTER.
  endif.

*** Request Refresh
  move ABAP_TRUE to ME->F_REFRESH_REQUESTED.

endmethod.
method DO_MODIFY_SCREEN.

  loop at screen.

    if SCREEN-GROUP1 eq 'ACT' and
       ME->R_DVCFILTER->S_DF_ACTIVE-FLACT ne ABAP_TRUE.
      move 0 to SCREEN-ACTIVE.
    endif.

    modify screen.
  endloop.

endmethod.
method DO_PBO.

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

      ME->SET_PFSTATUS( ).

      ME->INIT_VIS( ).

***   Refresh Grid - Condition Definition Validation
      if ME->R_GRID_DF_VALID is bound.
        if ME->R_GRID_DF_VALID->F_REFRESH_REQ eq ABAP_FALSE.
          move ABAP_TRUE to ME->R_GRID_DF_VALID->F_REFRESH_REQ.
          if ME->F_REFRESH_REQUESTED = ABAP_TRUE.
            move ABAP_TRUE to ME->R_GRID_DF_VALID->F_REFRESH_ALL_REQ.
          endif.
        endif.
        ME->R_GRID_DF_VALID->REFRESH_GRID( ).
      endif.

***   Refresh Grid - Condition Definition Exit
      if ME->R_GRID_DF_CD_EXIT is bound.
        if ME->R_GRID_DF_CD_EXIT->F_REFRESH_REQ eq ABAP_FALSE.
          move ABAP_TRUE to ME->R_GRID_DF_CD_EXIT->F_REFRESH_REQ.
          if ME->F_REFRESH_REQUESTED = ABAP_TRUE.
            move ABAP_TRUE to ME->R_GRID_DF_CD_EXIT->F_REFRESH_ALL_REQ.
          endif.
        endif.
        ME->R_GRID_DF_CD_EXIT->REFRESH_GRID( ).
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method DO_UPDATE_DVCFILTER_VIS.

  data: LS_DF_ACTIVE type ZVCXI_XCDC_S_DF_ACTIVE.

*** Set Condition Definiton Values
  if IS_DVCFILTER_VIS-ICODE ne ME->R_DVCFILTER->F_DF_ICODE.
    ME->R_DVCFILTER->SET_DF_ICODE( IF_DF_ICODE = IS_DVCFILTER_VIS-ICODE ).
  endif.

**** Set Condition Record Values
  if IS_DVCFILTER_VIS-ICORE ne ME->R_DVCFILTER->F_DF_ICORE.
    ME->R_DVCFILTER->SET_DF_ICORE( IF_DF_ICORE = IS_DVCFILTER_VIS-ICORE ).
  endif.

*** Set Activity Flag
  if IS_DVCFILTER_VIS-FLACT ne ME->R_DVCFILTER->S_DF_ACTIVE-FLACT or
     IS_DVCFILTER_VIS-FLSCR ne ME->R_DVCFILTER->S_DF_ACTIVE-FLSCR or
     IS_DVCFILTER_VIS-FLFUN ne ME->R_DVCFILTER->S_DF_ACTIVE-FLFUN or
     IS_DVCFILTER_VIS-FLDEF ne ME->R_DVCFILTER->S_DF_ACTIVE-FLDEF.

    move-corresponding IS_DVCFILTER_VIS to LS_DF_ACTIVE.
    if LS_DF_ACTIVE-FLACT is initial.
      clear: LS_DF_ACTIVE-FLSCR, LS_DF_ACTIVE-FLFUN, LS_DF_ACTIVE-FLDEF.
    endif.

    ME->R_DVCFILTER->SET_DF_ACTIVE( IS_DF_ACTIVE = LS_DF_ACTIVE ).
  endif.

**** Set Condition Definition Exit - Used in Condition Record
  if IS_DVCFILTER_VIS-FUICR_CD_EXIT ne ME->R_DVCFILTER->F_DF_FUICR_CD_EXIT.
    ME->R_DVCFILTER->SET_DF_FUICR_CD_EXIT( IF_DF_FUICR_CD_EXIT = IS_DVCFILTER_VIS-FUICR_CD_EXIT ).
  endif.

endmethod.
method DO_USER_COMMAND.

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.
      case CF_UCOMM.
        when ZCL_VCXI_XCDCU_POPUP_DVCFILTER=>C_UC_OKAY.
          ME->HANDLE_UC_OKAY( ).
      endcase.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

  clear CF_UCOMM.

endmethod.
method HANDLE_UC_OKAY.

*** Free Grids
  ME->R_GRID_DF_VALID->DO_FREE( ).
  free: ME->R_GRID_DF_VALID.

  ME->R_GRID_DF_CD_EXIT->DO_FREE( ).
  free: ME->R_GRID_DF_CD_EXIT.

  leave to screen 0.

endmethod.
method INIT_VIS.

  clear: ME->S_DVCFILTER_VIS.

*** Get Condition Definition ID
  move ME->R_DVCFILTER->F_DF_ICODE to ME->S_DVCFILTER_VIS-ICODE.

*** Get Condition Record ID
  move ME->R_DVCFILTER->F_DF_ICORE to ME->S_DVCFILTER_VIS-ICORE.

*** Get Active Elements
  move-corresponding ME->R_DVCFILTER->S_DF_ACTIVE to ME->S_DVCFILTER_VIS.

*** Get Condition Definition - Used in Condition Records
  move ME->R_DVCFILTER->F_DF_FUICR_CD_EXIT  to ME->S_DVCFILTER_VIS-FUICR_CD_EXIT.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method SET_PFSTATUS.

*** ----------------------------------------------------------
*** Set Status
  set pf-status '0100' of program 'SAPLZVCXI_XCDCU_POPUP_OVDF'.

endmethod.
