
class ZCL_VCXI_XCUR_POPUP_MUROB definition
  public
  final
  create protected .

public section.

  constants C_UC_OKAY type SYUCOMM value 'OKAY' ##NO_TEXT.
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  data T_MUROB type ZVCXI_XCUR_TT_MUROB read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IF_LOCKED type /VCXI/CKX_LOCKED default ABAP_TRUE
    changing
      !CT_MUROB type ZVCXI_XCUR_TT_MUROB
    raising
      /VCXI/CX_CKX .
protected section.

  data R_GRID_MUROB_SDOC type ref to ZCL_VCXI_XCUR_GRID_MUROB .
  data R_GRID_MUROB_MAT type ref to ZCL_VCXI_XCUR_GRID_MUROB .
  data F_LOCKED type /VCXI/CKX_LOCKED .

  methods CHECK_MUROB
    returning
      value(RF_OK) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IT_MUROB type ZVCXI_XCUR_TT_MUROB
      !IF_LOCKED type /VCXI/CKX_LOCKED
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCUR_POPUP_MUROB definition
class ZCL_VCXI_XCUR_POPUP_MUROB implementation.
  method CHECK_MUROB.

    data: LS_MUROB type ZVCXI_XCUR_S_MUROB.


    RF_OK = ABAP_TRUE.

*** Check Object Sales Document Input
    loop at ME->R_GRID_MUROB_SDOC->T_MUROB into LS_MUROB
                                          where VBELN is not initial and
                                                POSNR is initial.
      RF_OK = ABAP_FALSE.
      exit.
    endloop.

*** Check Object Material Input
    if RF_OK eq ABAP_TRUE.
      loop at ME->R_GRID_MUROB_MAT->T_MUROB into LS_MUROB
                                           where MATNR is not initial and
                                                 WERKS is initial.
        RF_OK = ABAP_FALSE.
        exit.
      endloop.
    endif.

*** For Incomplete Input - Popup Message
    if RF_OK = ABAP_FALSE.
      message E102(ZVCXI_XCUR)
              display like 'I'.
    endif.

  endmethod.
  method CONSTRUCTOR.

    ME->T_MUROB  = IT_MUROB.
    ME->F_LOCKED = IF_LOCKED.

*** Initialize Grid - Object Sales Document
    create object ME->R_GRID_MUROB_SDOC
      exporting
        IF_TOOBJ  = ZCL_VCXI_XCUR_GRID_MUROB=>C_TOOBJ_SDOC
        IT_MUROB  = value #( for LS_MUROB in ME->T_MUROB where ( VBELN is not initial ) ( LS_MUROB ) )
        IF_LOCKED = ME->F_LOCKED.

*** Initialize Grid - Object Material
    create object ME->R_GRID_MUROB_MAT
      exporting
        IF_TOOBJ  = ZCL_VCXI_XCUR_GRID_MUROB=>C_TOOBJ_MAT
        IT_MUROB  = value #( for LS_MUROB in ME->T_MUROB where ( VBELN is initial ) ( LS_MUROB ) )
        IF_LOCKED = ME->F_LOCKED.

  endmethod.
  method DO_FREE.

*** Free Grid - Object Sales Document
    if ME->R_GRID_MUROB_SDOC is bound.
      ME->R_GRID_MUROB_SDOC->DO_FREE( ).
      clear ME->R_GRID_MUROB_SDOC.
    endif.

*** Free Grid - Object Material
    if ME->R_GRID_MUROB_MAT is bound.
      ME->R_GRID_MUROB_MAT->DO_FREE( ).
      clear ME->R_GRID_MUROB_MAT.
    endif.

  endmethod.
  method DO_PBO.

*** Set PF-Status
    ME->SET_PF_STATUS( ).

*** Refresh Grid - Object Sales document
    ME->R_GRID_MUROB_SDOC->REFRESH_GRID( ).

*** Refresh Grid - Object Material
    ME->R_GRID_MUROB_MAT->REFRESH_GRID( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_OKAY.
***     User Command Ok
        ME->HANDLE_UC_OKAY( ).
      when C_UC_CANCEL.
***     User Command Cancel
        ME->HANDLE_UC_CANCEL( ).

    endcase.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method HANDLE_UC_OKAY.

    data: LT_MUROB_SDOC type ZVCXI_XCUR_TT_MUROB,
          LT_MUROB_MAT  type ZVCXI_XCUR_TT_MUROB.


    check ME->R_GRID_MUROB_SDOC is bound and
          ME->R_GRID_MUROB_MAT  is bound.

*** Refresh Grid (Force change event)
    ME->R_GRID_MUROB_SDOC->REFRESH_GRID( ).
    ME->R_GRID_MUROB_MAT->REFRESH_GRID( ).

*** Check Objects for Incomplete Input
    check ME->CHECK_MUROB( ) eq ABAP_TRUE.

*** Set Objects based on data in Grids
    refresh ME->T_MUROB.

    append lines of ME->R_GRID_MUROB_SDOC->T_MUROB to ME->T_MUROB.
    append lines of ME->R_GRID_MUROB_MAT->T_MUROB to ME->T_MUROB.

    delete ME->T_MUROB where VBELN is initial
                        and  MATNR is initial.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method SET_PF_STATUS.

    data:  LT_EXCLUDE type standard table of SYUCOMM.


***----------------------------------------------------------------------------
*** Exclude Okay when not Locked
    if ME->F_LOCKED ne ABAP_TRUE.
      append C_UC_OKAY to LT_EXCLUDE.
    endif.

***----------------------------------------------------------------------------
*** Set PF-Status
    set pf-status '0100' of program 'SAPLZVCXI_XCUR_POPUP_MUROB'
                         excluding LT_EXCLUDE.

  endmethod.
  method START.

    data: LR_POPUP_MUROB type ref to ZCL_VCXI_XCUR_POPUP_MUROB.


*** Create Instance
    create object LR_POPUP_MUROB
      exporting
        IT_MUROB  = CT_MUROB
        IF_LOCKED = IF_LOCKED.

*** Call Popup
    call function 'ZVCXI_XCUR_POPUP_MUROB_START'
      exporting
        IR_POPUP_MUROB = LR_POPUP_MUROB.

*** Change Object
    if LR_POPUP_MUROB->F_LOCKED eq ABAP_TRUE.
      CT_MUROB = LR_POPUP_MUROB->T_MUROB.
    endif.

*** Free
    LR_POPUP_MUROB->DO_FREE( ).

  endmethod.
