
class ZCL_VCXI_PXSS_POPUP_SPTRN definition
  public
  create protected .

public section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_OKAY type SYUCOMM value 'OKAY' ##NO_TEXT.
  data S_POPUP_SCSTR_VIS type ZVCXI_PXSS_S_POPUP_SCSTR_VIS .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    changing
      !CF_SPTRN type ZVCXI_PXS_SPTRN
    returning
      value(RF_CANCELED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_ORIENT,
      MIRROR type ABAP_BOOL,
    end   of YS_ORIENT .
  types:
    YT_ORIENT type table of YS_ORIENT with default key .

  data F_CANCELED type ABAP_BOOL .
  data T_ORIENT type YT_ORIENT .
  data R_SALV type ref to CL_SALV_TABLE .

  methods GET_SPTRN
    returning
      value(RF_SPTRN) type ZVCXI_PXS_SPTRN
    raising
      /VCXI/CX_CKX .
  methods HANDLE_LINK_CLICK
    for event LINK_CLICK of CL_SALV_EVENTS_TABLE
    importing
      !ROW
      !COLUMN .
  methods INIT_SALV
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_SPTRN type ZVCXI_PXS_SPTRN
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_POPUP_SPTRN definition
class ZCL_VCXI_PXSS_POPUP_SPTRN implementation.
  method CONSTRUCTOR.

*** Build Data for Grid
    split IF_SPTRN at SPACE into table data(LT_ORIENT).
    loop at LT_ORIENT into data(LF_ORIENT).
      case LF_ORIENT.
        when 'R'.
          append value #( MIRROR = ABAP_FALSE ) to ME->T_ORIENT.
        when 'M'.
          append value #( MIRROR = ABAP_TRUE  ) to ME->T_ORIENT.
      endcase.
    endloop.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Set PF-Status
    ME->SET_PF_STATUS( ).

*** Initialize Simple ALV
    ME->INIT_SALV( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_OKAY.
        ME->HANDLE_UC_OKAY( ).
      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).
    endcase.

  endmethod.
  method GET_SPTRN.

    loop at ME->T_ORIENT into data(LS_ORIENT).
      data(LF_ORIENT) = switch #( LS_ORIENT-MIRROR when ABAP_FALSE then 'R'
                                                   when ABAP_TRUE  then 'M' ).

      if SY-TABIX = 1.
        RF_SPTRN = LF_ORIENT.
      else.
        concatenate RF_SPTRN LF_ORIENT into RF_SPTRN separated by SPACE.
      endif.
    endloop.

  endmethod.
  method HANDLE_LINK_CLICK.

    check LINE_EXISTS( ME->T_ORIENT[ ROW ] ).

    case COLUMN.
      when 'MIRROR'.
        ME->T_ORIENT[ ROW ]-MIRROR = switch #(  ME->T_ORIENT[ ROW ]-MIRROR when ABAP_TRUE  then ABAP_FALSE
                                                                           when ABAP_FALSE then ABAP_TRUE ).
    endcase.

*** Refresh Values in Simple ALV
    ME->R_SALV->REFRESH( ).

  endmethod.
  method HANDLE_UC_CANCEL.

    ME->F_CANCELED = ABAP_TRUE.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method HANDLE_UC_OKAY.

    ME->F_CANCELED = ABAP_FALSE.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method INIT_SALV.

    data: LR_CUSTOM_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER.


    try.
***--------------------------------------------------------------------------------------
        if ME->R_SALV is not bound.
***       Create Container
          create object LR_CUSTOM_CONTAINER
            exporting
              CONTAINER_NAME = '0100CC_GRID'
              LIFETIME       = CL_GUI_COLUMN_TREE=>LIFETIME_DYNPRO
            exceptions
              others         = 9.
          if SY-SUBRC ne 0.
            /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
          endif.

***       Create Simple ALV
          CL_SALV_TABLE=>FACTORY( exporting R_CONTAINER  = LR_CUSTOM_CONTAINER
                                  importing R_SALV_TABLE = ME->R_SALV
                                  changing  T_TABLE      = ME->T_ORIENT ).

***       Change Column
          data(LR_COLUMN) = cast CL_SALV_COLUMN_LIST( ME->R_SALV->GET_COLUMNS( )->GET_COLUMN( 'MIRROR' ) ).
          LR_COLUMN->SET_LONG_TEXT( 'Mirrored' ).
          LR_COLUMN->SET_MEDIUM_TEXT( 'Mirrored' ).
          LR_COLUMN->SET_SHORT_TEXT( 'Mirrored' ).
          LR_COLUMN->SET_CELL_TYPE( IF_SALV_C_CELL_TYPE=>CHECKBOX_HOTSPOT ).
          LR_COLUMN->SET_OUTPUT_LENGTH( VALUE = 10 ).

***       Set Event Handler
          data(LR_EVENTS) = ME->R_SALV->GET_EVENT( ).
          set handler ME->HANDLE_LINK_CLICK for LR_EVENTS.
        endif.


***--------------------------------------------------------------------------------------
***     Display the ALV Grid
        ME->R_SALV->DISPLAY( ).


      catch CX_SALV_ERROR into data(LR_CX_SALV_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SALV_ERROR ).
    endtry.

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_PXSS_POPUP_SPTRN'.

  endmethod.
  method START.

    data: LR_POPUP_SPTRN type ref to ZCL_VCXI_PXSS_POPUP_SPTRN.


*** Create Instance
    create object LR_POPUP_SPTRN
      exporting
        IF_SPTRN = CF_SPTRN.

*** Call Popup
    call function 'ZVCXI_PXSS_POPUP_SPTRN_START'
      exporting
        IR_POPUP_SPTRN = LR_POPUP_SPTRN.

*** Return Cancel Flag
    RF_CANCELED = LR_POPUP_SPTRN->F_CANCELED.

*** Get new Score Pattern
    if RF_CANCELED ne ABAP_TRUE.
      CF_SPTRN = LR_POPUP_SPTRN->GET_SPTRN( ).
    endif.

  endmethod.
