
class ZCL_VCXI_XCSP_GRID_CSPLIT definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_XCSP_S_CSPLIT_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods GET_CSPLIT_VIS
    importing
      !IR_PR_CSPLIT type ref to ZCL_VCXI_XCSP_PR_CSPLIT
    returning
      value(RS_CSPLIT_VIS) type ZVCXI_XCSP_S_CSPLIT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CSPLIT_VIS
    importing
      !IR_PR_CSPLIT type ref to ZCL_VCXI_XCSP_PR_CSPLIT
      !IS_CSPLIT_VIS type ZVCXI_XCSP_S_CSPLIT_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSP_GRID_CSPLIT definition
class ZCL_VCXI_XCSP_GRID_CSPLIT implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_XCSP_PR_CSPLIT=>C_IPRVT_XCS_CSPLIT.

endmethod.
method GET_CSPLIT_VIS.

  data:  LS_DCSPL             type        ZVCXI_XCSP_S_DCSPL.

  move IR_PR_CSPLIT->GET_ICSPL( )  to RS_CSPLIT_VIS-ICSPL.

  move IR_PR_CSPLIT->GET_DCSPL( )  to LS_DCSPL.
  move-corresponding LS_DCSPL      to RS_CSPLIT_VIS.

  move IR_PR_CSPLIT->GET_COMPR( )  to RS_CSPLIT_VIS-COMPR.
  move IR_PR_CSPLIT->GET_QFACT( )  to RS_CSPLIT_VIS-QFACT.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED       type        /VCXI/CKX_LOCKED,
                 LF_INUSE        type        /VCXI/VKSR_INUSE.
  field-symbols: <S_FCAT>        type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

      when 'ICSPL' or 'DCSPL' or 'COMPR' or 'QFACT'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_CSPLIT_GRID       type          ZVCXI_XCSP_S_CSPLIT_GRID,
                 LS_CSPLIT_VIS        type          ZVCXI_XCSP_S_CSPLIT_VIS.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_CSPLIT         type ref to   ZCL_VCXI_XCSP_PR_CSPLIT.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Price Scales
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSP_PR_CSPLIT=>C_IPRVT_XCS_CSPLIT
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear LS_CSPLIT_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_CSPLIT.
        check LR_PR_CSPLIT is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_CSPLIT_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_CSPLIT_GRID-GATKY.
        move LR_GATE               to LS_CSPLIT_GRID-R_GATE.


        LS_CSPLIT_VIS = ME->GET_CSPLIT_VIS( IR_PR_CSPLIT = LR_PR_CSPLIT ).
        move-corresponding LS_CSPLIT_VIS to LS_CSPLIT_GRID.

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_CSPLIT_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_CSPLIT.
    endtry.
  endloop.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_CSPLIT_GRID       type          ZVCXI_XCSP_S_CSPLIT_GRID,
                 LS_CSPLIT_VIS        type          ZVCXI_XCSP_S_CSPLIT_VIS.
  data:          LR_PR_CSPLIT         type ref to   ZCL_VCXI_XCSP_PR_CSPLIT,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        try.
            move-corresponding <S_DATA> to LS_CSPLIT_GRID.
            check LS_CSPLIT_GRID-R_GATE is bound.

            move LS_CSPLIT_GRID-R_GATE->R_CLSPR ?to LR_PR_CSPLIT.
            check LR_PR_CSPLIT is bound.

***         Set Values to PR Class
            move-corresponding LS_CSPLIT_GRID to LS_CSPLIT_VIS.
            ME->SET_CSPLIT_VIS( IR_PR_CSPLIT  = LR_PR_CSPLIT
                                IS_CSPLIT_VIS = LS_CSPLIT_VIS ).

          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_CSPLIT.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_CSPLIT_VIS.

  data:  LS_CSPLIT_VIS   type ZVCXI_XCSP_S_CSPLIT_VIS,
         LS_DCSPL        type ZVCXI_XCSP_S_DCSPL.

*** Get Current data to do Update only if Value changed.
  LS_CSPLIT_VIS = ME->GET_CSPLIT_VIS( IR_PR_CSPLIT = IR_PR_CSPLIT ).

*** ID
  if IS_CSPLIT_VIS-ICSPL ne LS_CSPLIT_VIS-ICSPL.
    IR_PR_CSPLIT->SET_ICSPL( IF_ICSPL = IS_CSPLIT_VIS-ICSPL
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Distribution Key
  if IS_CSPLIT_VIS-DCSPL ne LS_CSPLIT_VIS-DCSPL.
    move-corresponding IS_CSPLIT_VIS to LS_DCSPL.
    IR_PR_CSPLIT->SET_DCSPL( IS_DCSPL = LS_DCSPL
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Component Ratio
  if IS_CSPLIT_VIS-COMPR ne LS_CSPLIT_VIS-COMPR.
    IR_PR_CSPLIT->SET_COMPR( IF_COMPR = IS_CSPLIT_VIS-COMPR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Qunatity Factor
  if IS_CSPLIT_VIS-QFACT ne LS_CSPLIT_VIS-QFACT.
    IR_PR_CSPLIT->SET_QFACT( IF_QFACT = IS_CSPLIT_VIS-QFACT
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
