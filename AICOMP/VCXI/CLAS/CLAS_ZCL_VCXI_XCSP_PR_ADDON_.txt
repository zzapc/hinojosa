
class ZCL_VCXI_XCSP_PR_ADDON definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_XCSP_ADDON .

  aliases C_IPRVT_XCS_ADDON
    for ZIF_VCXI_XCSP_ADDON~C_IPRVT_XCS_ADDON .
  aliases GET_MSRSF
    for ZIF_VCXI_XCSP_ADDON~GET_MSRSF .
  aliases GET_MSRWF
    for ZIF_VCXI_XCSP_ADDON~GET_MSRWF .
  aliases GET_MSSTI
    for ZIF_VCXI_XCSP_ADDON~GET_MSSTI .
  aliases GET_MSSWA
    for ZIF_VCXI_XCSP_ADDON~GET_MSSWA .
  aliases GET_MSTTI
    for ZIF_VCXI_XCSP_ADDON~GET_MSTTI .

  constants C_IEVNT_O_IQCFT_CHANGED type /VCXI/VKSC_IEVNT value 'IQCFT_CHANGED' ##NO_TEXT.
  constants C_PARID_IQCFT type /VCXI/VKS_PARID value 'ZVCXI_XC_IQCFT' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_IQCFT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RT_FEATURE) type /VCXI/CKI_TT_FEATURE
    raising
      /VCXI/CX_CKX .
  methods GET_MDS
    returning
      value(RS_MDS) type /VCXI/VSMC_S_MDS
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods SET_IQCFT
    importing
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IT_FEATURE type /VCXI/CKI_TT_FEATURE optional
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  aliases C_IEVNT_O_MGRPV_CHANGED
    for ZIF_VCXI_XCSP_ADDON~C_IEVNT_O_MGRPV_CHANGED .
  aliases C_IEVNT_O_TIME_CHANGED
    for ZIF_VCXI_XCSP_ADDON~C_IEVNT_O_TIME_CHANGED .
  aliases C_IEVNT_O_WASTE_CHANGED
    for ZIF_VCXI_XCSP_ADDON~C_IEVNT_O_WASTE_CHANGED .

  constants C_IEVNT_I_INIT_CADDON type /VCXI/VKSC_IEVNT value 'INIT_CADDON' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_TIME type /VCXI/VKSC_IEVNT value 'RECALC_TIME' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_WASTE type /VCXI/VKSC_IEVNT value 'RECALC_WASTE' ##NO_TEXT.
  constants C_IEVNT_I_SET_ARBPL type /VCXI/VKSC_IEVNT value 'SET_ARBPL' ##NO_TEXT.
  constants C_PARID_MSRSF type /VCXI/VKS_PARID value 'ZVCXI_XC_MSRSF' ##NO_TEXT.
  constants C_PARID_MSRWF type /VCXI/VKS_PARID value 'ZVCXI_XC_MSRWF' ##NO_TEXT.
  constants C_PARID_MSSTI type /VCXI/VKS_PARID value 'ZVCXI_XC_MSSTI' ##NO_TEXT.
  constants C_PARID_MSSWA_A type /VCXI/VKS_PARID value 'ZVCXI_XC_MSSWA_A' ##NO_TEXT.
  constants C_PARID_MSSWA_L type /VCXI/VKS_PARID value 'ZVCXI_XC_MSSWA_L' ##NO_TEXT.
  constants C_PARID_MSSWA_P type /VCXI/VKS_PARID value 'ZVCXI_XC_MSSWA_P' ##NO_TEXT.
  constants C_PARID_MSSWA_W type /VCXI/VKS_PARID value 'ZVCXI_XC_MSSWA_W' ##NO_TEXT.
  constants C_PARID_MSTTI type /VCXI/VKS_PARID value 'ZVCXI_XC_MSTTI' ##NO_TEXT.
  data F_PARID_MSSWA type /VCXI/VKS_PARID .
  data R_PR_MACHINE type ref to ZCL_VCXI_XCSP_PR_MACHINE .
  data R_RTE_CADDON type ref to /VCXI/CL_VSMR_RTE_CADDON .

  methods GET_RTE_SAREC
    returning
      value(RT_RTE_SAREC) type /VCXI/VSMR_TT_RTE_SAREC
    raising
      /VCXI/CX_CKX .
  methods GET_RTE_SAVAL
    returning
      value(RT_RTE_SAVAL) type /VCXI/VSMR_TT_RTE_SAVAL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_CADDON
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_TIME
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_WASTE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_ARBPL
    raising
      /VCXI/CX_CKX .
  methods SET_MSRSF
    importing
      !IS_MSRSF type /VCXI/VSM_S_MSRSF
    raising
      /VCXI/CX_CKX .
  methods SET_MSRWF
    importing
      !IS_MSRWF type /VCXI/VSM_S_MSRWF
    raising
      /VCXI/CX_CKX .
  methods SET_MSSTI
    importing
      !IS_MSSTI type /VCXI/VSM_S_MSSTI
    raising
      /VCXI/CX_CKX .
  methods SET_MSSWA
    importing
      !IS_MSSWA type /VCXI/VSM_S_MSSWA
    raising
      /VCXI/CX_CKX .
  methods SET_MSTTI
    importing
      !IS_MSTTI type /VCXI/VSM_S_MSTTI
    raising
      /VCXI/CX_CKX .
private section.

  methods INIT_PARID_MSSWA
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_XCSP_PR_ADDON definition
class ZCL_VCXI_XCSP_PR_ADDON implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize Parameter ID for Setup Waste
  ME->INIT_PARID_MSSWA( ).

endmethod.
  method GET_IQCFT.

    data: LS_PARAM  type /VCXI/VKSR_S_PARAM.


***--------------------------------------------------------------------------------------
*** Get Parameter Value
    try.
***     Get Parameter if supported by Add-on
        LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_IQCFT ).
      catch /VCXI/CX_CKX.
        return.
    endtry.


    if LS_PARAM-STRNG is not initial.
      call transformation ID
           source xml LS_PARAM-STRNG
           result T_FEATURE = RT_FEATURE.
    endif.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method GET_MDS.

    if ME->R_PR_MACHINE is bound.
      RS_MDS = ME->R_PR_MACHINE->GET_MDS( ).
    endif.

  endmethod.
method GET_RTE_SAREC.
endmethod.
method GET_RTE_SAVAL.
endmethod.
method GET_WERKS.

  if ME->R_PR_MACHINE is not bound.
    ME->HANDLE_INIT_CADDON( ).
  endif.

  check ME->R_PR_MACHINE is bound.
  RF_WERKS = ME->R_PR_MACHINE->GET_WERKS( ).

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_SET_ARBPL.
      ME->HANDLE_SET_ARBPL( ).

    when C_IEVNT_I_INIT_CADDON.
      ME->HANDLE_INIT_CADDON( ).

    when C_IEVNT_I_RECALC_WASTE.
      ME->HANDLE_RECALC_WASTE( ).

    when C_IEVNT_I_RECALC_TIME.
      ME->HANDLE_RECALC_TIME( ).
  endcase.

endmethod.
  method HANDLE_INIT_CADDON.

    data: LF_IATYP            type        /VCXI/VSMC_IATYP.
    data: LT_GATE             type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
          LR_MGRPV_SPEED_OLD type ref to /VCXI/CL_VSMC_MGRPV_SPEED,
          LR_MGRPV_SPEED_NEW type ref to /VCXI/CL_VSMC_MGRPV_SPEED.


    if ME->R_RTE_CADDON is bound and
       ME->R_RTE_CADDON->R_RTE_CMACH is bound.
      move ME->R_RTE_CADDON->R_RTE_CMACH->R_MGRPV_SPEED to LR_MGRPV_SPEED_OLD.
    endif.

    clear: ME->R_PR_MACHINE,
           ME->R_RTE_CADDON.

    if ME->R_GATE->IS_INUSE( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE ).

      read table LT_GATE into LR_GATE index 1.
      if SY-SUBRC eq 0.
        try.
            move LR_GATE->R_CLSPR ?to ME->R_PR_MACHINE.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: ME->R_PR_MACHINE.
        endtry.
      endif.

***----------------------------------------------------------------------------
***   Initialize Customizing Add-on
      if ME->R_PR_MACHINE              is bound and
         ME->R_PR_MACHINE->R_RTE_CMACH is bound.
        try.
***         Get Add-on ID
            move ME->R_GATE->F_ID to LF_IATYP.
***         Get Add-on Customizing
            ME->R_RTE_CADDON = /VCXI/CL_VSMR_RTE_CADDON=>GET_INSTANCE( IR_RTE_CMACH = ME->R_PR_MACHINE->R_RTE_CMACH
                                                                       IF_IATYP     = LF_IATYP ).
            move ME->R_RTE_CADDON->R_RTE_CMACH->R_MGRPV_SPEED to LR_MGRPV_SPEED_NEW.
          catch /VCXI/CX_CKX.
***         Ignore Error Message
            clear ME->R_RTE_CADDON.
        endtry.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Send Event
    if LR_MGRPV_SPEED_NEW ne LR_MGRPV_SPEED_OLD.
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MGRPV_CHANGED ).
    endif.

  endmethod.
method HANDLE_RECALC_TIME.

  data:  LS_OPQTY       type        /VCXI/VSMR_S_OPQTY,
         LS_MSSTI       type        /VCXI/VSM_S_MSSTI,
         LS_MSRSF       type        /VCXI/VSM_S_MSRSF,
         LS_MSTTI       type        /VCXI/VSM_S_MSTTI.
  data:  LT_RTE_SAREC   type        /VCXI/VSMR_TT_RTE_SAREC,
         LT_RTE_SAVAL   type        /VCXI/VSMR_TT_RTE_SAVAL.

***----------------------------------------------------------------------------
  if ME->R_RTE_CADDON is bound and
     ME->R_GATE->IS_INUSE( ) eq ABAP_TRUE.

*** Get Operation Quantity In depending on Machine Customizing "Calc Run based on"
    ME->R_PR_MACHINE->GET_OPQTY( importing ES_OPQTY_IN = LS_OPQTY ).

*** Get Aspects
    LT_RTE_SAREC = ME->GET_RTE_SAREC( ).
    LT_RTE_SAVAL = ME->GET_RTE_SAVAL( ).

*** Add-on Setup Time
    LS_MSSTI = ME->R_RTE_CADDON->GET_MSSTI( IT_RTE_SAREC = LT_RTE_SAREC
                                            IT_RTE_SAVAL = LT_RTE_SAVAL ).
*** Add-on Run Slowdown Factor
    LS_MSRSF = ME->R_RTE_CADDON->GET_MSRSF( IS_OPQTY     = LS_OPQTY
                                            IT_RTE_SAREC = LT_RTE_SAREC
                                            IT_RTE_SAVAL = LT_RTE_SAVAL ).
*** Add-on Teardown Time
    LS_MSTTI = ME->R_RTE_CADDON->GET_MSTTI( IT_RTE_SAREC = LT_RTE_SAREC
                                            IT_RTE_SAVAL = LT_RTE_SAVAL ).
  endif.

***----------------------------------------------------------------------------
*** Set Values
  ME->SET_MSSTI( IS_MSSTI = LS_MSSTI ).
  ME->SET_MSRSF( IS_MSRSF = LS_MSRSF ).
  ME->SET_MSTTI( IS_MSTTI = LS_MSTTI ).

endmethod.
method HANDLE_RECALC_WASTE.

  data:  LS_OPQTY       type        /VCXI/VSMR_S_OPQTY,
         LS_MSSWA       type        /VCXI/VSM_S_MSSWA,
         LS_MSRWF       type        /VCXI/VSM_S_MSRWF.
  data:  LT_RTE_SAREC   type        /VCXI/VSMR_TT_RTE_SAREC,
         LT_RTE_SAVAL   type        /VCXI/VSMR_TT_RTE_SAVAL.

***----------------------------------------------------------------------------
  if ME->R_RTE_CADDON                       is bound and
     ME->R_RTE_CADDON->R_RTE_CMACH          is bound and
     ME->R_RTE_CADDON->R_RTE_CMACH->R_MTYPE is bound and
     ME->R_GATE->IS_INUSE( )                eq ABAP_TRUE.

*** Get Aspects
    LT_RTE_SAREC = ME->GET_RTE_SAREC( ).
    LT_RTE_SAVAL = ME->GET_RTE_SAVAL( ).

*** Add-on Setup Waste
    LS_MSSWA = ME->R_RTE_CADDON->GET_MSSWA( IT_RTE_SAREC = LT_RTE_SAREC
                                            IT_RTE_SAVAL = LT_RTE_SAVAL ).

*** Get Operation Quantity Out depending on Machine Customizing "Calc Run based on"
    ME->R_PR_MACHINE->GET_OPQTY( importing ES_OPQTY_OUT = LS_OPQTY ).

*** Add-on Run Waste Factor
    LS_MSRWF = ME->R_RTE_CADDON->GET_MSRWF( IS_OPQTY     = LS_OPQTY
                                            IT_RTE_SAREC = LT_RTE_SAREC
                                            IT_RTE_SAVAL = LT_RTE_SAVAL ).
  endif.

***----------------------------------------------------------------------------
*** Set Values
  ME->SET_MSSWA( IS_MSSWA = LS_MSSWA ).
  ME->SET_MSRWF( IS_MSRWF = LS_MSRWF ).

endmethod.
method HANDLE_SET_ARBPL.

  data:  LS_LEOKY       type        /VCXI/VKSR_S_LEOKY.
  data:  LT_GATE        type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE        type ref to /VCXI/CL_VKSR_GATE.

***----------------------------------------------------------------------------
*** Get Leading Object Key of Machine
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE ).

  read table LT_GATE into LR_GATE index 1.
  if LR_GATE is bound.
    move LR_GATE->GET_LEOKY( ) to LS_LEOKY.
  endif.

*** Set Leading Object Key
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC to LS_LEOKY-SETBY.
  ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

endmethod.
method INIT_PARID_MSSWA.

  data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
  data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.

  LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

  loop at LT_PARAM into LS_PARAM
                  where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                   and  ( PARID eq C_PARID_MSSWA_A or
                          PARID eq C_PARID_MSSWA_L or
                          PARID eq C_PARID_MSSWA_P or
                          PARID eq C_PARID_MSSWA_W ).
    move LS_PARAM-PARID to ME->F_PARID_MSSWA.
    exit.
  endloop.

endmethod.
  method SET_IQCFT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_IQCFT ).

    if IT_FEATURE is supplied.
      call transformation ID
           source T_FEATURE = IT_FEATURE
           result xml LS_PARAM-STRNG.
    endif.
    if IF_SETBY is initial.
      clear LS_PARAM-STRNG.
    endif.
    LS_PARAM-SETBY = IF_SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_IQCFT_CHANGED ).
    endif.

  endmethod.
method SET_MSRSF.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSRSF ).

  move IS_MSRSF-MSRSF                   to LS_PARAM-ATFLV.
  move IS_MSRSF-MSRSF_UOM               to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TIME_CHANGED ).
  endif.

endmethod.
method SET_MSRWF.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSRWF ).

  move IS_MSRWF-MSRWF                   to LS_PARAM-ATFLV.
  move IS_MSRWF-MSRWF_UOM               to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_WASTE_CHANGED ).
  endif.

endmethod.
method SET_MSSTI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSSTI ).

  move IS_MSSTI-MSSTI                   to LS_PARAM-ATFLV.
  move IS_MSSTI-MSSTI_UOM               to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TIME_CHANGED ).
  endif.

endmethod.
method SET_MSSWA.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_MSSWA ).

  move IS_MSSWA-MSSWA                   to LS_PARAM-ATFLV.
  move IS_MSSWA-MSSWA_UOM               to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_WASTE_CHANGED ).
  endif.

endmethod.
method SET_MSTTI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSTTI ).

  move IS_MSTTI-MSTTI                   to LS_PARAM-ATFLV.
  move IS_MSTTI-MSTTI_UOM               to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TIME_CHANGED ).
  endif.

endmethod.
  method ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE.

*** Update Features based on stored IQ.catalyst Features
    loop at ME->GET_IQCFT( ) into data(LS_FEATURE).
      /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = LS_FEATURE
                                        changing  CT_FEATURE = CT_FEATURE ).
    endloop.

  endmethod.
method ZIF_VCXI_XCSP_ADDON~GET_MSRSF.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSRSF ).
  move LS_PARAM-ATFLV to RS_MSRSF-MSRSF.
  move LS_PARAM-UNIT  to RS_MSRSF-MSRSF_UOM.

endmethod.
method ZIF_VCXI_XCSP_ADDON~GET_MSRWF.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSRWF ).
  move LS_PARAM-ATFLV to RS_MSRWF-MSRWF.
  move LS_PARAM-UNIT  to RS_MSRWF-MSRWF_UOM.

endmethod.
method ZIF_VCXI_XCSP_ADDON~GET_MSSTI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSSTI ).
  move LS_PARAM-ATFLV to RS_MSSTI-MSSTI.
  move LS_PARAM-UNIT  to RS_MSSTI-MSSTI_UOM.

endmethod.
method ZIF_VCXI_XCSP_ADDON~GET_MSSWA.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_MSSWA ).
  move LS_PARAM-ATFLV to RS_MSSWA-MSSWA.
  move LS_PARAM-UNIT  to RS_MSSWA-MSSWA_UOM.

endmethod.
method ZIF_VCXI_XCSP_ADDON~GET_MSTTI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_MSTTI ).
  move LS_PARAM-ATFLV to RS_MSTTI-MSTTI.
  move LS_PARAM-UNIT  to RS_MSTTI-MSTTI_UOM.

endmethod.
