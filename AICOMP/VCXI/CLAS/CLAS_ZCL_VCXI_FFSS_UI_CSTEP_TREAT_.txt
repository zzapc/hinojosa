
class ZCL_VCXI_FFSS_UI_CSTEP_TREAT definition
  public
  inheriting from ZCL_VCXI_FFSS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_TREAT_VIS type ZVCXI_FFSS_S_CSTEP_TREAT_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_CSTEP_TREAT_VIS
    importing
      !IS_CSTEP_TREAT_VIS type ZVCXI_FFSS_S_CSTEP_TREAT_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_CSTEP_TREAT type ref to ZCL_VCXI_FFSS_PR_CSTEP_TREAT .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_CSTEP_TREAT definition
class ZCL_VCXI_FFSS_UI_CSTEP_TREAT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_CSTEP_TREAT_BIND'
      exporting
        IR_UI_CSTEP_TREAT = ME
      importing
        ES_DYNP           = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_TREAT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_HIDE   type        ABAP_BOOL.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        if ME->R_PR_CSTEP_TREAT is bound.
          move ME->R_PR_CSTEP_TREAT->IS_CSTEP_INBOUND( ) to LF_HIDE.
        endif.

        loop at screen.
          if SCREEN-GROUP1 eq 'CMB'.
            if LF_HIDE eq ABAP_TRUE.
              move 1 to SCREEN-INVISIBLE.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_CSTEP->F_REFRESH_REQ.
      ME->R_TEXTEDIT_CSTEP->REFRESH_TEXTEDIT( ).
    endif.

  endmethod.
  method DO_UPDATE_CSTEP_TREAT_VIS.

    check ME->R_PR_CSTEP_TREAT is bound.

*** Treatment Type
    if ME->S_CSTEP_TREAT_VIS-TTREA ne IS_CSTEP_TREAT_VIS-TTREA.
      ME->R_PR_CSTEP_TREAT->SET_TTREA( exporting IF_TTREA = IS_CSTEP_TREAT_VIS-TTREA
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Treatment Side
    if ME->S_CSTEP_TREAT_VIS-TRESI ne IS_CSTEP_TREAT_VIS-TRESI.
      ME->R_PR_CSTEP_TREAT->SET_TRESI( exporting IF_TRESI = IS_CSTEP_TREAT_VIS-TRESI
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Combined With
    if ME->S_CSTEP_TREAT_VIS-COMBW ne IS_CSTEP_TREAT_VIS-COMBW.
      ME->R_PR_CSTEP_TREAT->SET_COMBW( exporting IF_COMBW = IS_CSTEP_TREAT_VIS-COMBW
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      ME->R_TEXTEDIT_CSTEP->UPDATE_TEXT( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_TREAT.

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    move ME->S_CSTEP_VIS to ME->S_CSTEP_TREAT_VIS-S_CSTEP_VIS.

    check ME->R_PR_CSTEP_TREAT is bound.

*** Treatment Type
    ME->R_PR_CSTEP_TREAT->GET_TTREA( importing EF_TTREA = ME->S_CSTEP_TREAT_VIS-TTREA ).

*** Treatment Side
    ME->R_PR_CSTEP_TREAT->GET_TRESI( importing EF_TRESI = ME->S_CSTEP_TREAT_VIS-TRESI ).

*** Combined with
    ME->R_PR_CSTEP_TREAT->GET_COMBW( importing EF_COMBW = ME->S_CSTEP_TREAT_VIS-COMBW ).

  endmethod.
