
class ZCL_VCXI_XCM_MBQ_STP_S406 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S406 definition
class ZCL_VCXI_XCM_MBQ_STP_S406 implementation.
  method EXECUTE.

    data: LF_ERROR type ABAP_BOOL.
    data: LS_MATLI    type ZVCXI_XCM_MBQ_S_MATLI,
          LS_BAPIRET2 type BAPIRET2.
    data: LT_BAPIRET2 type BAPIRETTAB.
    data: LR_BOB_PURIR type ref to ZCL_VCXI_XCI_BOB_PURIR,
          LR_ACTDAT    type ref to DATA.
    field-symbols: <S_ACTDAT_PURIR> type ZVCXI_XCM_MBQ_S_ACTDAT_PURIR.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Create Purchasing Info Record
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_PURIR ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_PURIR ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_PURIR>.


***--------------------------------------------------------------------------------------
***     Create Business Object for Customer-Materials Info Record
        LR_BOB_PURIR = new #( IF_LIFNR = <S_ACTDAT_PURIR>-LIFNR ).

***     Create Purchase Info Record for Material
        LR_BOB_PURIR->CREATE_FOR_MATNR( exporting IF_MATNR     = LS_MATLI-MATNR
                                                  IF_EKORG     = <S_ACTDAT_PURIR>-EKORG
                                                  IF_WERKS     = <S_ACTDAT_PURIR>-WERKS
                                                  IF_EKGRP     = <S_ACTDAT_PURIR>-EKGRP
                                                  IF_IDNLF     = <S_ACTDAT_PURIR>-IDNLF
                                                  IF_BSTME     = <S_ACTDAT_PURIR>-BSTME
                                                  IF_UMBSZ     = <S_ACTDAT_PURIR>-UMBSZ
                                                  IF_UMBSN     = <S_ACTDAT_PURIR>-UMBSN
                                                  IF_KONWA     = <S_ACTDAT_PURIR>-KONWA
                                                  IF_KPEIN     = <S_ACTDAT_PURIR>-KPEIN
                                                  IF_KMEIN     = <S_ACTDAT_PURIR>-KMEIN
                                                  IF_KODATAB   = <S_ACTDAT_PURIR>-KODATAB
                                                  IT_CONDSCALE = <S_ACTDAT_PURIR>-T_CONDSCALE
                                        importing ET_BAPIRET2  = LT_BAPIRET2 ).

        loop at LT_BAPIRET2 into LS_BAPIRET2.
***       Add Message to Message Log
          ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_BAPIRET2( IS_BAPIRET2 = LS_BAPIRET2 ).
          if LS_BAPIRET2-TYPE eq 'E'.
            LF_ERROR = ABAP_TRUE.
          endif.
        endloop.

***     Set Status
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = switch #( LF_ERROR when ABAP_FALSE then /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED
                                                              when ABAP_TRUE  then /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ) ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S406 definition
endclass. "ZCL_VCXI_XCM_MBQ_STP_S406 implementation
