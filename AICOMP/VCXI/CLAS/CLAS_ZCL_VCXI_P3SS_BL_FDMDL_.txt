
class ZCL_VCXI_P3SS_BL_FDMDL definition
  public
  inheriting from ZCL_VCXI_PXSS_BL_FDMDL
  create public .

public section.

  data R_GATE_CSTEP_ASMBL type ref to /VCXI/CL_VKSR_GATE .
  constants C_IFDMV_AFG type ZVCXI_PXSS_IFDMV value 'P3_AFG' ##NO_TEXT.

  methods DET_IFDMV
    redefinition .
  methods GET_CLSUI
    redefinition .
  methods GET_SUB_BL_FDMDL
    redefinition .
protected section.

  methods GET_INIT_AFG
    changing
      !CT_FASTD_XCOMP type ZVCXI_PXSS_TT_FASTD_XCOMP
      !CT_XCONG type ZVCXI_PXSS_TT_XCONG
    raising
      /VCXI/CX_CKX .
  methods GET_XPART_BL_FDMDL
    importing
      !IR_GATE_XPART type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_XCOMP type ref to /VCXI/CL_VKSR_GATE
      !IT_FASTD_XCOMP type ZVCXI_PXSS_TT_FASTD_XCOMP
    returning
      value(RR_BL_FDMDL) type ref to ZCL_VCXI_PXSS_BL_FDMDL
    raising
      /VCXI/CX_CKX .

  methods INIT_FDMDL
    redefinition .
private section.
endclass. "ZCL_VCXI_P3SS_BL_FDMDL definition
class ZCL_VCXI_P3SS_BL_FDMDL implementation.
  method DET_IFDMV.

    data: LS_FASTD_XCOMP      type ZVCXI_PXSS_S_FASTD_XCOMP,
          LS_FASTD_XCOMP_DATA type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.


    free: ME->R_GATE_CSTEP_ASMBL.

*** Get Configuration Structure
    SUPER->DET_IFDMV( importing ET_FASTD_XCOMP = ET_FASTD_XCOMP ).
    check ME->T_GATE_OUT is not initial.

***------------------------------------------------------------------------------------------------
*** Only a single Model Variante for AS
    ME->F_IFDMV = C_IFDMV_AFG.

***------------------------------------------------------------------------------------------------
*** Identify Assembly Conversion Steps
    loop at ET_FASTD_XCOMP into LS_FASTD_XCOMP.
      loop at LS_FASTD_XCOMP-T_DATA into LS_FASTD_XCOMP_DATA
                                   where ISELF  eq 'CSTEP_ASMBL'
                                    and  R_GATE is bound.
***     Buffer Assembly Step
        ME->R_GATE_CSTEP_ASMBL = LS_FASTD_XCOMP_DATA-R_GATE.
      endloop.
    endloop.

  endmethod.
  method GET_CLSUI.

    RF_CLSUI = 'ZCL_VCXI_P3SS_UI_FDMDL'.

  endmethod.
  method GET_INIT_AFG.

***--------------------------------------------------------------------------------------
*** Define Structure
    append value #( ID     = 'COMP_P3'
                    XCSTY  = ZCL_VCXI_PXSS_BL_FASTD=>C_XCSTY_SPEC  "Specification-based Component
                    T_DATA = value #( ( IPARE = 'CONV'    ISELF = 'CSTEP_ASMBL' )
                                      ( IPARE = 'OUTPUT'  ISELF = 'AFG'         ) "  R_DATA = new ZVCXI_P3SS_S_FDI_AFG( )
                                    )
                  ) to CT_FASTD_XCOMP.

  endmethod.
  method GET_SUB_BL_FDMDL.

    RT_BL_FDMDL = SUPER->GET_SUB_BL_FDMDL( IF_DEPTH = IF_DEPTH ).


*
*    data: LF_DEPTH type I.
*
*
**** Collect all direct related Sub-Models
*    RT_BL_FDMDL = SUPER->GET_SUB_BL_FDMDL( IF_DEPTH = 0 ).
*    append lines of ME->T_BL_FDMDL_XPART to RT_BL_FDMDL.
*
**** "Recursive" Collection
*    if IF_DEPTH gt 0.
*      LF_DEPTH = IF_DEPTH - 1.
*    else.
*      LF_DEPTH = IF_DEPTH.
*    endif.
*    if LF_DEPTH ne 0.
*      loop at RT_BL_FDMDL into data(LR_BL_FDMDL).
*        append lines of LR_BL_FDMDL->GET_SUB_BL_FDMDL( IF_DEPTH = LF_DEPTH ) to RT_BL_FDMDL.
*      endloop.
*    endif.

  endmethod.
  method GET_XPART_BL_FDMDL.

    data: LT_GATE_XCOMP type /VCXI/VKSR_TT_GATE.
    data: LR_PR_XCONI   type ref to ZCL_VCXI_PXSS_PR_XCONI,
          LR_GATE_XCONO type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_XCOMP type ref to /VCXI/CL_VKSR_GATE.


***------------------------------------------------------------------------------------------------
*** Get Connection In
    LR_PR_XCONI = cast ZCL_VCXI_PXSS_PR_XPART( IR_GATE_XPART->R_CLSPR )->GET_PRVDR_XCONI( ).
    if LR_PR_XCONI is bound.
***   Get connected Connection Out
      LR_GATE_XCONO = LR_PR_XCONI->GET_CONNECTED_GATE( ).

***   Get own linked Components
      LR_GATE_XCOMP = ME->R_BL_FASTD->GET_XCOMP_BY_DATA( IR_GATE_DATA   = LR_GATE_XCONO
                                                         IT_FASTD_XCOMP = IT_FASTD_XCOMP ).
      ME->R_BL_FASTD->GET_LINKED_XCOMP( exporting IR_BL_FDMDL            = ME
                                                  IR_GATE_XCOMP          = LR_GATE_XCOMP
                                        importing ET_GATE_XCOMP_BACKWARD = LT_GATE_XCOMP ).
    endif.

    append IR_GATE_XCOMP to LT_GATE_XCOMP.

***------------------------------------------------------------------------------------------------
*** Initialize Fast Data Model for Part
    RR_BL_FDMDL = ZCL_VCXI_PXSS_BL_FDMDL=>GET_INSTANCE( IR_GATE_FASTD      = ME->R_GATE_FASTD
                                                        IR_BL_FDMDL_PARENT = ME
                                                        IT_GATE_OUT        = value #( ( IR_GATE_XPART ) )
                                                        IT_GATE_XCOMP      = LT_GATE_XCOMP ).

  endmethod.
  method INIT_FDMDL.

*** Get initial Structure based on Model Variant
    case IF_IFDMV.
      when C_IFDMV_AFG.
        ME->GET_INIT_AFG( changing CT_FASTD_XCOMP = CT_FASTD_XCOMP
                                   CT_XCONG       = CT_XCONG ).
    endcase.

  endmethod.
