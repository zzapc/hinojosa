
class ZCL_VCXI_XCM_MBQ_CUST definition
  public
  create protected .

public section.

  constants C_ACTID_BOM type ZVCXI_XCM_MBQ_ACTID value 'BOM' ##NO_TEXT.
  constants C_ACTID_CKC type ZVCXI_XCM_MBQ_ACTID value 'CKC' ##NO_TEXT.
  constants C_ACTID_CKM type ZVCXI_XCM_MBQ_ACTID value 'CKM' ##NO_TEXT.
  constants C_ACTID_CKR type ZVCXI_XCM_MBQ_ACTID value 'CKR' ##NO_TEXT.
  constants C_ACTID_CMIR type ZVCXI_XCM_MBQ_ACTID value 'CMIR' ##NO_TEXT.
  constants C_ACTID_CNF type ZVCXI_XCM_MBQ_ACTID value 'CNF' ##NO_TEXT.
  constants C_ACTID_CSB type ZVCXI_XCM_MBQ_ACTID value 'CSB' ##NO_TEXT.
  constants C_ACTID_CSPL type ZVCXI_XCM_MBQ_ACTID value 'CSPL' ##NO_TEXT.
  constants C_ACTID_DMS type ZVCXI_XCM_MBQ_ACTID value 'DMS' ##NO_TEXT.
  constants C_ACTID_DMSEXT type ZVCXI_XCM_MBQ_ACTID value 'DMSEXT' ##NO_TEXT.
  constants C_ACTID_HUPI type ZVCXI_XCM_MBQ_ACTID value 'HUPI' ##NO_TEXT.
  constants C_ACTID_LLC type ZVCXI_XCM_MBQ_ACTID value 'LLC' ##NO_TEXT.
  constants C_ACTID_MAT type ZVCXI_XCM_MBQ_ACTID value 'MAT' ##NO_TEXT.
  constants C_ACTID_MCL type ZVCXI_XCM_MBQ_ACTID value 'MCL' ##NO_TEXT.
  constants C_ACTID_MMEXT type ZVCXI_XCM_MBQ_ACTID value 'MMEXT' ##NO_TEXT.
  constants C_ACTID_PCR type ZVCXI_XCM_MBQ_ACTID value 'PCR' ##NO_TEXT.
  constants C_ACTID_PRU type ZVCXI_XCM_MBQ_ACTID value 'PRU' ##NO_TEXT.
  constants C_ACTID_PURIR type ZVCXI_XCM_MBQ_ACTID value 'PURIR' ##NO_TEXT.
  constants C_ACTID_PURSL type ZVCXI_XCM_MBQ_ACTID value 'PURSL' ##NO_TEXT.
  constants C_ACTID_PVER type ZVCXI_XCM_MBQ_ACTID value 'PVER' ##NO_TEXT.
  constants C_ACTID_QMAT type ZVCXI_XCM_MBQ_ACTID value 'QMAT' ##NO_TEXT.
  constants C_ACTID_QPLN type ZVCXI_XCM_MBQ_ACTID value 'QPLN' ##NO_TEXT.
  constants C_ACTID_RTE type ZVCXI_XCM_MBQ_ACTID value 'RTE' ##NO_TEXT.
  constants C_ACTID_SDPOS type ZVCXI_XCM_MBQ_ACTID value 'SDPOS' ##NO_TEXT.

  class-methods GET_CKKEY
    importing
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS
    returning
      value(RS_CKKEY) type ZVCXI_XCM_MBQ_S_CKKEY
    raising
      /VCXI/CX_CKX .
  class-methods GET_KSCHL
    importing
      !IF_PCRSK type ZVCXI_XCM_MBQ_PCRSK
      !IF_VKORG type VKORG
    returning
      value(RT_TC210) type ZVCXI_XCM_TT_TC210
    raising
      /VCXI/CX_CKX .
  class-methods READ_ACTCON
    importing
      !IF_SOKEY type ZVCXI_XCM_MBQ_SOKEY
    returning
      value(RT_ACTCON) type ZVCXI_XCM_MBQ_TT_ACTCON
    raising
      /VCXI/CX_CKX .
  class-methods READ_REFMAT
    importing
      !IF_SOKEY type ZVCXI_XCM_MBQ_SOKEY
      !IF_WERKS type WERKS_D
    exporting
      !ER_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT
    returning
      value(RS_TD111) type ZVCXI_XCM_TD111
    raising
      /VCXI/CX_CKX .
protected section.
private section.
endclass. "ZCL_VCXI_XCM_MBQ_CUST definition
class ZCL_VCXI_XCM_MBQ_CUST implementation.
  method GET_CKKEY.

    data: LS_TCK03 type TCK03.

    RS_CKKEY-WERKS = IF_WERKS.
    RS_CKKEY-KLVAR = ZCL_VCXI_XCI_BOB_CK_MAT=>GET_TCK03( exporting IF_WERKS = IF_WERKS
                                                                   IF_DATE  = IF_DATE
                                                         importing EF_TVERS = RS_CKKEY-TVERS )-KLVAR.
    RS_CKKEY-DATE  = SY-DATLO.

  endmethod.
  method GET_KSCHL.

    statics: LT_TC210 type ZVCXI_XCM_TT_TC210.


*** Check and if needed refresh Buffer
    if not LINE_EXISTS( RT_TC210[ VKORG = IF_VKORG ] ).
      select *
             into table LT_TC210
             from ZVCXI_XCM_TC210
            where PCRSK eq IF_PCRSK
             and  VKORG eq IF_VKORG.
      if SY-SUBRC ne 0.
        clear LT_TC210.
      endif.
    endif.

*** Return Buffer
    RT_TC210 = LT_TC210.

  endmethod.
  method READ_ACTCON.

*** Get Activity Control
    select *
           into corresponding fields of table RT_ACTCON
           from ZVCXI_XCM_TC120
          where SOKEY eq IF_SOKEY.
    if SY-SUBRC ne 0.
***   No Activities defined for &1.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGID = 'ZVCXI_XCM_MBQ'
                                            IF_MSGTY = 'E'
                                            IF_MSGNO = '106'
                                            IF_MSGV1 = IF_SOKEY ).
    endif.

  endmethod.
  method READ_REFMAT.

***--------------------------------------------------------------------------------------
*** Get reference material
    select single *
           into RS_TD111
           from ZVCXI_XCM_TD111
          where SOKEY eq IF_SOKEY
           and  WERKS eq IF_WERKS.
    if SY-SUBRC ne 0.
      select single *
             into RS_TD111
             from ZVCXI_XCM_TD111
            where SOKEY eq IF_SOKEY
             and  WERKS eq SPACE.
      if SY-SUBRC ne 0.
***     No Reference Material found for &1 - &2.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGID = 'ZVCXI_XCM_MBQ'
                                              IF_MSGTY = 'E'
                                              IF_MSGNO = '105'
                                              IF_MSGV1 = IF_SOKEY
                                              IF_MSGV2 = IF_WERKS ).
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Load Material Business Object
    if ER_BOB_MAT is requested.
      create object ER_BOB_MAT.
      ER_BOB_MAT->INIT_FROM_DB( IF_MATNR = RS_TD111-TMATN
                                IF_WERKS = IF_WERKS ).
    endif.

  endmethod.
