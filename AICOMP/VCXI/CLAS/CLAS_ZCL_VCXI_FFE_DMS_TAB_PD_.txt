
class ZCL_VCXI_FFE_DMS_TAB_PD definition
  public
  inheriting from ZCL_VCXI_XCE_DMS_TAB
  create public .

public section.

  data S_PD_VIS type ZVCXI_FFE_DMS_S_PD_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_DMSEXT type ref to ZCL_VCXI_XCE_DMS_DMSEXT
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
protected section.

  data R_DMSEXT_PD type ref to ZCL_VCXI_FFE_DMS_DMSEXT_PD .
  data R_GRID_PDINK type ref to ZCL_VCXI_FFE_DMS_GRID_PDINK .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFE_DMS_TAB_PD definition
class ZCL_VCXI_FFE_DMS_TAB_PD implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_DMSEXT = IR_DMSEXT ).

*** Cast Data Extension
    move ME->R_DMSEXT ?to ME->R_DMSEXT_PD.

*** Screen Binding
    call function 'ZVCXI_FFE_DMS_TAB_PD_BIND'
      exporting
        IR_TAB_PD = ME
      importing
        ES_DYNP   = ME->S_DYNP.

*** Create Grid for Print Design Inks
    create object ME->R_GRID_PDINK
      exporting
        IR_DMSEXT_PD = ME->R_DMSEXT_PD.

  endmethod.
  method DO_PBO.

*** Initialize VIS
    ME->INIT_VIS( ).

*** Modify Screen
    ME->MODIFY_SCREEN( ).

*** Refresh Grid
    ME->R_GRID_PDINK->REFRESH_GRID( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_PD_VIS type ZVCXI_FFE_DMS_S_PD_VIS.


    LS_PD_VIS = corresponding #( IS_VIS ).

    ME->R_DMSEXT_PD->SET_PD( IS_PD = LS_PD_VIS-S_PD ).

  endmethod.
  method INIT_VIS.

    ME->S_PD_VIS-S_PD = ME->R_DMSEXT_PD->S_PD.

***--------------------------------------------------------------------------------------
*** Initialize Units once
    if ME->S_PD_VIS-OPRIW_UOM is initial.
      move 'MM' to ME->S_PD_VIS-OPRIW_UOM.
    endif.
    if ME->S_PD_VIS-PRRWI_UOM is initial.
      move 'MM' to ME->S_PD_VIS-PRRWI_UOM.
    endif.
    if ME->S_PD_VIS-PRRLE_UOM is initial.
      move 'MM' to ME->S_PD_VIS-PRRLE_UOM.
    endif.

***--------------------------------------------------------------------------------------
*** Initialize Defaults
    if ME->S_PD_VIS-RENEX is initial.
      move 1 to ME->S_PD_VIS-RENEX.
    endif.

    if ME->S_PD_VIS-REBEH is initial.
      move 1 to ME->S_PD_VIS-REBEH.
    endif.

  endmethod.
  method MODIFY_SCREEN.

*** Identify Print Technology
    data(LF_PRTEC) = ZCL_VCXI_FFSS_CUST_PRINT=>GET_TPRIN_PRTEC( IF_TPRIN = ME->S_PD_VIS-TPRIN ).

    loop at screen.
***   Hide by Print Technology
      case LF_PRTEC.
***     Traditional Printing
        when ZCL_VCXI_FFSS_CUST_PRINT=>C_PRTEC_ANALOG.
          if SCREEN-GROUP2 eq 'PTD'.    "Digital Print Technology
            SCREEN-ACTIVE = 0.
          endif.

***     Digital Printing
        when ZCL_VCXI_FFSS_CUST_PRINT=>C_PRTEC_DIGITAL.
          if SCREEN-GROUP2 eq 'PTA'.    "Analog Print Technology
            SCREEN-ACTIVE = 0.
          endif.
      endcase.

      modify screen.
    endloop.

*** Lock everything if not in Change Mode or Status is Released and not saved yet
    if ME->R_DMSEXT_PD->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_TRUE or
       ME->CHECK_IS_LOCKED( ) ne ABAP_TRUE.

      loop at screen.
        move 0 to SCREEN-INPUT.
        modify screen.
      endloop.
    endif.

  endmethod.
