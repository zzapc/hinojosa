
class ZCL_VCXI_XCUR_S202 definition
  public
  inheriting from /VCXI/CL_CKMR_CLSTP
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_RPSEG type ref to /VCXI/CL_CKMR_RPSEG
    raising
      /VCXI/CX_CKX .

  methods EXECUTE
    redefinition .
protected section.

  data R_DCO_INPUT type ref to ZCL_VCXI_XCUR_DCO_MUROB .
  data R_DCO_OUTPUT type ref to ZCL_VCXI_XCUR_DCO_MUROB .
private section.
endclass. "ZCL_VCXI_XCUR_S202 definition
class ZCL_VCXI_XCUR_S202 implementation.
  method CONSTRUCTOR.

*** Super Constructor
    SUPER->CONSTRUCTOR( IR_RPSEG = IR_RPSEG ).

*** Map DCO to Required Input/Output
    ME->R_RPSEG->MAP_DCO( changing CR_DCO = ME->R_DCO_INPUT ).
    ME->R_RPSEG->MAP_DCO( changing CR_DCO = ME->R_DCO_OUTPUT ).

  endmethod.
  method EXECUTE.

    data: LT_BAPIRET2 TYPE TT_BAPIRET2.
    data: LR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT.


    try.
***     Save previous Information before continuing
        ME->R_RPSEG->SAVE_AND_COMMIT( ).

***------------------------------------------------------------------------------------------------
***     Create Business Object for Material
        create object LR_BOB_MAT.
        LR_BOB_MAT->INIT_FROM_DB( IF_MATNR = ME->R_DCO_INPUT->S_MUROB-MATNR
                                  IF_WERKS = ME->R_DCO_INPUT->S_MUROB-WERKS ).

***------------------------------------------------------------------------------------------------
***     Set Integration Data to Buffer for Profile Run
        call function 'ZVCXI_XCC_IDAT_SET_NIDAT'
          exporting
            IF_POSNR = ME->R_DCO_INPUT->S_MUROB-POSNR
            IF_NIDAT = conv ZVCXI_XCI_NIDAT( ME->R_DCO_INPUT->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT~GET_GUID( ) ).

***     Change Configuration
        LR_BOB_MAT->CHANGE_CONFIG( IF_COMMIT  = ABAP_FALSE
                                   IF_ENQUEUE = ABAP_FALSE ).

***     Configuration has been updated.
        ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGTY = 'S'
                                         IF_MSGID = 'ZVCXI_XCUR'
                                         IF_MSGNO = '412' ).

***     Initialize Integration Data Buffer for Profile Run
        call function 'ZVCXI_XCC_IDAT_INIT_NIDAT'.


***     Trigger Save to process Material Exits
        LR_BOB_MAT->SAVE( importing ET_BAPIRET2 = LT_BAPIRET2 ).


***------------------------------------------------------------------------------------------------
***     Check Status based on Messages
        if not LINE_EXISTS( LT_BAPIRET2[ TYPE = 'E' ] ) and
           not LINE_EXISTS( LT_BAPIRET2[ TYPE = 'A' ] ).
***       Set Status to Complete
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).
        else.
***       Set Status to Error
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).
        endif.

***     Add Messages to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGES_BY_BAPIRET2( IT_BAPIRET2 = LT_BAPIRET2 ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
endclass. "ZCL_VCXI_XCUR_S202 implementation
