
class ZCL_VCXI_P1SS_UI_LAMI definition
  public
  inheriting from ZCL_VCXI_XCS_UI_TAB
  create public .

public section.

  data S_LAMI_VIS type ZVCXI_P1SS_S_LAMI_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_LAM_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_CPROP type SYUCOMM value 'CORR_CPROP' ##NO_TEXT.
  data R_PR_LAMI type ref to ZCL_VCXI_P1SS_PR_LAMI .
  constants C_UC_CRPROP_OUT type SYUCOMM value 'CRPROP_OUT' ##NO_TEXT.
  constants C_UC_SCSTR_OUT type SYUCOMM value 'SCSTR_OUT' ##NO_TEXT.
  data R_TEXTEDIT_LTEXT type ref to ZCL_VCXI_PXSS_TEXTEDIT_LTEXT .
  data R_TOOLBAR type ref to ZCL_VCXI_XCS_TOOLBAR_PRVDR .

  methods HANDLE_UC_CRPROP
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SCSTR
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_LAMI definition
class ZCL_VCXI_P1SS_UI_LAMI implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_LAMI_BIND'
      exporting
        IR_UI_LAMI    = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

*** Create Toolbar for Provider
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TOOLBAR_LAMI'
        IF_IPRVT          = ZCL_VCXI_PXSS_PR_XSHT=>C_IPRVT_PX_XSHT.

*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT_LTEXT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_LAMI.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

*** Update the Long Text before leaving the screen
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
      ME->R_TEXTEDIT_LTEXT->DO_FREE( ).
      clear ME->R_TEXTEDIT_LTEXT.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,           "#EC NEEDED
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).


***--------------------------------------------------------------------------------------
*** Initialize Toolbar and provide active tab as Selected Provider (for inserting/deletion)
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = value #( ( ME->R_OLD_GATE ) ) ).
    endif.

*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_LTEXT->F_REFRESH_REQ.
      ME->R_TEXTEDIT_LTEXT->REFRESH_TEXTEDIT( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_LAMI_VIS  type ZVCXI_P1SS_S_LAMI_VIS.


    check ME->R_PR_LAMI is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_LAMI_VIS.

***--------------------------------------------------------------------------------------
**** Set Work Center
*    if ME->S_CORR_VIS-ARBPL ne LS_CORR_VIS-ARBPL.
*      ME->R_PR_CORR->SET_ARBPL( IF_ARBPL = LS_CORR_VIS-ARBPL
*                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
*    endif.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
***   Corrugated Property Pop-Up
      when C_UC_CRPROP_OUT.
        ME->HANDLE_UC_CRPROP( exporting IF_UCOMM = IF_UCOMM  ).

***   Scores String Pop-Up
      when C_UC_SCSTR_OUT.
        ME->HANDLE_UC_SCSTR( exporting IF_UCOMM = IF_UCOMM ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_LAMI.

  endmethod.
  method HANDLE_UC_CRPROP.

*** Start Popup
    ZCL_VCXI_P1SS_POPUP_CRPROP=>START( IR_BL_CRBPROP = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )
                                       IR_BL_CRFPROP = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( )
                                       IF_WERKS      = ME->R_PR_LAMI->GET_WERKS( )
                                       IS_SURWT      = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT( ) ).

  endmethod.
  method HANDLE_UC_SCSTR.

    data: LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP.


*** Get Score String (Outbound)
    LR_BL_CRBPROP = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( ).
    check LR_BL_CRBPROP is bound.

*** Start Popup
    ZCL_VCXI_PXSS_POPUP_SCSTR=>START( IT_SCORE_COM = LR_BL_CRBPROP->T_SCORE
                                      IT_TAPE_COM  = LR_BL_CRBPROP->T_TAPE_COM ).

  endmethod.
  method INIT_VIS.

    data: LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.


    free: ME->S_LAMI_VIS.
    check ME->R_PR_LAMI is bound.

***--------------------------------------------------------------------------------------
**** Get Work Center
*    ME->S_LAMI_VIS-ARBPL = ME->R_PR_LAMI->GET_ARBPL( ).

***--------------------------------------------------------------------------------------
*** Get Sheet Dimension (Outbound)
    ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_SHTDIM( importing ES_SHTLE = ME->S_LAMI_VIS-S_IOSEC_OUT-S_SHTLE
                                                                 ES_SHTWI = ME->S_LAMI_VIS-S_IOSEC_OUT-S_SHTWI ).

*** Number Ups (Outbound)
    ME->S_LAMI_VIS-S_IOSEC_OUT-NOUPS = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_NOUPS( ).

*** Surface Weight (Outbound)
    ME->S_LAMI_VIS-S_IOSEC_OUT-S_SURWT = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT( ).

*** Get Caliper and Flute (Outbound)
    LR_BL_CRFPROP = ME->R_PR_LAMI->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( ).
    if LR_BL_CRFPROP is bound.
      ME->S_LAMI_VIS-S_IOSEC_OUT-FLUTE   = LR_BL_CRFPROP->GET_FLUTE( importing EF_DESCR = ME->S_LAMI_VIS-S_IOSEC_OUT-FLUTE_DESCR ).
      ME->S_LAMI_VIS-S_IOSEC_OUT-S_CALIP = LR_BL_CRFPROP->S_CALIP.
    endif.

  endmethod.
