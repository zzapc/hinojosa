
class ZCL_VCXI_PXSS_UI_MS_LGLUE definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_LGLUE_VIS type ZVCXI_PXSS_S_MS_LGLUE_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_MS_LGLUE type ref to ZCL_VCXI_PXSS_PR_MS_LGLUE .
  data F_CURSOR type SCRFNAME .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_UI_MS_LGLUE definition
class ZCL_VCXI_PXSS_UI_MS_LGLUE implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_MS_LGLUE_BIND'
      exporting
        IR_UI_MS_LGLUE = ME
      importing
        ES_DYNP        = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_LGLUE.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class doesn't work together with PR ABAP Class
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_CADLS  type ZVCXI_PXS_CADLS.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

***     Modify Screen
        loop at screen.
***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.

***       Lock everything
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize VIS Structure
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_MS_LGLUE_VIS  type ZVCXI_PXSS_S_MS_LGLUE_VIS.


    check ME->R_PR_MS_LGLUE is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_MS_LGLUE_VIS.

***--------------------------------------------------------------------------------------
*** Set Glue Consumption Type
    if ME->S_MS_LGLUE_VIS-TLGLC ne LS_MS_LGLUE_VIS-TLGLC.
      ME->R_PR_MS_LGLUE->SET_TLGLC( IF_TLGLC = LS_MS_LGLUE_VIS-TLGLC
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MS_LGLUE.

  endmethod.
  method INIT_VIS.

    free: ME->S_MS_LGLUE_VIS.
    check ME->R_PR_MS_LGLUE is bound.

    move ME->R_PR_MS_LGLUE->GET_MATNR( )        to ME->S_MS_LGLUE_VIS-MATNR.
    move ME->R_PR_MS_LGLUE->GET_MATNR_DESCR( )  to ME->S_MS_LGLUE_VIS-MATNR_DESCR.

    ME->S_MS_LGLUE_VIS-S_SLDCO = ME->R_PR_MS_LGLUE->GET_SLDCO( ).

    ME->S_MS_LGLUE_VIS-TLGLC   = ME->R_PR_MS_LGLUE->GET_TLGLC( ).

    ME->S_MS_LGLUE_VIS-S_APWGT = ME->R_PR_MS_LGLUE->GET_APWGT( importing EF_UOMC6 = ME->S_MS_LGLUE_VIS-APWGT_UOMC6 ).
    ME->S_MS_LGLUE_VIS-S_SURWT = ME->R_PR_MS_LGLUE->GET_SURWT( importing EF_UOMC6 = ME->S_MS_LGLUE_VIS-SURWT_UOMC6 ).

    ME->S_MS_LGLUE_VIS-PURCH   = ME->R_PR_MS_LGLUE->GET_PURCH( ).
    ME->S_MS_LGLUE_VIS-FPTOS   = ME->R_PR_MS_LGLUE->GET_FPTOS( ).
    ME->S_MS_LGLUE_VIS-S_PRICE = ME->R_PR_MS_LGLUE->GET_PRICE( ).
    ME->S_MS_LGLUE_VIS-S_PRICP = ME->R_PR_MS_LGLUE->GET_PRICP( ).
    ME->S_MS_LGLUE_VIS-LIFNR   = ME->R_PR_MS_LGLUE->GET_LIFNR( ).

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
