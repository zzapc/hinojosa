
class ZCL_VCXI_P0SP_PR_PCOUT definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_P0_PCOUT type /VCXI/VKSC_IPRVT value 'ZVCXI_P0SP_PCOUT'. "#EC NOTEXT
  constants C_PARID_NOOUT type /VCXI/VKS_PARID value 'ZVCXI_XC_NOOUT'. "#EC NOTEXT
  constants C_PARID_PCDIR type /VCXI/VKS_PARID value 'ZVCXI_P0_PCDIR'. "#EC NOTEXT
  constants C_PARID_PCHEI type /VCXI/VKS_PARID value 'ZVCXI_P0_PCHEI'. "#EC NOTEXT
  constants C_PARID_PCLEN type /VCXI/VKS_PARID value 'ZVCXI_P0_PCLEN'. "#EC NOTEXT
  constants C_PARID_PCTYP type /VCXI/VKS_PARID value 'ZVCXI_P0_PCTYP'. "#EC NOTEXT
  constants C_PARID_PCUPS type /VCXI/VKS_PARID value 'ZVCXI_P0_PCUPS'. "#EC NOTEXT
  constants C_PARID_PCWID type /VCXI/VKS_PARID value 'ZVCXI_P0_PCWID'. "#EC NOTEXT

  methods GET_NOOUT
    returning
      value(RF_NOOUT) type ZVCXI_XCS_NOOUT
    raising
      /VCXI/CX_CKX .
  methods GET_PCHEI
    returning
      value(RS_PCHEI) type ZVCXI_P0SP_S_PCHEI
    raising
      /VCXI/CX_CKX .
  methods GET_PCLEN
    returning
      value(RS_PCLEN) type ZVCXI_P0SP_S_PCLEN
    raising
      /VCXI/CX_CKX .
  methods GET_PCWID
    returning
      value(RS_PCWID) type ZVCXI_P0SP_S_PCWID
    raising
      /VCXI/CX_CKX .
  methods GET_PCDIR
    returning
      value(RF_PCDIR) type ZVCXI_P0SP_PCDIR
    raising
      /VCXI/CX_CKX .
  methods GET_PCUPS
    returning
      value(RF_PCUPS) type ZVCXI_P0SP_PCUPS
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP
    returning
      value(RF_PCTYP) type ZVCXI_P0SP_PCTYP
    raising
      /VCXI/CX_CKX .
  methods SET_PCHEI
    importing
      !IS_PCHEI type ZVCXI_P0SP_S_PCHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCLEN
    importing
      !IS_PCLEN type ZVCXI_P0SP_S_PCLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCWID
    importing
      !IS_PCWID type ZVCXI_P0SP_S_PCWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCUPS
    importing
      !IF_PCUPS type ZVCXI_P0SP_PCUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCTYP
    importing
      !IF_PCTYP type ZVCXI_P0SP_PCTYP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PCDIM
    returning
      value(RS_PCDIM) type ZVCXI_P0SP_S_PCDIM
    raising
      /VCXI/CX_CKX .
  methods SET_PCDIR
    importing
      !IF_PCDIR type ZVCXI_P0SP_PCDIR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  constants C_IEVNT_O_NOOUT_CHANGED type /VCXI/VKSC_IEVNT value 'NOOUT_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED'. "#EC NOTEXT
private section.
endclass. "ZCL_VCXI_P0SP_PR_PCOUT definition
class ZCL_VCXI_P0SP_PR_PCOUT implementation.
method GET_NOOUT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).
  move LS_PARAM-ATFLV to RF_NOOUT.

endmethod.
method GET_PCDIM.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI.

***------------------------------------------------------------------
*** PC Type
  RS_PCDIM-PCTYP = ME->GET_PCTYP( ).

***------------------------------------------------------------------
*** PC Length
  LS_PCLEN = ME->GET_PCLEN( ).
  move-corresponding LS_PCLEN to RS_PCDIM.

*** PC Width
  LS_PCWID = ME->GET_PCWID( ).
  move-corresponding LS_PCWID to RS_PCDIM.

*** PC Height
  LS_PCHEI = ME->GET_PCHEI( ).
  move-corresponding LS_PCHEI to RS_PCDIM.

***------------------------------------------------------------------
*** PC Ups
  RS_PCDIM-PCUPS = ME->GET_PCUPS( ).

*** Number of Outs
  RS_PCDIM-NOOUT = ME->GET_NOOUT( ).

***------------------------------------------------------------------
*** PC Direction
  RS_PCDIM-PCDIR = ME->GET_PCDIR( ).

endmethod.
method GET_PCDIR.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCDIR ).
  move LS_PARAM-ATWRT to RF_PCDIR.

endmethod.
method GET_PCHEI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).
  move LS_PARAM-ATFLV to RS_PCHEI-PCHEI.
  move LS_PARAM-UNIT  to RS_PCHEI-PCHEI_UOM.

endmethod.
method GET_PCLEN.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).
  move LS_PARAM-ATFLV to RS_PCLEN-PCLEN.
  move LS_PARAM-UNIT  to RS_PCLEN-PCLEN_UOM.

endmethod.
method GET_PCTYP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).
  move LS_PARAM-ATWRT to RF_PCTYP.

endmethod.
method GET_PCTYP_DESCR.

  data: LF_PCTYP type ZVCXI_P0SP_PCTYP.

  LF_PCTYP = ME->GET_PCTYP( ).
  RF_DESCR = ZCL_VCXI_P0SP_CUST_PCTYP=>GET_PCTYP_DESCR( IF_PCTYP = LF_PCTYP ).

endmethod.
method GET_PCUPS.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).
  move LS_PARAM-ATFLV to RF_PCUPS.

endmethod.
method GET_PCWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
  move LS_PARAM-ATFLV to RS_PCWID-PCWID.
  move LS_PARAM-UNIT  to RS_PCWID-PCWID_UOM.

endmethod.
method GET_STATUS.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check PC Length
  LS_PCLEN = ME->GET_PCLEN( ).
  if LS_PCLEN-PCLEN is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Width
  LS_PCWID = ME->GET_PCWID( ).
  if LS_PCWID-PCWID is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Ups
  if ME->GET_PCUPS( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check PC Length
  LS_PCLEN = ME->GET_PCLEN( ).
  if LS_PCLEN-PCLEN is not initial.
*** PC Length is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '001' ).
  else.
*** PC Length is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '002' ).
  endif.

*** Check PC Width
  LS_PCWID = ME->GET_PCWID( ).
  if LS_PCWID-PCWID is not initial.
*** PC Width is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '003' ).
  else.
*** PC Width is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '004' ).
  endif.

*** Check PC Ups
  if ME->GET_PCUPS( ) is not initial.
*** PC Ups is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '007' ).
  else.
*** PC Ups is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '008' ).
  endif.

endmethod.
method SET_NOOUT.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).

  move IF_NOOUT to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOOUT_CHANGED ).
  endif.

endmethod.
method SET_PCDIR.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCDIR ).

  move IF_PCDIR to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCHEI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).

  move IS_PCHEI-PCHEI     to LS_PARAM-ATFLV.
  move IS_PCHEI-PCHEI_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCLEN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).

  move IS_PCLEN-PCLEN     to LS_PARAM-ATFLV.
  move IS_PCLEN-PCLEN_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCTYP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).

  move IF_PCTYP to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCUPS.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).

  move IF_PCUPS to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

  move IS_PCWID-PCWID     to LS_PARAM-ATFLV.
  move IS_PCWID-PCWID_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
