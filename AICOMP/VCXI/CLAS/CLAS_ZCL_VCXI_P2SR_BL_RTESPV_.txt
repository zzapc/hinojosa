
class ZCL_VCXI_P2SR_BL_RTESPV definition
  public
  inheriting from ZCL_VCXI_PXSR_BL_RTESPV
  create public .

public section.
protected section.

  methods ADD_SKIPFEED
    importing
      !IR_SPVRE_ARBPL type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ATYPE type ref to /VCXI/CL_VSMC_ATYPE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods PROCESS_RTE_ARBPL
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SR_BL_RTESPV definition
class ZCL_VCXI_P2SR_BL_RTESPV implementation.
  method ADD_SKIPFEED.

    data: LF_ID type /VCXI/CKX_ID.
    data: LR_SPVCE          type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_SKIPFEED type ref to /VCXI/CL_VKSR_SPVRE.


    check IR_ATYPE is bound.
    move IR_ATYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LF_ID.

***----------------------------------------------------------------------------
*** Get Customizing Element for Manager
    LR_SPVCE = ME->GET_SPVCE( IF_ID           = LF_ID
                              IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_SKIPFEED
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_SKIPFEED to CT_SPVRE.

*** Set in Use
    LR_SPVRE_SKIPFEED->SET_INUSE( IF_INUSE = ABAP_TRUE ).

  endmethod.
  method PROCESS_RTE_ARBPL.

    data: LR_RTE_CMACH type ref to /VCXI/CL_VSMR_RTE_CMACH,
          LR_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP,
          LR_BL_PSTEP  type ref to ZCL_VCXI_XCSR_BL_PSTEP,
          LR_ATYPE     type ref to /VCXI/CL_VSMC_ATYPE.


    SUPER->PROCESS_RTE_ARBPL( exporting IR_SPVRE_ROOT  = IR_SPVRE_ROOT
                                        IR_RTE_ARBPL   = IR_RTE_ARBPL
                                        IR_BL_PRTE     = IR_BL_PRTE
                              importing ER_SPVRE_ARBPL = ER_SPVRE_ARBPL
                              changing  CT_SPVRE       = CT_SPVRE ).

***----------------------------------------------------------------------------
    if ER_SPVRE_ARBPL            is bound and
       ER_SPVRE_ARBPL->GET_ID( ) eq 'CONV'.

***   Get Customizing Instance of Machine
      LR_RTE_CMACH = /VCXI/CL_VSMR_RTE_CMACH=>GET_INSTANCE( IR_ARBPL = IR_RTE_ARBPL->R_ARBPL
                                                            IF_DATE  = IR_BL_PRTE->F_DATE
                                                            IF_LCVAL = IR_RTE_ARBPL->F_LCVAL ).

***----------------------------------------------------------------------------
***   Set Limits
      loop at IR_RTE_ARBPL->T_RTE_PSTEP into LR_RTE_PSTEP.
***     Initialize Limits
        LR_RTE_PSTEP->INIT_LIMIT( ).
        try.
            move LR_RTE_PSTEP->R_BLOBJ ?to LR_BL_PSTEP.
            check LR_BL_PSTEP is bound.
            LR_BL_PSTEP->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = LR_RTE_PSTEP ).
          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.
      endloop.

***----------------------------------------------------------------------------
***   Check if Skip Feed is active
      LR_ATYPE = ZCL_VCXI_P2SR_BL_PRTE=>IS_SKIPFEED_ACTIVE( IR_RTE_CMACH = LR_RTE_CMACH
                                                            IR_RTE_ARBPL = IR_RTE_ARBPL ).
      if LR_ATYPE is bound.
***     Add Skip Feed
        ME->ADD_SKIPFEED( exporting IR_SPVRE_ARBPL = ER_SPVRE_ARBPL
                                    IR_ATYPE       = LR_ATYPE
                          changing  CT_SPVRE       = CT_SPVRE ).
      endif.
    endif.

  endmethod.
endclass. "ZCL_VCXI_P2SR_BL_RTESPV implementation
