
class ZCL_VCXI_XCSU_GRID_PALOP_DIMEN definition
  public
  create public .

public section.

  type-pools ABAP .
  data F_REFRESH_REQ type ABAP_BOOL .

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME default 'ZVCXI_XCSU_S_DIMEN_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IT_DIMEN type ZVCXI_XCSU_TT_DIMEN optional
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
protected section.

  data T_DIMEN type ZVCXI_XCSU_TT_DIMEN .
  data F_CONTAINER_NAME type SCRFNAME .
  data F_TABNAME type TABNAME .
  data R_DATA type ref to DATA .
  data R_GRID type ref to CL_GUI_ALV_GRID .

  methods GET_GRID_DATA
    importing
      !IR_DATA type ref to DATA
    raising
      /VCXI/CX_CKX .
  methods GET_LAYOUT
    returning
      value(RS_LAYOUT) type LVC_S_LAYO
    raising
      /VCXI/CX_CKX .
  methods GET_TOOLBAR_EXCLUDING
    returning
      value(RT_TOOLBAR_EXCLUDING) type UI_FUNCTIONS
    raising
      /VCXI/CX_CKX .
  methods GET_FIELDCAT
    returning
      value(RT_FCAT) type LVC_T_FCAT
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
private section.

  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
endclass. "ZCL_VCXI_XCSU_GRID_PALOP_DIMEN definition
class ZCL_VCXI_XCSU_GRID_PALOP_DIMEN implementation.
method CONSTRUCTOR.

  move IF_TABNAME                to ME->F_TABNAME.
  move IF_CONTAINER_NAME         to ME->F_CONTAINER_NAME.
  move IT_DIMEN                  to ME->T_DIMEN.

*** Create Data Reference to Grid Data
  create data ME->R_DATA type table of (ME->F_TABNAME).

*** Request Refresh
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method DO_FREE.

*** Free Grid
  if ME->R_GRID is bound.

*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).

    ME->R_GRID->FREE( exceptions
                        CNTL_ERROR        = 1
                        CNTL_SYSTEM_ERROR = 2
                        others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_GRID.
  endif.

*** Free Container
  if ME->R_CONTAINER is bound.
    ME->R_CONTAINER->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_CONTAINER.
  endif.

endmethod.
method GET_FIELDCAT.

  data:          LS_FCAT         type        LVC_S_FCAT.
  field-symbols: <S_FCAT>        type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      I_STRUCTURE_NAME       = ME->F_TABNAME
    changing
      CT_FIELDCAT            = RT_FCAT
    exceptions
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      others                 = 3.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
***   Overwrite Dimension
      when 'DIMEN'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      when 'DIMEN_DESCR'.
        read table RT_FCAT into LS_FCAT
                           with key FIELDNAME = 'DIMEN'.
        if SY-SUBRC eq 0.
          move LS_FCAT-COL_POS   to <S_FCAT>-COL_POS.
          move LS_FCAT-REPTEXT   to <S_FCAT>-REPTEXT.
          move LS_FCAT-SCRTEXT_L to <S_FCAT>-SCRTEXT_L.
          move LS_FCAT-SCRTEXT_M to <S_FCAT>-SCRTEXT_M.
          move LS_FCAT-SCRTEXT_S to <S_FCAT>-SCRTEXT_S.
        endif.
    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_DIMEN             type          ZVCXI_XCSU_S_DIMEN,
                 LS_DIMEN_GRID        type          ZVCXI_XCSU_S_DIMEN_GRID.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Ingoing Dimension
  loop at ME->T_DIMEN into LS_DIMEN.
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.

    move LS_DIMEN to LS_DIMEN_GRID-S_DIMEN.
    LS_DIMEN_GRID-DIMEN_DESCR = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_DESCR_FOR_DIMEN( IF_DIMEN = LS_DIMEN-DIMEN ).

    move-corresponding LS_DIMEN_GRID to <S_DATA>.
  endloop.

endmethod.
method GET_LAYOUT.

  move ABAP_TRUE to RS_LAYOUT-NO_TOOLBAR.
  move ABAP_TRUE to RS_LAYOUT-CWIDTH_OPT.
  move 'T_STYL'  to RS_LAYOUT-STYLEFNAME.
*** "'X'->EDIT" would lead to make the hole ALV Editable
*** and you have to "Style" each field editable or not
  move ''       to RS_LAYOUT-EDIT.

endmethod.
method GET_TOOLBAR_EXCLUDING.

*** Exlcude All Functions
  append CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL to RT_TOOLBAR_EXCLUDING.

endmethod.
method INIT_CONTAINER.

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = ME->F_CONTAINER_NAME
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

endmethod.
method INIT_GRID.

  if ME->R_GRID is not bound.
    create object ME->R_GRID
      exporting
        I_PARENT          = ME->R_CONTAINER
        I_APPL_EVENTS     = 'X'
      exceptions
        ERROR_CNTL_CREATE = 1
        ERROR_CNTL_INIT   = 2
        ERROR_CNTL_LINK   = 3
        ERROR_DP_CREATE   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endif.

endmethod.
method REFRESH_GRID.

  data:          LS_LAYOUT            type          LVC_S_LAYO.
  data:          LT_TOOLBAR_EXCLUDING type          UI_FUNCTIONS,
                 LT_FCAT              type          LVC_T_FCAT.
  field-symbols: <T_DATA>             type standard table.

  check ME->F_REFRESH_REQ eq ABAP_TRUE.
  move ABAP_FALSE to ME->F_REFRESH_REQ.

*** Initialize if needed
  ME->INIT_CONTAINER( ).
  ME->INIT_GRID( ).

*** Get Grid Data
  assign ME->R_DATA->* to <T_DATA>.
  free: <T_DATA>.
  ME->GET_GRID_DATA( IR_DATA = ME->R_DATA ).

*** Get Layout, Field Catalog and Toolbar Exclusion
  move ME->GET_FIELDCAT( )          to LT_FCAT.
  move ME->GET_LAYOUT( )            to LS_LAYOUT.
  move ME->GET_TOOLBAR_EXCLUDING( ) to LT_TOOLBAR_EXCLUDING.

*** Relfreh ALV Grid
  ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
    exporting
      IT_TOOLBAR_EXCLUDING          = LT_TOOLBAR_EXCLUDING
      IS_LAYOUT                     = LS_LAYOUT
    changing
      IT_FIELDCATALOG               = LT_FCAT
      IT_OUTTAB                     = <T_DATA>
    exceptions
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3
      others                        = 4 ).
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
