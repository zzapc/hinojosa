
class ZCL_VCXI_PCSS_PR_SCSTR_MGR_CR definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_SCSTR_MGR
  create public .

public section.

  constants C_SCSOP_CORR_CR type ZVCXI_P0S_SCSOP value 'CORR_CR'. "#EC NOTEXT

  methods GET_ALL_VALID_SCSOP
    redefinition .
  methods GET_BSTRL
    redefinition .
  methods GET_BSTRW
    redefinition .
  methods GET_PTYPE
    redefinition .
  methods GET_SCSOP
    redefinition .
  methods GET_VALID_INDIC
    redefinition .
  methods GET_ORIEN
    redefinition .
protected section.

  methods GET_SCSOP_CORR_CR
    changing
      value(CT_SCSOP) type ZVCXI_P0SS_TT_SCSOP
    raising
      /VCXI/CX_CKX .

  methods GET_SCSOP_NONE
    redefinition .
  methods HANDLE_INIT_REFERENCES
    redefinition .
  methods INIT_PRVDR_SPEC
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_PR_SCSTR_MGR_CR definition
class ZCL_VCXI_PCSS_PR_SCSTR_MGR_CR implementation.
method GET_ALL_VALID_SCSOP.

  data:          LS_SCSOP  type ZVCXI_P0SS_S_SCSOP.
  data:          LT_SCSOP  type ZVCXI_P0SS_TT_SCSOP.

***------------------------------------------------------------------------------------------------
*** Get all Operations which are valid
  LT_SCSOP = ME->GET_SCSOP( ).

*** Get right descriptions and add to search help structure
  if IF_CSCOR is supplied.
    loop at LT_SCSOP into LS_SCSOP
      where CSCOR = IF_CSCOR.
      append LS_SCSOP to RT_SCSOP.
    endloop.
  else.
    move LT_SCSOP to RT_SCSOP.
  endif.

endmethod.
method GET_BSTRL.

*** Not needed

endmethod.
method GET_BSTRW.

*** Not needed

endmethod.
method GET_ORIEN.

*** Corrugated Roll has no Orientation
  clear EF_ORIEN.

endmethod.
method GET_PTYPE.

  data: LR_PR_SPEC_CR type ref to ZCL_VCXI_PCSS_PR_SPEC_CR.

  if ME->R_GATE_SPEC is not bound.
    ME->HANDLE_INIT_REFERENCES( ).
  endif.

  check ME->R_GATE_SPEC is bound.
  try.
      move ME->R_GATE_SPEC->R_CLSPR ?to LR_PR_SPEC_CR.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PR_SPEC_CR.
  endtry.

  check LR_PR_SPEC_CR is bound.
  RF_PTYPE = LR_PR_SPEC_CR->GET_PTYPE( ).

endmethod.
method GET_SCSOP.

***------------------------------------------------------------------------------------------------
*** Get Score String Operation NONE
  ME->GET_SCSOP_NONE( changing CT_SCSOP = RT_SCSOP ).

***------------------------------------------------------------------------------------------------
*** Get Score String Operation Corrugation CR
  ME->GET_SCSOP_CORR_CR( changing CT_SCSOP = RT_SCSOP ).

endmethod.
method GET_SCSOP_CORR_CR.

  data:          LT_PRVDR_CORR_CR  type        /VCXI/VKSR_TT_GATE,
                 LT_PRVDR_SCORE_L  type        /VCXI/VKSR_TT_GATE,
                 LT_PRVDR_TAPE     type        /VCXI/VKSR_TT_GATE.
  field-symbols: <S_SCSOP>         type        ZVCXI_P0SS_S_SCSOP.

***------------------------------------------------------------------------------------------------
*** Check Provider for Specification
  check ME->R_GATE_SPEC is bound.
  append ME->R_GATE_SPEC to LT_PRVDR_CORR_CR.

*** Find Provider for Tape
  LT_PRVDR_TAPE = ME->GET_PRVDR_TAPE( IR_GATE_SPEC = ME->R_GATE_SPEC ).
  append lines of LT_PRVDR_TAPE to LT_PRVDR_CORR_CR.

  append ME->R_GATE to LT_PRVDR_CORR_CR.

***------------------------------------------------------------------------------------------------
*** Add Operation for Length
  append initial line to CT_SCSOP assigning <S_SCSOP>.

  <S_SCSOP>-SCSOP = C_SCSOP_CORR_CR.
  <S_SCSOP>-SHTDI = 'A'.
  <S_SCSOP>-CSCOR = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH.
  if ME->GET_SOPLE( ) eq C_SCSOP_CORR_CR.
    <S_SCSOP>-ACTIV = ABAP_TRUE.
*** If Score Operation is active add also right Score Provider
    LT_PRVDR_SCORE_L = ME->GET_PRVDR_SCORE( IR_GATE_SPEC  = ME->R_GATE_SPEC
                                            IF_CSCOR      = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH ).
    if LT_PRVDR_SCORE_L is not initial.
      append lines of LT_PRVDR_SCORE_L to LT_PRVDR_CORR_CR.
    endif.
  endif.
  <S_SCSOP>-T_PRVDR = LT_PRVDR_CORR_CR.

endmethod.                    "GET_SCSOP_CORR
method GET_SCSOP_NONE.

  data:          LS_SCSOP          type        ZVCXI_P0SS_S_SCSOP.
  data:          LT_PRVDR_SCORE_C  type        /VCXI/VKSR_TT_GATE,
                 LT_PRVDR_SCORE_L  type        /VCXI/VKSR_TT_GATE.

***------------------------------------------------------------------------------------------------
*** Check Provider for Specification
  check ME->R_GATE_SPEC is bound.

***------------------------------------------------------------------------------------------------
*** Add Operation for Length
  LS_SCSOP-SCSOP = ZCL_VCXI_P0SS_CUST_SCSTR=>C_SCSOP_NONE.
  LS_SCSOP-SHTDI = 'A'.
  LS_SCSOP-CSCOR = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH.
*** If Score Operation is active add also right Score Provider
  LT_PRVDR_SCORE_L = ME->GET_PRVDR_SCORE( IR_GATE_SPEC  = ME->R_GATE_SPEC
                                          IF_CSCOR      = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH ).
  if LT_PRVDR_SCORE_L is initial.
    append LS_SCSOP to CT_SCSOP.
  endif.

***------------------------------------------------------------------------------------------------
*** Collect all Provider
  clear: LS_SCSOP.

***------------------------------------------------------------------------------------------------
*** Add Operation for Width
  LS_SCSOP-SCSOP = ZCL_VCXI_P0SS_CUST_SCSTR=>C_SCSOP_NONE.
  LS_SCSOP-SHTDI = 'B'.
  LS_SCSOP-CSCOR = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_CROSS.
*** If Score Operation is active add also right Score Provider
  LT_PRVDR_SCORE_C = ME->GET_PRVDR_SCORE( IR_GATE_SPEC  = ME->R_GATE_SPEC
                                          IF_CSCOR      = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_CROSS ).
  if LT_PRVDR_SCORE_C is initial.
    append LS_SCSOP to CT_SCSOP.
  endif.

endmethod.
method GET_VALID_INDIC.

  data:          LF_INDIC      type        CHAR30,
                 LF_CSCOR      type        ZVCXI_P0SS_CSCOR.
  data:          LT_GATE_SCORE type        /VCXI/VKSR_TT_GATE,
                 LT_GATE_TAPE  type        /VCXI/VKSR_TT_GATE,
                 LT_INDIC      type        ZVCXI_P0SS_TT_INDIC.
  data:          LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_SCORE   type ref to ZCL_VCXI_P0SS_PR_SCORE,
                 LR_PR_MS_TAPE type ref to ZCL_VCXI_P0SS_PR_MS_TAPE.

  check ME->R_GATE_SPEC is bound.

  if IF_IGNORE_SCORE_L eq ABAP_FALSE.
*** Collect all Score Types for length
    LT_GATE_SCORE = ME->GET_PRVDR_SCORE( IR_GATE_SPEC = ME->R_GATE_SPEC
                                         IF_CSCOR     = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH ).

    LT_INDIC = ZCL_VCXI_P0SS_CUST_SCSTR=>GET_TSCOR_INDIC( IT_GATE_SCORE = LT_GATE_SCORE
                                                          IF_CSCOR      = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH ).

    append lines of LT_INDIC to RT_INDIC.
    delete adjacent duplicates from RT_INDIC.
  endif.

  if IF_IGNORE_SCORE_C eq ABAP_FALSE.
*** Collect all Score Types for Cross
    LT_GATE_SCORE = ME->GET_PRVDR_SCORE( IR_GATE_SPEC = ME->R_GATE_SPEC
                                         IF_CSCOR     = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_CROSS ).

    LT_INDIC = ZCL_VCXI_P0SS_CUST_SCSTR=>GET_TSCOR_INDIC( IT_GATE_SCORE = LT_GATE_SCORE
                                                          IF_CSCOR      = ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_CROSS ).

    append lines of LT_INDIC to RT_INDIC.
    delete adjacent duplicates from RT_INDIC.
  endif.

*** Collect all Tape Types
  if IF_IGNORE_TAPE eq ABAP_FALSE.
    LT_GATE_TAPE = ME->GET_PRVDR_TAPE( IR_GATE_SPEC = ME->R_GATE_SPEC ).
    loop at LT_GATE_TAPE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_TAPE.
          check LR_PR_MS_TAPE is bound.
          move LR_PR_MS_TAPE->GET_TTAPE( ) to LF_INDIC.
          collect LF_INDIC into RT_INDIC.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_SCORE.
      endtry.
    endloop.
  endif.

endmethod.
method HANDLE_INIT_REFERENCES.

***------------------------------------------------------------------------------------------------
*** Init Specification Reference
  ME->INIT_PRVDR_SPEC( ).

endmethod.
method INIT_PRVDR_SPEC.

  data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification CR
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_SPEC_CR=>C_IPRVT_PC_SPEC_CR
                                   IF_INUSE = ABAP_TRUE ).
  if LT_GATE is not initial.
    read table LT_GATE into ME->R_GATE_SPEC index 1.
  endif.

  if ME->R_GATE_SPEC is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PCSS_PR_SPEC_CR=>C_IPRVT_PC_SPEC_CR
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

endmethod.
