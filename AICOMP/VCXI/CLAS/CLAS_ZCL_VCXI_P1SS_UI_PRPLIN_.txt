
class ZCL_VCXI_P1SS_UI_PRPLIN definition
  public
  inheriting from ZCL_VCXI_XCS_UI_TAB
  create public .

public section.

  data S_PRPLIN_VIS type ZVCXI_P1SS_S_PRPLIN_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_PPL_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods DEACTIVATE
    redefinition .
protected section.

  data R_PR_PRPLIN type ref to ZCL_VCXI_P1SS_PR_PRPLIN .
  constants C_UC_RLPROP type SYUCOMM value 'PRPLIN_RLPROP' ##NO_TEXT.
  data R_TOOLBAR type ref to ZCL_VCXI_XCS_TOOLBAR_PRVDR .

  methods HANDLE_UC_RLPROP
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_PRPLIN definition
class ZCL_VCXI_P1SS_UI_PRPLIN implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_PRPLIN_BIND'
      exporting
        IR_UI_PRPLIN  = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

***--------------------------------------------------------------------------------------
*** Create Toolbar to add Connection
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TOOLBAR'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_PRPLIN.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class doesn't work together with PR ABAP Class
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,           "#EC NEEDED
          LF_INUSE  type        /VCXI/VKSR_INUSE.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize VIS Structure
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = value #( ( ME->R_OLD_GATE ) ) ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_PRPLIN_VIS  type ZVCXI_P1SS_S_PRPLIN_VIS.


    check ME->R_PR_PRPLIN is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_PRPLIN_VIS.

***--------------------------------------------------------------------------------------
*** Set Web Width
    if ME->S_PRPLIN_VIS-S_WEBWI ne LS_PRPLIN_VIS-S_WEBWI.
      ME->R_PR_PRPLIN->SET_WEBWI( IS_WEBWI = LS_PRPLIN_VIS-S_WEBWI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_RLPROP.
        ME->HANDLE_UC_RLPROP( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_PRPLIN.

  endmethod.
  method HANDLE_UC_RLPROP.

*** Start Popup
    ZCL_VCXI_P5SS_POPUP_RLPROP=>START( IR_BL_RLBPROP = ME->R_PR_PRPLIN->GET_RLBPX( )
                                       IR_BL_RLFPROP = ME->R_PR_PRPLIN->GET_RLFPX( )
                                       IF_WERKS      = ME->R_PR_PRPLIN->GET_WERKS( )
                                       IS_WEBWI      = ME->R_PR_PRPLIN->GET_WEBWI( )
                                       IS_SURWT      = ME->R_PR_PRPLIN->GET_SURWT( ) ).

  endmethod.
  method INIT_VIS.

    free: ME->S_PRPLIN_VIS.
    check ME->R_PR_PRPLIN is bound.


***--------------------------------------------------------------------------------------
*** Board Paper ID
    ME->S_PRPLIN_VIS-BPAID   = ME->R_PR_PRPLIN->GET_BPAID( ).

*** Board Paper Factor
    ME->S_PRPLIN_VIS-BPFAC   = ME->R_PR_PRPLIN->GET_BPFAC( ).

*** Web Width (Outbound)
    ME->S_PRPLIN_VIS-S_WEBWI = ME->R_PR_PRPLIN->GET_WEBWI( ).

*** Repeat Length (Outbound)
    ME->S_PRPLIN_VIS-S_REPLE = ME->R_PR_PRPLIN->GET_REPLE( ).

***--------------------------------------------------------------------------------------
*** Web Width (Outbound)
    ME->S_PRPLIN_VIS-S_IOSEC-S_WEBWI = ME->R_PR_PRPLIN->GET_WEBWI( ).

*** Surface Weight (Outbound)
    ME->S_PRPLIN_VIS-S_IOSEC-S_SURWT = ME->R_PR_PRPLIN->GET_SURWT( ).

*** Number Ups (Outbound)
    ME->S_PRPLIN_VIS-S_IOSEC-NOUPS   = ME->R_PR_PRPLIN->GET_NOUPS( ).

*** Substrate and Caliper (Outbound)
    data(LR_BL_RLFPROP) = ME->R_PR_PRPLIN->GET_RLFPX( ).
    if LR_BL_RLFPROP is bound.
      ME->S_PRPLIN_VIS-S_IOSEC-SBSTR   = LR_BL_RLFPROP->GET_SBSTR( ).
      ME->S_PRPLIN_VIS-S_IOSEC-S_CALIP = LR_BL_RLFPROP->S_CALIP.
    endif.

  endmethod.
