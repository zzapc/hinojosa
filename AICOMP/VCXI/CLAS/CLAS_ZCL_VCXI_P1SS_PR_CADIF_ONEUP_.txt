
class ZCL_VCXI_P1SS_PR_CADIF_ONEUP definition
  public
  inheriting from ZCL_VCXI_PXSS_PR_CADIF_ONEUP
  create public .

public section.
protected section.

  methods FILL_BY_CFG
    importing
      !IR_CADIF_IO type DATA
      !IR_PR_CFG type ref to ZCL_VCXI_P1SS_PR_CFG
    raising
      /VCXI/CX_CKX .
  methods FILL_BY_CRPART
    importing
      !IR_CADIF_IO type DATA
      !IR_PR_CRPART type ref to ZCL_VCXI_P1SS_PR_CRPART
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CFG
    importing
      !IR_PR_CFG type ref to ZCL_VCXI_P1SS_PR_CFG
      !IS_CADIF_IO type ANY
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CRPART
    importing
      !IR_PR_CRPART type ref to ZCL_VCXI_P1SS_PR_CRPART
      !IS_CADIF_IO type ANY
    raising
      /VCXI/CX_CKX .

  methods CREATE_CADIF_IO
    redefinition .
  methods FILL_BY_PARENT
    redefinition .
  methods GET_PRVDR_CSTEP_CLOS
    redefinition .
  methods HANDLE_RECALC_OREVR
    redefinition .
  methods UPDATE_CSTEP_CLOS
    redefinition .
  methods UPDATE_PARENT
    redefinition .
  methods FILL_BY_CSTEP_CLOS
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_PR_CADIF_ONEUP definition
class ZCL_VCXI_P1SS_PR_CADIF_ONEUP implementation.
  method CREATE_CADIF_IO.

*** Create Data Reference
    create data RR_CADIF_IO type ZVCXI_P1SS_S_CADIF_ONEUP_IO.

  endmethod.
  method FILL_BY_CFG.

    data: LS_CADIF_IO type ZVCXI_P1SS_S_CADIF_ONEUP_IO.
    data: LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.
    field-symbols: <S_CADIF_IO> type ANY.


*** Dereferencing and "Cast" I/O Structure
    assign IR_CADIF_IO->* to <S_CADIF_IO>.
    move-corresponding <S_CADIF_IO> to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Get Plant
    LS_CADIF_IO-WERKS = IR_PR_CFG->GET_WERKS( ).

*** Get Fefco
    LS_CADIF_IO-PRSTY = IR_PR_CFG->GET_FEFCO( ).
    LS_CADIF_IO-FCUSD = IR_PR_CFG->CHECK_CUST_DESIGN( ).

*** Get Part of Box
    LS_CADIF_IO-BOXPA = IR_PR_CFG->GET_BOXPA( ).

*** Get Product Dimension
    LS_CADIF_IO-S_PROLE = IR_PR_CFG->GET_PROLE( ).
    LS_CADIF_IO-S_PROWI = IR_PR_CFG->GET_PROWI( ).
    LS_CADIF_IO-S_PROHE = IR_PR_CFG->GET_PROHE( ).
    LS_CADIF_IO-S_PROH2 = IR_PR_CFG->GET_PROH2( ).

*** Get Overlap/Tuck in/Dust Flap
    LS_CADIF_IO-S_OVLAP = IR_PR_CFG->GET_OVLAP( ).
    LS_CADIF_IO-S_FTUCK = IR_PR_CFG->GET_FTUCK( ).
    LS_CADIF_IO-S_FDUST = IR_PR_CFG->GET_FDUST( ).

*** Gap in Flap Top/Botton
    LS_CADIF_IO-S_FGAPT = IR_PR_CFG->GET_FGAPT( ).
    LS_CADIF_IO-S_FGAPB = IR_PR_CFG->GET_FGAPB( ).

*** Get Product Sheet Dimension
    LS_CADIF_IO-S_SHTPW = IR_PR_CFG->GET_SHTPW( ).
    LS_CADIF_IO-S_SHTPL = IR_PR_CFG->GET_SHTPL( ).

*** Get Flute Orientation
    LS_CADIF_IO-FLUTO = IR_PR_CFG->GET_FLUTO( ).

*** Get Cut Out Area
    LS_CADIF_IO-S_COUAR = IR_PR_CFG->GET_COUAR( ).

*** Get Slot Activity, Joint Type, Flute & Caliper (Inbound)
    LR_BL_CRFPROP = IR_PR_CFG->GET_CRFPX( ).
    if LR_BL_CRFPROP is bound.
      LS_CADIF_IO-FASLO       = LR_BL_CRFPROP->F_FASLO.
      LS_CADIF_IO-JOITY       = value #( LR_BL_CRFPROP->T_JOITY[ 1 ] optional ).
      LS_CADIF_IO-FLUTE       = LR_BL_CRFPROP->GET_FLUTE( ).
      LS_CADIF_IO-S_CALIP     = LR_BL_CRFPROP->S_CALIP.
      LS_CADIF_IO-T_PRINT_COM = LR_BL_CRFPROP->T_PRINT.
    endif.

*** Get Board ID (Inbound)
    IR_PR_CFG->GET_BOARD( importing EF_BOARD = LS_CADIF_IO-BOARD
                                    EF_DESCR = LS_CADIF_IO-BOARD_DESCR ).
*** Board ID Suggestion
    LS_CADIF_IO-SUBOA = IR_PR_CFG->GET_SUBOA( importing EF_DESCR = LS_CADIF_IO-SUBOA_DESCR ).

*** Joint Dimensions
    LS_CADIF_IO-JOIPO = IR_PR_CFG->GET_JOIPO( ).
    LS_CADIF_IO-S_JOIWI = IR_PR_CFG->GET_JOIWI( ).
    LS_CADIF_IO-S_JOILE = IR_PR_CFG->GET_JOILE( ).
    LS_CADIF_IO-S_JEXTT = IR_PR_CFG->GET_JEXTT( ).
    LS_CADIF_IO-S_JEXTB = IR_PR_CFG->GET_JEXTB( ).

***------------------------------------------------------------------------------------------------
*** "Cast" I/O Structure back to generic structure
    move-corresponding LS_CADIF_IO to <S_CADIF_IO>.

  endmethod.
  method FILL_BY_CRPART.

    data: LS_CADIF_IO type ZVCXI_P1SS_S_CADIF_ONEUP_IO.
    data: LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.
    field-symbols: <S_CADIF_IO> type ANY.


*** Dereferencing and "Cast" I/O Structure
    assign IR_CADIF_IO->* to <S_CADIF_IO>.
    move-corresponding <S_CADIF_IO> to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Get Plant
    LS_CADIF_IO-WERKS = IR_PR_CRPART->GET_WERKS( ).

*** Get Fefco
    LS_CADIF_IO-PRSTY = IR_PR_CRPART->GET_FEFCO( ).
    LS_CADIF_IO-FCUSD = IR_PR_CRPART->CHECK_CUST_DESIGN( ).

*** Get Part of Box
    LS_CADIF_IO-BOXPA = IR_PR_CRPART->GET_BOXPA( ).

*** Get Product Dimension
    LS_CADIF_IO-S_PROLE = IR_PR_CRPART->GET_PROLE( ).
    LS_CADIF_IO-S_PROWI = IR_PR_CRPART->GET_PROWI( ).
    LS_CADIF_IO-S_PROHE = IR_PR_CRPART->GET_PROHE( ).
    LS_CADIF_IO-S_PROH2 = IR_PR_CRPART->GET_PROH2( ).

*** Get Overlap/Tuck in/Dust Flap
    LS_CADIF_IO-S_OVLAP = IR_PR_CRPART->GET_OVLAP( ).
    LS_CADIF_IO-S_FTUCK = IR_PR_CRPART->GET_FTUCK( ).
    LS_CADIF_IO-S_FDUST = IR_PR_CRPART->GET_FDUST( ).

*** Gap in Flap Top/Botton
    LS_CADIF_IO-S_FGAPT = IR_PR_CRPART->GET_FGAPT( ).
    LS_CADIF_IO-S_FGAPB = IR_PR_CRPART->GET_FGAPB( ).

*** Get Product Sheet Dimension
    LS_CADIF_IO-S_SHTPW = IR_PR_CRPART->GET_SHTPW( ).
    LS_CADIF_IO-S_SHTPL = IR_PR_CRPART->GET_SHTPL( ).

*** Get Flute Orientation
    LS_CADIF_IO-FLUTO = IR_PR_CRPART->GET_FLUTO( ).

*** Get Cut Out Area
    LS_CADIF_IO-S_COUAR = IR_PR_CRPART->GET_COUAR( ).

*** Get Slot Activity, Joint Type, Flute & Caliper (Inbound)
    LR_BL_CRFPROP = IR_PR_CRPART->GET_CRFPX( ).
    if LR_BL_CRFPROP is bound.
      LS_CADIF_IO-FASLO       = LR_BL_CRFPROP->F_FASLO.
      LS_CADIF_IO-JOITY       = value #( LR_BL_CRFPROP->T_JOITY[ 1 ] optional ).
      LS_CADIF_IO-FLUTE       = LR_BL_CRFPROP->GET_FLUTE( ).
      LS_CADIF_IO-S_CALIP     = LR_BL_CRFPROP->S_CALIP.
      LS_CADIF_IO-T_PRINT_COM = LR_BL_CRFPROP->T_PRINT.
    endif.

*** Get Board ID (Inbound)
    IR_PR_CRPART->GET_BOARD( importing EF_BOARD = LS_CADIF_IO-BOARD
                                       EF_DESCR = LS_CADIF_IO-BOARD_DESCR ).
*** Board ID Suggestion
    LS_CADIF_IO-SUBOA = IR_PR_CRPART->GET_SUBOA( importing EF_DESCR = LS_CADIF_IO-SUBOA_DESCR ).

*** Joint Dimensions
    LS_CADIF_IO-JOIPO   = IR_PR_CRPART->GET_JOIPO( ).
    LS_CADIF_IO-S_JOIWI = IR_PR_CRPART->GET_JOIWI( ).
    LS_CADIF_IO-S_JOILE = IR_PR_CRPART->GET_JOILE( ).
    LS_CADIF_IO-S_JEXTT = IR_PR_CRPART->GET_JEXTT( ).
    LS_CADIF_IO-S_JEXTB = IR_PR_CRPART->GET_JEXTB( ).

***------------------------------------------------------------------------------------------------
*** "Cast" I/O Structure back to generic structure
    move-corresponding LS_CADIF_IO to <S_CADIF_IO>.

  endmethod.
  method FILL_BY_CSTEP_CLOS.
*{   INSERT         HEDK933127                                        1
    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.
    data: LR_PR_CSTEP_CLOS type ref to ZCL_VCXI_P1SS_PR_CSTEP_CLOS,
          LR_GATE_CSTEP    type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_CADIF_IO> type ANY.

*** Get Conversion Step Closing Provider
    LR_PR_CSTEP_CLOS ?= ME->GET_PRVDR_CSTEP_CLOS( importing ER_GATE_CSTEP = LR_GATE_CSTEP ).
    check LR_PR_CSTEP_CLOS is bound.

*** Dereferencing and "Cast" I/O Structure
    assign IR_CADIF_IO->* to <S_CADIF_IO>.
    move-corresponding <S_CADIF_IO> to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Set Handling Dimension
    LS_CADIF_IO-S_HNDDIM = LR_PR_CSTEP_CLOS->GET_HNDDIM( ).

***------------------------------------------------------------------------------------------------
*** "Cast" I/O Structure back to generic structure
    move-corresponding LS_CADIF_IO to <S_CADIF_IO>.
*}   INSERT
  endmethod.
  method FILL_BY_PARENT.

    case type of ME->R_GATE->GET_PARENT( )->R_CLSPR.
***   Corrugated FG
      when type ZCL_VCXI_P1SS_PR_CFG into data(LR_PR_CFG).
        ME->FILL_BY_CFG( IR_CADIF_IO = IR_CADIF_IO
                         IR_PR_CFG   = LR_PR_CFG ).

***   Corrugated Part
      when type ZCL_VCXI_P1SS_PR_CRPART into data(LR_PR_CRPART).
        ME->FILL_BY_CRPART( IR_CADIF_IO  = IR_CADIF_IO
                            IR_PR_CRPART = LR_PR_CRPART ).

    endcase.

  endmethod.
  method GET_PRVDR_CSTEP_CLOS.

    data: LF_GCADO type ZVCXI_PXS_GCADO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_CSTEP_CLOS type ref to ZCL_VCXI_P1SS_PR_CSTEP_CLOS.

***--------------------------------------------------------------------------------------
*** Get Conversion Step Closing provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P1SS_PR_CSTEP_CLOS=>C_IPRVT_P1_CSTEP_CLOS
                                     IF_INUSE = ABAP_TRUE ).

*** Get own OneUp GUID
    LF_GCADO = ME->GET_GCADO( ).

***--------------------------------------------------------------------------------------
*** Get Conversion Step Closing Reference
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_CSTEP_CLOS.

***       Check OneUp GUID fits own
          check LR_CSTEP_CLOS->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->F_GCADO eq LF_GCADO.

          check LR_CSTEP_CLOS is bound.
          RR_PR_CSTEP   = LR_CSTEP_CLOS.
          ER_GATE_CSTEP = LR_GATE.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: RR_PR_CSTEP, ER_GATE_CSTEP.
      endtry.
    endloop.

  endmethod.
  method HANDLE_RECALC_OREVR.

    data: LF_OREVR  type ZVCXI_PXS_OREVR.


    case type of ME->R_GATE->GET_PARENT( )->R_CLSPR.
***   Corrugated FG
      when type ZCL_VCXI_P1SS_PR_CFG into data(LR_PR_CFG).
        LF_OREVR = cond #( when LR_PR_CFG->CHECK_CUST_DESIGN( ) eq ABAP_TRUE then ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_OREVR_MANDATORY
                                                                             else ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_OREVR_OPTIONAL ).
***   Corrugated Part
      when type ZCL_VCXI_P1SS_PR_CRPART into data(LR_PR_CRPART).
        LF_OREVR = cond #( when LR_PR_CRPART->CHECK_CUST_DESIGN( ) eq ABAP_TRUE then ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_OREVR_MANDATORY
                                                                                else ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_OREVR_OPTIONAL ).
    endcase.

*** Set Option for Review Request
    ME->SET_OREVR( IF_OREVR = LF_OREVR
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).

  endmethod.
  method UPDATE_CFG.

    data: LS_CADIF_IO type ZVCXI_P1SS_S_CADIF_ONEUP_IO.


*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Set Fefco
    IR_PR_CFG->SET_FEFCO( IF_FEFCO = LS_CADIF_IO-PRSTY
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Part of Box
    IR_PR_CFG->SET_BOXPA( IF_BOXPA = LS_CADIF_IO-BOXPA
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Get Product Dimension
    IR_PR_CFG->SET_PROLE( IS_PROLE = LS_CADIF_IO-S_PROLE
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_PROWI( IS_PROWI = LS_CADIF_IO-S_PROWI
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_PROHE( IS_PROHE = LS_CADIF_IO-S_PROHE
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_PROH2( IS_PROH2 = LS_CADIF_IO-S_PROH2
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Overlap/Tuck in/Dust Flap
    IR_PR_CFG->SET_OVLAP( IS_OVLAP = LS_CADIF_IO-S_OVLAP
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_FTUCK( IS_FTUCK = LS_CADIF_IO-S_FTUCK
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_FDUST( IS_FDUST = LS_CADIF_IO-S_FDUST
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Gap in Flap Top/Botton
    IR_PR_CFG->SET_FGAPT( IS_FGAPT = LS_CADIF_IO-S_FGAPT
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_FGAPB( IS_FGAPB = LS_CADIF_IO-S_FGAPB
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Product Sheet Dimension
    IR_PR_CFG->SET_SHTPW( IS_SHTPW = LS_CADIF_IO-S_SHTPW
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_SHTPL( IS_SHTPL = LS_CADIF_IO-S_SHTPL
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Flute Orientation
    IR_PR_CFG->SET_FLUTO( IF_FLUTO = LS_CADIF_IO-FLUTO
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Cut Out Area
    IR_PR_CFG->SET_COUAR( IS_COUAR = LS_CADIF_IO-S_COUAR
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Joint Dimensions
    IR_PR_CFG->SET_JOIPO( IF_JOIPO = LS_CADIF_IO-JOIPO
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_JOIWI( IS_JOIWI = LS_CADIF_IO-S_JOIWI
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_JEXTT( IS_JEXTT = LS_CADIF_IO-S_JEXTT
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CFG->SET_JEXTB( IS_JEXTB = LS_CADIF_IO-S_JEXTB
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Board ID Suggestion
    IR_PR_CFG->SET_SUBOA( IF_SUBOA = LS_CADIF_IO-SUBOA
                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endmethod.
  method UPDATE_CRPART.

    data: LS_CADIF_IO type ZVCXI_P1SS_S_CADIF_ONEUP_IO.


*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Set Fefco
    IR_PR_CRPART->SET_FEFCO( IF_FEFCO = LS_CADIF_IO-PRSTY
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Part of Box
    IR_PR_CRPART->SET_BOXPA( IF_BOXPA = LS_CADIF_IO-BOXPA
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Product Dimension
    IR_PR_CRPART->SET_PROLE( IS_PROLE = LS_CADIF_IO-S_PROLE
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_PROWI( IS_PROWI = LS_CADIF_IO-S_PROWI
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_PROHE( IS_PROHE = LS_CADIF_IO-S_PROHE
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_PROH2( IS_PROH2 = LS_CADIF_IO-S_PROH2
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Overlap/Tuck in/Dust Flap
    IR_PR_CRPART->SET_OVLAP( IS_OVLAP = LS_CADIF_IO-S_OVLAP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_FTUCK( IS_FTUCK = LS_CADIF_IO-S_FTUCK
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_FDUST( IS_FDUST = LS_CADIF_IO-S_FDUST
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Gap in Flap Top/Botton
    IR_PR_CRPART->SET_FGAPT( IS_FGAPT = LS_CADIF_IO-S_FGAPT
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_FGAPB( IS_FGAPB = LS_CADIF_IO-S_FGAPB
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Product Sheet Dimension
    IR_PR_CRPART->SET_SHTPW( IS_SHTPW = LS_CADIF_IO-S_SHTPW
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_SHTPL( IS_SHTPL = LS_CADIF_IO-S_SHTPL
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Flute Orientation
    IR_PR_CRPART->SET_FLUTO( IF_FLUTO = LS_CADIF_IO-FLUTO
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Cut Out Area
    IR_PR_CRPART->SET_COUAR( IS_COUAR = LS_CADIF_IO-S_COUAR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Joint Dimensions
    IR_PR_CRPART->SET_JOIPO( IF_JOIPO = LS_CADIF_IO-JOIPO
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_JOIWI( IS_JOIWI = LS_CADIF_IO-S_JOIWI
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_JEXTT( IS_JEXTT = LS_CADIF_IO-S_JEXTT
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    IR_PR_CRPART->SET_JEXTB( IS_JEXTB = LS_CADIF_IO-S_JEXTB
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Board ID Suggestion
    IR_PR_CRPART->SET_SUBOA( IF_SUBOA = LS_CADIF_IO-SUBOA
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endmethod.
  method UPDATE_CSTEP_CLOS.

    data: LS_CADIF_IO type ZVCXI_PXSS_S_CADIF_ONEUP_IO.
    data: LR_PR_CSTEP_CLOS type ref to ZCL_VCXI_P1SS_PR_CSTEP_CLOS,
          LR_GATE_CSTEP    type ref to /VCXI/CL_VKSR_GATE.


*** Get Conversion Step Closing Provider
    LR_PR_CSTEP_CLOS ?= ME->GET_PRVDR_CSTEP_CLOS( importing ER_GATE_CSTEP = LR_GATE_CSTEP ).
    check LR_PR_CSTEP_CLOS is bound.

*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LS_CADIF_IO.

***------------------------------------------------------------------------------------------------
*** Set Handling Dimension
    LR_PR_CSTEP_CLOS->SET_HNDDIM( IS_HNDDIM = LS_CADIF_IO-S_HNDDIM
                                  IF_SETBY  = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Update all Joints from I/O Structure
    ME->UPDATE_JOINT( IS_CADIF_IO   = IS_CADIF_IO
                      IR_GATE_CSTEP = LR_GATE_CSTEP ).

  endmethod.
  method UPDATE_PARENT.

    case type of ME->R_GATE->GET_PARENT( )->R_CLSPR.
***   Corrugated FG
      when type ZCL_VCXI_P1SS_PR_CFG into data(LR_PR_CFG).
        ME->UPDATE_CFG( exporting IR_PR_CFG   = LR_PR_CFG
                                  IS_CADIF_IO = IS_CADIF_IO ).

***   Corrugated Part
      when type ZCL_VCXI_P1SS_PR_CRPART into data(LR_PR_CRPART).
        ME->UPDATE_CRPART( exporting IR_PR_CRPART = LR_PR_CRPART
                                     IS_CADIF_IO  = IS_CADIF_IO ).

    endcase.

  endmethod.
