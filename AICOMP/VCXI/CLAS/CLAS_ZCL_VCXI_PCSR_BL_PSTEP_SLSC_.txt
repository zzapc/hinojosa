
class ZCL_VCXI_PCSR_BL_PSTEP_SLSC definition
  public
  inheriting from ZCL_VCXI_P0SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_P0SR_ADJ_PCDIM .
  interfaces ZIF_VCXI_P0SR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  data F_FLUTE type ZVCXI_PCS_FLUTE .
  constants C_IPSTP_SLSC type /VCXI/VSMC_IPSTP value 'PC_PS_SLSC'. "#EC NOTEXT
  data S_PCDIM_IN type ZVCXI_P0SP_S_PCDIM .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_SLSC
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  constants C_IAATY_FLUTE type /VCXI/VSMC_IAATY value 'PC_AA_FLUTE'. "#EC NOTEXT

  methods INIT_BY_SPEC_BOARD
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_SHTPR
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_SLSC
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_PCDIM
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSR_BL_PSTEP_SLSC definition
class ZCL_VCXI_PCSR_BL_PSTEP_SLSC implementation.
method ADD_ASPECTS_TO_RTE_PSTEP.

  data:          LS_RTE_SAVAL  type        /VCXI/VSMR_S_RTE_SAVAL.
  field-symbols: <S_AVVAL>     type        /VCXI/VSMR_S_RTE_RANGE_AVVAL.

***----------------------------------------------------------------------------
*** Get Super
  SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - PC_AA_FLUTE
  try.
      clear LS_RTE_SAVAL.
      append initial line         to LS_RTE_SAVAL-I_AVVAL assigning <S_AVVAL>.
      move 'I'                    to <S_AVVAL>-SIGN.
      move 'EQ'                   to <S_AVVAL>-OPTION.
      move ME->F_FLUTE            to <S_AVVAL>-LOW.

      IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_FLUTE
                                   II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).

    catch /VCXI/CX_CKX.
  endtry.

endmethod.
method ADD_LIMITS_TO_RTE_PSTEP.

  data:          LF_LDUOM         type        /VCXI/VSMC_LDUOM,
                 LF_LDVAL         type        /VCXI/VSMR_LDVAL.
  data:          LI_LVVAL         type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
  data:          LT_LTYPE         type        /VCXI/CKX_TT_OBJECT.
  data:          LR_LTYPE         type ref to /VCXI/CL_VSMC_LTYPE,
                 LR_OBJECT        type ref to /VCXI/IF_CKX_OBJECT.

  SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
  LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
  loop at LT_LTYPE into LR_OBJECT.
    move LR_OBJECT ?to LR_LTYPE.

    free: LF_LDVAL,
          LF_LDUOM,
          LI_LVVAL.

***----------------------------------------------------------------------------
    case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Sheet Length (Inbound)
      when 'P0_LT_DI_SHTLEN'.
        move ME->S_PCDIM_IN-PCLEN     to LF_LDVAL.
        move ME->S_PCDIM_IN-PCLEN_UOM to LF_LDUOM.

***   Sheet Width (Inbound)
      when 'P0_LT_DI_SHTWID'.
        move ME->S_PCDIM_IN-PCWID     to LF_LDVAL.
        move ME->S_PCDIM_IN-PCWID_UOM to LF_LDUOM.

      when others.
        continue.
    endcase.


***----------------------------------------------------------------------------
*** Set
    case LR_LTYPE->F_MLTYP.
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
        IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                    IF_LDVAL = LF_LDVAL
                                    IF_LDUOM = LF_LDUOM ).
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
        IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                    II_LVVAL = LI_LVVAL ).
    endcase.
  endloop.

endmethod.
method COMPARE.

  data:  LR_BL_PSTEP_SLSC type ref to ZCL_VCXI_PCSR_BL_PSTEP_SLSC.

*** Super Compare
  RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
  check RF_SIMILAR eq ABAP_TRUE.

  move IR_BL_PSTEP ?to LR_BL_PSTEP_SLSC.

***----------------------------------------------------------------------------
*** PC Dimensions
  if ME->S_PCDIM_IN  eq LR_BL_PSTEP_SLSC->S_PCDIM_IN  and
     ME->S_PCDIM_OUT eq LR_BL_PSTEP_SLSC->S_PCDIM_OUT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

***----------------------------------------------------------------------------
*** Flut
  if ME->F_FLUTE eq LR_BL_PSTEP_SLSC->F_FLUTE.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                      IF_DATE    = IF_DATE
                      IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
  move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
  ME->INIT_OUTSO( ).

endmethod.
method COPY.

  data:  LR_BL_PSTEP_SLSC type ref to ZCL_VCXI_PCSR_BL_PSTEP_SLSC.

*** Super Copy
  RR_BL_PSTEP = SUPER->COPY( ).
  move RR_BL_PSTEP ?to LR_BL_PSTEP_SLSC.

***----------------------------------------------------------------------------
*** PC Dimensions
  move ME->S_PCDIM_IN    to LR_BL_PSTEP_SLSC->S_PCDIM_IN.
  move ME->S_PCDIM_OUT   to LR_BL_PSTEP_SLSC->S_PCDIM_OUT.

***----------------------------------------------------------------------------
*** Flute
  move ME->F_FLUTE       to LR_BL_PSTEP_SLSC->F_FLUTE.

endmethod.
method DESERIALIZE.

  data:  LF_XML   type STRING.

  check IF_XML is not initial.

*** Deserialize
  call transformation ID
       source xml IF_XML
       result SUPER_XML    = LF_XML

              F_FLUTE      = ME->F_FLUTE

              S_PCDIM_IN   = ME->S_PCDIM_IN
              S_PCDIM_OUT  = ME->S_PCDIM_OUT.

*** Super Deserialize
  SUPER->DESERIALIZE( IF_XML = LF_XML ).

endmethod.
method FILL_SPVRE_ADDON.

  SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     IR_ARBPL       = IR_ARBPL
                           changing  CT_SPVRE       = CT_SPVRE ).

  case IR_SPVRE_ADDON->GET_ID( ).
    when 'PC_AT_SLSC'.
      ME->FILL_SPVRE_ADDON_SLSC( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                           IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                 changing  CT_SPVRE       = CT_SPVRE ).
  endcase.

endmethod.
method FILL_SPVRE_ADDON_SLSC.

  data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_SLSC=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ADDON_SLSC=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
  check CF_ID_GRP   is initial and
        CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
  move 'GRP_CONV' to CF_ID_GRP.
  move 'CONV'     to CF_ID_ARBPL.

*** If Outsourcing
  if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
    move 'GRP_CONV' to CF_ID_GRP.
    move 'OUTSO'    to CF_ID_ARBPL.
  endif.

endmethod.
method GET_SPVRE_ACTVY.

  data:  LS_PARAM        type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_ACTVY  type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity Unitizing
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_SLSC'
                                      IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_ACTVY
    exporting
      IR_SPVCE  = LR_SPVCE
      IR_PARENT = IR_SPVRE_ARBPL.
  append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
  LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ACTVY_SLSC=>C_PARID_PCTYP    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_PCSP_PR_ACTVY_SLSC=>C_PARID_PCWID   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
method INIT_BY_SPEC.

  SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                       IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Board -> Flute
  ME->INIT_BY_SPEC_BOARD( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Sheet Procurement -> Flute
  ME->INIT_BY_SPEC_SHTPR( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
  ME->INIT_BY_SPEC_PCDIM( IT_PRVDR = IT_PRVDR ).

endmethod.
method INIT_BY_SPEC_BOARD.

  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD       type ref to ZCL_VCXI_PCSS_PR_BOARD.

***------------------------------------------------------------------------------------------------
*** Get Board Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
        if LR_PR_BOARD is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_BOARD is bound.

***------------------------------------------------------------------------------------------------
  move LR_PR_BOARD->GET_FLUTE( ) to ME->F_FLUTE.

endmethod.
method INIT_BY_SPEC_PCDIM.

  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_SHTDIM         type ref to ZIF_VCXI_P0SS_SHTDIM,
         LR_PR_SCSTR       type ref to ZCL_VCXI_P0SS_PR_SCSTR.

***------------------------------------------------------------------------------------------------
*** Get Sheet Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_SHTDIM.
        if LR_SHTDIM is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_SHTDIM is bound.

*** Get Score String Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SCSTR.
        if LR_PR_SCSTR               is bound and
           LR_PR_SCSTR->GET_SCSOP( ) eq ZCL_VCXI_PCSS_BL_SCSOP_SLOT=>C_SCSOP_SLOT_SCORE.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_SCSTR is bound.


***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
  ME->S_PCDIM_IN  = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_NETWT ).
  ME->S_PCDIM_OUT = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_NET ).

*** Adjust PC Dimensions based on Score Type
  case LR_PR_SCSTR->GET_CSCOR( ).
    when ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH.    "Length first
***   Keep Trim on Length as removed later
      move ME->S_PCDIM_IN-S_PCLEN to ME->S_PCDIM_OUT-S_PCLEN.
    when ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_CROSS.     "Cross second
***   Trim on Width was already removed
      move ME->S_PCDIM_OUT-S_PCWID to ME->S_PCDIM_IN-S_PCWID.
  endcase.

*** Get PC Type
  ZCL_VCXI_P0SR_CUST_PSTEP=>GET_PSTEP_INFO( exporting IF_IPSTP = ME->F_IPSTP
                                            importing EF_PCTYP = ME->S_PCDIM_OUT-PCTYP ).

*** Get PC Direction from Score String
  move LR_PR_SCSTR->GET_SHTDI( )              to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.
  move ZIF_VCXI_P0SR_PCDIR=>C_PCDOP_MANDATORY to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDOP.

*** Set Direction
  ME->ZIF_VCXI_P0SR_PCDIR~SET_PCDIR( IF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR ).

endmethod.
method INIT_BY_SPEC_SHTPR.

  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_MS_SHTPR    type ref to ZCL_VCXI_PCSS_PR_MS_SHTPR.

***------------------------------------------------------------------------------------------------
*** Get Board Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_SHTPR.
        if LR_PR_MS_SHTPR is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_MS_SHTPR is bound.

***------------------------------------------------------------------------------------------------
  move LR_PR_MS_SHTPR->GET_FLUTE( ) to ME->F_FLUTE.

endmethod.
method SERIALIZE.

*** Super Serialize
  RF_XML = SUPER->SERIALIZE( ).

*** Serialize
  call transformation ID
       source SUPER_XML    = RF_XML

              F_FLUTE      = ME->F_FLUTE

              S_PCDIM_IN   = ME->S_PCDIM_IN
              S_PCDIM_OUT  = ME->S_PCDIM_OUT

       result xml RF_XML.

endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_IN.
endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_OUT.

  field-symbols: <S_PCDIM> type ZVCXI_P0SP_S_PCDIM.

  loop at CT_PCDIM assigning <S_PCDIM>.
    move ME->S_PCDIM_OUT to <S_PCDIM>.
  endloop.

endmethod.
method ZIF_VCXI_P0SR_PCDIR~SET_PCDIR.

  move IF_PCDIR to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
  ME->S_PCDIM_IN  = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_IN
                                    IF_PCDIR = IF_PCDIR ).

*** Turn PC Dimension OUT
  ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                    IF_PCDIR = IF_PCDIR ).

endmethod.
