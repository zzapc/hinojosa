
class ZCL_VCXI_FBSS_UI_FASTD definition
  public
  inheriting from ZCL_VCXI_F0S_UI_TAB
  create public .

public section.

  data F_HN_ACTIVE_TAB type STRING read-only .
  data S_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS read-only .
  data S_FASTD_HANDLE_VIS type ZVCXI_FBSS_S_FASTD_HANDLE_VIS read-only .
  data S_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS read-only .
  data S_FASTD_RECLO_VIS type ZVCXI_FBSS_S_FASTD_RECLO_VIS read-only .
  data S_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS read-only .
  data S_HN_TAB_DESCR type ZVCXI_F0S_S_TAB_DESCR read-only .

  methods CALL_SHLP_CPACK
    returning
      value(RF_CPACK) type ZVCXI_XCSU_CPACK
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_SHSCH
    returning
      value(RF_SHSCH) type ZVCXI_XCSU_SHSCH
    raising
      /VCXI/CX_CKX .
  methods DO_MODIFY_SCREEN_BPART
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR .
  methods DO_MODIFY_SCREEN_HANDLE
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR .
  methods DO_MODIFY_SCREEN_HPART
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR .
  methods DO_MODIFY_SCREEN_MS_EMAT
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR .
  methods DO_MODIFY_SCREEN_MS_FPROC
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR .
  methods DO_MODIFY_SCREEN_RECLO
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR .
  methods DO_PBO_BPART
    raising
      /VCXI/CX_CKX .
  methods DO_PBO_HANDLE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO_HPART
    raising
      /VCXI/CX_CKX .
  methods DO_PBO_RECLO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_FASTD_BPART_VIS
    importing
      !IS_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_FASTD_HANDLE_VIS
    importing
      !IS_FASTD_HANDLE_VIS type ZVCXI_FBSS_S_FASTD_HANDLE_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_FASTD_HPART_VIS
    importing
      !IS_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_FASTD_RECLO_VIS
    importing
      !IS_FASTD_RECLO_VIS type ZVCXI_FBSS_S_FASTD_RECLO_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_FASTD_VIS
    importing
      !IS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_DYNP_BPART
    returning
      value(RS_DYNP) type /VCXI/CKX_S_DYNP_KEY
    raising
      /VCXI/CX_CKX .
  methods GET_DYNP_HN_TAB
    returning
      value(RS_DYNP) type /VCXI/CKX_S_DYNP_KEY
    raising
      /VCXI/CX_CKX .
  methods GET_DYNP_HPART
    returning
      value(RS_DYNP) type /VCXI/CKX_S_DYNP_KEY
    raising
      /VCXI/CX_CKX .
  methods GET_DYNP_TOOLBAR
    returning
      value(RS_DYNP) type /VCXI/CKX_S_DYNP_KEY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods GET_REGISTERED_UI_INFO
    redefinition .
protected section.

  types:
    YT_IBDIM type standard table of ZVCXI_FBS_IBDIM .

  constants C_FCODE_MTS type UI_FUNC value 'MTS' ##NO_TEXT.
  constants C_FCODE_MULTIQTY type UI_FUNC value 'MULTIQTY' ##NO_TEXT.
  constants C_FCODE_RTESPV type UI_FUNC value 'RTESPV' ##NO_TEXT.
  constants C_FCODE_TINFO type UI_FUNC value 'TINFO' ##NO_TEXT.
  constants C_HN_TABPT type ZVCXI_F0S_TABPT value '0400S_HN_TAB-TAB' ##NO_TEXT.
  constants C_UC_BOOSTER type SYUCOMM value 'BOOSTER' ##NO_TEXT.
  constants C_UC_FISTRUC_BPART type SYUCOMM value '0201FASTD_FSTRC' ##NO_TEXT.
  constants C_UC_FISTRUC_HPART type SYUCOMM value '0410FASTD_FSTRC' ##NO_TEXT.
  constants C_UC_FISTRUC_MS_EMAT type SYUCOMM value 'FASTD_FSTRC_MS_EMAT' ##NO_TEXT.
  constants C_UC_FISTRUC_MS_FPROC type SYUCOMM value 'FASTD_FSTRC_MS_FPROC' ##NO_TEXT.
  constants C_UC_OPEN type SYUCOMM value 'FASTD_OPEN' ##NO_TEXT.
  constants C_UC_PROC_BPART type SYUCOMM value '0201FASTD_PROC' ##NO_TEXT.
  constants C_UC_PROC_HPART type SYUCOMM value '0411FASTD_PROC' ##NO_TEXT.
  constants C_UC_PROD_BPART type SYUCOMM value '0202FASTD_PROD' ##NO_TEXT.
  constants C_UC_PROD_HPART type SYUCOMM value '0412FASTD_PROD' ##NO_TEXT.
  constants C_UC_PSCALE type SYUCOMM value 'FASTD_PSCALE' ##NO_TEXT.
  data F_APPL_EVENTS type ABAP_BOOL value ABAP_TRUE ##NO_TEXT.
  data F_SFDAT type ZVCXI_F0SS_SFDAT .
  data F_SFDAT_BPART type ZVCXI_F0SS_SFDAT .
  data F_SFDAT_HPART type ZVCXI_F0SS_SFDAT .
  data R_BL_FASTD type ref to ZCL_VCXI_FBSS_BL_FASTD .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE .
  data R_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE .
  data R_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE .
  data R_GRID_FASTD_INP type ref to ZCL_VCXI_FFSS_GRID_FASTD_INP .
  data R_GRID_FASTD_LAMI type ref to ZCL_VCXI_FFSS_GRID_FASTD_LAMI .
  data R_GRID_FASTD_PRINT type ref to ZCL_VCXI_FFSS_GRID_FASTD_PRINT .
  data R_GRID_MS_RECLO type ref to ZCL_VCXI_FBSS_GRID_MS_RECLO .
  data R_HN_GATE type ref to /VCXI/CL_VKSR_GATE .
  data R_PICTURE_RHNDL type ref to ZCL_VCXI_FFS_PICTURE_RHNDL .
  data R_TOOLBAR type ref to CL_GUI_TOOLBAR .
  data R_TOOLBAR_FASTD type ref to ZCL_VCXI_FBSS_TOOLBAR_FASTD .
  data R_TOOLBAR_HPART type ref to ZCL_VCXI_FBSS_TOOLBAR_HPART .
  data S_DYNP_TAB type /VCXI/CKX_S_DYNP_KEY .
  data S_HN_DYNP_TAB type /VCXI/CKX_S_DYNP_KEY .
  data T_HN_TAB_LIST type ZVCXI_F0S_TT_TAB_LIST .

  methods HANDLE_UC_MTS
    raising
      /VCXI/CX_CKX .
  methods ACTIVATE_BPART
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ACTIVATE_HANDLE
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ACTIVATE_HPART
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ACTIVATE_RECLO
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ADJUST_SCREEN_BY_OBDIM
    importing
      !IT_BGDIM type ZVCXI_FBSSC_TT_BAGTY_BGDIM
      !IT_IBDIM type YT_IBDIM
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods ADJUST_SCREEN_BY_TWICK
    importing
      !IF_TWICK type ZVCXI_FBS_TWICK
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods DEACTIVATE_BPART
    raising
      /VCXI/CX_CKX .
  methods DEACTIVATE_HANDLE
    raising
      /VCXI/CX_CKX .
  methods DEACTIVATE_HPART
    raising
      /VCXI/CX_CKX .
  methods DEACTIVATE_RECLO
    raising
      /VCXI/CX_CKX .
  methods DISPLAY_HN_TAB
    raising
      /VCXI/CX_CKX .
  methods GET_HN_PRVDR_TAB
    returning
      value(RT_PRVDR) type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR_FCODE
    for event FUNCTION_SELECTED of CL_GUI_TOOLBAR
    importing
      !FCODE .
  methods HANDLE_UC_BOOSTER
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FISTRUC_MS_EMAT
    importing
      !IF_UCOMM type SYUCOMM optional
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FISTRUC_MS_FPROC
    importing
      !IF_UCOMM type SYUCOMM optional
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FISTRUC_PART
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_MULTIQTY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OPEN
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_PROC
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_PROD
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_PSCALE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_RTESPV
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_TINFO
    raising
      /VCXI/CX_CKX .
  methods INIT_BPART_VIS
    importing
      !IR_GATE_BPART type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BPART_VIS_BY_BFILM
    importing
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BPART_VIS_BY_BPART
    importing
      !IR_GATE_BPART type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BPART_VIS_BY_FCONO
    importing
      !IR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BPART_VIS_BY_MS_EMAT
    importing
      !IR_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BPART_VIS_BY_MS_FPROC
    importing
      !IR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_HANDLE_VIS
    importing
      !IR_GATE_HANDLE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_HN_TAB_LIST
    raising
      /VCXI/CX_CKX .
  methods INIT_HPART_VIS
    importing
      !IR_GATE_HPART type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_HPART_VIS_BY_BFILM
    importing
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_HPART_VIS_BY_FCONO
    importing
      !IR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_HPART_VIS_BY_HPART
    importing
      !IR_GATE_HPART type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_HPART_VIS_BY_MS_EMAT
    importing
      !IR_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_HPART_VIS_BY_MS_FPROC
    importing
      !IR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_RECLO_VIS
    importing
      !IR_GATE_CSTEP_RECLO type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_TOOLBAR
    raising
      /VCXI/CX_CKX .
  methods INIT_TOOLBAR_FASTD
    importing
      !IR_GATE_BMAKE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    importing
      !IR_GATE_BFG type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_CSTEP_WICKET type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_CSTEP_WIND type ref to /VCXI/CL_VKSR_GATE
      !IR_GATE_BMAKE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS_BY_BFG
    importing
      !IR_GATE_BFG type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS_BY_CSTEP_WICKET
    importing
      !IR_GATE_CSTEP_WICKET type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS_BY_CSTEP_WIND
    importing
      !IR_GATE_CSTEP_WIND type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .
  methods IS_RTESPV_DISABLED
    returning
      value(RF_DISABLED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods PREPARE_IBAGT_CHNAGE
    importing
      !IF_IBAGT_OLD type ZVCXI_FBS_IBAGT
      !IF_IBAGT_NEW type ZVCXI_FBS_IBAGT
    exporting
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods SET_BPART_VIS_TO_BFILM
    importing
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_BPART_VIS_TO_BPART
    importing
      !IR_GATE_BPART type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_BPART_VIS_TO_FCONO
    importing
      !IR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_BPART_VIS_TO_MS_EMAT
    importing
      !IR_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_BPART_VIS_TO_MS_FPROC
    importing
      !IR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_BPART_VIS type ZVCXI_FBSS_S_FASTD_BPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_LCOUT
    importing
      !IR_GATE_CSTEP_RECLO type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_HPART_VIS_TO_BFILM
    importing
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_HPART_VIS_TO_FCONO
    importing
      !IR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_HPART_VIS_TO_HPART
    importing
      !IR_GATE_HPART type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_HPART_VIS_TO_MS_EMAT
    importing
      !IR_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_HPART_VIS_TO_MS_FPROC
    importing
      !IR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_HPART_VIS type ZVCXI_FBSS_S_FASTD_HPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_VIS_TO_BFG
    importing
      !IR_GATE_BFG type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_VIS_TO_CSTEP_WICKET
    importing
      !IR_GATE_CSTEP_WICKET type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_VIS_TO_CSTEP_WIND
    importing
      !IR_GATE_CSTEP_WIND type ref to /VCXI/CL_VKSR_GATE
      !IS_FASTD_VIS type ZVCXI_FBSS_S_FASTD_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_PRVDR_TAB
    redefinition .
  methods OPEN_SUBSCREEN
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSS_UI_FASTD definition
class ZCL_VCXI_FBSS_UI_FASTD implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_FBSS_UI_FASTD_BIND'
      exporting
        IR_UI_FASTD = ME
      importing
        ES_DYNP     = ME->S_DYNP.

***--------------------------------------------------------------------------------------
*** Define if Application Events should be triggered
enhancement-section APPL_EVENT_ON_ACTIVATE spots ZVCXI_FBSS_ES_UI_FASTD .
    move ABAP_TRUE to ME->F_APPL_EVENTS.
end-enhancement-section.

  endmethod.
  method ACTIVATE_BPART.

***--------------------------------------------------------------------------------------
*** Define Screen for Bag Parts
    move ME->S_DYNP-REPID      to ME->S_DYNP_TAB-REPID.
    move '0200'                to ME->S_DYNP_TAB-DYNNR.

***--------------------------------------------------------------------------------------
*** Create Roll Winding Picture
    if ME->R_PICTURE_RHNDL is not bound.
      create object ME->R_PICTURE_RHNDL
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0200CC_PICTURE'.
    endif.

***--------------------------------------------------------------------------------------
*** Create Grid for GRID_FASTD_INP
    if ME->R_GRID_FASTD_INP is not bound.
      create object ME->R_GRID_FASTD_INP
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0201CC_GRID_FASTD_INP'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IR_BL_FASTD       = ME->R_BL_FASTD->R_BL_FASTD_FILM.
    endif.

*** Create Grid for GRID_FASTD_LAMI
    if ME->R_GRID_FASTD_LAMI is not bound.
      create object ME->R_GRID_FASTD_LAMI
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0201CC_GRID_FASTD_LAMI'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IR_BL_FASTD       = ME->R_BL_FASTD->R_BL_FASTD_FILM.
    endif.

*** Create Grid for GRID_FASTD_PRINT
    if ME->R_GRID_FASTD_PRINT is not bound.
      create object ME->R_GRID_FASTD_PRINT
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0201CC_GRID_FASTD_PRINT'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IR_BL_FASTD       = ME->R_BL_FASTD->R_BL_FASTD_FILM.
    endif.

  endmethod.
  method ACTIVATE_HANDLE.

*** Change of Focus
    ME->DEACTIVATE_RECLO( ).

***--------------------------------------------------------------------------------------
*** Define Screen for Conversion Step Reclosing
    move ME->S_DYNP-REPID      to ME->S_DYNP_TAB-REPID.
    move '0400'                to ME->S_DYNP_TAB-DYNNR.

***--------------------------------------------------------------------------------------
*** Create Handle Part Toolbar
    if ME->R_TOOLBAR_HPART is not bound.
      create object ME->R_TOOLBAR_HPART
        exporting
          IR_GATE           = IR_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0400CC_HPART_TOOLBAR'
          IR_BL_FASTD       = ME->R_BL_FASTD
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS.
    endif.

  endmethod.
  method ACTIVATE_HPART.

***--------------------------------------------------------------------------------------
*** Define Screen for Handle Parts
    move ME->S_DYNP-REPID      to ME->S_HN_DYNP_TAB-REPID.
    move '0410'                to ME->S_HN_DYNP_TAB-DYNNR.

***--------------------------------------------------------------------------------------
*** Create Roll Winding Picture
    if ME->R_PICTURE_RHNDL is not bound.
      create object ME->R_PICTURE_RHNDL
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0410CC_PICTURE'.
    endif.

***--------------------------------------------------------------------------------------
*** Create Grid for GRID_FASTD_INP
    if ME->R_GRID_FASTD_INP is not bound.
      create object ME->R_GRID_FASTD_INP
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0410CC_GRID_FASTD_INP'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IR_BL_FASTD       = ME->R_BL_FASTD->R_BL_FASTD_FILM.
    endif.

*** Create Grid for GRID_FASTD_LAMI
    if ME->R_GRID_FASTD_LAMI is not bound.
      create object ME->R_GRID_FASTD_LAMI
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0410CC_GRID_FASTD_LAMI'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IR_BL_FASTD       = ME->R_BL_FASTD->R_BL_FASTD_FILM.
    endif.

*** Create Grid for GRID_FASTD_PRINT
    if ME->R_GRID_FASTD_PRINT is not bound.
      create object ME->R_GRID_FASTD_PRINT
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0410CC_GRID_FASTD_PRINT'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS
          IR_BL_FASTD       = ME->R_BL_FASTD->R_BL_FASTD_FILM.
    endif.

  endmethod.
  method ACTIVATE_RECLO.

*** Change of Focus
    ME->DEACTIVATE_RECLO( ).

***--------------------------------------------------------------------------------------
*** Define Screen for Conversion Step Reclosing
    move ME->S_DYNP-REPID      to ME->S_DYNP_TAB-REPID.
    move '0300'                to ME->S_DYNP_TAB-DYNNR.

***--------------------------------------------------------------------------------------
*** Create Grid for MS_RECLO
    if ME->R_GRID_MS_RECLO is not bound.
      create object ME->R_GRID_MS_RECLO
        exporting
          IR_GATE           = IR_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0300CC_GRID_MS_RECLO'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS.
    endif.

  endmethod.
  method ADJUST_SCREEN_BY_OBDIM.

    data: LF_IBDIM type ZVCXI_FBS_IBDIM,
          LF_INV   type I.
    data: LS_BGDIM type ZVCXI_FBSSC_S_BAGTY_BGDIM.

    move 0 to CS_SCREEN-INVISIBLE.

*** Count invalid IDs of Bag Dimension
    loop at IT_IBDIM into LF_IBDIM.
      read table IT_BGDIM with key IBDIM = LF_IBDIM transporting no fields.
      check SY-SUBRC is not initial.
      add 1 to LF_INV.
    endloop.

*** If all Bag Dimension IDs are invalid don't look any further
    if LINES( IT_IBDIM ) eq LF_INV.
      move 1 to CS_SCREEN-INVISIBLE.
      move 0 to CS_SCREEN-ACTIVE.
      return.
    endif.

*** Continue only if a Group 2 has been defined
    check CS_SCREEN-GROUP2 is not initial.

*** Find the current field from screen and loop on it
    loop at IT_IBDIM into LF_IBDIM where TABLE_LINE cs CS_SCREEN-GROUP2.
      read table IT_BGDIM into LS_BGDIM with key IBDIM = LF_IBDIM.
      if SY-SUBRC is initial.

        case LS_BGDIM-OBDIM.
          when 'M' .
            move 2 to CS_SCREEN-REQUIRED.
            move 1 to CS_SCREEN-INPUT.
            move 1 to CS_SCREEN-ACTIVE.

          when 'O'.
            move 1 to CS_SCREEN-INPUT.
            move 1 to CS_SCREEN-ACTIVE.

        endcase.
        exit.

      else.
        move 0 to CS_SCREEN-INPUT.
        move 1 to CS_SCREEN-OUTPUT.
        move 1 to CS_SCREEN-ACTIVE.
      endif.

    endloop.

  endmethod.
  method ADJUST_SCREEN_BY_TWICK.

    case IF_TWICK.
      when SPACE.
        check SCREEN-GROUP2 eq 'SPO' or
              SCREEN-GROUP2 eq 'WCK'.
        move 1 to SCREEN-INVISIBLE.
        move 0 to SCREEN-ACTIVE.

      when ZCL_VCXI_FBSS_CUST_BAG=>C_TWICK_WIRE.
        check SCREEN-GROUP2 eq 'SPO'.
        move 1 to SCREEN-INVISIBLE.
        move 0 to SCREEN-ACTIVE.

      when ZCL_VCXI_FBSS_CUST_BAG=>C_TWICK_SPOOL.
        check SCREEN-GROUP2 eq 'WCK'.
        move 1 to SCREEN-INVISIBLE.
        move 0 to SCREEN-ACTIVE.
    endcase.

  endmethod.
  method CALL_SHLP_CPACK.

    data: LR_GATE_BFG   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SHIPMGR type ref to ZCL_VCXI_XCSU_PR_SHIPMGR.


*** Get Finished Good Gate
    ME->R_BL_FASTD->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG ).
    check LR_GATE_BFG is bound.

*** Get Shipping Manager Information
    LR_PR_SHIPMGR = cast ZCL_VCXI_FBSS_PR_BFG( LR_GATE_BFG->R_CLSPR )->GET_PRVDR_SHIPMGR( ).
    if LR_PR_SHIPMGR is bound.
      RF_CPACK = LR_PR_SHIPMGR->CALL_SHLP_CPACK( ).
    endif.

  endmethod.
  method CALL_SHLP_SHSCH.

    data: LR_GATE_BFG   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SHIPMGR type ref to ZCL_VCXI_XCSU_PR_SHIPMGR.


*** Get Finished Good Gate
    ME->R_BL_FASTD->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG ).
    check LR_GATE_BFG is bound.

*** Get Shipping Manager Information
    LR_PR_SHIPMGR = cast ZCL_VCXI_FBSS_PR_BFG( LR_GATE_BFG->R_CLSPR )->GET_PRVDR_SHIPMGR( ).
    if LR_PR_SHIPMGR is bound.
      RF_SHSCH = LR_PR_SHIPMGR->CALL_SHLP_SHSCH( ).
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).


*** Create Business Logic Instance
    create object ME->R_BL_FASTD
      exporting
        IR_GATE = ME->R_GATE.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_TOOLBAR.
    endif.

*** Free Container
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions
                               CNTL_ERROR        = 1
                               CNTL_SYSTEM_ERROR = 2
                               others            = 3 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.

***--------------------------------------------------------------------------------------
*** Free Toolbar for Fast Data
    if ME->R_TOOLBAR_FASTD is bound.
      ME->R_TOOLBAR_FASTD->DO_FREE( ).
      clear ME->R_TOOLBAR_FASTD.
    endif.

***--------------------------------------------------------------------------------------
*** Deactivate UI for Bag Part
    ME->DEACTIVATE_BPART( ).

*** Deactivate UI for Handle
    ME->DEACTIVATE_HANDLE( ).

*** Deactivate UI for Conversion Step Reclosing
    ME->DEACTIVATE_RECLO( ).

  endmethod.
  method DEACTIVATE_BPART.

***--------------------------------------------------------------------------------------
*** Free Roll Winding Picture
    if ME->R_PICTURE_RHNDL is bound.
      ME->R_PICTURE_RHNDL->DO_FREE( ).
      clear ME->R_PICTURE_RHNDL.
    endif.

***--------------------------------------------------------------------------------------
*** Free Grids
    if ME->R_GRID_FASTD_INP is bound.
      ME->R_GRID_FASTD_INP->DO_FREE( ).
      clear ME->R_GRID_FASTD_INP.
    endif.

    if ME->R_GRID_FASTD_LAMI is bound.
      ME->R_GRID_FASTD_LAMI->DO_FREE( ).
      clear ME->R_GRID_FASTD_LAMI.
    endif.

    if ME->R_GRID_FASTD_PRINT is bound.
      ME->R_GRID_FASTD_PRINT->DO_FREE( ).
      clear ME->R_GRID_FASTD_PRINT.
    endif.

  endmethod.
  method DEACTIVATE_HANDLE.

***--------------------------------------------------------------------------------------
*** Free Handle Part Toolbar
    if ME->R_TOOLBAR_HPART is bound.
      ME->R_TOOLBAR_HPART->DO_FREE( ).
      clear ME->R_TOOLBAR_HPART.
    endif.

***--------------------------------------------------------------------------------------
*** Deactivate UI for Handle Part
    ME->DEACTIVATE_HPART( ).

*** Deactivate UI for MS Handle Part (PC) (or other registered UI)
    if ME->R_REGISTERED_UI is bound.
      ME->R_REGISTERED_UI->DEACTIVATE( ).
    endif.

  endmethod.
  method DEACTIVATE_HPART.

***--------------------------------------------------------------------------------------
*** Free Roll Winding Picture
    if ME->R_PICTURE_RHNDL is bound.
      ME->R_PICTURE_RHNDL->DO_FREE( ).
      clear ME->R_PICTURE_RHNDL.
    endif.

***--------------------------------------------------------------------------------------
*** Free Grids
    if ME->R_GRID_FASTD_INP is bound.
      ME->R_GRID_FASTD_INP->DO_FREE( ).
      clear ME->R_GRID_FASTD_INP.
    endif.

    if ME->R_GRID_FASTD_LAMI is bound.
      ME->R_GRID_FASTD_LAMI->DO_FREE( ).
      clear ME->R_GRID_FASTD_LAMI.
    endif.

    if ME->R_GRID_FASTD_PRINT is bound.
      ME->R_GRID_FASTD_PRINT->DO_FREE( ).
      clear ME->R_GRID_FASTD_PRINT.
    endif.

  endmethod.
  method DEACTIVATE_RECLO.

***--------------------------------------------------------------------------------------
*** Free Grids
    if ME->R_GRID_MS_RECLO is bound.
      ME->R_GRID_MS_RECLO->DO_FREE( ).
      clear ME->R_GRID_MS_RECLO.
    endif.

  endmethod.
  method DISPLAY_HN_TAB.

    data: LF_CLSUI    type        /VCXI/VKSC_CLSUI.
    data: LS_TAB_LIST type        ZVCXI_XCSP_S_TAB_LIST.
    data: LR_CLSUI    type ref to /VCXI/CL_VKSRU_CLSUI.

*** Check for wrong tab
    if ME->F_HN_ACTIVE_TAB ns ME->C_HN_TABPT.
      clear: ME->R_HN_GATE,
             ME->S_HN_DYNP_TAB.
      exit.
    endif.

***--------------------------------------------------------------------------------------
*** Find Active Tab Gate
    read table ME->T_HN_TAB_LIST into LS_TAB_LIST with key TABNAME = ME->F_HN_ACTIVE_TAB.
    if SY-SUBRC eq 0.
      move LS_TAB_LIST-R_GATE to ME->R_HN_GATE.
    endif.
    check ME->R_HN_GATE is bound.

    clear: ME->S_HN_DYNP_TAB.

***--------------------------------------------------------------------------------------
*** Activate different Screens based on selected Gate
    case ME->R_HN_GATE->F_ID.
      when ME->R_BL_FASTD->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_HPART=>C_IPRVT_HPART ).
***     Activate UI for Handle Part
        ME->ACTIVATE_HPART( IR_GATE = ME->R_HN_GATE ).

      when others.
***     Activate UI for Handle Part in PC
        LF_CLSUI = ME->R_HN_GATE->GET_CLSUI( ).
        if LF_CLSUI is not initial.
          create object LR_CLSUI
            type
              (LF_CLSUI)
            exporting
              IR_UIFW    = ME
              IR_UIGATE  = ME->R_UIGATE
              IR_GATE    = ME->R_HN_GATE.
          LR_CLSUI->ACTIVATE( ).
          move LR_CLSUI->S_DYNP to ME->S_HN_DYNP_TAB.
        else.
          clear ME->S_HN_DYNP_TAB.
        endif.
    endcase.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE,
          LF_TWICK  type ZVCXI_FBS_TWICK.
    data: LT_BGDIM type ZVCXI_FBSSC_TT_BAGTY_BGDIM,
          LT_CSTEP type ZVCXI_FBSSC_TT_BAGTY_CSTEP,
          LT_IBDIM type table of ZVCXI_FBS_IBDIM.
    data: LR_GATE_BFG type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BFG   type ref to ZCL_VCXI_FBSS_PR_BFG,
          LR_CUST_BAG type ref to ZCL_VCXI_FBSS_CUST_BAG,
          LR_CX_CKX   type ref to /VCXI/CX_CKX.
    field-symbols: <S_IBDIM> type ZVCXI_FBS_IBDIM.

    try.
***--------------------------------------------------------------------------------------
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***--------------------------------------------------------------------------------------
***     Get Locked Status
        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Get Finished Good Gate
        ME->R_BL_FASTD->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG ).
        check LR_GATE_BFG is bound.
        move LR_GATE_BFG->R_CLSPR ?to LR_PR_BFG.

***     Get Bag Customizing
        LR_PR_BFG->GET_IBAGT( importing ER_CUST_BAG = LR_CUST_BAG ).
        if LR_CUST_BAG is bound.
          LT_BGDIM = LR_CUST_BAG->GET_BGDIM( ).
          LT_CSTEP = LR_CUST_BAG->GET_CSTEP( ).
        endif.

***     Get Wicket Type
        LR_PR_BFG->GET_TWICK( importing EF_TWICK = LF_TWICK ).

***--------------------------------------------------------------------------------------
        loop at screen.
          case SCREEN-GROUP1.
            when 'GL1'.
              refresh LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GULEF into table LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GURIG into table LT_IBDIM.

              ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM  = LT_IBDIM
                                                    IT_BGDIM  = LT_BGDIM
                                          changing  CS_SCREEN = SCREEN ).
            when 'GL2'.
              refresh LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GUTOP into table LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GUBOT into table LT_IBDIM.

              ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM  = LT_IBDIM
                                                    IT_BGDIM  = LT_BGDIM
                                          changing  CS_SCREEN = SCREEN ).
            when 'FL1'.
              refresh LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_FOTOP into table LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_FOBOT into table LT_IBDIM.

              ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM  = LT_IBDIM
                                                    IT_BGDIM  = LT_BGDIM
                                          changing  CS_SCREEN = SCREEN ).

            when 'OL1'.
              refresh LT_IBDIM.
              insert ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_OLWID into table LT_IBDIM.

              ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM  = LT_IBDIM
                                                    IT_BGDIM  = LT_BGDIM
                                          changing  CS_SCREEN = SCREEN ).

***         Wicket
            when 'WIK'.
              refresh LT_IBDIM.

              insert initial line into table LT_IBDIM assigning <S_IBDIM>.
              move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_WILIP to <S_IBDIM>.

              ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM  = LT_IBDIM
                                                    IT_BGDIM  = LT_BGDIM
                                          changing  CS_SCREEN = SCREEN ).

              ME->ADJUST_SCREEN_BY_TWICK( exporting IF_TWICK  = LF_TWICK
                                          changing  CS_SCREEN = SCREEN ).

***         Winding
            when 'WND'.
              if not LINE_EXISTS( LT_CSTEP[ ICSTP = ZCL_VCXI_FBSS_CUST_BAG=>C_ICSTP_WIND ] ).
                SCREEN-ACTIVE = 0.
              endif.

            when others.
          endcase.

***       Hide Material Description Override Flag if undefined
          if SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_VIS-FOVRR_MAKTX' and
             ME->S_FASTD_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Disable Material Description if generated
          if SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_VIS-MAKTX' and
             ME->S_FASTD_VIS-FOVRR_MAKTX eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

***--------------------------------------------------------------------------------------
***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons and Taps
          if SCREEN-GROUP1 eq 'INF' or
             SCREEN-NAME cs ME->F_TABPT.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN_BPART.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_BPART type ref to ZCL_VCXI_FBSS_PR_BPART,
          LR_CX_CKX   type ref to /VCXI/CX_CKX.

    try.
***     Get Bag Part Reference
        move ME->R_OLD_GATE->R_CLSPR ?to LR_PR_BPART.
        check LR_PR_BPART is bound.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.

          else.
***         Lock fields which should be display-only in non-standard configurations
            if ME->F_SFDAT_BPART ne ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_STANDARD.
              if SCREEN-GROUP3 eq 'NSC'.
                move 0 to SCREEN-INPUT.
              endif.
            endif.

***         Hide Optimization of Slitting if not available
            if SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_BPART_VIS-FOPSL' and
               ME->S_FASTD_BPART_VIS-FOPSL eq ABAP_UNDEFINED.
              SCREEN-INVISIBLE = 1.
              SCREEN-INPUT     = 0.
            endif.

***         Disable Slitting relevant Fields if Slitting is Optimized
            if SCREEN-GROUP1 eq 'SLI' and
               ME->S_FASTD_BPART_VIS-FOPSL eq ABAP_TRUE.
              SCREEN-INPUT = 0.
            endif.

***         Changeable if Override Flag is set.
            case SCREEN-GROUP1.
              when 'OPW'.
                if ME->S_FASTD_BPART_VIS-FOVRR_BPWID eq ABAP_FALSE.
                  move 0 to SCREEN-INPUT.
                else.
                  move 1 to SCREEN-INPUT.
                endif.

              when 'OPL'.
                if ME->S_FASTD_BPART_VIS-FOVRR_BPLEN eq ABAP_FALSE.
                  move 0 to SCREEN-INPUT.
                else.
                  move 1 to SCREEN-INPUT.
                endif.

              when 'OPD'.
***             If only one direction is filled than disable the Bag Part Direction
                if LINES( LR_PR_BPART->GET_ALLOWED_BPDIR( ) ) le 1.
                  move 0 to SCREEN-INPUT.
                else.
                  move 1 to SCREEN-INPUT.
                endif.
            endcase.
          endif.
***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN_HANDLE.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_HANDLE type ref to ZCL_VCXI_FBSS_PR_HANDLE,
          LR_CX_CKX    type ref to /VCXI/CX_CKX.

    try.
***     Get Handle Reference
        move ME->R_OLD_GATE->R_CLSPR ?to LR_PR_HANDLE.
        check LR_PR_HANDLE is bound.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Set the Tabs which aren't in use as invisible.
          if SCREEN-NAME cs ME->C_HN_TABPT.
            read table ME->T_HN_TAB_LIST with key TABNAME = SCREEN-NAME transporting no fields.
            if SY-SUBRC ne 0.
              move 1 to SCREEN-INVISIBLE.
            else.
              move 1 to SCREEN-INPUT.
            endif.
          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN_HPART.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_HPART type ref to ZCL_VCXI_FBSS_PR_HPART,
          LR_CX_CKX   type ref to /VCXI/CX_CKX.

    try.
***     Get Handle Part Reference
        move ME->R_HN_GATE->R_CLSPR ?to LR_PR_HPART.
        check LR_PR_HPART is bound.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.

          else.
***         Lock fields which should be display-only in non-standard configurations
            if ME->F_SFDAT_HPART ne ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_STANDARD.
              if SCREEN-GROUP3 eq 'NSC'.
                move 0 to SCREEN-INPUT.
              endif.
            endif.

***         Hide Optimization of Slitting if not available
            if SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_HPART_VIS-FOPSL' and
               ME->S_FASTD_HPART_VIS-FOPSL eq ABAP_UNDEFINED.
              SCREEN-INVISIBLE = 1.
              SCREEN-INPUT     = 0.
            endif.

***         Disable Slitting relevant Fields if Slitting is Optimized
            if SCREEN-GROUP1 eq 'SLI' and
               ME->S_FASTD_HPART_VIS-FOPSL eq ABAP_TRUE.
              SCREEN-INPUT = 0.
            endif.

          endif.
***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN_MS_EMAT.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_MS_EMAT type ref to ZCL_VCXI_FFSS_PR_MS_EMAT,
          LR_CX_CKX     type ref to /VCXI/CX_CKX.

    try.
***     Get Film Procurement Reference
        move ME->R_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
        check LR_PR_MS_EMAT is bound.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          if SCREEN-GROUP1                eq 'DUM'.
            move 0 to SCREEN-INPUT.
          endif.

***       Check Open Supervisor is allowed for Film Procurement
          if SCREEN-NAME eq '0202BTN_OPEN' or
             SCREEN-NAME eq '0412BTN_OPEN'.
            if LR_PR_MS_EMAT->IS_DUMMY( ) eq ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Check Open Supervisor is allowed for Estimation Material
          if SCREEN-NAME eq '0203BTN_OPEN' or
             SCREEN-NAME eq '0413BTN_OPEN'.
            if LR_PR_MS_EMAT->IS_OPENSPV_ALLOWED( ) ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Check Gusset is allowed
          if LR_PR_MS_EMAT->IS_GUSSET_ALLOWED( ) ne ABAP_TRUE.
            if SCREEN-GROUP2 eq 'GUS'.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN_MS_FPROC.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_CX_CKX      type ref to /VCXI/CX_CKX.

    try.
***     Get Film Procurement Reference
        move ME->R_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
        check LR_PR_MS_FPROC is bound.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          if LR_PR_MS_FPROC->IS_DUMMY( ) eq ABAP_FALSE.
            if SCREEN-GROUP1                eq 'DUM'.
              move 0 to SCREEN-INPUT.
            endif.
          else.
***         If Dummy Material set the Purchased Flag
            if SCREEN-GROUP1                eq 'PUR'.
              move 0 to SCREEN-INPUT.
            endif.
          endif.


***       Hide Material Description Override Flag if undefined
          if ( SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_BPART_VIS-FOVRR_MAKTX' and
               ME->S_FASTD_BPART_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED ) or
             ( SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_HPART_VIS-FOVRR_MAKTX' and
               ME->S_FASTD_HPART_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED ).
            move 0 to SCREEN-ACTIVE.
          endif.

***       Disable Material Description if generated
          if ( SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_BPART_VIS-MATNR_DESCR' and
               ME->S_FASTD_BPART_VIS-FOVRR_MAKTX eq ABAP_FALSE ) or
             ( SCREEN-NAME eq 'ZVCXI_FBSS_S_FASTD_HPART_VIS-MATNR_DESCR' and
               ME->S_FASTD_HPART_VIS-FOVRR_MAKTX eq ABAP_FALSE ).
            move 0 to SCREEN-INPUT.
          endif.


***       Hide Purchasing Infos (e.g Vendor) if not purchased
          if SCREEN-GROUP2 eq 'APU'.  "Acitve Purchasing
            case LR_PR_MS_FPROC->GET_PURCH( ).
              when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
                if SCREEN-GROUP3 eq 'PSC'. "Price Scale
                  move 1 to SCREEN-INVISIBLE.
                  move 0 to SCREEN-ACTIVE.
                endif.
            endcase.
          endif.

***       Check Open Supervisor is allowed
          if SCREEN-NAME eq '0202BTN_OPEN' or
             SCREEN-NAME eq '0412BTN_OPEN'.
            if LR_PR_MS_FPROC->IS_DUMMY( ) eq ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Check Gusset is allowed
          if LR_PR_MS_FPROC->IS_GUSSET_ALLOWED( ) ne ABAP_TRUE.
            if SCREEN-GROUP2 eq 'GUS'.
              move 0 to SCREEN-ACTIVE.
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN_RECLO.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_CSTEP_RECLO type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO,
          LR_CX_CKX         type ref to /VCXI/CX_CKX.

    try.
***     Get Conversion Step Reclosing Reference
        move ME->R_OLD_GATE->R_CLSPR ?to LR_PR_CSTEP_RECLO.
        check LR_PR_CSTEP_RECLO is bound.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    data: LF_SFDAT             type        ZVCXI_F0SS_SFDAT.
    data: LT_PRVDR_SELECTED    type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE_BFG          type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_CSTEP_WICKET type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_CSTEP_WIND   type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_BMAKE        type ref to /VCXI/CL_VKSR_GATE.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar
    ME->INIT_CONTAINER( ).
    ME->INIT_TOOLBAR( ).

***--------------------------------------------------------------------------------------
*** Get Finished Good Gate
    ME->R_BL_FASTD->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG
                                            EF_SFDAT    = ME->F_SFDAT ).

*** Get Conversion Step Wicketing Gate
    ME->R_BL_FASTD->GET_GATE_CSTEP_WICKET( exporting IR_GATE_BFG          = LR_GATE_BFG
                                           importing ER_GATE_CSTEP_WICKET = LR_GATE_CSTEP_WICKET
                                                     EF_SFDAT             = LF_SFDAT ).
    if LF_SFDAT eq ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_NONSTANDARD.
      move LF_SFDAT to ME->F_SFDAT.
    endif.

*** Get Conversion Step Winding Gate
    ME->R_BL_FASTD->GET_GATE_CSTEP_WIND( exporting IR_GATE_BFG        = LR_GATE_BFG
                                         importing ER_GATE_CSTEP_WIND = LR_GATE_CSTEP_WIND
                                                   EF_SFDAT           = LF_SFDAT ).
    if LF_SFDAT eq ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_NONSTANDARD.
      move LF_SFDAT to ME->F_SFDAT.
    endif.

*** Get Bag Making Gate
    ME->R_BL_FASTD->GET_GATE_BMAKE( importing ER_GATE_BMAKE = LR_GATE_BMAKE
                                              EF_SFDAT      = LF_SFDAT ).
    if LF_SFDAT eq ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_NONSTANDARD.
      move LF_SFDAT to ME->F_SFDAT.
    endif.

***--------------------------------------------------------------------------------------
*** Initialize Visualization Structure
    ME->INIT_VIS( IR_GATE_BFG          = LR_GATE_BFG
                  IR_GATE_CSTEP_WICKET = LR_GATE_CSTEP_WICKET
                  IR_GATE_CSTEP_WIND   = LR_GATE_CSTEP_WIND
                  IR_GATE_BMAKE        = LR_GATE_BMAKE ).

*** Initialize Toolbar
    ME->INIT_TOOLBAR_FASTD( IR_GATE_BMAKE = LR_GATE_BMAKE ).
    if ME->R_TOOLBAR_FASTD is bound.
      append ME->R_OLD_GATE to LT_PRVDR_SELECTED.
      ME->R_TOOLBAR_FASTD->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = LT_PRVDR_SELECTED ).
    endif.

  endmethod.
  method DO_PBO_BPART.

    data: LR_GATE_BFILM  type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Get Fast Data Information from Bag Part
    ME->R_BL_FASTD->GET_FASTD_BY_PART( exporting IR_GATE_PART     = ME->R_OLD_GATE
                                       importing ET_FASTD_INP     = ME->R_GRID_FASTD_INP->T_FASTD_INP
                                                 ET_FASTD_LAMI    = ME->R_GRID_FASTD_LAMI->T_FASTD_LAMI
                                                 EF_SFDAT         = ME->F_SFDAT_BPART
                                                 EF_NOOUT         = ME->S_FASTD_BPART_VIS-NOOUT
                                                 ES_TRWID         = ME->S_FASTD_BPART_VIS-S_TRWID_SLB
                                                 ER_GATE_BFILM    = LR_GATE_BFILM
                                                 ER_GATE_FCONO    = ME->R_GATE_FCONO
                                                 ER_GATE_MS_FPROC = ME->R_GATE_MS_FPROC
                                                 ER_GATE_MS_EMAT  = ME->R_GATE_MS_EMAT ).

***--------------------------------------------------------------------------------------
*** Initialize Visualization Structure for Bag Parts
    ME->INIT_BPART_VIS( IR_GATE_BPART    = ME->R_OLD_GATE
                        IR_GATE_BFILM    = LR_GATE_BFILM
                        IR_GATE_FCONO    = ME->R_GATE_FCONO
                        IR_GATE_MS_FPROC = ME->R_GATE_MS_FPROC
                        IR_GATE_MS_EMAT  = ME->R_GATE_MS_EMAT ).

    move LINES( ME->R_GRID_FASTD_INP->T_FASTD_INP ) to ME->S_FASTD_BPART_VIS-NOFIL.

***--------------------------------------------------------------------------------------
*** Refresh Winding Picture
    ME->R_PICTURE_RHNDL->REFRESH_PICTURE( IF_EYEMP = ME->S_FASTD_BPART_VIS-EYEMP
                                          IF_RWDIR = ME->S_FASTD_BPART_VIS-RWDIR
                                          IF_RWSID = ME->S_FASTD_BPART_VIS-RWSID ).

***--------------------------------------------------------------------------------------
*** Refresh Input Film Grid
    move ABAP_TRUE           to ME->R_GRID_FASTD_INP->F_REFRESH_REQ.
    move ME->F_SFDAT_BPART   to ME->R_GRID_FASTD_INP->F_SFDAT.
    move ME->R_GATE_FCONO    to ME->R_GRID_FASTD_INP->R_GATE_OUT.
    ME->R_GRID_FASTD_INP->REFRESH_GRID( ).

*** Refresh Lamination Grid
    move ABAP_TRUE           to ME->R_GRID_FASTD_LAMI->F_REFRESH_REQ.
    move ME->F_SFDAT_BPART   to ME->R_GRID_FASTD_LAMI->F_SFDAT.
    move ME->R_GATE_FCONO    to ME->R_GRID_FASTD_LAMI->R_GATE_OUT.
    ME->R_GRID_FASTD_LAMI->REFRESH_GRID( ).

*** Refresh Printing Grid
    move ME->R_GRID_FASTD_INP->T_FASTD_INP   to ME->R_GRID_FASTD_PRINT->T_FASTD_INP.
    move ME->R_GRID_FASTD_LAMI->T_FASTD_LAMI to ME->R_GRID_FASTD_PRINT->T_FASTD_LAMI.
    move ABAP_TRUE                           to ME->R_GRID_FASTD_PRINT->F_REFRESH_REQ.
    move ME->F_SFDAT_BPART                   to ME->R_GRID_FASTD_PRINT->F_SFDAT.
    move ME->R_GATE_FCONO                    to ME->R_GRID_FASTD_PRINT->R_GATE_OUT.
    ME->R_GRID_FASTD_PRINT->REFRESH_GRID( ).

  endmethod.
  method DO_PBO_HANDLE.

    data: LT_PRVDR_SELECTED type /VCXI/VKSR_TT_GATE.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_HANDLE_VIS( IR_GATE_HANDLE = ME->R_OLD_GATE ).

***--------------------------------------------------------------------------------------
*** Update Tabs
    ME->INIT_HN_TAB_LIST( ).
    ME->DISPLAY_HN_TAB( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar and provide active tab as Selected Provider (for inserting/deletion)
    append ME->R_HN_GATE to LT_PRVDR_SELECTED.
    ME->R_TOOLBAR_HPART->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = LT_PRVDR_SELECTED ).

  endmethod.
  method DO_PBO_HPART.

    data: LR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Get Fast Data Information from Handle Part
    ME->R_BL_FASTD->GET_FASTD_BY_PART( exporting IR_GATE_PART     = ME->R_HN_GATE
                                       importing ET_FASTD_INP     = ME->R_GRID_FASTD_INP->T_FASTD_INP
                                                 ET_FASTD_LAMI    = ME->R_GRID_FASTD_LAMI->T_FASTD_LAMI
                                                 EF_SFDAT         = ME->F_SFDAT_HPART
                                                 EF_NOOUT         = ME->S_FASTD_HPART_VIS-NOOUT
                                                 ES_TRWID         = ME->S_FASTD_HPART_VIS-S_TRWID_SLB
                                                 ER_GATE_BFILM    = LR_GATE_BFILM
                                                 ER_GATE_FCONO    = ME->R_GATE_FCONO
                                                 ER_GATE_MS_FPROC = ME->R_GATE_MS_FPROC
                                                 ER_GATE_MS_EMAT = ME->R_GATE_MS_EMAT ).

***--------------------------------------------------------------------------------------
*** Initialize Visualization Structure for Handle Parts
    ME->INIT_HPART_VIS( IR_GATE_HPART    = ME->R_HN_GATE
                        IR_GATE_BFILM    = LR_GATE_BFILM
                        IR_GATE_FCONO    = ME->R_GATE_FCONO
                        IR_GATE_MS_FPROC = ME->R_GATE_MS_FPROC
                        IR_GATE_MS_EMAT  = ME->R_GATE_MS_EMAT ).

    move LINES( ME->R_GRID_FASTD_INP->T_FASTD_INP ) to ME->S_FASTD_HPART_VIS-NOFIL.

***--------------------------------------------------------------------------------------
*** Refresh Winding Picture
    ME->R_PICTURE_RHNDL->REFRESH_PICTURE( IF_EYEMP = ME->S_FASTD_HPART_VIS-EYEMP
                                          IF_RWDIR = ME->S_FASTD_HPART_VIS-RWDIR
                                          IF_RWSID = ME->S_FASTD_HPART_VIS-RWSID ).

***--------------------------------------------------------------------------------------
*** Refresh Input Film Grid
    move ABAP_TRUE           to ME->R_GRID_FASTD_INP->F_REFRESH_REQ.
    move ME->F_SFDAT_HPART   to ME->R_GRID_FASTD_INP->F_SFDAT.
    move ME->R_GATE_FCONO    to ME->R_GRID_FASTD_INP->R_GATE_OUT.
    ME->R_GRID_FASTD_INP->REFRESH_GRID( ).

*** Refresh Lamination Grid
    move ABAP_TRUE           to ME->R_GRID_FASTD_LAMI->F_REFRESH_REQ.
    move ME->F_SFDAT_HPART   to ME->R_GRID_FASTD_LAMI->F_SFDAT.
    move ME->R_GATE_FCONO    to ME->R_GRID_FASTD_LAMI->R_GATE_OUT.
    ME->R_GRID_FASTD_LAMI->REFRESH_GRID( ).

*** Refresh Printing Grid
    move ME->R_GRID_FASTD_INP->T_FASTD_INP   to ME->R_GRID_FASTD_PRINT->T_FASTD_INP.
    move ME->R_GRID_FASTD_LAMI->T_FASTD_LAMI to ME->R_GRID_FASTD_PRINT->T_FASTD_LAMI.
    move ABAP_TRUE                           to ME->R_GRID_FASTD_PRINT->F_REFRESH_REQ.
    move ME->R_GATE_FCONO                    to ME->R_GRID_FASTD_PRINT->R_GATE_OUT.
    move ME->F_SFDAT_HPART                   to ME->R_GRID_FASTD_PRINT->F_SFDAT.
    ME->R_GRID_FASTD_PRINT->REFRESH_GRID( ).

  endmethod.
  method DO_PBO_RECLO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_RECLO_VIS( IR_GATE_CSTEP_RECLO = ME->R_OLD_GATE ).

*** Initialize MS_RECLO Grid
    if ME->R_GRID_MS_RECLO is bound.
      if ME->R_GRID_MS_RECLO->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_MS_RECLO->F_REFRESH_REQ.
      endif.
      ME->R_GRID_MS_RECLO->REFRESH_GRID( ).
    endif.

***--------------------------------------------------------------------------------------
*** Define DropDown Values for Cutout Location
    ME->SET_DDVAL_LCOUT( IR_GATE_CSTEP_RECLO = ME->R_OLD_GATE ).

  endmethod.
  method DO_UPDATE_FASTD_BPART_VIS.

    data: LR_GATE_BFILM  type ref to /VCXI/CL_VKSR_GATE.

    check ME->R_OLD_GATE is bound.

***--------------------------------------------------------------------------------------
*** Grids for Fast Data of Film
    if ME->R_GRID_FASTD_INP is bound.
      ME->R_GRID_FASTD_INP->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_FASTD_LAMI is bound.
      ME->R_GRID_FASTD_LAMI->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_FASTD_PRINT is bound.
      ME->R_GRID_FASTD_PRINT->CHECK_CHANGED_DATA( ).
    endif.

***--------------------------------------------------------------------------------------
*** Get Bag Films of Bag Part
    ME->R_BL_FASTD->GET_GATE_BFILM( exporting IR_GATE_PART  = ME->R_OLD_GATE
                                    importing ER_GATE_BFILM = LR_GATE_BFILM ).

    ME->SET_BPART_VIS_TO_BPART( IR_GATE_BPART      = ME->R_OLD_GATE
                                IS_FASTD_BPART_VIS = IS_FASTD_BPART_VIS ).


    ME->SET_BPART_VIS_TO_BFILM( IR_GATE_BFILM      = LR_GATE_BFILM
                                IS_FASTD_BPART_VIS = IS_FASTD_BPART_VIS ).

***--------------------------------------------------------------------------------------
*** Set to Film Procurement
    if ME->R_GATE_MS_FPROC is bound.
      ME->SET_BPART_VIS_TO_MS_FPROC( IR_GATE_MS_FPROC   = ME->R_GATE_MS_FPROC
                                     IS_FASTD_BPART_VIS = IS_FASTD_BPART_VIS ).
    endif.

*** Set to Estimation Material
    if ME->R_GATE_MS_EMAT is bound.
      ME->SET_BPART_VIS_TO_MS_EMAT( IR_GATE_MS_EMAT    = ME->R_GATE_MS_EMAT
                                    IS_FASTD_BPART_VIS = IS_FASTD_BPART_VIS ).
    endif.

*** Set Film Connection
    if ME->R_GATE_FCONO is bound.
      ME->SET_BPART_VIS_TO_FCONO( IR_GATE_FCONO      = ME->R_GATE_FCONO
                                  IS_FASTD_BPART_VIS = IS_FASTD_BPART_VIS ).
    endif.

  endmethod.
  method DO_UPDATE_FASTD_HANDLE_VIS.

    data:  LR_PR_HANDLE   type ref to ZCL_VCXI_FBSS_PR_HANDLE.

***--------------------------------------------------------------------------------------
*** Get Handle Reference
    move ME->R_OLD_GATE->R_CLSPR ?to LR_PR_HANDLE.
    check LR_PR_HANDLE is bound.

***--------------------------------------------------------------------------------------
*** Cutout Location
    if ME->S_FASTD_HANDLE_VIS-LCOUT ne IS_FASTD_HANDLE_VIS-LCOUT.
      LR_PR_HANDLE->SET_LCOUT( IF_LCOUT = IS_FASTD_HANDLE_VIS-LCOUT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Handle Location
    if ME->S_FASTD_HANDLE_VIS-LHNDL ne IS_FASTD_HANDLE_VIS-LHNDL.
      LR_PR_HANDLE->SET_LHNDL( IF_LHNDL = IS_FASTD_HANDLE_VIS-LHNDL
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Cutout Area
    if ME->S_FASTD_HANDLE_VIS-S_COARE ne IS_FASTD_HANDLE_VIS-S_COARE.
      LR_PR_HANDLE->SET_COARE( IS_COARE = IS_FASTD_HANDLE_VIS-S_COARE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_UPDATE_FASTD_HPART_VIS.

    data: LF_SLIT_OLD type        ABAP_BOOL,
          LF_SLIT_NEW type        ABAP_BOOL.
    data: LR_GATE_BFILM  type ref to /VCXI/CL_VKSR_GATE.

    check ME->R_HN_GATE is bound.

***--------------------------------------------------------------------------------------
*** Grids for Fast Data of Film
    if ME->R_GRID_FASTD_INP is bound.
      ME->R_GRID_FASTD_INP->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_FASTD_LAMI is bound.
      ME->R_GRID_FASTD_LAMI->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_FASTD_PRINT is bound.
      ME->R_GRID_FASTD_PRINT->CHECK_CHANGED_DATA( ).
    endif.

***--------------------------------------------------------------------------------------
*** Get Bag Films of Handle Part
    ME->R_BL_FASTD->GET_GATE_BFILM( exporting IR_GATE_PART  = ME->R_HN_GATE
                                    importing ER_GATE_BFILM = LR_GATE_BFILM ).

    ME->SET_HPART_VIS_TO_HPART( IR_GATE_HPART      = ME->R_HN_GATE
                                IS_FASTD_HPART_VIS = IS_FASTD_HPART_VIS ).

    ME->SET_HPART_VIS_TO_BFILM( IR_GATE_BFILM      = LR_GATE_BFILM
                                IS_FASTD_HPART_VIS = IS_FASTD_HPART_VIS ).


***--------------------------------------------------------------------------------------
    if ME->R_GATE_MS_FPROC is bound.
      ME->SET_HPART_VIS_TO_MS_FPROC( IR_GATE_MS_FPROC   = ME->R_GATE_MS_FPROC
                                     IS_FASTD_HPART_VIS = IS_FASTD_HPART_VIS ).
    endif.
    if ME->R_GATE_MS_EMAT is bound.
      ME->SET_HPART_VIS_TO_MS_EMAT( IR_GATE_MS_EMAT    = ME->R_GATE_MS_EMAT
                                    IS_FASTD_HPART_VIS = IS_FASTD_HPART_VIS ).
    endif.
    if ME->R_GATE_FCONO is bound.
      ME->SET_HPART_VIS_TO_FCONO( IR_GATE_FCONO      = ME->R_GATE_FCONO
                                  IS_FASTD_HPART_VIS = IS_FASTD_HPART_VIS ).
    endif.

  endmethod.
  method DO_UPDATE_FASTD_RECLO_VIS.

    data:  LR_PR_CSTEP_RECLO   type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Get Conversion Step Reclosing Reference
    move ME->R_OLD_GATE->R_CLSPR ?to LR_PR_CSTEP_RECLO.
    check LR_PR_CSTEP_RECLO is bound.

***--------------------------------------------------------------------------------------
*** Reclosing Type
    if ME->S_FASTD_RECLO_VIS-TRECL ne IS_FASTD_RECLO_VIS-TRECL.
      LR_PR_CSTEP_RECLO->SET_TRECL( IF_TRECL = IS_FASTD_RECLO_VIS-TRECL
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Reclosing Location
    if ME->S_FASTD_RECLO_VIS-LRECL ne IS_FASTD_RECLO_VIS-LRECL.
      LR_PR_CSTEP_RECLO->SET_LRECL( IF_LRECL = IS_FASTD_RECLO_VIS-LRECL
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Cutout Location
    if ME->S_FASTD_RECLO_VIS-LCOUT ne IS_FASTD_RECLO_VIS-LCOUT.
      LR_PR_CSTEP_RECLO->SET_LCOUT( IF_LCOUT = IS_FASTD_RECLO_VIS-LCOUT
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Cutout Area
    if ME->S_FASTD_RECLO_VIS-S_COARE ne IS_FASTD_RECLO_VIS-S_COARE.
      LR_PR_CSTEP_RECLO->SET_COARE( IS_COARE = IS_FASTD_RECLO_VIS-S_COARE
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_UPDATE_FASTD_VIS.

    data: LF_SFDAT             type        ZVCXI_F0SS_SFDAT.
    data: LR_GATE_BFG          type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_CSTEP_WICKET type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_CSTEP_WIND   type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** If Bag Type changes, remove all Bag Part and Handle Infos that later will not be used
    if IS_FASTD_VIS-IBAGT ne ME->S_FASTD_VIS-IBAGT.
      ME->PREPARE_IBAGT_CHNAGE( exporting IF_IBAGT_OLD = ME->S_FASTD_VIS-IBAGT
                                          IF_IBAGT_NEW = IS_FASTD_VIS-IBAGT
                                importing EF_SFDAT     = LF_SFDAT ).

      if LF_SFDAT ne ZCL_VCXI_FBSS_BL_FASTD=>C_SFDAT_STANDARD.
***     Structural changes are not allowed, due to non-standard configuration.
        message id 'ZVCXI_FFSS' type 'W' number 501.
        exit.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get Finished Good Gate
    ME->R_BL_FASTD->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG ).
    if LR_GATE_BFG is bound.
***   Set Values to Bag Finished Good
      ME->SET_VIS_TO_BFG( IR_GATE_BFG  = LR_GATE_BFG
                          IS_FASTD_VIS = IS_FASTD_VIS ).
    endif.

***--------------------------------------------------------------------------------------
*** Get Conversion Step Wicketing Gate
    ME->R_BL_FASTD->GET_GATE_CSTEP_WICKET( exporting IR_GATE_BFG          = LR_GATE_BFG
                                           importing ER_GATE_CSTEP_WICKET = LR_GATE_CSTEP_WICKET ).
    if LR_GATE_CSTEP_WICKET is bound.
***   Set Values to Conversion Step Wicketing
      ME->SET_VIS_TO_CSTEP_WICKET( IR_GATE_CSTEP_WICKET = LR_GATE_CSTEP_WICKET
                                   IS_FASTD_VIS         = IS_FASTD_VIS ).
    endif.

*** Get Conversion Step Winding Gate
    ME->R_BL_FASTD->GET_GATE_CSTEP_WIND( exporting IR_GATE_BFG        = LR_GATE_BFG
                                         importing ER_GATE_CSTEP_WIND = LR_GATE_CSTEP_WIND ).
    if LR_GATE_CSTEP_WIND is bound.
***   Set Values to Conversion Step Winding
      ME->SET_VIS_TO_CSTEP_WIND( IR_GATE_CSTEP_WIND = LR_GATE_CSTEP_WIND
                                 IS_FASTD_VIS       = IS_FASTD_VIS ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

***--------------------------------------------------------------------------------------
*** User Command on Tabs of Handle
    if IF_UCOMM cs ME->C_HN_TABPT.
      move IF_UCOMM to ME->F_HN_ACTIVE_TAB.
    endif.

***--------------------------------------------------------------------------------------
*** Grids for Fast Data of Film
    if ME->R_GRID_FASTD_INP is bound.
      ME->R_GRID_FASTD_INP->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_FASTD_LAMI is bound.
      ME->R_GRID_FASTD_LAMI->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_FASTD_PRINT is bound.
      ME->R_GRID_FASTD_PRINT->CHECK_CHANGED_DATA( ).
    endif.

***--------------------------------------------------------------------------------------
*** Handle User Commands
    case IF_UCOMM.
      when C_UC_FISTRUC_BPART.
        ME->HANDLE_UC_FISTRUC_PART( IR_GATE_PART = ME->R_OLD_GATE ).
      when C_UC_FISTRUC_HPART.
        ME->HANDLE_UC_FISTRUC_PART( IR_GATE_PART = ME->R_HN_GATE ).

      when C_UC_FISTRUC_MS_FPROC.
        ME->HANDLE_UC_FISTRUC_MS_FPROC( ).
      when C_UC_FISTRUC_MS_EMAT.
        ME->HANDLE_UC_FISTRUC_MS_EMAT( ).
      when C_UC_OPEN.
        ME->HANDLE_UC_OPEN( ).
      when C_UC_PSCALE.
        ME->HANDLE_UC_PSCALE( ).

      when C_UC_PROC_BPART.
        ME->HANDLE_UC_PROC( IR_GATE_PART = ME->R_OLD_GATE ).
      when C_UC_PROD_BPART.
        ME->HANDLE_UC_PROD( IR_GATE_PART = ME->R_OLD_GATE ).

      when C_UC_PROC_HPART.
        ME->HANDLE_UC_PROC( IR_GATE_PART = ME->R_HN_GATE ).
      when C_UC_PROD_HPART.
        ME->HANDLE_UC_PROD( IR_GATE_PART = ME->R_HN_GATE ).


    endcase.

  endmethod.
  method GET_DYNP_BPART.

    if ME->R_GATE_MS_FPROC is bound.
      move ME->S_DYNP-REPID    to RS_DYNP-REPID.
      move '0202'              to RS_DYNP-DYNNR.    "Procurement
    elseif ME->R_GATE_MS_EMAT is bound.
      move ME->S_DYNP-REPID    to RS_DYNP-REPID.
      move '0203'              to RS_DYNP-DYNNR.    "E-MAT
    else.
      move ME->S_DYNP-REPID    to RS_DYNP-REPID.
      move '0201'              to RS_DYNP-DYNNR.    "Production
    endif.

  endmethod.
  method GET_DYNP_HN_TAB.

    if ME->S_HN_DYNP_TAB is not initial.
      move ME->S_HN_DYNP_TAB         to RS_DYNP.
    else.
      move ME->S_DYNP_BLANK-REPID    to RS_DYNP-REPID.
      move ME->S_DYNP_BLANK-DYNNR    to RS_DYNP-DYNNR.
    endif.

  endmethod.
  method GET_DYNP_HPART.

    if ME->R_GATE_MS_FPROC is bound .
      move ME->S_DYNP-REPID    to RS_DYNP-REPID.
      move '0412'              to RS_DYNP-DYNNR.    "Procurement
    elseif ME->R_GATE_MS_EMAT is bound .
      move ME->S_DYNP-REPID    to RS_DYNP-REPID.
      move '0413'              to RS_DYNP-DYNNR.    "E-MAT
    else.
      move ME->S_DYNP-REPID    to RS_DYNP-REPID.
      move '0411'              to RS_DYNP-DYNNR.    "Production
    endif.

  endmethod.
  method GET_DYNP_TOOLBAR.

*** Start "negative"
    move ME->S_DYNP-REPID        to RS_DYNP-REPID.
    move '9999'                  to RS_DYNP-DYNNR.

*** Check if Toolbar is visible
    if ME->R_TOOLBAR_FASTD is bound.
      move ME->S_DYNP-REPID      to RS_DYNP-REPID.
      move '0110'                to RS_DYNP-DYNNR.
    endif.

  endmethod.
  method GET_HN_PRVDR_TAB.

    data: LS_PRVDR_DEF type        /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_GATE      type        /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type        /VCXI/VKSR_TT_PRVDR_DEF.


    check ME->R_OLD_GATE is bound.

***--------------------------------------------------------------------------------------
*** Get all Children
    LT_PRVDR_DEF = ME->R_OLD_GATE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).

    loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
      LT_GATE = ME->R_OLD_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                           IF_INUSE = ABAP_TRUE ).

      append lines of LT_GATE to RT_PRVDR.
    endloop.

  endmethod.
  method GET_PRVDR_TAB.

    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_GATE      type /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.
    data: LR_GATE_BMAKE type ref to /VCXI/CL_VKSR_GATE.


***--------------------------------------------------------------------------------------
*** Get Bag Making Gate
    ME->R_BL_FASTD->GET_GATE_BMAKE( importing ER_GATE_BMAKE = LR_GATE_BMAKE ).
    check LR_GATE_BMAKE is bound.

*** Get all Children
    LT_PRVDR_DEF = LR_GATE_BMAKE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).

    loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
      LT_GATE = LR_GATE_BMAKE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                          IF_INUSE = ABAP_TRUE ).

      append lines of LT_GATE to RT_PRVDR.
    endloop.

***--------------------------------------------------------------------------------------
*** Add Reclosing Conversion Steps as well
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_RECLO=>C_IPRVT_CSTEP_RECLO ).
    append lines of LT_GATE to RT_PRVDR.

*** Sort before returning
    ME->R_GATE->SORT_GATE( changing CT_GATE = RT_PRVDR ).

  endmethod.
  method GET_REGISTERED_UI_INFO.

    if ME->S_DYNP_TAB is not initial.
      move ME->S_DYNP_TAB            to RS_DYNP.
    else.
      move ME->S_DYNP_BLANK-REPID    to RS_DYNP-REPID.
      move ME->S_DYNP_BLANK-DYNNR    to RS_DYNP-DYNNR.
    endif.

  endmethod.
  method HANDLE_TOOLBAR_FCODE.

    data: LF_FCODE type UI_FUNC.

    try.

***     Other user Commands
        case FCODE.
          when C_FCODE_MULTIQTY.
            ME->HANDLE_UC_MULTIQTY( ).

          when C_FCODE_TINFO.
            ME->HANDLE_UC_TINFO( ).

          when C_FCODE_MTS.
            ME->HANDLE_UC_MTS( ).

          when C_FCODE_RTESPV.
            ME->HANDLE_UC_RTESPV( ).

          when C_UC_BOOSTER.
            ME->HANDLE_UC_BOOSTER( ).

        endcase.

***     If we switch Application Events off -> do manually Refresh Screen
        if ME->F_APPL_EVENTS eq ABAP_FALSE.
          ME->R_UIGATE->REFRESH_SCREEN( ).
        endif.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method HANDLE_UC_BOOSTER.

***--------------------------------------------------------------------------------------
*** Call Booster Selection Popup
    ZCL_VCXI_XCS_POPUP_BOOSTER=>START( IR_GATE = ME->R_GATE ).

  endmethod.
  method HANDLE_UC_FISTRUC_MS_EMAT.

    data: LF_LOCKED      type ABAP_BOOL.
    data: LR_PR_MS_EMAT  type ref to ZCL_VCXI_FFSS_PR_MS_EMAT,
          LR_BL_FISTRUCT type ref to ZCL_VCXI_FFSS_BL_FISTRUCT.


***--------------------------------------------------------------------------------------
*** Get Estimation Material Reference
    check ME->R_GATE_MS_EMAT is bound.
    move ME->R_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
    check LR_PR_MS_EMAT is bound.

*** Get Film Structure XML
    LR_PR_MS_EMAT->ZIF_VCXI_FFSS_COMM_NEXT~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).

*** Start Popup
    check LR_BL_FISTRUCT is bound.
    move ABAP_TRUE to LF_LOCKED.
    ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT
                                         IF_LOCKED      = LF_LOCKED ).

  endmethod.
  method HANDLE_UC_FISTRUC_MS_FPROC.

    data: LF_LOCKED    type ABAP_BOOL,
          LF_FISTX_OLD type ZVCXI_FFS_FISTX,
          LF_FISTX_NEW type ZVCXI_FFS_FISTX.
    data: LR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_BL_FISTRUCT type ref to ZCL_VCXI_FFSS_BL_FISTRUCT.


***--------------------------------------------------------------------------------------
*** Get Film Procurement Reference
    check ME->R_GATE_MS_FPROC is bound.
    move ME->R_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
    check LR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Check if it`s locked only if is a Dummy material
    if LR_PR_MS_FPROC->IS_DUMMY( ) eq ABAP_TRUE.
      LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    endif.

*** Get Film Structure XML
    LR_PR_MS_FPROC->ZIF_VCXI_FFSS_COMM_NEXT~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT
                                                                 EF_FISTX       = LF_FISTX_OLD ).
*** Start Popup
    check LR_BL_FISTRUCT is bound.
    ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT
                                         IF_LOCKED      = LF_LOCKED ).

    LR_BL_FISTRUCT->GET_FISTX( importing EF_FISTX = LF_FISTX_NEW ).

    if LF_FISTX_OLD ne LF_FISTX_NEW.
      LR_PR_MS_FPROC->SET_FISTX( IF_FISTX = LF_FISTX_NEW ).
    endif.

  endmethod.
  method HANDLE_UC_FISTRUC_PART.

    data: LR_GATE_BFILM  type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BFILM    type ref to ZCL_VCXI_FBSS_PR_BFILM,
          LR_BL_FISTRUCT type ref to ZCL_VCXI_FFSS_BL_FISTRUCT.


    check IR_GATE_PART is bound.

***--------------------------------------------------------------------------------------
*** Get Bag Films of Bag Part
    ME->R_BL_FASTD->GET_GATE_BFILM( exporting IR_GATE_PART  = IR_GATE_PART
                                    importing ER_GATE_BFILM = LR_GATE_BFILM ).
    check LR_GATE_BFILM is bound.
    try.
        move LR_GATE_BFILM->R_CLSPR ?to LR_PR_BFILM.
      catch CX_SY_MOVE_CAST_ERROR.
        raise exception type /VCXI/CX_CKX.
    endtry.
    check LR_PR_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Get Film Structure XML
    LR_PR_BFILM->ZIF_VCXI_FFSS_COMM_PREV~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).

*** Start Popup
    ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT ).

  endmethod.
  method HANDLE_UC_MTS.

*** Call Popup for Make-to-Stock Materials
    ZCL_VCXI_XCSS_POPUP_MTS=>START( IR_GATE        = ME->R_GATE
                                    IR_UIGATE      = ME->R_UIGATE
                                    IF_APPL_EVENTS = ME->F_APPL_EVENTS ).

  endmethod.
  method HANDLE_UC_MULTIQTY.

    data: LT_GATE              type          /VCXI/VKSR_TT_GATE.


*** Get Gates of Multi Quantity Manager
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSS_PR_MULTIQTY_MGR=>C_IPRVT_XCS_MULTIQTY_MGR
                                     IF_INUSE  = ABAP_TRUE ).
    check LT_GATE is not initial.

*** Call Popup for Mulit Quantiies
    ZCL_VCXI_XCSS_POPUP_MULTIQTY=>START( IR_GATE        = LT_GATE[ 1 ]
                                         IR_UIGATE      = ME->R_UIGATE
                                         IF_APPL_EVENTS = ME->F_APPL_EVENTS ).

  endmethod.
  method HANDLE_UC_OPEN.

    data: LR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_PR_MS_EMAT  type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.


***--------------------------------------------------------------------------------------
*** Get Film Procurement Reference
    if ME->R_GATE_MS_FPROC is bound.
      move ME->R_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
      check LR_PR_MS_FPROC is bound.

***   Open Film Procurement Configuration
      LR_PR_MS_FPROC->OPEN( ).

***  Get Estimation Material Reference
    elseif ME->R_GATE_MS_EMAT is bound.
      move ME->R_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
      check LR_PR_MS_EMAT is bound.

***   Open Estimation Material Configuration
      LR_PR_MS_EMAT->OPEN( ).
    endif.

  endmethod.
  method HANDLE_UC_PROC.

***--------------------------------------------------------------------------------------
*** Switch Handle Part to Procurement
    ME->R_BL_FASTD->SWITCH_PART_TO_PROC( IR_GATE_PART = IR_GATE_PART ).

  endmethod.
  method HANDLE_UC_PROD.

***--------------------------------------------------------------------------------------
*** Switch Handle Part to Production
    ME->R_BL_FASTD->SWITCH_PART_TO_PROD( IR_GATE_PART = IR_GATE_PART ).

  endmethod.
  method HANDLE_UC_PSCALE.

***--------------------------------------------------------------------------------------
*** Call Price Scale Popup
    ZCL_VCXI_FFSS_POPUP_PSCALE=>START( IR_GATE    = ME->R_GATE_MS_FPROC
                                       IR_UIGATE  = ME->R_UIGATE
                                       IF_LOCKED  = ABAP_TRUE ).

  endmethod.
  method HANDLE_UC_RTESPV.

    data: LT_GATE              type          /VCXI/VKSR_TT_GATE.


*** Get Gates of Routing Supervisor
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSR_PR_RTESPV=>C_IPRVT_XCS_RTESPV
                                     IF_INUSE  = ABAP_TRUE ).
    check LT_GATE is not initial.

*** Fill Production
    cast ZCL_VCXI_XCSR_PR_RTESPV( LT_GATE[ 1 ]->R_CLSPR )->FILL_PROD( ).

*** Production was updated.
    message id 'ZVCXI_XCSR' type 'S' number '371'.

  endmethod.
  method HANDLE_UC_TINFO.

*** Call Popup for Tooling Information
    ZCL_VCXI_XCSS_POPUP_TINFO=>START( IR_GATE        = ME->R_GATE
                                      IR_UIGATE      = ME->R_UIGATE
                                      IF_APPL_EVENTS = ME->F_APPL_EVENTS ).

  endmethod.
  method INIT_BPART_VIS.

    free: ME->S_FASTD_BPART_VIS.

***--------------------------------------------------------------------------------------
*** Fill by Bag Part
    ME->INIT_BPART_VIS_BY_BPART( IR_GATE_BPART = IR_GATE_BPART ).

*** Fill by Bag Film
    ME->INIT_BPART_VIS_BY_BFILM( IR_GATE_BFILM = IR_GATE_BFILM ).

*** Fill by Film Connection Out
    if IR_GATE_FCONO is bound.
      ME->INIT_BPART_VIS_BY_FCONO( IR_GATE_FCONO = IR_GATE_FCONO ).
    endif.

*** Fill by Film Procurement
    if IR_GATE_MS_FPROC is bound.
      ME->INIT_BPART_VIS_BY_MS_FPROC( IR_GATE_MS_FPROC = IR_GATE_MS_FPROC ).
    endif.

*** Fill by Estimation Material
    if IR_GATE_MS_EMAT is bound.
      ME->INIT_BPART_VIS_BY_MS_EMAT( IR_GATE_MS_EMAT = IR_GATE_MS_EMAT ).
    endif.

  endmethod.
  method INIT_BPART_VIS_BY_BFILM.

    data: LR_PR_BFILM   type ref to ZCL_VCXI_FBSS_PR_BFILM,
          LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.


***--------------------------------------------------------------------------------------
*** Get Bag Film Reference
    check IR_GATE_BFILM is bound.
    move IR_GATE_BFILM->R_CLSPR ?to LR_PR_BFILM.
    check LR_PR_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Number of Ups
    LR_PR_BFILM->GET_NOUPS( importing EF_NOUPS = ME->S_FASTD_BPART_VIS-NOUPS ).

*** Trim on Width
    LR_PR_BFILM->GET_TRWID( importing ES_TRWID = ME->S_FASTD_BPART_VIS-S_TRWID ).

*** Film Width (Outbound)
    LR_PR_BFILM->GET_FIWID( importing ES_FIWID = ME->S_FASTD_BPART_VIS-S_FIWID ).

***--------------------------------------------------------------------------------------
*** Trim on Length
    LR_PR_BFILM->GET_TRLEN( importing ES_TRLEN = ME->S_FASTD_BPART_VIS-S_TRLEN ).

*** Film Length (Outbound)
    LR_PR_BFILM->GET_FILEN( importing ES_FILEN = ME->S_FASTD_BPART_VIS-S_FILEN ).

***--------------------------------------------------------------------------------------
*** Surface Weight (Outbound)
    LR_PR_BFILM->GET_SURWT( importing ES_SURWT = ME->S_FASTD_BPART_VIS-S_SURWT ).
    move ME->S_FASTD_BPART_VIS-SURWT_UOM to ME->S_FASTD_BPART_VIS-SURWT_UOMC6.

*** Internal Film Thickness (Outbound)
    LR_PR_BFILM->GET_FITIN( importing ES_FITIN = ME->S_FASTD_BPART_VIS-S_FITIN ).

*** External Film Thickness (Outbound)
    LR_PR_BFILM->GET_FITEX( importing ES_FITEX = ME->S_FASTD_BPART_VIS-S_FITEX ).

***--------------------------------------------------------------------------------------
*** Get Winding Side
    LR_PR_BFILM->GET_RWSID( importing EF_RWSID = ME->S_FASTD_BPART_VIS-RWSID ).

*** Get Winding Direction
    LR_PR_BFILM->GET_RWDIR( importing EF_RWDIR = ME->S_FASTD_BPART_VIS-RWDIR ).

*** Get Eyemark Position
    LR_PR_BFILM->GET_EYEMP( importing EF_EYEMP = ME->S_FASTD_BPART_VIS-EYEMP ).

    LR_PR_BFILM->GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).
    if LR_BL_FIFPROP is bound.
***   Winding Width
      ME->S_FASTD_BPART_VIS-S_WIWID = LR_BL_FIFPROP->GET_WIWID( IS_FIWID = ME->S_FASTD_BPART_VIS-S_FIWID ).

***   Winding Thickness
      ME->S_FASTD_BPART_VIS-S_WITHI = LR_BL_FIFPROP->GET_WITHI( IS_FIWID = ME->S_FASTD_BPART_VIS-S_FIWID
                                                                IS_FITIN = ME->S_FASTD_BPART_VIS-S_FITIN ).

    endif.

  endmethod.
  method INIT_BPART_VIS_BY_BPART.

    data: LR_PR_BPART   type ref to ZCL_VCXI_FBSS_PR_BPART.

***--------------------------------------------------------------------------------------
*** Get Bag Part Reference
    check IR_GATE_BPART is bound.
    move IR_GATE_BPART->R_CLSPR ?to LR_PR_BPART.
    check LR_PR_BPART is bound.

***--------------------------------------------------------------------------------------
*** Bag Part Direction
    LR_PR_BPART->GET_BPDIR( importing EF_BPDIR = ME->S_FASTD_BPART_VIS-BPDIR ).

*** Bag Part Width
    LR_PR_BPART->GET_BPWID( importing ES_BPWID = ME->S_FASTD_BPART_VIS-S_BPWID ).
    move LR_PR_BPART->GET_FOVRR_BPWID( ) to ME->S_FASTD_BPART_VIS-FOVRR_BPWID.

*** Bag Part Length
    LR_PR_BPART->GET_BPLEN( importing ES_BPLEN = ME->S_FASTD_BPART_VIS-S_BPLEN ).
    move LR_PR_BPART->GET_FOVRR_BPLEN( ) to ME->S_FASTD_BPART_VIS-FOVRR_BPLEN.

  endmethod.
  method INIT_BPART_VIS_BY_FCONO.

    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_PR_FCONO  type ref to ZCL_VCXI_FFSS_PR_FCONO,
          LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_OUTPUT type ref to ZCL_VCXI_FFSS_PR_OUTPUT.

***--------------------------------------------------------------------------------------
*** Get Bag Film Reference
    check IR_GATE_FCONO is bound.
    move IR_GATE_FCONO->R_CLSPR ?to LR_PR_FCONO.
    check LR_PR_FCONO is bound.

*** Number of Outs
    ME->S_FASTD_BPART_VIS-NOOUT = LR_PR_FCONO->GET_NOOUT( ).

***--------------------------------------------------------------------------------------
*** Get Reference to Output
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSS_PR_OUTPUT=>C_IPRVT_OUTPUT
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      check LR_GATE->IS_PARENT( IR_GATE_CHILD = IR_GATE_FCONO ) eq ABAP_TRUE.
      move LR_GATE->R_CLSPR ?to LR_PR_OUTPUT.
    endloop.
    check LR_PR_OUTPUT is bound.

*** Optimization of Slitting
    LR_PR_OUTPUT->GET_FOPSL( importing EF_FOPSL = ME->S_FASTD_BPART_VIS-FOPSL ).

*** Trim on the Width
    LR_PR_OUTPUT->GET_TRWID( importing ES_TRWID = ME->S_FASTD_BPART_VIS-S_TRWID_SLB ).

  endmethod.
  method INIT_BPART_VIS_BY_MS_EMAT.

    data: LR_PR_MS_EMAT  type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.


***--------------------------------------------------------------------------------------
*** Get Film Procurement Reference
    check IR_GATE_MS_EMAT is bound.
    move IR_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
    check LR_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Material
    LR_PR_MS_EMAT->GET_MATNR( receiving RF_MATNR = ME->S_FASTD_BPART_VIS-MATNR ).

*** Material Description
    LR_PR_MS_EMAT->GET_MATNR_DESCR( receiving RF_DESCR = ME->S_FASTD_BPART_VIS-MATNR_DESCR ).

*** Assigned Material
    LR_PR_MS_EMAT->GET_AMAT( receiving RF_AMAT = ME->S_FASTD_BPART_VIS-AMAT ).

*** Assigned Material Description
    LR_PR_MS_EMAT->GET_AMAT_DESCR( receiving RF_DESCR = ME->S_FASTD_BPART_VIS-AMAT_DESCR ).

***--------------------------------------------------------------------------------------
*** Film Type
    LR_PR_MS_EMAT->GET_TFILM( importing EF_TFILM = ME->S_FASTD_BPART_VIS-TFILM ).

*** Reverse Film Structure (Flag)
    LR_PR_MS_EMAT->GET_FRFST( importing EF_FRFST = ME->S_FASTD_BPART_VIS-FRFST ).

*** Film Style
    LR_PR_MS_EMAT->GET_FISTY( importing EF_FISTY       = ME->S_FASTD_BPART_VIS-FISTY
                                        EF_FISTY_DESCR = ME->S_FASTD_BPART_VIS-FISTY_DESCR ).

*** Procurement Film Width
    LR_PR_MS_EMAT->GET_PFWID( importing ES_PFWID = ME->S_FASTD_BPART_VIS-S_PFWID ).

*** Procurement Trim Requirement on Width
    LR_PR_MS_EMAT->GET_PTRQW( importing ES_PTRQW = ME->S_FASTD_BPART_VIS-S_PTRQW ).

*** Film Tickness
    LR_PR_MS_EMAT->GET_FITHI( importing ES_FITHI = ME->S_FASTD_BPART_VIS-S_FITHI ).

*** Film Density
    LR_PR_MS_EMAT->GET_FIDEN( importing ES_FIDEN = ME->S_FASTD_BPART_VIS-S_FIDEN ).
    move ME->S_FASTD_BPART_VIS-S_FIDEN-FIDEN_UOM to ME->S_FASTD_BPART_VIS-FIDEN_UOMC6.

***--------------------------------------------------------------------------------------
*** Folding Type
    LR_PR_MS_EMAT->GET_TFOLD( importing EF_TFOLD = ME->S_FASTD_BPART_VIS-TFOLD
                                        EF_DESCR = ME->S_FASTD_BPART_VIS-TFOLD_DESCR ).

*** Number of Layers
    LR_PR_MS_EMAT->GET_NOLAY( importing EF_NOLAY = ME->S_FASTD_BPART_VIS-NOLAY ).

*** Left Gusset
    LR_PR_MS_EMAT->GET_GULEF( importing ES_GULEF = ME->S_FASTD_BPART_VIS-S_GULEF ).

*** Right Gusset
    LR_PR_MS_EMAT->GET_GURIG( importing ES_GURIG = ME->S_FASTD_BPART_VIS-S_GURIG ).

  endmethod.
  method INIT_BPART_VIS_BY_MS_FPROC.

    data: LR_PR_MS_FPROC  type ref to ZCL_VCXI_FFSS_PR_MS_FPROC.


***--------------------------------------------------------------------------------------
*** Get Film Procurement Reference
    check IR_GATE_MS_FPROC is bound.
    move IR_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
    check LR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Material
    LR_PR_MS_FPROC->GET_MATNR( receiving RF_MATNR = ME->S_FASTD_BPART_VIS-MATNR ).

*** Material Description
    LR_PR_MS_FPROC->GET_MATNR_DESCR( receiving RF_DESCR = ME->S_FASTD_BPART_VIS-MATNR_DESCR ).

*** Material Description - Overwrite Flag
    LR_PR_MS_FPROC->GET_MAKTX( importing EF_FOVRR = ME->S_FASTD_BPART_VIS-FOVRR_MAKTX ).

***--------------------------------------------------------------------------------------
*** Procurement Option
    LR_PR_MS_FPROC->GET_PURCH( receiving RF_PURCH = ME->S_FASTD_BPART_VIS-PURCH ).

*** Vendor
    LR_PR_MS_FPROC->GET_LIFNR( receiving RF_LIFNR = ME->S_FASTD_BPART_VIS-LIFNR ).

***--------------------------------------------------------------------------------------
*** Film Type
    LR_PR_MS_FPROC->GET_TFILM( importing EF_TFILM = ME->S_FASTD_BPART_VIS-TFILM ).

*** Reverse Film Structure (Flag)
    LR_PR_MS_FPROC->GET_FRFST( importing EF_FRFST = ME->S_FASTD_BPART_VIS-FRFST ).

*** Film Style
    LR_PR_MS_FPROC->GET_FISTY( importing EF_FISTY       = ME->S_FASTD_BPART_VIS-FISTY
                                         EF_FISTY_DESCR = ME->S_FASTD_BPART_VIS-FISTY_DESCR ).

*** Procurement Film Width
    LR_PR_MS_FPROC->GET_PFWID( importing ES_PFWID = ME->S_FASTD_BPART_VIS-S_PFWID ).

*** Procurement Trim Requirement on Width
    LR_PR_MS_FPROC->GET_PTRQW( importing ES_PTRQW = ME->S_FASTD_BPART_VIS-S_PTRQW ).

*** Film Tickness
    LR_PR_MS_FPROC->GET_FITHI( importing ES_FITHI = ME->S_FASTD_BPART_VIS-S_FITHI ).

*** Film Density
    LR_PR_MS_FPROC->GET_FIDEN( importing ES_FIDEN = ME->S_FASTD_BPART_VIS-S_FIDEN ).
    move ME->S_FASTD_BPART_VIS-S_FIDEN-FIDEN_UOM to ME->S_FASTD_BPART_VIS-FIDEN_UOMC6.

***--------------------------------------------------------------------------------------
*** Folding Type
    LR_PR_MS_FPROC->GET_TFOLD( importing EF_TFOLD = ME->S_FASTD_BPART_VIS-TFOLD
                                         EF_DESCR = ME->S_FASTD_BPART_VIS-TFOLD_DESCR ).

*** Number of Layers
    LR_PR_MS_FPROC->GET_NOLAY( importing EF_NOLAY = ME->S_FASTD_BPART_VIS-NOLAY ).

*** Left Gusset
    LR_PR_MS_FPROC->GET_GULEF( importing ES_GULEF = ME->S_FASTD_BPART_VIS-S_GULEF ).

*** Right Gusset
    LR_PR_MS_FPROC->GET_GURIG( importing ES_GURIG = ME->S_FASTD_BPART_VIS-S_GURIG ).

  endmethod.
  method INIT_CONTAINER.

    if ME->R_CONTAINER is not bound.
      create object ME->R_CONTAINER
        exporting
          CONTAINER_NAME              = '0100CC_TOOLBAR'
        exceptions
          CNTL_ERROR                  = 1
          CNTL_SYSTEM_ERROR           = 2
          CREATE_ERROR                = 3
          LIFETIME_ERROR              = 4
          LIFETIME_DYNPRO_DYNPRO_LINK = 5
          others                      = 6.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
  method INIT_HANDLE_VIS.

    data:  LR_PR_HANDLE   type ref to ZCL_VCXI_FBSS_PR_HANDLE.

    free: ME->S_FASTD_HANDLE_VIS.

***--------------------------------------------------------------------------------------
*** Get Handle Reference
    move IR_GATE_HANDLE->R_CLSPR ?to LR_PR_HANDLE.
    check LR_PR_HANDLE is bound.

***--------------------------------------------------------------------------------------
*** Handle Type
    LR_PR_HANDLE->GET_THNDL( importing EF_THNDL = ME->S_FASTD_HANDLE_VIS-THNDL ).

*** Handle Type Description
    move LR_PR_HANDLE->GET_DESCR( ) to ME->S_FASTD_HANDLE_VIS-THNDL_DESCR .

*** Cutout Location
    LR_PR_HANDLE->GET_LCOUT( importing EF_LCOUT = ME->S_FASTD_HANDLE_VIS-LCOUT ).

*** Handle Location
    LR_PR_HANDLE->GET_LHNDL( importing EF_LHNDL = ME->S_FASTD_HANDLE_VIS-LHNDL ).

*** Cutout Area
    LR_PR_HANDLE->GET_COARE( importing ES_COARE = ME->S_FASTD_HANDLE_VIS-S_COARE ).

*** Handle Weight
    LR_PR_HANDLE->GET_HNWGT( importing ES_HNWGT = ME->S_FASTD_HANDLE_VIS-S_HNWGT ).

*** Handle Area
    LR_PR_HANDLE->GET_HNARE( importing ES_HNARE = ME->S_FASTD_HANDLE_VIS-S_HNARE ).

  endmethod.
  method INIT_HN_TAB_LIST.

    data: LF_TAB   type         NUMC3,
          LF_FNAME type         STRING.
    data: LT_GATE               type         /VCXI/VKSR_TT_GATE.
    data: LR_GATE               type ref to  /VCXI/CL_VKSR_GATE.
    field-symbols: <S_TAB_LIST> type         ZVCXI_F0S_S_TAB_LIST,
                   <F_DESCR>    type         /VCXI/CKX_DESCR.

    free: ME->T_HN_TAB_LIST,
          ME->S_HN_TAB_DESCR.

***----------------------------------------------------------------------------
*** Get Provider displayed as TabStrip
    move ME->GET_HN_PRVDR_TAB( ) to LT_GATE.

*** Sort Provider
    ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).

***----------------------------------------------------------------------------
*** Process Provider
    loop at LT_GATE into LR_GATE.

      check LR_GATE->GET_CLSUI( ) is not initial.

      append initial line to ME->T_HN_TAB_LIST assigning <S_TAB_LIST>.
      add 1 to LF_TAB.
      concatenate ME->C_HN_TABPT LF_TAB into <S_TAB_LIST>-TABNAME.
      move LR_GATE                        to <S_TAB_LIST>-R_GATE.

***   No active Tab is defined, use first Tab as active
      if ME->F_HN_ACTIVE_TAB is initial.
        move <S_TAB_LIST>-TABNAME to ME->F_HN_ACTIVE_TAB.
*        move <S_TAB_LIST>-TABNAME to ME->F_ACTIVE_TAB_OLD.
*        if LR_GATE ne ME->R_OLD_GATE.
*          move ABAP_FALSE to ME->F_ALREADY_OPEN.
*        endif.
      endif.

      concatenate C_TAB LF_TAB into LF_FNAME.
      assign component LF_FNAME of structure ME->S_HN_TAB_DESCR to <F_DESCR>.
      if SY-SUBRC eq 0.
        if <S_TAB_LIST>-R_GATE->R_CLSPR is bound.
          move <S_TAB_LIST>-R_GATE->R_CLSPR->GET_DESCR( ) to <F_DESCR>.
        else.
          move <S_TAB_LIST>-R_GATE->GET_DESCR( ) to <F_DESCR>.
        endif.
      endif.
    endloop.

***----------------------------------------------------------------------------
*** Check Active Tab exists
    if ME->F_HN_ACTIVE_TAB cs ME->C_HN_TABPT.
      read table ME->T_HN_TAB_LIST with key TABNAME = ME->F_HN_ACTIVE_TAB
                                   transporting no fields.
      if SY-SUBRC ne 0.
        read table ME->T_HN_TAB_LIST assigning <S_TAB_LIST> index 1.
        if SY-SUBRC eq 0.
          move <S_TAB_LIST>-TABNAME to ME->F_HN_ACTIVE_TAB.
        else.
          clear ME->F_HN_ACTIVE_TAB.
        endif.
      endif.
    endif.

  endmethod.
  method INIT_HPART_VIS.

    free: ME->S_FASTD_HPART_VIS.

***--------------------------------------------------------------------------------------
*** Fill by Bag Part
    ME->INIT_HPART_VIS_BY_HPART( IR_GATE_HPART = IR_GATE_HPART ).

*** Fill by Bag Film
    ME->INIT_HPART_VIS_BY_BFILM( IR_GATE_BFILM = IR_GATE_BFILM ).

*** Fill by Film Connection Out
    if IR_GATE_FCONO is bound.
      ME->INIT_HPART_VIS_BY_FCONO( IR_GATE_FCONO = IR_GATE_FCONO ).
    endif.

*** Fill by Film Procurement
    if IR_GATE_MS_FPROC is bound.
      ME->INIT_HPART_VIS_BY_MS_FPROC( IR_GATE_MS_FPROC = IR_GATE_MS_FPROC ).
    endif.

*** Fill by Estimation Material
    if IR_GATE_MS_EMAT is bound.
      ME->INIT_HPART_VIS_BY_MS_EMAT( IR_GATE_MS_EMAT = IR_GATE_MS_EMAT ).
    endif.

  endmethod.
  method INIT_HPART_VIS_BY_BFILM.

    data: LR_PR_BFILM   type ref to ZCL_VCXI_FBSS_PR_BFILM,
          LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.


***--------------------------------------------------------------------------------------
*** Get Bag Film Reference
    check IR_GATE_BFILM is bound.
    move IR_GATE_BFILM->R_CLSPR ?to LR_PR_BFILM.
    check LR_PR_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Number of Ups
    LR_PR_BFILM->GET_NOUPS( importing EF_NOUPS = ME->S_FASTD_HPART_VIS-NOUPS ).

*** Trim on Width
    LR_PR_BFILM->GET_TRWID( importing ES_TRWID = ME->S_FASTD_HPART_VIS-S_TRWID ).

*** Film Width (Outbound)
    LR_PR_BFILM->GET_FIWID( importing ES_FIWID = ME->S_FASTD_HPART_VIS-S_FIWID ).

***--------------------------------------------------------------------------------------
*** Trim on Length
    LR_PR_BFILM->GET_TRLEN( importing ES_TRLEN = ME->S_FASTD_HPART_VIS-S_TRLEN ).

*** Film Length (Outbound)
    LR_PR_BFILM->GET_FILEN( importing ES_FILEN = ME->S_FASTD_HPART_VIS-S_FILEN ).

***--------------------------------------------------------------------------------------
*** Surface Weight (Outbound)
    LR_PR_BFILM->GET_SURWT( importing ES_SURWT = ME->S_FASTD_HPART_VIS-S_SURWT ).
    move ME->S_FASTD_HPART_VIS-SURWT_UOM to ME->S_FASTD_HPART_VIS-SURWT_UOMC6.

*** Internal Film Thickness (Outbound)
    LR_PR_BFILM->GET_FITIN( importing ES_FITIN = ME->S_FASTD_HPART_VIS-S_FITIN ).

*** External Film Thickness (Outbound)
    LR_PR_BFILM->GET_FITEX( importing ES_FITEX = ME->S_FASTD_HPART_VIS-S_FITEX ).

***--------------------------------------------------------------------------------------
*** Get Winding Side
    LR_PR_BFILM->GET_RWSID( importing EF_RWSID = ME->S_FASTD_HPART_VIS-RWSID ).

*** Get Winding Direction
    LR_PR_BFILM->GET_RWDIR( importing EF_RWDIR = ME->S_FASTD_HPART_VIS-RWDIR ).

*** Get Eyemark Position
    LR_PR_BFILM->GET_EYEMP( importing EF_EYEMP = ME->S_FASTD_HPART_VIS-EYEMP ).

    LR_PR_BFILM->GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).
    if LR_BL_FIFPROP is bound.
***   Winding Width
      ME->S_FASTD_HPART_VIS-S_WIWID = LR_BL_FIFPROP->GET_WIWID( IS_FIWID = ME->S_FASTD_HPART_VIS-S_FIWID ).

***   Winding Thickness
      ME->S_FASTD_HPART_VIS-S_WITHI = LR_BL_FIFPROP->GET_WITHI( IS_FIWID = ME->S_FASTD_HPART_VIS-S_FIWID
                                                                IS_FITIN = ME->S_FASTD_HPART_VIS-S_FITIN ).

    endif.

  endmethod.
  method INIT_HPART_VIS_BY_FCONO.

    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_PR_FCONO  type ref to ZCL_VCXI_FFSS_PR_FCONO,
          LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_OUTPUT type ref to ZCL_VCXI_FFSS_PR_OUTPUT.

***--------------------------------------------------------------------------------------
*** Get Bag Film Reference
    check IR_GATE_FCONO is bound.
    move IR_GATE_FCONO->R_CLSPR ?to LR_PR_FCONO.
    check LR_PR_FCONO is bound.

*** Number of Outs
    ME->S_FASTD_HPART_VIS-NOOUT = LR_PR_FCONO->GET_NOOUT( ).

***--------------------------------------------------------------------------------------
*** Get Reference to Output
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSS_PR_OUTPUT=>C_IPRVT_OUTPUT
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      check LR_GATE->IS_PARENT( IR_GATE_CHILD = IR_GATE_FCONO ) eq ABAP_TRUE.
      move LR_GATE->R_CLSPR ?to LR_PR_OUTPUT.
    endloop.
    check LR_PR_OUTPUT is bound.

*** Optimization of Slitting
    LR_PR_OUTPUT->GET_FOPSL( importing EF_FOPSL = ME->S_FASTD_HPART_VIS-FOPSL ).

*** Trim on the Width
    LR_PR_OUTPUT->GET_TRWID( importing ES_TRWID = ME->S_FASTD_HPART_VIS-S_TRWID_SLB ).

  endmethod.
  method INIT_HPART_VIS_BY_HPART.

    data: LR_PR_HPART   type ref to ZCL_VCXI_FBSS_PR_HPART.

***--------------------------------------------------------------------------------------
*** Get Handle Part Reference
    check IR_GATE_HPART is bound.
    move IR_GATE_HPART->R_CLSPR ?to LR_PR_HPART.
    check LR_PR_HPART is bound.

***--------------------------------------------------------------------------------------
*** Handle Part Factor
    LR_PR_HPART->GET_HPFCT( importing EF_HPFCT = ME->S_FASTD_HPART_VIS-HPFCT ).

*** Handle Part Width
    LR_PR_HPART->GET_HPWID( importing ES_HPWID = ME->S_FASTD_HPART_VIS-S_HPWID ).

*** Handle Part Length
    LR_PR_HPART->GET_HPLEN( importing ES_HPLEN = ME->S_FASTD_HPART_VIS-S_HPLEN ).

*** Handle Part Weight
    LR_PR_HPART->GET_HPWGT( importing ES_HPWGT = ME->S_FASTD_HPART_VIS-S_HPWGT ).

*** Handle Part Cutout Area
    LR_PR_HPART->GET_COARE( importing ES_COARE = ME->S_FASTD_HPART_VIS-S_COARE ).

*** Handle Part Area
    LR_PR_HPART->GET_HPARE( importing ES_HPARE = ME->S_FASTD_HPART_VIS-S_HPARE ).

  endmethod.
  method INIT_HPART_VIS_BY_MS_EMAT.

    data: LR_PR_MS_EMAT type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.


***--------------------------------------------------------------------------------------
*** Get Estimation Material Reference
    check IR_GATE_MS_EMAT is bound.
    move IR_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
    check LR_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Material
    LR_PR_MS_EMAT->GET_MATNR( receiving RF_MATNR = ME->S_FASTD_HPART_VIS-MATNR ).

*** Material Description
    LR_PR_MS_EMAT->GET_MATNR_DESCR( receiving RF_DESCR = ME->S_FASTD_HPART_VIS-MATNR_DESCR ).

*** Assigned Material
    LR_PR_MS_EMAT->GET_AMAT( receiving RF_AMAT = ME->S_FASTD_HPART_VIS-AMAT ).

*** Assigned Material Description
    LR_PR_MS_EMAT->GET_AMAT_DESCR( receiving RF_DESCR = ME->S_FASTD_HPART_VIS-AMAT_DESCR ).

***--------------------------------------------------------------------------------------
*** Film Type
    LR_PR_MS_EMAT->GET_TFILM( importing EF_TFILM = ME->S_FASTD_HPART_VIS-TFILM ).

*** Reverse Film Structure (Flag)
    LR_PR_MS_EMAT->GET_FRFST( importing EF_FRFST = ME->S_FASTD_HPART_VIS-FRFST ).

*** Film Style
    LR_PR_MS_EMAT->GET_FISTY( importing EF_FISTY       = ME->S_FASTD_HPART_VIS-FISTY
                                        EF_FISTY_DESCR = ME->S_FASTD_HPART_VIS-FISTY_DESCR ).

*** Procurement Film Width
    LR_PR_MS_EMAT->GET_PFWID( importing ES_PFWID = ME->S_FASTD_HPART_VIS-S_PFWID ).

*** Procurement Trim Requirement on Width
    LR_PR_MS_EMAT->GET_PTRQW( importing ES_PTRQW = ME->S_FASTD_HPART_VIS-S_PTRQW ).

*** Film Tickness
    LR_PR_MS_EMAT->GET_FITHI( importing ES_FITHI = ME->S_FASTD_HPART_VIS-S_FITHI ).

*** Film Density
    LR_PR_MS_EMAT->GET_FIDEN( importing ES_FIDEN = ME->S_FASTD_HPART_VIS-S_FIDEN ).
    move ME->S_FASTD_HPART_VIS-S_FIDEN-FIDEN_UOM to ME->S_FASTD_HPART_VIS-FIDEN_UOMC6.

***--------------------------------------------------------------------------------------
*** Folding Type
    LR_PR_MS_EMAT->GET_TFOLD( importing EF_TFOLD = ME->S_FASTD_HPART_VIS-TFOLD
                                         EF_DESCR = ME->S_FASTD_HPART_VIS-TFOLD_DESCR ).

*** Number of Layers
    LR_PR_MS_EMAT->GET_NOLAY( importing EF_NOLAY = ME->S_FASTD_HPART_VIS-NOLAY ).

*** Left Gusset
    LR_PR_MS_EMAT->GET_GULEF( importing ES_GULEF = ME->S_FASTD_HPART_VIS-S_GULEF ).

*** Right Gusset
    LR_PR_MS_EMAT->GET_GURIG( importing ES_GURIG = ME->S_FASTD_HPART_VIS-S_GURIG ).

  endmethod.
  method INIT_HPART_VIS_BY_MS_FPROC.

    data: LR_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC.


***--------------------------------------------------------------------------------------
*** Get Film Procurement Reference
    check IR_GATE_MS_FPROC is bound.
    move IR_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
    check LR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Material
    LR_PR_MS_FPROC->GET_MATNR( receiving RF_MATNR = ME->S_FASTD_HPART_VIS-MATNR ).

*** Material Description
    LR_PR_MS_FPROC->GET_MATNR_DESCR( receiving RF_DESCR = ME->S_FASTD_HPART_VIS-MATNR_DESCR ).

*** Material Description - Overwrite Flag
    LR_PR_MS_FPROC->GET_MAKTX( importing EF_FOVRR = ME->S_FASTD_HPART_VIS-FOVRR_MAKTX ).

***--------------------------------------------------------------------------------------
*** Procurement Option
    LR_PR_MS_FPROC->GET_PURCH( receiving RF_PURCH = ME->S_FASTD_HPART_VIS-PURCH ).

*** Vendor
    LR_PR_MS_FPROC->GET_LIFNR( receiving RF_LIFNR = ME->S_FASTD_HPART_VIS-LIFNR ).

***--------------------------------------------------------------------------------------
*** Film Type
    LR_PR_MS_FPROC->GET_TFILM( importing EF_TFILM = ME->S_FASTD_HPART_VIS-TFILM ).

*** Reverse Film Structure (Flag)
    LR_PR_MS_FPROC->GET_FRFST( importing EF_FRFST = ME->S_FASTD_HPART_VIS-FRFST ).

*** Film Style
    LR_PR_MS_FPROC->GET_FISTY( importing EF_FISTY       = ME->S_FASTD_HPART_VIS-FISTY
                                         EF_FISTY_DESCR = ME->S_FASTD_HPART_VIS-FISTY_DESCR ).

*** Procurement Film Width
    LR_PR_MS_FPROC->GET_PFWID( importing ES_PFWID = ME->S_FASTD_HPART_VIS-S_PFWID ).

*** Procurement Trim Requirement on Width
    LR_PR_MS_FPROC->GET_PTRQW( importing ES_PTRQW = ME->S_FASTD_HPART_VIS-S_PTRQW ).

*** Film Tickness
    LR_PR_MS_FPROC->GET_FITHI( importing ES_FITHI = ME->S_FASTD_HPART_VIS-S_FITHI ).

*** Film Density
    LR_PR_MS_FPROC->GET_FIDEN( importing ES_FIDEN = ME->S_FASTD_HPART_VIS-S_FIDEN ).
    move ME->S_FASTD_HPART_VIS-S_FIDEN-FIDEN_UOM to ME->S_FASTD_HPART_VIS-FIDEN_UOMC6.

***--------------------------------------------------------------------------------------
*** Folding Type
    LR_PR_MS_FPROC->GET_TFOLD( importing EF_TFOLD = ME->S_FASTD_HPART_VIS-TFOLD
                                         EF_DESCR = ME->S_FASTD_HPART_VIS-TFOLD_DESCR ).

*** Number of Layers
    LR_PR_MS_FPROC->GET_NOLAY( importing EF_NOLAY = ME->S_FASTD_HPART_VIS-NOLAY ).

*** Left Gusset
    LR_PR_MS_FPROC->GET_GULEF( importing ES_GULEF = ME->S_FASTD_HPART_VIS-S_GULEF ).

*** Right Gusset
    LR_PR_MS_FPROC->GET_GURIG( importing ES_GURIG = ME->S_FASTD_HPART_VIS-S_GURIG ).

  endmethod.
  method INIT_RECLO_VIS.

    data:  LR_PR_CSTEP_RECLO   type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO.

    free: ME->S_FASTD_RECLO_VIS.

***--------------------------------------------------------------------------------------
*** Get Conversion Step Reclosing Reference
    move IR_GATE_CSTEP_RECLO->R_CLSPR ?to LR_PR_CSTEP_RECLO.
    check LR_PR_CSTEP_RECLO is bound.

***--------------------------------------------------------------------------------------
*** Reclosing Type
    LR_PR_CSTEP_RECLO->GET_TRECL( importing EF_TRECL = ME->S_FASTD_RECLO_VIS-TRECL
                                            EF_DESCR = ME->S_FASTD_RECLO_VIS-TRECL_DESCR ).

*** Reclosing Location
    LR_PR_CSTEP_RECLO->GET_LRECL( importing EF_LRECL = ME->S_FASTD_RECLO_VIS-LRECL ).

*** Cutout Area
    LR_PR_CSTEP_RECLO->GET_COARE( importing ES_COARE = ME->S_FASTD_RECLO_VIS-S_COARE ).

*** Cutout Location
    LR_PR_CSTEP_RECLO->GET_LCOUT( importing EF_LCOUT = ME->S_FASTD_RECLO_VIS-LCOUT ).

  endmethod.
  method INIT_TOOLBAR.

    data: LF_LOCKED         type /VCXI/CKX_LOCKED,
          LF_INUSE          type /VCXI/VKSR_INUSE,
          LF_DISABLED       type ABAP_BOOL,
          LF_HIDDE_MULTIQTY type ABAP_BOOL.
    data: LT_EVENT  type CNTL_SIMPLE_EVENTS,
          LT_BTNGRP type TTB_BUTTON.
    field-symbols: <S_EVENT>      type        CNTL_SIMPLE_EVENT.


***--------------------------------------------------------------------------------------
    if ME->R_TOOLBAR is not bound.
***   Create Toolbar
      create object ME->R_TOOLBAR
        exporting
          PARENT             = ME->R_CONTAINER
        exceptions
          CNTL_INSTALL_ERROR = 1
          CNTL_ERROR         = 2
          CNTB_WRONG_VERSION = 3
          others             = 4.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

***   Set Registered Events
      append initial line to LT_EVENT assigning <S_EVENT>.
      move CL_GUI_TOOLBAR=>M_ID_FUNCTION_SELECTED  to <S_EVENT>-EVENTID.
      move ME->F_APPL_EVENTS                       to <S_EVENT>-APPL_EVENT.

      append initial line to LT_EVENT assigning <S_EVENT>.
      move CL_GUI_TOOLBAR=>M_ID_DROPDOWN_CLICKED   to <S_EVENT>-EVENTID.
      move ME->F_APPL_EVENTS                       to <S_EVENT>-APPL_EVENT.

      ME->R_TOOLBAR->SET_REGISTERED_EVENTS( exporting  EVENTS = LT_EVENT
                                            exceptions others = 9 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

***   Set Event Handler
      set handler ME->HANDLE_TOOLBAR_FCODE for ME->R_TOOLBAR.

    endif.

***--------------------------------------------------------------------------------------
*** Remove all Buttons to start fresh
    ME->R_TOOLBAR->DELETE_ALL_BUTTONS( exceptions others = 9 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Get Lock and In-Use Status
    if ME->R_GATE->IS_LOCKED( ) ne ABAP_TRUE.
      LF_DISABLED = ABAP_TRUE.
    endif.


*** Button to Load Booster
    if ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_IDATSPV=>C_IPRVT_IDATSPV
                              IF_INUSE  = ABAP_TRUE ) is not initial.
      ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE       = C_UC_BOOSTER
                                            ICON        = ICON_CONFIGURATION
                                            IS_DISABLED = LF_DISABLED
                                            BUTN_TYPE   = CNTB_BTYPE_BUTTON
                                            TEXT        = 'Load Booster'(F06)
                                 exceptions others      = 0 ).
    endif.

*** Hide Multi Quantity if Manager is not acitve
    if ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSS_PR_MULTIQTY_MGR=>C_IPRVT_XCS_MULTIQTY_MGR
                              IF_INUSE  = ABAP_TRUE ) is not initial.
      ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE       = C_FCODE_MULTIQTY
                                            ICON        = ICON_GRADUATE
                                            BUTN_TYPE   = CNTB_BTYPE_BUTTON
                                            TEXT        = 'Multi Quantity'(F03)
                                 exceptions others      = 0 ).

    endif.

*** Hide Tooling Information if none is acitve
    if ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSS_PR_TINFO=>C_IPRVT_XCS_TINFO
                              IF_INUSE  = ABAP_TRUE ) is not initial.
      ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE       = C_FCODE_TINFO
                                            ICON        = ICON_TOOLS
                                            BUTN_TYPE   = CNTB_BTYPE_BUTTON
                                            TEXT        = 'Tooling Information'(F05)
                                 exceptions others      = 0 ).

    endif.

*** Hide MTS if none is acitve
    if ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZIF_VCXI_XCSS_MTS=>C_IPRVT_XCS_MTS
                              IF_INUSE  = ABAP_TRUE ) is not initial.
      ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE       = C_FCODE_MTS
                                            ICON        = ICON_TOOLS
                                            BUTN_TYPE   = CNTB_BTYPE_BUTTON
                                            TEXT        = 'Make-to-Stock'(F07)
                                 exceptions others      = 0 ).

    endif.

*** Button to Run Routing Supervisor
    if ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSR_PR_RTESPV=>C_IPRVT_XCS_RTESPV
                              IF_INUSE  = ABAP_TRUE ) is not initial.
      ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE       = C_FCODE_RTESPV
                                            ICON        = ICON_EXECUTE_OBJECT
                                            IS_DISABLED = ME->IS_RTESPV_DISABLED( )
                                            BUTN_TYPE   = CNTB_BTYPE_BUTTON
                                            TEXT        = 'Fill Production'(F04)
                                 exceptions others      = 0 ).
    endif.

  endmethod.
  method INIT_TOOLBAR_FASTD.

    data: LT_HANDLE type /VCXI/CKX_TT_ID,
          LT_RECLO  type /VCXI/CKX_TT_ID.
    data: LR_PR_BMAKE type ref to ZCL_VCXI_FBSS_PR_BMAKE,
          LR_CUST_BAG type ref to ZCL_VCXI_FBSS_CUST_BAG.


***--------------------------------------------------------------------------------------
*** Get Bag Making PR
    if IR_GATE_BMAKE is bound.
      try.
          move IR_GATE_BMAKE->R_CLSPR ?to LR_PR_BMAKE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_BMAKE.
      endtry.
    endif.

*** Get Bag Customizing
    if LR_PR_BMAKE is bound.
      move LR_PR_BMAKE->GET_CUST_BAG( ) to LR_CUST_BAG.
    endif.

    if LR_CUST_BAG is bound.
***   Get allowed Handle Types of Bag Type
      LT_HANDLE = LR_CUST_BAG->GET_HANDLE( ).

***   Get allowed Reclosing Types of Bag Type
      LT_RECLO = LR_CUST_BAG->GET_RECLO( ).
    endif.

***--------------------------------------------------------------------------------------
*** Handles / Reclosings are allowed
    if ( LT_HANDLE is not initial or
         LT_RECLO  is not initial ) and
       ME->R_TOOLBAR_FASTD is not bound.

***   Create Handle / Reclosing Toolbar
      create object ME->R_TOOLBAR_FASTD
        exporting
          IR_GATE           = ME->R_GATE
          IR_UIGATE         = ME->R_UIGATE
          IF_CONTAINER_NAME = '0110CC_TOOLBAR'
          IF_APPL_EVENTS    = ME->F_APPL_EVENTS.

*** Handles / Reclosings are no longer allowed
    elseif ( LT_HANDLE is initial and
             LT_RECLO  is initial ) and
           ME->R_TOOLBAR_FASTD is bound.

      ME->R_TOOLBAR_FASTD->DO_FREE( ).
      clear ME->R_TOOLBAR_FASTD.

    endif.

  endmethod.
  method INIT_VIS.

    free: ME->S_FASTD_VIS.

*** Initialize Visualization Structure by Bag Finished Good
    ME->INIT_VIS_BY_BFG( exporting IR_GATE_BFG  = IR_GATE_BFG
                         changing  CS_FASTD_VIS = ME->S_FASTD_VIS ).

*** Initialize Visualization Structure by CStep Wicket
    ME->INIT_VIS_BY_CSTEP_WICKET( exporting IR_GATE_CSTEP_WICKET = IR_GATE_CSTEP_WICKET
                                  changing  CS_FASTD_VIS         = ME->S_FASTD_VIS ).

*** Initialize Visualization Structure by CStep Winding
    ME->INIT_VIS_BY_CSTEP_WIND( exporting IR_GATE_CSTEP_WIND = IR_GATE_CSTEP_WIND
                                changing  CS_FASTD_VIS       = ME->S_FASTD_VIS ).

  endmethod.
  method INIT_VIS_BY_BFG.

    data: LR_PR_BFG     type ref to ZCL_VCXI_FBSS_PR_BFG,
          LR_PR_SHIPMGR type ref to ZCL_VCXI_XCSU_PR_SHIPMGR.


    check IR_GATE_BFG is bound.
    move IR_GATE_BFG->R_CLSPR ?to LR_PR_BFG.
    check LR_PR_BFG is bound.

***--------------------------------------------------------------------------------------
*** Material Description
    LR_PR_BFG->GET_MAKTX( importing EF_MAKTX = CS_FASTD_VIS-MAKTX
                                    EF_FOVRR = CS_FASTD_VIS-FOVRR_MAKTX ).

*** Material Belonging to the Customer
    LR_PR_BFG->GET_KDMAT( importing EF_KDMAT = CS_FASTD_VIS-KDMAT ).

*** Customer Description of Material
    LR_PR_BFG->GET_KDPTX( importing EF_KDPTX = CS_FASTD_VIS-KDPTX ).

***--------------------------------------------------------------------------------------
*** Bag Type (Outbound)
    LR_PR_BFG->GET_IBAGT( importing EF_IBAGT = CS_FASTD_VIS-IBAGT
                                    EF_DESCR = CS_FASTD_VIS-IBAGT_DESCR ).

*** Bag Width (Outbound)
    LR_PR_BFG->GET_BGWID( importing ES_BGWID = CS_FASTD_VIS-S_BGWID ).

*** Bag Height (Outbound)
    LR_PR_BFG->GET_BGHEI( importing ES_BGHEI = CS_FASTD_VIS-S_BGHEI ).

*** Bag Weight (Outbound)
    LR_PR_BFG->GET_BGWGT( importing ES_BGWGT = CS_FASTD_VIS-S_BGWGT ).

***--------------------------------------------------------------------------------------
*** Overlap on Width
    LR_PR_BFG->GET_OLWID( importing ES_OLWID = CS_FASTD_VIS-S_OLWID ).

***--------------------------------------------------------------------------------------
*** Left Gusset
    LR_PR_BFG->GET_GULEF( importing ES_GULEF = CS_FASTD_VIS-S_GULEF ).

*** Right Gusset
    LR_PR_BFG->GET_GURIG( importing ES_GURIG = CS_FASTD_VIS-S_GURIG ).

*** Top Gusset
    LR_PR_BFG->GET_GUTOP( importing ES_GUTOP = CS_FASTD_VIS-S_GUTOP ).

*** Bottom Gusset
    LR_PR_BFG->GET_GUBOT( importing ES_GUBOT = CS_FASTD_VIS-S_GUBOT ).

***--------------------------------------------------------------------------------------
*** Top Fold
    LR_PR_BFG->GET_FOTOP( importing ES_FOTOP = CS_FASTD_VIS-S_FOTOP ).

*** Bottom Fold
    LR_PR_BFG->GET_FOBOT( importing ES_FOBOT = CS_FASTD_VIS-S_FOBOT ).

***--------------------------------------------------------------------------------------
*** Wicket Type
    LR_PR_BFG->GET_TWICK( importing EF_TWICK = CS_FASTD_VIS-TWICK ).

*** Wicket Lip
    LR_PR_BFG->GET_WILIP( importing ES_WILIP = CS_FASTD_VIS-S_WILIP ).

*** Hole Diameter
    LR_PR_BFG->GET_WIHDI( importing ES_WIHDI = CS_FASTD_VIS-S_WIHDI ).

*** Hole Space
    LR_PR_BFG->GET_WIHSP( importing ES_WIHSP = CS_FASTD_VIS-S_WIHSP ).

*** Bag/Stack
    LR_PR_BFG->GET_WIBST( importing EF_WIBST = CS_FASTD_VIS-WIBST ).

***--------------------------------------------------------------------------------------
*** Bag/Roll
    CS_FASTD_VIS-BGPRL = LR_PR_BFG->GET_BGPRL( ).

***--------------------------------------------------------------------------------------
*** Get Shipping Manager Information
    LR_PR_SHIPMGR = LR_PR_BFG->GET_PRVDR_SHIPMGR( ).
    if LR_PR_SHIPMGR is bound.
      ME->S_FASTD_VIS-SHSCH = LR_PR_SHIPMGR->GET_SHSCH( ).
      ME->S_FASTD_VIS-CPACK = LR_PR_SHIPMGR->GET_CPACK( ).
    endif.

  endmethod.
  method INIT_VIS_BY_CSTEP_WICKET.

    data: LR_PR_CSTEP_WICKET    type ref to ZCL_VCXI_FBSS_PR_CSTEP_WICKET.

    check IR_GATE_CSTEP_WICKET is bound.
    move IR_GATE_CSTEP_WICKET->R_CLSPR ?to LR_PR_CSTEP_WICKET.
    check LR_PR_CSTEP_WICKET is bound.

***--------------------------------------------------------------------------------------
*** Wicket Wire
    LR_PR_CSTEP_WICKET->GET_WIWIR( importing EF_WIWIR = CS_FASTD_VIS-WIWIR ).

*** Rubber
    LR_PR_CSTEP_WICKET->GET_WIRUB( importing EF_WIRUB = CS_FASTD_VIS-WIRUB ).

*** Rubber/Stack
    LR_PR_CSTEP_WICKET->GET_WIRST( importing EF_WIRST = CS_FASTD_VIS-WIRST ).

*** Paperboard
    LR_PR_CSTEP_WICKET->GET_WIPBO( importing EF_WIPBO = CS_FASTD_VIS-WIPBO ).

*** Paperboard per Stack
    LR_PR_CSTEP_WICKET->GET_WIPST( importing EF_WIPST = CS_FASTD_VIS-WIPST ).

*** Spool Pin
    LR_PR_CSTEP_WICKET->GET_WISPI( importing EF_WISPI = CS_FASTD_VIS-WISPI ).

*** Spool Cap
    LR_PR_CSTEP_WICKET->GET_WISCA( importing EF_WISCA = CS_FASTD_VIS-WISCA ).

*** Spool per Stack
    LR_PR_CSTEP_WICKET->GET_WISST( importing EF_WISST = CS_FASTD_VIS-WISST ).

  endmethod.
  method INIT_VIS_BY_CSTEP_WIND.

    data: LR_PR_CSTEP_WIND    type ref to ZCL_VCXI_FBSS_PR_CSTEP_WIND.


    check IR_GATE_CSTEP_WIND is bound.
    move IR_GATE_CSTEP_WIND->R_CLSPR ?to LR_PR_CSTEP_WIND.
    check LR_PR_CSTEP_WIND is bound.

***--------------------------------------------------------------------------------------
*** Winding Mandrel
*    CS_FASTD_VIS-WMDRL = LR_PR_CSTEP_WIND->GET_WMDRL( ).

  endmethod.
  method IS_RTESPV_DISABLED.

    data: LF_ALLOWED type ABAP_BOOL.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.


*** Get Lock and In-Use Status
    if ME->R_GATE->IS_LOCKED( ) ne ABAP_TRUE.
      RF_DISABLED = ABAP_TRUE.

    else.
***   Start Negative
      RF_DISABLED = ABAP_TRUE.

***   Get Gates of Routing Supervisor
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSR_PR_RTESPV=>C_IPRVT_XCS_RTESPV
                                       IF_INUSE  = ABAP_TRUE ).
      check LT_GATE is not initial.

***   Check if Fill Production is allowed
      cast ZCL_VCXI_XCSR_PR_RTESPV( LT_GATE[ 1 ]->R_CLSPR )->IS_FILL_PROD_ALLOWED( importing EF_ALLOWED = LF_ALLOWED ).
      RF_DISABLED = switch #( LF_ALLOWED when ABAP_TRUE then ABAP_FALSE else ABAP_TRUE ).
    endif.

  endmethod.
  method OPEN_SUBSCREEN.

***--------------------------------------------------------------------------------------
*** Deactivate UI for Bag Part
    ME->DEACTIVATE_BPART( ).

*** Deactivate UI for Handle
    ME->DEACTIVATE_HANDLE( ).

*** Deactivate UI for Conversion Step Reclosing
    ME->DEACTIVATE_RECLO( ).

***--------------------------------------------------------------------------------------
*** Activate different Screens based on selected Gate
    case IR_GATE->F_ID.
      when ME->R_BL_FASTD->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_BPART=>C_IPRVT_BPART ).
***     Activate UI for Bag Part
        ME->ACTIVATE_BPART( IR_GATE = IR_GATE ).

      when ME->R_BL_FASTD->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_HANDLE=>C_IPRVT_HANDLE ).
***     Activate UI for Handle
        ME->ACTIVATE_HANDLE( IR_GATE = IR_GATE ).

      when ME->R_BL_FASTD->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_RECLO=>C_IPRVT_CSTEP_RECLO ).
***     Activate UI for Conversion Step Reclosing
        ME->ACTIVATE_RECLO( IR_GATE = IR_GATE ).

      when others.
        clear ME->S_DYNP_TAB.
    endcase.

    ME->F_ALREADY_OPEN = ABAP_TRUE.

  endmethod.
  method PREPARE_IBAGT_CHNAGE.

    data: LF_IBPAR type ZVCXI_FBS_IBPAR,
          LF_THNDL type ZVCXI_FBS_THNDL.
    data: LT_IBPAR_OLD   type /VCXI/CKX_TT_ID,
          LT_IBPAR_NEW   type /VCXI/CKX_TT_ID,
          LT_THNDL_OLD   type /VCXI/CKX_TT_ID,
          LT_THNDL_NEW   type /VCXI/CKX_TT_ID,
          LT_GATE        type        /VCXI/VKSR_TT_GATE,
          LT_GATE_PART   type        /VCXI/VKSR_TT_GATE,
          LT_GATE_HANDLE type        /VCXI/VKSR_TT_GATE.
    data: LR_CUST_BAG_OLD type ref to ZCL_VCXI_FBSS_CUST_BAG,
          LR_CUST_BAG_NEW type ref to ZCL_VCXI_FBSS_CUST_BAG,
          LR_GATE         type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BPART     type ref to ZCL_VCXI_FBSS_PR_BPART,
          LR_GATE_HANDLE  type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_HANDLE    type ref to ZCL_VCXI_FBSS_PR_HANDLE.


***--------------------------------------------------------------------------------------
*** Get Bag Customizing
    if IF_IBAGT_OLD is not initial.
      LR_CUST_BAG_OLD = ZCL_VCXI_FBSS_CUST_BAG=>GET_INSTANCE( IF_IBAGT = IF_IBAGT_OLD ).
    endif.
    if IF_IBAGT_NEW is not initial.
      LR_CUST_BAG_NEW = ZCL_VCXI_FBSS_CUST_BAG=>GET_INSTANCE( IF_IBAGT = IF_IBAGT_NEW ).
    endif.

*** Start Positive
    move ZCL_VCXI_FBSS_BL_FASTD=>C_SFDAT_STANDARD to EF_SFDAT.


***--------------------------------------------------------------------------------------
*** Get defined Bag Parts
    if LR_CUST_BAG_OLD is bound.
      LT_IBPAR_OLD = LR_CUST_BAG_OLD->GET_IBPAR( ).
    endif.
    if LR_CUST_BAG_NEW is bound.
      LT_IBPAR_NEW = LR_CUST_BAG_NEW->GET_IBPAR( ).
    endif.

*** Filter to Bag Parts which will be deleted
    loop at LT_IBPAR_OLD into LF_IBPAR.
      read table LT_IBPAR_NEW with key TABLE_LINE = LF_IBPAR
                              transporting no fields.
      if SY-SUBRC eq 0.
        delete LT_IBPAR_OLD.
      endif.
    endloop.

    if LT_IBPAR_OLD is not initial.
***   Get all Bag Parts
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_BPART=>C_IPRVT_BPART
                                       IF_INUSE = ABAP_TRUE ).

      loop at LT_GATE into LR_GATE.
***     Get Bag Part ID and compare it to the list of Bag Parts, which will be deleted
        move LR_GATE->R_CLSPR ?to LR_PR_BPART.
        LR_PR_BPART->GET_IBPAR( importing EF_IBPAR = LF_IBPAR ).
        read table LT_IBPAR_OLD with key TABLE_LINE = LF_IBPAR
                                transporting no fields.
        check SY-SUBRC eq 0.

***     Check if Bag Part still has "Standard Configuration"
        ME->R_BL_FASTD->GET_FASTD_BY_PART( exporting IR_GATE_PART = LR_GATE
                                           importing EF_SFDAT     = EF_SFDAT ).
        if EF_SFDAT ne ZCL_VCXI_FBSS_BL_FASTD=>C_SFDAT_STANDARD.
          exit.
        endif.
        append LR_GATE to LT_GATE_PART.
      endloop.
    endif.

*** Don't continue in case of Non-Standard Configuration
    check EF_SFDAT eq ZCL_VCXI_FBSS_BL_FASTD=>C_SFDAT_STANDARD.


***--------------------------------------------------------------------------------------
*** Get defined Handles
    if LR_CUST_BAG_OLD is bound.
      LT_THNDL_OLD = LR_CUST_BAG_OLD->GET_HANDLE( ).
    endif.
    if LR_CUST_BAG_NEW is bound.
      LT_THNDL_NEW = LR_CUST_BAG_NEW->GET_HANDLE( ).
    endif.

*** Filter to Handles which will be deleted
    loop at LT_THNDL_OLD into LF_THNDL.
      read table LT_THNDL_NEW with key TABLE_LINE = LF_THNDL
                              transporting no fields.
      if SY-SUBRC eq 0.
        delete LT_THNDL_OLD.
      endif.
    endloop.

    if LT_THNDL_OLD is not initial.
***   Get Handle Type Provider
      LT_GATE_HANDLE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_HANDLE=>C_IPRVT_HANDLE
                                              IF_INUSE = ABAP_TRUE ).
      if LT_GATE_HANDLE is not initial.
***     Get all Handle Parts
        LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_HPART=>C_IPRVT_HPART
                                         IF_INUSE = ABAP_TRUE ).
      endif.


      loop at LT_GATE into LR_GATE.
***     Filter to effected Handles
        clear LR_PR_HANDLE.
        loop at LT_GATE_HANDLE into LR_GATE_HANDLE.
          check LR_GATE_HANDLE->IS_PARENT( IR_GATE_CHILD = LR_GATE ) eq ABAP_TRUE.
          move LR_GATE_HANDLE->R_CLSPR ?to LR_PR_HANDLE.
          exit.
        endloop.
        check LR_PR_HANDLE is bound.
        LR_PR_HANDLE->GET_THNDL( importing EF_THNDL = LF_THNDL ).
        read table LT_THNDL_OLD with key TABLE_LINE = LF_THNDL
                                transporting no fields.
        check SY-SUBRC eq 0.

***     Check if Handle Part still has "Standard Configuration"
        ME->R_BL_FASTD->GET_FASTD_BY_PART( exporting IR_GATE_PART = LR_GATE
                                           importing EF_SFDAT     = EF_SFDAT ).
        if EF_SFDAT ne ZCL_VCXI_FBSS_BL_FASTD=>C_SFDAT_STANDARD.
          exit.
        endif.
        append LR_GATE to LT_GATE_PART.
      endloop.
    endif.

*** Don't continue in case of Non-Standard Configuration
    check EF_SFDAT eq ZCL_VCXI_FBSS_BL_FASTD=>C_SFDAT_STANDARD.


***--------------------------------------------------------------------------------------
*** Delete Film Components by list of Parts
    check LT_GATE_PART is not initial.
    ME->R_BL_FASTD->DELETE_FCOMP_BY_PARTS( IT_GATE_PART = LT_GATE_PART ).

  endmethod.
  method SET_BPART_VIS_TO_BFILM.

    data: LR_PR_BFILM   type ref to ZCL_VCXI_FBSS_PR_BFILM.

    check IR_GATE_BFILM is bound.
    move IR_GATE_BFILM->R_CLSPR ?to LR_PR_BFILM.
    check LR_PR_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Set Number of Ups
    if ME->S_FASTD_BPART_VIS-NOUPS ne IS_FASTD_BPART_VIS-NOUPS.
      LR_PR_BFILM->SET_NOUPS( IF_NOUPS = IS_FASTD_BPART_VIS-NOUPS
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim on Width
    if ME->S_FASTD_BPART_VIS-S_TRWID ne IS_FASTD_BPART_VIS-S_TRWID.
      LR_PR_BFILM->SET_TRWID( IS_TRWID = IS_FASTD_BPART_VIS-S_TRWID
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Trim on Length
    if ME->S_FASTD_BPART_VIS-S_TRLEN ne IS_FASTD_BPART_VIS-S_TRLEN.
      LR_PR_BFILM->SET_TRLEN( IS_TRLEN = IS_FASTD_BPART_VIS-S_TRLEN
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Winding Side
    if ME->S_FASTD_BPART_VIS-RWSID ne IS_FASTD_BPART_VIS-RWSID.
      LR_PR_BFILM->SET_RWSID( exporting IF_RWSID = IS_FASTD_BPART_VIS-RWSID
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Winding Direction
    if ME->S_FASTD_BPART_VIS-RWDIR ne IS_FASTD_BPART_VIS-RWDIR.
      LR_PR_BFILM->SET_RWDIR( exporting IF_RWDIR = IS_FASTD_BPART_VIS-RWDIR
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Eyemark Position
    if ME->S_FASTD_BPART_VIS-EYEMP ne IS_FASTD_BPART_VIS-EYEMP.
      LR_PR_BFILM->SET_EYEMP( exporting IF_EYEMP = IS_FASTD_BPART_VIS-EYEMP
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_BPART_VIS_TO_BPART.

    data: LR_PR_BPART   type ref to ZCL_VCXI_FBSS_PR_BPART.

    check IR_GATE_BPART is bound.
    move IR_GATE_BPART->R_CLSPR ?to LR_PR_BPART.
    check LR_PR_BPART is bound.

***--------------------------------------------------------------------------------------
*** Set Bag Part Direction
    if ME->S_FASTD_BPART_VIS-BPDIR ne IS_FASTD_BPART_VIS-BPDIR.
      LR_PR_BPART->SET_BPDIR( IF_BPDIR = IS_FASTD_BPART_VIS-BPDIR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Bag Part Width if it is "Overriden"
    if ME->S_FASTD_BPART_VIS-FOVRR_BPWID eq ABAP_TRUE.
      if ME->S_FASTD_BPART_VIS-S_BPWID ne IS_FASTD_BPART_VIS-S_BPWID.
        LR_PR_BPART->SET_BPWID( IS_BPWID = IS_FASTD_BPART_VIS-S_BPWID
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Part Width
    if ME->S_FASTD_BPART_VIS-FOVRR_BPWID ne IS_FASTD_BPART_VIS-FOVRR_BPWID.
      LR_PR_BPART->SET_FOVRR_BPWID( IF_FOVRR = IS_FASTD_BPART_VIS-FOVRR_BPWID ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Bag Part Length if it is "Overriden"
    if ME->S_FASTD_BPART_VIS-FOVRR_BPLEN eq ABAP_TRUE.
      if ME->S_FASTD_BPART_VIS-S_BPLEN ne IS_FASTD_BPART_VIS-S_BPLEN.
        LR_PR_BPART->SET_BPLEN( IS_BPLEN = IS_FASTD_BPART_VIS-S_BPLEN
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Part Length
    if ME->S_FASTD_BPART_VIS-FOVRR_BPLEN ne IS_FASTD_BPART_VIS-FOVRR_BPLEN.
      LR_PR_BPART->SET_FOVRR_BPLEN( IF_FOVRR = IS_FASTD_BPART_VIS-FOVRR_BPLEN ).
    endif.

  endmethod.
  method SET_BPART_VIS_TO_FCONO.

    data: LF_SLIT_OLD type        ABAP_BOOL,
          LF_SLIT_NEW type        ABAP_BOOL.
    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_FCONO  type ref to ZCL_VCXI_FFSS_PR_FCONO,
          LR_PR_OUTPUT type ref to ZCL_VCXI_FFSS_PR_OUTPUT.

***--------------------------------------------------------------------------------------
*** Get Bag Film Reference
    check IR_GATE_FCONO is bound.
    move IR_GATE_FCONO->R_CLSPR ?to LR_PR_FCONO.
    check LR_PR_FCONO is bound.

*** Get Reference to Output
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSS_PR_OUTPUT=>C_IPRVT_OUTPUT
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      check LR_GATE->IS_PARENT( IR_GATE_CHILD = IR_GATE_FCONO ) eq ABAP_TRUE.
      move LR_GATE->R_CLSPR ?to LR_PR_OUTPUT.
    endloop.
    check LR_PR_OUTPUT is bound.

***--------------------------------------------------------------------------------------
*** Optimization of Slitting
    if ME->S_FASTD_BPART_VIS-FOPSL ne IS_FASTD_BPART_VIS-FOPSL.
      LR_PR_OUTPUT->SET_FOPSL( IF_FOPSL = IS_FASTD_BPART_VIS-FOPSL
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Number of Films, Number of Outs, Trim of "Slit before"
    if ME->S_FASTD_BPART_VIS-NOFIL       ne IS_FASTD_BPART_VIS-NOFIL or
       ME->S_FASTD_BPART_VIS-NOOUT       ne IS_FASTD_BPART_VIS-NOOUT or
       ME->S_FASTD_BPART_VIS-S_TRWID_SLB ne IS_FASTD_BPART_VIS-S_TRWID_SLB.

***     Avoid structural changes in non-standard configurations
      if ME->F_SFDAT_BPART ne ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_STANDARD.
***     Check if Slitting used to be active
        if ME->S_FASTD_BPART_VIS-NOOUT ne 1 or
           ME->S_FASTD_BPART_VIS-S_TRWID_SLB-TRWID ne 0.
          move ABAP_TRUE to LF_SLIT_OLD.
        endif.
***     Check if Slitting should now be active
        if IS_FASTD_BPART_VIS-NOOUT ne 1 or
           IS_FASTD_BPART_VIS-S_TRWID_SLB-TRWID ne 0.
          move ABAP_TRUE to LF_SLIT_NEW.
        endif.

        if ME->S_FASTD_BPART_VIS-NOFIL ne IS_FASTD_BPART_VIS-NOFIL or
           LF_SLIT_OLD                 ne LF_SLIT_NEW.
***       Structural changes are not allowed, due to non-standard configuration.
          message id 'ZVCXI_FFSS' type 'W' number 501.
          exit.
        endif.

***     Set Number Out directly
        if ME->S_FASTD_BPART_VIS-NOOUT ne IS_FASTD_BPART_VIS-NOOUT.
          LR_PR_FCONO->SET_NOOUT( IF_NOOUT = IS_FASTD_BPART_VIS-NOOUT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

***     Set Trim directly
        if ME->S_FASTD_BPART_VIS-S_TRWID_SLB ne IS_FASTD_BPART_VIS-S_TRWID_SLB.
          LR_PR_OUTPUT->SET_TRWID( IS_TRWID = IS_FASTD_BPART_VIS-S_TRWID_SLB
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

      else.
***     Set through Fast Data
        ME->R_BL_FASTD->SET_NOFIL_BY_PART( IR_GATE_PART = ME->R_OLD_GATE
                                           IF_NOFIL     = IS_FASTD_BPART_VIS-NOFIL
                                           IF_NOOUT     = IS_FASTD_BPART_VIS-NOOUT
                                           IS_TRWID     = IS_FASTD_BPART_VIS-S_TRWID_SLB ).
      endif.
    endif.

  endmethod.
  method SET_BPART_VIS_TO_MS_EMAT.

    data: LR_PR_MS_EMAT   type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.

    check IR_GATE_MS_EMAT is bound.
    move IR_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
    check LR_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_FASTD_BPART_VIS-MATNR ne IS_FASTD_BPART_VIS-MATNR.
      LR_PR_MS_EMAT->SET_MATNR( IF_MATNR = IS_FASTD_BPART_VIS-MATNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Reverse Film Structure
    if ME->S_FASTD_BPART_VIS-FRFST ne IS_FASTD_BPART_VIS-FRFST.
      LR_PR_MS_EMAT->SET_FRFST( IF_FRFST = IS_FASTD_BPART_VIS-FRFST
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_BPART_VIS_TO_MS_FPROC.

    data: LF_MAKTX         type        MAKTX.
    data: LR_PR_MS_FPROC   type ref to ZCL_VCXI_FFSS_PR_MS_FPROC.


    check IR_GATE_MS_FPROC is bound.
    move IR_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
    check LR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_FASTD_BPART_VIS-MATNR ne IS_FASTD_BPART_VIS-MATNR.
      LR_PR_MS_FPROC->SET_MATNR( IF_MATNR = IS_FASTD_BPART_VIS-MATNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material description
    if ME->S_FASTD_BPART_VIS-MATNR_DESCR ne IS_FASTD_BPART_VIS-MATNR_DESCR or
       ME->S_FASTD_BPART_VIS-FOVRR_MAKTX ne IS_FASTD_BPART_VIS-FOVRR_MAKTX.
      LF_MAKTX = IS_FASTD_BPART_VIS-MATNR_DESCR.
      if IS_FASTD_BPART_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        LR_PR_MS_FPROC->SET_MAKTX( IF_MAKTX = LF_MAKTX
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_MS_FPROC->SET_MAKTX( IF_MAKTX = LF_MAKTX
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Set Procurement Option
    if ME->S_FASTD_BPART_VIS-PURCH ne IS_FASTD_BPART_VIS-PURCH.
      LR_PR_MS_FPROC->SET_PURCH( IF_PURCH = IS_FASTD_BPART_VIS-PURCH
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Vendor
    if ME->S_FASTD_BPART_VIS-LIFNR ne IS_FASTD_BPART_VIS-LIFNR.
      LR_PR_MS_FPROC->SET_LIFNR( IF_LIFNR = IS_FASTD_BPART_VIS-LIFNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Reverse Film Structure
    if ME->S_FASTD_BPART_VIS-FRFST ne IS_FASTD_BPART_VIS-FRFST.
      LR_PR_MS_FPROC->SET_FRFST( IF_FRFST = IS_FASTD_BPART_VIS-FRFST
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Film Style
    if ME->S_FASTD_BPART_VIS-FISTY ne IS_FASTD_BPART_VIS-FISTY.
      LR_PR_MS_FPROC->SET_FISTY( IF_FISTY = IS_FASTD_BPART_VIS-FISTY
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Procurement Film Width
    if ME->S_FASTD_BPART_VIS-PFWID ne IS_FASTD_BPART_VIS-PFWID.
      LR_PR_MS_FPROC->SET_PFWID( IS_PFWID = IS_FASTD_BPART_VIS-S_PFWID
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Procurement Trim Requirement on Width
    if ME->S_FASTD_BPART_VIS-PTRQW ne IS_FASTD_BPART_VIS-PTRQW.
      LR_PR_MS_FPROC->SET_PTRQW( IS_PTRQW = IS_FASTD_BPART_VIS-S_PTRQW
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Film Thickness
    if ME->S_FASTD_BPART_VIS-FITHI ne IS_FASTD_BPART_VIS-FITHI.
      LR_PR_MS_FPROC->SET_FITHI( IS_FITHI = IS_FASTD_BPART_VIS-S_FITHI
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Film Density
    if ME->S_FASTD_BPART_VIS-FIDEN ne IS_FASTD_BPART_VIS-FIDEN.
      LR_PR_MS_FPROC->SET_FIDEN( IS_FIDEN = IS_FASTD_BPART_VIS-S_FIDEN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Folding Type
    if ME->S_FASTD_BPART_VIS-TFOLD ne IS_FASTD_BPART_VIS-TFOLD.
      LR_PR_MS_FPROC->SET_TFOLD( IF_TFOLD = IS_FASTD_BPART_VIS-TFOLD
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Left Gusset
    if ME->S_FASTD_BPART_VIS-GULEF ne IS_FASTD_BPART_VIS-GULEF.
      LR_PR_MS_FPROC->SET_GULEF( IS_GULEF = IS_FASTD_BPART_VIS-S_GULEF
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Right Gusset
    if ME->S_FASTD_BPART_VIS-GURIG ne IS_FASTD_BPART_VIS-GURIG.
      LR_PR_MS_FPROC->SET_GURIG( IS_GURIG = IS_FASTD_BPART_VIS-S_GURIG
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_DDVAL_LCOUT.

    data: LF_ID             type        VRM_ID.
    data: LS_BPINFO         type        ZVCXI_FBSS_S_BPINFO.
    data: LT_VALUE          type        VRM_VALUES.
    data: LR_PR_CSTEP_RECLO type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO,
          LR_BL_BGFPROP     type ref to ZCL_VCXI_FBSS_BL_BGFPROP.
    field-symbols:  <S_VALUE>     type        VRM_VALUE.


***--------------------------------------------------------------------------------------
*** Get Conversion Step Reclosing Reference
    move IR_GATE_CSTEP_RECLO->R_CLSPR ?to LR_PR_CSTEP_RECLO.
    check LR_PR_CSTEP_RECLO is bound.

*** Get List Bag Parts of Outbound Bag Properties
    LR_PR_CSTEP_RECLO->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGFPX( importing ER_BL_BGFPROP = LR_BL_BGFPROP ).
    loop at LR_BL_BGFPROP->T_BPINFO into LS_BPINFO.
      append initial line to LT_VALUE assigning <S_VALUE>.

      move LS_BPINFO-IBPAR                                          to <S_VALUE>-KEY.
      move ZCL_VCXI_FBSSC_BAGTY=>GET_IBPAR_DESCR( LS_BPINFO-IBPAR ) to <S_VALUE>-TEXT.
    endloop.

***------------------------------------------------------------------------------------------------
*** Set to DropDown List
    move 'ZVCXI_FBSS_S_FASTD_RECLO_VIS-LCOUT' to LF_ID.

*** Initialize listbox content
    call function 'VRM_REFRESH_VALUES'.

    call function 'VRM_SET_VALUES'
      exporting
        ID     = LF_ID
        VALUES = LT_VALUE.

  endmethod.
  method SET_HPART_VIS_TO_BFILM.

    data: LR_PR_BFILM   type ref to ZCL_VCXI_FBSS_PR_BFILM.

    check IR_GATE_BFILM is bound.
    move IR_GATE_BFILM->R_CLSPR ?to LR_PR_BFILM.
    check LR_PR_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Set Number of Ups
    if ME->S_FASTD_HPART_VIS-NOUPS ne IS_FASTD_HPART_VIS-NOUPS.
      LR_PR_BFILM->SET_NOUPS( IF_NOUPS = IS_FASTD_HPART_VIS-NOUPS
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Trim on Width
    if ME->S_FASTD_HPART_VIS-S_TRWID ne IS_FASTD_HPART_VIS-S_TRWID.
      LR_PR_BFILM->SET_TRWID( IS_TRWID = IS_FASTD_HPART_VIS-S_TRWID
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Trim on Length
    if ME->S_FASTD_HPART_VIS-S_TRLEN ne IS_FASTD_HPART_VIS-S_TRLEN.
      LR_PR_BFILM->SET_TRLEN( IS_TRLEN = IS_FASTD_HPART_VIS-S_TRLEN
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Winding Side
    if ME->S_FASTD_HPART_VIS-RWSID ne IS_FASTD_HPART_VIS-RWSID.
      LR_PR_BFILM->SET_RWSID( exporting IF_RWSID = IS_FASTD_HPART_VIS-RWSID
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Winding Direction
    if ME->S_FASTD_HPART_VIS-RWDIR ne IS_FASTD_HPART_VIS-RWDIR.
      LR_PR_BFILM->SET_RWDIR( exporting IF_RWDIR = IS_FASTD_HPART_VIS-RWDIR
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Eyemark Position
    if ME->S_FASTD_HPART_VIS-EYEMP ne IS_FASTD_HPART_VIS-EYEMP.
      LR_PR_BFILM->SET_EYEMP( exporting IF_EYEMP = IS_FASTD_HPART_VIS-EYEMP
                                        IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_HPART_VIS_TO_FCONO.

    data: LF_SLIT_OLD type        ABAP_BOOL,
          LF_SLIT_NEW type        ABAP_BOOL.
    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_FCONO  type ref to ZCL_VCXI_FFSS_PR_FCONO,
          LR_PR_OUTPUT type ref to ZCL_VCXI_FFSS_PR_OUTPUT.

***--------------------------------------------------------------------------------------
*** Get Bag Film Reference
    check IR_GATE_FCONO is bound.
    move IR_GATE_FCONO->R_CLSPR ?to LR_PR_FCONO.
    check LR_PR_FCONO is bound.

*** Get Reference to Output
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSS_PR_OUTPUT=>C_IPRVT_OUTPUT
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      check LR_GATE->IS_PARENT( IR_GATE_CHILD = IR_GATE_FCONO ) eq ABAP_TRUE.
      move LR_GATE->R_CLSPR ?to LR_PR_OUTPUT.
    endloop.
    check LR_PR_OUTPUT is bound.

***--------------------------------------------------------------------------------------
*** Optimization of Slitting
    if ME->S_FASTD_HPART_VIS-FOPSL ne IS_FASTD_HPART_VIS-FOPSL.
      LR_PR_OUTPUT->SET_FOPSL( IF_FOPSL = IS_FASTD_HPART_VIS-FOPSL
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Number of Films, Number of Outs, Trim of "Slit before"
    if ME->S_FASTD_HPART_VIS-NOFIL       ne IS_FASTD_HPART_VIS-NOFIL or
       ME->S_FASTD_HPART_VIS-NOOUT       ne IS_FASTD_HPART_VIS-NOOUT or
       ME->S_FASTD_HPART_VIS-S_TRWID_SLB ne IS_FASTD_HPART_VIS-S_TRWID_SLB.

***     Avoid structural changes in non-standard configurations
      if ME->F_SFDAT_HPART ne ZCL_VCXI_FFSS_BL_FASTD=>C_SFDAT_STANDARD.
***     Check if Slitting used to be active
        if ME->S_FASTD_HPART_VIS-NOOUT ne 1 or
           ME->S_FASTD_HPART_VIS-S_TRWID_SLB-TRWID ne 0.
          move ABAP_TRUE to LF_SLIT_OLD.
        endif.
***     Check if Slitting should now be active
        if IS_FASTD_HPART_VIS-NOOUT ne 1 or
           IS_FASTD_HPART_VIS-S_TRWID_SLB-TRWID ne 0.
          move ABAP_TRUE to LF_SLIT_NEW.
        endif.

        if ME->S_FASTD_HPART_VIS-NOFIL ne IS_FASTD_HPART_VIS-NOFIL or
           LF_SLIT_OLD                 ne LF_SLIT_NEW.
***       Structural changes are not allowed, due to non-standard configuration.
          message id 'ZVCXI_FFSS' type 'W' number 501.
          exit.
        endif.

***     Set Number Out directly
        if ME->S_FASTD_HPART_VIS-NOOUT ne IS_FASTD_HPART_VIS-NOOUT.
          LR_PR_FCONO->SET_NOOUT( IF_NOOUT = IS_FASTD_HPART_VIS-NOOUT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

***     Set Trim directly
        if ME->S_FASTD_HPART_VIS-S_TRWID_SLB ne IS_FASTD_HPART_VIS-S_TRWID_SLB.
          LR_PR_OUTPUT->SET_TRWID( IS_TRWID = IS_FASTD_HPART_VIS-S_TRWID_SLB
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

      else.
***     Set through Fast Data
        ME->R_BL_FASTD->SET_NOFIL_BY_PART( IR_GATE_PART = ME->R_HN_GATE
                                           IF_NOFIL     = IS_FASTD_HPART_VIS-NOFIL
                                           IF_NOOUT     = IS_FASTD_HPART_VIS-NOOUT
                                           IS_TRWID     = IS_FASTD_HPART_VIS-S_TRWID_SLB ).
      endif.
    endif.

  endmethod.
  method SET_HPART_VIS_TO_HPART.

    data: LR_PR_HPART   type ref to ZCL_VCXI_FBSS_PR_HPART.

    check IR_GATE_HPART is bound.
    move IR_GATE_HPART->R_CLSPR ?to LR_PR_HPART.
    check LR_PR_HPART is bound.

***--------------------------------------------------------------------------------------
*** Set Handle Part Factor
    if ME->S_FASTD_HPART_VIS-HPFCT ne IS_FASTD_HPART_VIS-HPFCT.
      LR_PR_HPART->SET_HPFCT( IF_HPFCT = IS_FASTD_HPART_VIS-HPFCT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Handle Part Width
    if ME->S_FASTD_HPART_VIS-HPWID ne IS_FASTD_HPART_VIS-HPWID.
      LR_PR_HPART->SET_HPWID( IS_HPWID = IS_FASTD_HPART_VIS-S_HPWID
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Handle Part Length
    if ME->S_FASTD_HPART_VIS-HPLEN ne IS_FASTD_HPART_VIS-HPLEN.
      LR_PR_HPART->SET_HPLEN( IS_HPLEN = IS_FASTD_HPART_VIS-S_HPLEN
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Handle Part Cutout Area
    if ME->S_FASTD_HPART_VIS-COARE ne IS_FASTD_HPART_VIS-COARE.
      LR_PR_HPART->SET_COARE( IS_COARE = IS_FASTD_HPART_VIS-S_COARE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_HPART_VIS_TO_MS_EMAT.

    data: LR_PR_MS_EMAT   type ref to ZCL_VCXI_FFSS_PR_MS_EMAT.

    check IR_GATE_MS_EMAT is bound.
    move IR_GATE_MS_EMAT->R_CLSPR ?to LR_PR_MS_EMAT.
    check LR_PR_MS_EMAT is bound.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_FASTD_HPART_VIS-MATNR ne IS_FASTD_HPART_VIS-MATNR.
      LR_PR_MS_EMAT->SET_MATNR( IF_MATNR = IS_FASTD_HPART_VIS-MATNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Reverse Film Structure
    if ME->S_FASTD_HPART_VIS-FRFST ne IS_FASTD_HPART_VIS-FRFST.
      LR_PR_MS_EMAT->SET_FRFST( IF_FRFST = IS_FASTD_HPART_VIS-FRFST
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_HPART_VIS_TO_MS_FPROC.

    data: LF_MAKTX         type        MAKTX.
    data: LR_PR_MS_FPROC   type ref to ZCL_VCXI_FFSS_PR_MS_FPROC.


    check IR_GATE_MS_FPROC is bound.
    move IR_GATE_MS_FPROC->R_CLSPR ?to LR_PR_MS_FPROC.
    check LR_PR_MS_FPROC is bound.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_FASTD_HPART_VIS-MATNR ne IS_FASTD_HPART_VIS-MATNR.
      LR_PR_MS_FPROC->SET_MATNR( IF_MATNR = IS_FASTD_HPART_VIS-MATNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material description
    if ME->S_FASTD_HPART_VIS-MATNR_DESCR ne IS_FASTD_HPART_VIS-MATNR_DESCR or
       ME->S_FASTD_HPART_VIS-FOVRR_MAKTX ne IS_FASTD_HPART_VIS-FOVRR_MAKTX.
      LF_MAKTX = IS_FASTD_HPART_VIS-MATNR_DESCR.
      if IS_FASTD_HPART_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        LR_PR_MS_FPROC->SET_MAKTX( IF_MAKTX = LF_MAKTX
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_MS_FPROC->SET_MAKTX( IF_MAKTX = LF_MAKTX
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Set Procurement Option
    if ME->S_FASTD_HPART_VIS-PURCH ne IS_FASTD_HPART_VIS-PURCH.
      LR_PR_MS_FPROC->SET_PURCH( IF_PURCH = IS_FASTD_HPART_VIS-PURCH
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Vendor
    if ME->S_FASTD_HPART_VIS-LIFNR ne IS_FASTD_HPART_VIS-LIFNR.
      LR_PR_MS_FPROC->SET_LIFNR( IF_LIFNR = IS_FASTD_HPART_VIS-LIFNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Reverse Film Structure
    if ME->S_FASTD_HPART_VIS-FRFST ne IS_FASTD_HPART_VIS-FRFST.
      LR_PR_MS_FPROC->SET_FRFST( IF_FRFST = IS_FASTD_HPART_VIS-FRFST
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Film Style
    if ME->S_FASTD_HPART_VIS-FISTY ne IS_FASTD_HPART_VIS-FISTY.
      LR_PR_MS_FPROC->SET_FISTY( IF_FISTY = IS_FASTD_HPART_VIS-FISTY
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Procurement Film Width
    if ME->S_FASTD_HPART_VIS-PFWID ne IS_FASTD_HPART_VIS-PFWID.
      LR_PR_MS_FPROC->SET_PFWID( IS_PFWID = IS_FASTD_HPART_VIS-S_PFWID
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Procurement Trim Requirement on Width
    if ME->S_FASTD_HPART_VIS-PTRQW ne IS_FASTD_HPART_VIS-PTRQW.
      LR_PR_MS_FPROC->SET_PTRQW( IS_PTRQW = IS_FASTD_HPART_VIS-S_PTRQW
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Film Thickness
    if ME->S_FASTD_HPART_VIS-FITHI ne IS_FASTD_HPART_VIS-FITHI.
      LR_PR_MS_FPROC->SET_FITHI( IS_FITHI = IS_FASTD_HPART_VIS-S_FITHI
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Film Density
    if ME->S_FASTD_HPART_VIS-FIDEN ne IS_FASTD_HPART_VIS-FIDEN.
      LR_PR_MS_FPROC->SET_FIDEN( IS_FIDEN = IS_FASTD_HPART_VIS-S_FIDEN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Folding Type
    if ME->S_FASTD_HPART_VIS-TFOLD ne IS_FASTD_HPART_VIS-TFOLD.
      LR_PR_MS_FPROC->SET_TFOLD( IF_TFOLD = IS_FASTD_HPART_VIS-TFOLD
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Left Gusset
    if ME->S_FASTD_HPART_VIS-GULEF ne IS_FASTD_HPART_VIS-GULEF.
      LR_PR_MS_FPROC->SET_GULEF( IS_GULEF = IS_FASTD_HPART_VIS-S_GULEF
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Right Gusset
    if ME->S_FASTD_HPART_VIS-GURIG ne IS_FASTD_HPART_VIS-GURIG.
      LR_PR_MS_FPROC->SET_GURIG( IS_GURIG = IS_FASTD_HPART_VIS-S_GURIG
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_VIS_TO_BFG.

    data: LR_PR_BFG     type ref to ZCL_VCXI_FBSS_PR_BFG,
          LR_PR_SHIPMGR type ref to ZCL_VCXI_XCSU_PR_SHIPMGR.


    check IR_GATE_BFG is bound.
    move IR_GATE_BFG->R_CLSPR ?to LR_PR_BFG.
    check LR_PR_BFG is bound.

***--------------------------------------------------------------------------------------
*** Set Material description
    if ME->S_FASTD_VIS-MAKTX        ne IS_FASTD_VIS-MAKTX  or
       ME->S_FASTD_VIS-FOVRR_MAKTX  ne IS_FASTD_VIS-FOVRR_MAKTX.
      if IS_FASTD_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        LR_PR_BFG->SET_MAKTX( IF_MAKTX = IS_FASTD_VIS-MAKTX
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_BFG->SET_MAKTX( IF_MAKTX = IS_FASTD_VIS-MAKTX
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Material Belonging to the Customer
    if ME->S_FASTD_VIS-KDMAT ne IS_FASTD_VIS-KDMAT.
      LR_PR_BFG->SET_KDMAT( IF_KDMAT = IS_FASTD_VIS-KDMAT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Customer Description of Material
    if ME->S_FASTD_VIS-KDPTX ne IS_FASTD_VIS-KDPTX.
      LR_PR_BFG->SET_KDPTX( IF_KDPTX = IS_FASTD_VIS-KDPTX
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Bag Type
    if ME->S_FASTD_VIS-IBAGT ne IS_FASTD_VIS-IBAGT.
      LR_PR_BFG->SET_IBAGT( IF_IBAGT = IS_FASTD_VIS-IBAGT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Width
    if ME->S_FASTD_VIS-S_BGWID ne IS_FASTD_VIS-S_BGWID.
      LR_PR_BFG->SET_BGWID( IS_BGWID = IS_FASTD_VIS-S_BGWID
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Height
    if ME->S_FASTD_VIS-S_BGHEI ne IS_FASTD_VIS-S_BGHEI.
      LR_PR_BFG->SET_BGHEI( IS_BGHEI = IS_FASTD_VIS-S_BGHEI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Overlap on Width
    if ME->S_FASTD_VIS-S_OLWID ne IS_FASTD_VIS-S_OLWID.
      LR_PR_BFG->SET_OLWID( IS_OLWID = IS_FASTD_VIS-S_OLWID
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Left Gusset
    if ME->S_FASTD_VIS-S_GULEF ne IS_FASTD_VIS-S_GULEF.
      LR_PR_BFG->SET_GULEF( IS_GULEF = IS_FASTD_VIS-S_GULEF
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Right Gusset
    if ME->S_FASTD_VIS-S_GURIG ne IS_FASTD_VIS-S_GURIG.
      LR_PR_BFG->SET_GURIG( IS_GURIG = IS_FASTD_VIS-S_GURIG
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Top Gusset
    if ME->S_FASTD_VIS-S_GUTOP ne IS_FASTD_VIS-S_GUTOP.
      LR_PR_BFG->SET_GUTOP( IS_GUTOP = IS_FASTD_VIS-S_GUTOP
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bottom Gusset
    if ME->S_FASTD_VIS-S_GUBOT ne IS_FASTD_VIS-S_GUBOT.
      LR_PR_BFG->SET_GUBOT( IS_GUBOT = IS_FASTD_VIS-S_GUBOT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Top Fold
    if ME->S_FASTD_VIS-S_FOTOP ne IS_FASTD_VIS-S_FOTOP.
      LR_PR_BFG->SET_FOTOP( IS_FOTOP = IS_FASTD_VIS-S_FOTOP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bottom Fold
    if ME->S_FASTD_VIS-S_FOBOT ne IS_FASTD_VIS-S_FOBOT.
      LR_PR_BFG->SET_FOBOT( IS_FOBOT = IS_FASTD_VIS-S_FOBOT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Wicketing Type
    if ME->S_FASTD_VIS-TWICK ne IS_FASTD_VIS-TWICK.
      LR_PR_BFG->SET_TWICK( IF_TWICK = IS_FASTD_VIS-TWICK
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Wicket Lip
    if ME->S_FASTD_VIS-S_WILIP ne IS_FASTD_VIS-S_WILIP.
      LR_PR_BFG->SET_WILIP( IS_WILIP = IS_FASTD_VIS-S_WILIP
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Hole Diameter
    if ME->S_FASTD_VIS-S_WIHDI ne IS_FASTD_VIS-S_WIHDI.
      LR_PR_BFG->SET_WIHDI( IS_WIHDI = IS_FASTD_VIS-S_WIHDI
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Hole Space
    if ME->S_FASTD_VIS-S_WIHSP ne IS_FASTD_VIS-S_WIHSP.
      LR_PR_BFG->SET_WIHSP( IS_WIHSP = IS_FASTD_VIS-S_WIHSP
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag/Stack
    if ME->S_FASTD_VIS-WIBST ne IS_FASTD_VIS-WIBST.
      LR_PR_BFG->SET_WIBST( IF_WIBST = IS_FASTD_VIS-WIBST
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Bag/Roll
    if ME->S_FASTD_VIS-BGPRL ne IS_FASTD_VIS-BGPRL.
      LR_PR_BFG->SET_BGPRL( IF_BGPRL = IS_FASTD_VIS-BGPRL
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Shipping Manager Information
    LR_PR_SHIPMGR = LR_PR_BFG->GET_PRVDR_SHIPMGR( ).
    if LR_PR_SHIPMGR is bound.
      if ME->S_FASTD_VIS-SHSCH ne IS_FASTD_VIS-SHSCH.
        LR_PR_SHIPMGR->SET_SHSCH( IF_SHSCH = IS_FASTD_VIS-SHSCH
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if ME->S_FASTD_VIS-CPACK ne IS_FASTD_VIS-CPACK.
        LR_PR_SHIPMGR->SET_CPACK( IF_CPACK = IS_FASTD_VIS-CPACK
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

  endmethod.
  method SET_VIS_TO_CSTEP_WICKET.

    data: LR_PR_CSTEP_WICKET     type ref to ZCL_VCXI_FBSS_PR_CSTEP_WICKET.

    check IR_GATE_CSTEP_WICKET is bound.
    move IR_GATE_CSTEP_WICKET->R_CLSPR ?to LR_PR_CSTEP_WICKET.
    check LR_PR_CSTEP_WICKET is bound.

***--------------------------------------------------------------------------------------
*** Wicket Wire
    if ME->S_FASTD_VIS-WIWIR ne IS_FASTD_VIS-WIWIR.
      LR_PR_CSTEP_WICKET->SET_WIWIR( IF_WIWIR = IS_FASTD_VIS-WIWIR
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Rubber
    if ME->S_FASTD_VIS-WIRUB ne IS_FASTD_VIS-WIRUB.
      LR_PR_CSTEP_WICKET->SET_WIRUB( IF_WIRUB = IS_FASTD_VIS-WIRUB
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Rubber/Stack
    if ME->S_FASTD_VIS-WIRST ne IS_FASTD_VIS-WIRST.
      LR_PR_CSTEP_WICKET->SET_WIRST( IF_WIRST = IS_FASTD_VIS-WIRST
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Paperboard
    if ME->S_FASTD_VIS-WIPBO ne IS_FASTD_VIS-WIPBO.
      LR_PR_CSTEP_WICKET->SET_WIPBO( IF_WIPBO = IS_FASTD_VIS-WIPBO
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Paperboard per Stack
    if ME->S_FASTD_VIS-WIPST ne IS_FASTD_VIS-WIPST.
      LR_PR_CSTEP_WICKET->SET_WIPST( IF_WIPST = IS_FASTD_VIS-WIPST
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Spool Pin
    if ME->S_FASTD_VIS-WISPI ne IS_FASTD_VIS-WISPI.
      LR_PR_CSTEP_WICKET->SET_WISPI( IF_WISPI = IS_FASTD_VIS-WISPI
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Spool Cap
    if ME->S_FASTD_VIS-WISCA ne IS_FASTD_VIS-WISCA.
      LR_PR_CSTEP_WICKET->SET_WISCA( IF_WISCA = IS_FASTD_VIS-WISCA
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Spool per Stack
    if ME->S_FASTD_VIS-WISST ne IS_FASTD_VIS-WISST.
      LR_PR_CSTEP_WICKET->SET_WISST( IF_WISST = IS_FASTD_VIS-WISST
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_VIS_TO_CSTEP_WIND.

    data: LR_PR_CSTEP_WIND     type ref to ZCL_VCXI_FBSS_PR_CSTEP_WIND.


    check IR_GATE_CSTEP_WIND is bound.
    move IR_GATE_CSTEP_WIND->R_CLSPR ?to LR_PR_CSTEP_WIND.
    check LR_PR_CSTEP_WIND is bound.

***--------------------------------------------------------------------------------------
*** Winding Mandrel
*    if ME->S_FASTD_VIS-WMDRL ne IS_FASTD_VIS-WMDRL.
*      LR_PR_CSTEP_WIND->SET_WMDRL( IF_WMDRL = IS_FASTD_VIS-WMDRL
*                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
*    endif.

  endmethod.
