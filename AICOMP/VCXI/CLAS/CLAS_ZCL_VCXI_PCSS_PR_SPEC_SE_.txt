
class ZCL_VCXI_PCSS_PR_SPEC_SE definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_SPEC_SE
  create public .

public section.

  constants C_IPRVT_PC_SPEC_SE type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSS_SPEC_SE'. "#EC NOTEXT

  methods GET_FPRPR
    returning
      value(RF_FPRPR) type ZVCXI_PCSS_FPRPR
    raising
      /VCXI/CX_CKX .
  methods GET_VALID_TBOAR
    returning
      value(RF_VALID_TBOAR) type STRING
    raising
      /VCXI/CX_CKX .
  methods GET_FLUTE
    returning
      value(RF_FLUTE) type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .
  methods GET_FLUTE_DESCR
    returning
      value(RF_FLUTE_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_PRBOA
    returning
      value(RF_PRBOA) type ZVCXI_PCSS_PRBOA
    raising
      /VCXI/CX_CKX .
  methods GET_PRBOA_DESCR
    returning
      value(RF_PRBOA_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_SABOA
    returning
      value(RF_SABOA) type ZVCXI_PCSS_SABOA
    raising
      /VCXI/CX_CKX .
  methods GET_SABOA_DESCR
    returning
      value(RF_SABOA_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_SELFD
    returning
      value(RF_SELFD) type ZVCXI_PCSS_SELFD
    raising
      /VCXI/CX_CKX .
  methods SET_PRBOA
    importing
      !IF_PRBOA type ZVCXI_PCSS_PRBOA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    returning
      value(RR_GATE_PRBOA) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_FPRPR
    importing
      !IF_FPRPR type ZVCXI_PCSS_FPRPR
    raising
      /VCXI/CX_CKX .
  methods SET_SABOA
    importing
      !IF_SABOA type ZVCXI_PCSS_SABOA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    returning
      value(RR_GATE_SABOA) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_SELFD
    importing
      !IF_SELFD type ZVCXI_PCSS_SELFD
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_BOARD_CUST_NSTBG
    returning
      value(RF_NSTBG) type ZVCXI_PCSS_SELFD
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods GET_VALID_TLAGC
    redefinition .
  methods GET_VALID_TLAMI
    redefinition .
  methods SET_FSHTP
    redefinition .
protected section.

  data F_VALID_TBOAR type STRING .

  methods GET_BOARD
    importing
      !IF_MBOAR type ZVCXI_PCSS_MBOAR
    returning
      value(RR_PR_BOARD) type ref to ZCL_VCXI_PCSS_PR_BOARD
    raising
      /VCXI/CX_CKX .
  methods GET_PREPR_MGR
    returning
      value(RR_PR_PREPR_MGR) type ref to ZCL_VCXI_PCSS_PR_PREPR_MGR
    raising
      /VCXI/CX_CKX .
  methods CHECK_BOARD
    returning
      value(RF_SUBRC) type SY-SUBRC
    raising
      /VCXI/CX_CKX .
  methods CREATE_BOARD
    returning
      value(RR_GATE_BOARD) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods CREATE_PREPR_MGR
    returning
      value(RR_GATE_PREPR_MGR) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
private section.

  methods INIT_ATTRI
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_PCSS_PR_SPEC_SE definition
class ZCL_VCXI_PCSS_PR_SPEC_SE implementation.
method CHECK_BOARD.

*** 0 - Board information is maintained
*** 1 - Sales Board Grade is not maintained
*** 2 - Production Board Grade is not maintained

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** First move Sales Boardgrade to Active one
  if ME->CHECK_SALES_ACTIV( ) eq ABAP_TRUE.
    move 1 to RF_SUBRC.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  else.
    move 2 to RF_SUBRC.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  endif.

  if LR_PR_BOARD is bound.
    move 0 to RF_SUBRC.
    exit.
  elseif ME->GET_FSHTP( ) eq ABAP_TRUE.
    move 0 to RF_SUBRC.
    exit.
  endif.

endmethod.
method CREATE_BOARD.

  data:  LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF.
  data:  LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.

*** Get Board Provider
  LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                            IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
  if lines( LT_PRVDR_DEF ) ne 1.
*** Provider &1 is not available for &2.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCS'
          IF_MSGNO = '010'
          IF_MSGV1 = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
          IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

  read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.

*** Create Board
  RR_GATE_BOARD = ME->R_GATE->CREATE_ELEMENT( IF_ID = LS_PRVDR_DEF-ID ).

endmethod.
method CREATE_PREPR_MGR.

  data:  LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF.
  data:  LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.

*** Get Preprint Manager Provider
  LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_PCSS_PR_PREPR_MGR=>C_IPRVT_PC_PREPR_MGR
                                            IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
  if lines( LT_PRVDR_DEF ) ne 1.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PCSS_PR_PREPR_MGR=>C_IPRVT_PC_PREPR_MGR
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

  read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.

*** Create Preprint Manager
  RR_GATE_PREPR_MGR = ME->R_GATE->CREATE_ELEMENT( IF_ID = LS_PRVDR_DEF-ID ).
  if RR_GATE_PREPR_MGR->IS_INUSE( ) eq ABAP_FALSE.
    RR_GATE_PREPR_MGR->SET_INUSE( IF_INUSE = ABAP_TRUE ).
  endif.

endmethod.
method GET_BOARD.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD        type ref to ZCL_VCXI_PCSS_PR_BOARD.

***------------------------------------------------------------------
*** Get all Boards
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                   IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Get Boards References
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
        check LR_PR_BOARD is bound.

        check LR_PR_BOARD->GET_MBOAR( ) eq IF_MBOAR.
        move LR_PR_BOARD to RR_PR_BOARD.
        exit.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_BOARD.
    endtry.
  endloop.

endmethod.
  method GET_BOARD_CUST_NSTBG.

    data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.


    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
    if LR_PR_BOARD is bound.
      RF_NSTBG = LR_PR_BOARD->GET_CUST_NSTBG( ).
    endif.
    check RF_NSTBG ne ABAP_TRUE.

    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
    if LR_PR_BOARD is bound.
      RF_NSTBG = LR_PR_BOARD->GET_CUST_NSTBG( ).
    endif.

  endmethod.
method GET_FLUTE.

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** First move Sales/Production Boardgrade to Active one
  if ME->CHECK_SALES_ACTIV( ) eq ABAP_TRUE.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  else.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  endif.

*** Get Flute From Activ Board Grade
  check LR_PR_BOARD is bound.
  RF_FLUTE = LR_PR_BOARD->GET_FLUTE( ).

endmethod.
method GET_FLUTE_DESCR.

  constants: LC_DOMNAME type                   DOMNAME value 'ZVCXI_PCS_FLUTE'.
  data:      LT_D07V    type standard table of DD07V.
  data:      LS_D07V    type                   DD07V.
  data:      LF_FLUTE   type                   ZVCXI_PCS_FLUTE.

  LF_FLUTE = ME->GET_FLUTE( ).

*** Return Flute Description
  call function 'DD_DOMVALUES_GET'
    exporting
      DOMNAME   = LC_DOMNAME
      TEXT      = 'X'
      LANGU     = SY-LANGU
    tables
      DD07V_TAB = LT_D07V.

  read table LT_D07V with key DOMVALUE_L = LF_FLUTE into LS_D07V.
  check SY-SUBRC eq 0.

  RF_FLUTE_DESCR = LS_D07V-DDTEXT.

endmethod.
method GET_FPRPR.

  data:  LR_PR_PREPR_MGR    type ref to ZCL_VCXI_PCSS_PR_PREPR_MGR.

***------------------------------------------------------------------
*** Preprint Manager
  LR_PR_PREPR_MGR = ME->GET_PREPR_MGR( ).

*** Get Preprint is available
  check LR_PR_PREPR_MGR is bound.
  move ABAP_TRUE to RF_FPRPR.

endmethod.
method GET_PRBOA.

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** Get Production Board From Production Reference
  LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  check LR_PR_BOARD is bound.
  RF_PRBOA = LR_PR_BOARD->GET_BOARD( ).

endmethod.
method GET_PRBOA_DESCR.

  data: LF_STRING      type        STRING.
  data: LT_BOARD_DESCR type        ZVCXI_PCSS_TT_BOARD_DESCR.
  data: LS_BOARD_DESCR type        ZVCXI_PCSS_S_BOARD_DESCR.
  data: LR_PR_BOARD    type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** Get Board from Sales Board Grade
  LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  check LR_PR_BOARD is bound.

  move LR_PR_BOARD->GET_BOARD_DESCR( ) to LT_BOARD_DESCR.
  loop at LT_BOARD_DESCR into LS_BOARD_DESCR.
    check LS_BOARD_DESCR-DESCR is not initial.
    if SY-TABIX eq 1.
      move LS_BOARD_DESCR-DESCR to LF_STRING.
    else.
      concatenate LF_STRING LS_BOARD_DESCR-DESCR
             into LF_STRING separated by '/'.
    endif.
  endloop.

  move LF_STRING to RF_PRBOA_DESCR.

endmethod.
method GET_PREPR_MGR.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------
*** Preprint Manager
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_PREPR_MGR=>C_IPRVT_PC_PREPR_MGR
                                   IF_INUSE  = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Get Preprint
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to RR_PR_PREPR_MGR.
        check RR_PR_PREPR_MGR is bound.
        exit.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method GET_SABOA.

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** Get Board from Sales Board Grade
  LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  check LR_PR_BOARD is bound.
  RF_SABOA = LR_PR_BOARD->GET_BOARD( ).

endmethod.
method GET_SABOA_DESCR.

  data: LF_STRING      type        STRING.
  data: LT_BOARD_DESCR type        ZVCXI_PCSS_TT_BOARD_DESCR.
  data: LS_BOARD_DESCR type        ZVCXI_PCSS_S_BOARD_DESCR.
  data: LR_PR_BOARD    type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** Get Board from Sales Board Grade

  LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  check LR_PR_BOARD is bound.

  move LR_PR_BOARD->GET_BOARD_DESCR( ) to LT_BOARD_DESCR.
  loop at LT_BOARD_DESCR into LS_BOARD_DESCR.
    check LS_BOARD_DESCR-DESCR is not initial.
    if SY-TABIX eq 1.
      move LS_BOARD_DESCR-DESCR to LF_STRING.
    else.
      concatenate LF_STRING LS_BOARD_DESCR-DESCR
             into LF_STRING separated by '/'.
    endif.
  endloop.

  move LF_STRING to RF_SABOA_DESCR.

endmethod.
method GET_SELFD.

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** First move Sales/Production Boardgrade to Active one
  if ME->CHECK_SALES_ACTIV( ) eq ABAP_TRUE.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  else.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  endif.

*** Get Self Deckling From Activ Board Grade
  check LR_PR_BOARD is bound.
  LR_PR_BOARD->GET_SELFD( importing EF_SELFD = RF_SELFD ).

endmethod.
method GET_STATUS.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Board Informations
  case ME->CHECK_BOARD( ).
    when 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    when others.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endcase.

endmethod.
method GET_STATUS_MSG.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Board Informations
  case ME->CHECK_BOARD( ).
    when 0.
***   Board Information maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '015' ).
    when 1.
***   Sales BoardID is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '035' ).
    when 2.
***   Production BoardID is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '036' ).

    when 3.
***   Board Information not maintained. Check Board ID or Purchased Sheet.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '016' ).
  endcase.

endmethod.
method GET_VALID_TBOAR.

  RF_VALID_TBOAR = ME->F_VALID_TBOAR.

endmethod.
method GET_VALID_TLAGC.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD        type ref to ZCL_VCXI_PCSS_PR_BOARD.

  RT_TLAGC = SUPER->GET_VALID_TLAGC( IR_GATE = IR_GATE ).

***------------------------------------------------------------------
*** First check if Board is active
  if ME->CHECK_SALES_ACTIV( ) eq ABAP_TRUE.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  else.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  endif.

  check LR_PR_BOARD                          is bound and
        LR_PR_BOARD->IS_TLAMI_RTS_ALLOWED( ) eq ABAP_TRUE.

*** Additionally check if requester is First lamination Operation
*** Get all Lamination
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_LAMI=>C_IPRVT_P0_LAMI
                                   IF_INUSE = ABAP_TRUE ).


  ZCL_VCXI_P0SS_CUST_LAMI=>SORT_LAMI( changing CT_GATE = LT_GATE ).
  read table LT_GATE into LR_GATE index 1.
  check LR_GATE eq IR_GATE.

*** Lamination Glue Consumption Type Flute is allowed.
  append ZCL_VCXI_P0SS_CUST_LAMI=>C_TLAGC_FLUTE to RT_TLAGC.

endmethod.
method GET_VALID_TLAMI.

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

  RT_TLAMI = SUPER->GET_VALID_TLAMI( ).

***------------------------------------------------------------------
*** First check if we already have a Sheet Procurement active
  check ME->GET_FSHTP( ) eq ABAP_FALSE.

***------------------------------------------------------------------
*** Additionally check if Board allowes RTS
  if ME->CHECK_SALES_ACTIV( ) eq ABAP_TRUE.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  else.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  endif.

  check LR_PR_BOARD is not bound or
        LR_PR_BOARD->IS_TLAMI_RTS_ALLOWED( ) eq ABAP_TRUE.

*** Lamination Type RTS is allowed.
  append ZCL_VCXI_P0SS_CUST_LAMI=>C_TLAMI_RTS to RT_TLAMI.

endmethod.
method INIT_ATTRI.

  data:  LS_ATTRI       type /VCXI/VKS_S_ATTRI,
         LS_PRVDR_DEF   type /VCXI/VKSR_S_PRVDR_DEF.
  data:  LT_PRVDR_DEF   type /VCXI/VKSR_TT_PRVDR_DEF.

*** -------------------------------------------------------------------------------------------------
*** Init Valid Board Types
*** Get Board Provider
  LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                            IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
  if lines( LT_PRVDR_DEF ) ne 1.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

  read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.

*** Get Valid Board Types via Attribute
  read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI
                                  with key ATTID = ZCL_VCXI_PCSS_PR_BOARD=>C_ATTID_VALID_TBOAR.

  ME->F_VALID_TBOAR = LS_ATTRI-ATTVA.

endmethod.
method SET_FPRPR.

  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_PREPR_MGR    type ref to ZCL_VCXI_PCSS_PR_PREPR_MGR.

***------------------------------------------------------------------
*** Preprint Manager
  LR_PR_PREPR_MGR = ME->GET_PREPR_MGR( ).

*** Free Preprint
  if IF_FPRPR is initial.
    if LR_PR_PREPR_MGR is bound.
      LR_PR_PREPR_MGR->DO_FREE( ).
      free: LR_PR_PREPR_MGR.
    endif.
  else.

*** Set Preprint
    if LR_PR_PREPR_MGR is not bound.
***   Create Preprint
      LR_GATE = ME->CREATE_PREPR_MGR( ).

      check LR_GATE is bound.

      try.
          move LR_GATE->R_CLSPR ?to LR_PR_PREPR_MGR.
        catch CX_SY_MOVE_CAST_ERROR.
          exit.
      endtry.
    endif.
  endif.

endmethod.
method SET_FSHTP.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD        type ref to ZCL_VCXI_PCSS_PR_BOARD,
         LR_PR_MS_SHTPR     type ref to ZCL_VCXI_P0SS_PR_MS_SHTPR.

***------------------------------------------------------------------------------------------------
*** Set Flag if Sheet Procurement is there
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_MS_SHTPR=>C_IPRVT_P0_MS_SHTPR
                                   IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_SHTPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.
  endloop.

*** Free Sheet Procurement
  if IF_FSHTP is initial.
    if LR_PR_MS_SHTPR is bound.
      LR_PR_MS_SHTPR->DO_FREE( ).
      free: LR_PR_MS_SHTPR.
    endif.
  else.

*** Set Sheet Procurement
    if LR_PR_MS_SHTPR is not bound.
***   Create Sheet Procurement
      ME->CREATE_SHTPR( ).

***   Clear Board References as they are not longer needed
      LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
      if LR_PR_BOARD is bound.
        LR_PR_BOARD->DO_FREE( ).
        clear: LR_PR_BOARD.
      endif.

      LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
      if LR_PR_BOARD is bound.
        LR_PR_BOARD->DO_FREE( ).
        clear: LR_PR_BOARD.
      endif.

    endif.
  endif.

endmethod.
method SET_PRBOA.

  data:  LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

  LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).

*** Free Board
  if IF_PRBOA is initial.
    if LR_PR_BOARD is bound.
      LR_PR_BOARD->DO_FREE( ).
    endif.
  else.
*** Set Production Board ID
    if LR_PR_BOARD is not bound.
***   Create Board
      LR_GATE = ME->CREATE_BOARD( ).

      check LR_GATE is bound.

      try.
          move LR_GATE->R_CLSPR ?to  LR_PR_BOARD.
        catch CX_SY_MOVE_CAST_ERROR.
          exit.
      endtry.

***   Set Board Mode
      if LR_PR_BOARD is bound.
        RR_GATE_PRBOA = LR_GATE.
        LR_PR_BOARD->SET_MBOAR( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
      endif.

    endif.

    check LR_PR_BOARD is bound.
    LR_PR_BOARD->SET_BOARD( IF_BOARD = IF_PRBOA
                            IF_SETBY = IF_SETBY ).

  endif.

endmethod.
method SET_SABOA.

  data:  LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

  LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).

*** Free Board
  if IF_SABOA is initial.
    if LR_PR_BOARD is bound.
      LR_PR_BOARD->DO_FREE( ).
    endif.
  else.
*** Set Sales Board ID
    if LR_PR_BOARD is not bound.
***   Create Board
      LR_GATE = ME->CREATE_BOARD( ).

      check LR_GATE is bound.

      try.
          move LR_GATE->R_CLSPR ?to  LR_PR_BOARD.
        catch CX_SY_MOVE_CAST_ERROR.
          exit.
      endtry.

***   Set Board Mode
      if LR_PR_BOARD is bound.
        RR_GATE_SABOA = LR_GATE.
        LR_PR_BOARD->SET_MBOAR( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
      endif.

    endif.

    check LR_PR_BOARD is bound.
    LR_PR_BOARD->SET_BOARD( IF_BOARD = IF_SABOA
                            IF_SETBY = IF_SETBY ).

  endif.

endmethod.
method SET_SELFD.

  data: LR_PR_BOARD type ref to ZCL_VCXI_PCSS_PR_BOARD.

*** First move Sales/Production Boardgrade to Active one
  if ME->CHECK_SALES_ACTIV( ) eq ABAP_TRUE.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S ).
  else.
    LR_PR_BOARD = ME->GET_BOARD( IF_MBOAR = ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P ).
  endif.

*** Set Self Deckling on active Board ID
  check LR_PR_BOARD is bound.
  LR_PR_BOARD->SET_SELFD( IF_SELFD = IF_SELFD
                          IF_SETBY = IF_SETBY ).

endmethod.
