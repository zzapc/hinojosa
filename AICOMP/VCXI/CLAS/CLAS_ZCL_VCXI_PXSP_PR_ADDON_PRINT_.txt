
class ZCL_VCXI_PXSP_PR_ADDON_PRINT definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  abstract
  create public .

public section.

  constants C_IAATY_NOACC type /VCXI/VSMC_IAATY value 'PX_AA_NOACC' ##NO_TEXT.
  constants C_IAATY_NOATC type /VCXI/VSMC_IAATY value 'PX_AA_NOATC' ##NO_TEXT.
  constants C_IAATY_NOCOL type /VCXI/VSMC_IAATY value 'PX_AA_NOCOL' ##NO_TEXT.
  constants C_IEVNT_O_PRSID_CHANGED type /VCXI/VKSC_IEVNT value 'PRSID_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_TPRIN_CHANGED type /VCXI/VKSC_IEVNT value 'TPRIN_CHANGED' ##NO_TEXT.
  constants C_PARID_NOACC type /VCXI/VKS_PARID value 'ZVCXI_PX_NOACC' ##NO_TEXT.
  constants C_PARID_NOATC type /VCXI/VKS_PARID value 'ZVCXI_PX_NOATC' ##NO_TEXT.
  constants C_PARID_NODDG type /VCXI/VKS_PARID value 'ZVCXI_PX_NODDG' ##NO_TEXT.
  constants C_PARID_PRSID type /VCXI/VKS_PARID value 'ZVCXI_P0_PRSID' ##NO_TEXT.
  constants C_PARID_TPRIN type /VCXI/VKS_PARID value 'ZVCXI_PX_TPRIN' ##NO_TEXT.

  methods GET_NOACC
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NOACC) type ZVCXI_PXS_NOACC
    raising
      /VCXI/CX_CKX .
  methods GET_NOATC
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NOATC) type ZVCXI_PXS_NOATC
    raising
      /VCXI/CX_CKX .
  methods GET_NOCOL
    importing
      !IF_TINK type ZVCXI_PXS_TINK optional
    returning
      value(RF_NOCOL) type ZVCXI_P0S_NOCOL
    raising
      /VCXI/CX_CKX .
  methods GET_NODDG
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NODDG) type ZVCXI_PXS_NODDG
    raising
      /VCXI/CX_CKX .
  methods GET_PRSID
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_PRSID) type ZVCXI_P0S_PRSID
    raising
      /VCXI/CX_CKX .
  methods GET_TPRIN
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_TPRIN) type ZVCXI_PXS_TPRIN
    raising
      /VCXI/CX_CKX .
  methods SET_NOACC
    importing
      !IF_NOACC type ZVCXI_PXS_NOACC
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOATC
    importing
      !IF_NOATC type ZVCXI_PXS_NOATC
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NODDG
    importing
      !IF_NODDG type ZVCXI_PXS_NODDG
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRSID
    importing
      !IF_PRSID type ZVCXI_P0S_PRSID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TPRIN
    importing
      !IF_TPRIN type ZVCXI_PXS_TPRIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_NOACC_CHANGED type /VCXI/VKSC_IEVNT value 'NOACC_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOATC_CHANGED type /VCXI/VKSC_IEVNT value 'NOATC_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NODDG_CHANGED type /VCXI/VKSC_IEVNT value 'NODDG_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
  abstract
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAREC
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSP_PR_ADDON_PRINT definition
class ZCL_VCXI_PXSP_PR_ADDON_PRINT implementation.
  method GET_NOACC.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOACC ).
    move LS_PARAM-ATFLV to RF_NOACC.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOATC.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOATC ).
    move LS_PARAM-ATFLV to RF_NOATC.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOCOL.

    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_INK type ref to ZCL_VCXI_PXSS_PR_MS_INK.

*** Get all Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSP_PR_MC_INK=>C_IPRVT_PX_MC_INK
                                     IF_INUSE = ABAP_TRUE ).

    if IF_TINK is not supplied.
      move LINES( LT_GATE ) to RF_NOCOL.
    else.
      loop at LT_GATE into LR_GATE.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_INK.
        if LR_PR_MS_INK->GET_TINK( ) eq IF_TINK.
          add 1 to RF_NOCOL.
        endif.
      endloop.
    endif.

  endmethod.
  method GET_NODDG.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NODDG ).
    move LS_PARAM-ATFLV to RF_NODDG.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRSID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRSID ).
    move LS_PARAM-ATWRT to RF_PRSID.
    move LS_PARAM-SETBY to EF_SETBY.

    check RF_PRSID is not initial.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Description
      EF_DESCR = ZCL_VCXI_P0SS_CUST_PRINT=>GET_PRSID_DESCR( IF_PRSID = RF_PRSID ).
    endif.

  endmethod.
  method GET_RTE_SAREC.

*** Get Super
    RT_RTE_SAREC = SUPER->GET_RTE_SAREC( ).

    check ME->R_RTE_CADDON          is bound and
          ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - Number of Colors
    try.
        append value #( GAATY   = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOCOL
                                                                                 IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC )
                        MAXSEL  = 1
                        ASORT   = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING
                        I_ARECN = value #( ( SIGN   = 'I'
                                             OPTION = 'LE'
                                             LOW    = ME->GET_NOCOL( ) ) )
                      ) to RT_RTE_SAREC.
      catch /VCXI/CX_CKX.
    endtry.


*** Aspect - Number of additional color changes
    try.
        data(LF_NOACC) = ME->GET_NOACC( ).
        append value #( GAATY   = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOACC
                                                                                 IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC )
                        MAXSEL  = 1
                        ASORT   = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING
                        ARECM   = LF_NOACC
                        I_ARECN = value #( ( SIGN   = 'I'
                                             OPTION = 'LE'
                                             LOW    = LF_NOACC ) )
                      ) to RT_RTE_SAREC.
      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Number of additional tool changes
    try.
        data(LF_NOATC) = ME->GET_NOATC( ).
        append value #( GAATY   = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOATC
                                                                                 IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC )
                        MAXSEL  = 1
                        ASORT   = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING
                        ARECM   = LF_NOATC
                        I_ARECN = value #( ( SIGN   = 'I'
                                             OPTION = 'LE'
                                             LOW    = LF_NOATC ) )
                      ) to RT_RTE_SAREC.
      catch /VCXI/CX_CKX.
    endtry.
  endmethod.
  method GET_TPRIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPRIN ).
    move LS_PARAM-ATWRT to RF_TPRIN.
    move LS_PARAM-SETBY to EF_SETBY.

    check RF_TPRIN is not initial.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Description
      EF_DESCR = ZCL_VCXI_PXSS_CUST_PRINT=>GET_TPRIN_DESCR( IF_TPRIN = RF_TPRIN ).
    endif.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

    endcase.

  endmethod.
  method SET_NOACC.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOACC ).

    move IF_NOACC     to LS_PARAM-ATFLV.
    move IF_SETBY     to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOACC_CHANGED ).
    endif.

  endmethod.
  method SET_NOATC.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOATC ).

    move IF_NOATC     to LS_PARAM-ATFLV.
    move IF_SETBY     to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOATC_CHANGED ).
    endif.

  endmethod.
  method SET_NODDG.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NODDG ).

    move IF_NODDG     to LS_PARAM-ATFLV.
    move IF_SETBY     to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NODDG_CHANGED ).
    endif.

  endmethod.
  method SET_PRSID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRSID ).

    move IF_PRSID to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PRSID_CHANGED ).
    endif.

  endmethod.
  method SET_TPRIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPRIN ).

    move IF_TPRIN           to LS_PARAM-ATWRT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TPRIN_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE.

    SUPER->ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE( changing CT_FEATURE = CT_FEATURE ).

*** Number of Colors
    /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'numberColors'     FTVAL = ME->GET_NOCOL( ) )
                                      changing  CT_FEATURE = CT_FEATURE ).

  endmethod.
