
class ZCL_VCXI_FBSR_BL_PSTEP_WICKET definition
  public
  inheriting from ZCL_VCXI_FBSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .

  constants C_IPSTP_WICKET type /VCXI/VSMC_IPSTP value 'FB_PS_WICKET' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_WICKET
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  data T_MS_WIMAT type ZVCXI_FBSR_TT_MS_WIMAT .
  constants C_IATYP_AT_WICKET type /VCXI/VSMC_IATYP value 'FB_AT_WICKET' ##NO_TEXT.
  data F_TWICK type ZVCXI_FBS_TWICK .

  methods GET_PRVDR_WICKET
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_PR_WICKET) type ref to ZCL_VCXI_FBSS_PR_CSTEP_WICKET
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_WICKET
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_WICKET
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_MS_WIMAT
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_WIMAT
    importing
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL optional
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_WIMAT_P
    importing
      !IR_SPVRE_MC_WIMAT type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_WIMAT type ZVCXI_FBSR_S_MS_WIMAT
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSR_BL_PSTEP_WICKET definition
class ZCL_VCXI_FBSR_BL_PSTEP_WICKET implementation.
  method ADD_SPVRE_MC_WIMAT.

    data: LS_MS_WIMAT type        ZVCXI_FBSR_S_MS_WIMAT,
          LS_LEOKY    type        /VCXI/VKSR_S_LEOKY,
          LS_PARAM    type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE          type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_WIMAT type ref to /VCXI/CL_VKSR_SPVRE.

    check ME->T_MS_WIMAT is not initial.

***--------------------------------------------------------------------------------------
    loop at ME->T_MS_WIMAT into LS_MS_WIMAT.
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_WIMAT-ICELM
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).


***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_WIMAT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_WIMAT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_WIMAT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
***   Set Material Number
      clear LS_LEOKY.
      move LS_MS_WIMAT-MATNR                            to LS_LEOKY-LEOKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_LEOKY-SETBY.
      LR_SPVRE_MC_WIMAT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***--------------------------------------------------------------------------------------
***   Set Dimension related Values
      case LS_MS_WIMAT-ICELM.
        when 'MC_WIMAT_P'.
          ME->SET_SPVRE_VALUE_MC_WIMAT_P( IR_SPVRE_MC_WIMAT = LR_SPVRE_MC_WIMAT
                                          IS_MS_WIMAT       = LS_MS_WIMAT ).
      endcase.

***--------------------------------------------------------------------------------------
***   Set Average Consumption
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCO_P          to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
      move LS_MS_WIMAT-AVGCO                             to LS_PARAM-ATFLV.
      move LS_MS_WIMAT-AVGCO_UOM                         to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
      LR_SPVRE_MC_WIMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Average Consumption Per
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCP_P          to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
      move LS_MS_WIMAT-AVGCP                             to LS_PARAM-ATFLV.
      move LS_MS_WIMAT-AVGCP_UOM                         to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
      LR_SPVRE_MC_WIMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_WICKET type ref to ZCL_VCXI_FBSR_BL_PSTEP_WICKET.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_WICKET.

***--------------------------------------------------------------------------------------
*** Wicketing Materials
    if ME->T_MS_WIMAT eq LR_BL_PSTEP_WICKET->T_MS_WIMAT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Wicketing Type
    if ME->F_TWICK eq LR_BL_PSTEP_WICKET->F_TWICK.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_WICKET type ref to ZCL_VCXI_FBSR_BL_PSTEP_WICKET.

***--------------------------------------------------------------------------------------
*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_WICKET.

*** Wicketing Materials
    move ME->T_MS_WIMAT to  LR_BL_PSTEP_WICKET->T_MS_WIMAT.

*** Wicketing Type
    move ME->F_TWICK to LR_BL_PSTEP_WICKET->F_TWICK.

  endmethod.
  method DESERIALIZE.

    data:  LF_XML   type STRING.

    check IF_XML is not initial.

*** Deserialize
    call transformation ID
         source xml IF_XML
         result SUPER_XML    = LF_XML
                F_TWICK      = ME->F_TWICK
                T_MS_WIMAT   = ME->T_MS_WIMAT.

    SUPER->DESERIALIZE( IF_XML = LF_XML ).

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when C_IATYP_AT_WICKET.
        ME->FILL_SPVRE_ADDON_WICKET( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                               IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                               IR_ARBPL       = IR_ARBPL
                                     changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_WICKET.

    data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

*** Set Wicketing Type
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_WICKET=>C_PARID_TWICK to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move ME->F_TWICK                                  to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Wicketing Material
    ME->ADD_SPVRE_MC_WIMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = IR_SPVRE_ADDON
                            changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***--------------------------------------------------------------------------------------
*** Standard
    move 'GRP_CONV'   to CF_ID_GRP.
    move 'ARBPL_CONV' to CF_ID_ARBPL.

***--------------------------------------------------------------------------------------
*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'GRP_CONV'       to CF_ID_GRP.
      move 'ARBPL_OUTSO'    to CF_ID_ARBPL.
    endif.

***--------------------------------------------------------------------------------------
*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'GRP_CONV'    to CF_ID_GRP.
      move 'ARBPL_MANU'  to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_PRVDR_WICKET.

    data:  LR_GATE   type ref to /VCXI/CL_VKSR_GATE.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_WICKET.
          if RR_PR_WICKET is bound.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM       type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_WICKET'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Wicketing Material
    ME->ADD_SPVRE_MC_WIMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                            changing  CT_SPVRE        = RT_SPVRE ).

*** Set Wicketing Type
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_WICKET=>C_PARID_TWICK to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move ME->F_TWICK                                  to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method INIT_BY_SPEC.

    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Wicketing Data
    ME->INIT_BY_SPEC_WICKET( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Wicketing Material Data
    ME->INIT_BY_SPEC_MS_WIMAT( IR_GATE  = IR_GATE
                               IT_PRVDR = IT_PRVDR ).


  endmethod.
  method INIT_BY_SPEC_MS_WIMAT.

    data: LF_WIBST type ZVCXI_FBS_WIBST,
          LF_WISST type ZVCXI_FBS_WISST,
          LF_WIPST type ZVCXI_FBS_WIPST,
          LF_WIRST type ZVCXI_FBS_WIRST.
    data: LS_MS_WIMAT  type ZVCXI_FBSR_S_MS_WIMAT.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_WICKET type ref to ZCL_VCXI_FBSS_PR_CSTEP_WICKET.


***--------------------------------------------------------------------------------------
*** Get Wicketing PR Class
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_WICKET.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

    check LR_PR_WICKET is bound.

*** Get Bags per Stack
    LR_PR_WICKET->GET_WIBST( importing EF_WIBST = LF_WIBST ).

*** Get Spool per Stack
    LR_PR_WICKET->GET_WISST( importing EF_WISST = LF_WISST ).

*** Get Paperboard per Stack
    LR_PR_WICKET->GET_WIPST( importing EF_WIPST = LF_WIPST ).

*** Get Rubber per Stack
    LR_PR_WICKET->GET_WIRST( importing EF_WIRST = LF_WIRST ).

***--------------------------------------------------------------------------------------
*** Wicket Wire
    clear LS_MS_WIMAT-MATNR.

    LR_PR_WICKET->GET_WIWIR( importing EF_WIWIR = LS_MS_WIMAT-MATNR ).

    if LS_MS_WIMAT-MATNR is not initial.
      move 'MC_WIWIR' to LS_MS_WIMAT-ICELM.
***   Consumption Data
      move 1            to LS_MS_WIMAT-S_AVGCO-AVGCO.
      move 'ST'         to LS_MS_WIMAT-S_AVGCO-AVGCO_UOM.
      move LF_WIBST     to LS_MS_WIMAT-S_AVGCP-AVGCP.
      move 'ST'         to LS_MS_WIMAT-S_AVGCP-AVGCP_UOM.
      append LS_MS_WIMAT to ME->T_MS_WIMAT.
    endif.

***--------------------------------------------------------------------------------------
*** Rubber
    clear LS_MS_WIMAT-MATNR.

    LR_PR_WICKET->GET_WIRUB( importing EF_WIRUB = LS_MS_WIMAT-MATNR ).

    if LS_MS_WIMAT-MATNR is not initial.
      move 'MC_RUMAT' to LS_MS_WIMAT-ICELM.
***   Consumption Data
      move LF_WIRST to LS_MS_WIMAT-S_AVGCO-AVGCO.
      move 'ST'     to LS_MS_WIMAT-S_AVGCO-AVGCO_UOM.
      move LF_WIBST to LS_MS_WIMAT-S_AVGCP-AVGCP.
      move 'ST'     to LS_MS_WIMAT-S_AVGCP-AVGCP_UOM.
      append LS_MS_WIMAT to ME->T_MS_WIMAT.
    endif.

***--------------------------------------------------------------------------------------
*** Paperboard
    clear LS_MS_WIMAT-MATNR.

    LR_PR_WICKET->GET_WIPBO( importing EF_WIPBO = LS_MS_WIMAT-MATNR ).

    if LS_MS_WIMAT-MATNR is not initial.
      move 'MC_PBMAT' to LS_MS_WIMAT-ICELM.
***   Consumption Data
      move LF_WIPST to LS_MS_WIMAT-S_AVGCO-AVGCO.
      move 'ST'     to LS_MS_WIMAT-S_AVGCO-AVGCO_UOM.
      move LF_WIBST to LS_MS_WIMAT-S_AVGCP-AVGCP.
      move 'ST'     to LS_MS_WIMAT-S_AVGCP-AVGCP_UOM.
      append LS_MS_WIMAT to ME->T_MS_WIMAT.
    endif.

***--------------------------------------------------------------------------------------
*** Spool Cap
    clear LS_MS_WIMAT-MATNR.

    LR_PR_WICKET->GET_WISCA( importing EF_WISCA = LS_MS_WIMAT-MATNR ).

    if LS_MS_WIMAT-MATNR is not initial.
      move 'MC_SCMAT' to LS_MS_WIMAT-ICELM.
***   Consumption Data
      move LF_WISST to LS_MS_WIMAT-S_AVGCO-AVGCO.
      move 'ST'     to LS_MS_WIMAT-S_AVGCO-AVGCO_UOM.
      move LF_WIBST to LS_MS_WIMAT-S_AVGCP-AVGCP.
      move 'ST'     to LS_MS_WIMAT-S_AVGCP-AVGCP_UOM.
      append LS_MS_WIMAT to ME->T_MS_WIMAT.
    endif.

***--------------------------------------------------------------------------------------
*** Spool Pin
    clear LS_MS_WIMAT-MATNR.

    LR_PR_WICKET->GET_WISPI( importing EF_WISPI = LS_MS_WIMAT-MATNR ).

    if LS_MS_WIMAT-MATNR is not initial.
      move 'MC_SPMAT' to LS_MS_WIMAT-ICELM.
***   Consumption Data
      move LF_WISST to LS_MS_WIMAT-S_AVGCO-AVGCO.
      move 'ST'     to LS_MS_WIMAT-S_AVGCO-AVGCO_UOM.
      move LF_WIBST to LS_MS_WIMAT-S_AVGCP-AVGCP.
      move 'ST'     to LS_MS_WIMAT-S_AVGCP-AVGCP_UOM.
      append LS_MS_WIMAT to ME->T_MS_WIMAT.
    endif.

  endmethod.
  method INIT_BY_SPEC_WICKET.

    data: LR_PR_WICKET type ref to ZCL_VCXI_FBSS_PR_CSTEP_WICKET.

***--------------------------------------------------------------------------------------
*** Get Provider - Wicketing
    move ME->GET_PRVDR_WICKET( IT_PRVDR = IT_PRVDR ) to LR_PR_WICKET.
    check LR_PR_WICKET is bound.

*** Get Wicketing Type
    LR_PR_WICKET->GET_TWICK( importing EF_TWICK = ME->F_TWICK ).

  endmethod.
  method SERIALIZE.

*** Super Serialize
    RF_XML = SUPER->SERIALIZE( ).

*** Serialize
    call transformation ID
         source SUPER_XML    = RF_XML
                F_TWICK      = ME->F_TWICK
                T_MS_WIMAT   = ME->T_MS_WIMAT

    result xml RF_XML.

  endmethod.
  method SET_SPVRE_VALUE_MC_WIMAT_P.

    data:  LS_PARAM   type        /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCO_P         to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move IS_MS_WIMAT-AVGCO                            to LS_PARAM-ATFLV.
    move IS_MS_WIMAT-AVGCO_UOM                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_MC_WIMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCP_P         to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move IS_MS_WIMAT-AVGCP                            to LS_PARAM-ATFLV.
    move IS_MS_WIMAT-AVGCP_UOM                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_MC_WIMAT->SET_PARAM( IS_PARAM = LS_PARAM ).

    if IS_MS_WIMAT-PURCH eq ABAP_TRUE.
*** Set Price Unit
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MC=>C_PARID_PRICP_P       to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
      move IS_MS_WIMAT-PRICP                          to LS_PARAM-ATFLV.
      move IS_MS_WIMAT-PRICP_UOM                      to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
      IR_SPVRE_MC_WIMAT->SET_PARAM( IS_PARAM = LS_PARAM ).
    endif.

  endmethod.
