
class ZCL_VCXI_XCA_MWB_POPUP_TMPL definition
  public
  create protected .

public section.

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START_POPUP
    importing
      !IR_CLQRY type ref to ZCL_VCXI_XCA_MWB_CLQRY
    returning
      value(RR_CLMAT) type ref to ZCL_VCXI_XCA_MWB_CLMAT
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_TABNAME type TABNAME value 'ZVCXI_XCA_MWB_S_TMPL_GRID' ##NO_TEXT.
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_OK type SYUCOMM value 'OK' ##NO_TEXT.
  data R_CLMAT type ref to ZCL_VCXI_XCA_MWB_CLMAT .
  data R_CLQRY type ref to ZCL_VCXI_XCA_MWB_CLQRY .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data T_FCAT type LVC_T_FCAT .
  data:
    T_TMPL_GRID type table of ZVCXI_XCA_MWB_S_TMPL_GRID .

  methods CREATE_MATERIAL
    importing
      !IS_TMPL_GRID type ZVCXI_XCA_MWB_S_TMPL_GRID
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    exceptions
      /VCXI/CX_CKX .
  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW .
  methods HANDLE_UC_OK
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods REFRESH_FIELDCAT
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_CLQRY type ref to ZCL_VCXI_XCA_MWB_CLQRY
    raising
      /VCXI/CX_CKX .
private section.

  methods INIT_DATA
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_XCA_MWB_POPUP_TMPL definition
class ZCL_VCXI_XCA_MWB_POPUP_TMPL implementation.
  method CONSTRUCTOR.

    ME->R_CLQRY = IR_CLQRY.
    ME->INIT_DATA( ).

  endmethod.
  method CREATE_MATERIAL.

    data: LR_CLMAT   type ref to ZCL_VCXI_XCA_MWB_CLMAT,
          LR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT.


***----------------------------------------------------------------------------
*** Load Template Material
    LR_CLMAT = ZCL_VCXI_XCA_MWB_CLMAT=>FACTORY( IR_REGMDL  = ME->R_CLQRY->R_REGMDL
                                                IF_MATNR   = IS_TMPL_GRID-MATNR
                                                IS_ORGDATA = IS_TMPL_GRID-S_ORGDATA ).
    check LR_CLMAT is bound.

*** Create Copy of Template
    ME->R_CLMAT = LR_CLMAT->CREATE_COPY( ).
    check ME->R_CLMAT is bound.

*** Overwrite information: Material Type to copy-material
    if IS_TMPL_GRID-MTART is not initial.
      LR_BOB_MAT = ME->R_CLMAT->GET_BOB_MAT( ).
      LR_BOB_MAT->S_CLIENTDATA-MATL_TYPE = IS_TMPL_GRID-MTART.
    endif.

  endmethod.
  method DO_FREE.

*** Free Grid
    if ME->R_GRID is bound.
      ME->R_GRID->FREE( exceptions others = 9 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_GRID.
    endif.

*** Free Container
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions others = 9 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.

  endmethod.
  method DO_PBO.

*** Set PF-Status
    ME->SET_PF_STATUS( ).

*** Create Container and Grid
    ME->INIT_CONTAINER( ).
    ME->INIT_GRID( ).

*** Build Grid Data
    ME->REFRESH_GRID( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_OK.
        ME->HANDLE_UC_OK( ).

      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).
    endcase.

  endmethod.
  method HANDLE_DOUBLE_CLICK.

    data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        check E_ROW-INDEX is not initial.

***     Run OK Code on double click
        ME->DO_USER_COMMAND( IF_UCOMM = C_UC_OK ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_CANCEL.

    leave to screen 0.

  endmethod.
  method HANDLE_UC_OK.

    data: LS_TMPL_GRID type ZVCXI_XCA_MWB_S_TMPL_GRID.
    data: LT_INDEX     type LVC_T_ROW.

***----------------------------------------------------------------------------
*** Get the selected rows from the ALV
    ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_INDEX ).

*** Get Match (or first if nothing has been selected)
    LS_TMPL_GRID = value #( ME->T_TMPL_GRID[ value #( LT_INDEX[ 1 ] default 1 ) ] optional ).
    check LS_TMPL_GRID is not initial.

***----------------------------------------------------------------------------
*** Create new Material by Template
    ME->CREATE_MATERIAL( IS_TMPL_GRID = LS_TMPL_GRID ).

***----------------------------------------------------------------------------
*** Leave Screen
    leave to screen 0.

  endmethod.
  method INIT_CONTAINER.

    check ME->R_CONTAINER is not bound.

    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = '0100CC_GRID'
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method INIT_DATA.

    data: LF_IREGE type /VCXI/CKR_IREGE.
    data: LS_TD110   type ZVCXI_XCA_TD110,
          LS_MAKT    type MAKT,
          LS_ORGDATA type ZVCXI_XCA_MWB_S_ORGDATA.
    data: LT_TD110   type table of ZVCXI_XCA_TD110,
          LT_ORGDATA type ZVCXI_XCA_MWB_TT_ORGDATA.


***------------------------------------------------------------------
*** Get Template Materials by Model ID
    LF_IREGE = ME->R_CLQRY->R_REGMDL->/VCXI/IF_CKX_OBJECT~GET_ID( ).
    select *
           into table LT_TD110
           from ZVCXI_XCA_TD110
          where IREGE eq LF_IREGE.

    check LT_TD110 is not initial.

***------------------------------------------------------------------
*** Process all Template Material
    loop at LT_TD110 into LS_TD110.
      call function 'MAKT_SINGLE_READ'
        exporting
          MATNR  = LS_TD110-MATNR
          SPRAS  = SY-LANGU
        importing
          WMAKT  = LS_MAKT
        exceptions
          others = 9.
      if SY-SUBRC ne 0.
        clear LS_MAKT.
      endif.

***   Get all Organisational Data and add an entry for each
      LT_ORGDATA = ME->R_CLQRY->GET_ORGDATA( IF_MATNR = LS_TD110-MATNR ).
      loop at LT_ORGDATA into LS_ORGDATA.
        append value #( MATNR     = LS_TD110-MATNR
                        MAKTX     = LS_MAKT-MAKTX
                        S_ORGDATA = LS_ORGDATA
                        MTART     = LS_TD110-MTART ) to ME->T_TMPL_GRID.
      endloop.
    endloop.

  endmethod.
  method INIT_GRID.

    check ME->R_GRID is not bound.

    create object ME->R_GRID
      exporting
        I_PARENT          = ME->R_CONTAINER
        I_APPL_EVENTS     = 'X'
      exceptions
        ERROR_CNTL_CREATE = 1
        ERROR_CNTL_INIT   = 2
        ERROR_CNTL_LINK   = 3
        ERROR_DP_CREATE   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method REFRESH_FIELDCAT.

    data: LS_TMPL_GRID type ZVCXI_XCA_MWB_S_TMPL_GRID.
    field-symbols: <S_FCAT>  type LVC_S_FCAT,
                   <S_FLVAL> type ANY.


    refresh ME->T_FCAT.

    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        I_STRUCTURE_NAME       = C_TABNAME
      changing
        CT_FIELDCAT            = ME->T_FCAT
      exceptions
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        others                 = 3.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.


    loop at ME->T_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'MTART'.
          move 'X' to <S_FCAT>-TECH.

        when others.
***       Optimize columns
          move 'A' to <S_FCAT>-COL_OPT.

***       Check if there are any values in the columns
          <S_FCAT>-NO_OUT = ABAP_TRUE.
          loop at ME->T_TMPL_GRID into LS_TMPL_GRID.
            assign component <S_FCAT>-FIELDNAME of structure LS_TMPL_GRID to <S_FLVAL>.
            if SY-SUBRC is initial and <S_FLVAL> is not initial.
              clear <S_FCAT>-NO_OUT.
              exit.
            endif.
          endloop.
      endcase.

    endloop.

  endmethod.
  method REFRESH_GRID.

***----------------------------------------------------------------------------
*** Refresh Field Catalog
    ME->REFRESH_FIELDCAT( ).
    check ME->R_GRID is bound.

***----------------------------------------------------------------------------
*** Refresh ALV Grid
    ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
      exporting
        IT_TOOLBAR_EXCLUDING          = value #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
        IS_LAYOUT                     = value #( ZEBRA    = ABAP_TRUE
                                                 SEL_MODE = 'B' )
      changing
        IT_FIELDCATALOG               = ME->T_FCAT
        IT_OUTTAB                     = ME->T_TMPL_GRID
      exceptions
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        others                        = 4 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

    set handler HANDLE_DOUBLE_CLICK for ME->R_GRID.

*** Mark first line as selected
    ME->R_GRID->SET_SELECTED_ROWS( IT_INDEX_ROWS = value #( ( INDEX = '1' ) ) ).

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_XCA_MWB_POPUP_TMPL'.

  endmethod.
  method START_POPUP.

    data: LR_POPUP_TMPL       type ref to ZCL_VCXI_XCA_MWB_POPUP_TMPL.


***----------------------------------------------------------------------------
*** Create Material Template - Popup Instance
    create object LR_POPUP_TMPL
      exporting
        IR_CLQRY = IR_CLQRY.

    check LR_POPUP_TMPL is bound.

***----------------------------------------------------------------------------
*** If only one template material is availbale, go directly in de Detail UI
    if LINES( LR_POPUP_TMPL->T_TMPL_GRID ) eq 1.
      LR_POPUP_TMPL->CREATE_MATERIAL( IS_TMPL_GRID = LR_POPUP_TMPL->T_TMPL_GRID[ 1 ] ).
    else.
***   Call Function Module for Display
      call function 'ZVCXI_XCA_MWB_POPUP_TMPL_START'
        exporting
          IR_POPUP_TMPL = LR_POPUP_TMPL.
***   Free the Popup
      LR_POPUP_TMPL->DO_FREE( ).
    endif.

***----------------------------------------------------------------------------
*** Return created material
    RR_CLMAT = LR_POPUP_TMPL->R_CLMAT.

  endmethod.
