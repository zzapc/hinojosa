
class ZCL_VCXI_F0SS_CUST_TOOL definition
  public
  inheriting from ZCL_VCXI_XCS_CUST_MATNR
  abstract
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS
    raising
      /VCXI/CX_CKX .
  class-methods VALUE_CHECK
    importing
      !IF_VALUE_TOOL type ANY
      !IF_UOM_TOOL type /VCXI/CKX_UOM optional
      !IF_VALUE_VC type ANY
      !IF_UOM_VC type /VCXI/CKX_UOM optional
      !IF_OPERA type CHAR2 default ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_EQ
      !IF_MSGTY type SYMSGTY
      !IF_DESCR type /VCXI/CKX_DESCR optional
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE
    returning
      value(RF_MATCH) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods IS_RELEASED
    returning
      value(RF_RELEASED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
protected section.

  methods LOAD_BY_MM
  abstract
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_F0SS_CUST_TOOL definition
class ZCL_VCXI_F0SS_CUST_TOOL implementation.
  method CONSTRUCTOR.

    try.
        SUPER->CONSTRUCTOR( IF_MATNR = IF_MATNR
                            IF_WERKS = IF_WERKS
                            IF_DATE  = IF_DATE ).

      cleanup.
        ME->DO_FREE( ).
    endtry.

  endmethod.
  method IS_RELEASED.

*** Per default, a tool is released
    move ABAP_TRUE to RF_RELEASED.

  endmethod.
  method VALUE_CHECK.

    data: LF_VALUE_VC type F,
          LF_UOM_VC   type /VCXI/CKX_UOM,
          LF_DEC      type I,
          LF_MSGV1    type SYMSGV.
    data: LR_ABAP_ELEMDESCR type ref to CL_ABAP_ELEMDESCR.


    if IF_VALUE_TOOL is initial.
      RF_MATCH = ABAP_UNDEFINED.
      return.
    endif.

***------------------------------------------------------------------------------------------------
*** Compare of Values
    if IF_UOM_TOOL is supplied or
       IF_UOM_VC   is supplied.
***   Peform Unit Conversion and Rounding to avoid rounding issue in comparison
      ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = IF_VALUE_VC
                                                         IF_UOM_IN    = IF_UOM_VC
                                                         IF_UOM_OUT   = IF_UOM_TOOL
                                               importing EF_VALUE_OUT = LF_VALUE_VC
                                                         EF_UOM_OUT   = LF_UOM_VC ).
      describe field IF_VALUE_TOOL decimals LF_DEC.
      LF_VALUE_VC = ROUND( VAL = LF_VALUE_VC DEC = LF_DEC ).

      if ZCL_VCXI_XCS_SERVICE_CALC=>COMPARE_WITH_ANY( IF_CALCV_1     = IF_VALUE_TOOL
                                                      IF_CALCV_UOM_1 = IF_UOM_TOOL
                                                      IF_CALCV_2     = LF_VALUE_VC
                                                      IF_CALCV_UOM_2 = LF_UOM_VC
                                                      IF_OPERA       = IF_OPERA ).
        RF_MATCH = ABAP_TRUE.
      endif.
    else.
***   Compare of unitless values
      if IF_VALUE_TOOL eq IF_VALUE_VC.
        RF_MATCH = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
    if RF_MATCH ne ABAP_TRUE and
       IR_MESSAGE is bound.

***   Determine Descirption
      if IF_DESCR is supplied.
        LF_MSGV1 = IF_DESCR.
      else.
        LR_ABAP_ELEMDESCR ?= CL_ABAP_ELEMDESCR=>DESCRIBE_BY_DATA( P_DATA = IF_VALUE_TOOL ).
        LF_MSGV1 = LR_ABAP_ELEMDESCR->GET_DDIC_FIELD( )-SCRTEXT_L.
      endif.

***   &1 doesn't match Tool Definition.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_F0SS'
                               IF_MSGTY = IF_MSGTY
                               IF_MSGNO = '401'
                               IF_MSGV1 = LF_MSGV1 ).
    endif.

  endmethod.
