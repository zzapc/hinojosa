
class ZCL_VCXI_PFSS_UI_LAMI definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.
  type-pools VRM .

  data F_CURSOR type SCRFNAME .
  data F_DYNNR_SUBSC type DYNNR read-only .
  data S_LAMI_SBINFO_VIS type ZVCXI_PFSS_S_LAMI_SBINFO_VIS read-only .
  data S_LAMI_VIS type ZVCXI_PFSS_S_LAMI_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_LAMI_SBINFO_VIS
    importing
      !IS_LAMI_SBINFO_VIS type ZVCXI_PFSS_S_LAMI_SBINFO_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_LAMI_VIS
    importing
      !IS_LAMI_VIS type ZVCXI_PFSS_S_LAMI_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  constants C_DYNNR_INITIAL type DYNNR value '9999'. "#EC NOTEXT
  constants C_DYNNR_SBINFO type DYNNR value '0110'. "#EC NOTEXT
  data R_PR_LAMI type ref to ZCL_VCXI_PFSS_PR_LAMI .

  methods INIT_SBINFO_VIS
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_TLAGC
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_TLAMI
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_VLASH
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PFSS_UI_LAMI definition
class ZCL_VCXI_PFSS_UI_LAMI implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_PFSS_UI_LAMI_BIND'
    exporting
      IR_UI_LAMI = ME
    importing
      ES_DYNP    = ME->S_DYNP.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_LAMI.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class doesn't work together with PR ABAP Class
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED    type        /VCXI/CKX_LOCKED,
         LF_INUSE     type        /VCXI/VKSR_INUSE,
         LF_MATNR_E   type        ABAP_BOOL,
         LF_MATNR_V   type        ABAP_BOOL,
         LF_CALIP_E   type        ABAP_BOOL,
         LF_CALIP_V   type        ABAP_BOOL,
         LF_SBINFO_E  type        ABAP_BOOL,
         LF_SBINFO_V  type        ABAP_BOOL.
  data:  LR_CX_CKX    type ref to /VCXI/CX_CKX.

  try.

      SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                               IF_DYNNR = IF_DYNNR ).

      LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
      LF_INUSE  = ME->R_GATE->IS_INUSE( ).

      ME->R_PR_LAMI->IS_SBINFO_VISIBLE( importing EF_MATNR  = LF_MATNR_V
                                                  EF_CALIP  = LF_CALIP_V
                                                  EF_SBINFO = LF_SBINFO_V ).

      ME->R_PR_LAMI->IS_SBINFO_EDITABLE( importing EF_MATNR  = LF_MATNR_E
                                                   EF_CALIP  = LF_CALIP_E
                                                   EF_SBINFO = LF_SBINFO_E ).

      loop at screen.
***     Set Material Screen Options
        if SCREEN-GROUP1 eq 'MAT'.
          if LF_MATNR_V eq ABAP_FALSE.
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.
          if LF_MATNR_E eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.
        endif.

***     Set Caliper Screen Options
        if SCREEN-GROUP1 eq 'CAL'.
          if LF_CALIP_V eq ABAP_FALSE.
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.
          if LF_CALIP_E eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.
        endif.

***     Set SB Info Screen Options
        if SCREEN-GROUP1 eq 'SBI'.
          if LF_SBINFO_V eq ABAP_FALSE.
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.
          if LF_SBINFO_E eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.
        endif.

        modify screen.
      endloop.

***   Modify Screen using DynamicVC
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

      loop at screen.
***     Set all Fields to no Input
        if LF_LOCKED ne ABAP_TRUE or
           LF_INUSE  ne ABAP_TRUE.
          move 0 to SCREEN-INPUT.
        endif.
        modify screen.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Set Cursor
  ME->SET_CURSOR( ).

*** Set right subscreen
  if ME->R_PR_LAMI->GET_VLASH( ) is not initial.
    move C_DYNNR_SBINFO to ME->F_DYNNR_SUBSC.
  else.
    move C_DYNNR_INITIAL to ME->F_DYNNR_SUBSC.
  endif.

*** Initialize Visualization Structure
  ME->INIT_VIS( ).
  ME->INIT_SBINFO_VIS( ).

*** Define Drop Down Values for Lamination Type
  ME->SET_DDVAL_TLAMI( ).

*** Define Drop Down Values for Lamination Glue Consumption Type
  ME->SET_DDVAL_TLAGC( ).

*** Define DropDown Values for Sheet Variant
  ME->SET_DDVAL_VLASH( ).

endmethod.
method DO_UPDATE_LAMI_SBINFO_VIS.

  data:  LS_GRAMM          type ZVCXI_P0SS_S_GRAMM,
         LS_CALIP          type ZVCXI_P0SS_S_CALIP.

  check ME->R_PR_LAMI is bound.

*** Set Paper Grade
  if ME->S_LAMI_SBINFO_VIS-PAPGR ne IS_LAMI_SBINFO_VIS-PAPGR.
    ME->R_PR_LAMI->SET_PAPGR( IF_PAPGR = IS_LAMI_SBINFO_VIS-PAPGR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Grammage
  if ME->S_LAMI_SBINFO_VIS-GRAMM ne IS_LAMI_SBINFO_VIS-GRAMM.
    move-corresponding IS_LAMI_SBINFO_VIS to LS_GRAMM.
    ME->R_PR_LAMI->SET_GRAMM( IS_GRAMM = LS_GRAMM
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Caliper
  if ME->S_LAMI_SBINFO_VIS-CALIP ne IS_LAMI_SBINFO_VIS-CALIP.
    move-corresponding IS_LAMI_SBINFO_VIS to LS_CALIP.
    ME->R_PR_LAMI->SET_CALIP( IS_CALIP = LS_CALIP
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Material Number
  if ME->S_LAMI_SBINFO_VIS-MATNR ne IS_LAMI_SBINFO_VIS-MATNR.
    ME->R_PR_LAMI->SET_MATNR( IF_MATNR = IS_LAMI_SBINFO_VIS-MATNR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method DO_UPDATE_LAMI_VIS.

  data:  LS_OLWID          type ZVCXI_P0SS_S_OLWID,
         LS_OLLEN          type ZVCXI_P0SS_S_OLLEN.

  check ME->R_PR_LAMI is bound.

*** Set Lamination Type
  if ME->S_LAMI_VIS-TLAMI ne IS_LAMI_VIS-TLAMI.
    ME->R_PR_LAMI->SET_TLAMI( IF_TLAMI = IS_LAMI_VIS-TLAMI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Lamination Relation
  if ME->S_LAMI_VIS-RLAMI ne IS_LAMI_VIS-RLAMI.
    ME->R_PR_LAMI->SET_RLAMI( IF_RLAMI = IS_LAMI_VIS-RLAMI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Lamination Glue Consumption Type
  if ME->S_LAMI_VIS-TLAGC ne IS_LAMI_VIS-TLAGC.
    ME->R_PR_LAMI->SET_TLAGC( IF_TLAGC = IS_LAMI_VIS-TLAGC
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Laminating Sheet Variant
  if ME->S_LAMI_VIS-VLASH ne IS_LAMI_VIS-VLASH.
    ME->R_PR_LAMI->CREATE_VLASH( IF_VLASH = IS_LAMI_VIS-VLASH ).
  endif.

*** Set Overlap Dimensions
  if ME->S_LAMI_VIS-OLWID ne IS_LAMI_VIS-OLWID.
    move-corresponding IS_LAMI_VIS to LS_OLWID.
    ME->R_PR_LAMI->SET_OLWID( IS_OLWID = LS_OLWID
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_LAMI_VIS-OLLEN ne IS_LAMI_VIS-OLLEN.
    move-corresponding IS_LAMI_VIS to LS_OLLEN.
    ME->R_PR_LAMI->SET_OLLEN( IS_OLLEN = LS_OLLEN
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_LAMI.

endmethod.
method INIT_SBINFO_VIS.

  data:  LS_GRAMM          type        ZVCXI_P0SS_S_GRAMM,
         LS_CALIP          type        ZVCXI_P0SS_S_CALIP.

  clear: ME->S_LAMI_SBINFO_VIS.
  check ME->R_PR_LAMI is bound.

*** -----------------------------------------------------------------------
*** Get Paper Grade
  move ME->R_PR_LAMI->GET_PAPGR( )        to ME->S_LAMI_SBINFO_VIS-PAPGR.

*** Get Grammage
  move ME->R_PR_LAMI->GET_GRAMM( )        to LS_GRAMM.
  move-corresponding LS_GRAMM             to ME->S_LAMI_SBINFO_VIS.

*** Get Caliper
  move ME->R_PR_LAMI->GET_CALIP( IF_POOTI = '*' ) to LS_CALIP.
  move-corresponding LS_CALIP             to ME->S_LAMI_SBINFO_VIS.

*** Get Grain Direction
  move ME->R_PR_LAMI->GET_GRDIR( )        to ME->S_LAMI_SBINFO_VIS-GRDIR.
  move ZCL_VCXI_PFSS_CUST_SBOARD=>GET_GRDIR_DESCR( IF_GRDIR = ME->S_LAMI_SBINFO_VIS-GRDIR )
                                          to ME->S_LAMI_SBINFO_VIS-GRDIR_DESCR.

*** Get Material Number
  move ME->R_PR_LAMI->GET_MATNR( )        to ME->S_LAMI_SBINFO_VIS-MATNR.
  move ME->R_PR_LAMI->GET_MATNR_DESCR( )  to ME->S_LAMI_SBINFO_VIS-MATNR_DESCR.

endmethod.                    "INIT_VIS
method INIT_VIS.

  data:  LS_SHTLW          type        ZVCXI_P0SS_S_SHTLW,
         LS_SHTLL          type        ZVCXI_P0SS_S_SHTLL,
         LS_OLWID          type        ZVCXI_P0SS_S_OLWID,
         LS_OLLEN          type        ZVCXI_P0SS_S_OLLEN,
         LS_SHTGW          type        ZVCXI_P0SS_S_SHTGW,
         LS_SHTGL          type        ZVCXI_P0SS_S_SHTGL.
  data:  LR_GATE_VLASH     type ref to /VCXI/CL_VKSR_GATE.

  clear: ME->S_LAMI_VIS.
  check ME->R_PR_LAMI is bound.

*** -----------------------------------------------------------------------
*** Get Lamination Type
  move ME->R_PR_LAMI->GET_TLAMI( )        to ME->S_LAMI_VIS-TLAMI.

*** Get Lamination Relation
  move ME->R_PR_LAMI->GET_RLAMI( )        to ME->S_LAMI_VIS-RLAMI.

*** Get Lamination Glue Consumption Type
  move ME->R_PR_LAMI->GET_TLAGC( )        to ME->S_LAMI_VIS-TLAGC.

*** Get Laminating Sheet Variant
  move ME->R_PR_LAMI->GET_VLASH( )        to LR_GATE_VLASH.
  if LR_GATE_VLASH is bound.
    move LR_GATE_VLASH->F_ID              to ME->S_LAMI_VIS-VLASH.
  endif.

*** -----------------------------------------------------------------------
*** Get Lamination Sheet Dimensions
  move ME->R_PR_LAMI->GET_SHTLW( )        to LS_SHTLW.
  move-corresponding LS_SHTLW             to ME->S_LAMI_VIS.

  move ME->R_PR_LAMI->GET_SHTLL( )        to LS_SHTLL.
  move-corresponding LS_SHTLL             to ME->S_LAMI_VIS.

*** Get Overlap Dimensions
  move ME->R_PR_LAMI->GET_OLWID( )        to LS_OLWID.
  move-corresponding LS_OLWID             to ME->S_LAMI_VIS.

  move ME->R_PR_LAMI->GET_OLLEN( )        to LS_OLLEN.
  move-corresponding LS_OLLEN             to ME->S_LAMI_VIS.

*** Get Gross Sheet Dimensions
  move ME->R_PR_LAMI->GET_SHTGL( )        to LS_SHTGL.
  move-corresponding LS_SHTGL             to ME->S_LAMI_VIS.

  move ME->R_PR_LAMI->GET_SHTGW( )        to LS_SHTGW.
  move-corresponding LS_SHTGW             to ME->S_LAMI_VIS.

endmethod.                    "INIT_VIS
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method SET_DDVAL_TLAGC.

  data:          LF_ID      type       VRM_ID.
  data:          LF_TLAGC   type       ZVCXI_P0SS_TLAGC.
  data:          LT_TLAGC   type       ZVCXI_P0SS_TT_TLAGC,
                 LT_VALUE   type       VRM_VALUES.
  field-symbols: <S_VALUE>  type       VRM_VALUE.

***------------------------------------------------------------------------------------------------
*** Get all Lamination Types
  LT_TLAGC = ME->R_PR_LAMI->GET_VALID_TLAGC( ).

*** Add to search help structure
  loop at LT_TLAGC into LF_TLAGC.
    append initial line to LT_VALUE assigning <S_VALUE>.
    move LF_TLAGC to <S_VALUE>-KEY.
    move ZCL_VCXI_P0SS_CUST_LAMI=>GET_DESCR_TLAGC( IF_TLAGC = LF_TLAGC )
                  to <S_VALUE>-TEXT.
  endloop.

***------------------------------------------------------------------------------------------------
*** Set to DropDown List
  move 'ZVCXI_PFSS_S_LAMI_VIS-TLAGC' to LF_ID.
  call function 'VRM_SET_VALUES'
    exporting
      ID     = LF_ID
      VALUES = LT_VALUE.

endmethod.
method SET_DDVAL_TLAMI.

  data:          LF_ID      type       VRM_ID.
  data:          LF_TLAMI   type       ZVCXI_P0SS_TLAMI.
  data:          LT_TLAMI   type       ZVCXI_P0SS_TT_TLAMI,
                 LT_VALUE   type       VRM_VALUES.
  field-symbols: <S_VALUE>  type       VRM_VALUE.

***------------------------------------------------------------------------------------------------
*** Get all Lamination Types
  LT_TLAMI = ME->R_PR_LAMI->GET_VALID_TLAMI( ).

*** Add to search help structure
  loop at LT_TLAMI into LF_TLAMI.
    append initial line to LT_VALUE assigning <S_VALUE>.
    move LF_TLAMI to <S_VALUE>-KEY.
    move ZCL_VCXI_P0SS_CUST_LAMI=>GET_DESCR_TLAMI( IF_TLAMI = LF_TLAMI )
                  to <S_VALUE>-TEXT.
  endloop.

***------------------------------------------------------------------------------------------------
*** Set to DropDown List
  move 'ZVCXI_PFSS_S_LAMI_VIS-TLAMI' to LF_ID.
  call function 'VRM_SET_VALUES'
    exporting
      ID     = LF_ID
      VALUES = LT_VALUE.

endmethod.
method SET_DDVAL_VLASH.

  data:          LF_ID      type       VRM_ID.
  data:          LS_VLASH   type       ZVCXI_P0SS_S_VLASH.
  data:          LT_VLASH   type       ZVCXI_P0SS_TT_VLASH,
                 LT_VALUE   type       VRM_VALUES.
  field-symbols: <S_VALUE>  type       VRM_VALUE.

***------------------------------------------------------------------------------------------------
*** Get all Laminating Sheet Variants
  LT_VLASH = ME->R_PR_LAMI->GET_ALL_VLASH( ).

*** Add to search help structure
  loop at LT_VLASH into LS_VLASH.
    append initial line to LT_VALUE assigning <S_VALUE>.
    move LS_VLASH-VLASH       to <S_VALUE>-KEY.
    move LS_VLASH-VLASH_DESCR to <S_VALUE>-TEXT.
  endloop.

***------------------------------------------------------------------------------------------------
*** Set to DropDown List
  move 'ZVCXI_PFSS_S_LAMI_VIS-VLASH' to LF_ID.
  call function 'VRM_SET_VALUES'
    exporting
      ID     = LF_ID
      VALUES = LT_VALUE.

endmethod.
