
class ZCL_VCXI_XCSP_UI_ADDON definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_ADDON_VIS type ZVCXI_XCSP_S_ADDON_VIS .
  data F_CURSOR type SCRFNAME .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_ADDON type ref to ZCL_VCXI_XCSP_PR_ADDON .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSP_UI_ADDON definition
class ZCL_VCXI_XCSP_UI_ADDON implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_XCSP_UI_ADDON_BIND'
      exporting
        IR_UI_ADDON = ME
      importing
        ES_DYNP     = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_ADDON.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE.
    data: LS_MDS type /VCXI/VSMC_S_MDS.


    SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                             IF_DYNNR = IF_DYNNR ).

    try.
        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).
        LS_MDS    = ME->R_PR_ADDON->GET_MDS( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Machine Data Source
          if ( SCREEN-GROUP1 eq 'ST' and                                   "Setup Time
               LS_MDS-MDSST ne /VCXI/CL_VSMC_MGRPV_SPEED=>C_MDS_MRC ) or
             ( SCREEN-GROUP1 eq 'RSF' and                                  "Run Slowdown Factor
               LS_MDS-MDSRS ne /VCXI/CL_VSMC_MGRPV_SPEED=>C_MDS_MRC ) or
             ( SCREEN-GROUP1 eq 'TT' and                                   "Teardown Time
               LS_MDS-MDSTT ne /VCXI/CL_VSMC_MGRPV_SPEED=>C_MDS_MRC ) or
             ( SCREEN-GROUP1 eq 'SW' and                                   "Setup Waste
               LS_MDS-MDSWA ne /VCXI/CL_VSMC_MGRPV_SPEED=>C_MDS_MRC ) or
             ( SCREEN-GROUP1 eq 'RWF' and                                  "Run Waste Factor
               LS_MDS-MDSWA ne /VCXI/CL_VSMC_MGRPV_SPEED=>C_MDS_MRC ).
            SCREEN-INVISIBLE = 1.
            SCREEN-INPUT     = 0.
          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Check if the PR Class is bound
    check ME->R_PR_ADDON is bound.

    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_ADDON_VIS type ZVCXI_XCSP_S_ADDON_VIS.


    check ME->R_PR_ADDON is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_ADDON_VIS.

***--------------------------------------------------------------------------------------
*** ...

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_ADDON.

  endmethod.
  method INIT_VIS.

    free: ME->S_ADDON_VIS.

*** Get All Time and Waste Data of Standard Addon
    ME->S_ADDON_VIS-S_MSRSF = ME->R_PR_ADDON->ZIF_VCXI_XCSP_ADDON~GET_MSRSF( ).
    ME->S_ADDON_VIS-S_MSRWF = ME->R_PR_ADDON->ZIF_VCXI_XCSP_ADDON~GET_MSRWF( ).
    ME->S_ADDON_VIS-S_MSSTI = ME->R_PR_ADDON->ZIF_VCXI_XCSP_ADDON~GET_MSSTI( ).
    ME->S_ADDON_VIS-S_MSSWA = ME->R_PR_ADDON->ZIF_VCXI_XCSP_ADDON~GET_MSSWA( ).
    ME->S_ADDON_VIS-S_MSTTI = ME->R_PR_ADDON->ZIF_VCXI_XCSP_ADDON~GET_MSTTI( ).

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
