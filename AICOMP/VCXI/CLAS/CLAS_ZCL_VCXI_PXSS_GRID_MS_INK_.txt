
class ZCL_VCXI_PXSS_GRID_MS_INK definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSS_S_MS_INK_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .

  methods REFRESH_GRID
    redefinition .
protected section.

  data F_RELEA type ABAP_BOOL .

  methods CHANGE_STYLE_MS_DINK
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MS_INK
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MS_DINK_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods GET_MS_INK_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_MS_DINK_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_MS_INK_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods DEL_PRVDR
    redefinition .
  methods GET_DISABLED_ADD
    redefinition .
  methods GET_DISABLED_DEL
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_GRID_MS_INK definition
class ZCL_VCXI_PXSS_GRID_MS_INK implementation.
  method CHANGE_STYLE_MS_DINK.

    data: LF_DUMMY         type ABAP_BOOL,
          LF_STYLE_ENABLED type LVC_STYLE,
          LF_TOOL_RELEASED type ABAP_BOOL.
    data: LS_MS_INK_VIS type ZVCXI_PXSS_S_MS_INK_VIS.
    data: LR_PR_MS_DINK type ref to ZCL_VCXI_PXSS_PR_MS_DINK.


    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MS_DINK.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_MS_INK_VIS.

    check LR_PR_MS_DINK is bound.
    move LR_PR_MS_DINK->IS_DUMMY( ) to LF_DUMMY.

*** Avoid any changes on released Print Designs
    LF_STYLE_ENABLED = switch #( ME->F_RELEA when ABAP_FALSE then ME->F_STYLE_ENABLED
                                                             else CL_GUI_ALV_GRID=>MC_STYLE_DISABLED ).

***------------------------------------------------------------------
*** Set Material = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
*** Set Ink Type = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TINK'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Coverage = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'COVRG'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).


***------------------------------------------------------------------
    case LR_PR_MS_DINK->GET_APDIM( ).
      when 'VOLUME'.
***     Set Application Volume = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APVOL'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Application Weight = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APWGT'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
      when 'MASS'.
***     Set Application Volume = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APVOL'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Application Weight = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APWGT'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

***------------------------------------------------------------------
*** Check if dummy material
    if LF_DUMMY eq ABAP_TRUE.
***   Set Solid Content = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SLDCO'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Solid Content = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SLDCO'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

***------------------------------------------------------------------
*** Purchase Ink
    case LS_MS_INK_VIS-PURCH.
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***     Set Vendor = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.
***------------------------------------------------------------------
*** Dummy Flag
    if LF_DUMMY eq ABAP_TRUE.
***   Purchase =  Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    else.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.


***--------------------------------------------------------------------------------------
*** Disable all other Columns
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'COLCO'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRPTH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'INKTN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'INKTD'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_INKTD'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FSLVE'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APCTN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_APCTN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MSLTN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MSLTN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'ANITN'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CHANGE_STYLE_MS_INK.

    data: LF_DUMMY         type ABAP_BOOL,
          LF_STYLE_ENABLED type LVC_STYLE,
          LF_TOOL_RELEASED type ABAP_BOOL.
    data: LS_MS_INK_VIS type ZVCXI_PXSS_S_MS_INK_VIS.
    data: LR_PR_MS_INK type ref to ZCL_VCXI_PXSS_PR_MS_INK.


    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MS_INK.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_MS_INK_VIS.

    check LR_PR_MS_INK is bound.
    move LR_PR_MS_INK->IS_DUMMY( ) to LF_DUMMY.

*** Avoid any changes on released Print Designs
    LF_STYLE_ENABLED = switch #( ME->F_RELEA when ABAP_FALSE then ME->F_STYLE_ENABLED
                                                             else CL_GUI_ALV_GRID=>MC_STYLE_DISABLED ).

***------------------------------------------------------------------
*** Set Color Code = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'COLCO'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** If Color Code is filled disable Material and Ink Type field
    if LS_MS_INK_VIS-COLCO is not initial.
***   Set Material = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Ink Type = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TINK'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Material = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Ink Type = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TINK'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

*** Set Print Path = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRPTH'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

***------------------------------------------------------------------
*** Set Ink Tool Number = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'INKTN'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    if LS_MS_INK_VIS-INKTN is not initial.
      LR_PR_MS_INK->GET_INKTN( importing EF_RELEA = LF_TOOL_RELEASED ).
    endif.
    if LF_TOOL_RELEASED eq ABAP_TRUE.
***   Set Coverage = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'COVRG'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

***   Set Application Weight = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APWGT'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

***   Sleeve Flag = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FSLVE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Coverage = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'COVRG'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

***   Set Application Weight = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APWGT'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

***   Sleeve Flag = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FSLVE'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

    if LS_MS_INK_VIS-INKTN is initial.
      case LS_MS_INK_VIS-FOVRR_INKTD.
        when ABAP_UNDEFINED.
***       Hide Tool Description Override Flag if undefined
          ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_INKTD'
                                      IF_STYLE     = ME->F_STYLE_DISABLED
                            changing  CT_STYL      = CT_STYL ).

        when ABAP_FALSE.
***       Disable Tool Description if generated
          ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'INKTD'
                                      IF_STYLE     = ME->F_STYLE_DISABLED
                            changing  CT_STYL      = CT_STYL ).
      endcase.
    else.
***   Disable Tool Desciption for existing Tools
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'INKTD'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_INKTD'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

***------------------------------------------------------------------
    case LS_MS_INK_VIS-FOVRR_APCTN.
      when ABAP_UNDEFINED. "not applicable
***     Hide Adapter/Cylinder
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APCTN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Hide Adapter/Cylinder Override Flag if undefined
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_APCTN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
      when ABAP_TRUE.  "Overwritten
***     Enable Adapter/Cylinder
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APCTN'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Enable Adapter/Cylinder Override Flag
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_APCTN'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
      when ABAP_FALSE.  "Not Overwritten
***     Disable Adapter/Cylinder
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APCTN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Enable Adapter/Cylinder Override Flag
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_APCTN'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

***------------------------------------------------------------------
    case LS_MS_INK_VIS-FOVRR_MSLTN.
      when ABAP_UNDEFINED. "not applicable
***     Hide Mounting Sleeve
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MSLTN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Hide Mounting Sleeve Override Flag if undefined
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MSLTN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
      when ABAP_TRUE.  "Overwritten
***     Enable Mounting Sleeve
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MSLTN'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Enable Mounting Sleeve Override Flag
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MSLTN'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
      when ABAP_FALSE.  "Not Overwritten
***     Disable Mounting Sleeve
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MSLTN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Enable Mounting Sleeve Override Flag
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRR_MSLTN'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

***------------------------------------------------------------------
*** Set Anilox Roll Tool Number = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'ANITN'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

    if LS_MS_INK_VIS-ANITN is not initial.
***   Set Application Weight = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APWGT'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

***------------------------------------------------------------------
*** Check if dummy material
    if LF_DUMMY eq ABAP_TRUE.
***   Set Solid Content = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SLDCO'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Solid Content = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SLDCO'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

***------------------------------------------------------------------
*** Purchase Ink
    case LS_MS_INK_VIS-PURCH.
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***     Set Vendor = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

***------------------------------------------------------------------
*** Dummy Flag
    if LF_DUMMY eq ABAP_TRUE.
***   Purchase =  Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    else.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                  IF_STYLE     = LF_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

***--------------------------------------------------------------------------------------
*** Disable all other Columns
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'APVOL'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).


  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK.

  endmethod.
method DEL_PRVDR.

  data:          LT_GATE      type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE      type ref to /VCXI/CL_VKSR_GATE.

*** Free Selected Gates
  LT_GATE = ME->GET_SELECTED_GATES( ).
  loop at LT_GATE into LR_GATE.
    check LR_GATE is bound.

*** Only delete traditional Inks
    check LR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_INK.

*** Check if Gate is changeable and can be deleted
    if ZCL_VCXI_XCDR_SERVICE=>IS_INUSE_CHANGEABLE( IR_GATE = LR_GATE ) ne ABAP_FALSE.
      LR_GATE->DO_FREE( ).
    endif.
  endloop.

*** Process Events
  ME->R_GATE->RAISE_EVENTS( ).

*** Refresh is required
  ME->F_REFRESH_REQ = ABAP_TRUE.

endmethod.
  method GET_DISABLED_ADD.

    RF_DISABLED = SUPER->GET_DISABLED_ADD( ).

*** Avoid any changes on released Print Designs
    if ME->F_RELEA eq ABAP_TRUE.
      RF_DISABLED = ABAP_TRUE.
    endif.

  endmethod.
  method GET_DISABLED_DEL.

    RF_DISABLED = SUPER->GET_DISABLED_DEL( ).

*** Avoid any changes on released Print Designs
    if ME->F_RELEA eq ABAP_TRUE.
      RF_DISABLED = ABAP_TRUE.
    endif.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED      type /VCXI/CKX_LOCKED,
          LF_INUSE       type /VCXI/VKSR_INUSE,
          LF_COLPOS      type I,
          LF_MS_INK      type ABAP_BOOL,
          LF_MS_DINK     type ABAP_BOOL,
          LF_LIFNR       type ABAP_BOOL,
          LF_PRICE       type ABAP_BOOL,
          LF_FOVRR_INKTD type ABAP_BOOL,
          LF_FAPCA       type ZVCXI_PXS_FAPCA.
    data: LS_MS_INK_GRID type ZVCXI_PXSS_S_MS_INK_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <S_FCAT> type          LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_MS_INK_GRID.

***   Find Analog/Digital Ink
      case type of LS_MS_INK_GRID-R_GATE->R_CLSPR.
        when type ZCL_VCXI_PXSS_PR_MS_INK.
          LF_MS_INK = ABAP_TRUE.
        when type ZCL_VCXI_PXSS_PR_MS_DINK.
          LF_MS_DINK = ABAP_TRUE.
      endcase.

***   Find Purchased
      case LS_MS_INK_GRID-PURCH.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
          LF_LIFNR = ABAP_TRUE.
          LF_PRICE = ABAP_TRUE.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
          LF_LIFNR = ABAP_TRUE.
      endcase.

***   Find Tool Description Override
      if LS_MS_INK_GRID-FOVRR_INKTD ne ABAP_UNDEFINED.
        LF_FOVRR_INKTD = ABAP_TRUE.
      endif.
    endloop.

*** Are Adapter/Print Cylinder allowed
    cast ZIF_VCXI_PXSS_PRINT( ME->R_GATE->R_CLSPR )->GET_TPRIN( importing EF_FAPCA = LF_FAPCA ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
          move ABAP_TRUE    to <S_FCAT>-TECH.
          move 0            to <S_FCAT>-COL_POS.
        when 'WERKS' or 'FPTOS'.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.

        when 'TINK'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'COVRG'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'APVOL'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
        when 'APVOL_UOM'.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.

        when 'APVOP'.
        when 'APVOP_UOM'.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.

        when 'APWGT'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
        when 'APWGT_UOM'.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.

        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'COLCO'.
          move ABAP_TRUE    to <S_FCAT>-F4AVAILABL.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'PRPTH'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'INKTN'.
          move ABAP_TRUE    to <S_FCAT>-F4AVAILABL.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'INKTD'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'FOVRR_INKTD'.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'FSLVE'.      "Sleeve Flag
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'APCTN'.      "Adapter/Print Cylinder Tool Number
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'FOVRR_APCTN'.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'MSLTN'.      "Mounting Sleeve Tool Number
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'FOVRR_MSLTN'.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'ANITN'.
          move ABAP_TRUE    to <S_FCAT>-F4AVAILABL.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'SLDCO'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'SURWT_UOM'.
          move ABAP_TRUE    to <S_FCAT>-NO_OUT.

        when 'PURCH'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'LIFNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'PRICE' or 'PRICP'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

      endcase.

***----------------------------------------------------------------------------
***   Hide Field if no Analog Ink
      if LF_MS_INK ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'COLCO' or
           <S_FCAT>-FIELDNAME eq 'COLCO_DESCR' or
           <S_FCAT>-FIELDNAME eq 'PRPTH' or
           <S_FCAT>-FIELDNAME eq 'INKTN_ICON' or
           <S_FCAT>-FIELDNAME eq 'INKTN' or
           <S_FCAT>-FIELDNAME eq 'INKTD' or
           <S_FCAT>-FIELDNAME eq 'FOVRR_INKTD' or
           <S_FCAT>-FIELDNAME eq 'FSLVE' or
           <S_FCAT>-FIELDNAME eq 'APCTN' or
           <S_FCAT>-FIELDNAME eq 'FOVRR_APCTN' or
           <S_FCAT>-FIELDNAME eq 'MSLTN' or
           <S_FCAT>-FIELDNAME eq 'FOVRR_MSLTN' or
           <S_FCAT>-FIELDNAME eq 'ANITN'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

***   Hide Field if no Digital Ink
      if LF_MS_DINK ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'APVOL' or
           <S_FCAT>-FIELDNAME eq 'APVOL_UOMC6' or
           <S_FCAT>-FIELDNAME eq 'APVOP' or
           <S_FCAT>-FIELDNAME eq 'APVOP_UOMC6'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

***   Hide Field if not purchase
      if LF_LIFNR ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'LIFNR' or
           <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.
      if LF_PRICE ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'PRICE' or
           <S_FCAT>-FIELDNAME eq 'PRICE_CURR' or
           <S_FCAT>-FIELDNAME eq 'PRICP' or
           <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

***   Hide Override of Tool Description if not available
      if LF_FOVRR_INKTD ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'FOVRR_INKTD'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

***   Hide related fields if Adapter/Print Cylinder are not allowed
      if LF_FAPCA ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'FSLVE' or
           <S_FCAT>-FIELDNAME eq 'APCTN' or
           <S_FCAT>-FIELDNAME eq 'FOVRR_APCTN' or
           <S_FCAT>-FIELDNAME eq 'MSLTN' or
           <S_FCAT>-FIELDNAME eq 'FOVRR_MSLTN'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

***----------------------------------------------------------------------------
***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TINK'.            <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COVRG'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COVRG_UOM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOL'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOL_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOP'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOP_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APWGT'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APWGT_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COLCO'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COLCO_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRPTH'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTN_ICON'.      <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTN'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTD'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FOVRR_INKTD'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FSLVE'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APCTN'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FOVRR_APCTN'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MSLTN'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FOVRR_MSLTN'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'ANITN'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SLDCO'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SLDCO_UOM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PURCH'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE_CURR'.      <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    append lines of ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_MS_DINK=>C_IPRVT_PX_MS_DINK
                                           IF_INUSE  = ABAP_TRUE ) to LT_GATE.
    append lines of ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                           IF_INUSE  = ABAP_TRUE ) to LT_GATE.
    ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_PXSS_S_MS_INK_GRID( POSID  = LR_GATE->GET_POSID( )
                                                         GATKY  = LR_GATE->F_GATKY
                                                         R_GATE = LR_GATE
                                                       ) to <S_DATA>.

***   Get Visualization Data
      case type of LR_GATE->R_CLSPR.
        when type ZCL_VCXI_PXSS_PR_MS_INK.
          ME->GET_MS_INK_VIS( exporting IR_GATE = LR_GATE
                              changing  CS_DATA = <S_DATA> ).
        when type ZCL_VCXI_PXSS_PR_MS_DINK.
          ME->GET_MS_DINK_VIS( exporting IR_GATE = LR_GATE
                               changing  CS_DATA = <S_DATA> ).
      endcase.

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          case type of LR_GATE->R_CLSPR.
            when type ZCL_VCXI_PXSS_PR_MS_INK.
              ME->CHANGE_STYLE_MS_INK( exporting IR_GATE = LR_GATE
                                                 IS_DATA = <S_DATA>
                                        changing CT_STYL = <T_STYL> ).
            when type ZCL_VCXI_PXSS_PR_MS_DINK.
              ME->CHANGE_STYLE_MS_DINK( exporting IR_GATE = LR_GATE
                                                  IS_DATA = <S_DATA>
                                         changing CT_STYL = <T_STYL> ).
          endcase.
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_MS_DINK_VIS.

    data: LS_MS_INK_VIS type ZVCXI_PXSS_S_MS_INK_GRID,
          LS_PRICE      type ZVCXI_XCS_S_PRICE,
          LS_PRICP      type ZVCXI_XCS_S_PRICP.
    data: LR_PR_MS_DINK    type ref to ZCL_VCXI_PXSS_PR_MS_DINK,
          LR_CUST_TOOL_INK type ref to ZCL_VCXI_PXSS_CUST_TOOL_INK.


***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_DINK.
    LR_PR_MS_DINK ?= IR_GATE->R_CLSPR.
    check LR_PR_MS_DINK is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_MS_INK_VIS.

***--------------------------------------------------------------------------------------
*** Plant
    LS_MS_INK_VIS-WERKS = LR_PR_MS_DINK->GET_WERKS( ).

*** Material
    LS_MS_INK_VIS-MATNR       = LR_PR_MS_DINK->GET_MATNR( ).
    LS_MS_INK_VIS-MATNR_DESCR = LR_PR_MS_DINK->GET_MATNR_DESCR( ).

*** Ink Type
    LS_MS_INK_VIS-TINK = LR_PR_MS_DINK->GET_TINK( ).

*** Coverage
    LS_MS_INK_VIS-S_COVRG = LR_PR_MS_DINK->GET_COVRG( ).

*** Application Volume (Per)
    LS_MS_INK_VIS-S_APVOL = LR_PR_MS_DINK->GET_APVOL( ).
    LS_MS_INK_VIS-S_APVOP = LR_PR_MS_DINK->GET_APVOP( ).
    LS_MS_INK_VIS-APVOL_UOMC6 = LS_MS_INK_VIS-S_APVOL-APVOL_UOM.
    LS_MS_INK_VIS-APVOP_UOMC6 = LS_MS_INK_VIS-S_APVOP-APVOP_UOM.

*** Application Weight
    LS_MS_INK_VIS-S_APWGT = LR_PR_MS_DINK->GET_APWGT( ).
    move LS_MS_INK_VIS-S_APWGT-APWGT_UOM to LS_MS_INK_VIS-APWGT_UOMC6.

*** Solid Content
    LS_MS_INK_VIS-S_SLDCO = LR_PR_MS_DINK->GET_SLDCO( ).

*** Surface Weight
    LS_MS_INK_VIS-S_SURWT = LR_PR_MS_DINK->GET_SURWT( ).
    move LS_MS_INK_VIS-S_SURWT-SURWT_UOM to LS_MS_INK_VIS-SURWT_UOMC6.

***--------------------------------------------------------------------------------------
*** Procurement Option
    LS_MS_INK_VIS-PURCH = LR_PR_MS_DINK->GET_PURCH( ).

*** Vendor
    LS_MS_INK_VIS-LIFNR       = LR_PR_MS_DINK->GET_LIFNR( ).
    LS_MS_INK_VIS-LIFNR_DESCR = LR_PR_MS_DINK->GET_LIFNR_DESCR( ).

*** Price and Price Per
    LS_MS_INK_VIS-S_PRICE = LR_PR_MS_DINK->GET_PRICE( ).
    LS_MS_INK_VIS-S_PRICP = LR_PR_MS_DINK->GET_PRICP( ).

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_MS_INK_VIS to CS_DATA.

  endmethod.
  method GET_MS_INK_VIS.

    data: LS_MS_INK_VIS type ZVCXI_PXSS_S_MS_INK_GRID,
          LS_PRICE      type ZVCXI_XCS_S_PRICE,
          LS_PRICP      type ZVCXI_XCS_S_PRICP.
    data: LR_PR_MS_INK     type ref to ZCL_VCXI_PXSS_PR_MS_INK,
          LR_CUST_TOOL_INK type ref to ZCL_VCXI_PXSS_CUST_TOOL_INK.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MS_INK.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_MS_INK is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_MS_INK_VIS.

***--------------------------------------------------------------------------------------
*** Plant
    LS_MS_INK_VIS-WERKS = LR_PR_MS_INK->GET_WERKS( ).

*** Material
    LS_MS_INK_VIS-MATNR       = LR_PR_MS_INK->GET_MATNR( ).
    LS_MS_INK_VIS-MATNR_DESCR = LR_PR_MS_INK->GET_MATNR_DESCR( ).

*** Ink Type
    LS_MS_INK_VIS-TINK = LR_PR_MS_INK->GET_TINK( ).

*** Coverage
    LS_MS_INK_VIS-S_COVRG = LR_PR_MS_INK->GET_COVRG( ).

*** Ink Color Code + Description
    LS_MS_INK_VIS-COLCO = LR_PR_MS_INK->GET_COLCO( importing EF_DESCR = LS_MS_INK_VIS-COLCO_DESCR ).

*** Print Path
    LS_MS_INK_VIS-PRPTH = LR_PR_MS_INK->GET_PRPTH( ).

*** Ink Tool Number
    LS_MS_INK_VIS-INKTN = LR_PR_MS_INK->GET_INKTN( importing ER_CUST_TOOL_INK = LR_CUST_TOOL_INK ).

*** Get Tool Status Icon based on Release Status
    LS_MS_INK_VIS-INKTN_ICON = cond #( when LR_CUST_TOOL_INK is not bound                 then SPACE
                                       when LR_CUST_TOOL_INK->IS_RELEASED( ) eq ABAP_TRUE then ICON_CONNECT
                                                                                          else ICON_DISCONNECT ).

*** Ink Tool Description
    LS_MS_INK_VIS-INKTD = LR_PR_MS_INK->GET_INKTD( importing EF_FOVRR = LS_MS_INK_VIS-FOVRR_INKTD ).

*** Sleeve Flag
    LS_MS_INK_VIS-FSLVE = LR_PR_MS_INK->GET_FSLVE( ).

*** Adapter/Print Cylinder Tool Number
    LS_MS_INK_VIS-APCTN = LR_PR_MS_INK->GET_APCTN( importing EF_FOVRR = LS_MS_INK_VIS-FOVRR_APCTN ).

*** Mounting Sleeve Tool Number
    LS_MS_INK_VIS-MSLTN = LR_PR_MS_INK->GET_MSLTN( importing EF_FOVRR = LS_MS_INK_VIS-FOVRR_MSLTN ).

*** Anilox Roll Tool Number
    LS_MS_INK_VIS-ANITN = LR_PR_MS_INK->GET_ANITN( ).

*** Application Weight
    LS_MS_INK_VIS-S_APWGT = LR_PR_MS_INK->GET_APWGT( ).
    move LS_MS_INK_VIS-S_APWGT-APWGT_UOM to LS_MS_INK_VIS-APWGT_UOMC6.

*** Solid Content
    LS_MS_INK_VIS-S_SLDCO = LR_PR_MS_INK->GET_SLDCO( ).

*** Surface Weight
    LS_MS_INK_VIS-S_SURWT = LR_PR_MS_INK->GET_SURWT( ).
    move LS_MS_INK_VIS-S_SURWT-SURWT_UOM to LS_MS_INK_VIS-SURWT_UOMC6.

***--------------------------------------------------------------------------------------
*** Procurement Option
    LS_MS_INK_VIS-PURCH = LR_PR_MS_INK->GET_PURCH( ).

*** Vendor
    LS_MS_INK_VIS-LIFNR       = LR_PR_MS_INK->GET_LIFNR( ).
    LS_MS_INK_VIS-LIFNR_DESCR = LR_PR_MS_INK->GET_LIFNR_DESCR( ).

*** Price and Price Per
    LS_MS_INK_VIS-S_PRICE = LR_PR_MS_INK->GET_PRICE( ).
    LS_MS_INK_VIS-S_PRICP = LR_PR_MS_INK->GET_PRICP( ).

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_MS_INK_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MS_INK_GRID type ZVCXI_PXSS_S_MS_INK_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_MS_INK_GRID.

          check LS_MS_INK_GRID-R_GATE is bound and
                LS_MS_INK_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          case type of LS_MS_INK_GRID-R_GATE->R_CLSPR.
            when type ZCL_VCXI_PXSS_PR_MS_INK.
              ME->SET_MS_INK_VIS( IR_GATE = LS_MS_INK_GRID-R_GATE
                                  IS_DATA = <S_DATA> ).
            when type ZCL_VCXI_PXSS_PR_MS_DINK.
              ME->SET_MS_DINK_VIS( IR_GATE = LS_MS_INK_GRID-R_GATE
                                   IS_DATA = <S_DATA> ).
          endcase.
        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method REFRESH_GRID.

*** Get Release Status of Print Design
    clear ME->F_RELEA.
    if ME->R_GATE->R_CLSPR is instance of ZIF_VCXI_PXSS_PRINT.
      cast ZIF_VCXI_PXSS_PRINT( ME->R_GATE->R_CLSPR )->GET_DESDO( importing EF_RELEA = ME->F_RELEA ).
    endif.

    SUPER->REFRESH_GRID( ).

  endmethod.
  method SET_MS_DINK_VIS.

    data: LS_MS_INK_VIS_OLD type ZVCXI_PXSS_S_MS_INK_VIS,
          LS_MS_INK_VIS_NEW type ZVCXI_PXSS_S_MS_INK_VIS.
    data: LR_PR_MS_DINK  type ref to ZCL_VCXI_PXSS_PR_MS_DINK.


***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_DINK.
    LR_PR_MS_DINK ?= IR_GATE->R_CLSPR.
    check LR_PR_MS_DINK is bound.

*** Get old Values
    ME->GET_MS_DINK_VIS( exporting IR_GATE = IR_GATE
                         changing  CS_DATA = LS_MS_INK_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_MS_INK_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Material
    if LS_MS_INK_VIS_NEW-MATNR ne LS_MS_INK_VIS_OLD-MATNR.
      LR_PR_MS_DINK->SET_MATNR( IF_MATNR = LS_MS_INK_VIS_NEW-MATNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Ink Type
    if LS_MS_INK_VIS_NEW-TINK ne LS_MS_INK_VIS_OLD-TINK.
      LR_PR_MS_DINK->SET_TINK( IF_TINK  = LS_MS_INK_VIS_NEW-TINK
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Coverage
    if LS_MS_INK_VIS_NEW-COVRG ne LS_MS_INK_VIS_OLD-COVRG.
      LR_PR_MS_DINK->SET_COVRG( IS_COVRG = LS_MS_INK_VIS_NEW-S_COVRG
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Application Volume
    if LS_MS_INK_VIS_NEW-APVOL ne LS_MS_INK_VIS_OLD-APVOL.
      LR_PR_MS_DINK->SET_APVOL( IS_APVOL = LS_MS_INK_VIS_NEW-S_APVOL
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Application Weight
    if LS_MS_INK_VIS_NEW-APWGT ne LS_MS_INK_VIS_OLD-APWGT.
      LR_PR_MS_DINK->SET_APWGT( IS_APWGT = LS_MS_INK_VIS_NEW-S_APWGT
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Solid Content
    if LS_MS_INK_VIS_NEW-SLDCO ne LS_MS_INK_VIS_OLD-SLDCO.
      LR_PR_MS_DINK->SET_SLDCO( IS_SLDCO = LS_MS_INK_VIS_NEW-S_SLDCO
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Procurement Option
    if LS_MS_INK_VIS_NEW-PURCH ne LS_MS_INK_VIS_OLD-PURCH.
      LR_PR_MS_DINK->SET_PURCH( IF_PURCH = LS_MS_INK_VIS_NEW-PURCH
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if LS_MS_INK_VIS_NEW-LIFNR ne LS_MS_INK_VIS_OLD-LIFNR.
      LR_PR_MS_DINK->SET_LIFNR( IF_LIFNR = LS_MS_INK_VIS_NEW-LIFNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price
    if LS_MS_INK_VIS_NEW-PRICE ne LS_MS_INK_VIS_OLD-PRICE.
      LR_PR_MS_DINK->SET_PRICE( IS_PRICE = LS_MS_INK_VIS_NEW-S_PRICE
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price Per
    if LS_MS_INK_VIS_NEW-PRICP ne LS_MS_INK_VIS_OLD-PRICP.
      LR_PR_MS_DINK->SET_PRICP( IS_PRICP = LS_MS_INK_VIS_NEW-S_PRICP
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_MS_INK_VIS.

    data: LS_MS_INK_VIS_OLD type        ZVCXI_PXSS_S_MS_INK_VIS,
          LS_MS_INK_VIS_NEW type        ZVCXI_PXSS_S_MS_INK_VIS.
    data: LR_PR_MS_INK  type ref to ZCL_VCXI_PXSS_PR_MS_INK.

***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_INK.
    LR_PR_MS_INK ?= IR_GATE->R_CLSPR.
    check LR_PR_MS_INK is bound.

*** Get old Values
    ME->GET_MS_INK_VIS( exporting IR_GATE = IR_GATE
                        changing  CS_DATA = LS_MS_INK_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_MS_INK_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Material
    if LS_MS_INK_VIS_NEW-MATNR ne LS_MS_INK_VIS_OLD-MATNR.
      LR_PR_MS_INK->SET_MATNR( IF_MATNR = LS_MS_INK_VIS_NEW-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Ink Type
    if LS_MS_INK_VIS_NEW-TINK ne LS_MS_INK_VIS_OLD-TINK.
      LR_PR_MS_INK->SET_TINK( IF_TINK  = LS_MS_INK_VIS_NEW-TINK
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Coverage
    if LS_MS_INK_VIS_NEW-COVRG ne LS_MS_INK_VIS_OLD-COVRG.
      LR_PR_MS_INK->SET_COVRG( IS_COVRG = LS_MS_INK_VIS_NEW-S_COVRG
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Color Code
    if LS_MS_INK_VIS_NEW-COLCO ne LS_MS_INK_VIS_OLD-COLCO.
      LR_PR_MS_INK->SET_COLCO( IF_COLCO = LS_MS_INK_VIS_NEW-COLCO
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Print Path
    if LS_MS_INK_VIS_NEW-PRPTH ne LS_MS_INK_VIS_OLD-PRPTH.
      LR_PR_MS_INK->SET_PRPTH( IF_PRPTH = LS_MS_INK_VIS_NEW-PRPTH
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Ink Tool Number
    if LS_MS_INK_VIS_NEW-INKTN ne LS_MS_INK_VIS_OLD-INKTN.
      LR_PR_MS_INK->SET_INKTN( IF_INKTN = LS_MS_INK_VIS_NEW-INKTN
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Ink Tool Description
    if LS_MS_INK_VIS_NEW-INKTD        ne LS_MS_INK_VIS_OLD-INKTD or
       LS_MS_INK_VIS_NEW-FOVRR_INKTD  ne LS_MS_INK_VIS_OLD-FOVRR_INKTD.
      if LS_MS_INK_VIS_NEW-FOVRR_INKTD ne ABAP_FALSE.
        LR_PR_MS_INK->SET_INKTD( IF_INKTD = LS_MS_INK_VIS_NEW-INKTD
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_MS_INK->SET_INKTD( IF_INKTD = LS_MS_INK_VIS_NEW-INKTD
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Sleeve Flag
    if LS_MS_INK_VIS_NEW-FSLVE ne LS_MS_INK_VIS_OLD-FSLVE.
      LR_PR_MS_INK->SET_FSLVE( IF_FSLVE = LS_MS_INK_VIS_NEW-FSLVE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Adapter/Print Cylinder Tool Number
    if LS_MS_INK_VIS_NEW-APCTN       ne LS_MS_INK_VIS_OLD-APCTN or
       LS_MS_INK_VIS_NEW-FOVRR_APCTN ne LS_MS_INK_VIS_OLD-FOVRR_APCTN.
      if LS_MS_INK_VIS_NEW-FOVRR_APCTN ne ABAP_FALSE.
        LR_PR_MS_INK->SET_APCTN( IF_APCTN = LS_MS_INK_VIS_NEW-APCTN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_MS_INK->SET_APCTN( IF_SETBY = SPACE ).
      endif.
    endif.

*** Mounting Sleeve Tool Number
    if LS_MS_INK_VIS_NEW-MSLTN       ne LS_MS_INK_VIS_OLD-MSLTN or
       LS_MS_INK_VIS_NEW-FOVRR_MSLTN ne LS_MS_INK_VIS_OLD-FOVRR_MSLTN.
      if LS_MS_INK_VIS_NEW-FOVRR_MSLTN ne ABAP_FALSE.
        LR_PR_MS_INK->SET_MSLTN( IF_MSLTN = LS_MS_INK_VIS_NEW-MSLTN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        LR_PR_MS_INK->SET_MSLTN( IF_SETBY = SPACE ).
      endif.
    endif.

*** Anilox Roll Tool Number
    if LS_MS_INK_VIS_NEW-ANITN ne LS_MS_INK_VIS_OLD-ANITN.
      LR_PR_MS_INK->SET_ANITN( IF_ANITN = LS_MS_INK_VIS_NEW-ANITN
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Application Weight
    if LS_MS_INK_VIS_NEW-APWGT ne LS_MS_INK_VIS_OLD-APWGT.
      LR_PR_MS_INK->SET_APWGT( IS_APWGT = LS_MS_INK_VIS_NEW-S_APWGT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Solid Content
    if LS_MS_INK_VIS_NEW-SLDCO ne LS_MS_INK_VIS_OLD-SLDCO.
      LR_PR_MS_INK->SET_SLDCO( IS_SLDCO = LS_MS_INK_VIS_NEW-S_SLDCO
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Procurement Option
    if LS_MS_INK_VIS_NEW-PURCH ne LS_MS_INK_VIS_OLD-PURCH.
      LR_PR_MS_INK->SET_PURCH( IF_PURCH = LS_MS_INK_VIS_NEW-PURCH
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if LS_MS_INK_VIS_NEW-LIFNR ne LS_MS_INK_VIS_OLD-LIFNR.
      LR_PR_MS_INK->SET_LIFNR( IF_LIFNR = LS_MS_INK_VIS_NEW-LIFNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price
    if LS_MS_INK_VIS_NEW-PRICE ne LS_MS_INK_VIS_OLD-PRICE.
      LR_PR_MS_INK->SET_PRICE( IS_PRICE = LS_MS_INK_VIS_NEW-S_PRICE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price Per
    if LS_MS_INK_VIS_NEW-PRICP ne LS_MS_INK_VIS_OLD-PRICP.
      LR_PR_MS_INK->SET_PRICP( IS_PRICP = LS_MS_INK_VIS_NEW-S_PRICP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
