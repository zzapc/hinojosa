
class ZCL_VCXI_FFSS_UI_CSTEP_STERI definition
  public
  inheriting from ZCL_VCXI_FFSS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_STERI_VIS type ZVCXI_FFSS_S_CSTEP_STERI_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_CSTEP_STERI_VIS
    importing
      !IS_CSTEP_STERI_VIS type ZVCXI_FFSS_S_CSTEP_STERI_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
protected section.

  data R_PR_CSTEP_STERI type ref to ZCL_VCXI_FFSS_PR_CSTEP_STERI .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_CSTEP_STERI definition
class ZCL_VCXI_FFSS_UI_CSTEP_STERI implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_CSTEP_STERI_BIND'
      exporting
        IR_UI_CSTEP_STERI = ME
      importing
        ES_DYNP           = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_STERI.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_CSTEP->F_REFRESH_REQ.
      ME->R_TEXTEDIT_CSTEP->REFRESH_TEXTEDIT( ).
    endif.

  endmethod.
  method DO_UPDATE_CSTEP_STERI_VIS.

    check ME->R_PR_CSTEP_STERI is bound.

*** Sterilization Type
    if ME->S_CSTEP_STERI_VIS-TSTER ne IS_CSTEP_STERI_VIS-TSTER.
      ME->R_PR_CSTEP_STERI->SET_TSTER( exporting IF_TSTER = IS_CSTEP_STERI_VIS-TSTER
                                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      ME->R_TEXTEDIT_CSTEP->UPDATE_TEXT( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_STERI.

  endmethod.
  method INIT_VIS.

    clear ME->S_CSTEP_STERI_VIS.

    SUPER->INIT_VIS( ).
    move ME->S_CSTEP_VIS to ME->S_CSTEP_STERI_VIS-S_CSTEP_VIS.

    check ME->R_PR_CSTEP_STERI is bound.

*** Sterilization Type
    ME->R_PR_CSTEP_STERI->GET_TSTER( importing EF_TSTER = ME->S_CSTEP_STERI_VIS-TSTER ).

  endmethod.
