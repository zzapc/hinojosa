
class ZCL_VCXI_FRS_EA_INGR definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  abstract
  create public .

public section.

  interfaces /VCXI/IF_VKCR_EXPL_BOM .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_INGR type ref to ZCL_VCXI_FRS_PR_INGR .

  methods GET_BOM_CONSU
  abstract
    importing
      !IS_EXQTY type /VCXI/VKCR_S_EXQTY
      !IF_BMENG type BASMN
      !IF_BMEIN type BASME
    returning
      value(RS_CONSU) type ZVCXI_XCSP_S_CONSU
    raising
      /VCXI/CX_CKX .
  methods GET_EXQTY
    returning
      value(RS_EXQTY) type /VCXI/VKCR_S_EXQTY
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FRS_EA_INGR definition
class ZCL_VCXI_FRS_EA_INGR implementation.
  method /VCXI/IF_VKCR_EXPL_BOM~FILTER_CPBRG.

    data: LR_PR_VERS type ref to ZCL_VCXI_FRS_PR_VERS,
          LR_GATE    type ref to /VCXI/CL_VKSR_GATE.
    data: LT_GATE    type        /VCXI/VKSR_TT_GATE.

***--------------------------------------------------------------------------------------
*** Find Inline Provider Version for this Ingredient
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FRS_PR_VERS=>C_IPRVT_VERS
                                     IF_INUSE = ABAP_TRUE ).
    check LT_GATE is not initial.
    read table LT_GATE into LR_GATE index 1.
    check LR_GATE is bound.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_VERS.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_VERS.
    endtry.

    check LR_PR_VERS is bound.
*** Check if own version is the active one, otherwise clear table
    if LR_PR_VERS->IS_ACTIVE( ) eq ABAP_FALSE.
      free: CT_CPBRG.
    endif.

  endmethod.
  method /VCXI/IF_VKCR_EXPL_BOM~GET_BOM.

    data: LS_EXQTY type /VCXI/VKCR_S_EXQTY,
          LS_CONSU type ZVCXI_XCSP_S_CONSU.

    if IS_EXQTY is supplied.
      move IS_EXQTY         to LS_EXQTY.
    else.
      move ME->GET_EXQTY( ) to LS_EXQTY.
    endif.

*** Material Number
    ME->R_PR_INGR->GET_MATNR( importing EF_MATNR = RS_EXBOM-IDNRK ).
    move ABAP_TRUE                       to RS_EXBOM-IDNRK_X.

*** Item Category
    move 'L'                             to RS_EXBOM-POSTP.
    move ABAP_TRUE                       to RS_EXBOM-POSTP_X.

***--------------------------------------------------------------------------------------
*** BOM Consumption
    LS_CONSU = ME->GET_BOM_CONSU( IS_EXQTY = LS_EXQTY
                                  IF_BMENG = IF_BMENG
                                  IF_BMEIN = IF_BMEIN ).
    move LS_CONSU-CONSU                  to RS_EXBOM-MENGE.
    move ABAP_TRUE                       to RS_EXBOM-MENGE_X.
    move LS_CONSU-CONSU_UOM              to RS_EXBOM-MEINS.
    move ABAP_TRUE                       to RS_EXBOM-MEINS_X.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_INGR.
      catch CX_SY_MOVE_CAST_ERROR.
***     Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
method GET_EXQTY.

  data:  LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

  if LR_APPDATA is bound and
     LR_APPDATA->S_OPQTY-OPQTY is not initial.
    move LR_APPDATA->S_OPQTY-OPQTY     to RS_EXQTY-EXQTY.
    move LR_APPDATA->S_OPQTY-OPQTY_UOM to RS_EXQTY-EXQTY_UOM.
  endif.

endmethod.
