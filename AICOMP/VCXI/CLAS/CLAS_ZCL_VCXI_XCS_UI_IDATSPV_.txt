
class ZCL_VCXI_XCS_UI_IDATSPV definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_IDATSPV_VIS type ZVCXI_XCS_S_IDATSPV_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_IDATSPV_VIS
    importing
      !IS_IDATSPV_VIS type ZVCXI_XCS_S_IDATSPV_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_SET_IDAT type SYUCOMM value 'SET_IDAT'. "#EC NOTEXT
  data R_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC .
  data R_PR_IDATSPV type ref to ZCL_VCXI_XCS_PR_IDATSPV .
  constants C_UC_DISPLAY type SYUCOMM value 'DISPLAY_IDAT'. "#EC NOTEXT
  constants C_UC_REFRESH type SYUCOMM value 'REFRESH_IDAT'. "#EC NOTEXT

  methods HANDLE_UC_DISPLAY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_REFRESH
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SET_IDAT
    raising
      /VCXI/CX_CKX .
  type-pools ABAP .
  methods IS_IDAT_VALID
    returning
      value(RF_VALID) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCS_UI_IDATSPV definition
class ZCL_VCXI_XCS_UI_IDATSPV implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_XCS_UI_IDATSPV_BIND'
    exporting
      IR_UI_IDATSPV = ME
    importing
      ES_DYNP       = ME->S_DYNP.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_IDATSPV.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED   type        /VCXI/CKX_LOCKED,
         LF_INUSE    type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX   type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          case SCREEN-NAME.
            when '0100BTN_SET_IDAT'.
              if ME->IS_IDAT_VALID( ) eq ABAP_TRUE.
                move 1 to SCREEN-INPUT.
              else.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.

          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

  ME->INIT_VIS( ).

endmethod.
method DO_UPDATE_IDATSPV_VIS.

  data:  LF_GUID    type        /VCXI/CKX_GUID.

*** Hold Number only locally as Instance of Integration Data for SVC
  clear ME->R_IDAT_SVC.
  if IS_IDATSPV_VIS-NIDAT is not initial.
    move IS_IDATSPV_VIS-NIDAT to LF_GUID.
    ME->R_IDAT_SVC ?= ZCL_VCXI_XCI_IDAT_SVC=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
  endif.

endmethod.
method DO_USER_COMMAND.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  case IF_UCOMM.
    when C_UC_SET_IDAT.
      ME->HANDLE_UC_SET_IDAT( ).

    when C_UC_REFRESH.
      ME->HANDLE_UC_REFRESH( ).

    when C_UC_DISPLAY.
      ME->HANDLE_UC_DISPLAY( ).

  endcase.

endmethod.
method HANDLE_GATE_FREED.

*** Super
  SUPER->HANDLE_GATE_FREED( ).

*** Clear PR Reference
  free: ME->R_PR_IDATSPV.

endmethod.
method HANDLE_UC_DISPLAY.

  check ME->R_IDAT_SVC is bound.

*** Start UI
  ZCL_VCXI_XCIU_UI_IDAT_SVC=>START( IR_IDAT_SVC = ME->R_IDAT_SVC ).

endmethod.
method HANDLE_UC_REFRESH.

  data:  LF_GUID type /VCXI/CKX_GUID.


  check ME->R_IDAT_SVC is bound.

*** Get current GUID
  move ME->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_GUID.

*** Free current Instance
  ME->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCI_IDAT_SVC=>C_FCODE_FREE ).

*** Get new Instance
  ME->R_IDAT_SVC ?= ZCL_VCXI_XCI_IDAT_SVC=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).

endmethod.
method HANDLE_UC_SET_IDAT.

  check ME->R_IDAT_SVC is bound.

  ME->R_PR_IDATSPV->SET_IDAT( IR_IDAT_SVC = ME->R_IDAT_SVC ).

endmethod.
method INIT_VIS.

  free: ME->S_IDATSPV_VIS.

  if ME->R_IDAT_SVC is bound.
*** Get Information of Integration Data
    move ME->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to ME->S_IDATSPV_VIS-NIDAT.
  endif.

endmethod.
method IS_IDAT_VALID.

  data:  LT_CEALI    type        /VCXI/VKSR_TT_CEALI.
  data:  LR_APPDATA  type ref to /VCXI/CL_VKSR_APPDATA.

*** Does Integration Data exist
  check ME->R_IDAT_SVC                         is bound and
        ME->R_IDAT_SVC->R_CUPRFL               is bound and
        ME->R_IDAT_SVC->R_CUPRFL->R_CVC_CUPRFL is bound.

*** Get Application Data
  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).
  check LR_APPDATA is bound.

*** Compare Config.Profile
  check LR_APPDATA->S_CMPRK eq ME->R_IDAT_SVC->R_CUPRFL->R_CVC_CUPRFL->S_CMPRK.

*** Check Alias
  LT_CEALI = ME->R_GATE->GET_CEALI( ).
  read table LT_CEALI with key IEALI = ME->R_IDAT_SVC->F_IEALI
                      transporting no fields.
  check SY-SUBRC eq 0.

*** Is Valid
  move ABAP_TRUE to RF_VALID.

endmethod.
