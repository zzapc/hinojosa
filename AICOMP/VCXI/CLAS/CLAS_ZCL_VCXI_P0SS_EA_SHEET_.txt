
class ZCL_VCXI_P0SS_EA_SHEET definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_FOLDIM
    exporting
      value(ES_FOLLE) type ZVCXI_P0SS_S_FOLLE
      value(ES_FOLWI) type ZVCXI_P0SS_S_FOLWI
      value(ES_FOLHE) type ZVCXI_P0SS_S_FOLHE
    raising
      /VCXI/CX_CKX .
  methods GET_NOUP
    exporting
      value(EF_NOUPL) type ZVCXI_P0SS_NOUPL
      value(EF_NOUPW) type ZVCXI_P0SS_NOUPW
      value(EF_NOUPT) type ZVCXI_P0SS_NOUPT
    raising
      /VCXI/CX_CKX .
  methods GET_SHTG
    exporting
      value(ES_SHTGL) type ZVCXI_P0SS_S_SHTGL
      value(ES_SHTGW) type ZVCXI_P0SS_S_SHTGW
    raising
      /VCXI/CX_CKX .
  methods GET_SHTN
    exporting
      value(ES_SHTNL) type ZVCXI_P0SS_S_SHTNL
      value(ES_SHTNW) type ZVCXI_P0SS_S_SHTNW
    raising
      /VCXI/CX_CKX .
  methods GET_SHTP
    exporting
      value(ES_SHTPL) type ZVCXI_P0SS_S_SHTPL
      value(ES_SHTPW) type ZVCXI_P0SS_S_SHTPW
      value(ES_PCALI) type ZVCXI_P0SS_S_PCALI
    raising
      /VCXI/CX_CKX .
  methods GET_TOOL
    exporting
      value(EF_TDCUT) type ZVCXI_P0SS_TDCUT
      value(EF_DCUTT) type ZVCXI_P0SS_DCUTT
      value(ES_LTITO) type ZVCXI_P0S_S_LTITO
      value(EF_SHTDI) type ZVCXI_P0SS_SHTDI
    raising
      /VCXI/CX_CKX .
  methods GET_TRIM
    exporting
      value(ES_TRISL) type ZVCXI_P0SS_S_TRISL
      value(ES_TRISS) type ZVCXI_P0SS_S_TRISS
      value(ES_TRIPL) type ZVCXI_P0SS_S_TRIPL
      value(ES_TRIPS) type ZVCXI_P0SS_S_TRIPS
    raising
      /VCXI/CX_CKX .
  type-pools ABAP .
  methods SET_FOLDIM
    importing
      !IS_FOLLE type ZVCXI_P0SS_S_FOLLE
      !IS_FOLWI type ZVCXI_P0SS_S_FOLWI
      !IS_FOLHE type ZVCXI_P0SS_S_FOLHE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_RAISE_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
  methods SET_NOUP
    importing
      !IF_NOUPL type ZVCXI_P0SS_NOUPL optional
      !IF_NOUPW type ZVCXI_P0SS_NOUPW optional
      !IF_NOUPT type ZVCXI_P0SS_NOUPT optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_RAISE_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
  methods SET_SHTN
    importing
      !IS_SHTNL type ZVCXI_P0SS_S_SHTNL optional
      !IS_SHTNW type ZVCXI_P0SS_S_SHTNW optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_RAISE_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
  methods SET_SHTP
    importing
      !IS_SHTPL type ZVCXI_P0SS_S_SHTPL optional
      !IS_SHTPW type ZVCXI_P0SS_S_SHTPW optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_RAISE_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
  methods SET_TOOL
    importing
      !IF_TDCUT type ZVCXI_P0SS_TDCUT optional
      !IF_DCUTT type ZVCXI_P0SS_DCUTT
      !IS_LTITO type ZVCXI_P0S_S_LTITO optional
      !IF_SHTDI type ZVCXI_P0SS_SHTDI optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_FORCE_LOAD type ABAP_BOOL default ABAP_FALSE
      !IF_RAISE_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
  methods SET_TRIM
    importing
      !IS_TRISL type ZVCXI_P0SS_S_TRISL optional
      !IS_TRISS type ZVCXI_P0SS_S_TRISS optional
      !IS_TRIPL type ZVCXI_P0SS_S_TRIPL optional
      !IS_TRIPS type ZVCXI_P0SS_S_TRIPS optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_RAISE_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_SHEET type ref to ZCL_VCXI_P0SS_PR_SHEET .
private section.
endclass. "ZCL_VCXI_P0SS_EA_SHEET definition
class ZCL_VCXI_P0SS_EA_SHEET implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_SHEET.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

endmethod.
method GET_FOLDIM.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get Folding Length
  if ES_FOLLE is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~GET_FOLLE( importing ES_FOLLE = ES_FOLLE ).
  endif.

*** Get Folding Width
  if ES_FOLWI is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~GET_FOLWI( importing ES_FOLWI = ES_FOLWI ).
  endif.

*** Get Folding Height
  if ES_FOLHE is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~GET_FOLHE( importing ES_FOLHE = ES_FOLHE ).
  endif.

endmethod.
method GET_NOUP.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get Number of Ups Length
  if EF_NOUPL is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_NOUPL( ) to EF_NOUPL.
  endif.

*** Get Number of Ups Width
  if EF_NOUPW is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_NOUPW( ) to EF_NOUPW.
  endif.

***----------------------------------------------------------------------------
*** Get Number of Ups Total
  if EF_NOUPT is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_NOUPT( importing EF_NOUPT = EF_NOUPT ).
  endif.

endmethod.
method GET_SHTG.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get Gross Sheet Length
  if ES_SHTGL is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_SHTGL( ) to ES_SHTGL.
  endif.

*** Get Gross Sheet Width
  if ES_SHTGW is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_SHTGW( ) to ES_SHTGW.
  endif.

endmethod.
method GET_SHTN.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get Net Sheet Length
  if ES_SHTNL is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_SHTNL( importing ES_SHTNL = ES_SHTNL ).
  endif.

*** Get Net Sheet Width
  if ES_SHTNW is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_SHTNW( importing ES_SHTNW = ES_SHTNW ).
  endif.

endmethod.
method GET_SHTP.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get Product Sheet Length
  if ES_SHTPL is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~GET_SHTPL( ) to ES_SHTPL.
  endif.

*** Get Product Sheet Width
  if ES_SHTPW is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~GET_SHTPW( ) to ES_SHTPW.
  endif.

***----------------------------------------------------------------------------
*** Get Product Caliper
  if ES_PCALI is requested.
    move ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~GET_PCALI( ) to ES_PCALI.
  endif.

endmethod.
method GET_TOOL.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get Die Cut Type
  if EF_TDCUT is requested.
    move ME->R_PR_SHEET->GET_TDCUT( ) to EF_TDCUT.
  endif.

*** Get Die Cut Tool Number
  if EF_DCUTT is requested.
    move ME->R_PR_SHEET->GET_DCUTT( ) to EF_DCUTT.
  endif.

*** Set Tool Life Time
  if ES_LTITO is requested.
    move ME->R_PR_SHEET->GET_LTITO( ) to ES_LTITO.
  endif.

*** Get Sheet Direction
  if EF_SHTDI is requested.
    move ME->R_PR_SHEET->GET_SHTDI( ) to EF_SHTDI.
  endif.

endmethod.
method GET_TRIM.

  check ME->R_PR_SHEET is bound.

***----------------------------------------------------------------------------
*** Get LE/TR Trim Sales
  if ES_TRISL is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_TRISL( importing ES_TRISL = ES_TRISL ).
  endif.

*** Get Side Trim Sales
  if ES_TRISS is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_TRISS( importing ES_TRISS = ES_TRISS ).
  endif.

***----------------------------------------------------------------------------
*** Get LE/TR Trim Production
  if ES_TRIPL is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_TRIPL( importing ES_TRIPL = ES_TRIPL ).
  endif.

*** Get Side Trim Production
  if ES_TRIPS is requested.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~GET_TRIPS( importing ES_TRIPS = ES_TRIPS ).
  endif.

endmethod.
method SET_FOLDIM.

  check ME->R_PR_SHEET is bound and
        ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
*** Set Folding Length
  ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~SET_FOLLE( IS_FOLLE = IS_FOLLE
                                                   IF_SETBY = IF_SETBY ).

*** Set Folding Width
  ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~SET_FOLWI( IS_FOLWI = IS_FOLWI
                                                   IF_SETBY = IF_SETBY ).

*** Set Folding Height
  ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~SET_FOLHE( IS_FOLHE = IS_FOLHE
                                                   IF_SETBY = IF_SETBY ).

***----------------------------------------------------------------------------
*** Process Events
  if IF_RAISE_EVENTS eq ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).
  endif.

endmethod.
method SET_NOUP.

  check ME->R_PR_SHEET is bound and
        ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
*** Set Number of Ups Length
  if IF_NOUPL is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_NOUPL( IF_NOUPL = IF_NOUPL
                                                    IF_SETBY = IF_SETBY ).
  endif.

*** Set Number of Ups Width
  if IF_NOUPW is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_NOUPW( IF_NOUPW = IF_NOUPW
                                                    IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Set Number of Ups Total
  if IF_NOUPT is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_NOUPT( IF_NOUPT = IF_NOUPT
                                                    IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Process Events
  if IF_RAISE_EVENTS eq ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).
  endif.

endmethod.
method SET_SHTN.

  check ME->R_PR_SHEET is bound and
        ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

*** Net Sheet Sizes can only be set if it is nested
  check ME->R_PR_SHEET->GET_FNEST( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
*** Set Net Sheet Length
  if IS_SHTNL is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_SHTNL( IS_SHTNL = IS_SHTNL
                                                    IF_SETBY = IF_SETBY ).
  endif.

*** Set Net Sheet Width
  if IS_SHTNW is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_SHTNW( IS_SHTNW = IS_SHTNW
                                                    IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Process Events
  if IF_RAISE_EVENTS eq ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).
  endif.

endmethod.
method SET_SHTP.

  check ME->R_PR_SHEET is bound and
        ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

*** Product Sheet Dimension can only be set if it is a Custom Design
  check ME->R_PR_SHEET->CHECK_FCUSD( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
*** Set Product Sheet Length
  if IS_SHTPL is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~SET_SHTPL( IS_SHTPL = IS_SHTPL
                                                     IF_SETBY = IF_SETBY ).
  endif.

*** Set Product Sheet Width
  if IS_SHTPW is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_PRODDIM~SET_SHTPW( IS_SHTPW = IS_SHTPW
                                                     IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Process Events
  if IF_RAISE_EVENTS eq ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).
  endif.

endmethod.
method SET_TOOL.

  check ME->R_PR_SHEET is bound and
        ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
*** Set Die Cut Type
  if IF_TDCUT is supplied.
    ME->R_PR_SHEET->SET_TDCUT( IF_TDCUT = IF_TDCUT
                               IF_SETBY = IF_SETBY ).
  endif.

*** Set Die Cut Tool Number
  ME->R_PR_SHEET->SET_DCUTT( IF_DCUTT = IF_DCUTT
                             IF_SETBY = IF_SETBY ).
  if IF_FORCE_LOAD eq ABAP_TRUE.
    ME->R_GATE->SET_EVENT( IF_IEVNT = ZCL_VCXI_P0SS_PR_SHEET=>C_IEVNT_O_DCUTT_CHANGED ).
  endif.

*** Set Tool Life Time
  if IS_LTITO is supplied.
    ME->R_PR_SHEET->SET_LTITO( IS_LTITO = IS_LTITO
                               IF_SETBY = IF_SETBY ).
  endif.

*** Set Sheet Direction
  if IF_SHTDI is supplied.
    ME->R_PR_SHEET->SET_SHTDI( IF_SHTDI = IF_SHTDI
                               IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Process Events
  if IF_RAISE_EVENTS eq ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).
  endif.

endmethod.
method SET_TRIM.

  check ME->R_PR_SHEET is bound and
        ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
*** Set LE/TR Trim Sales
  if IS_TRISL is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_TRISL( IS_TRISL = IS_TRISL
                                                    IF_SETBY = IF_SETBY ).
  endif.

*** Set Side Trim Sales
  if IS_TRISS is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_TRISS( IS_TRISS = IS_TRISS
                                                    IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Set LE/TR Trim Production
  if IS_TRIPL is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_TRIPL( IS_TRIPL = IS_TRIPL
                                                    IF_SETBY = IF_SETBY ).
  endif.

*** Set Side Trim Production
  if IS_TRIPS is supplied.
    ME->R_PR_SHEET->ZIF_VCXI_P0SS_SHTDIM~SET_TRIPS( IS_TRIPS = IS_TRIPS
                                                    IF_SETBY = IF_SETBY ).
  endif.

***----------------------------------------------------------------------------
*** Process Events
  if IF_RAISE_EVENTS eq ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).
  endif.

endmethod.
