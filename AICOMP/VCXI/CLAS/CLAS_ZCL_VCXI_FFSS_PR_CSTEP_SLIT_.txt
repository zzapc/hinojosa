
class ZCL_VCXI_FFSS_PR_CSTEP_SLIT definition
  public
  inheriting from ZCL_VCXI_FFSS_PR_CSTEP
  create public .

public section.

  methods GET_NOOUT
    exporting
      !EF_NOOUT type ZVCXI_XCS_NOOUT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_TRWID
    exporting
      !ES_TRWID type ZVCXI_F0S_S_TRWID
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TRWID
    importing
      !IS_TRWID type ZVCXI_F0S_S_TRWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods IS_FTRAL
    returning
      value(RF_FTRAL) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_NEXT~GET_TREQW
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_PREV~GET_FIBPX
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID
    redefinition .
  methods ZIF_VCXI_FFSS_COMM_PREV~GET_NOUPS
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_PARID_TRWID type /VCXI/VKS_PARID value 'ZVCXI_F0_TRWID' ##NO_TEXT.
  constants C_PARID_NOOUT type /VCXI/VKS_PARID value 'ZVCXI_XC_NOOUT' ##NO_TEXT.
  constants C_IEVNT_O_TRWID_CHANGED type /VCXI/VKSC_IEVNT value 'TRWID_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOOUT_CHANGED type /VCXI/VKSC_IEVNT value 'NOOUT_CHANGED' ##NO_TEXT.

  methods CHECK_FSLAL
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_NOOUT
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSS_PR_CSTEP_SLIT definition
class ZCL_VCXI_FFSS_PR_CSTEP_SLIT implementation.
  method CHECK_FSLAL.
*** 0 Slitting allowed.
*** 1 Slitting is not allowed.

    data: LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

***--------------------------------------------------------------------------------------
*** Get Film Forward Property
    ME->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).
    check LR_BL_FIFPROP is bound.

*** Get Slitting allowed
    if LR_BL_FIFPROP->IS_FSLAL( ) eq ABAP_TRUE.
      move 0 to RF_RETURN.
    else.
      move 1 to RF_RETURN.
    endif.

  endmethod.
  method CHECK_NOOUT.

*** 0 Number of Outs is maintained.
*** 1 Number of Outs is not maintained.

    data: LF_NOOUT type ZVCXI_XCS_NOOUT.

    move 0 to RF_RETURN.

    ME->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).

    if LF_NOOUT is initial.
      move 1 to RF_RETURN.
    endif.

  endmethod.
  method GET_NOOUT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).
    move LS_PARAM-ATFLV to EF_NOOUT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

***--------------------------------------------------------------------------------------
*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check Number of Outs
    if ME->CHECK_NOOUT( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

***--------------------------------------------------------------------------------------
*** Check Slitting allowed
    if ME->CHECK_FSLAL( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

  endmethod.
  method GET_STATUS_MSG.

***--------------------------------------------------------------------------------------
*** Super Status Messages
    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***--------------------------------------------------------------------------------------
*** Check Number of Outs
    if ME->CHECK_NOOUT( ) eq 0.
***   Number of Outs is maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '103' ).
    else.
***   Number of Outs is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '104' ).
    endif.

***--------------------------------------------------------------------------------------
*** Check Slitting allowed
    if ME->CHECK_FSLAL( ) eq 0.
***   Slitting is allowed.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '376' ).
    else.
***   Slitting is not allowed.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '377' ).
    endif.

  endmethod.
  method GET_TRWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TRWID ).
    move LS_PARAM-ATFLV to ES_TRWID-TRWID.
    move LS_PARAM-UNIT  to ES_TRWID-TRWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method IS_FTRAL.

    data: LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

***--------------------------------------------------------------------------------------
*** Get Film Forward Property
    ME->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).
    check LR_BL_FIFPROP is bound.

*** Get Trim Allowed
    RF_FTRAL = LR_BL_FIFPROP->IS_FTRAL( ).

  endmethod.
  method SET_NOOUT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).

    move IF_NOOUT  to LS_PARAM-ATFLV.
    move IF_SETBY  to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
*** Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOOUT_CHANGED ).
    endif.

  endmethod.
  method SET_TRWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TRWID ).

    move IS_TRWID-TRWID     to LS_PARAM-ATFLV.
    move IS_TRWID-TRWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
*** Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TRWID_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX.

    data: LF_NOOUT  type ZVCXI_XCS_NOOUT.
    data: LS_TRWID  type ZVCXI_F0S_S_TRWID.
    data: LT_FIRNG  type ZVCXI_FFSS_TT_FIRNG.
    field-symbols: <S_FIRNG>  type ZVCXI_FFSS_S_FIRNG.

***--------------------------------------------------------------------------------------
*** Get SUPER Film Forward Property XML (Outbound)
    SUPER->ZIF_VCXI_FFSS_COMM_NEXT~GET_FIFPX( importing EF_SETBY      = EF_SETBY
                                                        ER_BL_FIFPROP = ER_BL_FIFPROP ).



***--------------------------------------------------------------------------------------
*** Get Trim and Number of Outs
    ME->GET_TRWID( importing ES_TRWID = LS_TRWID ).
    ME->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).

    if LF_NOOUT ne 0.
      move ER_BL_FIFPROP->T_FIRNG to LT_FIRNG.
      loop at LT_FIRNG assigning <S_FIRNG>.
***     Reduce Film Width Minimum by Trim and divide by Number of Outs
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = <S_FIRNG>-FIWMI
                                                            IF_CALCV_UOM_1 = <S_FIRNG>-FIWMI_UOM
                                                            IF_CALCV_2     = LS_TRWID-TRWID
                                                            IF_CALCV_UOM_2 = LS_TRWID-TRWID_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                            IF_UOM         = <S_FIRNG>-FIWMI_UOM
                                                  importing EF_CALCV       = <S_FIRNG>-FIWMI
                                                            EF_CALCV_UOM   = <S_FIRNG>-FIWMI_UOM ).
        divide <S_FIRNG>-FIWMI by LF_NOOUT.


***     Reduce Film Width Maximum by Trim and divide by Number of Outs
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = <S_FIRNG>-FIWMA
                                                            IF_CALCV_UOM_1 = <S_FIRNG>-FIWMA_UOM
                                                            IF_CALCV_2     = LS_TRWID-TRWID
                                                            IF_CALCV_UOM_2 = LS_TRWID-TRWID_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                            IF_UOM         = <S_FIRNG>-FIWMA_UOM
                                                  importing EF_CALCV       = <S_FIRNG>-FIWMA
                                                            EF_CALCV_UOM   = <S_FIRNG>-FIWMA_UOM ).
        divide <S_FIRNG>-FIWMA by LF_NOOUT.

***     Multiply Minimum Lot Size by Number of Outs
        multiply <S_FIRNG>-LOTMI by LF_NOOUT.

      endloop.
    else.
      clear LT_FIRNG.
    endif.
    ER_BL_FIFPROP->SET_FIRNG( IT_FIRNG = LT_FIRNG ).

***--------------------------------------------------------------------------------------
*** Get new Film Forward Property XML
    if EF_FIFPX is requested.
      EF_FIFPX = ER_BL_FIFPROP->GET_FIFPX( ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSS_COMM_NEXT~GET_TREQW.

    data: LF_NOOUT        type    ZVCXI_XCS_NOOUT.
    data: LS_TRWID        type    ZVCXI_F0S_S_TRWID.

    SUPER->ZIF_VCXI_FFSS_COMM_NEXT~GET_TREQW( importing ES_TREQW = ES_TREQW
                                                        EF_SETBY = EF_SETBY ).

***------------------------------------------------------------------------------------------------
*** Get Number of Outs
    ME->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).

*** Get Trim on Width
    ME->GET_TRWID( importing ES_TRWID = LS_TRWID ).

***------------------------------------------------------------------------------------------------
*** Subtract Trim
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = ES_TREQW-TREQW
                                                        IF_CALCV_UOM_1 = ES_TREQW-TREQW_UOM
                                                        IF_CALCV_2     = LS_TRWID-TRWID
                                                        IF_CALCV_UOM_2 = LS_TRWID-TRWID_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                              importing EF_CALCV       = ES_TREQW-TREQW
                                                        EF_CALCV_UOM   = ES_TREQW-TREQW_UOM ).

*** Not less than 0
    if  ES_TREQW-TREQW lt 0.
      move 0 to ES_TREQW-TREQW.
    endif.

    if LF_NOOUT ne 0.
      ES_TREQW-TREQW = ES_TREQW-TREQW / LF_NOOUT.
    endif.

  endmethod.
  method ZIF_VCXI_FFSS_COMM_PREV~GET_FIBPX.

    data:          LF_NOOUT   type ZVCXI_XCS_NOOUT.
    data:          LT_CSPLIT  type ZVCXI_FFSS_TT_CSPLIT.
    field-symbols: <S_CSPLIT> type ZVCXI_FFSS_S_CSPLIT.

    SUPER->ZIF_VCXI_FFSS_COMM_PREV~GET_FIBPX( importing EF_SETBY      = EF_SETBY
                                                        ER_BL_FIBPROP = ER_BL_FIBPROP ).

    ME->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).

*** Increase Component Ratio of Cost Split Distribution based on Number of Outs
    move ER_BL_FIBPROP->T_CSPLIT to LT_CSPLIT.
    loop at LT_CSPLIT assigning <S_CSPLIT>.
      multiply <S_CSPLIT>-COMPR by LF_NOOUT.
    endloop.
    ER_BL_FIBPROP->SET_CSPLIT( IT_CSPLIT = LT_CSPLIT ).

*** Return XML
    if EF_FIBPX is requested.
      move ER_BL_FIBPROP->GET_FIBPX( ) to EF_FIBPX.
    endif.

  endmethod.
  method ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID.

    data: LF_NOOUT        type    ZVCXI_XCS_NOOUT.
    data: LS_TRWID        type    ZVCXI_F0S_S_TRWID.

    SUPER->ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID( importing ES_FIWID = ES_FIWID
                                                        EF_SETBY = EF_SETBY ).

***------------------------------------------------------------------------------------------------
*** Get Number of Outs
    ME->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).

*** Get Trim on Width
    ME->GET_TRWID( importing ES_TRWID = LS_TRWID ).

***------------------------------------------------------------------------------------------------
*** Multiply Film Width(Outbound) with Number of Outs
    ES_FIWID-FIWID = ES_FIWID-FIWID * LF_NOOUT.

*** Add Trim
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = ES_FIWID-FIWID
                                                        IF_CALCV_UOM_1 = ES_FIWID-FIWID_UOM
                                                        IF_CALCV_2     = LS_TRWID-TRWID
                                                        IF_CALCV_UOM_2 = LS_TRWID-TRWID_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                              importing EF_CALCV       = ES_FIWID-FIWID
                                                        EF_CALCV_UOM   = ES_FIWID-FIWID_UOM ).

  endmethod.
  method ZIF_VCXI_FFSS_COMM_PREV~GET_NOUPS.

    data: LF_NOOUT        type    ZVCXI_XCS_NOOUT.

    SUPER->ZIF_VCXI_FFSS_COMM_PREV~GET_NOUPS( importing EF_NOUPS = EF_NOUPS
                                                        EF_SETBY = EF_SETBY ).

***------------------------------------------------------------------------------------------------
*** Get Number of Outs
    ME->GET_NOOUT( importing EF_NOOUT = LF_NOOUT ).

    EF_NOUPS = EF_NOUPS * LF_NOOUT.

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE.


*** Get Attribute Data
    ME->GET_TRWID( importing ES_TRWID = data(LS_TRWID) ).                      "Trim on Width
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE     = LS_TRWID-TRWID
                                          IF_UOM       = LS_TRWID-TRWID_UOM
                                changing  CT_ATTR      = LT_ATTR ).
    ME->GET_NOOUT( importing EF_NOOUT = data(LF_NOOUT) ).
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE     = LF_NOOUT              "No of Outs
                                          IF_ALPHA_OUT = ABAP_TRUE
                                changing  CT_ATTR      = LT_ATTR ).


*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR      = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON       = 'sap-icon://scissors'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY
                                                    IT_ATTR       = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
