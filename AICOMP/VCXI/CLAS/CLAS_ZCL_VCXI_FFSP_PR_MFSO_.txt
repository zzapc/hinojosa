
class ZCL_VCXI_FFSP_PR_MFSO definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MFSO
  create public .

public section.

  interfaces ZIF_VCXI_FFSP_FIDIM .
  interfaces ZIF_VCXI_FFSP_MFO .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_RELEN
    importing
      !IS_RELEN type ZVCXI_FFS_S_RELEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_RLETA
    importing
      !IS_RLETA type ZVCXI_PXS_S_RLETA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FITIN
    importing
      !IS_FITIN type ZVCXI_FFS_S_FITIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FITEX
    importing
      !IS_FITEX type ZVCXI_FFS_S_FITEX
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FIWID
    importing
      !IS_FIWID type ZVCXI_F0S_S_FIWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_F0S_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SURWT
    importing
      !IS_SURWT type ZVCXI_F0S_S_SURWT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
protected section.

  methods CALC_MFRAT
    redefinition .
  methods CONV_TO_CONSU
    redefinition .
private section.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_FFSP_PR_MFSO definition
class ZCL_VCXI_FFSP_PR_MFSO implementation.
method CALC_MFRAT.

  data: LF_NOUPS type        ZVCXI_F0S_NOUPS,
        LF_ICSPA type        ZVCXI_XCSP_ICSPA,
        LF_COMPF type        ZVCXI_XCSP_COMPF.
  data: LT_GATE_MFO   type        /VCXI/VKSR_TT_GATE.
  data: LR_PR_MFSI_L type ref to ZCL_VCXI_FFSP_PR_MFSI_L,
        LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
        LR_MFSO      type ref to ZIF_VCXI_XCSP_MFSO.

*** Initialize Material Flow Manager if neede
  if ME->R_PR_MFMGR is not bound.
    ME->HANDLE_INIT_MFMGR( ).
  endif.
  check ME->R_PR_MFMGR is bound.

***----------------------------------------------------------------------------
*** Super
  RF_MFRAT = SUPER->CALC_MFRAT( IR_MFSI  = IR_MFSI ).

*** Cast to MF Class
  try.
      move IR_MFSI ?to LR_PR_MFSI_L.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.
  check LR_PR_MFSI_L is bound.

***----------------------------------------------------------------------------
*** Consider Ups for SFGs
  if LR_PR_MFSI_L->ZIF_VCXI_XCSP_MFSI~GET_NEXTL( ) eq ABAP_TRUE.
    ME->ZIF_VCXI_FFSP_FIDIM~GET_NOUPS( importing EF_NOUPS = LF_NOUPS ).

*** Get all MFSOs and delete those are disabled by Cost Split
    move ME->R_PR_MFMGR->ZIF_VCXI_XCSP_MFMGR~GET_MFO( ) to LT_GATE_MFO.
    loop at LT_GATE_MFO into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_MFSO.
      if LR_MFSO->IS_ACTIVE_BY_CSPLIT( ) eq 2.
        delete LT_GATE_MFO.
      endif.
    endloop.

*** Adjust by Cost Split Ratio
    if LINES( LT_GATE_MFO ) eq 1.
      LR_PR_MFSI_L->GET_CSPLIT( importing EF_ICSPA = LF_ICSPA
                                          EF_COMPF = LF_COMPF ).
      if LF_ICSPA is not initial.
        LF_NOUPS = LF_NOUPS * LF_COMPF.
      endif.
    endif.

    RF_MFRAT = LF_NOUPS.
  endif.

endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( exporting IR_GATE = IR_GATE ).

*** Set Dimension-Depending Parameter IDs
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method CONV_TO_CONSU.

    data: LF_NOUPS  type ZVCXI_F0S_NOUPS.
    data: LS_CALCV type ZVCXI_XCS_S_CALCV.


    SUPER->CONV_TO_CONSU( exporting IR_MFSI  = IR_MFSI
                          changing  CS_CONSU = CS_CONSU ).

***--------------------------------------------------------------------------------------
    if IR_MFSI is bound.
      LS_CALCV = value #( CALCV     = CS_CONSU-CONSU
                          CALCV_UOM = CS_CONSU-CONSU_UOM ).

      case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
        when  ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
          case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = LS_CALCV-CALCV_UOM ).
            when 'AAAADL'.  "PC
***           PC to Length
              LS_CALCV = ZCL_VCXI_FFSP_SERVICE=>CONV_P_TO_L( IS_CALCV = LS_CALCV
                                                             IS_FIDIM = value #( S_RLETA = ME->ZIF_VCXI_FFSP_FIDIM~GET_RLETA( ) ) ).
          endcase.

        when 'AAAADL'.  "PC
          case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = LS_CALCV-CALCV_UOM ).
            when  ZCL_VCXI_P5SP_SERVICE=>F_DIMID_LENGTH.
***           Length to PC
              LS_CALCV = ZCL_VCXI_FFSP_SERVICE=>CONV_L_TO_P( IS_CALCV = LS_CALCV
                                                             IS_FIDIM = value #( S_RLETA = ME->ZIF_VCXI_FFSP_FIDIM~GET_RLETA( ) ) ).
          endcase.
      endcase.

      CS_CONSU = value #( CONSU     = LS_CALCV-CALCV
                          CONSU_UOM = LS_CALCV-CALCV_UOM ).
    endif.

***--------------------------------------------------------------------------------------
*** Last MFSO if MFSI is Organizer
    if ME->F_MFSI_ORGLC eq ABAP_TRUE.
      ME->ZIF_VCXI_FFSP_FIDIM~GET_NOUPS( importing EF_NOUPS = LF_NOUPS ).

      check LF_NOUPS ne 0.
      CS_CONSU-CONSU = CS_CONSU-CONSU / LF_NOUPS.
    endif.

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.


    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

*** Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

  endmethod.
  method SET_FITEX.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITEX ).

    move IS_FITEX-FITEX                      to LS_PARAM-ATFLV.
    move IS_FITEX-FITEX_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_FITIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITIN ).

    move IS_FITIN-FITIN                      to LS_PARAM-ATFLV.
    move IS_FITIN-FITIN_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_FIWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FIWID ).

    move IS_FIWID-FIWID                      to LS_PARAM-ATFLV.
    move IS_FIWID-FIWID_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOUPS ).

    move IF_NOUPS                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_RELEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RELEN ).

    move IS_RELEN-RELEN                      to LS_PARAM-ATFLV.
    move IS_RELEN-RELEN_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_RLETA.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RLETA ).

    move IS_RLETA-RLETA                      to LS_PARAM-ATFLV.
    move IS_RLETA-RLETA_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method SET_SURWT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_SURWT ).

    move IS_SURWT-SURWT                      to LS_PARAM-ATFLV.
    move IS_SURWT-SURWT_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_FITEX.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITEX ).
    move LS_PARAM-ATFLV to ES_FITEX-FITEX.
    move LS_PARAM-UNIT  to ES_FITEX-FITEX_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_FITIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FITIN ).
    move LS_PARAM-ATFLV to ES_FITIN-FITIN.
    move LS_PARAM-UNIT  to ES_FITIN-FITIN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_FIWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_FIWID ).
    move LS_PARAM-ATFLV to ES_FIWID-FIWID.
    move LS_PARAM-UNIT  to ES_FIWID-FIWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_NOOUT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOOUT ).
    move LS_PARAM-ATFLV to EF_NOOUT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_NOUPS ).
    move LS_PARAM-ATFLV to EF_NOUPS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_RELEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RELEN ).
    move LS_PARAM-ATFLV to ES_RELEN-RELEN.
    move LS_PARAM-UNIT  to ES_RELEN-RELEN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_RLETA.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_RLETA ).
    RS_RLETA-RLETA     = LS_PARAM-ATFLV.
    RS_RLETA-RLETA_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_FIDIM~GET_SURWT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FFSP_FIDIM~C_PARID_SURWT ).
    move LS_PARAM-ATFLV to ES_SURWT-SURWT.
    move LS_PARAM-UNIT  to ES_SURWT-SURWT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FFSP_MFO~SET_FIDIM.

    ME->SET_FIWID( IS_FIWID = IS_FIDIM-S_FIWID ).
    ME->SET_FITEX( IS_FITEX = IS_FIDIM-S_FITEX ).
    ME->SET_FITIN( IS_FITIN = IS_FIDIM-S_FITIN ).
    ME->SET_SURWT( IS_SURWT = IS_FIDIM-S_SURWT ).
    ME->SET_RLETA( IS_RLETA = IS_FIDIM-S_RLETA ).
    ME->SET_RELEN( IS_RELEN = IS_FIDIM-S_RELEN ).
    ME->SET_NOUPS( IF_NOUPS = IS_FIDIM-NOUPS ).
    ME->ZIF_VCXI_XCSP_MFO~SET_NOOUT( IF_NOOUT = IS_FIDIM-NOOUT ).

  endmethod.
