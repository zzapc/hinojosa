
class ZCL_VCXI_F0SS_UI_SPEC definition
  public
  inheriting from ZCL_VCXI_F0S_UI_TAB
  create public .

public section.

  data S_SPEC_VIS type ZVCXI_F0SS_S_SPEC_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_F0S_TABPT default '0100S_SPEC_T-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_SPEC_VIS
    importing
      !IS_SPEC_VIS type ZVCXI_F0SS_S_SPEC_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_PBO
    redefinition .
protected section.

  data R_PR_SPEC type ref to ZCL_VCXI_F0SS_PR_SPEC .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_PRVDR_TAB
    redefinition .
  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_F0SS_UI_SPEC definition
class ZCL_VCXI_F0SS_UI_SPEC implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

    call function 'ZVCXI_F0SS_UI_SPEC_BIND'
      exporting
        IR_UI_SPEC    = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_SPEC.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_SPEC_VIS.

    check ME->R_PR_SPEC is bound.

***--------------------------------------------------------------------------------------
*** Set Plant
    if ME->S_SPEC_VIS-WERKS ne IS_SPEC_VIS-WERKS.
      ME->R_PR_SPEC->SET_WERKS( IF_WERKS = IS_SPEC_VIS-WERKS
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method GET_PRVDR_TAB.

    data: LS_PRVDR_DEF type         /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_GATE      type         /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type         /VCXI/VKSR_TT_PRVDR_DEF.


***--------------------------------------------------------------------------------------
*** Get all Children (no matter if in use or not)
    LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).

    loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT ).

      append lines of LT_GATE to RT_PRVDR.
    endloop.

*** Sort before returning
    ME->R_GATE->SORT_GATE( changing CT_GATE = RT_PRVDR ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_SPEC.

  endmethod.
  method INIT_VIS.

    free: ME->S_SPEC_VIS.
    check ME->R_PR_SPEC is bound.

***--------------------------------------------------------------------------------------
*** Plant
    ME->R_PR_SPEC->GET_WERKS( importing EF_WERKS       = ME->S_SPEC_VIS-WERKS
                                        EF_WERKS_DESCR = ME->S_SPEC_VIS-WERKS_DESCR ).

  endmethod.
