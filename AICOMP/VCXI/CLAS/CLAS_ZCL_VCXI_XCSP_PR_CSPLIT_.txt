
class ZCL_VCXI_XCSP_PR_CSPLIT definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IEVNT_O_QFACT_CHANGED type /VCXI/VKSC_IEVNT value 'QFACT_CHANGED' ##NO_TEXT.
  constants C_IPRVT_XCS_CSPLIT type /VCXI/VKSC_IPRVT value 'ZVCXI_XCSP_CSPLIT' ##NO_TEXT.
  constants C_PARID_COMPR type /VCXI/VKS_PARID value 'ZVCXI_XC_COMPR' ##NO_TEXT.
  constants C_PARID_DCSPL type /VCXI/VKS_PARID value 'ZVCXI_XC_DCSPL' ##NO_TEXT.
  constants C_PARID_QFACT type /VCXI/VKS_PARID value 'ZVCXI_XC_QFACT' ##NO_TEXT.
  constants C_IEVNT_O_COMPR_CHANGED type /VCXI/VKSC_IEVNT value 'COMPR_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_DCSPL_CHANGED type /VCXI/VKSC_IEVNT value 'DCSPL_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_ICSPL_CHANGED type /VCXI/VKSC_IEVNT value 'ICSPL_CHANGED' ##NO_TEXT.

  methods GET_COMPR
    returning
      value(RF_COMPR) type ZVCXI_XCSP_COMPR
    raising
      /VCXI/CX_CKX .
  methods GET_DCSPL
    returning
      value(RS_DCSPL) type ZVCXI_XCSP_S_DCSPL
    raising
      /VCXI/CX_CKX .
  methods GET_QFACT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_QFACT) type ZVCXI_XCS_QFACT
    raising
      /VCXI/CX_CKX .
  methods GET_ICSPL
    returning
      value(RF_ICSPL) type ZVCXI_XCSP_ICSPL
    raising
      /VCXI/CX_CKX .
  methods SET_COMPR
    importing
      !IF_COMPR type ZVCXI_XCSP_COMPR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_QFACT
    importing
      !IF_QFACT type ZVCXI_XCS_QFACT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_DCSPL
    importing
      !IS_DCSPL type ZVCXI_XCSP_S_DCSPL
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_ICSPL
    importing
      !IF_ICSPL type ZVCXI_XCSP_ICSPL
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
protected section.
private section.
endclass. "ZCL_VCXI_XCSP_PR_CSPLIT definition
class ZCL_VCXI_XCSP_PR_CSPLIT implementation.
method GET_COMPR.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COMPR ).
  move LS_PARAM-ATFLV to RF_COMPR.

endmethod.
method GET_DCSPL.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_DCSPL ).
  move LS_PARAM-ATFLV to RS_DCSPL-DCSPL.
  move LS_PARAM-UNIT  to RS_DCSPL-DCSPL_UOM.

endmethod.
method GET_ICSPL.

  data:  LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

  LS_LEOKY = ME->R_GATE->GET_LEOKY( ).

  move LS_LEOKY-LEOKY to RF_ICSPL.

endmethod.
  method GET_QFACT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_QFACT ).
    RF_QFACT = LS_PARAM-ATFLV.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
method SET_COMPR.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COMPR ).

  move IF_COMPR           to LS_PARAM-ATFLV.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_COMPR_CHANGED ).
  endif.

endmethod.
method SET_DCSPL.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_DCSPL ).

  move IS_DCSPL-DCSPL     to LS_PARAM-ATFLV.
  move IS_DCSPL-DCSPL_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_DCSPL_CHANGED ).
  endif.

endmethod.
method SET_ICSPL.

  data:  LF_CHANGED  type ABAP_BOOL.
  data:  LS_LEOKY    type /VCXI/VKSR_S_LEOKY.

  move IF_ICSPL to LS_LEOKY-LEOKY.
  move IF_SETBY to LS_LEOKY-SETBY.

  LF_CHANGED = ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_ICSPL_CHANGED ).
  endif.

endmethod.
  method SET_QFACT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_QFACT ).

    LS_PARAM-ATFLV = IF_QFACT.
    LS_PARAM-SETBY = IF_SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_QFACT_CHANGED ).
    endif.

  endmethod.
