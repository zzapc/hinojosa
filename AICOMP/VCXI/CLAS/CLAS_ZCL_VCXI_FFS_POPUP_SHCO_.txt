
class ZCL_VCXI_FFS_POPUP_SHCO definition
  public
  create protected .

public section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_OKAY type SYUCOMM value 'OKAY' ##NO_TEXT.
  data F_REFRESH_REQ type ABAP_BOOL .
  data S_POPUP_SHCO_VIS type ZVCXI_FFS_S_POPUP_SHCO_VIS read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IR_SHCO type ref to ZIF_VCXI_FFS_SHCO
      !IF_CONTAINER_NAME type SCRFNAME default '0100CC_USAGE_LIST'
      !IF_TABNAME type TABNAME default 'ZVCXI_FFS_S_SHCO_GRID'
      !IF_LOCKED type /VCXI/CKX_LOCKED default ABAP_FALSE
    exporting
      !EF_ICORE type ZVCXI_FFS_ICORE
    raising
      /VCXI/CX_CKX .
protected section.

  data F_CONTAINER_NAME type SCRFNAME .
  data F_ICORE type ZVCXI_FFS_ICORE .
  data F_LOCKED type /VCXI/CKX_LOCKED .
  data F_TABNAME type TABNAME .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_DATA type ref to DATA .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data R_SHCO type ref to ZIF_VCXI_FFS_SHCO .
  data T_FIELDCAT type LVC_T_FCAT .
  data F_STYLE_DISABLED type LVC_STYLE .
  data F_STYLE_ENABLED type LVC_STYLE .

  methods CHECK_CHANGED_DATA
    returning
      value(RF_CHANGED) type FLAG
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE
    importing
      !IF_FIELDNAME type FIELDNAME
      !IF_STYLE type LVC_STYLE
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_SHCO type ref to ZIF_VCXI_FFS_SHCO
      !IF_TABNAME type TABNAME optional
      !IF_LOCKED type /VCXI/CKX_LOCKED default ABAP_FALSE
    raising
      /VCXI/CX_CKX .
  methods DISPLAY_ALV
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods GET_GRID_DATA
    importing
      !IR_DATA type ref to DATA
    raising
      /VCXI/CX_CKX .
  methods GET_FIELDCAT
    returning
      value(RT_FCAT) type LVC_T_FCAT
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_BY_SHCO
    importing
      !IS_SHCO type ZVCXI_FFS_S_SHCO
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_LAYOUT
    returning
      value(RS_LAYOUT) type LVC_S_LAYO
    raising
      /VCXI/CX_CKX .
  methods GET_TOOLBAR
    returning
      value(RT_TOOLBAR) type UI_FUNCTIONS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW
      !E_COLUMN
      !ES_ROW_NO .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_STYLE
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CHANGED_DATA
    for event DATA_CHANGED of CL_GUI_ALV_GRID
    importing
      !ER_DATA_CHANGED
      !E_ONF4
      !E_ONF4_BEFORE
      !E_ONF4_AFTER
      !E_UCOMM .
private section.
endclass. "ZCL_VCXI_FFS_POPUP_SHCO definition
class ZCL_VCXI_FFS_POPUP_SHCO implementation.
  method CHANGE_STYLE.

    data: LS_STYL              type          LVC_S_STYL.
    data: LT_STYL              type table of LVC_S_STYL.

***--------------------------------------------------------------------------------------------
*** Set Style Details
*** Get Style Table
    move CT_STYL to LT_STYL.
    clear CT_STYL.

*** Set Fieldname and Style
    clear LS_STYL.
    LS_STYL-FIELDNAME   = IF_FIELDNAME.
    LS_STYL-STYLE       = IF_STYLE.
    append LS_STYL      to LT_STYL.

*** Add Style Table
    sort LT_STYL.
    CT_STYL[] = LT_STYL[].

  endmethod.
  method CHANGE_STYLE_BY_SHCO.

***--------------------------------------------------------------------------------------
*** Set Rolls/Core
    if IS_SHCO-RHSCO eq ZIF_VCXI_FFSR_RHNDL=>C_RHSRC_SPEC.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'ROPCO'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'ROPCO'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

    endif.

  endmethod.
  method CHECK_CHANGED_DATA.

    check ME->R_GRID is bound.
*** Check if something changed in ALV
    ME->R_GRID->CHECK_CHANGED_DATA( importing E_VALID = RF_CHANGED ).

  endmethod.
  method CONSTRUCTOR.

    move: IF_CONTAINER_NAME to ME->F_CONTAINER_NAME,
          IF_TABNAME        to ME->F_TABNAME,
          IF_LOCKED         to ME->F_LOCKED,
          IR_SHCO           to ME->R_SHCO.

*** Create Data Reference to Grid Data
    create data ME->R_DATA type table of (ME->F_TABNAME).

*** Request Refresh
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method DISPLAY_ALV.

    data: LS_LAYOUT type     LVC_S_LAYO,
          LS_SHCO   type     ZVCXI_FFS_S_SHCO.
    data: LT_TOOLBAR  type     UI_FUNCTIONS,
          LT_FIELDCAT type     LVC_T_FCAT.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ZVCXI_FFS_S_SHCO.

***--------------------------------------------------------------------------------------
*** Get Grid Data
    assign ME->R_DATA->* to <T_DATA>.
    ME->GET_GRID_DATA( IR_DATA = ME->R_DATA ).

*** Initialize Toolbar and Layout
    move ME->GET_LAYOUT( )    to LS_LAYOUT.
    move ME->GET_TOOLBAR( )   to LT_TOOLBAR.
    move ME->GET_FIELDCAT( )  to LT_FIELDCAT.

*** Display ALV
    ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
      exporting
        IT_TOOLBAR_EXCLUDING          = LT_TOOLBAR
        IS_LAYOUT                     = LS_LAYOUT
      changing
        IT_FIELDCATALOG               = LT_FIELDCAT
        IT_OUTTAB                     = <T_DATA>
      exceptions
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        others                        = 4 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
method DO_FREE.

*** Free Grid
  if ME->R_GRID is bound and ME->F_REFRESH_REQ is not initial.
    ME->R_GRID->FREE( ).
    clear ME->R_GRID.

*** Free Container
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions
                               CNTL_ERROR        = 1
                               CNTL_SYSTEM_ERROR = 2
                               others            = 3 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.
  endif.

endmethod.
  method DO_PBO.

*** Set PF-Status
    ME->SET_PF_STATUS( ).

*** Initialiaze Visualization structure
    ME->INIT_VIS( ).

*** Display ALV
    ME->REFRESH_GRID( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).

      when C_UC_OKAY.
        ME->HANDLE_UC_OKAY( ).

    endcase.

  endmethod.
  method GET_FIELDCAT.

    field-symbols:  <S_FCAT>  type          LVC_S_FCAT.

    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        I_STRUCTURE_NAME       = ME->F_TABNAME
      changing
        CT_FIELDCAT            = RT_FCAT
      exceptions
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        others                 = 3.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

    loop at RT_FCAT assigning <S_FCAT>.

      case <S_FCAT>-FIELDNAME.
        when 'MAKTX'.
          move: 30 to <S_FCAT>-OUTPUTLEN.
          move: text-001 to <S_FCAT>-SCRTEXT_S,
                text-001 to <S_FCAT>-SCRTEXT_M,
                text-001 to <S_FCAT>-SCRTEXT_L,
                text-001 to <S_FCAT>-COLTEXT.

        when 'R_GATE' or 'ICORE' or 'SCOL' or
             'WIWID' or 'WIWID_UOM' or 'COMAR' or 'COMAR_UOM' or 'RHSCO'.
          move ABAP_TRUE    to <S_FCAT>-TECH.

        when 'ROPCO'.
          if ME->F_LOCKED eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when others.

      endcase.

    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_SHCO           type          ZVCXI_FFS_S_SHCO,
          LS_SHCO_GRID      type          ZVCXI_FFS_S_SHCO_GRID.
    data: LT_SHCO           type          ZVCXI_FFS_TT_SHCO.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <S_SCOL> type          LVC_S_SCOL.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

    check ME->R_SHCO is bound.

    if LINES( <T_DATA> ) is initial.
      move ME->R_SHCO->GET_SHCO( ) to LT_SHCO.

      loop at LT_SHCO into LS_SHCO.
        clear: LS_SHCO_GRID.
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_SHCO to LS_SHCO_GRID.

****    Set Style Details
        ME->CHANGE_STYLE_BY_SHCO( exporting IS_SHCO = LS_SHCO
                                  changing  CT_STYL = LS_SHCO_GRID-T_STYL ).

        if LS_SHCO-ISHCO is initial.
***       Mark Main Core Entry
          append initial line to LS_SHCO_GRID-T_SCOL assigning <S_SCOL>.
          move 4 to <S_SCOL>-COLOR-COL.
          move 1 to <S_SCOL>-COLOR-INT.
          move 1 to <S_SCOL>-COLOR-INV.
        endif.

***     Set values to Table
        move-corresponding LS_SHCO_GRID to <S_DATA>.

      endloop.
    endif.

  endmethod.
  method GET_LAYOUT.

*** Prepare Layout
    move ABAP_TRUE to RS_LAYOUT-CWIDTH_OPT.
    move ABAP_TRUE to RS_LAYOUT-NO_TOOLBAR.
    move ABAP_TRUE to RS_LAYOUT-ZEBRA.
    move 'T_STYL'  to RS_LAYOUT-STYLEFNAME.
    move 'T_SCOL'  to RS_LAYOUT-CTAB_FNAME. "INFO_FNAME.
    clear RS_LAYOUT-EDIT.

  endmethod.
  method GET_TOOLBAR.

*** Exclude All Functions
    append CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL to RT_TOOLBAR.

  endmethod.
  method HANDLE_DOUBLE_CLICK.

    field-symbols: <T_DATA> type standard table,
                   <S_SHCO> type ZVCXI_FFS_S_SHCO_GRID.

*** Get Data for display
      assign ME->R_DATA->* to <T_DATA>.
    read table <T_DATA> assigning <S_SHCO> index E_ROW-INDEX.
    check <S_SHCO> is assigned.

    move <S_SHCO>-ICORE to ME->F_ICORE.

    leave to screen 0.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method HANDLE_UC_OKAY.

    data:           LS_SHCO_GRID  type            ZVCXI_FFS_S_SHCO_GRID.
    data:           LT_SHCO       type            ZVCXI_FFS_TT_SHCO.
    field-symbols: <T_DATA> type standard table,
                   <S_SHCO> type            ZVCXI_FFS_S_SHCO.

*** If something changed, update values in internal table
    if ME->CHECK_CHANGED_DATA( ) eq ABAP_TRUE.
***   Get Data
      assign ME->R_DATA->* to <T_DATA>.
      check <T_DATA> is assigned.

      loop at <T_DATA> into LS_SHCO_GRID.
        append initial line to LT_SHCO assigning <S_SHCO>.
        move-corresponding LS_SHCO_GRID to <S_SHCO>.
      endloop.

      ME->R_SHCO->SET_SHCO( LT_SHCO ).
    endif.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method INIT_CONTAINER.

    check ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = ME->F_CONTAINER_NAME
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method INIT_GRID.

    check ME->R_GRID is not bound.
    create object ME->R_GRID
      exporting
        I_PARENT          = ME->R_CONTAINER
      exceptions
        ERROR_CNTL_CREATE = 1
        ERROR_CNTL_INIT   = 2
        ERROR_CNTL_LINK   = 3
        ERROR_DP_CREATE   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Set Enter as Event
    ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

    set handler ME->UPDATE_CHANGED_DATA for ME->R_GRID.
    set handler ME->HANDLE_DOUBLE_CLICK for ME->R_GRID.

  endmethod.
  method INIT_STYLE.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.

***--------------------------------------------------------------------------------------
*** Set Right Style Definition based on is any change allowed
    if ME->F_LOCKED eq ABAP_TRUE.
      ME->F_STYLE_ENABLED    = CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
    else.
      ME->F_STYLE_ENABLED    = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
    endif.

*** Set general Style Disabled
    ME->F_STYLE_DISABLED = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.

  endmethod.
  method INIT_VIS.

    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ZVCXI_FFS_S_SHCO_GRID.

    check ME->R_SHCO is bound.

*** Get Data
    assign ME->R_DATA->* to <T_DATA>.

*** Get the Visualization info
    move ME->R_SHCO->GET_INFO( ) to ME->S_POPUP_SHCO_VIS.

*** Adjust total Target Core Length
    if LINES( <T_DATA> ) is not initial.
      clear ME->S_POPUP_SHCO_VIS-CLETT.
      loop at <T_DATA> assigning <S_DATA>.
        ME->S_POPUP_SHCO_VIS-CLETT = ME->S_POPUP_SHCO_VIS-CLETT + <S_DATA>-CLETA.
      endloop.
    endif.

  endmethod.
  method REFRESH_GRID.

*** Initialize Data
    ME->INIT_CONTAINER( ).
    ME->INIT_GRID( ).
    ME->INIT_STYLE( ).

*** Display ALV
    ME->DISPLAY_ALV( ).

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_FFS_POPUP_SHCO'.

  endmethod.
  method START.

    data: LR_POPUP_SHCO type ref to ZCL_VCXI_FFS_POPUP_SHCO.

*** Create Instance
    create object LR_POPUP_SHCO
      exporting
        IR_SHCO           = IR_SHCO
        IF_TABNAME        = IF_TABNAME
        IF_CONTAINER_NAME = IF_CONTAINER_NAME
        IF_LOCKED         = IF_LOCKED.

*** Call Popup
    call function 'ZVCXI_FFS_POPUP_SHCO_START'
      exporting
        IR_POPUP_SHCO = LR_POPUP_SHCO.

    move LR_POPUP_SHCO->F_ICORE to EF_ICORE.

*** Free the Popup
    LR_POPUP_SHCO->DO_FREE( ).

  endmethod.
  method UPDATE_CHANGED_DATA.

    data:           LS_MOD   type               LVC_S_MODI,
                    LS_CALCV type               ZVCXI_XCS_S_CALCV.
    field-symbols:  <T_DATA> type standard table,
                    <S_SHCO> type               ZVCXI_FFS_S_SHCO_GRID.

*** Get Data
    assign ME->R_DATA->* to <T_DATA>.

    try .

        loop at ER_DATA_CHANGED->MT_MOD_CELLS into LS_MOD.
          read table <T_DATA> assigning <S_SHCO> index LS_MOD-ROW_ID.
          check <S_SHCO> is assigned.

          move LS_MOD-VALUE to <S_SHCO>-ROPCO.

***       Calculate Target Core Length
          <S_SHCO>-S_CLETA = ZCL_VCXI_FFSS_CUST_CORE=>CALC_CLETA( IS_WIWID = <S_SHCO>-S_WIWID
                                                                  IS_COMAR = <S_SHCO>-S_COMAR
                                                                  IF_ROPCO = <S_SHCO>-ROPCO ).
        endloop.

***     Force a OK Code in order to trigger PBO
        CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = '/ENT').
      catch /VCXI/CX_CKX.
        return.
    endtry.

  endmethod.
