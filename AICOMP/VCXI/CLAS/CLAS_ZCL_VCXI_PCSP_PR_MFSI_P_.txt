
class ZCL_VCXI_PCSP_PR_MFSI_P definition
  public
  inheriting from ZCL_VCXI_P0SP_PR_MFSI_P
  create public .

public section.

  interfaces ZIF_VCXI_PCSP_MF_FLUTE .

  aliases C_PARID_FLUTE
    for ZIF_VCXI_PCSP_MF_FLUTE~C_PARID_FLUTE .
  aliases GET_FLUTE
    for ZIF_VCXI_PCSP_MF_FLUTE~GET_FLUTE .
  aliases SET_FLUTE
    for ZIF_VCXI_PCSP_MF_FLUTE~SET_FLUTE .

  methods ZIF_VCXI_XCSP_MFSI~DO_FORWARD
    redefinition .
protected section.

  aliases C_IEVNT_O_FLUTE_CHANGED
    for ZIF_VCXI_PCSP_MF_FLUTE~C_IEVNT_O_FLUTE_CHANGED .
private section.
endclass. "ZCL_VCXI_PCSP_PR_MFSI_P definition
class ZCL_VCXI_PCSP_PR_MFSI_P implementation.
method ZIF_VCXI_PCSP_MF_FLUTE~GET_FLUTE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).
  move LS_PARAM-ATWRT to RF_FLUTE.
  move LS_PARAM-SETBY to EF_SETBY.

endmethod.
method ZIF_VCXI_PCSP_MF_FLUTE~SET_FLUTE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).

  move IF_FLUTE to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FLUTE_CHANGED ).
  endif.

endmethod.
  method ZIF_VCXI_XCSP_MFSI~DO_FORWARD.

    data: LF_FLUTE_MFSO type ZVCXI_PCS_FLUTE,
          LF_FLUTE_MFSI type ZVCXI_PCS_FLUTE,
          LF_SETBY      type /VCXI/VKSR_SETBY.
    data: LR_PR_MFSO_P type ref to ZCL_VCXI_PCSP_PR_MFSO_P.


    SUPER->ZIF_VCXI_XCSP_MFSI~DO_FORWARD( IR_MFSO = IR_MFSO ).

***------------------------------------------------------------------
*** Get Flute of MFO
    try.
        move IR_MFSO ?to LR_PR_MFSO_P.
        if LR_PR_MFSO_P is bound.
          LF_FLUTE_MFSO = LR_PR_MFSO_P->GET_FLUTE( ).
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MFSO_P.
    endtry.

***------------------------------------------------------------------
*** Set Flute (if not defined by User)
    LF_FLUTE_MFSI = ME->GET_FLUTE( importing EF_SETBY = LF_SETBY ).
    if LF_SETBY      ne /VCXI/CL_VKSR_GATE=>C_SETBY_USER and
       LF_FLUTE_MFSI ne LF_FLUTE_MFSO.
      ME->SET_FLUTE( IF_FLUTE = LF_FLUTE_MFSO ).
    endif.

  endmethod.
