
class ZCL_VCXI_PXE_CAD_INB definition
  public
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IF_ICMDL type /VCXI/CKMC_ICMDL default 'ZVCXI_PXM_CAD_INB'
    raising
      /VCXI/CX_CKX .
  methods RECEIVE
    importing
      !IF_XXML type XSTRING
      !IF_DIRECT type ABAP_BOOL default ABAP_UNDEFINED
    returning
      value(RR_RECORD) type ref to /VCXI/CL_CKMR_RECORD
    raising
      /VCXI/CX_CKX .
protected section.

  data F_ICMDL type /VCXI/CKMC_ICMDL .

  methods CREATE_RECORD
    importing
      !IF_XXML type XSTRING
    returning
      value(RR_RECORD) type ref to /VCXI/CL_CKMR_RECORD
    raising
      /VCXI/CX_CKX .
  methods GET_RESPONSE
    importing
      !IR_RECORD type ref to /VCXI/CL_CKMR_RECORD
      !IF_DIRECT type ABAP_BOOL
    returning
      value(RF_XXML) type XSTRING
    raising
      /VCXI/CX_CKX .
  methods START_PROCESS
    importing
      !IR_RECORD type ref to /VCXI/CL_CKMR_RECORD
    changing
      !CF_DIRECT type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXE_CAD_INB definition
class ZCL_VCXI_PXE_CAD_INB implementation.
  method CONSTRUCTOR.

    ME->F_ICMDL = IF_ICMDL.

  endmethod.
  method CREATE_RECORD.

    data: LR_DCO_INBOUND type ref to ZCL_VCXI_PXM_CAD_DCO_INB.


***------------------------------------------------------------------------------------------------
*** Create Record
    RR_RECORD = /VCXI/CL_CKMR_RECORD=>CREATE( IF_ICMDL = ME->F_ICMDL ).

***------------------------------------------------------------------------------------------------
*** Fill DCO of Record
    RR_RECORD->MAP_DCO( changing CR_DCO = LR_DCO_INBOUND ).
    check LR_DCO_INBOUND is bound.

*** Set Inbound Information
    LR_DCO_INBOUND->SET_XXML( IF_XXML = IF_XXML ).

*** Set ID and Description
    RR_RECORD->SET_ID( IF_ID = cond #( when LR_DCO_INBOUND->F_CADPO is not initial then LR_DCO_INBOUND->F_CADPO else 'New Request' ) ).
    RR_RECORD->SET_DESCR( IF_DESCR = |CAD Project { LR_DCO_INBOUND->F_CADPI }| ).

*** Save the Record
    RR_RECORD->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = /VCXI/CL_CKMR_RECORD=>C_FCODE_SAVE ).

  endmethod.
  method GET_RESPONSE.

    data: LR_DCO_INB type ref to ZCL_VCXI_PXM_CAD_DCO_INB.


*** Map DCO to access Project Owner
    IR_RECORD->R_RPROC->MAP_DCO( changing CR_DCO = LR_DCO_INB ).

***------------------------------------------------------------------------------------------------
*** When Request was started with a Project Owner responde with Record GUID
    if IF_DIRECT ne ABAP_TRUE.
      RF_XXML = CL_ABAP_CODEPAGE=>CONVERT_TO( SOURCE = |Record { IR_RECORD->/VCXI/IF_CKX_OBJECT~GET_GUID( ) } created| ).

***------------------------------------------------------------------------------------------------
*** New Requests respond with updated CAD Interface XML
    else.
***   Set Payload or Body as XML
      RF_XXML = LR_DCO_INB->F_XXML.
    endif.

  endmethod.
  method RECEIVE.

    data: LF_DIRECT type ABAP_BOOL.
    data: LR_DCO_INB type ref to ZCL_VCXI_PXM_CAD_DCO_INB.


***------------------------------------------------------------------------------------------------
*** Create SmartMD Record
    RR_RECORD = ME->CREATE_RECORD( IF_XXML = IF_XXML ).
    check RR_RECORD is bound.

*** Start SmartMD Process as Job/directly
    LF_DIRECT = IF_DIRECT.
    ME->START_PROCESS( exporting IR_RECORD = RR_RECORD
                       changing  CF_DIRECT = LF_DIRECT ).

***------------------------------------------------------------------------------------------------
*** Create Application Log Handle
    RR_RECORD->R_RPROC->MAP_DCO( changing CR_DCO = LR_DCO_INB ).
    data(LR_BAL) = /VCXI/CL_CKX_BAL=>CREATE_BAL( IF_OBJECT    = 'ZVCXI_PXE_CAD'
                                                 IF_SUBOBJECT = 'INB'
                                                 IF_NREXT     = conv #( LR_DCO_INB->F_CADPO ) ).
    LR_BAL->ADD_BAL_BY_BAPIRET2( IS_BAPIRET2 = value #( TYPE       = 'S'
                                                        ID         = '/VCXI/CKX'
                                                        NUMBER     = '000'
                                                        MESSAGE_V1 = 'Record'
                                                        MESSAGE_V2 = RR_RECORD->/VCXI/IF_CKX_OBJECT~GET_GUID( )
                                                        MESSAGE_V3 = 'created' ) ).
  endmethod.
  method START_PROCESS.

    data: LS_JOBDATA  type TBTCSTRT.
    data: LR_DCO_INBOUND type ref to ZCL_VCXI_PXM_CAD_DCO_INB.


    check IR_RECORD is bound.

***------------------------------------------------------------------------------------------------
*** Create Process
    IR_RECORD->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = /VCXI/CL_CKMR_RECORD=>C_FCODE_CREATE_RPROC ).
    check IR_RECORD->R_RPROC is bound.

*** Map DCO to access Project Owner
    IR_RECORD->R_RPROC->MAP_DCO( changing CR_DCO = LR_DCO_INBOUND ).

***------------------------------------------------------------------------------------------------
*** Determine Direct Processing
    if CF_DIRECT eq ABAP_UNDEFINED.
      if LR_DCO_INBOUND->F_CADPO is not initial.
        CF_DIRECT = ABAP_FALSE.
      else.
        CF_DIRECT = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
    if CF_DIRECT eq ABAP_FALSE.
***   Set Job Start Data Description
      LS_JOBDATA-STARTDTTYP  = 'I'.    "Start immediate

***   Set Start Date and Time
      call function 'BP_START_DATE_EDITOR'
        exporting
          STDT_DIALOG = 'N'
          STDT_INPUT  = LS_JOBDATA
        importing
          STDT_OUTPUT = LS_JOBDATA
        exceptions
          others      = 9.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

***   Set Job Start Data Description
      IR_RECORD->R_RPROC->SET_JOBDATA( IS_JOBDATA = LS_JOBDATA ).

***   Start as Job
      IR_RECORD->R_RPROC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = /VCXI/CL_CKMR_RPROC=>C_FCODE_EXECUTE_JOB ).

    else.
***   Process new requests directly to respond to WebService call with updated XML
      IR_RECORD->R_RPROC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = /VCXI/CL_CKMR_RPROC=>C_FCODE_EXECUTE_DIRECT ).
    endif.

  endmethod.
