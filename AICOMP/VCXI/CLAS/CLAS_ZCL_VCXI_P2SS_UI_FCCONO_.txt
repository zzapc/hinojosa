
class ZCL_VCXI_P2SS_UI_FCCONO definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_XCONO
  create public .

public section.

  data S_FCCONO_VIS type ZVCXI_P2SS_S_FCCONO_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_IN_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
protected section.

  data R_PR_FCCONO type ref to ZCL_VCXI_P2SS_PR_FCCONO .
  constants C_UC_FCPROP_OUT type SYUCOMM value 'FCPROP_OUT' ##NO_TEXT.
  constants C_UC_SCSTR_OUT type SYUCOMM value 'SCSTR_OUT' ##NO_TEXT.
  data R_GRID_PRINT_COM type ref to ZCL_VCXI_PXSS_GRID_PRINT_COM .

  methods HANDLE_UC_FCPROP
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SCSTR
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SS_UI_FCCONO definition
class ZCL_VCXI_P2SS_UI_FCCONO implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P2SS_UI_FCCONO_BIND'
      exporting
        IR_UI_FCCONO = ME
      importing
        ES_DYNP      = ME->S_DYNP.

***--------------------------------------------------------------------------------------
*** Create Grid for Print
    create object ME->R_GRID_PRINT_COM
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_PRINT_COM'
        IR_PRINT_COM      = ME->R_PR_FCCONO.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_FCCONO.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Printing Grid
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->DO_FREE( ).
      clear ME->R_GRID_PRINT_COM.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        loop at screen.
***       Hide Print Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_PRINT' and
             ME->S_FCCONO_VIS-FOVRR_PRINT eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Grid
    if ME->R_GRID_PRINT_COM is bound.
      ME->R_GRID_PRINT_COM->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_PRINT_COM->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_FCCONO_VIS  type ZVCXI_P2SS_S_FCCONO_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_FCCONO is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_FCCONO_VIS.

***--------------------------------------------------------------------------------------
*** Set Override for Print
    if ME->S_FCCONO_VIS-FOVRR_PRINT ne LS_FCCONO_VIS-FOVRR_PRINT.
      ME->R_PR_FCCONO->SET_FOVRR_PRINT( IF_FOVRR = LS_FCCONO_VIS-FOVRR_PRINT ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
***   Folding Carton Property Popup
      when C_UC_FCPROP_OUT.
        ME->HANDLE_UC_FCPROP( ).

***   Scores String Popup
      when C_UC_SCSTR_OUT.
        ME->HANDLE_UC_SCSTR( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_FCCONO.

  endmethod.
  method HANDLE_UC_FCPROP.

    data: LS_SURWT type ZVCXI_PXS_S_SURWT.
    data: LR_BL_FCBPROP type ref to ZCL_VCXI_P2SS_BL_FCBPROP,
          LR_BL_FCFPROP type ref to ZCL_VCXI_P2SS_BL_FCFPROP.

*** Get Folding Carton Property (Outbound)
    LR_BL_FCBPROP = ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_FCBPX( ).
    LR_BL_FCFPROP = ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_FCFPX( ).
    LS_SURWT = ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_SURWT( ).

*** Start Popup
    ZCL_VCXI_P2SS_POPUP_FCPROP=>START( IR_BL_FCBPROP = LR_BL_FCBPROP
                                       IR_BL_FCFPROP = LR_BL_FCFPROP
                                       IF_WERKS      = ME->R_PR_FCCONO->GET_WERKS( )
                                       IS_SURWT      = LS_SURWT ).

  endmethod.
  method HANDLE_UC_SCSTR.

    data: LR_BL_FCBPROP type ref to ZCL_VCXI_P2SS_BL_FCBPROP.


*** Get Score String (Outbound)
    LR_BL_FCBPROP = ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_FCBPX( ).
    check LR_BL_FCBPROP is bound.

*** Start Popup
    ZCL_VCXI_PXSS_POPUP_SCSTR=>START( IT_SCORE_COM = LR_BL_FCBPROP->T_SCORE ).
*                                      IT_TAPE_COM  = LR_BL_FCBPROP->T_TAPE_COM ).

  endmethod.
  method INIT_VIS.

    data: LR_BL_FCFPROP type ref to ZCL_VCXI_P2SS_BL_FCFPROP.


    SUPER->INIT_VIS( ).

    free: ME->S_FCCONO_VIS.
    ME->S_FCCONO_VIS-S_XCONO_VIS = ME->S_XCONO_VIS.

***--------------------------------------------------------------------------------------
*** Get Override for Print
    ME->S_FCCONO_VIS-FOVRR_PRINT = ME->R_PR_FCCONO->GET_FOVRR_PRINT( ).

***--------------------------------------------------------------------------------------
*** Get Sheet Dimension (Outbound)
    ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_SHTDIM( importing ES_SHTLE = ME->S_FCCONO_VIS-S_IOSEC_OUT-S_SHTLE
                                                                   ES_SHTWI = ME->S_FCCONO_VIS-S_IOSEC_OUT-S_SHTWI
                                                                   EF_GRADI = ME->S_FCCONO_VIS-S_IOSEC_OUT-GRADI ).

*** Number Ups (Outbound)
    ME->S_FCCONO_VIS-S_IOSEC_OUT-NOUPS = ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_NOUPS( ).

*** Get Caliper, Paper Grade and Grammage (Outbound)
    LR_BL_FCFPROP = ME->R_PR_FCCONO->ZIF_VCXI_P2SS_COMM_NEXT~GET_FCFPX( ).
    if LR_BL_FCFPROP is bound.
      ME->S_FCCONO_VIS-S_IOSEC_OUT-S_CALIP = LR_BL_FCFPROP->S_CALIP.
      ME->S_FCCONO_VIS-S_IOSEC_OUT-PAPGR   = LR_BL_FCFPROP->F_PAPGR.
      ME->S_FCCONO_VIS-S_IOSEC_OUT-S_GRAMM = LR_BL_FCFPROP->S_GRAMM.
    endif.

  endmethod.
