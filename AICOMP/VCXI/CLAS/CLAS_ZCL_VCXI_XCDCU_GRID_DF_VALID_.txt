
class ZCL_VCXI_XCDCU_GRID_DF_VALID definition
  public
  inheriting from ZCL_VCXI_XCDCU_GRID
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME optional
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_CUSTOMIZING type ref to OBJECT
    raising
      /VCXI/CX_CKX .
protected section.

  data R_DVCFILTER type ref to ZCL_VCXI_XCDC_DVCFILTER .
  constants C_FUNC_ADD type UI_FUNC value 'ADD'. "#EC NOTEXT
  constants C_FUNC_DEL type UI_FUNC value 'DELETE'. "#EC NOTEXT
  constants C_FUNC_ADD_GENERAL type UI_FUNC value 'ADD_G'. "#EC NOTEXT
  constants C_FUNC_ADD_SPECIFIC type UI_FUNC value 'ADD_S'. "#EC NOTEXT

  type-pools ABAP .
  methods ADD_VALID
    importing
      !IF_SPECIFIC type ABAP_BOOL default ABAP_FALSE
    raising
      /VCXI/CX_CKX .
  methods CALL_ICELM_SHLP
    importing
      !IF_CMATN type /VCXI/VKC_CMATN
      !IF_PRFID type /VCXI/VKC_PRFID
    returning
      value(RT_DF_VALID) type ZVCXI_XCDC_TT_DF_VALID
    raising
      /VCXI/CX_CKX .
  methods DELETE_VALID
    importing
      !IT_DF_VALID type ZVCXI_XCDC_TT_DF_VALID
    raising
      /VCXI/CX_CKX .
  methods HANDLE_MENU_BUTTON
    for event MENU_BUTTON of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_UCOMM .
  methods CHECK_SEL_DELETE
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_USER_COMMAND
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .

  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods INIT_LOCKED
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_XCDCU_GRID_DF_VALID definition
class ZCL_VCXI_XCDCU_GRID_DF_VALID implementation.
method ADD_VALID.

  data: LS_DF_VALID         type                   ZVCXI_XCDC_S_DF_VALID.
  data: LT_DF_VALID         type                   ZVCXI_XCDC_TT_DF_VALID.
  data: LR_CUPRFL           type ref to            /VCXI/CL_VKCC_CUPRFL.

***----------------------------------------------------------------------
*** Call Searchhelp
  LR_CUPRFL = /VCXI/CL_VKCCU_SHLP_CUPRFL=>CALL_SHLP( ).

  check LR_CUPRFL is bound.

  if IF_SPECIFIC eq ABAP_TRUE.
*** Call Search Help for all SVC-Elements of ConfigMat&ProfileID
    LT_DF_VALID = ME->CALL_ICELM_SHLP( IF_CMATN = LR_CUPRFL->S_CMPRK-CMATN
                                       IF_PRFID = LR_CUPRFL->S_CMPRK-PRFID ).

    loop at LT_DF_VALID into LS_DF_VALID.
*** Add Validation Criteria Specific
      ME->R_DVCFILTER->ADD_DF_VALID( IS_DF_VALID = LS_DF_VALID ).
    endloop.

  else.
    move LR_CUPRFL->S_CMPRK-CMATN to LS_DF_VALID-CMATN.
    move LR_CUPRFL->S_CMPRK-PRFID to LS_DF_VALID-PRFID.
    move '*'                      to LS_DF_VALID-ICELM.
*** Add Validation Criteria General
    ME->R_DVCFILTER->ADD_DF_VALID( IS_DF_VALID = LS_DF_VALID ).
  endif.

endmethod.
method CALL_ICELM_SHLP.

  data:          LF_CANCELED       type        ABAP_BOOL.
  data:          LS_CMPRK          type        /VCXI/VKC_S_CMPRK.
  data:          LT_OBJECT_ALL     type        /VCXI/CKX_TT_OBJECT,
                 LT_OBJECT_STYLE   type        /VCXI/CKX_TT_OBJECT_STYLE,
                 LT_OBJECT_SEL     type        /VCXI/CKX_TT_OBJECT.
  data:          LR_CUPRFL         type ref to /VCXI/CL_VKSC_CUPRFL,
                 LR_OBJECT         type ref to /VCXI/IF_CKX_OBJECT,
                 LR_CUELMNT        type ref to /VCXI/CL_VKSC_CUELMNT,
                 LR_CX_CKX         type ref to /VCXI/CX_CKX.
  field-symbols: <S_OBJECT_STYLE>  type        /VCXI/CKX_S_OBJECT_STYLE,
                 <S_DF_VALID>      type        ZVCXI_XCDC_S_DF_VALID.

***------------------------------------------------------------------------------------------------
*** Get Customizing Profile
  LS_CMPRK-CMATN = IF_CMATN.
  LS_CMPRK-PRFID = IF_PRFID.
  LR_CUPRFL = /VCXI/CL_VKSC_CUPRFL=>GET_INSTANCE_BY_CMPRK( IS_CMPRK = LS_CMPRK ).

***------------------------------------------------------------------------------------------------
*** Get all Tree Elements
  LT_OBJECT_ALL = LR_CUPRFL->GET_REGISTERED_CUELMNT( ).
  /VCXI/CL_VKSC_SERVICE=>SORT_CUELMNT( changing CT_OBJECT = LT_OBJECT_ALL ).

*** Define Style
  loop at LT_OBJECT_ALL into LR_OBJECT.
    move LR_OBJECT ?to LR_CUELMNT.
    check LR_CUELMNT is bound.

    append initial line to LT_OBJECT_STYLE assigning <S_OBJECT_STYLE>.
    move LR_OBJECT to <S_OBJECT_STYLE>-R_OBJECT.

*** Image
    if LR_CUELMNT->R_REGELMNT             is bound and
       LR_CUELMNT->R_REGELMNT->F_TIICO_ID is not initial.
      move LR_CUELMNT->R_REGELMNT->F_TIICO_ID       to <S_OBJECT_STYLE>-IMAGE.
    else.
      if LR_CUELMNT->R_REG_ELMTY is bound.
        move LR_CUELMNT->R_REG_ELMTY->F_TIICO_ID to <S_OBJECT_STYLE>-IMAGE.
      endif.
    endif.

*** Disable if no Registry Element is assigned
    if LR_CUELMNT->R_REGELMNT is not bound.
      move ABAP_TRUE to <S_OBJECT_STYLE>-DISABLED.
    endif.
  endloop.

***------------------------------------------------------------------------------------------------
*** Call Search Help
  call function '/VCXI/CKX_OBJECT_POPUP_START'
    exporting
      IT_OBJECT_ALL    = LT_OBJECT_ALL
      IT_OBJECT_STYLE  = LT_OBJECT_STYLE
      IF_SORT_BY_ID    = ABAP_FALSE
      IF_SORT_BY_DESCR = ABAP_FALSE
      IF_EXPAND_ALL    = ABAP_TRUE
      IF_SELMODE       = CL_COLUMN_TREE_MODEL=>NODE_SEL_MODE_MULTIPLE
    importing
      ET_OBJECT_SEL    = LT_OBJECT_SEL
      EF_CANCELED      = LF_CANCELED.

  check LF_CANCELED ne ABAP_TRUE.

***------------------------------------------------------------------------------------------------
*** Process all selected Customizing Elements
  loop at LT_OBJECT_SEL into LR_OBJECT.
    try.
        append initial line to RT_DF_VALID assigning <S_DF_VALID>.
***     Get ID and Add to returning List
        move LR_OBJECT->GET_ID( ) to <S_DF_VALID>-ICELM.
        move IF_CMATN             to <S_DF_VALID>-CMATN.
        move IF_PRFID             to <S_DF_VALID>-PRFID.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'I' ).
    endtry.
  endloop.

  sort RT_DF_VALID.
  delete adjacent duplicates from RT_DF_VALID.

endmethod.
method CHECK_SEL_DELETE.

  data: LT_CELL type LVC_T_CELL,
        LT_ROW  type LVC_T_ROW.

  ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
  ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

*** Delete is only available if Cells are selected
  if lines( LT_CELL ) gt 0 or
     lines( LT_ROW )  gt 0.
    move ABAP_TRUE to RF_OKAY.
  else.
    move ABAP_FALSE to RF_OKAY.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_TABNAME        = 'ZVCXI_XCDCU_S_DF_VALID_GRID'
                      IF_CONTAINER_NAME = '0100CC_GRID_VALID'
                      IR_CUSTOMIZING    = IR_CUSTOMIZING ).


*** Try to Assign Customizing Reference
  try.
      move IR_CUSTOMIZING ?to ME->R_DVCFILTER.
    catch CX_SY_MOVE_CAST_ERROR.
***   DVC Filter Instance Reference can't be assigned.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCDCU'
          IF_MSGNO = '052' ).
  endtry.

endmethod.
method DELETE_VALID.

  data: LS_DF_VALID type ZVCXI_XCDC_S_DF_VALID.

  loop at IT_DF_VALID into LS_DF_VALID.
*** Delete
    ME->R_DVCFILTER->DELETE_DF_VALID( IS_DF_VALID = LS_DF_VALID ).

  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_DF_VALID_GRID     type          ZVCXI_XCDCU_S_DF_VALID_GRID,
                 LS_DF_VALID          type          ZVCXI_XCDC_S_DF_VALID.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

  free: <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get all Condition Values
  loop at ME->R_DVCFILTER->T_DF_VALID into LS_DF_VALID.
    clear: LS_DF_VALID_GRID.

    move-corresponding LS_DF_VALID to LS_DF_VALID_GRID.

*** --------------------------------------------------------------------------------------------
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.
    move-corresponding LS_DF_VALID_GRID to <S_DATA>.

  endloop.

endmethod.
method GET_LAYOUT.

  RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Toolbar to Activ
  move ABAP_FALSE to RS_LAYOUT-NO_TOOLBAR.
  move 'A'        to RS_LAYOUT-SEL_MODE.

endmethod.
method HANDLE_MENU_BUTTON.

  move ABAP_UNDEFINED to ME->F_REFRESH_REQ.
  move ABAP_FALSE     to ME->F_REFRESH_ALL_REQ.

  case E_UCOMM.
    when 'ADD'.

***   Add Function: Add general Model
      E_OBJECT->ADD_FUNCTION( FCODE    = C_FUNC_ADD_GENERAL
                              TEXT     = 'Add general Entry'(010) ).

***   Add Function: Add specific Element
      E_OBJECT->ADD_FUNCTION( FCODE    = C_FUNC_ADD_SPECIFIC
                              TEXT     = 'Add specific Cust. Element'(011) ).

  endcase.

endmethod.
method HANDLE_TOOLBAR.

  data:  LS_TOOLBAR      type        STB_BUTTON.
  data:  LF_DISABLED     type        ABAP_BOOL.
  data:  LR_CX_CKX       type ref to /VCXI/CX_CKX.

  try.

***----------------------------------------------------------------------------
***   Insert Toolbar elements Add and Delete
      clear LS_TOOLBAR.
      move C_FUNC_ADD                 to LS_TOOLBAR-FUNCTION.
      move 'Add'(002)                 to LS_TOOLBAR-TEXT.
      move C_BTYPE_MENU               to LS_TOOLBAR-BUTN_TYPE.
      move ICON_INSERT_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

      clear LS_TOOLBAR.
      move C_FUNC_DEL                 to LS_TOOLBAR-FUNCTION.
      move 'Delete'(003)              to LS_TOOLBAR-TEXT.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_DELETE_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_USER_COMMAND.

  data:          LS_CELL         type          LVC_S_CELL,
                 LS_ROW          type          LVC_S_ROW.
  data:          LT_CELL         type          LVC_T_CELL,
                 LT_ROW          type          LVC_T_ROW,
                 LT_DF_VALID     type          ZVCXI_XCDC_TT_DF_VALID.
  data:          LR_CX_CKX       type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>        type standard table,
                 <S_DF_VALID>    type          ZVCXI_XCDC_S_DF_VALID,
                 <S_DATA>        type          any.

  try.

***   Get VALID Data
      assign ME->R_DATA->* to <T_DATA>.

      ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
      ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

      case E_UCOMM.

        when C_FUNC_ADD_GENERAL.
***     Add new Condition Validation
          ME->ADD_VALID( IF_SPECIFIC = ABAP_FALSE ).

        when C_FUNC_ADD_SPECIFIC.
***     Add new Condition Validation
          ME->ADD_VALID( IF_SPECIFIC = ABAP_TRUE ).

        when C_FUNC_DEL.
***     Delete Condition Validation
          if ME->CHECK_SEL_DELETE( ) eq ABAP_FALSE.
***         No Row Selected. Please Select all Row's you wanna Delete.
            raise exception type /VCXI/CX_CKX
             exporting
                F_MSGTY = 'E'
                F_MSGID = 'ZVCXI_XCDCU'
                F_MSGNO = '301'.
          endif.

***       Get Selected Condition Validation's
          loop at LT_CELL into LS_CELL.
            read table <T_DATA> assigning <S_DATA> index LS_CELL-ROW_ID-INDEX.
            check SY-SUBRC = 0.

            append initial line to LT_DF_VALID assigning <S_DF_VALID>.
            move-corresponding <S_DATA> to <S_DF_VALID>.
          endloop.

          loop at LT_ROW into LS_ROW.
            read table <T_DATA> assigning <S_DATA> index LS_ROW-INDEX.
            check SY-SUBRC = 0.

            append initial line to LT_DF_VALID assigning <S_DF_VALID>.
            move-corresponding <S_DATA> to <S_DF_VALID>.
          endloop.

***       Delete Condition Validation's
          ME->DELETE_VALID( IT_DF_VALID = LT_DF_VALID ).

        when others.
          exit.

      endcase.

      ME->F_REFRESH_REQ = ABAP_TRUE.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method INIT_LOCKED.

*** Not needed!

endmethod.
method SET_EVENT.

  SUPER->SET_EVENT( ).

*** Add Event for Double Click, UserCommand and Toolbar
  set handler ME->HANDLE_USER_COMMAND for ME->R_GRID.
  set handler ME->HANDLE_TOOLBAR      for ME->R_GRID.
  set handler ME->HANDLE_MENU_BUTTON  for ME->R_GRID.

endmethod.
