
class ZCL_VCXI_FFSS_EA_FFG definition
  public
  inheriting from ZCL_VCXI_F0SS_EA_XFG
  create public .

public section.

  methods GET_EXTVAL
    returning
      value(RS_EXTVAL) type ZVCXI_FFE_MM_S_EXTVAL
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_KAUSF
    importing
      !IS_KAUSF type ZVCXI_XCSP_S_KAUSF
    raising
      /VCXI/CX_CKX .
  methods GET_LOTMI
    returning
      value(RS_LOTMI) type ZVCXI_F0S_S_LOTMI
    raising
      /VCXI/CX_CKX .
  methods GET_NOOUT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NOOUT) type ZVCXI_XCS_NOOUT
    raising
      /VCXI/CX_CKX .

  methods /VCXI/IF_VKCR_EXPL_BOM~GET_BOM
    redefinition .
protected section.

  data R_PR_FFG type ref to ZCL_VCXI_FFSS_PR_FFG .
private section.
endclass. "ZCL_VCXI_FFSS_EA_FFG definition
class ZCL_VCXI_FFSS_EA_FFG implementation.
  method /VCXI/IF_VKCR_EXPL_BOM~GET_BOM.

    data: LF_COMPR type        ZVCXI_F0SS_COMPR,
          LF_UMREZ type        UMREZ,
          LF_UMREN type        UMREN,
          LF_OPQTY type        /VCXI/VSMR_OPQTY.
    data: LS_EXQTY   type        /VCXI/VKCR_S_EXQTY,
          LS_S_CMPRK type        /VCXI/VKC_S_CMPRK.
    data: LR_APPDATA   type ref to ZCL_VCXI_XCS_APPDATA,
          LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_ALTUOM type ref to ZCL_VCXI_F0SS_PR_ALTUOM.
    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.


    if IS_EXQTY is supplied.
      move IS_EXQTY         to LS_EXQTY.
    else.
      move ME->GET_EXQTY( ) to LS_EXQTY.
    endif.

*** Get Component Ratio
    ME->R_PR_FFG->GET_COMPR( importing EF_COMPR = LF_COMPR ).

***--------------------------------------------------------------------------------------
*** For Separation in alt. sales unit convert quantity
    break CHECK_AGAIN. " SE FFG explosion and Unit

*** Check Model
    ME->R_GATE->GET_CONFIG_INFO( importing ES_CMPRK = LS_S_CMPRK ).
    if LS_S_CMPRK-CMATN cp '*_SE_*CNF'.

***   Get Application Data
      move ME->R_GATE->GET_APPDATA( ) ?to LR_APPDATA.

***   Get Alternate Unit Provider
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_INUSE = ABAP_TRUE
                                       IF_IPRVT = 'ZVCXI_XCSS_OPQTY' ).
      if LT_GATE is not initial.
        read table LT_GATE into LR_GATE index 1.
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_ALTUOM.

***         Convert
            if LR_PR_ALTUOM is bound.
              LR_PR_ALTUOM->GET_UMREZ_UMREN( exporting IF_UOM   = LR_APPDATA->S_AUQTY-AUQTY_UOM
                                             importing EF_UMREN = LF_UMREN
                                                       EF_UMREZ = LF_UMREZ ).
              if LF_UMREZ ne 0.
                LF_OPQTY = LS_EXQTY-EXQTY * LF_UMREN / LF_UMREZ.
                move LF_OPQTY                      to LS_EXQTY-EXQTY.
                move LR_APPDATA->S_AUQTY-AUQTY_UOM to LS_EXQTY-EXQTY_UOM.
              endif.
            endif.
          catch CX_SY_MOVE_CAST_ERROR.
            clear LR_PR_ALTUOM.
        endtry.
      endif.
    endif.


***--------------------------------------------------------------------------------------
*** BOM Consumption
    RS_EXBOM-MENGE = LS_EXQTY-EXQTY * LF_COMPR.
    move ABAP_TRUE                    to RS_EXBOM-MENGE_X.
    move LS_EXQTY-EXQTY_UOM           to RS_EXBOM-MEINS.
    move ABAP_TRUE                    to RS_EXBOM-MEINS_X.

*** Make it a FIX Quantity
    move ABAP_TRUE                    to RS_EXBOM-FMENG.
    move ABAP_TRUE                    to RS_EXBOM-FMENG_X.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_FFG.
      catch CX_SY_MOVE_CAST_ERROR.
***     Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
  method GET_EXTVAL.

    data: LR_BL_FISTRUCT type ref to ZCL_VCXI_FFSS_BL_FISTRUCT,
          LR_BL_FIFPROP  type ref to ZCL_VCXI_FFSS_BL_FIFPROP,
          LR_PR_RHNDL    type ref to ZCL_VCXI_FFSS_PR_RHNDL.


*** Get Standard Values
    ME->R_PR_FFG->GET_FIWID( importing ES_FIWID = RS_EXTVAL-S_FIWID ).
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_RELEN( importing ES_RELEN = RS_EXTVAL-S_RELEN ).
    ME->R_PR_FFG->GET_FITIN( importing ES_FITIN = RS_EXTVAL-S_FITIN ).
    ME->R_PR_FFG->GET_FITEX( importing ES_FITEX = RS_EXTVAL-S_FITEX ).
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_TREQW( importing ES_TREQW = RS_EXTVAL-S_TREQW ).
    ME->R_PR_FFG->GET_SURWT( importing ES_SURWT = RS_EXTVAL-S_SURWT ).

*** Film Structure
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_FISTX( importing EF_FISTX       = RS_EXTVAL-FISTX
                                                               ER_BL_FISTRUCT = LR_BL_FISTRUCT ).
    if LR_BL_FISTRUCT is bound.
      LR_BL_FISTRUCT->GET_TFILM( importing EF_TFILM = RS_EXTVAL-TFILM ).
    endif.

*** Film Forward Properties
    ME->R_PR_FFG->GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).
    if LR_BL_FIFPROP is bound.
      RS_EXTVAL-FISTY   = LR_BL_FIFPROP->F_FISTY.
      RS_EXTVAL-S_GULEF = LR_BL_FIFPROP->S_GULEF.
      RS_EXTVAL-S_GURIG = LR_BL_FIFPROP->S_GURIG.
      RS_EXTVAL-TFOLD   = LR_BL_FIFPROP->F_TFOLD.
    endif.

*** Roll Dimensions
    LR_PR_RHNDL = ME->R_PR_FFG->GET_PRVDR_RHNDL( ).
    if LR_PR_RHNDL is bound.
      LR_PR_RHNDL->GET_RDITA( importing ES_RDITA = RS_EXTVAL-S_RDITA ).
    endif.

  endmethod.
  method GET_LOTMI.

    check ME->R_PR_FFG is bound.
    move ME->R_PR_FFG->GET_LOTMI( ) to RS_LOTMI.

  endmethod.
  method GET_NOOUT.

    check ME->R_PR_FFG is bound.
    RF_NOOUT = ME->R_PR_FFG->GET_NOOUT( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method SET_KAUSF.

    check ME->R_PR_FFG is bound.

    ME->R_PR_FFG->SET_KAUSF( IS_KAUSF = IS_KAUSF ).

  endmethod.
