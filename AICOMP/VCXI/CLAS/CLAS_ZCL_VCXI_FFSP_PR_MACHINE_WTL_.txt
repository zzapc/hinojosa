
class ZCL_VCXI_FFSP_PR_MACHINE_WTL definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MACHINE
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_MFI_FIDIM
    returning
      value(RT_FIDIM) type ZVCXI_FFSP_TT_FIDIM
    raising
      /VCXI/CX_CKX .
  methods GET_MFO_FIDIM
    returning
      value(RT_FIDIM) type ZVCXI_FFSP_TT_FIDIM
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_XCSP_OPERATION~CONV_TO_MQTYI
    redefinition .
  methods ZIF_VCXI_XCSP_OPERATION~CONV_TO_MQTYO
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_FIDIM type /VCXI/VKSC_IEVNT value 'RECALC_FIDIM' ##NO_TEXT.

  methods HANDLE_RECALC_FIDIM
    raising
      /VCXI/CX_CKX .
  methods GET_CONV_WTL
    returning
      value(RR_CONV_WTL) type ref to ZIF_VCXI_FFSP_CONV_WTL
    raising
      /VCXI/CX_CKX .
  methods SET_MFO_FIDIM
    importing
      !IT_FIDIM type ZVCXI_FFSP_TT_FIDIM
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSP_PR_MACHINE_WTL definition
class ZCL_VCXI_FFSP_PR_MACHINE_WTL implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Set Dimension-Depending Parameter ID's
    move C_PARID_MQTYI_W to ME->F_PARID_MQTYI.
    move C_PARID_MQTYO_L to ME->F_PARID_MQTYO.
    move C_PARID_MSRWA_W to ME->F_PARID_MSRWA.
    move C_PARID_MSSWA_W to ME->F_PARID_MSSWA.

*** Get Inbound Dimension
    call function 'DIMENSION_GET'
      exporting
        MASS                = 1
      importing
        DIMID               = ME->F_DIMNI
      exceptions
        DIMENSION_NOT_FOUND = 1.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Get Outbound Dimension
    call function 'DIMENSION_GET'
      exporting
        LENGTH              = 1
      importing
        DIMID               = ME->F_DIMNO
      exceptions
        DIMENSION_NOT_FOUND = 1.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method GET_CONV_WTL.

    data: LT_GATE     type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_CONV_WTL type ref to ZIF_VCXI_FFSP_CONV_WTL.

    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZIF_VCXI_FFSP_CONV_WTL=>C_IPRVT_CONV_WTL
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_CONV_WTL.
          check LR_CONV_WTL is bound.

          move LR_CONV_WTL to RR_CONV_WTL.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_MFI_FIDIM.

    data: LT_GATE      type    /VCXI/VKSR_TT_GATE.
    data: LR_GATE  type ref to /VCXI/CL_VKSR_GATE,
          LR_FIDIM type ref to ZIF_VCXI_FFSP_FIDIM.
    field-symbols: <S_FIDIM>    type ZVCXI_FFSP_S_FIDIM.

    check ME->R_PR_MFMGR is bound.

***--------------------------------------------------------------------------------------
*** Get Material Flow In
    LT_GATE = ME->R_PR_MFMGR->GET_MFI( ).
    if LINES( LT_GATE ) lt 1.
***   No Material Flow In available.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCSP'
          IF_MSGNO = '210' ).
    endif.

*** Get Dimensions of all
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_FIDIM.
          check LR_FIDIM is bound.

          insert initial line into table RT_FIDIM assigning <S_FIDIM>.

          LR_FIDIM->GET_FIWID( importing ES_FIWID = <S_FIDIM>-S_FIWID ).
          LR_FIDIM->GET_FITIN( importing ES_FITIN = <S_FIDIM>-S_FITIN ).
          LR_FIDIM->GET_FITEX( importing ES_FITEX = <S_FIDIM>-S_FITEX ).
          LR_FIDIM->GET_SURWT( importing ES_SURWT = <S_FIDIM>-S_SURWT ).
          LR_FIDIM->GET_RELEN( importing ES_RELEN = <S_FIDIM>-S_RELEN ).
          LR_FIDIM->GET_RLETA( receiving RS_RLETA = <S_FIDIM>-S_RLETA ).
          LR_FIDIM->GET_NOUPS( importing EF_NOUPS = <S_FIDIM>-NOUPS ).
          LR_FIDIM->GET_NOOUT( importing EF_NOOUT = <S_FIDIM>-NOOUT ).

        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_MFO_FIDIM.

    data: LT_GATE  type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE  type ref to /VCXI/CL_VKSR_GATE,
          LR_FIDIM type ref to ZIF_VCXI_FFSP_FIDIM.
    field-symbols: <S_FIDIM>    type       ZVCXI_FFSP_S_FIDIM.

    check ME->R_PR_MFMGR is bound.

***--------------------------------------------------------------------------------------
*** Get Material Flow Out
    LT_GATE = ME->R_PR_MFMGR->GET_MFO( ).
    if LINES( LT_GATE ) lt 1.
***   No Material Flow Out available.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCSP'
          IF_MSGNO = '209' ).
    endif.

*** Get Dimensions of all
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_FIDIM.
          check LR_FIDIM is bound.

          insert initial line into table RT_FIDIM assigning <S_FIDIM>.

          LR_FIDIM->GET_FIWID( importing ES_FIWID = <S_FIDIM>-S_FIWID ).
          LR_FIDIM->GET_FITIN( importing ES_FITIN = <S_FIDIM>-S_FITIN ).
          LR_FIDIM->GET_FITEX( importing ES_FITEX = <S_FIDIM>-S_FITEX ).
          LR_FIDIM->GET_SURWT( importing ES_SURWT = <S_FIDIM>-S_SURWT ).
          LR_FIDIM->GET_RELEN( importing ES_RELEN = <S_FIDIM>-S_RELEN ).
          LR_FIDIM->GET_RLETA( receiving RS_RLETA = <S_FIDIM>-S_RLETA ).
          LR_FIDIM->GET_NOUPS( importing EF_NOUPS = <S_FIDIM>-NOUPS ).
          LR_FIDIM->GET_NOOUT( importing EF_NOOUT = <S_FIDIM>-NOOUT ).

        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_FIDIM.
        ME->HANDLE_RECALC_FIDIM( ).

    endcase.

  endmethod.
method HANDLE_RECALC_FIDIM.

  data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
  data: LT_FIDIM     type        ZVCXI_FFSP_TT_FIDIM.
  data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
        LR_ADJ_FIDIM type ref to ZIF_VCXI_FFSP_ADJ_FIDIM.

  check ME->R_PR_MFMGR is bound.

***--------------------------------------------------------------------------------------
*** Get Film Dimension of Material Flow In
  move ME->GET_MFI_FIDIM( ) to LT_FIDIM.

***--------------------------------------------------------------------------------------
*** Get all adjusting Addon's and adjust the Film Dimensions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZIF_VCXI_FFSP_ADJ_FIDIM=>C_IPRVT_ADJ_FIDIM
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_ADJ_FIDIM.
        check LR_ADJ_FIDIM is bound.
        LR_ADJ_FIDIM->CALC_FIDIM_OUT( changing CT_FIDIM = LT_FIDIM ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

***--------------------------------------------------------------------------------------
*** Set new Film Dimension of Material Flow
  ME->SET_MFO_FIDIM( IT_FIDIM = LT_FIDIM ).

endmethod.
  method SET_MFO_FIDIM.

    data: LS_FIDIM     type        ZVCXI_FFSP_S_FIDIM,
          LS_FIDIM_OLD type        ZVCXI_FFSP_S_FIDIM.
    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE,
          LR_MFO  type ref to ZIF_VCXI_FFSP_MFO.

    check ME->R_PR_MFMGR is bound.

***------------------------------------------------------------------
*** Get Material Flow Out
    LT_GATE = ME->R_PR_MFMGR->GET_MFO( ).
    ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).

*** Set Dimensions to all
    loop at LT_GATE into LR_GATE.
      clear: LS_FIDIM.

      read table IT_FIDIM into LS_FIDIM index SY-TABIX.
      try.
          move LR_GATE->R_CLSPR ?to LR_MFO.
          check LR_MFO is bound.

***       Set new Film Dimensions
          LR_MFO->SET_FIDIM( IS_FIDIM = LS_FIDIM ).

***       Check if Conversion for Machine Quantity changed
          break CHECK_AGAIN. " Checking against empty value in LS_FIDIM_OLD-NOUPS?
          if LS_FIDIM-NOUPS ne LS_FIDIM_OLD-NOUPS.
***         Send Event
            ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MQTY_CONV_CHANGED ).
          endif.

        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method ZIF_VCXI_XCSP_OPERATION~CONV_TO_MQTYI.

    data: LS_QTY      type        ZVCXI_XCSP_S_QTY.
    data: LR_CONV_WTL type ref to ZIF_VCXI_FFSP_CONV_WTL.

    RS_MQTYI = ME->GET_MQTYI( ).

***--------------------------------------------------------------------------------------
*** Get Weight to Length Conversion
    LR_CONV_WTL = ME->GET_CONV_WTL( ).

    if LR_CONV_WTL is not bound.

      clear: RS_MQTYI-MQTYI.

    else.

      move IS_QTY-QTY     to LS_QTY-QTY.
      move IS_QTY-QTY_UOM to LS_QTY-QTY_UOM.

***   Do Conversion by Extrusion Addon
      LR_CONV_WTL->CONV_LENGTH_TO_WEIGHT( changing CS_QTY = LS_QTY ).

      move LS_QTY-QTY     to RS_MQTYI-MQTYI.
      move LS_QTY-QTY_UOM to RS_MQTYI-MQTYI_UOM.

    endif.


***----------------------------------------------------------------------------
*** Round by Unit Definition
    ZCL_VCXI_XCS_SERVICE_UNIT=>ROUND_UNIT( exporting IF_UOM   = RS_MQTYI-MQTYI_UOM
                                           changing  CF_VALUE = RS_MQTYI-MQTYI ).

  endmethod.
  method ZIF_VCXI_XCSP_OPERATION~CONV_TO_MQTYO.

    data: LS_QTY      type        ZVCXI_XCSP_S_QTY.
    data: LR_CONV_WTL type ref to ZIF_VCXI_FFSP_CONV_WTL.

    RS_MQTYO = ME->GET_MQTYO( ).

***--------------------------------------------------------------------------------------
*** Get Weight to Length Conversion
    LR_CONV_WTL = ME->GET_CONV_WTL( ).

    if LR_CONV_WTL is not bound.
      clear: RS_MQTYO-MQTYO.

    else.
      move IS_QTY-QTY     to LS_QTY-QTY.
      move IS_QTY-QTY_UOM to LS_QTY-QTY_UOM.

***   Do Conversion by Extrusion Addon
      LR_CONV_WTL->CONV_WEIGHT_TO_LENGTH( changing CS_QTY = LS_QTY ).

***   Convert to Unit of Machine Quantity Out
      ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = LS_QTY-QTY
                                                         IF_UOM_IN    = LS_QTY-QTY_UOM
                                                         IF_UOM_OUT   = RS_MQTYO-MQTYO_UOM
                                               importing EF_VALUE_OUT = RS_MQTYO-MQTYO
                                                         EF_UOM_OUT   = RS_MQTYO-MQTYO_UOM ).
    endif.


***----------------------------------------------------------------------------
*** Round by Unit Definition
    ZCL_VCXI_XCS_SERVICE_UNIT=>ROUND_UNIT( exporting IF_UOM   = RS_MQTYO-MQTYO_UOM
                                                     IF_OPROU = '+'
                                           changing  CF_VALUE = RS_MQTYO-MQTYO ).

  endmethod.
