
class ZCL_VCXI_PXSP_PR_ADDON_EMBOS definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  constants C_IAATY_TEMBO type /VCXI/VSMC_IAATY value 'PX_AA_TEMBO' ##NO_TEXT.

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.

  methods GET_TEMBO
    returning
      value(RT_TEMBO) type ZVCXI_PXS_TT_TEMBO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAVAL
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSP_PR_ADDON_EMBOS definition
class ZCL_VCXI_PXSP_PR_ADDON_EMBOS implementation.
  method GET_RTE_SAVAL.

    data: LF_GAATY type /VCXI/VSMC_GAATY.
    data: LT_TEMBO type ZVCXI_PXS_TT_TEMBO.


*** Get Super
    RT_RTE_SAVAL = SUPER->GET_RTE_SAVAL( ).

    check ME->R_RTE_CADDON          is bound and
          ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - Embossing Type
    try.
        LT_TEMBO = ME->GET_TEMBO( ).
        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_TEMBO
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
        append value #( GAATY   = LF_GAATY
                        I_AVVAL = value #( for LF_TEMBO in LT_TEMBO ( SIGN = 'I' OPTION = 'EQ' LOW = LF_TEMBO ) )
                      ) to RT_RTE_SAVAL.
      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method GET_TEMBO.

    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Get Gates of Provider
    append lines of ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSP_PR_MC_EMBMAT=>C_IPRVT_PX_MC_EMBMAT
                                           IF_INUSE  = ABAP_TRUE ) to LT_GATE.
    append lines of ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSP_PR_EMBOS=>C_IPRVT_PX_EMBOS
                                           IF_INUSE  = ABAP_TRUE ) to LT_GATE.


    loop at LT_GATE into LR_GATE.
      case type of LR_GATE->R_CLSPR.
        when type ZCL_VCXI_PXSP_PR_MC_EMBMAT into data(LR_PR_MC_EMBMAT).
          append LR_PR_MC_EMBMAT->GET_TEMBO( ) to RT_TEMBO.
        when type ZCL_VCXI_PXSP_PR_EMBOS into data(LR_PR_EMBOS).
          append LR_PR_EMBOS->GET_TEMBO( ) to RT_TEMBO.
      endcase.
    endloop.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE       type /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI      type ZVCXI_XCSP_S_MQTYI.
    data: LF_UPDATE_ALL  type ABAP_BOOL.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MACHINE type ref to ZCL_VCXI_XCSP_PR_MACHINE.

***------------------------------------------------------------------
*** Should all MC Inks be updated or just the requestered
    if LINE_EXISTS( IT_GATE[ TABLE_LINE = ME->R_GATE ] ).
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      if LINE_EXISTS( IT_GATE[ TABLE_LINE = ME->R_GATE->GET_PARENT( ) ] ).
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
      clear: LR_PR_MACHINE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MACHINE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_MACHINE.
      endtry.
      if LR_PR_MACHINE is bound.
        move LR_PR_MACHINE->GET_MQTYI( ) to LS_MQTYI.
      endif.
    endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

*** Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        if not LINE_EXISTS( IT_GATE[ TABLE_LINE = LR_GATE ] ).
          continue.
        endif.
      endif.
      cast ZCL_VCXI_XCSP_PR_MC( LR_GATE->R_CLSPR )->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
    endloop.

  endmethod.
