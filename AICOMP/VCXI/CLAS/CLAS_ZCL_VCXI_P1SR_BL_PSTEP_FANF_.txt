
class ZCL_VCXI_P1SR_BL_PSTEP_FANF definition
  public
  inheriting from ZCL_VCXI_P1SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .

  constants C_IPSTP_FANF type /VCXI/VSMC_IPSTP value 'P1_PS_FANF' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_FANF
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .

  methods INIT_BY_CSTEP_FANF
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_PR_CSTEP_FANF) type ref to ZCL_VCXI_P1SS_PR_CSTEP_FANF
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_FANF
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SR_BL_PSTEP_FANF definition
class ZCL_VCXI_P1SR_BL_PSTEP_FANF implementation.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Sheet Length (Outbound)
        when 'P0_LT_DO_SHTLEN'.
          move ME->S_PCDIM_OUT-PCLEN     to LF_LDVAL.
          move ME->S_PCDIM_OUT-PCLEN_UOM to LF_LDUOM.

***     Sheet Width (Outbound)
        when 'P0_LT_DO_SHTWID'.
          move ME->S_PCDIM_OUT-PCWID     to LF_LDVAL.
          move ME->S_PCDIM_OUT-PCWID_UOM to LF_LDUOM.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_FANF type ref to ZCL_VCXI_P1SR_BL_PSTEP_FANF.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_FANF.

*** PC Dimensions
    if ME->S_PCDIM_OUT eq LR_BL_PSTEP_FANF->S_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_FANF type ref to ZCL_VCXI_P1SR_BL_PSTEP_FANF.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_FANF.

*** PC Dimensions
    move ME->S_PCDIM_OUT   to LR_BL_PSTEP_FANF->S_PCDIM_OUT.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'P1_AT_FANF'.
        ME->FILL_SPVRE_ADDON_FANF( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                             IR_ARBPL       = IR_ARBPL
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_FANF.

***------------------------------------------------------------------------------------------------
*** Set PC Type
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P1SP_PR_ADDON_FANF=>C_PARID_PCTYP
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->S_PCDIM_OUT-PCTYP
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
*** Set Length/Width/Height
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P1SP_PR_ADDON_FANF=>C_PARID_PCLEN
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCLEN
                                                   UNIT  = ME->S_PCDIM_OUT-PCLEN_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P1SP_PR_ADDON_FANF=>C_PARID_PCWID
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCWID
                                                   UNIT  = ME->S_PCDIM_OUT-PCWID_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P1SP_PR_ADDON_FANF=>C_PARID_PCHEI
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PCDIM_OUT-PCHEI
                                                   UNIT  = ME->S_PCDIM_OUT-PCHEI_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

  endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

****------------------------------------------------------------------
**** Standard
*    move 'CONV'     to CF_ID_ARBPL.    "Defined by Corrugation

**** If Manual
*    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
*      move 'MANU'     to CF_ID_ARBPL.
*    endif.

**** If Outsourcing
*    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
*      move 'OUTSO'    to CF_ID_ARBPL.
*    endif.

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_PCDIM_OUT'  VALUE = ref #( ME->S_PCDIM_OUT ) ) to RT_DATA.

  endmethod.
  method INIT_BY_CSTEP_FANF.

    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Fanfolding
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_CSTEP_FANF.
      RR_PR_CSTEP_FANF ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check RR_PR_CSTEP_FANF is bound.


***--------------------------------------------------------------------------------------
*** Sheet Direction
    ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR = 'A'.
    ME->ZIF_VCXI_PXSR_PCDIR~F_PCDOP = ZIF_VCXI_PXSR_PCDIR=>C_PCDOP_MANDATORY.

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


***--------------------------------------------------------------------------------------
*** Get Outbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_OUT = value #( LT_PCDIM[ 1 ] optional ).

*** Initialize by CStep Fanfolding
    ME->INIT_BY_CSTEP_FANF( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.
  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    CT_PCDIM = value #( ( ME->S_PCDIM_OUT ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.
  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
