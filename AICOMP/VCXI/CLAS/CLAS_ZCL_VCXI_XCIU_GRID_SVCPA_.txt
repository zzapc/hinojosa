
class ZCL_VCXI_XCIU_GRID_SVCPA definition
  public
  create public .

public section.

  data F_REFRESH_REQ type ABAP_BOOL .

  methods CHECK_DATA_CHANGED
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UI_IDAT_SVC type ref to ZCL_VCXI_XCIU_UI_IDAT_SVC
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_ADD_SVCPA type UI_FUNC value 'ADD_SVCPA' ##NO_TEXT.
  constants C_UC_DEL_SVCPA type UI_FUNC value 'DEL_SVCPA' ##NO_TEXT.
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data R_UI_IDAT_SVC type ref to ZCL_VCXI_XCIU_UI_IDAT_SVC .
  data T_SVCPA_GRID type ZVCXI_XCIU_TT_SVCPA_GRID .

  methods HANDLE_UC_ADD_SVCPA
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DEL_SVCPA
    raising
      /VCXI/CX_CKX .
  methods GET_FIELDCAT
    returning
      value(RT_FCAT) type LVC_T_FCAT
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE
    importing
      !IF_FIELDNAME type FIELDNAME
      !IF_STYLE type LVC_STYLE
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_SELECTED_ROWS
    exporting
      !ET_ROW type LVC_T_ROW
      !ES_LAST_ROW type LVC_S_ROW
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_UCOMM
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods INIT_SVCPA_GRID
    raising
      /VCXI/CX_CKX .
  methods HANDLE_DATA_CHANGED_FINISHED
    for event DATA_CHANGED_FINISHED of CL_GUI_ALV_GRID
    importing
      !E_MODIFIED
      !ET_GOOD_CELLS .
  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW
      !E_COLUMN
      !ES_ROW_NO .
private section.
endclass. "ZCL_VCXI_XCIU_GRID_SVCPA definition
class ZCL_VCXI_XCIU_GRID_SVCPA implementation.
method CHANGE_STYLE.

  data:          LS_STYL              type          LVC_S_STYL.
  data:          LT_STYL              type table of LVC_S_STYL.

*** --------------------------------------------------------------------------------------------
*** Set Style Details
*** Get Style Table
  move CT_STYL to LT_STYL.
  clear CT_STYL.

*** Set Fieldname and Style
  clear LS_STYL.
  LS_STYL-FIELDNAME   = IF_FIELDNAME.
  LS_STYL-STYLE       = IF_STYLE.
  append LS_STYL      to LT_STYL.

*** Add Style Table
  sort LT_STYL.
  CT_STYL[] = LT_STYL[].

endmethod.
method CHECK_DATA_CHANGED.

  if ME->R_GRID is bound.
*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
method CONSTRUCTOR.

  move IR_UI_IDAT_SVC   to ME->R_UI_IDAT_SVC.

*** Request Refresh
  move ABAP_TRUE to ME->F_REFRESH_REQ.

*** Initialize Container
  ME->INIT_CONTAINER( ).

*** Initialize Grid
  ME->INIT_GRID( ).

endmethod.
method DO_FREE.

*** Free Grid
  if ME->R_GRID is bound.
*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).

    ME->R_GRID->FREE( exceptions
                        CNTL_ERROR        = 1
                        CNTL_SYSTEM_ERROR = 2
                        others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_GRID.
  endif.

*** Free Container
  if ME->R_CONTAINER is bound.
    ME->R_CONTAINER->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_CONTAINER.
  endif.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>   type LVC_S_FCAT.

  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      I_STRUCTURE_NAME       = 'ZVCXI_XCIU_S_SVCPA_GRID'
    changing
      CT_FIELDCAT            = RT_FCAT
    exceptions
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      others                 = 3.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'SETBY'.
        move ABAP_TRUE to <S_FCAT>-EDIT.
      when 'ATWRT'.
        move ABAP_TRUE to <S_FCAT>-EDIT.
      when 'ATFLV'.
        move ABAP_TRUE to <S_FCAT>-EDIT.
    endcase.
  endloop.

endmethod.
method GET_SELECTED_ROWS.

  data:          LS_CELL              type        LVC_S_CELL,
                 LS_ROW               type        LVC_S_ROW.
  data:          LT_CELL              type        LVC_T_CELL,
                 LT_ROW               type        LVC_T_ROW.

*** Get Cursor in Grid
  ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
  if lines( LT_CELL ) gt 0.

    loop at LT_CELL into LS_CELL.
      append LS_CELL-ROW_ID to ET_ROW.
***   Get last Index
      if ES_LAST_ROW-INDEX lt LS_CELL-ROW_ID-INDEX.
        move LS_CELL-ROW_ID to ES_LAST_ROW.
      endif.
    endloop.

  endif.

*** Get Selected Rows
  ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).
  if lines( LT_ROW ) gt 0.

    append lines of LT_ROW to ET_ROW.

    loop at LT_ROW into LS_ROW.
***   Get last Index
      if ES_LAST_ROW-INDEX lt LS_ROW-INDEX.
        move LS_ROW to ES_LAST_ROW.
      endif.
    endloop.

  endif.

  sort ET_ROW by INDEX.
  delete adjacent duplicates from ET_ROW.


endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_MODI        type        LVC_S_MODI,
                 LS_SVCPA_GRID  type        ZVCXI_XCIU_S_SVCPA_GRID,
                 LS_SVCEL       type        ZVCXI_XCI_S_SVCEL.
  data:          LR_CX_CKX      type ref to /VCXI/CX_CKX.
  field-symbols: <S_SVCPA>      type        ZVCXI_XCI_S_SVCPA.

  try.
      check E_MODIFIED eq ABAP_TRUE.

***   Get current Status
      LS_SVCEL = ME->R_UI_IDAT_SVC->GET_CURRENT_SVCEL( ).
      check LS_SVCEL-ISELF is not initial.

***   Process Lines
      loop at ET_GOOD_CELLS into LS_MODI.
        at new ROW_ID.
          read table ME->T_SVCPA_GRID into LS_SVCPA_GRID index LS_MODI-ROW_ID.
          check SY-SUBRC eq 0.

***       Read current Parameter
          read table LS_SVCEL-T_SVCPA assigning <S_SVCPA>
                                      with key PARID = LS_SVCPA_GRID-PARID.
          check SY-SUBRC eq 0.

***       Update
          move-corresponding LS_SVCPA_GRID to <S_SVCPA>.
        endat.
      endloop.

***   Update Element
      ME->R_UI_IDAT_SVC->R_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).

***   Request refresh
      move ABAP_TRUE to ME->F_REFRESH_REQ.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
  method HANDLE_DOUBLE_CLICK.

    data: LF_LOCKED type /VCXI/CKX_LOCKED.
    data: LS_SVCPA_GRID type        ZVCXI_XCIU_S_SVCPA_GRID,
          LS_SVCEL      type        ZVCXI_XCI_S_SVCEL.
    data: LR_CX_CKX     type ref to /VCXI/CX_CKX.
    field-symbols: <S_SVCPA>      type        ZVCXI_XCI_S_SVCPA.

    try.
        check E_ROW is not initial.

***     Get current Status
        LS_SVCEL = ME->R_UI_IDAT_SVC->GET_CURRENT_SVCEL( ).
        check LS_SVCEL-ISELF is not initial.

        read table ME->T_SVCPA_GRID into LS_SVCPA_GRID index E_ROW.
        check SY-SUBRC eq 0.

***     Check Parameter Type is String
        check LS_SVCPA_GRID-R_PARAM->F_PARTY eq 'STRG'.

***     Read current Parameter
        read table LS_SVCEL-T_SVCPA assigning <S_SVCPA>
                                    with key PARID = LS_SVCPA_GRID-PARID.
        check SY-SUBRC eq 0.

        LF_LOCKED = ME->R_UI_IDAT_SVC->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).

***     Show Longtext Popup
        ZCL_VCXI_XCIU_POPUP_TEXTEDIT=>START( exporting IF_LOCKED = LF_LOCKED
                                             changing  CF_TEXT   = <S_SVCPA>-STRNG ).

        if LF_LOCKED eq ABAP_TRUE.
***       Update Element
          ME->R_UI_IDAT_SVC->R_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).
        endif.

***     Request refresh
        move ABAP_TRUE to ME->F_REFRESH_REQ.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
method HANDLE_TOOLBAR.

  data:          LF_DISABLED     type        ABAP_BOOL.
  data:          LS_SVCEL        type        ZVCXI_XCI_S_SVCEL.
  data:          LR_CX_CKX       type ref to /VCXI/CX_CKX.
  field-symbols: <S_TOOLBAR>     type        STB_BUTTON.

  try.
***   Get current Status
      LS_SVCEL = ME->R_UI_IDAT_SVC->GET_CURRENT_SVCEL( ).
      check LS_SVCEL-ISELF is not initial.

***   Get Lock Status
      if ME->R_UI_IDAT_SVC->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
        move ABAP_FALSE to LF_DISABLED.
      else.
        move ABAP_TRUE  to LF_DISABLED.
      endif.

***   Add Buttons
      append initial line to E_OBJECT->MT_TOOLBAR assigning <S_TOOLBAR>.
      move C_UC_ADD_SVCPA           to <S_TOOLBAR>-FUNCTION.
      move ICON_INSERT_ROW          to <S_TOOLBAR>-ICON.
      move LF_DISABLED              to <S_TOOLBAR>-DISABLED.

      append initial line to E_OBJECT->MT_TOOLBAR assigning <S_TOOLBAR>.
      move C_UC_DEL_SVCPA           to <S_TOOLBAR>-FUNCTION.
      move ICON_DELETE_ROW          to <S_TOOLBAR>-ICON.
      move LF_DISABLED              to <S_TOOLBAR>-DISABLED.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_UC_ADD_SVCPA.

  data:          LS_SVCEL   type        ZVCXI_XCI_S_SVCEL.
  data:          LT_PARAM   type        /VCXI/CKX_TT_OBJECT.
  data:          LR_PARAM   type ref to /VCXI/CL_VKSC_PARAM,
                 LR_OBJECT  type ref to /VCXI/IF_CKX_OBJECT.
  field-symbols: <S_SVCPA>  type        ZVCXI_XCI_S_SVCPA.

*** Get current Status
  LS_SVCEL = ME->R_UI_IDAT_SVC->GET_CURRENT_SVCEL( ).
  check LS_SVCEL-ISELF is not initial.

*** Call Search Help for Parameter
  LT_PARAM = /VCXI/CL_VKSCU_SHLP_PARAM=>CALL_SHLP( ).

  loop at LT_PARAM into LR_OBJECT.
    move LR_OBJECT ?to LR_PARAM.

    append initial line to LS_SVCEL-T_SVCPA assigning <S_SVCPA>.
    move LR_PARAM->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to <S_SVCPA>-PARID.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_USER          to <S_SVCPA>-SETBY.
  endloop.

*** Update Element
  ME->R_UI_IDAT_SVC->R_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).

*** Request refresh
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_UC_DEL_SVCPA.

  data:  LS_SVCEL       type        ZVCXI_XCI_S_SVCEL,
         LS_ROW         type        LVC_S_ROW.
  data:  LT_ROW         type        LVC_T_ROW.

***----------------------------------------------------------------------------
*** Get current Status
  LS_SVCEL = ME->R_UI_IDAT_SVC->GET_CURRENT_SVCEL( ).
  check LS_SVCEL-ISELF is not initial.

*** Get selected row
  ME->GET_SELECTED_ROWS( importing ET_ROW = LT_ROW ).
  check LT_ROW is not initial.

***----------------------------------------------------------------------------
*** Delete bottom up
  sort LT_ROW by INDEX descending.
  loop at LT_ROW into LS_ROW.
    delete LS_SVCEL-T_SVCPA index LS_ROW-INDEX.
  endloop.

***----------------------------------------------------------------------------
*** Update Element
  ME->R_UI_IDAT_SVC->R_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL ).

*** Request refresh
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_UCOMM.

  data:  LR_CX_CKX       type ref to /VCXI/CX_CKX.

  try.

      case E_UCOMM.
        when C_UC_ADD_SVCPA.
          ME->HANDLE_UC_ADD_SVCPA( ).
        when C_UC_DEL_SVCPA.
          ME->HANDLE_UC_DEL_SVCPA( ).
      endcase.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method INIT_CONTAINER.

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = '0100CC_SVCPA'
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

endmethod.
method INIT_GRID.

  check ME->R_GRID is not bound.

  create object ME->R_GRID
    exporting
      I_PARENT          = ME->R_CONTAINER
      I_APPL_EVENTS     = ABAP_TRUE
    exceptions
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      others            = 5.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

*** Set Enter as Event
  ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

*** Set Event Handler for Toolbar
  set handler ME->HANDLE_TOOLBAR             for ME->R_GRID.
  set handler ME->HANDLE_UCOMM               for ME->R_GRID.

*** Set Event Handler for Changes
  set handler ME->HANDLE_DATA_CHANGED_FINISHED for ME->R_GRID.
  set handler ME->HANDLE_DOUBLE_CLICK          for ME->R_GRID.

endmethod.
method INIT_SVCPA_GRID.

  data:          LF_STYLE_ENABLED    type          LVC_STYLE,
                 LF_GUID             type          /VCXI/CKX_GUID,
                 LF_STYLE_SETBY      type          LVC_STYLE,
                 LF_STYLE_ATWRT      type          LVC_STYLE,
                 LF_STYLE_ATFLV      type          LVC_STYLE,
                 LF_STYLE_UNIT       type          LVC_STYLE.
  data:          LS_SVCEL            type          ZVCXI_XCI_S_SVCEL,
                 LS_SVCPA            type          ZVCXI_XCI_S_SVCPA.
  field-symbols: <S_SVCPA_GRID>      type          ZVCXI_XCIU_S_SVCPA_GRID.


  free: ME->T_SVCPA_GRID.

*** Get current Element
  LS_SVCEL = ME->R_UI_IDAT_SVC->GET_CURRENT_SVCEL( ).
  check LS_SVCEL-ISELF is not initial.

*** Defined Style
  if ME->R_UI_IDAT_SVC->R_IDAT_SVC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
    move CL_GUI_ALV_GRID=>MC_STYLE_ENABLED  to LF_STYLE_ENABLED.
  else.
    move CL_GUI_ALV_GRID=>MC_STYLE_DISABLED to LF_STYLE_ENABLED.
  endif.

*** Fill Table
  loop at LS_SVCEL-T_SVCPA into LS_SVCPA.
    append initial line to ME->T_SVCPA_GRID assigning <S_SVCPA_GRID>.
    move-corresponding LS_SVCPA to <S_SVCPA_GRID>.

    try.
***------------------------------------------------------------------------------------------------
***     Get Parameter Instance
        move LS_SVCPA-PARID to LF_GUID.
        <S_SVCPA_GRID>-R_PARAM ?= /VCXI/CL_VKSC_PARAM=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
        if <S_SVCPA_GRID>-R_PARAM is bound.
***       Parameter Description
          move <S_SVCPA_GRID>-R_PARAM->/VCXI/IF_CKX_OBJECT~GET_DESCR( ) to <S_SVCPA_GRID>-DESCR.
        endif.
      catch /VCXI/CX_CKX.
        clear: <S_SVCPA_GRID>-R_PARAM.
    endtry.

***------------------------------------------------------------------------------------------------
*** Nothing changeable by default
    move CL_GUI_ALV_GRID=>MC_STYLE_DISABLED to LF_STYLE_SETBY.
    move CL_GUI_ALV_GRID=>MC_STYLE_DISABLED to LF_STYLE_ATWRT.
    move CL_GUI_ALV_GRID=>MC_STYLE_DISABLED to LF_STYLE_ATFLV.
    move CL_GUI_ALV_GRID=>MC_STYLE_DISABLED to LF_STYLE_UNIT.

*** Define Style
    if <S_SVCPA_GRID>-R_PARAM is bound.
      move LF_STYLE_ENABLED to LF_STYLE_SETBY.

      case <S_SVCPA_GRID>-R_PARAM->F_PARTY.
        when /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR.
          move LF_STYLE_ENABLED to LF_STYLE_ATWRT.

        when /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC.
          move LF_STYLE_ENABLED to LF_STYLE_ATFLV.

          case <S_SVCPA_GRID>-R_PARAM->F_TUORC.
            when /VCXI/CL_VKSC_PARAM=>C_TUORC_U.
              move LF_STYLE_ENABLED to LF_STYLE_UNIT.
            when /VCXI/CL_VKSC_PARAM=>C_TUORC_C.

          endcase.
      endcase.
    endif.

*** Set Style
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SETBY'
                                IF_STYLE     = LF_STYLE_SETBY
                      changing  CT_STYL      = <S_SVCPA_GRID>-T_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'ATWRT'
                                IF_STYLE     = LF_STYLE_ATWRT
                      changing  CT_STYL      = <S_SVCPA_GRID>-T_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'ATFLV'
                                IF_STYLE     = LF_STYLE_ATFLV
                      changing  CT_STYL      = <S_SVCPA_GRID>-T_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'UNIT'
                                IF_STYLE     = LF_STYLE_UNIT
                      changing  CT_STYL      = <S_SVCPA_GRID>-T_STYL ).

  endloop.

endmethod.
method REFRESH_GRID.

  data:          LS_LAYOUT            type        LVC_S_LAYO.
  data:          LT_TOOLBAR_EXCLUDING type        UI_FUNCTIONS,
                 LT_FCAT              type        LVC_T_FCAT.

  check ME->F_REFRESH_REQ eq ABAP_TRUE.
  move ABAP_FALSE to ME->F_REFRESH_REQ.

***--------------------------------------------------------------------------------------
*** Get Grid Data
  ME->INIT_SVCPA_GRID( ).

***--------------------------------------------------------------------------------------
*** Field Catalog
  move ME->GET_FIELDCAT( )                to LT_FCAT.

*** Toolbar Exclusion
  append CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL  to LT_TOOLBAR_EXCLUDING.

*** Layout
  move 'X'       to LS_LAYOUT-CWIDTH_OPT.
  move 'T_STYL'  to LS_LAYOUT-STYLEFNAME.

***--------------------------------------------------------------------------------------
*** Relfreh ALV Grid
  ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
    exporting
      IT_TOOLBAR_EXCLUDING          = LT_TOOLBAR_EXCLUDING
      IS_LAYOUT                     = LS_LAYOUT
    changing
      IT_FIELDCATALOG               = LT_FCAT
      IT_OUTTAB                     = ME->T_SVCPA_GRID
    exceptions
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3
      others                        = 4 ).
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
