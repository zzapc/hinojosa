
class ZCL_VCXI_FRS_UI_BDATA_EXTR definition
  public
  inheriting from ZCL_VCXI_F0S_UI_TAB
  create public .

public section.

  data R_PR_BDATA_EXTR type ref to ZCL_VCXI_FRS_PR_BDATA_EXTR .
  data S_BDATA_EXTR_VIS type ZVCXI_FRS_S_BDATA_EXTR_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_F0S_TABPT default '0100S_BDATA_T-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_BDATA_EXTR_VIS
    importing
      !IS_BDATA_EXTR_VIS type ZVCXI_FRS_S_BDATA_EXTR_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
protected section.

  methods SET_DDVAL_TEXTR
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_PRVDR_TAB
    redefinition .
  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FRS_UI_BDATA_EXTR definition
class ZCL_VCXI_FRS_UI_BDATA_EXTR implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

    call function 'ZVCXI_FRS_UI_BDATA_EXTR_BIND'
      exporting
        IR_UI_BDATA_EXTR = ME
      importing
        ES_DYNP          = ME->S_DYNP
        EF_ACTIVE_TAB    = ME->F_ACTIVE_TAB.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_BDATA_EXTR.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Check released versions exists to disable number of layer
          if SCREEN-NAME eq 'ZVCXI_FRS_S_BDATA_EXTR_VIS-NOLAY'.
            if ME->R_PR_BDATA_EXTR->CHECK_VRREL( ) eq ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Set tabs back to input
          if SCREEN-NAME cs ME->F_TABPT.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Define DropDown Values for Extrusion Type
    ME->SET_DDVAL_TEXTR( ).

  endmethod.
  method DO_UPDATE_BDATA_EXTR_VIS.

***--------------------------------------------------------------------------------------
*** Set Extrusion Type
    if ME->S_BDATA_EXTR_VIS-TEXTR ne IS_BDATA_EXTR_VIS-TEXTR.
      ME->R_PR_BDATA_EXTR->SET_TEXTR( exporting IF_TEXTR = IS_BDATA_EXTR_VIS-TEXTR
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Min. Thickness
    if ME->S_BDATA_EXTR_VIS-S_FITMI ne IS_BDATA_EXTR_VIS-S_FITMI.
      ME->R_PR_BDATA_EXTR->SET_FITMI( exporting IS_FITMI = IS_BDATA_EXTR_VIS-S_FITMI
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Max. Thickness
    if ME->S_BDATA_EXTR_VIS-S_FITMA ne IS_BDATA_EXTR_VIS-S_FITMA.
      ME->R_PR_BDATA_EXTR->SET_FITMA( exporting IS_FITMA = IS_BDATA_EXTR_VIS-S_FITMA
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Flag Blocked Film
    if ME->S_BDATA_EXTR_VIS-FBLOF ne IS_BDATA_EXTR_VIS-FBLOF.
      ME->R_PR_BDATA_EXTR->SET_FBLOF( exporting IF_FBLOF = IS_BDATA_EXTR_VIS-FBLOF
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Number of Layer
    if ME->S_BDATA_EXTR_VIS-NOLAY ne IS_BDATA_EXTR_VIS-NOLAY.
      ME->R_PR_BDATA_EXTR->SET_NOLAY( IF_NOLAY = IS_BDATA_EXTR_VIS-NOLAY
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method GET_PRVDR_TAB.

    data:  LS_PRVDR_DEF type         /VCXI/VKSR_S_PRVDR_DEF.
    data:  LT_GATE      type         /VCXI/VKSR_TT_GATE,
           LT_PRVDR_DEF type         /VCXI/VKSR_TT_PRVDR_DEF.


***--------------------------------------------------------------------------------------
*** Get all Siblings
    LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_SIBLING ).

    loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                       IF_INUSE = ABAP_TRUE ).

      append lines of LT_GATE to RT_PRVDR.
    endloop.

*** Sort before returning
    ME->R_GATE->SORT_GATE( changing CT_GATE = RT_PRVDR ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_BDATA_EXTR.

  endmethod.
  method INIT_VIS.

    free: ME->S_BDATA_EXTR_VIS.

***--------------------------------------------------------------------------------------
*** Number of Layer
    move ME->R_PR_BDATA_EXTR->GET_NOLAY( ) to ME->S_BDATA_EXTR_VIS-NOLAY.

***--------------------------------------------------------------------------------------
*** Get Material Description
    ME->R_PR_BDATA_EXTR->GET_MAKTX( importing EF_MAKTX = ME->S_BDATA_EXTR_VIS-MAKTX ).

***--------------------------------------------------------------------------------------
*** Get Extrusion Type
    ME->R_PR_BDATA_EXTR->GET_TEXTR( importing EF_TEXTR = ME->S_BDATA_EXTR_VIS-TEXTR ).

***--------------------------------------------------------------------------------------
*** Get Min. Thickness
    ME->R_PR_BDATA_EXTR->GET_FITMI( importing ES_FITMI = ME->S_BDATA_EXTR_VIS-S_FITMI ).

*** Get Max. Thickness
    ME->R_PR_BDATA_EXTR->GET_FITMA( importing ES_FITMA = ME->S_BDATA_EXTR_VIS-S_FITMA ).

***--------------------------------------------------------------------------------------
*** Film Type
    ME->R_PR_BDATA_EXTR->GET_TFILM( importing EF_TFILM = ME->S_BDATA_EXTR_VIS-TFILM ).

*** Get Film Thickness
    ME->R_PR_BDATA_EXTR->GET_FITHI( importing ES_FITHI = ME->S_BDATA_EXTR_VIS-S_FITHI ).

*** Get Flag Film Blocked
    ME->R_PR_BDATA_EXTR->GET_FBLOF( importing EF_FBLOF = ME->S_BDATA_EXTR_VIS-FBLOF ).

***--------------------------------------------------------------------------------------
*** Film Color
    ME->R_PR_BDATA_EXTR->GET_FICOL( importing EF_FICOL       = ME->S_BDATA_EXTR_VIS-FICOL
                                              EF_FICOL_DESCR = ME->S_BDATA_EXTR_VIS-FICOL_DESCR ).

  endmethod.
  method SET_DDVAL_TEXTR.

    data: LF_ID    type VRM_ID.
    data: LT_TEXTR type VRM_VALUES.
    field-symbols: <S_TEXTR> type VRM_VALUE.

*** Get Dropdown Values
    ME->R_PR_BDATA_EXTR->GET_VALID_TEXTR( importing ET_TEXTR = LT_TEXTR ).

    check LT_TEXTR is not initial.

*** Set to DropDown List
    move 'ZVCXI_FRS_S_BDATA_EXTR_VIS-TEXTR' to LF_ID.

*** Initialize listbox content
    call function 'VRM_REFRESH_VALUES'.
*** Check if stored option is still available for blocked flag
    read table LT_TEXTR assigning <S_TEXTR> with key KEY = S_BDATA_EXTR_VIS-TEXTR.
    if SY-SUBRC ne 0.
      clear ME->S_BDATA_EXTR_VIS-TEXTR.
    endif.

    call function 'VRM_SET_VALUES'
      exporting
        ID     = LF_ID
        VALUES = LT_TEXTR.

  endmethod.
