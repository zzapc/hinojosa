
class ZCL_VCXI_FBSP_PR_ADDON_PERF definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_FBSP_ADJ_BGDIM .

  constants C_PARID_COWGT type /VCXI/VKS_PARID value 'ZVCXI_FB_COWGT' ##NO_TEXT.
  constants C_PARID_TPERF type /VCXI/VKS_PARID value 'ZVCXI_F0_TPERF' ##NO_TEXT.
  constants C_PARID_NOLAS type /VCXI/VKS_PARID value 'ZVCXI_F0_NOLAS' ##NO_TEXT.

  methods GET_COWGT
    exporting
      !ES_COWGT type ZVCXI_FBS_S_COWGT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_COWGT
    importing
      !IS_COWGT type ZVCXI_FBS_S_COWGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_TPERF
    exporting
      !EF_TPERF type ZVCXI_F0S_TPERF
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_TPERF
    importing
      !IF_TPERF type ZVCXI_F0S_TPERF
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .
  methods GET_NOLAS
    exporting
      !EF_NOLAS type ZVCXI_F0S_NOLAS
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_NOLAS
    importing
      !IF_NOLAS type ZVCXI_F0S_NOLAS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_BGDIM type /VCXI/VKSC_IEVNT value 'RECALC_BGDIM' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_TPERF_CHANGED type /VCXI/VKSC_IEVNT value 'TPERF_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOLAS_CHANGED type /VCXI/VKSC_IEVNT value 'NOLAS_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_COWGT_CHANGED type /VCXI/VKSC_IEVNT value 'COWGT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RECALC_CONSU_REQ type /VCXI/VKSC_IEVNT value 'RECALC_CONSU_REQ' ##NO_TEXT.
  constants C_IAATY_TPERF type /VCXI/VSMC_IAATY value 'FB_AA_TPERF' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAVAL
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_PR_ADDON_PERF definition
class ZCL_VCXI_FBSP_PR_ADDON_PERF implementation.
  method GET_COWGT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COWGT ).
    move LS_PARAM-ATFLV to ES_COWGT-COWGT.
    move LS_PARAM-UNIT  to ES_COWGT-COWGT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOLAS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOLAS ).
    move LS_PARAM-ATFLV to EF_NOLAS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_RTE_SAVAL.

    data: LF_GAATY type /VCXI/VSMC_GAATY,
          LF_TPERF type ZVCXI_F0S_TPERF.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.
    field-symbols: <S_RTE_SAVAL> type /VCXI/VSMR_S_RTE_SAVAL,
                   <S_AVVAL>     type /VCXI/VSMR_S_RTE_RANGE_AVVAL.


*** Get Super
    RT_RTE_SAVAL = SUPER->GET_RTE_SAVAL( ).

    check ME->R_RTE_CADDON          is bound and
          ME->R_RTE_CADDON->R_ATYPE is bound.

***--------------------------------------------------------------------------------------
*** Aspect - Perforation Type
    try.
        ME->GET_TPERF( importing EF_TPERF = LF_TPERF ).

        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_TPERF
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
        append initial line to RT_RTE_SAVAL assigning <S_RTE_SAVAL>.
        move LF_GAATY to <S_RTE_SAVAL>-GAATY.

        append initial line to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
        move 'I'              to <S_AVVAL>-SIGN.
        move 'EQ'             to <S_AVVAL>-OPTION.
        move LF_TPERF         to <S_AVVAL>-LOW.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        return.
    endtry.

  endmethod.
  method GET_TPERF.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPERF ).
    move LS_PARAM-ATWRT to EF_TPERF.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

***   Bag Dimensions
      when C_IEVNT_I_RECALC_BGDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LF_UPDATE_ALL  type        ABAP_BOOL.
    data: LS_MQTYI       type        ZVCXI_XCSP_S_MQTYI.
    data: LT_GATE        type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MACHINE  type ref to ZCL_VCXI_XCSP_PR_MACHINE,
          LR_PR_MC       type ref to ZCL_VCXI_XCSP_PR_MC.

***--------------------------------------------------------------------------------------
*** Should all MC Reclosing Part's updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.

      clear: LR_PR_MACHINE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MACHINE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_MACHINE.
      endtry.
      if LR_PR_MACHINE is bound.
        move LR_PR_MACHINE->GET_MQTYI( ) to LS_MQTYI.
      endif.

    endif.

***--------------------------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

***   Calculate standard Consumption
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MC.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MC.
      endtry.
      if LR_PR_MC is bound.
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
      endif.
    endloop.

  endmethod.
  method SET_COWGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COWGT ).

    move IS_COWGT-COWGT     to LS_PARAM-ATFLV.
    move IS_COWGT-COWGT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_COWGT_CHANGED ).
    endif.

  endmethod.
  method SET_NOLAS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOLAS ).

    move IF_NOLAS           to LS_PARAM-ATFLV.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOLAS_CHANGED ).

    endif.

  endmethod.
  method SET_TPERF.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPERF ).

    move IF_TPERF           to LS_PARAM-ATWRT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TPERF_CHANGED ).

    endif.

  endmethod.
  method ZIF_VCXI_FBSP_ADJ_BGDIM~CALC_BGDIM_OUT.

    data: LS_COWGT type ZVCXI_FBS_S_COWGT.
    field-symbols: <S_BGDIM>  type ZVCXI_FBSP_S_BGDIM.

***--------------------------------------------------------------------------------------
*** Get Cutout Weight
    ME->GET_COWGT( importing ES_COWGT = LS_COWGT ).

    check LS_COWGT-COWGT is not initial.

***--------------------------------------------------------------------------------------
*** Adjust Bag Dimensions by Cutout Weight
    loop at CT_BGDIM assigning <S_BGDIM>.

***   Calculate Total Bag Weight
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = <S_BGDIM>-BGWGT
                                                          IF_CALCV_UOM_1 = <S_BGDIM>-BGWGT_UOM
                                                          IF_CALCV_2     = LS_COWGT-COWGT
                                                          IF_CALCV_UOM_2 = LS_COWGT-COWGT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                importing EF_CALCV       = <S_BGDIM>-BGWGT
                                                          EF_CALCV_UOM   = <S_BGDIM>-BGWGT_UOM ).

      if <S_BGDIM>-BGWGT lt 0.
        move 0 to <S_BGDIM>-BGWGT.
      endif.

    endloop.

  endmethod.
