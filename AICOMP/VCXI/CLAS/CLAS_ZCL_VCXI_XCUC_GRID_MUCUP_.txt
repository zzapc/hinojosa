
class ZCL_VCXI_XCUC_GRID_MUCUP definition
  public
  final
  create public .

public section.

  methods CHECK_CHANGED_DATA
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_MUCEL type ref to ZCL_VCXI_XCUC_MUCEL
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
protected section.

  data T_MUCUP_GRID type ZVCXI_XCUC_TT_MUCUP_GRID .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data T_FIELDCAT type LVC_T_FCAT .
  data R_MUCEL type ref to ZCL_VCXI_XCUC_MUCEL .

  methods GET_LAYOUT
    returning
      value(RS_LAYOUT) type LVC_S_LAYO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_ADD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DEL
    raising
      /VCXI/CX_CKX .
  methods INIT_DATA
    raising
      /VCXI/CX_CKX .
  methods BUILD_FIELDCAT
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_UCOMM
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .
  methods HANDLE_DATA_CHANGED
    for event DATA_CHANGED of CL_GUI_ALV_GRID
    importing
      !ER_DATA_CHANGED
      !E_ONF4
      !E_ONF4_BEFORE
      !E_ONF4_AFTER
      !E_UCOMM .
  methods HANDLE_DATA_CHANGED_FINISHED
    for event DATA_CHANGED_FINISHED of CL_GUI_ALV_GRID
    importing
      !E_MODIFIED
      !ET_GOOD_CELLS .
private section.
endclass. "ZCL_VCXI_XCUC_GRID_MUCUP definition
class ZCL_VCXI_XCUC_GRID_MUCUP implementation.
  method BUILD_FIELDCAT .

    data: LF_EDIT type LVC_EDIT.
    field-symbols: <S_FCAT> type LVC_S_FCAT.


***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        I_STRUCTURE_NAME       = 'ZVCXI_XCUC_S_MUCUP_GRID'
      changing
        CT_FIELDCAT            = ME->T_FIELDCAT
      exceptions
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        others                 = 3.

    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Get Lock Status
    if ME->R_MUCEL->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_FALSE.
      LF_EDIT = ABAP_TRUE.
    endif.

***--------------------------------------------------------------------------------------
*** Modify Field Catalog
    loop at ME->T_FIELDCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'DATEL'.
          <S_FCAT>-EDIT = LF_EDIT.

        when 'IEVNT'.
          <S_FCAT>-EDIT = LF_EDIT.

        when 'FDACT'.
          <S_FCAT>-EDIT     = LF_EDIT.
          <S_FCAT>-CHECKBOX = ABAP_TRUE.

      endcase.
    endloop.

  endmethod.
method CHECK_CHANGED_DATA.

  if ME->R_GRID is bound.
*** Check for Changes
    ME->R_GRID->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
  method CONSTRUCTOR.

    ME->R_MUCEL = IR_MUCEL.

  endmethod.
method DO_FREE .

*** Check for Changes
  if ME->R_GRID is bound.
    ME->R_GRID->CHECK_CHANGED_DATA( ).
  endif.

  if ME->R_GRID is bound.
    ME->R_GRID->FREE( exceptions
                        CNTL_ERROR        = 1
                        CNTL_SYSTEM_ERROR = 2
                        others            = 3 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_GRID.
  endif.

  if ME->R_CONTAINER is bound.
    ME->R_CONTAINER->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_CONTAINER.
  endif.

  clear ME->R_MUCEL.

endmethod.
  method GET_LAYOUT.

    RS_LAYOUT-CWIDTH_OPT = 'X'.
    RS_LAYOUT-SEL_MODE   = 'A'.

  endmethod.
method HANDLE_DATA_CHANGED.

  data: LS_CHECK    type DCINSPCHK.
  data: LT_CHECK type table of DCINSPCHK.
  field-symbols: <S_MOD_CELL> type LVC_S_MODI.


  loop at ER_DATA_CHANGED->MT_MOD_CELLS assigning <S_MOD_CELL>.
    case <S_MOD_CELL>-FIELDNAME.
      when 'DATEL'.
        check <S_MOD_CELL>-VALUE is not initial.

***     Check Data Element
        translate <S_MOD_CELL>-VALUE to upper case.
        call function 'DDIF_DD_CHECK'
          exporting
            OBJNAME  = conv DDOBJNAME( <S_MOD_CELL>-VALUE )
            OBJTYPE  = 'DTEL'
          tables
            CHECKTAB = LT_CHECK.

***     Process Check Result
        loop at LT_CHECK into LS_CHECK where SUBRC ne 0.
          <S_MOD_CELL>-ERROR = ABAP_TRUE.
          ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY( I_MSGID     = LS_CHECK-MSGID
                                               I_MSGTY     = 'E'
                                               I_MSGNO     = LS_CHECK-MSGNO
                                               I_MSGV1     = LS_CHECK-OBJNAME
                                               I_FIELDNAME = <S_MOD_CELL>-FIELDNAME
                                               I_ROW_ID    = <S_MOD_CELL>-ROW_ID
                                               I_TABIX     = <S_MOD_CELL>-TABIX ).
        endloop.
    endcase.
  endloop.

*** Refresh ALV - Set New Ok Code to force PBO
  if E_ONF4_BEFORE ne ABAP_TRUE.
    CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).
  endif.

endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MUCUP_GRID type ZVCXI_XCUC_S_MUCUP_GRID.
    data: LT_MUCUP      type ZVCXI_XCUC_TT_MUCUP.
    field-symbols: <S_MUCUP> type ZVCXI_XCUC_S_MUCUP.


    check E_MODIFIED eq ABAP_TRUE.

    try.
***     Get current Parameter
        LT_MUCUP = ME->R_MUCEL->T_MUCUP.

***     Process Updates
        loop at ME->T_MUCUP_GRID into LS_MUCUP_GRID.
          check LINE_EXISTS( ET_GOOD_CELLS[ ROW_ID = SY-TABIX ] ).

          assign LT_MUCUP[ R_PARAM = LS_MUCUP_GRID-R_PARAM ] to <S_MUCUP>.
          <S_MUCUP>-DATEL = LS_MUCUP_GRID-DATEL.
          <S_MUCUP>-IEVNT = LS_MUCUP_GRID-IEVNT.
          <S_MUCUP>-FDACT = LS_MUCUP_GRID-FDACT.
        endloop.

***     Set Updated Parameter
        ME->R_MUCEL->SET_MUCUP( IT_MUCUP = LT_MUCUP ).


      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_TOOLBAR.

    data:  LF_DISABLED type ABAP_BOOL.

    try.
***     Lock Status
        if ME->R_MUCEL->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
          move ABAP_TRUE to LF_DISABLED.
        endif.

***----------------------------------------------------------------------------
***     Insert Toolbar elements
        append value #( FUNCTION  = 'ADD'
                        TEXT      = 'Add'(F01)
                        ICON      = ICON_INSERT_ROW
                        DISABLED  = LF_DISABLED
                      ) to E_OBJECT->MT_TOOLBAR.

        append value #( FUNCTION  = 'DEL'
                        TEXT      = 'Delete'(F02)
                        ICON      = ICON_DELETE_ROW
                        DISABLED  = LF_DISABLED
                      ) to E_OBJECT->MT_TOOLBAR.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_ADD.

    data: LS_REGELMNT_PARAM type /VCXI/VKSC_S_REGELMNT_PARAM,
          LS_RETURN         type DDSHRETVAL,
          LS_MUCUP          type ZVCXI_XCUC_S_MUCUP.
    data: LT_PARAM_SHLP type table of ZVCXI_XCUC_S_PARAM_SHLP,
          LT_RETURN     type standard table of DDSHRETVAL,
          LT_MUCUP      type ZVCXI_XCUC_TT_MUCUP.
    data: LR_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT,
          LR_OBJECT  type ref to /VCXI/IF_CKX_OBJECT.


***--------------------------------------------------------------------------------------
*** Add Leading Object to Paramter List
    clear LR_OBJECT.
    if not LINE_EXISTS( ME->R_MUCEL->T_MUCUP[ R_PARAM = cast #( LR_OBJECT ) ] ).  "Initial Parameter = Leading Object
      append value #( PARID   = 'LEOKY'
                      DESCR   = 'Leading Object'
                    ) to LT_PARAM_SHLP.
    endif.

*** Get Parameter of all assigned SmartVC Customizing Elements
    loop at ME->R_MUCEL->T_MUSCE into LR_OBJECT.
      LR_CUELMNT ?= LR_OBJECT.
      check LR_CUELMNT->R_REGELMNT is bound.

      loop at LR_CUELMNT->R_REGELMNT->/VCXI/IF_VKSC_REGELMNT_PARAM~T_REGELMNT_PARAM into LS_REGELMNT_PARAM
                                                                                   where PARSP eq ABAP_TRUE.
        if not LINE_EXISTS( LT_PARAM_SHLP[ PARID = LS_REGELMNT_PARAM-R_PARAM->/VCXI/IF_CKX_OBJECT~GET_GUID( ) ] ) and
           not LINE_EXISTS( ME->R_MUCEL->T_MUCUP[ R_PARAM = LS_REGELMNT_PARAM-R_PARAM ] ).
          append value #( PARID   = LS_REGELMNT_PARAM-R_PARAM->/VCXI/IF_CKX_OBJECT~GET_GUID( )
                          DESCR   = LS_REGELMNT_PARAM-R_PARAM->/VCXI/IF_CKX_OBJECT~GET_DESCR( )
                        ) to LT_PARAM_SHLP.
        endif.
      endloop.
    endloop.

***--------------------------------------------------------------------------------------
*** Call Search Help
    call function 'F4IF_INT_TABLE_VALUE_REQUEST'
      exporting
        DDIC_STRUCTURE  = 'ZVCXI_XCUC_S_PARAM_SHLP'
        RETFIELD        = 'PARID'
        VALUE_ORG       = 'S'
        MULTIPLE_CHOICE = 'X'
      tables
        VALUE_TAB       = LT_PARAM_SHLP
        RETURN_TAB      = LT_RETURN
      exceptions
        PARAMETER_ERROR = 1
        NO_VALUES_FOUND = 2
        others          = 3.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Process Result
    LT_MUCUP = ME->R_MUCEL->T_MUCUP.
    loop at LT_RETURN into LS_RETURN.
      clear LS_MUCUP.
      if LS_RETURN-FIELDVAL ne 'LEOKY'.
        LS_MUCUP-R_PARAM ?= /VCXI/CL_VKSC_PARAM=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = conv /VCXI/CKX_GUID( LS_RETURN-FIELDVAL ) ).
      endif.
      insert LS_MUCUP into table LT_MUCUP.
    endloop.
    ME->R_MUCEL->SET_MUCUP( IT_MUCUP = LT_MUCUP ).


  endmethod.
  method HANDLE_UC_DEL.

    data: LS_ROW   type LVC_S_ROW.
    data: LT_ROW   type LVC_T_ROW,
          LT_MUCUP type ZVCXI_XCUC_TT_MUCUP.


*** Get selected Rows
    ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

    LT_MUCUP = ME->R_MUCEL->T_MUCUP.

*** Remove selected Parameter
    loop at LT_ROW into LS_ROW.
      delete LT_MUCUP where R_PARAM eq ME->T_MUCUP_GRID[ LS_ROW-INDEX ]-R_PARAM.
    endloop.

*** Set remaining Update Parameter
    ME->R_MUCEL->SET_MUCUP( IT_MUCUP = LT_MUCUP ).

  endmethod.
  method HANDLE_UCOMM.

    try.
        case E_UCOMM.
          when 'ADD'.
            ME->HANDLE_UC_ADD( ).
          when 'DEL'.
            ME->HANDLE_UC_DEL( ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

*** Refresh ALV - Set New Ok Code to force PBO
    CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).

  endmethod.
method INIT_CONTAINER .

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = '0130CC_MUCUP'
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

endmethod.
  method INIT_DATA.

    data: LS_MUCUP type ZVCXI_XCUC_S_MUCUP,
          LS_DD04V type DD04V.
    data: LR_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT,
          LR_OBJECT  type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_MUCUP_GRID> type ZVCXI_XCUC_S_MUCUP_GRID.

    clear ME->T_MUCUP_GRID.

    loop at ME->R_MUCEL->T_MUCUP into LS_MUCUP.
      append value #( R_PARAM = LS_MUCUP-R_PARAM
                      DATEL   = LS_MUCUP-DATEL
                      IEVNT   = LS_MUCUP-IEVNT
                      FDACT   = LS_MUCUP-FDACT
                    ) to ME->T_MUCUP_GRID assigning <S_MUCUP_GRID>.

***   Parameter Description
      ZCL_VCXI_XCUC_MUCEL=>GET_PARAM_INFO( exporting IR_PARAM = <S_MUCUP_GRID>-R_PARAM
                                           importing EF_PARID = <S_MUCUP_GRID>-PARID
                                                     EF_DESCR = <S_MUCUP_GRID>-PARAM_DESCR ).

***   Get Data Element Description
      if <S_MUCUP_GRID>-DATEL is not initial.
        call function 'DDIF_DTEL_GET'
          exporting
            NAME          = <S_MUCUP_GRID>-DATEL
            LANGU         = SY-LANGU
          importing
            DD04V_WA      = LS_DD04V
          exceptions
            ILLEGAL_INPUT = 1.
        if SY-SUBRC eq 0.
          <S_MUCUP_GRID>-DATEL_DESCR = LS_DD04V-DDTEXT.
        endif.
      endif.
    endloop.

  endmethod.
method INIT_GRID .

  if ME->R_GRID is not bound.
    create object ME->R_GRID
      exporting
        I_PARENT          = ME->R_CONTAINER
      exceptions
        ERROR_CNTL_CREATE = 1
        ERROR_CNTL_INIT   = 2
        ERROR_CNTL_LINK   = 3
        ERROR_DP_CREATE   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Set Enter as Event
    ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

*** Set Event Hanlder for Input
    set handler ME->HANDLE_DATA_CHANGED_FINISHED for ME->R_GRID.
    set handler ME->HANDLE_DATA_CHANGED          for ME->R_GRID.

*** Set Eventhandler for Toolbar
    set handler ME->HANDLE_TOOLBAR             for ME->R_GRID.
    set handler ME->HANDLE_UCOMM               for ME->R_GRID.

  endif.

endmethod.
  method REFRESH_GRID .

    data:   LS_LAYOUT            type LVC_S_LAYO.
    data:   LT_TOOLBAR_EXCLUDING type UI_FUNCTIONS.

*** Initialized Data
    ME->INIT_DATA( ).

*** Build Field Catalog
    ME->BUILD_FIELDCAT( ).

*** Initial Display
    if ME->R_GRID is not bound.
      ME->INIT_CONTAINER( ).
      ME->INIT_GRID( ).

      ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY( exporting
                                                 IT_TOOLBAR_EXCLUDING          = value #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
                                                 IS_LAYOUT                     = ME->GET_LAYOUT( )
                                               changing
                                                 IT_FIELDCATALOG               = ME->T_FIELDCAT
                                                 IT_OUTTAB                     = ME->T_MUCUP_GRID
                                               exceptions
                                                 INVALID_PARAMETER_COMBINATION = 1
                                                 PROGRAM_ERROR                 = 2
                                                 TOO_MANY_LINES                = 3
                                                 others                        = 4 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

*** Update of Data
    else.
      ME->R_GRID->SET_FRONTEND_FIELDCATALOG( IT_FIELDCATALOG = ME->T_FIELDCAT ).
      ME->R_GRID->SET_FRONTEND_LAYOUT( IS_LAYOUT = ME->GET_LAYOUT( ) ).
      ME->R_GRID->REFRESH_TABLE_DISPLAY( exceptions FINISHED = 1 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
