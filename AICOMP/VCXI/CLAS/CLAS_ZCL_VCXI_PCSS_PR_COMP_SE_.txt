
class ZCL_VCXI_PCSS_PR_COMP_SE definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_COMP_SE
  create public .

public section.

  constants C_IPRVT_PC_COMP_SE type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSS_COMP_SE'. "#EC NOTEXT

  methods GET_FLUTE
    returning
      value(RF_FLUTE) type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .
  methods SET_FLUTE
    importing
      !IF_FLUTE type ZVCXI_PCS_FLUTE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_FLUTE type /VCXI/VKSC_IEVNT value 'INIT_FLUTE'. "#EC NOTEXT
  constants C_IEVNT_O_FLUTE_CHANGED type /VCXI/VKSC_IEVNT value 'FLUTE_CHANGED'. "#EC NOTEXT
  constants C_PARID_FLUTE type /VCXI/VKS_PARID value 'ZVCXI_PC_FLUTE'. "#EC NOTEXT

  methods HANDLE_INIT_FLUTE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PCSS_PR_COMP_SE definition
class ZCL_VCXI_PCSS_PR_COMP_SE implementation.
method GET_FLUTE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).
  move LS_PARAM-ATWRT to RF_FLUTE.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.

    when C_IEVNT_I_INIT_FLUTE.
      ME->HANDLE_INIT_FLUTE( ).

  endcase.

endmethod.
method HANDLE_INIT_FLUTE.

  data:  LF_FLUTE           type        ZVCXI_PCS_FLUTE.
  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SPEC       type ref to /VCXI/CL_VKSR_GATE,
         LR_ICONT           type ref to ZIF_VCXI_P0SS_ICONT,
         LR_PR_BOARD        type ref to ZCL_VCXI_PCSS_PR_BOARD,
         LR_PR_MS_SHTPR     type ref to ZCL_VCXI_PCSS_PR_MS_SHTPR.

***------------------------------------------------------------------------------------------------
*** Get Context
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_SPEC_SE=>C_IPRVT_P0_SPEC_SE
                                   IF_INUSE = ABAP_TRUE ).
  read table LT_GATE into LR_GATE_SPEC index 1.
  try.
      move LR_GATE_SPEC->R_CLSPR ?to LR_ICONT.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_ICONT.
  endtry.
  check LR_ICONT is bound.

***------------------------------------------------------------------------------------------------
*** Get Board Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                   IF_INUSE = ABAP_TRUE ).


  loop at LT_GATE into LR_GATE.
*** Check is child of Specification
    if LR_GATE->GET_PARENT( ) eq LR_GATE_SPEC.

***   Check Board Mode against Context
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_BOARD.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_BOARD, LR_GATE.
      endtry.
      check LR_PR_BOARD is bound.

      if ( LR_PR_BOARD->GET_MBOAR( ) eq ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_S   and
           LR_ICONT->GET_ICONT( )    eq ZCL_VCXI_PCSS_PR_SPEC=>C_ICONT_SALES    ) or
         ( LR_PR_BOARD->GET_MBOAR( ) eq ZCL_VCXI_PCSS_PR_BOARD=>C_MBOAR_P   and
           LR_ICONT->GET_ICONT( )    eq ZCL_VCXI_PCSS_PR_SPEC=>C_ICONT_PROD     ) .
        exit.
      else.
        clear LR_PR_BOARD.
      endif.
    endif.
  endloop.

  if LR_PR_BOARD is not bound.
***------------------------------------------------------------------------------------------------
*** Get Sheet Procurement Reference
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_MS_SHTPR=>C_IPRVT_P0_MS_SHTPR
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    try.
        if LR_GATE          is bound and
           LR_GATE->R_CLSPR is bound.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_SHTPR.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.

    check LR_PR_MS_SHTPR is bound.

*** Get Flute by Sheet Procurement
    LF_FLUTE = LR_PR_MS_SHTPR->GET_FLUTE( ).

  else.

*** Get Flute by Board ID
    LF_FLUTE = LR_PR_BOARD->GET_FLUTE( ).

  endif.

*** Set Flute
  check LF_FLUTE is not initial.
  ME->SET_FLUTE( IF_FLUTE = LF_FLUTE ).

endmethod.
method SET_FLUTE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).

  move IF_FLUTE to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FLUTE_CHANGED ).
  endif.

endmethod.
