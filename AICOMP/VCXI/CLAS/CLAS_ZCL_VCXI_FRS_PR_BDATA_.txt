
class ZCL_VCXI_FRS_PR_BDATA definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  methods CHECK_VRREL
    returning
      value(RF_RESULT) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods GET_MAKTX
    exporting
      !EF_MAKTX type MAKTX
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_IEVNT_O_NOLAY_CHANGED type /VCXI/VKSC_IEVNT value 'NOLAY_CHANGED' ##NO_TEXT.

  methods GET_PRVDR_VERS
    importing
      !IF_RELEASED type ABAP_BOOL default ABAP_TRUE
    returning
      value(RT_GATE) type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FRS_PR_BDATA definition
class ZCL_VCXI_FRS_PR_BDATA implementation.
  method CHECK_VRREL.

*** Get Release Versions
    if ME->GET_PRVDR_VERS( IF_RELEASED = ABAP_TRUE ) is initial.
      RF_RESULT = ABAP_FALSE.
    else.
      RF_RESULT = ABAP_TRUE.
    endif.

  endmethod.
  method GET_MAKTX.

    data: LS_CLTABLE type CLTABLE,
          LS_MAKT    type MAKT.
    data: LT_CLTABLE type TT_CLTABLE.

    clear EF_MAKTX.

***----------------------------------------------------------------------------
*** Get Application Data of LO-VC
    call function 'CEI0_DDB_HAS_OBJECT_AREA'
      tables
        OBJECTS = LT_CLTABLE
      exceptions
        others  = 0.

***----------------------------------------------------------------------------
*** Get Material Description strucuture
    read table LT_CLTABLE into LS_CLTABLE
                          with key TNAME = 'MAKT'.
    check SY-SUBRC eq 0.

*** Read Container
    CL_ABAP_CONTAINER_UTILITIES=>READ_CONTAINER_C(
      exporting
        IM_CONTAINER           = LS_CLTABLE-TABLE
      importing
        EX_VALUE               = LS_MAKT
      exceptions
        ILLEGAL_PARAMETER_TYPE = 1 ).
    check SY-SUBRC eq 0.

*** Transfer the Material description
    move LS_MAKT-MAKTX to EF_MAKTX.

  endmethod.
  method GET_PRVDR_VERS.

    data: LR_GATE    type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_VERS type ref to ZCL_VCXI_FRS_PR_VERS.


*** Get all Versions
    RT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FRS_PR_VERS=>C_IPRVT_VERS
                                     IF_INUSE = ABAP_TRUE ).
    check RT_GATE is not initial and
          IF_RELEASED ne ABAP_UNDEFINED.

    loop at RT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_VERS.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_VERS.
      endtry.

      check LR_PR_VERS is not bound or
            LR_PR_VERS->IS_RELEASED( ) ne IF_RELEASED.
      delete RT_GATE.
    endloop.

  endmethod.
