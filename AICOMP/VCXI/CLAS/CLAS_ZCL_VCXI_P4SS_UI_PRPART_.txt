
class ZCL_VCXI_P4SS_UI_PRPART definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_XPART
  create public .

public section.

  data S_PRPART_VIS type ZVCXI_P4SS_S_PRPART_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_PRP_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
protected section.

  data R_PR_PRPART type ref to ZCL_VCXI_P4SS_PR_PRPART .
  data R_TOOLBAR type ref to ZCL_VCXI_XCS_TOOLBAR_PRVDR .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P4SS_UI_PRPART definition
class ZCL_VCXI_P4SS_UI_PRPART implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P4SS_UI_PRPART_BIND'
      exporting
        IR_UI_PRPART  = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

***--------------------------------------------------------------------------------------
*** Create Toolbar to add Connection
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TOOLBAR'
        IF_IPRVT          = ZIF_VCXI_P4SS_PRDTL=>C_IPRVT_P4_PRDTL.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_PRPART.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_ALLOW_MFG type ABAP_BOOL.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).


***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Hide Material Description Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_MAKTX' and
             ME->S_PRPART_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Disable Material Description if generated
          if SCREEN-NAME cp '*-MAKTX' and
             ME->S_PRPART_VIS-FOVRR_MAKTX eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.

***       If no Dummy Material, then set to read only
          if ME->R_PR_PRPART->IS_DUMMY( ) eq ABAP_FALSE.
            if SCREEN-GROUP1            eq 'DUM'.
              move 0 to SCREEN-INPUT.
              if SCREEN-GROUP3 eq 'HID'.  "Hide by Screen Group
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              endif.
            endif.
          else.
***         If Dummy Material block the Procurement Option
            if SCREEN-GROUP1                eq 'PUR'.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Hide Handling Dimension Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_HNDDIM' and
             ME->S_PRPART_VIS-FOVRR_HNDDIM eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Handling Dimension changeable if Override Flag is set
          if SCREEN-GROUP2 eq 'OHD'.
            if ME->S_PRPART_VIS-FOVRR_HNDDIM eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = value #( ( ME->R_OLD_GATE ) ) ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_PRPART_VIS  type ZVCXI_P4SS_S_PRPART_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_PRPART is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_PRPART_VIS.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_PRPART_VIS-MATNR ne LS_PRPART_VIS-MATNR.
      ME->R_PR_PRPART->SET_MATNR( IF_MATNR = LS_PRPART_VIS-MATNR
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Description
    if ME->S_PRPART_VIS-MAKTX        ne LS_PRPART_VIS-MAKTX or
       ME->S_PRPART_VIS-FOVRR_MAKTX  ne LS_PRPART_VIS-FOVRR_MAKTX.
      if LS_PRPART_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        ME->R_PR_PRPART->SET_MAKTX( IF_MAKTX = LS_PRPART_VIS-MAKTX
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_PRPART->SET_MAKTX( IF_MAKTX = LS_PRPART_VIS-MAKTX
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Procurement Option
    if ME->S_PRPART_VIS-PURCH ne LS_PRPART_VIS-PURCH.
      ME->R_PR_PRPART->SET_PURCH( IF_PURCH = LS_PRPART_VIS-PURCH
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
    if ME->S_PRPART_VIS-FPTOS ne LS_PRPART_VIS-FPTOS.
      ME->R_PR_PRPART->SET_FPTOS( IF_FPTOS = LS_PRPART_VIS-FPTOS
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Product Hierarchy
    if ME->S_PRPART_VIS-PRODH ne LS_PRPART_VIS-PRODH.
      ME->R_PR_PRPART->SET_PRODH( IF_PRODH = LS_PRPART_VIS-PRODH
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Handling Dimension if it is "Overriden"
    if ME->S_PRPART_VIS-FOVRR_HNDDIM ne ABAP_FALSE and
       ME->S_PRPART_VIS-S_HNDDIM     ne LS_PRPART_VIS-S_HNDDIM.
      ME->R_PR_PRPART->SET_HNDDIM( IS_HNDDIM = LS_PRPART_VIS-S_HNDDIM
                                   IF_SETBY  = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Handling Dimension
    if ME->S_PRPART_VIS-FOVRR_HNDDIM ne LS_PRPART_VIS-FOVRR_HNDDIM.
      ME->R_PR_PRPART->SET_HNDDIM( IF_FOVRR = LS_PRPART_VIS-FOVRR_HNDDIM ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_PRPART.

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    free: ME->S_PRPART_VIS.
    ME->S_PRPART_VIS-S_XPART_VIS = ME->S_XPART_VIS.
    check ME->R_PR_PRPART is bound.

***------------------------------------------------------------------------------------------------
*** Get Material Number
    ME->S_PRPART_VIS-MATNR = ME->R_PR_PRPART->GET_MATNR( ).

*** Get Material Description
    ME->S_PRPART_VIS-MAKTX = ME->R_PR_PRPART->GET_MAKTX( importing EF_FOVRR = ME->S_PRPART_VIS-FOVRR_MAKTX ).

*** Get Procurement Option
    ME->S_PRPART_VIS-PURCH = ME->R_PR_PRPART->GET_PURCH( ).
    ME->S_PRPART_VIS-FPTOS = ME->R_PR_PRPART->GET_FPTOS( ).

*** Get Product Hierarchy
    ME->S_PRPART_VIS-PRODH = ME->R_PR_PRPART->GET_PRODH( ).

***------------------------------------------------------------------------------------------------
*** Get Handling Dimensions
    ME->S_PRPART_VIS-S_HNDDIM = ME->R_PR_PRPART->GET_HNDDIM( importing EF_FOVRR = ME->S_PRPART_VIS-FOVRR_HNDDIM ).

  endmethod.
