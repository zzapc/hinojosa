
class ZCL_VCXI_FBSR_BL_PSTEP_BMAKE definition
  public
  inheriting from ZCL_VCXI_FBSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_FBSR_ADJ_BGDIM .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_BMAKE type /VCXI/VSMC_IPSTP value 'FB_PS_BMAKE' ##NO_TEXT.
  data T_RHNDL_IN type ZVCXI_FFSR_TT_RHNDL read-only .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_BMAKE
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_IMFXC
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods REPLACE_MFSI_BY_MFMI
    redefinition .
  methods SERIALIZE
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
protected section.

  data T_FIDIM_IN type ZVCXI_FBSR_TT_FIDIM .
  data S_BGDIM_OUT type ZVCXI_FBSP_S_BGDIM .
  data T_MS_HANDLE type ZVCXI_FBSR_TT_MS_HANDLE .
  constants C_IATYP_AT_BMAKE type /VCXI/VSMC_IATYP value 'FB_AT_BMAKE' ##NO_TEXT.
  data F_BPDIR type ZVCXI_FBS_BPDIR .

  methods ADD_SPVRE_MFMI_L
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFSI_L
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_BMAKE
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_PR_BMAKE) type ref to ZCL_VCXI_FBSS_PR_BMAKE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_MS_EMAT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
      !IR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_PR_MS_EMAT type ref to ZCL_VCXI_FFSS_PR_MS_EMAT
      !ER_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_MS_FPROC
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
      !IR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_PR_MS_FPROC type ref to ZCL_VCXI_FFSS_PR_MS_FPROC
      !ER_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_PSCALE
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
      !IR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RT_GATE_PSCALE) type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_XCONI
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
      !IR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_PR_XCONI type ref to ZCL_VCXI_F0SS_PR_XCONI
      !ER_GATE_XCONI type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_HANDLE
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_BMAKE
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_HANDLE
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_DIMEN
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_RHNDL
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSR_BL_PSTEP_BMAKE definition
class ZCL_VCXI_FBSR_BL_PSTEP_BMAKE implementation.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_NOFIL type ZVCXI_FBS_NOFIL,
          LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
          LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE.
    field-symbols: <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

*** Get Number of Bag Films
    LF_NOFIL = LINES( ME->T_FIDIM_IN ).

***--------------------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***--------------------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Number of Films
        when 'FB_LT_DI_NOFIL'.
          move LF_NOFIL                       to LF_LDVAL.
          move 'ST'                           to LF_LDUOM.

***     Number of Films
        when 'FB_LT_DO_NOOUT'.
          move ME->S_BGDIM_OUT-NOOUT          to LF_LDVAL.
          move 'ST'                           to LF_LDUOM.

***     Bag Type
        when 'FB_LT_VP_IBAGT'.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                            to <S_LVVAL>-SIGN.
          move 'EQ'                           to <S_LVVAL>-OPTION.
          move ME->S_BGDIM_OUT-IBAGT          to <S_LVVAL>-LOW.

***     Bag Part Direction
        when 'FB_LT_VP_BPDIR'.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                            to <S_LVVAL>-SIGN.
          move 'EQ'                           to <S_LVVAL>-OPTION.
          move ME->F_BPDIR                    to <S_LVVAL>-LOW.

        when others.
          continue.

      endcase.

***--------------------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_HANDLE.

    data: LS_MS_HANDLE type        ZVCXI_FBSR_S_MS_HANDLE,
          LS_LEOKY     type        /VCXI/VKSR_S_LEOKY,
          LS_PARAM     type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE           type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_HANDLE type ref to /VCXI/CL_VKSR_SPVRE.

    check ME->T_MS_HANDLE is not initial.

***--------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_HANDLE'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***--------------------------------------------------------------------------------------
    loop at ME->T_MS_HANDLE into LS_MS_HANDLE.

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_HANDLE
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_HANDLE to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_HANDLE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
***   Set Material Number
      clear LS_LEOKY.
      move LS_MS_HANDLE-MATNR                           to LS_LEOKY-LEOKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_LEOKY-SETBY.
      LR_SPVRE_MC_HANDLE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***--------------------------------------------------------------------------------------
***   Set Average Consumption
      clear LS_PARAM.
      move ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PARID_AVGCO_P to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_MS_HANDLE-AVGCO                          to LS_PARAM-ATFLV.
      move LS_MS_HANDLE-AVGCO_UOM                      to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_MC_HANDLE->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Average Consumption Per
      clear LS_PARAM.
      move ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PARID_AVGCP_P to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_MS_HANDLE-AVGCP                          to LS_PARAM-ATFLV.
      move LS_MS_HANDLE-AVGCP_UOM                      to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_MC_HANDLE->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Set Purchase Flag
      clear LS_PARAM.
      move ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PARID_PURCH   to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
      move LS_MS_HANDLE-PURCH                          to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_MC_HANDLE->SET_PARAM( IS_PARAM = LS_PARAM ).

      if LS_MS_HANDLE-PURCH ne ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PURCH_STOCK.
***     Set Price
        clear LS_PARAM.
        move ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PARID_PRICE   to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
        move LS_MS_HANDLE-PRICE                          to LS_PARAM-ATFLV.
        move LS_MS_HANDLE-PRICE_CURR                     to LS_PARAM-CURKY.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
        LR_SPVRE_MC_HANDLE->SET_PARAM( IS_PARAM = LS_PARAM ).

***     Set Price Unit
        clear LS_PARAM.
        move ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PARID_PRICP_P  to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
        move LS_MS_HANDLE-PRICP                           to LS_PARAM-ATFLV.
        move LS_MS_HANDLE-PRICP_UOM                       to LS_PARAM-UNIT.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
        LR_SPVRE_MC_HANDLE->SET_PARAM( IS_PARAM = LS_PARAM ).

***     Set Vendor
        clear LS_PARAM.
        move ZCL_VCXI_FBSP_PR_MC_HANDLE=>C_PARID_LIFNR    to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
        move LS_MS_HANDLE-LIFNR                           to LS_PARAM-ATWRT.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
        LR_SPVRE_MC_HANDLE->SET_PARAM( IS_PARAM = LS_PARAM ).

        if LS_MS_HANDLE-T_PSCALE is not initial.
***       Add Price Scale
          ME->ADD_SPVRE_PSCALE_MGR( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                              IR_SPVRE_PARENT = LR_SPVRE_MC_HANDLE
                                              IT_PSCALE       = LS_MS_HANDLE-T_PSCALE
                                    changing  CT_SPVRE        = CT_SPVRE ).
        endif.

      endif.

    endloop.

  endmethod.
method ADD_SPVRE_MFMI_L.

  data: LF_POSID type        /VCXI/VKSR_POSID.
  data: LS_LEOKY type        /VCXI/VKSR_S_LEOKY,
        LS_PARAM type        /VCXI/VKSR_S_PARAM,
        LS_FIDIM type        ZVCXI_FBSR_S_FIDIM.
  data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
        LR_SPVRE_MFMI_L type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFMI_L'
                                      IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

  loop at ME->T_FIDIM_IN into LS_FIDIM where MATNR is not initial.
*** Use Film Dimension Sequence for Position of Tree
    move SY-TABIX to LF_POSID.

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MFMI_L
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_MFMGR.
    append LR_SPVRE_MFMI_L to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MFMI_L->SET_INUSE( IF_INUSE = ABAP_TRUE ).

*** Set Position
    LR_SPVRE_MFMI_L->SET_POSID( IF_POSID = LF_POSID ).

***--------------------------------------------------------------------------------------
*** Set Leading Object
    clear LS_LEOKY.
    move LS_FIDIM-MATNR                                               to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_LEOKY-SETBY.
    LR_SPVRE_MFMI_L->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

*** Set Consumption Factor for Material Flow In
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_MFMI_P=>ZIF_VCXI_XCSP_MFI~C_PARID_MFICF     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-NOFIL                                               to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_XCSS_PR_MS=>C_PARID_PURCH                           to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                            to LS_PARAM-PARTY.
    move LS_FIDIM-PURCH                                               to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Vendor
    clear LS_PARAM.
    move 'ZVCXI_XC_LIFNR'                                             to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                            to LS_PARAM-PARTY.
    move LS_FIDIM-LIFNR                                               to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Film Width
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_FIWID   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-FIWID                                               to LS_PARAM-ATFLV.
    move LS_FIDIM-FIWID_UOM                                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Repeat Length
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_RELEN   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-RELEN                                               to LS_PARAM-ATFLV.
    move LS_FIDIM-RELEN_UOM                                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Film Thickness (Internal)
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_FITIN   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-FITIN                                               to LS_PARAM-ATFLV.
    move LS_FIDIM-FITIN_UOM                                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Film Thickness (External)
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_FITEX   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-FITEX                                               to LS_PARAM-ATFLV.
    move LS_FIDIM-FITEX_UOM                                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Surface Weight
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_SURWT   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-SURWT                                               to LS_PARAM-ATFLV.
    move LS_FIDIM-SURWT_UOM                                           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Ups
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_NOUPS   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-NOUPS                                               to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Outs
    clear LS_PARAM.
    move ZCL_VCXI_FFSP_PR_MFMI_L=>ZIF_VCXI_FFSP_FIDIM~C_PARID_NOOUT   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                            to LS_PARAM-PARTY.
    move LS_FIDIM-NOOUT                                               to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Price Scale Manager
    IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MFMI_L
                                            IT_PSCALE       = LS_FIDIM-T_PSCALE
                                  changing  CT_SPVRE        = CT_SPVRE ).
  endloop.

endmethod.
  method ADD_SPVRE_MFSI_L.

    data: LF_TABIX type        I,
          LF_IMFXC type        ZVCXI_XCSP_IMFXC,
          LF_NEXTL type        ZVCXI_XCSP_NEXTL,
          LF_POSID type        /VCXI/VKSR_POSID.
    data: LS_PARAM type        /VCXI/VKSR_S_PARAM,
          LS_FIDIM type        ZVCXI_FBSR_S_FIDIM.
    data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFSI_L type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_L'
                                        IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

    loop at ME->T_IMFXC_IN into LF_IMFXC.
      move SY-TABIX to LF_TABIX.

      read table ME->T_NEXTL into LF_NEXTL index LF_TABIX.
      if SY-SUBRC ne 0.
        clear LF_NEXTL.
      endif.

      clear LS_FIDIM.
      read table ME->T_FIDIM_IN into LS_FIDIM with key IMFXC = LF_IMFXC.

***   Use Film Dimension Sequence for Position of Tree
      move SY-TABIX to LF_POSID.

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MFSI_L
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MFSI_L to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MFSI_L->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***   Set Position
      LR_SPVRE_MFSI_L->SET_POSID( IF_POSID = LF_POSID ).

      if LS_FIDIM-RELEN is not initial.
***     Set Repeat Length
        clear LS_PARAM.
        move ZIF_VCXI_FFSP_FIDIM=>C_PARID_RELEN                         to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                          to LS_PARAM-PARTY.
        move LS_FIDIM-RELEN                                             to LS_PARAM-ATFLV.
        move LS_FIDIM-RELEN_UOM                                         to LS_PARAM-UNIT.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_USER                           to LS_PARAM-SETBY.
        LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = LS_PARAM ).
      endif.

***   Set MF X-Connect
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC                           to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                            to LS_PARAM-PARTY.
      move LF_IMFXC                                                     to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
      LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set "Next Low-Level Code" Flag
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL                         to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                            to LS_PARAM-PARTY.
      move LF_NEXTL                                                     to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                             to LS_PARAM-SETBY.
      LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Consumption Factor for Material Flow In
      if LS_FIDIM-NOFIL is not initial.
        clear LS_PARAM.
        move ZIF_VCXI_XCSP_MFI=>C_PARID_MFICF                           to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                          to LS_PARAM-PARTY.
        move LS_FIDIM-NOFIL                                             to LS_PARAM-ATFLV.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                           to LS_PARAM-SETBY.
        LR_SPVRE_MFSI_L->SET_PARAM( IS_PARAM = LS_PARAM ).
      endif.
    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_BMAKE type ref to ZCL_VCXI_FBSR_BL_PSTEP_BMAKE.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_BMAKE.

***--------------------------------------------------------------------------------------
*** Bag/Film Dimensions
    if ME->T_FIDIM_IN  eq LR_BL_PSTEP_BMAKE->T_FIDIM_IN and
       ME->S_BGDIM_OUT eq LR_BL_PSTEP_BMAKE->S_BGDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Roll Handling Information
    if ME->T_RHNDL_IN eq LR_BL_PSTEP_BMAKE->T_RHNDL_IN.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Bag Header Data
    if ME->F_BPDIR eq LR_BL_PSTEP_BMAKE->F_BPDIR.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Handles
    if ME->T_MS_HANDLE  eq LR_BL_PSTEP_BMAKE->T_MS_HANDLE.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_BMAKE type ref to ZCL_VCXI_FBSR_BL_PSTEP_BMAKE.

***--------------------------------------------------------------------------------------
*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_BMAKE.

***--------------------------------------------------------------------------------------
*** Film/Bag Dimensions
    move ME->T_FIDIM_IN    to LR_BL_PSTEP_BMAKE->T_FIDIM_IN.
    move ME->S_BGDIM_OUT   to LR_BL_PSTEP_BMAKE->S_BGDIM_OUT.

*** Roll Handling
    move ME->T_RHNDL_IN    to LR_BL_PSTEP_BMAKE->T_RHNDL_IN.

*** Bag Data
    move ME->F_BPDIR       to LR_BL_PSTEP_BMAKE->F_BPDIR.

*** Handles
    move ME->T_MS_HANDLE   to LR_BL_PSTEP_BMAKE->T_MS_HANDLE.

  endmethod.
  method DESERIALIZE.

    data:  LF_XML   type STRING.

    check IF_XML is not initial.

*** Deserialize
    call transformation ID
         source xml IF_XML
         result SUPER_XML    = LF_XML
                T_FIDIM_IN   = ME->T_FIDIM_IN
                S_BGDIM_OUT  = ME->S_BGDIM_OUT
                T_RHNDL_IN   = ME->T_RHNDL_IN
                F_BPDIR      = ME->F_BPDIR
                T_MS_HANDLE  = ME->T_MS_HANDLE.

    SUPER->DESERIALIZE( IF_XML = LF_XML ).

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when C_IATYP_AT_BMAKE.
        ME->FILL_SPVRE_ADDON_BMAKE( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                              IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                              IR_ARBPL       = IR_ARBPL
                                    changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_BMAKE.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Set Bag Width
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_BMAKE=>C_PARID_BGWID to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-S_BGWID-BGWID               to LS_PARAM-ATFLV.
    move ME->S_BGDIM_OUT-S_BGWID-BGWID_UOM           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Bag Height
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_BMAKE=>C_PARID_BGHEI to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-S_BGHEI-BGHEI               to LS_PARAM-ATFLV.
    move ME->S_BGDIM_OUT-S_BGHEI-BGHEI_UOM           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Bag Weight
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_BMAKE=>C_PARID_BGWGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-S_BGWGT-BGWGT               to LS_PARAM-ATFLV.
    move ME->S_BGDIM_OUT-S_BGWGT-BGWGT_UOM           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Bag Type
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_BMAKE=>C_PARID_IBAGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-IBAGT                       to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Out
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_BMAKE=>C_PARID_NOOUT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-NOOUT                       to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Ups
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_BMAKE=>C_PARID_NOUPS to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-NOUPS                       to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Add Material Consumption for Handle
    ME->ADD_SPVRE_MC_HANDLE( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                       IR_SPVRE_PARENT = IR_SPVRE_ADDON
                             changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***--------------------------------------------------------------------------------------
*** Standard
    move 'GRP_CONV'   to CF_ID_GRP.
    move 'ARBPL_CONV' to CF_ID_ARBPL.

***--------------------------------------------------------------------------------------
*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'GRP_CONV'       to CF_ID_GRP.
      move 'ARBPL_OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_IMFXC.

    data: LS_FIDIM type ZVCXI_FBSR_S_FIDIM.

    loop at ME->T_FIDIM_IN into LS_FIDIM where IMFXC is not initial.
      append LS_FIDIM-IMFXC to RT_IMFXC_IN.
    endloop.

  endmethod.
  method GET_PRVDR_BMAKE.

    data:  LR_GATE   type ref to /VCXI/CL_VKSR_GATE.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_BMAKE.
          if RR_PR_BMAKE is bound.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_PRVDR_MS_EMAT.

    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE.

    clear: ER_PR_MS_EMAT,
           ER_GATE_MS_EMAT.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to ER_PR_MS_EMAT.
          if ER_PR_MS_EMAT is bound.
            check LR_GATE->GET_PARENT( ) eq IR_GATE_PARENT.

            move LR_GATE to ER_GATE_MS_EMAT.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

    endloop.

  endmethod.
  method GET_PRVDR_MS_FPROC.

    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE.

    clear: ER_PR_MS_FPROC,
           ER_GATE_MS_FPROC.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to ER_PR_MS_FPROC.
          if ER_PR_MS_FPROC is bound.
            check LR_GATE->GET_PARENT( ) eq IR_GATE_PARENT.

            move LR_GATE to ER_GATE_MS_FPROC.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

    endloop.

  endmethod.
  method GET_PRVDR_PSCALE.

    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PSCALE type ref to ZCL_VCXI_XCS_PR_PSCALE.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_PSCALE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_PSCALE.
          continue.
      endtry.

***   Check Scale is part of Film Procurement
      check LR_GATE->GET_PARENT( ) eq IR_GATE_PARENT.

      append LR_GATE to RT_GATE_PSCALE.
    endloop.

  endmethod.
  method GET_PRVDR_XCONI.

    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE.

    clear: ER_PR_XCONI,
           ER_GATE_XCONI.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to ER_PR_XCONI.
          if ER_PR_XCONI is bound.
            if IR_GATE_PARENT->IS_PARENT( IR_GATE_CHILD = LR_GATE ).
              move LR_GATE to ER_GATE_XCONI.
              exit.
            else.
              clear ER_PR_XCONI.
            endif.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM       type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_BMAKE'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Set Bag Width
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_BMAKE=>C_PARID_BGWID to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-S_BGWID-BGWID               to LS_PARAM-ATFLV.
    move ME->S_BGDIM_OUT-S_BGWID-BGWID_UOM           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Bag Height
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_BMAKE=>C_PARID_BGHEI to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-S_BGHEI-BGHEI               to LS_PARAM-ATFLV.
    move ME->S_BGDIM_OUT-S_BGHEI-BGHEI_UOM           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Bag Weight
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_BMAKE=>C_PARID_BGWGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-S_BGWGT-BGWGT               to LS_PARAM-ATFLV.
    move ME->S_BGDIM_OUT-S_BGWGT-BGWGT_UOM           to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Bag Type
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_BMAKE=>C_PARID_IBAGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-IBAGT                       to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Out
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_BMAKE=>C_PARID_NOOUT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-NOOUT                       to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Ups
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_BMAKE=>C_PARID_NOUPS to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_BGDIM_OUT-NOUPS                       to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Reclosing Material
    ME->ADD_SPVRE_MC_HANDLE( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                            changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_SPVRE_MF.

***--------------------------------------------------------------------------------------
*** Always try to add MFSI (after Route has added MFMI)
    move ABAP_FALSE to CF_MFI.

    if CF_MFI ne ABAP_TRUE.
***   Add MFSI Length
      ME->ADD_SPVRE_MFSI_L( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).

***   Add MFMI Length
      ME->ADD_SPVRE_MFMI_L( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).
      move ABAP_TRUE to CF_MFI.
    endif.

***--------------------------------------------------------------------------------------
*** Add MFSO PC
    if CF_MFO ne ABAP_TRUE.
      ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).
      move ABAP_TRUE to CF_MFO.
    endif.

  endmethod.
  method INIT_BY_SPEC.

    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BPART type ref to ZCL_VCXI_FBSS_PR_BPART.

    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Initialize Film/Bag Dimensions
    ME->INIT_BY_SPEC_DIMEN( IT_PRVDR = IT_PRVDR ).

*** Initialize Roll Handling
    ME->INIT_BY_SPEC_RHNDL( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Get First Bag Part
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_BPART.
          if LR_PR_BPART is bound.

            LR_PR_BPART->GET_BPDIR( importing EF_BPDIR = ME->F_BPDIR ).

            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

*** Get Handle Data
    ME->INIT_BY_SPEC_HANDLE( IR_GATE  = IR_GATE
                             IT_PRVDR = IT_PRVDR ).

  endmethod.
  method INIT_BY_SPEC_DIMEN.

    data: LF_NOUPS type ZVCXI_F0S_NOUPS.
    data: LS_FILEN type ZVCXI_F0S_S_FILEN.
    data: LT_GATE_PSCALE type /VCXI/VKSR_TT_GATE,
          LT_GATE_FCONI  type /VCXI/VKSR_TT_GATE.
    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_MS_EMAT  type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONI    type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PSCALE   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BMAKE      type ref to ZCL_VCXI_FBSS_PR_BMAKE,
          LR_PR_BFILM      type ref to ZCL_VCXI_FBSS_PR_BFILM,
          LR_PR_MS_FPROC   type ref to ZCL_VCXI_FFSS_PR_MS_FPROC,
          LR_PR_MS_EMAT    type ref to ZCL_VCXI_FFSS_PR_MS_EMAT,
          LR_PR_FCONI      type ref to ZCL_VCXI_FFSS_PR_FCONI,
          LR_PR_PSCALE     type ref to ZCL_VCXI_XCS_PR_PSCALE.
    field-symbols: <S_FIDIM_IN> type ZVCXI_FBSR_S_FIDIM,
                   <S_PSCALE>   type ZVCXI_XCSR_S_PSCALE.

***--------------------------------------------------------------------------------------
*** Get Provider - Bag Making
    move ME->GET_PRVDR_BMAKE( IT_PRVDR = IT_PRVDR ) to LR_PR_BMAKE.
    check LR_PR_BMAKE is bound.

***--------------------------------------------------------------------------------------
*** Inbound Dimensions
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_BFILM.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

      check LR_PR_BFILM is bound.

      insert initial line into table ME->T_FIDIM_IN assigning <S_FIDIM_IN>.

***--------------------------------------------------------------------------------------
***   Get Number of Films
      LR_PR_BFILM->GET_NOFIL( importing EF_NOFIL = <S_FIDIM_IN>-NOFIL ).

***   Get Film Dimensions
      LR_PR_BFILM->ZIF_VCXI_FFSS_COMM_PREV~GET_FIWID( importing ES_FIWID = <S_FIDIM_IN>-S_FIWID ).
      LR_PR_BFILM->ZIF_VCXI_FFSS_COMM_PREV~GET_FITEX( importing ES_FITEX = <S_FIDIM_IN>-S_FITEX ).
      LR_PR_BFILM->ZIF_VCXI_FFSS_COMM_PREV~GET_FITIN( importing ES_FITIN = <S_FIDIM_IN>-S_FITIN ).
      LR_PR_BFILM->ZIF_VCXI_FFSS_COMM_PREV~GET_SURWT( importing ES_SURWT = <S_FIDIM_IN>-S_SURWT ).

***   Overwriting the Repeat Length with Film Length
      LR_PR_BFILM->GET_FILEN( importing ES_FILEN = LS_FILEN ).
      move: LS_FILEN-FILEN     to <S_FIDIM_IN>-RELEN,
            LS_FILEN-FILEN_UOM to <S_FIDIM_IN>-RELEN_UOM.

      LR_PR_BFILM->ZIF_VCXI_FFSS_COMM_PREV~GET_NOUPS( importing EF_NOUPS = <S_FIDIM_IN>-NOUPS ).
      move 1 to <S_FIDIM_IN>-NOOUT.           "Always one on ingoing

***--------------------------------------------------------------------------------------
***   Find Provider for MS Film Procurement
      ME->GET_PRVDR_MS_FPROC( exporting IT_PRVDR         = IT_PRVDR
                                        IR_GATE_PARENT   = LR_GATE
                              importing ER_PR_MS_FPROC   = LR_PR_MS_FPROC
                                        ER_GATE_MS_FPROC = LR_GATE_MS_FPROC ).

***   Find Provider for MS Estimation Material
      ME->GET_PRVDR_MS_EMAT(  exporting IT_PRVDR         = IT_PRVDR
                                        IR_GATE_PARENT   = LR_GATE
                              importing ER_PR_MS_EMAT    = LR_PR_MS_EMAT
                                        ER_GATE_MS_EMAT  = LR_GATE_MS_EMAT ).

***   Check if there is a valid Gate for Film Procurement
      if LR_GATE_MS_FPROC is bound.

        check LR_PR_MS_FPROC is bound.
        move LR_PR_MS_FPROC->GET_MATNR( ) to <S_FIDIM_IN>-MATNR.

***--------------------------------------------------------------------------------------
***     Purchasing Info
        move LR_PR_MS_FPROC->GET_PURCH( )   to <S_FIDIM_IN>-PURCH.
        move LR_PR_MS_FPROC->GET_LIFNR( )   to <S_FIDIM_IN>-LIFNR.

***--------------------------------------------------------------------------------------
***     Add Price Scale
        move ME->GET_PRVDR_PSCALE( exporting IT_PRVDR = IT_PRVDR
                                             IR_GATE_PARENT = LR_GATE_MS_FPROC ) to LT_GATE_PSCALE.

        loop at LT_GATE_PSCALE into LR_GATE_PSCALE.

          try.
              move LR_GATE_PSCALE->R_CLSPR ?to LR_PR_PSCALE.
            catch CX_SY_MOVE_CAST_ERROR.
              clear LR_PR_PSCALE.
          endtry.

          check LR_PR_PSCALE is bound.
          append initial line to <S_FIDIM_IN>-T_PSCALE assigning <S_PSCALE>.

***       Add Price Scales
          move LR_GATE_PSCALE->F_ID       to <S_PSCALE>-ISVCE.

          <S_PSCALE>-S_PSQTY = LR_PR_PSCALE->GET_PSQTY( ).
          <S_PSCALE>-S_PRICE = LR_PR_PSCALE->GET_PRICE( ).
          <S_PSCALE>-S_PRICP = LR_PR_PSCALE->GET_PRICP( ).

        endloop.

      elseif LR_GATE_MS_EMAT is bound.

        check LR_PR_MS_EMAT is bound.
        move LR_PR_MS_EMAT->GET_AMAT( ) to <S_FIDIM_IN>-MATNR.

      else.
***--------------------------------------------------------------------------------------
***     Find Provider for Film Connection In
        LT_GATE_FCONI = LR_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_FFSS_PR_FCONI=>C_IPRVT_FF_FCONI
                                            IF_INUSE  = ABAP_TRUE ).
        read table LT_GATE_FCONI into LR_GATE_FCONI index 1.
        if LR_GATE_FCONI is bound.

          try.
              move LR_GATE_FCONI->R_CLSPR ?to LR_PR_FCONI.
            catch CX_SY_MOVE_CAST_ERROR.
              clear LR_PR_FCONI.
          endtry.

          check LR_PR_FCONI is bound.
          move LR_PR_FCONI->GET_GXCON( ) to <S_FIDIM_IN>-IMFXC.

        endif.
      endif.
    endloop.

***--------------------------------------------------------------------------------------
*** Get Outbound Dimensions from Bag Make Element
    LR_PR_BMAKE->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWID( importing ES_BGWID = ME->S_BGDIM_OUT-S_BGWID ).
    LR_PR_BMAKE->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGHEI( importing ES_BGHEI = ME->S_BGDIM_OUT-S_BGHEI ).
    LR_PR_BMAKE->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWGT( importing ES_BGWGT = ME->S_BGDIM_OUT-S_BGWGT ).
    LR_PR_BMAKE->ZIF_VCXI_FBSS_COMM_NEXT~GET_IBAGT( importing EF_IBAGT = ME->S_BGDIM_OUT-IBAGT ).
    LR_PR_BMAKE->GET_NOUPS( importing EF_NOUPS = LF_NOUPS ).
    move LF_NOUPS to ME->S_BGDIM_OUT-NOOUT.    "Use Bag Ups as Outs of Bag Making
    move 1 to ME->S_BGDIM_OUT-NOUPS.           "Always one after bag making

  endmethod.
  method INIT_BY_SPEC_HANDLE.

    data: LF_HPFCT                type        ZVCXI_FBS_HPFCT.
    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_HPART_P type ref to ZCL_VCXI_FBSS_PR_MS_HPART_P,
          LR_GATE_PSCALE   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PSCALE     type ref to ZCL_VCXI_XCS_PR_PSCALE.
    field-symbols: <S_MS_HANDLE>  type        ZVCXI_FBSR_S_MS_HANDLE.

***--------------------------------------------------------------------------------------
*** Get Handle Part Data
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_HPART_P.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
      check LR_PR_MS_HPART_P is bound.

      append initial line to ME->T_MS_HANDLE assigning <S_MS_HANDLE>.

***   Basic Info
      move LR_PR_MS_HPART_P->GET_MATNR( ) to <S_MS_HANDLE>-MATNR.

***--------------------------------------------------------------------------------------
***   Calculate Average Consumption by Handle Part Factor
      LR_PR_MS_HPART_P->GET_HPFCT( importing EF_HPFCT = LF_HPFCT ).
      move 1 to <S_MS_HANDLE>-S_AVGCP-AVGCP.
      move 'ST' to <S_MS_HANDLE>-S_AVGCP-AVGCP_UOM.

      <S_MS_HANDLE>-S_AVGCO-AVGCO = LF_HPFCT * <S_MS_HANDLE>-S_AVGCP-AVGCP.
      <S_MS_HANDLE>-S_AVGCO-AVGCO_UOM = <S_MS_HANDLE>-S_AVGCP-AVGCP_UOM.

***--------------------------------------------------------------------------------------
***   Purchasing Info
      <S_MS_HANDLE>-PURCH   = LR_PR_MS_HPART_P->GET_PURCH( ).
      <S_MS_HANDLE>-LIFNR   = LR_PR_MS_HPART_P->GET_LIFNR( ).
      <S_MS_HANDLE>-S_PRICE = LR_PR_MS_HPART_P->GET_PRICE( ).
      <S_MS_HANDLE>-S_PRICP = LR_PR_MS_HPART_P->GET_PRICP( ).

***------------------------------------------------------------------------------------------------
***   Find Provider for Price Scale
      loop at IT_PRVDR into LR_GATE_PSCALE.
        clear: LR_PR_PSCALE.
        try.
***         Check Scale is part of Packaging Material
            check LR_GATE_PSCALE->IS_IN_LINE( IR_GATE = LR_GATE ) eq ABAP_TRUE.
            move LR_GATE_PSCALE->R_CLSPR ?to LR_PR_PSCALE.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_PSCALE.
        endtry.
        check LR_PR_PSCALE is bound.

***     Add Price Scales
        append value #( ISVCE   = LR_GATE_PSCALE->F_ID
                        S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                        S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                        S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                      ) to <S_MS_HANDLE>-T_PSCALE.
      endloop.
    endloop.

  endmethod.
  method INIT_BY_SPEC_RHNDL.

    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BFILM type ref to ZCL_VCXI_FBSS_PR_BFILM,
          LR_PR_XCONI type ref to ZCL_VCXI_F0SS_PR_XCONI.
    field-symbols: <S_RHNDL_IN> type ZVCXI_FFSR_S_RHNDL.

***--------------------------------------------------------------------------------------
*** Find all Bag Films
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_BFILM.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
      check LR_PR_BFILM is bound.

***   Check Bag Film is defined with Connection In as child
      ME->GET_PRVDR_XCONI( exporting IT_PRVDR       = IT_PRVDR
                                     IR_GATE_PARENT = LR_GATE
                           importing ER_PR_XCONI    = LR_PR_XCONI ).
      check LR_PR_XCONI is bound.

***--------------------------------------------------------------------------------------
***   Add new Roll Handling Information
      insert initial line into table ME->T_RHNDL_IN assigning <S_RHNDL_IN>.

***   Set Source of Core and Dimension to Default
      move ZIF_VCXI_FFSR_RHNDL=>C_RHSRC_DEFAULT to <S_RHNDL_IN>-S_RHSRC-RHSCO.
      move ZIF_VCXI_FFSR_RHNDL=>C_RHSRC_DEFAULT to <S_RHNDL_IN>-S_RHSRC-RHSDI.

***   Set Source of Winding as Specification
      move ZIF_VCXI_FFSR_RHNDL=>C_RHSRC_SPEC to <S_RHNDL_IN>-S_RHSRC-RHSWI.

***   Get Roll Winding Side
      LR_PR_BFILM->GET_RWSID( importing EF_RWSID = <S_RHNDL_IN>-RWSID ).

***   Get Roll Winding Direction
      LR_PR_BFILM->GET_RWDIR( importing EF_RWDIR = <S_RHNDL_IN>-RWDIR ).

***   Get Eyemark Position
      LR_PR_BFILM->GET_EYEMP( importing EF_EYEMP = <S_RHNDL_IN>-EYEMP ).

    endloop.

  endmethod.
  method REPLACE_MFSI_BY_MFMI.

    data:          LF_INDEX  type          I.
    data:          LS_MFMI_L type          ZVCXI_FFSR_S_MFMI_L.
    field-symbols: <T_MFMI>  type standard table,
                   <S_MFMI>  type          ANY,
                   <S_FIDIM> type          ZVCXI_FBSR_S_FIDIM.

    check IR_MFMI is bound.
    assign IR_MFMI->* to <T_MFMI>.

*** Replace all occurences of ID
    loop at ME->T_FIDIM_IN assigning <S_FIDIM> where IMFXC eq IF_IMFXC.
      add 1 to LF_INDEX.
      read table <T_MFMI> assigning <S_MFMI> index LF_INDEX.
      check SY-SUBRC eq 0.

***   Bring MFMI data to Film Dimensions, as they are used to create MFMI by this PStep
      move-corresponding <S_MFMI> to LS_MFMI_L.
      move LS_MFMI_L-MATNR     to <S_FIDIM>-MATNR.
      move LS_MFMI_L-TEXT      to <S_FIDIM>-TEXT.
      move LS_MFMI_L-PURCH     to <S_FIDIM>-PURCH.
      move LS_MFMI_L-LIFNR     to <S_FIDIM>-LIFNR.
      move LS_MFMI_L-T_PSCALE  to <S_FIDIM>-T_PSCALE.
      clear <S_FIDIM>-IMFXC.

    endloop.

  endmethod.
  method SERIALIZE.

*** Super Serialize
    RF_XML = SUPER->SERIALIZE( ).

*** Serialize
    call transformation ID
         source SUPER_XML    = RF_XML
                T_FIDIM_IN   = ME->T_FIDIM_IN
                S_BGDIM_OUT  = ME->S_BGDIM_OUT
                T_RHNDL_IN   = ME->T_RHNDL_IN
                F_BPDIR      = ME->F_BPDIR
                T_MS_HANDLE  = ME->T_MS_HANDLE

    result xml RF_XML.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_IN.

*** Use Dimensions out to predict Inbound Dimensions
    append value #( IBAGT   = ME->S_BGDIM_OUT-IBAGT
                    S_BGWID = ME->S_BGDIM_OUT-S_BGWID
                    S_BGHEI = ME->S_BGDIM_OUT-S_BGHEI
                    S_BGWGT = ME->S_BGDIM_OUT-S_BGWGT
                    NOOUT   = 1
                    NOUPS   = ME->S_BGDIM_OUT-NOUPS * ME->S_BGDIM_OUT-NOOUT
                    SHUNT   = SPACE
                  ) to CT_BGDIM.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_OUT.

    refresh: CT_BGDIM.
    append ME->S_BGDIM_OUT to CT_BGDIM.

  endmethod.
