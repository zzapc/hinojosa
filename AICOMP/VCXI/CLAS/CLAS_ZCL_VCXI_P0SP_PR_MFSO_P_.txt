
class ZCL_VCXI_P0SP_PR_MFSO_P definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MFSO
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_MFP .

  aliases GET_PCDIM
    for ZIF_VCXI_P0SP_MFP~GET_PCDIM .
  aliases SET_PCDIM
    for ZIF_VCXI_P0SP_MFP~SET_PCDIM .

  data F_MFSI_PCUPS type ZVCXI_P0SP_PCUPS read-only .
  constants C_IPRVT_P0_MFSO_P type /VCXI/VKSC_IPRVT value 'ZVCXI_P0SP_MFSO_P' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_DESCR
    redefinition .
protected section.

  aliases C_PARID_PCDIR
    for ZIF_VCXI_P0SP_MFP~C_PARID_PCDIR .
  aliases C_PARID_PCHEI
    for ZIF_VCXI_P0SP_MFP~C_PARID_PCHEI .
  aliases C_PARID_PCLEN
    for ZIF_VCXI_P0SP_MFP~C_PARID_PCLEN .
  aliases C_PARID_PCTYP
    for ZIF_VCXI_P0SP_MFP~C_PARID_PCTYP .
  aliases C_PARID_PCUPS
    for ZIF_VCXI_P0SP_MFP~C_PARID_PCUPS .
  aliases C_PARID_PCWID
    for ZIF_VCXI_P0SP_MFP~C_PARID_PCWID .
  aliases GET_PCDIR
    for ZIF_VCXI_P0SP_MFP~GET_PCDIR .
  aliases GET_PCHEI
    for ZIF_VCXI_P0SP_MFP~GET_PCHEI .
  aliases GET_PCLEN
    for ZIF_VCXI_P0SP_MFP~GET_PCLEN .
  aliases GET_PCTYP
    for ZIF_VCXI_P0SP_MFP~GET_PCTYP .
  aliases GET_PCUPS
    for ZIF_VCXI_P0SP_MFP~GET_PCUPS .
  aliases GET_PCWID
    for ZIF_VCXI_P0SP_MFP~GET_PCWID .
  aliases SET_PCDIR
    for ZIF_VCXI_P0SP_MFP~SET_PCDIR .
  aliases SET_PCHEI
    for ZIF_VCXI_P0SP_MFP~SET_PCHEI .
  aliases SET_PCLEN
    for ZIF_VCXI_P0SP_MFP~SET_PCLEN .
  aliases SET_PCTYP
    for ZIF_VCXI_P0SP_MFP~SET_PCTYP .
  aliases SET_PCUPS
    for ZIF_VCXI_P0SP_MFP~SET_PCUPS .
  aliases SET_PCWID
    for ZIF_VCXI_P0SP_MFP~SET_PCWID .

  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED'. "#EC NOTEXT

  methods CONV_TO_CONSU
    redefinition .
  methods CALC_MFRAT
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SP_PR_MFSO_P definition
class ZCL_VCXI_P0SP_PR_MFSO_P implementation.
method CALC_MFRAT.

  data:  LF_PCUPS     type        ZVCXI_P0SP_PCUPS,
         LF_ICSPA     type        ZVCXI_XCSP_ICSPA,
         LF_COMPF     type        ZVCXI_XCSP_COMPF.
  data:  LT_GATE_MFO  type        /VCXI/VKSR_TT_GATE.
  data:  LR_PR_MFSI_P type ref to ZCL_VCXI_P0SP_PR_MFSI_P.

*** Initialize Material Flow Manager if neede
  if ME->R_PR_MFMGR is not bound.
    ME->HANDLE_INIT_MFMGR( ).
  endif.
  check ME->R_PR_MFMGR is bound.

***----------------------------------------------------------------------------
*** Super
  RF_MFRAT = SUPER->CALC_MFRAT( IR_MFSI  = IR_MFSI ).

*** Cast to MF Class
  try.
      move IR_MFSI ?to LR_PR_MFSI_P.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.
  check LR_PR_MFSI_P is bound.

***----------------------------------------------------------------------------
*** Consider Ups for SFGs
  if LR_PR_MFSI_P->ZIF_VCXI_XCSP_MFSI~GET_NEXTL( ) eq ABAP_TRUE.
    LF_PCUPS = LR_PR_MFSI_P->ZIF_VCXI_P0SP_MFP~GET_PCUPS( ).

*** Adjust by Cost Ratio
    move ME->R_PR_MFMGR->ZIF_VCXI_XCSP_MFMGR~GET_MFO( ) to LT_GATE_MFO.
    if lines( LT_GATE_MFO ) eq 1.
      ME->R_PR_MFMGR->GET_CSPLIT( importing EF_ICSPA = LF_ICSPA
                                            EF_COMPF = LF_COMPF ).
      if LF_ICSPA is not initial.
        LF_PCUPS = LF_PCUPS * LF_COMPF.
      endif.
    endif.

    RF_MFRAT = LF_PCUPS.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Set Dimension-Depending Parameter IDS's
  move C_PARID_CONSU_P to ME->F_PARID_CONSU.

endmethod.
  method CONV_TO_CONSU.

    data: LF_PCUPS type ZVCXI_P0SP_PCUPS.


    SUPER->CONV_TO_CONSU( exporting IR_MFSI  = IR_MFSI
                          changing  CS_CONSU = CS_CONSU ).

***------------------------------------------------------------------------------------------------
*** Get PC Ups of Material Flow SFG In
    if IR_MFSI is instance of ZIF_VCXI_P0SP_MFP.
      ME->F_MFSI_PCUPS = cast ZIF_VCXI_P0SP_MFP( IR_MFSI )->GET_PCUPS( ).
    else.
      ME->F_MFSI_PCUPS = 1.
    endif.

*** Get own PC Ups
    LF_PCUPS = ME->GET_PCUPS( ).
    check LF_PCUPS ne 0.

    CS_CONSU-CONSU = CS_CONSU-CONSU * ME->F_MFSI_PCUPS / LF_PCUPS.
    ZCL_VCXI_P0SP_CUST_PCTYP=>GET_ROUND_PCTYP( exporting IF_PCTYP = ME->GET_PCTYP( )
                                               changing  CF_VALUE = CS_CONSU-CONSU ).

  endmethod.
method GET_DESCR.

  data: LF_PCTYP type ZVCXI_P0SP_PCTYP,
        LF_DESCR type /VCXI/CKX_DESCR.

  LF_PCTYP = ME->GET_PCTYP( ).
  LF_DESCR = ZCL_VCXI_P0SP_CUST_PCTYP=>GET_PCTYP_DESCR( IF_PCTYP = LF_PCTYP ).
  RF_DESCR = SUPER->GET_DESCR( ).

  if LF_DESCR is not initial.
    concatenate LF_DESCR '-' RF_DESCR into RF_DESCR separated by SPACE.
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~GET_PCDIM.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI.

***------------------------------------------------------------------
*** PC Type
  move ME->GET_PCTYP( ) to RS_PCDIM-PCTYP.

***------------------------------------------------------------------
*** PC Length
  move ME->GET_PCLEN( ) to LS_PCLEN.
  move-corresponding LS_PCLEN to RS_PCDIM.

*** PC Width
  move ME->GET_PCWID( ) to LS_PCWID.
  move-corresponding LS_PCWID to RS_PCDIM.

*** PC Height
  move ME->GET_PCHEI( ) to LS_PCHEI.
  move-corresponding LS_PCHEI to RS_PCDIM.

***------------------------------------------------------------------
*** PC UPs
  move ME->GET_PCUPS( ) to RS_PCDIM-PCUPS.

*** Number of Outs
  move ME->GET_NOOUT( ) to RS_PCDIM-NOOUT.

***------------------------------------------------------------------
*** PC Direction
  move ME->GET_PCDIR( ) to RS_PCDIM-PCDIR.

endmethod.
  method ZIF_VCXI_P0SP_MFP~GET_PCDIR.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCDIR ).
    RF_PCDIR = LS_PARAM-ATWRT.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P0SP_MFP~GET_PCHEI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).
    RS_PCHEI-PCHEI     = LS_PARAM-ATFLV.
    RS_PCHEI-PCHEI_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P0SP_MFP~GET_PCLEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).
    RS_PCLEN-PCLEN     = LS_PARAM-ATFLV.
    RS_PCLEN-PCLEN_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P0SP_MFP~GET_PCTYP.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).
    RF_PCTYP = LS_PARAM-ATWRT.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P0SP_MFP~GET_PCUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).
    RF_PCUPS = LS_PARAM-ATFLV.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P0SP_MFP~GET_PCWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
    RS_PCWID-PCWID     = LS_PARAM-ATFLV.
    RS_PCWID-PCWID_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCDIM.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI,
        LS_PCDIM type ZVCXI_P0SP_S_PCDIM.

  LS_PCDIM =  ME->GET_PCDIM( ).

***------------------------------------------------------------------
*** Set PC Type
  if IS_PCDIM-PCTYP ne LS_PCDIM-PCTYP.
    ME->SET_PCTYP( IF_PCTYP = IS_PCDIM-PCTYP
                   IF_SETBY = IF_SETBY ).
  endif.

***------------------------------------------------------------------
*** Set PC Length
  if IS_PCDIM-PCLEN ne LS_PCDIM-PCLEN.
    move-corresponding IS_PCDIM to LS_PCLEN.
    ME->SET_PCLEN( IS_PCLEN = LS_PCLEN
                   IF_SETBY = IF_SETBY ).
  endif.

*** Set PC Width
  if IS_PCDIM-PCWID ne LS_PCDIM-PCWID.
    move-corresponding IS_PCDIM to LS_PCWID.
    ME->SET_PCWID( IS_PCWID = LS_PCWID
                   IF_SETBY = IF_SETBY ).
  endif.

*** Set PC Height
  if IS_PCDIM-PCHEI ne LS_PCDIM-PCHEI.
    move-corresponding IS_PCDIM to LS_PCHEI.
    ME->SET_PCHEI( IS_PCHEI = LS_PCHEI
                   IF_SETBY = IF_SETBY ).
  endif.

***------------------------------------------------------------------
*** Set PC Ups
  if IS_PCDIM-PCUPS ne LS_PCDIM-PCUPS.
    ME->SET_PCUPS( IF_PCUPS = IS_PCDIM-PCUPS
                   IF_SETBY = IF_SETBY ).
  endif.

*** Set Number of Outs
  if IS_PCDIM-NOOUT ne LS_PCDIM-NOOUT.
    ME->SET_NOOUT( IF_NOOUT = IS_PCDIM-NOOUT
                   IF_SETBY = IF_SETBY ).
  endif.

***------------------------------------------------------------------
*** Set PC Direction
  if IS_PCDIM-PCDIR ne LS_PCDIM-PCDIR.
    ME->SET_PCDIR( IF_PCDIR = IS_PCDIM-PCDIR
                   IF_SETBY = IF_SETBY ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCDIR.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCDIR ).

  move IF_PCDIR to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCHEI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).

  move IS_PCHEI-PCHEI                      to LS_PARAM-ATFLV.
  move IS_PCHEI-PCHEI_UOM                  to LS_PARAM-UNIT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCLEN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).

  move IS_PCLEN-PCLEN                      to LS_PARAM-ATFLV.
  move IS_PCLEN-PCLEN_UOM                  to LS_PARAM-UNIT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCTYP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).

  move IF_PCTYP to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCUPS.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).

  move IF_PCUPS to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_MFP~SET_PCWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

 LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

  move IS_PCWID-PCWID                      to LS_PARAM-ATFLV.
  move IS_PCWID-PCWID_UOM                  to LS_PARAM-UNIT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
