
class ZCL_VCXI_FBSS_BL_FASTD definition
  public
  inheriting from ZCL_VCXI_F0SS_BL_FASTD
  create public .

public section.

  data R_BL_FASTD_FILM type ref to ZCL_VCXI_FFSS_BL_FASTD read-only .

  methods ADD_CSTEP_RECLO
    importing
      !IF_TRECL type ZVCXI_FBS_TRECL
    returning
      value(RR_GATE) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_HANDLE
    importing
      !IF_THNDL type ZVCXI_FBS_THNDL
    returning
      value(RR_GATE) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DELETE_FCOMP_BY_PARTS
    importing
      !IT_GATE_PART type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_FASTD_BY_PART
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ET_FASTD_INP type ZVCXI_FFSS_TT_FASTD_INP
      !ET_FASTD_LAMI type ZVCXI_FFSS_TT_FASTD_LAMI
      !ET_SPVRE_FCOMP type /VCXI/VKSR_TT_SPVRE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
      !EF_NOOUT type ZVCXI_XCS_NOOUT
      !EF_SETBY_NOOUT type /VCXI/VKSR_SETBY
      !ES_TRWID type ZVCXI_F0S_S_TRWID
      !EF_SETBY_TRWID type /VCXI/VKSR_SETBY
      !ER_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !ER_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
      !ER_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
      !ER_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SWITCH_PART_TO_PROC
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SWITCH_PART_TO_PROD
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_BFG
    exporting
      !ER_GATE_BFG type ref to /VCXI/CL_VKSR_GATE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_BFILM
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_BMAKE
    exporting
      !ER_GATE_BMAKE type ref to /VCXI/CL_VKSR_GATE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_CSTEP_WICKET
    importing
      !IR_GATE_BFG type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_CSTEP_WICKET type ref to /VCXI/CL_VKSR_GATE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_CSTEP_WIND
    importing
      !IR_GATE_BFG type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_CSTEP_WIND type ref to /VCXI/CL_VKSR_GATE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods SET_NOFIL_BY_PART
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
      !IF_NOFIL type ZVCXI_FFS_NOFIL
      !IF_NOOUT type ZVCXI_XCS_NOOUT optional
      !IS_TRWID type ZVCXI_F0S_S_TRWID optional
    raising
      /VCXI/CX_CKX .
protected section.

  methods ADD_FCONI
    importing
      !IR_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ANALYZE_PART
    importing
      !IR_GATE_PART type ref to /VCXI/CL_VKSR_GATE
    exporting
      !ER_GATE_BFILM type ref to /VCXI/CL_VKSR_GATE
      !ER_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE
      !ER_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE
      !ER_GATE_MS_EMAT type ref to /VCXI/CL_VKSR_GATE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
    raising
      /VCXI/CX_CKX .
  methods GET_FCONO_BY_FCONI
    importing
      !IR_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_GATE_FCONO) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_BCOMP
    exporting
      !ER_SPVRE_BCOMP type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_SPEC type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_INPUT type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_CONV type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_OUTPUT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_BFILM
    importing
      !IR_SPVRE_PART type ref to /VCXI/CL_VKSR_SPVRE
    exporting
      !ER_SPVRE_BFILM type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ANALYZE_BCOMP
    importing
      !IR_SPVRE_BCOMP type ref to /VCXI/CL_VKSR_SPVRE
      !IT_SPVRE type /VCXI/VKSR_TT_SPVRE
    exporting
      !ER_SPVRE_SPEC type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_INPUT type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_CONV type ref to /VCXI/CL_VKSR_SPVRE
      !ER_SPVRE_OUTPUT type ref to /VCXI/CL_VKSR_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ANALYZE_FCONI
    importing
      !IR_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE
      !IT_SPVRE type /VCXI/VKSR_TT_SPVRE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    exporting
      !ET_FASTD_INP type ZVCXI_FFSS_TT_FASTD_INP
      !ET_FASTD_LAMI type ZVCXI_FFSS_TT_FASTD_LAMI
      !ET_SPVRE_FCOMP type /VCXI/VKSR_TT_SPVRE
      !EF_SFDAT type ZVCXI_F0SS_SFDAT
      !EF_NOOUT type ZVCXI_XCS_NOOUT
      !EF_SETBY_NOOUT type /VCXI/VKSR_SETBY
      !ES_TRWID type ZVCXI_F0S_S_TRWID
      !EF_SETBY_TRWID type /VCXI/VKSR_SETBY
      !ER_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FBSS_BL_FASTD definition
class ZCL_VCXI_FBSS_BL_FASTD implementation.
  method ADD_BCOMP.

    data: LR_SPVRE_XCONMGR type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Find Root Element
    ME->GET_SPVRE( exporting IF_ID    = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_F0SS_PR_SOV=>C_IPRVT_F0_SOV )
                   importing ER_SPVRE = LR_SPVRE_XCONMGR
                   changing  CT_SPVRE = CT_SPVRE ).

***--------------------------------------------------------------------------------------
*** Create Bag Component
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_XCONMGR
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_BCOMP=>C_IPRVT_FB_BCOMP )
                   importing ER_SPVRE        = ER_SPVRE_BCOMP
                   changing  CT_SPVRE        = CT_SPVRE ).

*** Create Specification
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_BCOMP
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_F0SS_PR_SPEC=>C_IPRVT_F0_SPEC )
                   importing ER_SPVRE        = ER_SPVRE_SPEC
                   changing  CT_SPVRE        = CT_SPVRE ).

***--------------------------------------------------------------------------------------
*** Create Input
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_SPEC
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_INPUT=>C_IPRVT_INPUT )
                   importing ER_SPVRE        = ER_SPVRE_INPUT
                   changing  CT_SPVRE        = CT_SPVRE ).

*** Create Conversion
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_SPEC
                             IF_ID           = 'CONV'
                   importing ER_SPVRE        = ER_SPVRE_CONV
                   changing  CT_SPVRE        = CT_SPVRE ).

*** Create Output
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_SPEC
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_OUTPUT=>C_IPRVT_OUTPUT )
                   importing ER_SPVRE        = ER_SPVRE_OUTPUT
                   changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method ADD_BFILM.

***--------------------------------------------------------------------------------------
*** Create Bag Film
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = IR_SPVRE_PART
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_BFILM=>C_IPRVT_BFILM )
                   importing ER_SPVRE        = ER_SPVRE_BFILM
                   changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method ADD_CSTEP_RECLO.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE_BFG          type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_BFG         type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_BCOMP       type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_CONV        type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_CSTEP_RECLO type ref to /VCXI/CL_VKSR_SPVRE,
          LR_PR_CSTEP_RECLO    type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

*** Get Bag Component through Bag Finished Good Gate
    ME->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG ).
    LR_SPVRE_BFG = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_BFG
                                          IT_SPVRE = LT_SPVRE ).
    move LR_SPVRE_BFG->R_PARENT   to LR_SPVRE_BCOMP.  "Bag FG -> Output
    move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Output -> Spec
    move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Spec   -> Bag Component

*** Analyze Bag Component
    ME->ANALYZE_BCOMP( exporting IR_SPVRE_BCOMP = LR_SPVRE_BCOMP
                                 IT_SPVRE       = LT_SPVRE
                       importing ER_SPVRE_CONV  = LR_SPVRE_CONV ).


*** Add Handle
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_CONV
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_RECLO=>C_IPRVT_CSTEP_RECLO )
                   importing ER_SPVRE        = LR_SPVRE_CSTEP_RECLO
                   changing  CT_SPVRE        = LT_SPVRE ).

*** Set via Supervisor
    ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***--------------------------------------------------------------------------------------
*** Get all Provider after Supervisor
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

*** Get Gate of new Conversion Step Reclosing
    RR_GATE = ME->GET_GATE_BY_SPVRE( IR_SPVRE = LR_SPVRE_CSTEP_RECLO
                                     IT_PRVDR = LT_PRVDR ).

*** Set Values to Conversion Step Reclosing
    move RR_GATE->R_CLSPR ?to LR_PR_CSTEP_RECLO.
    check LR_PR_CSTEP_RECLO is bound.
    LR_PR_CSTEP_RECLO->SET_TRECL( IF_TRECL = IF_TRECL ).

  endmethod.
  method ADD_FCONI.

    data: LT_SPVRE      type        /VCXI/VKSR_TT_SPVRE,
          LT_XCON_SPVRE type        YT_XCON_SPVRE,
          LT_PRVDR      type        /VCXI/VKSR_TT_GATE.
    data: LR_SPVRE_OUTPUT type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_FCONO  type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_BFILM  type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_FCONI  type ref to /VCXI/CL_VKSR_SPVRE.
    field-symbols: <S_XCON_SPVRE>     type        YS_XCON_SPVRE.


*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***--------------------------------------------------------------------------------------
*** Add Film Component
    ME->R_BL_FASTD_FILM->ADD_FCOMP( importing ER_SPVRE_OUTPUT = LR_SPVRE_OUTPUT
                                    changing  CT_SPVRE        = LT_SPVRE ).

*** Add Connection Out Elements
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_OUTPUT
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_FCONO=>C_IPRVT_FF_FCONO )
                   importing ER_SPVRE        = LR_SPVRE_FCONO
                   changing  CT_SPVRE        = LT_SPVRE ).


***--------------------------------------------------------------------------------------
*** Get Bag Film
    LR_SPVRE_BFILM = ME->GET_SPVRE_BY_GATE( IR_GATE  = IR_GATE_BFILM
                                            IT_SPVRE = LT_SPVRE ).

*** Add Connection In Elements
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_BFILM
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_FCONI=>C_IPRVT_FF_FCONI )
                   importing ER_SPVRE        = LR_SPVRE_FCONI
                   changing  CT_SPVRE        = LT_SPVRE ).


***--------------------------------------------------------------------------------------
*** Set via Supervisor
    ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

*** Add Connection between Connection Out and Connection In
    append initial line to LT_XCON_SPVRE assigning <S_XCON_SPVRE>.
    move LR_SPVRE_FCONO to <S_XCON_SPVRE>-R_SPVRE_XCONO.
    move LR_SPVRE_FCONI to <S_XCON_SPVRE>-R_SPVRE_XCONI.

*** Create Connections between Film Components
    ME->CREATE_XCON( IT_XCON_SPVRE = LT_XCON_SPVRE ).

*** Get all Provider after Supervisor
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

*** Return Film Connection In
    ER_GATE_FCONI = ME->GET_GATE_BY_SPVRE( IR_SPVRE = LR_SPVRE_FCONI
                                           IT_PRVDR = LT_PRVDR ).

  endmethod.
  method ADD_HANDLE.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE_BMAKE   type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_BMAKE  type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_HANDLE type ref to /VCXI/CL_VKSR_SPVRE,
          LR_PR_HANDLE    type ref to ZCL_VCXI_FBSS_PR_HANDLE.

***--------------------------------------------------------------------------------------
*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

*** Get Gate and Supervised Element of Bag Making
    ME->GET_GATE_BMAKE( importing ER_GATE_BMAKE = LR_GATE_BMAKE ).
    LR_SPVRE_BMAKE = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_BMAKE
                                            IT_SPVRE = LT_SPVRE ).

*** Add Handle
    ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_BMAKE
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_HANDLE=>C_IPRVT_HANDLE )
                   importing ER_SPVRE        = LR_SPVRE_HANDLE
                   changing  CT_SPVRE        = LT_SPVRE ).

*** Set via Supervisor
    ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***--------------------------------------------------------------------------------------
*** Get all Provider after Supervisor
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

*** Get Gate of new Handle
    RR_GATE = ME->GET_GATE_BY_SPVRE( IR_SPVRE = LR_SPVRE_HANDLE
                                     IT_PRVDR = LT_PRVDR ).

*** Set Values to Handle
    move RR_GATE->R_CLSPR ?to LR_PR_HANDLE.
    check LR_PR_HANDLE is bound.
    LR_PR_HANDLE->SET_THNDL( IF_THNDL = IF_THNDL ).

  endmethod.
  method ANALYZE_BCOMP.

***--------------------------------------------------------------------------------------
*** Get Supervised Runtime Element of Specification
    ME->GET_SPVRE( exporting IR_SPVRE_PARENT = IR_SPVRE_BCOMP
                             IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_F0SS_PR_SPEC=>C_IPRVT_F0_SPEC )
                             IT_SPVRE        = IT_SPVRE
                   importing ER_SPVRE        = ER_SPVRE_SPEC ).


***--------------------------------------------------------------------------------------
*** Get Supervised Runtime Element of Input
    if ER_SPVRE_INPUT is requested.
      ME->GET_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_SPEC
                               IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_INPUT=>C_IPRVT_INPUT )
                               IT_SPVRE        = IT_SPVRE
                     importing ER_SPVRE        = ER_SPVRE_INPUT ).
    endif.

*** Get Supervised Runtime Element of Conversion
    if ER_SPVRE_CONV is requested.
      ME->GET_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_SPEC
                               IF_ID           = 'CONV'
                               IT_SPVRE        = IT_SPVRE
                     importing ER_SPVRE        = ER_SPVRE_CONV ).
    endif.

*** Get Supervised Runtime Element of Output
    if ER_SPVRE_OUTPUT is requested.
      ME->GET_SPVRE( exporting IR_SPVRE_PARENT = ER_SPVRE_SPEC
                               IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_OUTPUT=>C_IPRVT_OUTPUT )
                               IT_SPVRE        = IT_SPVRE
                     importing ER_SPVRE        = ER_SPVRE_OUTPUT ).
    endif.

  endmethod.
  method ANALYZE_FCONI.

    data: LT_PARAM       type        /VCXI/VKSR_TT_PARAM.
    data: LR_SPVRE_FCOMP type ref to /VCXI/CL_VKSR_SPVRE.

    free: ET_FASTD_INP,
          ET_FASTD_LAMI,
          ET_SPVRE_FCOMP.

***--------------------------------------------------------------------------------------
*** Find Connector Out
    ER_GATE_FCONO = ME->GET_FCONO_BY_FCONI( IR_GATE_FCONI = IR_GATE_FCONI ).
    check ER_GATE_FCONO is bound.

*** Get Fast Data Information for Film Connection Out
    ME->R_BL_FASTD_FILM->GET_FASTD_BY_OUT( exporting IR_GATE_OUT    = ER_GATE_FCONO
                                           importing ET_FASTD_INP   = ET_FASTD_INP
                                                     ET_FASTD_LAMI  = ET_FASTD_LAMI
                                                     ET_SPVRE_FCOMP = ET_SPVRE_FCOMP
                                                     EF_SFDAT       = EF_SFDAT
                                                     EF_NOOUT       = EF_NOOUT
                                                     EF_SETBY_NOOUT = EF_SETBY_NOOUT
                                                     ES_TRWID       = ES_TRWID
                                                     EF_SETBY_TRWID = EF_SETBY_TRWID ).

*** Add Main Film Component
    LR_SPVRE_FCOMP = ME->GET_SPVRE_BY_GATE( IR_GATE  = ER_GATE_FCONO
                                            IT_SPVRE = IT_SPVRE ).
    LR_SPVRE_FCOMP = LR_SPVRE_FCOMP->R_PARENT->R_PARENT->R_PARENT.
    append LR_SPVRE_FCOMP to ET_SPVRE_FCOMP.

***--------------------------------------------------------------------------------------
*** Check for non-standard values on Connection In
    LT_PARAM = IR_GATE_FCONI->GET_PARAM_ALL( ).

*** Check for parameter that were set by User
    read table LT_PARAM with key SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER
                        transporting no fields.
    if SY-SUBRC eq 0.
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
    endif.

  endmethod.
  method ANALYZE_PART.

    data: LT_PRVDR type        /VCXI/VKSR_TT_GATE.
    data: LR_PRVDR type ref to /VCXI/CL_VKSR_GATE.

    free: ER_GATE_BFILM,
          ER_GATE_FCONI,
          ER_GATE_MS_FPROC,
          EF_SFDAT.

***--------------------------------------------------------------------------------------
*** Get Bag Films of Bag/Handle Part
    ME->GET_GATE_BFILM( exporting IR_GATE_PART  = IR_GATE_PART
                        importing ER_GATE_BFILM = ER_GATE_BFILM
                                  EF_SFDAT      = EF_SFDAT ).

***--------------------------------------------------------------------------------------
*** Get all Provider
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

*** Get Children of Bag Film
    loop at LT_PRVDR into LR_PRVDR.
      check ER_GATE_BFILM->IS_PARENT( IR_GATE_CHILD = LR_PRVDR ) eq ABAP_TRUE.

      if ER_GATE_FCONI    is bound or
         ER_GATE_MS_FPROC is bound or
         ER_GATE_MS_EMAT  is bound.
***     Mark as non-standard Configuration
        move C_SFDAT_NONSTANDARD to EF_SFDAT.
        exit.
      endif.

***   Keep first Child of Bag Film and assign it to right return parameter
      case LR_PRVDR->F_ID.
***     Film Connection In
        when ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_FCONI=>C_IPRVT_FF_FCONI ).
          move LR_PRVDR to ER_GATE_FCONI.

***     Film Procurement
        when ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_MS_FPROC=>C_IPRVT_MS_FPROC ).
          move LR_PRVDR to ER_GATE_MS_FPROC.

***       Mark as non-standard Configuration
          move C_SFDAT_NONSTANDARD to EF_SFDAT.

***     Esstimation Material
        when ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_MS_EMAT=>C_IPRVT_MS_EMAT ).
          move LR_PRVDR to ER_GATE_MS_EMAT.

***       Mark as non-standard Configuration
          move C_SFDAT_NONSTANDARD to EF_SFDAT.

      endcase.
    endloop.

***--------------------------------------------------------------------------------------
    if ER_GATE_FCONI    is initial and
       ER_GATE_MS_FPROC is initial and
       ER_GATE_MS_EMAT  is initial.

      break ADD_CUST_CONTROL. "Add customizing control to decide what to create

***   Add Film Conection In with connecte Film Component
      ME->ADD_FCONI( exporting IR_GATE_BFILM = ER_GATE_BFILM
                     importing ER_GATE_FCONI = ER_GATE_FCONI ).
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Create Business Logic Instance (Film)
    create object ME->R_BL_FASTD_FILM
      exporting
        IR_GATE = ME->R_GATE.

  endmethod.
  method DELETE_FCOMP_BY_PARTS.

    data: LT_GATE_FCONI  type        /VCXI/VKSR_TT_GATE,
          LT_SPVRE       type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR       type        /VCXI/VKSR_TT_GATE,
          LT_SPVRE_FCOMP type        /VCXI/VKSR_TT_SPVRE.
    data: LR_GATE_PART   type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONI  type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_FCOMP type ref to /VCXI/CL_VKSR_SPVRE.


***--------------------------------------------------------------------------------------
    loop at IT_GATE_PART into LR_GATE_PART.
***   Analyze Bag/Handle Part
      ME->ANALYZE_PART( exporting IR_GATE_PART  = LR_GATE_PART
                        importing ER_GATE_FCONI = LR_GATE_FCONI ).
      check LR_GATE_FCONI is bound.
      append LR_GATE_FCONI to LT_GATE_FCONI.
    endloop.

***--------------------------------------------------------------------------------------
*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

*** Get all Provider
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

***--------------------------------------------------------------------------------------
*** Remove Film Components for identified Film Connection In
    loop at LT_GATE_FCONI into LR_GATE_FCONI.
***   Analyze Film Connection In
      ME->ANALYZE_FCONI( exporting IR_GATE_FCONI  = LR_GATE_FCONI
                                   IT_SPVRE       = LT_SPVRE
                                   IT_PRVDR       = LT_PRVDR
                         importing ET_SPVRE_FCOMP = LT_SPVRE_FCOMP ).

***   Remove those Film Components
      loop at LT_SPVRE_FCOMP into LR_SPVRE_FCOMP.
        delete LT_SPVRE where TABLE_LINE->F_GATKY eq LR_SPVRE_FCOMP->F_GATKY.
      endloop.
    endloop.

***--------------------------------------------------------------------------------------
*** Set via Supervisor
    ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

  endmethod.
  method GET_FASTD_BY_PART.

    data: LT_SPVRE type /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type /VCXI/VKSR_TT_GATE.
    data: LR_PRVDR      type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_FASTD_INP> type ZVCXI_FFSS_S_FASTD_INP.


    free: ET_FASTD_INP,
          ET_FASTD_LAMI,
          EF_SFDAT,
          ET_SPVRE_FCOMP,
          EF_SFDAT,
          EF_NOOUT,
          EF_SETBY_NOOUT,
          ES_TRWID,
          EF_SETBY_TRWID,
          ER_GATE_BFILM,
          ER_GATE_FCONO,
          ER_GATE_MS_FPROC,
          ER_GATE_MS_EMAT.

    check IR_GATE_PART is bound and
          IR_GATE_PART->F_FREED ne ABAP_TRUE.

***--------------------------------------------------------------------------------------
*** Analyze Bag/Handle Part
    ME->ANALYZE_PART( exporting IR_GATE_PART     = IR_GATE_PART
                      importing ER_GATE_BFILM    = ER_GATE_BFILM
                                ER_GATE_FCONI    = LR_GATE_FCONI
                                ER_GATE_MS_FPROC = ER_GATE_MS_FPROC
                                ER_GATE_MS_EMAT  = ER_GATE_MS_EMAT
                                EF_SFDAT         = EF_SFDAT ).

***--------------------------------------------------------------------------------------
*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

*** Get all Provider
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

***--------------------------------------------------------------------------------------
*** Connection In was found
    if   LR_GATE_FCONI    is     bound and
       ( ER_GATE_MS_FPROC is not bound and
         ER_GATE_MS_EMAT  is not bound ).
***   Analyze Film Connection In
      ME->ANALYZE_FCONI( exporting IR_GATE_FCONI  = LR_GATE_FCONI
                                   IT_SPVRE       = LT_SPVRE
                                   IT_PRVDR       = LT_PRVDR
                         importing ET_FASTD_INP   = ET_FASTD_INP
                                   ET_FASTD_LAMI  = ET_FASTD_LAMI
                                   ET_SPVRE_FCOMP = ET_SPVRE_FCOMP
                                   EF_SFDAT       = EF_SFDAT
                                   EF_NOOUT       = EF_NOOUT
                                   EF_SETBY_NOOUT = EF_SETBY_NOOUT
                                   ES_TRWID       = ES_TRWID
                                   EF_SETBY_TRWID = EF_SETBY_TRWID
                                   ER_GATE_FCONO  = ER_GATE_FCONO ).

*** Film Procurement / Estimation Material was found
    elseif   LR_GATE_FCONI    is not bound and
           ( ER_GATE_MS_FPROC is     bound or
             ER_GATE_MS_EMAT  is     bound ).
***   Mark as non-standard Configuration
      move C_SFDAT_NONSTANDARD to EF_SFDAT.

***   Add Film Procurement
      if ER_GATE_MS_FPROC is bound.
        append initial line to ET_FASTD_INP assigning <S_FASTD_INP>.
        move   ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_FPROC to <S_FASTD_INP>-TINPU.
        append ER_GATE_MS_FPROC                      to <S_FASTD_INP>-T_GATE_INP.
      endif.

***   Add Estimation Material
      if ER_GATE_MS_EMAT is bound.
        append initial line to ET_FASTD_INP assigning <S_FASTD_INP>.
        move   ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_EMAT  to <S_FASTD_INP>-TINPU.
        append ER_GATE_MS_EMAT                       to <S_FASTD_INP>-T_GATE_INP.
      endif.

*** Unexpected constellation
    else.
***   Mark as non-standard Configuration
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
      exit.
    endif.

  endmethod.
  method GET_FCONO_BY_FCONI.

    data: LS_XCONR   type        ZVCXI_F0SS_S_XCONR.
    data: LT_XCONR   type        ZVCXI_F0SS_TT_XCONR.
    data: LR_PR_SOV  type ref to ZCL_VCXI_F0SS_PR_SOV.

***--------------------------------------------------------------------------------------
*** Get Specification Overview
    ME->GET_PRVDR_SOV( importing ER_PR_SOV = LR_PR_SOV ).
    check LR_PR_SOV is bound.

*** Get Connections
    move LR_PR_SOV->GET_XCONR( ) to LT_XCONR.

*** Find Connector Out
    read table LT_XCONR into LS_XCONR with key R_GATE_IN = IR_GATE_FCONI.
    check SY-SUBRC eq 0.
    move LS_XCONR-R_GATE_OUT to RR_GATE_FCONO.

  endmethod.
  method GET_GATE_BFG.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE.
    data: LR_PRVDR        type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_OUTPUT type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Bag Finished Good Provider
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_BFG=>C_IPRVT_BFG ).
    read table LT_PRVDR into LR_PRVDR index 1.
    if SY-SUBRC eq 0.
      move LR_PRVDR to ER_GATE_BFG.
    endif.

*** Mark it as non-standard if more than one provider can be found
    if LINES( LT_PRVDR ) gt 1.
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
    else.
      move C_SFDAT_STANDARD to EF_SFDAT.
    endif.

***--------------------------------------------------------------------------------------
*** If no Finished Good found -> Create new
    if ER_GATE_BFG is not bound.
***   Get current Supervised Elements
      move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***   Create new Bag Component
      ME->ADD_BCOMP( importing ER_SPVRE_OUTPUT = LR_SPVRE_OUTPUT
                     changing  CT_SPVRE        = LT_SPVRE ).
***   Create new BFG
      ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_OUTPUT
                               IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_BFG=>C_IPRVT_BFG )
                     changing  CT_SPVRE        = LT_SPVRE ).

***   Set via Supervisor
      ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***   Try Again
      ME->GET_GATE_BFG( importing ER_GATE_BFG = ER_GATE_BFG
                                  EF_SFDAT    = EF_SFDAT ).
    endif.

  endmethod.
  method GET_GATE_BFILM.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE.
    data: LR_PRVDR       type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_PART  type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_BFILM type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Bag Film Provider
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_BFILM=>C_IPRVT_BFILM ).
    loop at LT_PRVDR into LR_PRVDR.
      check IR_GATE_PART->IS_PARENT( IR_GATE_CHILD = LR_PRVDR ) eq ABAP_TRUE.

      if ER_GATE_BFILM is bound.
***     Mark as non-standard Configuration
        move C_SFDAT_NONSTANDARD to EF_SFDAT.
        exit.
      endif.

***   Keep first Bag Film of the Bag Part
      move LR_PRVDR to ER_GATE_BFILM.
    endloop.

***--------------------------------------------------------------------------------------
*** If no Bag Film found -> Create new
    if ER_GATE_BFILM is not bound.
***   Get current Supervised Elements
      move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***   Get Supervised Runtime Element of Bag/Handle Part
      LR_SPVRE_PART = ME->GET_SPVRE_BY_GATE( IR_GATE  = IR_GATE_PART
                                             IT_SPVRE = LT_SPVRE ).

***   Create new Bag Film
      ME->ADD_BFILM( exporting IR_SPVRE_PART  = LR_SPVRE_PART
                     importing ER_SPVRE_BFILM = LR_SPVRE_BFILM
                     changing  CT_SPVRE       = LT_SPVRE ).

***   Set via Supervisor
      ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***   Try Again
      ME->GET_GATE_BFILM( exporting IR_GATE_PART  = IR_GATE_PART
                          importing ER_GATE_BFILM = ER_GATE_BFILM
                                    EF_SFDAT      = EF_SFDAT ).
    endif.

  endmethod.
  method GET_GATE_BMAKE.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE.
    data: LR_PRVDR       type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_BFG    type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_BFG   type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_BCOMP type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_INPUT type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Bag Procurement Provider
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_MS_BPROC=>C_IPRVT_MS_BPROC ).
    if LT_PRVDR is not initial.
***   Don't create a Bag Making if we have a Bag Procurement
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
      exit.
    endif.

***--------------------------------------------------------------------------------------
*** Get Bag Making Provider
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_BMAKE=>C_IPRVT_BMAKE ).
    read table LT_PRVDR into LR_PRVDR index 1.
    if SY-SUBRC eq 0.
      move LR_PRVDR to ER_GATE_BMAKE.
    endif.

*** Mark it as non-standard if more than one provider can be found
    if LINES( LT_PRVDR ) gt 1.
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
    else.
      move C_SFDAT_STANDARD to EF_SFDAT.
    endif.

***--------------------------------------------------------------------------------------
*** If no Bag Making found -> Create new
    if ER_GATE_BMAKE is not bound.
***   Get Bag Finished Good
      ME->GET_GATE_BFG( importing ER_GATE_BFG = LR_GATE_BFG ).

***   Get current Supervised Elements
      move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***   Get Bag Component through Bag Finished Good Gate
      LR_SPVRE_BFG = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_BFG
                                            IT_SPVRE = LT_SPVRE ).
      move LR_SPVRE_BFG->R_PARENT   to LR_SPVRE_BCOMP.  "Bag FG -> Output
      move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Output -> Spec
      move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Spec   -> Bag Component

***   Analyze Bag Component
      ME->ANALYZE_BCOMP( exporting IR_SPVRE_BCOMP = LR_SPVRE_BCOMP
                                   IT_SPVRE       = LT_SPVRE
                         importing ER_SPVRE_INPUT = LR_SPVRE_INPUT ).

***   Add new Bag Making
      ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_INPUT
                               IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_BMAKE=>C_IPRVT_BMAKE )
                     changing  CT_SPVRE        = LT_SPVRE ).

***   Set via Supervisor
      ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***   Try Again
      ME->GET_GATE_BMAKE( importing ER_GATE_BMAKE = ER_GATE_BMAKE
                                    EF_SFDAT      = EF_SFDAT ).
    endif.

  endmethod.
  method GET_GATE_CSTEP_WICKET.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE,
          LT_CSTEP type        ZVCXI_FBSSC_TT_BAGTY_CSTEP.
    data: LR_PR_BFG      type ref to ZCL_VCXI_FBSS_PR_BFG,
          LR_CUST_BAG    type ref to ZCL_VCXI_FBSS_CUST_BAG,
          LR_PRVDR       type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_BFG   type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_BCOMP type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_CONV  type ref to /VCXI/CL_VKSR_SPVRE.


    check IR_GATE_BFG is bound.

*** Get Bag Customizing
    move IR_GATE_BFG->R_CLSPR ?to LR_PR_BFG.
    LR_PR_BFG->GET_IBAGT( importing ER_CUST_BAG = LR_CUST_BAG ).

***--------------------------------------------------------------------------------------
*** Get CStep Wicketing Provider
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_WICKET=>C_IPRVT_CSTEP_WICKET ).
    read table LT_PRVDR into LR_PRVDR index 1.
    if SY-SUBRC eq 0.
      move LR_PRVDR to ER_GATE_CSTEP_WICKET.
    endif.

*** Mark it as non-standard if more than one provider can be found
    if LINES( LT_PRVDR ) gt 1.
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
    else.
      move C_SFDAT_STANDARD to EF_SFDAT.
    endif.

***--------------------------------------------------------------------------------------
*** Get Definition of Conversion Step based on Bag Type Customizing
    if LR_CUST_BAG is bound.
      move LR_CUST_BAG->GET_CSTEP( ) to LT_CSTEP.
    endif.
    read table LT_CSTEP with key ICSTP = ZCL_VCXI_FBSS_CUST_BAG=>C_ICSTP_WICKET
                        transporting no fields.

***--------------------------------------------------------------------------------------
    if SY-SUBRC is not initial.
***   No Wicketing is allowed
      if ER_GATE_CSTEP_WICKET is bound.
        ER_GATE_CSTEP_WICKET->DO_FREE( ).
      endif.

***--------------------------------------------------------------------------------------
    else.
***   If no CStep Wicketing found -> Create new
      if ER_GATE_CSTEP_WICKET is not bound.
***     Get current Supervised Elements
        move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***     Get Bag Component through Bag Finished Good Gate
        LR_SPVRE_BFG = ME->GET_SPVRE_BY_GATE( IR_GATE  = IR_GATE_BFG
                                              IT_SPVRE = LT_SPVRE ).
        move LR_SPVRE_BFG->R_PARENT   to LR_SPVRE_BCOMP.  "Bag FG -> Output
        move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Output -> Spec
        move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Spec   -> Bag Component

***     Analyze Bag Component
        ME->ANALYZE_BCOMP( exporting IR_SPVRE_BCOMP  = LR_SPVRE_BCOMP
                                     IT_SPVRE        = LT_SPVRE
                           importing ER_SPVRE_CONV   = LR_SPVRE_CONV ).

***     Add new Conversion Step Wicketing
        ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_CONV
                                 IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_WICKET=>C_IPRVT_CSTEP_WICKET )
                       changing  CT_SPVRE        = LT_SPVRE ).

***     Set via Supervisor
        ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***     Try Again
        ME->GET_GATE_CSTEP_WICKET( exporting IR_GATE_BFG          = IR_GATE_BFG
                                   importing ER_GATE_CSTEP_WICKET = ER_GATE_CSTEP_WICKET
                                             EF_SFDAT             = EF_SFDAT ).
      endif.
    endif.

  endmethod.
  method GET_GATE_CSTEP_WIND.

    data: LT_SPVRE type        /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR type        /VCXI/VKSR_TT_GATE,
          LT_CSTEP type        ZVCXI_FBSSC_TT_BAGTY_CSTEP.
    data: LR_PR_BFG      type ref to ZCL_VCXI_FBSS_PR_BFG,
          LR_CUST_BAG    type ref to ZCL_VCXI_FBSS_CUST_BAG,
          LR_PRVDR       type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_BFG   type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_BCOMP type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SPVRE_CONV  type ref to /VCXI/CL_VKSR_SPVRE.


    check IR_GATE_BFG is bound.

*** Get Bag Customizing
    move IR_GATE_BFG->R_CLSPR ?to LR_PR_BFG.
    LR_PR_BFG->GET_IBAGT( importing ER_CUST_BAG = LR_CUST_BAG ).

***--------------------------------------------------------------------------------------
*** Get CStep Winding Provider
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_WIND=>C_IPRVT_CSTEP_WIND ).
    read table LT_PRVDR into LR_PRVDR index 1.
    if SY-SUBRC eq 0.
      move LR_PRVDR to ER_GATE_CSTEP_WIND.
    endif.

*** Mark it as non-standard if more than one provider can be found
    if LINES( LT_PRVDR ) gt 1.
      move C_SFDAT_NONSTANDARD to EF_SFDAT.
    else.
      move C_SFDAT_STANDARD to EF_SFDAT.
    endif.

***--------------------------------------------------------------------------------------
*** Get Definition of Conversion Step based on Bag Type Customizing
    if LR_CUST_BAG is bound.
      move LR_CUST_BAG->GET_CSTEP( ) to LT_CSTEP.
    endif.
    read table LT_CSTEP with key ICSTP = ZCL_VCXI_FBSS_CUST_BAG=>C_ICSTP_WIND
                        transporting no fields.

***--------------------------------------------------------------------------------------
    if SY-SUBRC is not initial.
***   No Winding is allowed
      if ER_GATE_CSTEP_WIND is bound.
        ER_GATE_CSTEP_WIND->DO_FREE( ).
      endif.

***--------------------------------------------------------------------------------------
    else.
***   If no CStep Winding found -> Create new
      if ER_GATE_CSTEP_WIND is not bound.
***     Get current Supervised Elements
        move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***     Get Bag Component through Bag Finished Good Gate
        LR_SPVRE_BFG = ME->GET_SPVRE_BY_GATE( IR_GATE  = IR_GATE_BFG
                                              IT_SPVRE = LT_SPVRE ).
        move LR_SPVRE_BFG->R_PARENT   to LR_SPVRE_BCOMP.  "Bag FG -> Output
        move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Output -> Spec
        move LR_SPVRE_BCOMP->R_PARENT to LR_SPVRE_BCOMP.  "Spec   -> Bag Component

***     Analyze Bag Component
        ME->ANALYZE_BCOMP( exporting IR_SPVRE_BCOMP  = LR_SPVRE_BCOMP
                                     IT_SPVRE        = LT_SPVRE
                           importing ER_SPVRE_CONV   = LR_SPVRE_CONV ).

***     Add new Conversion Step WINDing
        ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE_CONV
                                 IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FBSS_PR_CSTEP_WIND=>C_IPRVT_CSTEP_WIND )
                       changing  CT_SPVRE        = LT_SPVRE ).

***     Set via Supervisor
        ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

***     Try Again
        ME->GET_GATE_CSTEP_WIND( exporting IR_GATE_BFG        = IR_GATE_BFG
                                 importing ER_GATE_CSTEP_WIND = ER_GATE_CSTEP_WIND
                                           EF_SFDAT           = EF_SFDAT ).
      endif.
    endif.

  endmethod.
  method SET_NOFIL_BY_PART.

    data: LR_GATE_FCONI type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONO type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Analyze Bag Part
    ME->ANALYZE_PART( exporting IR_GATE_PART  = IR_GATE_PART
                      importing ER_GATE_FCONI = LR_GATE_FCONI ).

    check LR_GATE_FCONI is bound.

*** Find Connector Out
    LR_GATE_FCONO = ME->GET_FCONO_BY_FCONI( IR_GATE_FCONI = LR_GATE_FCONI ).
    check LR_GATE_FCONO is bound.

*** Set Number of Films, Number of Outs and Trim to Film
    ME->R_BL_FASTD_FILM->SET_NOFIL( IR_GATE_OUT = LR_GATE_FCONO
                                    IF_NOFIL    = IF_NOFIL
                                    IF_NOOUT    = IF_NOOUT
                                    IS_TRWID    = IS_TRWID ).

  endmethod.
  method SWITCH_PART_TO_PROC.

    data: LS_FASTD_INP   type ZVCXI_FFSS_S_FASTD_INP.
    data: LT_SPVRE       type /VCXI/VKSR_TT_SPVRE,
          LT_PRVDR       type /VCXI/VKSR_TT_GATE,
          LT_SPVRE_FCOMP type /VCXI/VKSR_TT_SPVRE,
          LT_FASTD_INP   type ZVCXI_FFSS_TT_FASTD_INP.
    data: LR_GATE_BFILM     type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONI     type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONO     type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE          type ref to /VCXI/CL_VKSR_SPVRE,
          LR_GATE_MS_FPROC  type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE_MS_FPROC type ref to /VCXI/CL_VKSR_SPVRE.


    free: ER_GATE_MS_FPROC.

***--------------------------------------------------------------------------------------
*** Analyze Bag/Handle Part
    ME->ANALYZE_PART( exporting IR_GATE_PART  = IR_GATE_PART
                      importing ER_GATE_BFILM = LR_GATE_BFILM
                                ER_GATE_FCONI = LR_GATE_FCONI ).
    check LR_GATE_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

*** Get all Provider
    move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

***--------------------------------------------------------------------------------------
*** Connection In was found
    if LR_GATE_FCONI is bound.
***   Analyze Film Connection In
      ME->ANALYZE_FCONI( exporting IR_GATE_FCONI  = LR_GATE_FCONI
                                   IT_SPVRE       = LT_SPVRE
                                   IT_PRVDR       = LT_PRVDR
                         importing ET_SPVRE_FCOMP = LT_SPVRE_FCOMP
                                   ER_GATE_FCONO  = LR_GATE_FCONO ).

      if LR_GATE_FCONO is bound.
***     Get data to transfer
        ME->R_BL_FASTD_FILM->GET_FASTD_BY_OUT( exporting IR_GATE_OUT  = LR_GATE_FCONO
                                               importing ET_FASTD_INP = LT_FASTD_INP ).
        read table LT_FASTD_INP into LS_FASTD_INP index 1.
        if SY-SUBRC eq 0 and LS_FASTD_INP-TINPU eq ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_FPROC.
          read table LS_FASTD_INP-T_GATE_INP into LR_GATE_MS_FPROC index 1.
          if SY-SUBRC ne 0.
            clear LR_GATE_MS_FPROC.
          endif.
        endif.
      endif.

***   Remove Film Components
      loop at LT_SPVRE_FCOMP into LR_SPVRE.
        delete LT_SPVRE where TABLE_LINE->F_GATKY eq LR_SPVRE->F_GATKY.
      endloop.
***   Remove Connection In
      LR_SPVRE = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_FCONI
                                        IT_SPVRE = LT_SPVRE ).
      delete LT_SPVRE where TABLE_LINE->F_GATKY eq LR_SPVRE->F_GATKY.
    endif.

*** Add Film Procurement Elements
    LR_SPVRE = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_BFILM
                                      IT_SPVRE = LT_SPVRE ).
    if LR_GATE_MS_FPROC is bound.
***   Copy based on existing Gate
      ME->ADD_SPVRE_BY_GATE( exporting IR_GATE          = LR_GATE_MS_FPROC
                                       IR_SPVRE_PARENT  = LR_SPVRE
                                       IF_COPY_CHILDREN = ABAP_TRUE
                             importing ER_SPVRE         = LR_SPVRE_MS_FPROC
                             changing  CT_SPVRE         = LT_SPVRE ).
    else.
***   Add Film Procurement Elements
      ME->ADD_SPVRE( exporting IR_SPVRE_PARENT = LR_SPVRE
                               IF_ID           = ME->GET_ID_BY_IPRVT( IF_IPRVT = ZCL_VCXI_FFSS_PR_MS_FPROC=>C_IPRVT_MS_FPROC )
                     importing ER_SPVRE        = LR_SPVRE_MS_FPROC
                     changing  CT_SPVRE        = LT_SPVRE ).
    endif.

***--------------------------------------------------------------------------------------
*** Set via Supervisor
    ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

    if ER_GATE_MS_FPROC is requested.
***   Get all Provider after Supervisor
      move ME->R_GATE->GET_PRVDR( ) to LT_PRVDR.

***   Return Film Procurement Gate
      ER_GATE_MS_FPROC = ME->GET_GATE_BY_SPVRE( IR_SPVRE = LR_SPVRE_MS_FPROC
                                                IT_PRVDR = LT_PRVDR ).
    endif.

  endmethod.
  method SWITCH_PART_TO_PROD.

    data: LT_SPVRE       type /VCXI/VKSR_TT_SPVRE,
          LT_FASTD_INP   type ZVCXI_FFSS_TT_FASTD_INP,
          LT_FASTD_LAMI  type ZVCXI_FFSS_TT_FASTD_LAMI,
          LT_SPVRE_FCOMP type /VCXI/VKSR_TT_SPVRE.
    data: LR_GATE_BFILM    type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_MS_FPROC type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_MS_EMAT  type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_FCONO    type ref to /VCXI/CL_VKSR_GATE,
          LR_SPVRE         type ref to /VCXI/CL_VKSR_SPVRE.
    field-symbols: <S_FASTD_INP> type ZVCXI_FFSS_S_FASTD_INP.


***--------------------------------------------------------------------------------------
*** Analyze Bag/Handle Part
    ME->ANALYZE_PART( exporting IR_GATE_PART     = IR_GATE_PART
                      importing ER_GATE_BFILM    = LR_GATE_BFILM
                                ER_GATE_MS_FPROC = LR_GATE_MS_FPROC
                                ER_GATE_MS_EMAT = LR_GATE_MS_EMAT ).
    check LR_GATE_BFILM is bound.

***--------------------------------------------------------------------------------------
*** Add Film Conection In with connecte Film Component
    ME->ADD_FCONI( exporting IR_GATE_BFILM = LR_GATE_BFILM
                   importing ER_GATE_FCONI = ER_GATE_FCONI ).

*** Add Film Procurement to Input of Production
    if LR_GATE_MS_FPROC is bound.
      append initial line to LT_FASTD_INP assigning <S_FASTD_INP>.
      move ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_FPROC to <S_FASTD_INP>-TINPU.
      append LR_GATE_MS_FPROC                    to <S_FASTD_INP>-T_GATE_INP.
    endif.

*** Add Estimation Material to Input of Production
    if LR_GATE_MS_EMAT is bound.
      append initial line to LT_FASTD_INP assigning <S_FASTD_INP>.
      move ZCL_VCXI_FFSS_BL_FASTD=>C_TINPU_EMAT  to <S_FASTD_INP>-TINPU.
      append LR_GATE_MS_EMAT                     to <S_FASTD_INP>-T_GATE_INP.
    endif.

*** Set new Values
    LR_GATE_FCONO = ME->GET_FCONO_BY_FCONI( IR_GATE_FCONI = ER_GATE_FCONI ).
    ME->R_BL_FASTD_FILM->SET_FASTD_BY_OUT( IR_GATE_OUT    = LR_GATE_FCONO
                                           IT_FASTD_INP   = LT_FASTD_INP
                                           IT_FASTD_LAMI  = LT_FASTD_LAMI
                                           IT_SPVRE_FCOMP = LT_SPVRE_FCOMP ).

***--------------------------------------------------------------------------------------
*** Get current Supervised Elements
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.

***--------------------------------------------------------------------------------------
*** Film Procurement was found
    if LR_GATE_MS_FPROC is bound.
***   Remove Film Procurement
      LR_SPVRE = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_MS_FPROC
                                        IT_SPVRE = LT_SPVRE ).
      delete LT_SPVRE where TABLE_LINE->F_GATKY eq LR_SPVRE->F_GATKY.
    endif.

***--------------------------------------------------------------------------------------
*** Estimation Material was found
    if LR_GATE_MS_EMAT is bound.
***   Remove Estimation Material
      LR_SPVRE = ME->GET_SPVRE_BY_GATE( IR_GATE  = LR_GATE_MS_EMAT
                                        IT_SPVRE = LT_SPVRE ).
      delete LT_SPVRE where TABLE_LINE->F_GATKY eq LR_SPVRE->F_GATKY.
    endif.

***--------------------------------------------------------------------------------------
*** Set via Supervisor
    ME->R_GATE->SET_SPVRE( IT_SPVRE = LT_SPVRE ).

  endmethod.
