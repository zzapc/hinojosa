
class ZCL_VCXI_XCE_MM_MAT_MMEXT definition
  public
  inheriting from ZCL_VCXI_XCA_MWB_CLMAT
  create public .

public section.

  data F_CNTXT type ZVCXI_XCE_MM_CNTXT .

  methods GET_MMEXT
    returning
      value(RR_MMEXT) type ref to ZCL_VCXI_XCE_MM_MMEXT
    raising
      /VCXI/CX_CKX .

  methods CREATE_COPY
    redefinition .
protected section.

  data R_MMEXT type ref to ZCL_VCXI_XCE_MM_MMEXT .

  methods UPDATE_CNF_MATNR
    importing
      !IT_SVCEL type /VCXI/CKX_TT_OBJECT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_MMEXT_CHANGED
    for event /VCXI/IF_CKX_OBJECT~CHANGED of ZCL_VCXI_XCE_MM_MMEXT .

  methods HANDLE_OPEN_SVC
    redefinition .
  methods HANDLE_SAVE
    redefinition .
  methods PREP_CNF_AFTER_COPY
    redefinition .
  methods RENEW_MATNR
    redefinition .
private section.
endclass. "ZCL_VCXI_XCE_MM_MAT_MMEXT definition
class ZCL_VCXI_XCE_MM_MAT_MMEXT implementation.
  method CREATE_COPY.

*** Create Copy using SUPER
    RR_CLMAT = SUPER->CREATE_COPY( ).
    check RR_CLMAT is bound.

    data(LR_CLMAT) = cast ZCL_VCXI_XCE_MM_MAT_MMEXT( RR_CLMAT ).

***------------------------------------------------------------------------------------------------
*** Get Material Master Extension
    data(LR_MMEXT) = ME->GET_MMEXT( ).
    if LR_MMEXT is bound.
***   Create copy of Material Extension (for new material)
      LR_CLMAT->R_MMEXT = LR_MMEXT->COPY( IF_MATNR = RR_CLMAT->GET_MATNR( )
                                          IF_WERKS = RR_CLMAT->GET_ORGDATA( )-WERKS ).
    else.
***   Get new MM Extension Instance
      LR_CLMAT->R_MMEXT ?= ZCL_VCXI_XCE_MM_MMEXT=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = ZCL_VCXI_XCE_MM_MMEXT=>ENCRYPT_GUID( IF_MATNR = RR_CLMAT->GET_MATNR( )
                                                                                                                                   IF_WERKS = RR_CLMAT->GET_ORGDATA( )-WERKS
                                                                                                                                   IF_CNTXT = ME->F_CNTXT ) ).
    endif.

  endmethod.
  method GET_MMEXT.

    if ME->R_MMEXT is not bound.
      data(LR_BOB_MAT) = ME->GET_BOB_MAT( ).
      check LR_BOB_MAT is bound.

***   Load MM Extension
      try.
          ME->R_MMEXT ?= ZCL_VCXI_XCE_MM_MMEXT=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = ZCL_VCXI_XCE_MM_MMEXT=>ENCRYPT_GUID( IF_MATNR = LR_BOB_MAT->GET_MATNR( )
                                                                                                                                 IF_WERKS = LR_BOB_MAT->GET_WERKS( ) ) ).
          set handler ME->HANDLE_MMEXT_CHANGED for ME->R_MMEXT.

        catch /VCXI/CX_CKX.
          clear ME->R_MMEXT.
      endtry.

***   Check Material Extension Context
      if ME->R_MMEXT is bound.
        ME->R_MMEXT->CHECK_CNTXT( IF_CNTXT = ME->F_CNTXT ).
      endif.
    endif.

    RR_MMEXT = ME->R_MMEXT.

  endmethod.
  method HANDLE_MMEXT_CHANGED.

    try.
***     Forward Change Information
        ME->MARK_CHANGED( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_OPEN_SVC.

    data: LF_MATNR type MATNR,
          LF_CNTXT type ZVCXI_XCE_MM_CNTXT.
    data: LR_MMEXT  type ref to ZCL_VCXI_XCE_MM_MMEXT,
          LR_SVCEL  type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


*** Open SmartVC via Standard
    SUPER->HANDLE_OPEN_SVC( ).

***------------------------------------------------------------------------------------------------
*** Get Material Business Object
    data(LR_BOB_MAT) = ME->GET_BOB_MAT( ).

*** Get Context Manager for Configuration
    data(LR_CNTXT_MGR) = ZCL_VCXI_XCE_MM_CNTXT_MGR=>GET_INSTANCE( IF_CMATN = LR_BOB_MAT->S_PLANTDATA-PS_CONF_MAT_LONG ).
    check LR_CNTXT_MGR is bound.

*** Get Finished Goods of Configuration
    data(LT_SVCEL) = LR_CNTXT_MGR->GET_FG( IR_SVC = LR_BOB_MAT->GET_SVC( ) ).

    loop at LT_SVCEL into LR_OBJECT.
      LR_SVCEL ?= LR_OBJECT.

***   Get Finished Good Information
      LR_CNTXT_MGR->GET_FG_INFO( exporting IR_SVCEL_FG = LR_SVCEL
                                 importing EF_MATNR    = LF_MATNR
                                           EF_CNTXT    = LF_CNTXT ).
      check LF_CNTXT is not initial and
            LR_BOB_MAT->GET_MATNR( ) eq LF_MATNR.

***   Update by Finished Good
      ME->R_MMEXT->UPDATE_BY_FG( IR_SVCEL = LR_SVCEL ).

    endloop.

  endmethod.
  method HANDLE_SAVE.

*** Create new Material Number if needed
    if ME->GET_MATNR( ) is initial.
      ME->RENEW_MATNR( ).
    endif.

*** Save Material Extension only if not cofigurable, as the material will take care of the save otherwise
    if ME->F_CHANGED          eq ABAP_TRUE and
       ME->IS_CONFIGURABLE( ) ne ABAP_TRUE.
      data(LR_MMEXT) = ME->GET_MMEXT( ).
      LR_MMEXT->SAVE( ).
    endif.

*** Perform normal Save
    SUPER->HANDLE_SAVE( ).

  endmethod.
  method PREP_CNF_AFTER_COPY.

    SUPER->PREP_CNF_AFTER_COPY( ).

***--------------------------------------------------------------------------------------
    data(LR_BOB_MAT) = ME->GET_BOB_MAT( ).
    check LR_BOB_MAT->F_CUOBJ is not initial.

***--------------------------------------------------------------------------------------
*** Get Context Manager for Configuration
    data(LR_CNTXT_MGR) = ZCL_VCXI_XCE_MM_CNTXT_MGR=>GET_INSTANCE( IF_CMATN = LR_BOB_MAT->S_PLANTDATA-PS_CONF_MAT_LONG ).
    check LR_CNTXT_MGR is bound.

*** Get SmartVC Instance
    data(LR_SVC) = LR_BOB_MAT->GET_SVC( ).

*** Remove old Finished Good Material Numbers
    data(LT_SVCEL) = LR_CNTXT_MGR->GET_FG( IR_SVC = LR_SVC ).
    ME->UPDATE_CNF_MATNR( IT_SVCEL = LT_SVCEL ).

*** Update Data Connector
    LR_SVC->UPDATE_DC( ).

  endmethod.
  method RENEW_MATNR.

*** Standard Renew Process
    SUPER->RENEW_MATNR( ).

***------------------------------------------------------------------------------------------------
*** Update Configuration
    if ME->R_BOB_MAT->F_CUOBJ is not initial.
***   Get Context Manager for Configuration
      data(LR_CNTXT_MGR) = ZCL_VCXI_XCE_MM_CNTXT_MGR=>GET_INSTANCE( IF_CMATN = ME->R_BOB_MAT->S_PLANTDATA-PS_CONF_MAT_LONG ).
      check LR_CNTXT_MGR is bound.

***   Get SmartVC Instance
      data(LR_SVC) = ME->R_BOB_MAT->GET_SVC( ).

***   Remove old Finished Good Material Numbers
      data(LT_SVCEL) = LR_CNTXT_MGR->GET_FG( IR_SVC = LR_SVC ).
      ME->UPDATE_CNF_MATNR( IT_SVCEL = LT_SVCEL ).

***   Update Data Connector
      LR_SVC->UPDATE_DC( ).
    endif.

***------------------------------------------------------------------------------------------------
*** Update Material Extension
    data(LR_MMEXT) = ME->GET_MMEXT( ).
    if LR_MMEXT is bound.
      LR_MMEXT->SET_MATNR( IF_MATNR = ME->R_BOB_MAT->GET_MATNR( )
                           IF_WERKS = ME->R_BOB_MAT->GET_WERKS( ) ).
    endif.

  endmethod.
  method UPDATE_CNF_MATNR.
  endmethod.
