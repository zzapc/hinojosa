
class ZCL_VCXI_FBSS_POPUP_BGPROP definition
  public
  create protected .

public section.

  data S_POPUP_BGPROP_VIS type ZVCXI_FBSS_S_POPUP_BGPROP_VIS read-only .
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_OKAY type SYUCOMM value 'OKAY' ##NO_TEXT.
  data T_BPINFO type ZVCXI_FBSS_TT_BPINFO read-only .
  data T_BGICS type ZVCXI_FBSS_TT_BGICS read-only .

  class-methods START
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_BL_BGBPROP type ref to ZCL_VCXI_FBSS_BL_BGBPROP
      !IR_BL_BGFPROP type ref to ZCL_VCXI_FBSS_BL_BGFPROP
      !IS_BGDATA type ZVCXI_FBSS_S_BGDATA
      !IF_LOCKED type /VCXI/CKX_LOCKED default ABAP_FALSE
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_POPUP_BGPROP_VIS
    importing
      !IS_POPUP_BGPROP_VIS type ZVCXI_FBSS_S_POPUP_BGPROP_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_MODIFY_SCREEN
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    YT_IBDIM type standard table of ZVCXI_FBS_IBDIM .

  data R_GRID_BPINFO type ref to ZCL_VCXI_FBSS_GRID_BPINFO .
  data R_GRID_BGICS type ref to ZCL_VCXI_FBSS_GRID_BGICS .
  data R_BL_BGFPROP_ORG type ref to ZCL_VCXI_FBSS_BL_BGFPROP .
  data R_BL_BGFPROP_NEW type ref to ZCL_VCXI_FBSS_BL_BGFPROP .
  data F_LOCKED type /VCXI/CKX_LOCKED .
  data R_GATE type ref to /VCXI/CL_VKSR_GATE .

  methods ADJUST_SCREEN_BY_OBDIM
    importing
      !IT_BGDIM type ZVCXI_FBSSC_TT_BAGTY_BGDIM
      !IT_IBDIM type YT_IBDIM
    changing
      !CS_SCREEN type SCREEN
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_BL_BGBPROP type ref to ZCL_VCXI_FBSS_BL_BGBPROP
      !IR_BL_BGFPROP type ref to ZCL_VCXI_FBSS_BL_BGFPROP
      !IS_BGDATA type ZVCXI_FBSS_S_BGDATA
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE optional
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE optional
      !IF_LOCKED type /VCXI/CKX_LOCKED optional
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FBSS_POPUP_BGPROP definition
class ZCL_VCXI_FBSS_POPUP_BGPROP implementation.
  method ADJUST_SCREEN_BY_OBDIM.

    data: LF_IBDIM type ZVCXI_FBS_IBDIM.

    loop at IT_IBDIM into LF_IBDIM.

      read table IT_BGDIM with key IBDIM = LF_IBDIM transporting no fields.
      if SY-SUBRC is initial.
        move 0 to CS_SCREEN-INVISIBLE.
        exit.
      else.
        move 1 to CS_SCREEN-INVISIBLE.
      endif.

    endloop.

  endmethod.
  method CONSTRUCTOR.

    data: LF_BGFPX type ZVCXI_FBS_BGFPX.
    data: LS_DESCR type /VCXI/CKX_S_DESCR.
    data: LT_DESCR type /VCXI/CKX_TT_DESCR.
    data: LR_CUST_BAG type ref to ZCL_VCXI_FBSS_CUST_BAG.

    move IF_LOCKED to ME->F_LOCKED.

    if IR_BL_BGBPROP is bound.
***   Gusset Dimension
      move IR_BL_BGBPROP->S_GUDIM to ME->S_POPUP_BGPROP_VIS-S_GUDIM.

***   Overlap Dimensions
      move IR_BL_BGBPROP->S_OLDIM to ME->S_POPUP_BGPROP_VIS-S_OLDIM.

***   Fold Dimensions
      move IR_BL_BGBPROP->S_FODIM to ME->S_POPUP_BGPROP_VIS-S_FODIM.

***   Wicket Dimensions
      move IR_BL_BGBPROP->S_WIDIM to ME->S_POPUP_BGPROP_VIS-S_WIDIM.

***   Winding Dimensions
      move IR_BL_BGBPROP->S_WNDIM to ME->S_POPUP_BGPROP_VIS-S_WNDIM.

    endif.

    if IR_BL_BGFPROP is bound.
***   Get Forward Property XML and copy to a New one
      move IR_BL_BGFPROP to ME->R_BL_BGFPROP_ORG.
      move ME->R_BL_BGFPROP_ORG->GET_BGFPX( ) to LF_BGFPX.
      move ZCL_VCXI_FBSS_BL_BGFPROP=>FACTORY( exporting IF_BGFPX = LF_BGFPX ) to ME->R_BL_BGFPROP_NEW.

***   Bag Part Info
      ME->T_BPINFO = IR_BL_BGFPROP->T_BPINFO.

***   Bag Included Conv. Step
      ME->T_BGICS  = IR_BL_BGFPROP->T_BGICS.

***   Handling Dimension
      ME->S_POPUP_BGPROP_VIS-S_HNDDIM = IR_BL_BGFPROP->S_HNDDIM.

***   Additional Weight
      ME->S_POPUP_BGPROP_VIS-S_ADDWT  = IR_BL_BGFPROP->S_ADDWT.
    endif.

*** Bag Data Basic information
    move: IS_BGDATA-IBAGT   to ME->S_POPUP_BGPROP_VIS-IBAGT,
          IS_BGDATA-S_BGHEI to ME->S_POPUP_BGPROP_VIS-S_BGHEI,
          IS_BGDATA-S_BGWID to ME->S_POPUP_BGPROP_VIS-S_BGWID,
          IS_BGDATA-S_BGWGT to ME->S_POPUP_BGPROP_VIS-S_BGWGT.

    LR_CUST_BAG = ZCL_VCXI_FBSS_CUST_BAG=>GET_INSTANCE( IF_IBAGT = IS_BGDATA-IBAGT ).
    check LR_CUST_BAG is bound.
    move LR_CUST_BAG->GET_DESCR( ) to ME->S_POPUP_BGPROP_VIS-IBAGT_DESCR.

    move IR_GATE to ME->R_GATE.

***--------------------------------------------------------------------------------------
*** Create Grid for Bag Part Info
    create object ME->R_GRID_BPINFO
      exporting
        IR_GATE           = IR_GATE
        IR_UIGATE         = IR_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_BPINFO'
        IR_CUST_BAG       = LR_CUST_BAG
        IT_BPINFO         = ME->T_BPINFO
        IF_BGWGT          = ME->S_POPUP_BGPROP_VIS-BGWGT_UOM
        IF_LOCKED         = IF_LOCKED.

***--------------------------------------------------------------------------------------
*** Create Grid for Included Conv. Steps
    create object ME->R_GRID_BGICS
      exporting
        IR_GATE           = IR_GATE
        IR_UIGATE         = IR_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_BGICS'
        IR_CUST_BAG       = LR_CUST_BAG
        IT_BGICS          = ME->T_BGICS
        IF_LOCKED         = IF_LOCKED.

  endmethod.
  method DO_FREE.

***--------------------------------------------------------------------------------------
*** Free the Grids
    if ME->R_GRID_BPINFO is bound.
      ME->R_GRID_BPINFO->DO_FREE( ).
      clear ME->R_GRID_BPINFO.
    endif.

    if ME->R_GRID_BGICS is bound.
      ME->R_GRID_BGICS->DO_FREE( ).
      clear ME->R_GRID_BGICS.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LT_BGDIM type ZVCXI_FBSSC_TT_BAGTY_BGDIM,
          LT_IBDIM type table of ZVCXI_FBS_IBDIM,
          LT_CSTEP type ZVCXI_FBSSC_TT_BAGTY_CSTEP.
    data: LR_CUST_BAG type ref to ZCL_VCXI_FBSS_CUST_BAG.
    field-symbols: <S_IBDIM> type ZVCXI_FBS_IBDIM.

***--------------------------------------------------------------------------------------
*** Get Bag Customizing
    LR_CUST_BAG = ZCL_VCXI_FBSS_CUST_BAG=>GET_INSTANCE( IF_IBAGT = S_POPUP_BGPROP_VIS-IBAGT ).
    if LR_CUST_BAG is bound.
      LT_BGDIM = LR_CUST_BAG->GET_BGDIM( ).
      LT_CSTEP = LR_CUST_BAG->GET_CSTEP( ).
    endif.

    loop at screen.

      case SCREEN-GROUP1.
        when 'GL1'.
          refresh LT_IBDIM.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GULEF to <S_IBDIM>.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GURIG to <S_IBDIM>.

          ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM = LT_IBDIM
                                                IT_BGDIM = LT_BGDIM
                                      changing CS_SCREEN = SCREEN ).
        when 'GL2'.
          refresh LT_IBDIM.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GUTOP to <S_IBDIM>.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_GUBOT to <S_IBDIM>.

          ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM = LT_IBDIM
                                                IT_BGDIM = LT_BGDIM
                                      changing CS_SCREEN = SCREEN ).
        when 'FL1'.
          refresh LT_IBDIM.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_FOTOP to <S_IBDIM>.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_FOBOT to <S_IBDIM>.

          ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM = LT_IBDIM
                                                IT_BGDIM = LT_BGDIM
                                      changing CS_SCREEN = SCREEN ).

        when 'OL1'.
          refresh LT_IBDIM.

          insert initial line into table LT_IBDIM assigning <S_IBDIM>.
          move ZCL_VCXI_FBSS_CUST_BAG=>C_IBDIM_OLWID to <S_IBDIM>.

          ME->ADJUST_SCREEN_BY_OBDIM( exporting IT_IBDIM = LT_IBDIM
                                                IT_BGDIM = LT_BGDIM
                                      changing CS_SCREEN = SCREEN ).
***     Wicket
        when 'WIK'.
          read table LT_CSTEP with key ICSTP = ZCL_VCXI_FBSS_CUST_BAG=>C_ICSTP_WICKET
                              transporting no fields.
          if SY-SUBRC is not initial.
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
            move 0 to SCREEN-REQUIRED.
            move 0 to SCREEN-INPUT.
          endif.

***     Winding
        when 'WND'.
          if not LINE_EXISTS( LT_CSTEP[ ICSTP = ZCL_VCXI_FBSS_CUST_BAG=>C_ICSTP_WIND ] ).
            SCREEN-ACTIVE = 0.
          endif.

        when others.
      endcase.

      modify screen.
    endloop.

    loop at screen.
***   Lock everything if not in change mode
      if ME->F_LOCKED eq ABAP_FALSE.
        move 0 to SCREEN-INPUT.
      endif.

      modify screen.
    endloop.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Set PF-Status
    ME->SET_PF_STATUS( ).

***--------------------------------------------------------------------------------------
*** Display Bag Part Info ALV
    if ME->R_GRID_BPINFO is bound.
      if ME->R_GRID_BPINFO->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_BPINFO->F_REFRESH_REQ.
      endif.

      ME->R_GRID_BPINFO->REFRESH_GRID( ).
    endif.

***--------------------------------------------------------------------------------------
*** Display Included Conv. Steps ALV
    if ME->R_GRID_BGICS is bound.
      if ME->R_GRID_BGICS->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_BGICS->F_REFRESH_REQ.
      endif.

      ME->R_GRID_BGICS->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_POPUP_BGPROP_VIS.

*** Set Bag Weight
    if ME->S_POPUP_BGPROP_VIS-S_BGWGT ne IS_POPUP_BGPROP_VIS-S_BGWGT.
      move IS_POPUP_BGPROP_VIS-S_BGWGT to ME->S_POPUP_BGPROP_VIS-S_BGWGT.
    endif.

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_OKAY.
        ME->HANDLE_UC_OKAY( ).

      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).

    endcase.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method HANDLE_UC_OKAY.

    data: LF_BGFPX type ZVCXI_FBS_BGFPX.
    data: LR_PR_MS_BPROC type ref to ZCL_VCXI_FBSS_PR_MS_BPROC.

    if ME->F_LOCKED eq ABAP_TRUE.

***   Get new values
      if ME->R_GRID_BPINFO is bound .
        move ME->R_GRID_BPINFO->GET_BPINFO( ) to ME->T_BPINFO.
      endif.

      if ME->R_GRID_BGICS is bound .
        move ME->R_GRID_BGICS->GET_BGICS( ) to ME->T_BGICS.
      endif.

***   Set new adjusted tables
      ME->R_BL_BGFPROP_NEW->SET_BPINFO( exporting IT_BPINFO = ME->T_BPINFO ).
      ME->R_BL_BGFPROP_NEW->SET_BGICS( exporting IT_BGICS = ME->T_BGICS ).

***   Get adjusted Bag Forward Property
      move ME->R_BL_BGFPROP_NEW->GET_BGFPX( ) to LF_BGFPX.

***   Set adjusted values to Original Bag property
      ME->R_BL_BGFPROP_ORG->SET_BGFPX( exporting IF_BGFPX = LF_BGFPX ).

      if ME->R_GATE is bound.
***     Get the Bag Procurement
        move ME->R_GATE->R_CLSPR ?to LR_PR_MS_BPROC.
        if LR_PR_MS_BPROC is bound.
***       Set Bag Weight
          LR_PR_MS_BPROC->SET_BGWGT( exporting IS_BGWGT = ME->S_POPUP_BGPROP_VIS-S_BGWGT ).
        endif.
      endif.

    endif.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method SET_PF_STATUS.

    data:  LT_EXCLUDE  type table of SYUCOMM.

    if ME->F_LOCKED ne ABAP_TRUE.
      append C_UC_OKAY to LT_EXCLUDE.
    endif.

    set pf-status '0100' of program 'SAPLZVCXI_FBSS_POPUP_BGPROP'
                         excluding LT_EXCLUDE.

  endmethod.
  method START.

    data: LR_POPUP_BGPROP type ref to ZCL_VCXI_FBSS_POPUP_BGPROP.

enhancement-section START spots ZVCXI_FBSS_ES_POPUP_BGPROP .
*** Create Instance
    create object LR_POPUP_BGPROP
      exporting
        IR_GATE       = IR_GATE
        IR_UIGATE     = IR_UIGATE
        IR_BL_BGBPROP = IR_BL_BGBPROP
        IR_BL_BGFPROP = IR_BL_BGFPROP
        IS_BGDATA     = IS_BGDATA
        IF_LOCKED     = IF_LOCKED.

*** Call Popup
    call function 'ZVCXI_FBSS_POPUP_BGPROP_START'
      exporting
        IR_POPUP_BGPROP = LR_POPUP_BGPROP.
end-enhancement-section.

*** Free the Popup
    LR_POPUP_BGPROP->DO_FREE( ).

  endmethod.
