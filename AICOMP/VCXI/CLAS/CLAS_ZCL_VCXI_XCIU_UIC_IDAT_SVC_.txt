
class ZCL_VCXI_XCIU_UIC_IDAT_SVC definition
  public
  final
  create private .

public section.
  type-pools SLIS .

  types:
    YI_NIDAT type range of ZVCXI_XCI_NIDAT .
  types:
    YI_CMATN type range of /VCXI/VKC_CMATN .
  types:
    YI_PRFID type range of /VCXI/VKC_PRFID .
  types:
    YI_IEALI type range of /VCXI/VKSC_IEALI .
  types:
    YI_CREBY type range of /VCXI/CKX_CREBY .
  types:
    YI_CREAT type range of /VCXI/CKX_CREAT .
  types:
    YI_CHABY type range of /VCXI/CKX_CHABY .
  types:
    YI_CHAAT type range of /VCXI/CKX_CHAAT .

  data I_CHAAT type YI_CHAAT .
  data I_CHABY type YI_CHABY .
  data I_CMATN type YI_CMATN .
  data I_CREAT type YI_CREAT .
  data I_CREBY type YI_CREBY .
  data I_IEALI type YI_IEALI .
  data I_NIDAT type YI_NIDAT .
  data I_PRFID type YI_PRFID .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods OPEN_IDAT_SVC
    importing
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !II_NIDAT type YI_NIDAT
      !II_CMATN type YI_CMATN
      !II_PRFID type YI_PRFID
      !II_IEALI type YI_IEALI
      !II_CREBY type YI_CREBY
      !II_CREAT type YI_CREAT
      !II_CHABY type YI_CHABY
      !II_CHAAT type YI_CHAAT
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_BACK type SYUCOMM value 'BACK'. "#EC NOTEXT
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  constants C_UC_CREATE type SYUCOMM value 'CREATE'. "#EC NOTEXT
  constants C_UC_DELETE type SYUCOMM value 'DELETE'. "#EC NOTEXT
  constants C_UC_EXIT type SYUCOMM value 'EXIT'. "#EC NOTEXT
  data R_GRID type ref to ZCL_VCXI_XCIU_GRID_IDAT_SVC .

  methods CALL_SHLP_CUPRFL
    returning
      value(RR_CUPRFL) type ref to /VCXI/CL_VKSC_CUPRFL
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_BACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CREATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DELETE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXIT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCIU_UIC_IDAT_SVC definition
class ZCL_VCXI_XCIU_UIC_IDAT_SVC implementation.
method CALL_SHLP_CUPRFL.

  data:  LS_SELFIELD   type          SLIS_SELFIELD,
         LS_CMPRK      type          /VCXI/VKC_S_CMPRK.
  data:  LT_CMPRK      type table of /VCXI/VKC_S_CMPRK,
         LT_EXCLUDING  type          SLIS_T_EXTAB.

***----------------------------------------------------------------------------
*** Get all SmartVC Models
  select CMATN PRFID
         into table LT_CMPRK
         from /VCXI/VKS_TC200.

***----------------------------------------------------------------------------
*** Exclude Functions
*  append  '&NT1' to LT_EXCLUDING.   " Okay
  append  '&ETA' to LT_EXCLUDING.
  append  '&ALL' to LT_EXCLUDING.
  append  '&SAL' to LT_EXCLUDING.
*  append  '&OUP' to LT_EXCLUDING.   " Sort Up
*  append  '&ODN' to LT_EXCLUDING.   " Sort Down
*  append  '%SC'  to LT_EXCLUDING.   " Search
*  append  '%SC+' to LT_EXCLUDING.   " Search More
*  append  '&ILT' to LT_EXCLUDING.   " Filter
  append  '&OL0' to LT_EXCLUDING.
  append  '&CRB' to LT_EXCLUDING.
  append  '&CRL' to LT_EXCLUDING.
  append  '&CRR' to LT_EXCLUDING.
  append  '&CRE' to LT_EXCLUDING.
*  append  '&AC1' to LT_EXCLUDING.  " Cancel

***----------------------------------------------------------------------------
*** Display Popup
  call function 'REUSE_ALV_POPUP_TO_SELECT'
    exporting
      I_TITLE               = 'Select SmartVC Model'(T01)
      I_SELECTION           = ABAP_TRUE
      I_ALLOW_NO_SELECTION  = ABAP_TRUE
      I_SCREEN_START_COLUMN = 10
      I_SCREEN_START_LINE   = 10
      I_SCREEN_END_COLUMN   = 85
      I_SCREEN_END_LINE     = 25
      I_TABNAME             = 'LT_CMPRK'
      I_STRUCTURE_NAME      = '/VCXI/VKC_S_CMPRK'
      IT_EXCLUDING          = LT_EXCLUDING
    importing
      ES_SELFIELD           = LS_SELFIELD
    tables
      T_OUTTAB              = LT_CMPRK
    exceptions
      PROGRAM_ERROR         = 1.

  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

  check LS_SELFIELD-TABINDEX is not initial.

***----------------------------------------------------------------------------
*** Process Result
  read table LT_CMPRK into LS_CMPRK index LS_SELFIELD-TABINDEX.

*** Get Profile
  RR_CUPRFL = /VCXI/CL_VKSC_CUPRFL=>GET_INSTANCE_BY_CMPRK( IS_CMPRK = LS_CMPRK ).

endmethod.
method DO_FREE.

  if ME->R_GRID is bound.
    ME->R_GRID->DO_FREE( ).
    clear ME->R_GRID.
  endif.

endmethod.
method DO_PBO.

  set pf-status '0100' of program 'SAPLZVCXI_XCIU_UIC_IDAT_SVC'.

  if ME->R_GRID is not bound.
    create object ME->R_GRID
      exporting
        IR_UIC_IDAT_SVC = ME.
  endif.
  ME->R_GRID->REFRESH_GRID( ).

endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when C_UC_BACK.
      ME->HANDLE_UC_BACK( ).
    when C_UC_EXIT.
      ME->HANDLE_UC_EXIT( ).
    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).

    when C_UC_CREATE.
      ME->HANDLE_UC_CREATE( ).
    when C_UC_DELETE.
      ME->HANDLE_UC_DELETE( ).
  endcase.

endmethod.
method HANDLE_UC_BACK.

  ME->DO_FREE( ).

  leave to screen 0.

endmethod.
method HANDLE_UC_CANCEL.

  ME->DO_FREE( ).

  leave to screen 0.

endmethod.
method HANDLE_UC_CREATE.

  data:  LF_CANCELED    type        ABAP_BOOL,
         LF_IEALI       type        /VCXI/VKSC_IEALI.
  data:  LT_OBJECT_ALL  type        /VCXI/CKX_TT_OBJECT,
         LT_OBJECT_SEL  type        /VCXI/CKX_TT_OBJECT.
  data:  LR_CUPRFL      type ref to /VCXI/CL_VKSC_CUPRFL,
         LR_OBJECT      type ref to /VCXI/IF_CKX_OBJECT,
         LR_IDAT_SVC    type ref to ZCL_VCXI_XCI_IDAT_SVC.

***------------------------------------------------------------------------------------------------
*** Pick Model
  LR_CUPRFL = ME->CALL_SHLP_CUPRFL( ).
  check LR_CUPRFL is bound.

***------------------------------------------------------------------------------------------------
*** Pick Alias
  LT_OBJECT_ALL = LR_CUPRFL->GET_REGISTERED_CEALI( ).

  call function '/VCXI/CKX_OBJECT_POPUP_START'
    exporting
      IT_OBJECT_ALL = LT_OBJECT_ALL
    importing
      ET_OBJECT_SEL = LT_OBJECT_SEL
      EF_CANCELED   = LF_CANCELED.

  check LF_CANCELED ne ABAP_TRUE.
  read table LT_OBJECT_SEL into LR_OBJECT index 1.
  check SY-SUBRC eq 0.

  move LR_OBJECT->GET_ID( ) to LF_IEALI.

***------------------------------------------------------------------------------------------------
*** Create Integration Data SVC
  LR_IDAT_SVC = ZCL_VCXI_XCI_IDAT_SVC=>CREATE( IS_CMPRK = LR_CUPRFL->R_CVC_CUPRFL->S_CMPRK
                                               IF_IEALI = LF_IEALI ).

  ME->OPEN_IDAT_SVC( IR_IDAT_SVC = LR_IDAT_SVC ).

endmethod.
method HANDLE_UC_DELETE.

  data:  LT_IDAT_SVC   type        /VCXI/CKX_TT_OBJECT.
  data:  LR_IDAT_SVC   type ref to ZCL_VCXI_XCI_IDAT_SVC,
         LR_MSG        type ref to /VCXI/CL_CKXM_MESSAGE,
         LR_OBJECT     type ref to /VCXI/IF_CKX_OBJECT,
         LR_CX_CKX     type ref to /VCXI/CX_CKX.

  check ME->R_GRID is bound.
  LT_IDAT_SVC = ME->R_GRID->GET_SELECTED_IDAT_SVC( ).

  create object LR_MSG.

  loop at LT_IDAT_SVC into LR_OBJECT.
    move LR_OBJECT ?to LR_IDAT_SVC.

    try.
        if LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_TRUE.
          LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK( ).
        endif.

***     Perform Delete, Save Deletion and Free the Object
        LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCI_IDAT_SVC=>C_FCODE_DELETE ).
        LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCI_IDAT_SVC=>C_FCODE_SAVE ).
        LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCI_IDAT_SVC=>C_FCODE_FREE ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.
  endloop.

  commit work and wait.

*** Integration Data deleted.
  message id 'ZVCXI_XCIU' type 'S' number '102'.

*** Refresh Grid
  move ABAP_TRUE to ME->R_GRID->F_REFRESH_REQ.

endmethod.
method HANDLE_UC_EXIT.

  ME->DO_FREE( ).

  leave to screen 0.

endmethod.
method OPEN_IDAT_SVC.

*** Free current UI
  ME->DO_FREE( ).

*** Start UI
  ZCL_VCXI_XCIU_UI_IDAT_SVC=>START( IR_IDAT_SVC = IR_IDAT_SVC ).

*** Unlock on leaving
  IR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_LOCKING~DO_UNLOCK( ).

endmethod.
method START.

  data: LR_UIC_IDAT_SVC type ref to  ZCL_VCXI_XCIU_UIC_IDAT_SVC.

  create object LR_UIC_IDAT_SVC.

  move: II_NIDAT to LR_UIC_IDAT_SVC->I_NIDAT,
        II_CMATN to LR_UIC_IDAT_SVC->I_CMATN,
        II_PRFID to LR_UIC_IDAT_SVC->I_PRFID,
        II_IEALI to LR_UIC_IDAT_SVC->I_IEALI,
        II_CREBY to LR_UIC_IDAT_SVC->I_CREBY,
        II_CREAT to LR_UIC_IDAT_SVC->I_CREAT,
        II_CHABY to LR_UIC_IDAT_SVC->I_CHABY,
        II_CHAAT to LR_UIC_IDAT_SVC->I_CHAAT.

  call function 'ZVCXI_XCIU_UIC_IDAT_SVC_START'
    exporting
      IR_UIC_IDAT_SVC = LR_UIC_IDAT_SVC.

endmethod.
