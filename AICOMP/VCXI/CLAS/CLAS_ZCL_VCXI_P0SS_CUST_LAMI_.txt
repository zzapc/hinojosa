
class ZCL_VCXI_P0SS_CUST_LAMI definition
  public
  create protected .

public section.

  constants C_RLAMI_WITH type ZVCXI_P0SS_RLAMI value 'W'. "#EC NOTEXT
  constants C_RLAMI_CROSS type ZVCXI_P0SS_RLAMI value 'C'. "#EC NOTEXT
  constants C_LASID_I type ZVCXI_P0SS_LASID value 'I'. "#EC NOTEXT
  constants C_LASID_O type ZVCXI_P0SS_LASID value 'O'. "#EC NOTEXT
  constants C_TLAMI_RTS type ZVCXI_P0SS_TLAMI value 'RTS'. "#EC NOTEXT
  constants C_TLAMI_STS type ZVCXI_P0SS_TLAMI value 'STS'. "#EC NOTEXT
  constants C_TLAGC_FLUTE type ZVCXI_P0SS_TLAGC value 'FT'. "#EC NOTEXT
  constants C_TLAGC_WHOLE type ZVCXI_P0SS_TLAGC value 'WS'. "#EC NOTEXT

  class-methods CLASS_CONSTRUCTOR .
  class-methods GET_DESCR_TLAGC
    importing
      !IF_TLAGC type ZVCXI_P0SS_TLAGC
    returning
      value(RF_TLAGC_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods GET_DESCR_TLAMI
    importing
      !IF_TLAMI type ZVCXI_P0SS_TLAMI
    returning
      value(RF_TLAMI_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods GET_DFLT_OVERLAP
    importing
      !IF_WERKS type WERKS_D
    exporting
      !ES_OLWID type ZVCXI_P0SS_S_OLWID
      !ES_OLLEN type ZVCXI_P0SS_S_OLLEN
    raising
      /VCXI/CX_CKX .
  class-methods GET_DFLT_RLAMI
    importing
      !IF_WERKS type WERKS_D
    returning
      value(RF_RLAMI) type ZVCXI_P0SS_RLAMI
    raising
      /VCXI/CX_CKX .
  class-methods GET_LAMI_GCONSU
    importing
      !IF_TLAGC type ZVCXI_P0SS_TLAGC
      !IF_WERKS type WERKS_D
      !IF_DATS type DATS default SY-DATUM
    exporting
      !EF_MATNR type MATNR
      !ES_AVGCO type ZVCXI_XCS_S_AVGCO
      !ES_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  class-methods MAP_SHTL
    importing
      !IF_RLAMI type ZVCXI_P0SS_RLAMI
      !IS_SHTLL type ZVCXI_P0SS_S_SHTLL
      !IS_SHTLW type ZVCXI_P0SS_S_SHTLW
    exporting
      !ES_SHTLE type ZVCXI_P0SS_S_SHTLE
      !ES_SHTWI type ZVCXI_P0SS_S_SHTWI
    raising
      /VCXI/CX_CKX .
  class-methods SORT_LAMI
    changing
      !CT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    YT_TC710 type standard table of ZVCXI_P0S_TC710 with default key .
  types:
    YT_TC710T type standard table of ZVCXI_P0S_TC710T with default key .
  types:
    YT_TC721 type standard table of ZVCXI_P0S_TC721 with default key .
  types:
    YT_TC730 type standard table of ZVCXI_P0S_TC730 with default key .
  types:
    YT_TC730T type standard table of ZVCXI_P0S_TC730T with default key .
  types:
    YT_TD731 type standard table of ZVCXI_P0S_TD731 with default key .
  types:
    YT_TD740 type standard table of ZVCXI_P0S_TD740 with default key .

  class-data T_TC710 type YT_TC710 .
  class-data T_TC710T type YT_TC710T .
  class-data T_TC721 type YT_TC721 .
  class-data T_TC730 type YT_TC730 .
  class-data T_TC730T type YT_TC730T .
  class-data T_TD731 type YT_TD731 .
  class-data T_TD740 type YT_TD740 .
private section.
endclass. "ZCL_VCXI_P0SS_CUST_LAMI definition
class ZCL_VCXI_P0SS_CUST_LAMI implementation.
method CLASS_CONSTRUCTOR.

  select *
         from ZVCXI_P0S_TC710
         into table T_TC710.

  select *
         from ZVCXI_P0S_TC710T
         into table T_TC710T.

  select *
         from ZVCXI_P0S_TC721
         into table T_TC721.

  select *
         from ZVCXI_P0S_TC730
         into table T_TC730.

  select *
         from ZVCXI_P0S_TC730T
         into table T_TC730T.

  select *
         from ZVCXI_P0S_TD731
         into table T_TD731.

  select *
         from ZVCXI_P0S_TD740
         into table T_TD740.

endmethod.
method GET_DESCR_TLAGC.

  data: LS_TC730T type ZVCXI_P0S_TC730T.

  read table T_TC730 with key TLAGC = IF_TLAGC
                     transporting no fields.
  check SY-SUBRC = 0.

*** Read Lamination Glue Consumption Type Description
  read table T_TC730T into LS_TC730T
                      with key TLAGC = IF_TLAGC
                               LANGU = SY-LANGU.
  if SY-SUBRC ne 0.
    read table T_TC730T into LS_TC730T
                        with key TLAGC = IF_TLAGC
                                 LANGU = 'E'.
  endif.
  check SY-SUBRC = 0.
  move LS_TC730T-DESCR to RF_TLAGC_DESCR.

endmethod.
method GET_DESCR_TLAMI.

  data: LS_TC710T type ZVCXI_P0S_TC710T.

  read table T_TC710 with key TLAMI = IF_TLAMI
                     transporting no fields.
  check SY-SUBRC = 0.

*** Read Lamination Type Description
  read table T_TC710T into LS_TC710T
                      with key TLAMI = IF_TLAMI
                               LANGU = SY-LANGU.
  if SY-SUBRC ne 0.
    read table T_TC710T into LS_TC710T
                        with key TLAMI = IF_TLAMI
                                 LANGU = 'E'.
  endif.
  check SY-SUBRC = 0.
  move LS_TC710T-DESCR to RF_TLAMI_DESCR.

endmethod.
method GET_DFLT_OVERLAP.

  data: LS_TD740 type ZVCXI_P0S_TD740.
  data: LT_TD740 type YT_TD740.

  move T_TD740 to LT_TD740.
*** First Plant depending
  delete LT_TD740 where WERKS ne IF_WERKS.
  read table LT_TD740 into LS_TD740 index 1.
  if SY-SUBRC = 0.
    move-corresponding LS_TD740 to: ES_OLWID, ES_OLLEN.
    exit.
  endif.

  move T_TD740 to LT_TD740.
*** Second General
  delete LT_TD740 where WERKS ne SPACE.
  read table LT_TD740 into LS_TD740 index 1.
  if SY-SUBRC = 0.
    move-corresponding LS_TD740 to: ES_OLWID, ES_OLLEN.
    exit.
  endif.

endmethod.
method GET_DFLT_RLAMI.

  data: LS_TC721 type ZVCXI_P0S_TC721.
  data: LT_TC721 type YT_TC721.

  move T_TC721 to LT_TC721.
*** First Plant depending
  delete LT_TC721 where WERKS ne IF_WERKS.
  read table LT_TC721 into LS_TC721 index 1.
  if SY-SUBRC = 0.
    move LS_TC721-RLAMI to RF_RLAMI.
    exit.
  endif.

  move T_TC721 to LT_TC721.
*** Second General
  delete LT_TC721 where WERKS ne SPACE.
  read table LT_TC721 into LS_TC721 index 1.
  if SY-SUBRC = 0.
    move LS_TC721-RLAMI to RF_RLAMI.
    exit.
  endif.

endmethod.
method GET_LAMI_GCONSU.

  data: LS_TD731 type ZVCXI_P0S_TD731.
  data: LT_TD731 type YT_TD731.

  move T_TD731 to LT_TD731.
  delete LT_TD731 where VALFR gt IF_DATS.
*** First Plant depending
  delete LT_TD731 where TLAGC ne IF_TLAGC
                     or WERKS ne IF_WERKS.
  sort LT_TD731 by VALFR descending.
  read table LT_TD731 into LS_TD731 index 1.
  if SY-SUBRC is initial.
    move-corresponding LS_TD731 to: ES_AVGCO, ES_AVGCP.
    move LS_TD731-MATNR         to EF_MATNR.
    exit.
  endif.

  move T_TD731 to LT_TD731.
  delete LT_TD731 where VALFR gt IF_DATS.
*** Second General
  delete LT_TD731 where TLAGC ne IF_TLAGC
                     or WERKS ne SPACE.
  sort LT_TD731 by VALFR descending.
  read table LT_TD731 into LS_TD731 index 1.
  if SY-SUBRC is initial.
    move-corresponding LS_TD731 to: ES_AVGCO, ES_AVGCP.
    move LS_TD731-MATNR         to EF_MATNR.
    exit.
  endif.

endmethod.
method MAP_SHTL.

  case IF_RLAMI.
    when C_RLAMI_WITH.
      if ES_SHTLE is requested.
        move IS_SHTLL-SHTLL          to ES_SHTLE-SHTLE.
        move IS_SHTLL-SHTLL_UOM      to ES_SHTLE-SHTLE_UOM.
      endif.
      if ES_SHTWI is requested.
        move IS_SHTLW-SHTLW          to ES_SHTWI-SHTWI.
        move IS_SHTLW-SHTLW_UOM      to ES_SHTWI-SHTWI_UOM.
      endif.

    when C_RLAMI_CROSS.
      if ES_SHTLE is requested.
        move IS_SHTLW-SHTLW          to ES_SHTLE-SHTLE.
        move IS_SHTLW-SHTLW_UOM      to ES_SHTLE-SHTLE_UOM.
      endif.
      if ES_SHTWI is requested.
        move IS_SHTLL-SHTLL          to ES_SHTWI-SHTWI.
        move IS_SHTLL-SHTLL_UOM      to ES_SHTWI-SHTWI_UOM.
      endif.

  endcase.

endmethod.
method SORT_LAMI.

  data:  LT_GATE           type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_LAMI        type ref to ZCL_VCXI_P0SS_PR_LAMI.

*** Don't sort if not needed
  check lines( CT_GATE ) gt 1.

*** Buffer
  move CT_GATE to LT_GATE.
  clear: CT_GATE.

***----------------------------------------------------------------------------
*** Get Lamination - Inline Lamination
  loop at LT_GATE into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_LAMI.
        check LR_PR_LAMI is bound and
              LR_PR_LAMI->GET_TLAMI( ) eq C_TLAMI_RTS.
        append LR_GATE to CT_GATE.
        delete LT_GATE.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

***----------------------------------------------------------------------------
*** Sort other Laminations Lamination by Gate and add
  read table LT_GATE into LR_GATE index 1.
  if LR_GATE is bound.
    LR_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).
    append lines of LT_GATE to CT_GATE.
  endif.

endmethod.
