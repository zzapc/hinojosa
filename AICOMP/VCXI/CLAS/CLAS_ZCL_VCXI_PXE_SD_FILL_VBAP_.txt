
class ZCL_VCXI_PXE_SD_FILL_VBAP definition
  public
  inheriting from ZCL_VCXI_XCE_SD_FILL_VBAP
  create public .

public section.
protected section.

  methods GET_START_SVCEL
    redefinition .
  methods ADJUST_VE
    redefinition .
private section.
endclass. "ZCL_VCXI_PXE_SD_FILL_VBAP definition
class ZCL_VCXI_PXE_SD_FILL_VBAP implementation.
  method ADJUST_VE.

    data: LS_XVBAP_MQ   type VBAPVB,
          LS_XVBAP_ROOT type VBAPVB,
          LS_VBAP       type VBAP.
    field-symbols: <T_TEXT_VE> type ZVCXI_XCE_SD_TT_TEXT_VE.


*** Super
    SUPER->ADJUST_VE( exporting IF_GVCIN_CNF = IF_GVCIN_CNF
                                IF_GVCIN_POS = IF_GVCIN_POS
                                IS_VBAP      = IS_VBAP
                                IT_XVBAP     = IT_XVBAP
                      changing  CS_VBAP_VE   = CS_VBAP_VE ).

***--------------------------------------------------------------------------------------
*** Get Config. Material & Profile Key
    data(LS_CMPRK) = /VCXI/CL_VKCR_GATEWAY=>GET_CMPRK( IF_GVCIN = IF_GVCIN_POS ).

*** Adjust Values for Lower-Level Items of Multi Quantity
    if value #( IT_XVBAP[ POSNR = IS_VBAP-UEPOS ]-MATNR optional ) cp '*_MQ_CNF'.
***   Get Multi Quantity Item
      read table IT_XVBAP into LS_XVBAP_MQ with key POSNR = IS_VBAP-UEPOS.
      check SY-SUBRC eq 0.
***   Get Header Item
      read table IT_XVBAP into LS_XVBAP_ROOT with key POSNR = LS_XVBAP_MQ-UEPOS.
      check SY-SUBRC eq 0.

***   Adjust Weight of MQ Items by Item Quanity
      move-corresponding CS_VBAP_VE to LS_VBAP.
      if LS_XVBAP_ROOT-KWMENG ne 0 and
         LS_XVBAP_MQ-KWMENG   ne 0.
        LS_VBAP-BRGEW = LS_VBAP-BRGEW / LS_XVBAP_ROOT-KWMENG * LS_XVBAP_MQ-KWMENG.
        LS_VBAP-NTGEW = LS_VBAP-NTGEW / LS_XVBAP_ROOT-KWMENG * LS_XVBAP_MQ-KWMENG.
      else.
        clear: LS_VBAP-BRGEW, LS_VBAP-NTGEW.
      endif.
      move-corresponding LS_VBAP to CS_VBAP_VE.

***   No Text Update for Multi Quantity
      assign component 'T_TEXT_VE' of structure CS_VBAP_VE to <T_TEXT_VE>.
      if SY-SUBRC eq 0.
        clear <T_TEXT_VE>.
      endif.
    endif.

  endmethod.
  method GET_START_SVCEL.

    data: LF_GVCIN type /VCXI/VKCR_GVCIN,
          LF_INDEX type I.
    data: LS_CMPRK type /VCXI/VKC_S_CMPRK.
    data: LT_SVCEL type /VCXI/CKX_TT_OBJECT,
          LT_VCMDL type /VCXI/VKCR_TT_VCMDL.


*** Standard Model
    EF_IVEMO = 'VBAP_VE'.

*** Get Finished Goods which are marked as Multi Quantity Components
    LT_SVCEL = IR_SVC->GET_SVC_ELEMENTS( IF_ATTID  = 'MQ_COMP'
                                         IF_INUSE  = ABAP_TRUE
                                         IF_SORTED = ABAP_TRUE ).
    if LINES( LT_SVCEL ) eq 1.
      RR_SVCEL ?= value #( LT_SVCEL[ 1 ] optional ).
    else.
***   Get Config. Material & Profile Key
      LS_CMPRK = /VCXI/CL_VKCR_GATEWAY=>GET_CMPRK( IF_GVCIN = IF_GVCIN_POS ).

***   Get Configuration Model
      LT_VCMDL = /VCXI/CL_VKCR_GATEWAY=>GET_MODEL( IF_GVCIN = IF_GVCIN_POS ).

***   Special Handling for Multi Quantity
      if LS_CMPRK-CMATN cp '*_MQ_CNF'.
        LF_GVCIN = value #( LT_VCMDL[ GVCIN = IF_GVCIN_POS ]-PARENT optional ).
      else.
        LF_GVCIN = IF_GVCIN_POS.
      endif.

***   Special Handling for multiple Component (get items with the same parent)
      if LT_VCMDL[ GVCIN = LF_GVCIN ]-PARENT is not initial.
        delete LT_VCMDL where PARENT ne LT_VCMDL[ GVCIN = LF_GVCIN ]-PARENT.
        LF_INDEX = LINE_INDEX( LT_VCMDL[ GVCIN = LF_GVCIN ] ).
        RR_SVCEL ?= value #( LT_SVCEL[ LF_INDEX ] optional ).
      else.
***     Get Sales BOM Header
        LT_SVCEL = IR_SVC->GET_SVC_ELEMENTS( IF_ID     = 'SBH'
                                             IF_INUSE  = ABAP_TRUE
                                             IF_SORTED = ABAP_TRUE ).
        if LINES( LT_SVCEL ) eq 1.
          RR_SVCEL ?= value #( LT_SVCEL[ 1 ] optional ).
        endif.
      endif.
    endif.

  endmethod.
endclass. "ZCL_VCXI_PXE_SD_FILL_VBAP implementation
