
class ZCL_VCXI_P5SP_PR_MFSI definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MFSI
  create public .

public section.

  interfaces ZIF_VCXI_P5SP_RLDIM .
  interfaces ZIF_VCXI_P5SP_UMREZ_UMREN .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_RLETA
    importing
      !IS_RLETA type ZVCXI_PXS_S_RLETA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SURWT
    importing
      !IS_SURWT type ZVCXI_PXS_S_SURWT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_WEBWI
    importing
      !IS_WEBWI type ZVCXI_PXS_S_WEBWI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_PXS_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods ZIF_VCXI_XCSP_MFSI~DO_FORWARD
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_PARID_UMREN type /VCXI/VKS_PARID value 'ZVCXI_XC_UMREN' ##NO_TEXT.
  constants C_PARID_UMREZ type /VCXI/VKS_PARID value 'ZVCXI_XC_UMREZ' ##NO_TEXT.
  constants C_IEVNT_O_UMREZ_UMREN_CHANGED type /VCXI/VKSC_IEVNT value 'UMREZ_UMREN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_UMREZ_UMREN type /VCXI/VKSC_IEVNT value 'RECALC_UMREZ_UMREN' ##NO_TEXT.

  methods SET_UMREZ_UMREN
    importing
      !IF_UMREZ type CP_UMREZ
      !IF_UMREN type CP_UMREN
    raising
      /VCXI/CX_CKX .
  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_UMREZ_UMREN
    raising
      /VCXI/CX_CKX .

  methods CONV_TO_CONSU
    redefinition .
private section.
endclass. "ZCL_VCXI_P5SP_PR_MFSI definition
class ZCL_VCXI_P5SP_PR_MFSI implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Pramameter dimensions
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method CONV_TO_CONSU.

    data: LF_DIMID_C type DIMID,
          LF_DIMID_I type DIMID.


*** Get Manager if it is missing
    if ME->R_PR_MFMGR is not bound.
      ME->HANDLE_INIT_MFMGR( ).
    endif.

    LF_DIMID_C = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
    LF_DIMID_I = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = IS_MQTYI-MQTYI_UOM ).

    case LF_DIMID_I.
      when LF_DIMID_C.
***     1:1 Forward
        RS_CONSU-CONSU     = IS_MQTYI-MQTYI.
        RS_CONSU-CONSU_UOM = IS_MQTYI-MQTYI_UOM.
      when 'SURFAC'.
        case LF_DIMID_C.
          when 'LENGTH'.
***         Convert Area to Length
            RS_CONSU = corresponding #( ZCL_VCXI_P5SP_SERVICE=>CONV_A_TO_L( IS_CALCV = value #( CALCV     = IS_MQTYI-MQTYI
                                                                                                CALCV_UOM = IS_MQTYI-MQTYI_UOM )
                                                                            IS_RLDIM = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLDIM( )
                                                                          ) mapping CONSU     = CALCV
                                                                                    CONSU_UOM = CALCV_UOM ).
        endcase.
    endcase.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_UMREZ_UMREN.
        ME->HANDLE_RECALC_UMREZ_UMREN( ).
    endcase.

  endmethod.
  method HANDLE_RECALC_UMREZ_UMREN.

    data: LF_UMREZ type CP_UMREZ,
          LF_UMREN type CP_UMREN.


    check ME->R_PR_MFMGR is bound.

***----------------------------------------------------------------------------
*** Get Numerator and Denominator of Operation
    data(LR_OPERATION) = ME->R_PR_MFMGR->GET_PRVDR_OPERATION( ).
    if LR_OPERATION is instance of ZIF_VCXI_P5SP_UMREZ_UMREN.
      cast ZIF_VCXI_P5SP_UMREZ_UMREN( LR_OPERATION )->GET_UMREZ_UMREN( importing EF_UMREZ = LF_UMREZ
                                                                                 EF_UMREN = LF_UMREN ).
    endif.

*** Set new Values
    ME->SET_UMREZ_UMREN( IF_UMREZ = LF_UMREZ
                         IF_UMREN = LF_UMREN ).

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.


    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

*** Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_NOUPS ).

    move IF_NOUPS                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method SET_RLETA.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_RLETA ).

    move IS_RLETA-RLETA                      to LS_PARAM-ATFLV.
    move IS_RLETA-RLETA_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method SET_SURWT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_SURWT ).

    move IS_SURWT-SURWT                      to LS_PARAM-ATFLV.
    move IS_SURWT-SURWT_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
    endif.

  endmethod.
  method SET_UMREZ_UMREN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


***------------------------------------------------------------------------------------------------
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREZ ).

    LS_PARAM-ATFLV = IF_UMREZ.
    LS_PARAM-SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_UMREZ_UMREN~C_IEVNT_O_UMREZ_UMREN_CHANGED ).
    endif.

***------------------------------------------------------------------------------------------------
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREN ).

    LS_PARAM-ATFLV = IF_UMREN.
    LS_PARAM-SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_UMREZ_UMREN~C_IEVNT_O_UMREZ_UMREN_CHANGED ).
    endif.

  endmethod.
  method SET_WEBWI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_WEBWI ).

    move IS_WEBWI-WEBWI                      to LS_PARAM-ATFLV.
    move IS_WEBWI-WEBWI_UOM                  to LS_PARAM-UNIT.
    move IF_SETBY                            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_P5SP_RLDIM~C_IEVNT_O_RLDIM_CHANGED ).
***   Force Consumption recalculation
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MFICF_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_NOUPS ).
    RF_NOUPS = LS_PARAM-ATFLV.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_RLDIM.

    RS_RLDIM = value #( S_WEBWI = ME->ZIF_VCXI_P5SP_RLDIM~GET_WEBWI( )
                        S_SURWT = ME->ZIF_VCXI_P5SP_RLDIM~GET_SURWT( )
                        S_RLETA = ME->ZIF_VCXI_P5SP_RLDIM~GET_RLETA( )
                        NOUPS   = ME->ZIF_VCXI_P5SP_RLDIM~GET_NOUPS( )
                        NOOUT   = 1    "Always 1 for Input
                      ).

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_RLETA.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_RLETA ).
    RS_RLETA-RLETA     = LS_PARAM-ATFLV.
    RS_RLETA-RLETA_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_SURWT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_SURWT ).
    RS_SURWT-SURWT     = LS_PARAM-ATFLV.
    RS_SURWT-SURWT_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_RLDIM~GET_WEBWI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_RLDIM~C_PARID_WEBWI ).
    RS_WEBWI-WEBWI     = LS_PARAM-ATFLV.
    RS_WEBWI-WEBWI_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method ZIF_VCXI_P5SP_UMREZ_UMREN~GET_UMREZ_UMREN.

    EF_UMREZ = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREZ )-ATFLV.
    EF_UMREN = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_P5SP_UMREZ_UMREN~C_PARID_UMREN )-ATFLV.

  endmethod.
  method ZIF_VCXI_XCSP_MFSI~DO_FORWARD.

    data:  LR_RLDIM      type ref to ZIF_VCXI_P5SP_RLDIM.


    SUPER->ZIF_VCXI_XCSP_MFSI~DO_FORWARD( IR_MFSO = IR_MFSO ).

***--------------------------------------------------------------------------------------
*** Get Roll Dimensions of MFO
    try.
        move IR_MFSO ?to LR_RLDIM.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_RLDIM.
    endtry.

    check LR_RLDIM is bound.

***--------------------------------------------------------------------------------------
*** Web Width
    ME->SET_WEBWI( IS_WEBWI = LR_RLDIM->GET_WEBWI( ) ).

*** Surface Weight
    ME->SET_SURWT( IS_SURWT = LR_RLDIM->GET_SURWT( ) ).

*** Roll Target Length
    ME->SET_RLETA( IS_RLETA = LR_RLDIM->GET_RLETA( ) ).

*** No Ups
    ME->SET_NOUPS( IF_NOUPS = LR_RLDIM->GET_NOUPS( ) ).

  endmethod.
