
class ZCL_VCXI_FBSS_UI_INPUT definition
  public
  inheriting from ZCL_VCXI_F0S_UI_TAB
  create public .

public section.

  data S_INPUT_VIS type ZVCXI_FBSS_S_INPUT_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_F0S_TABPT default '0100S_IN_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_TOOLBAR type ref to ZCL_VCXI_F0S_TOOLBAR_PRVDR .
  data R_PR_INPUT type ref to ZCL_VCXI_FBSS_PR_INPUT .
  constants C_UC_BGPROP type SYUCOMM value 'INPUT_BGPROP' ##NO_TEXT.

  methods HANDLE_UC_BGPROP
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSS_UI_INPUT definition
class ZCL_VCXI_FBSS_UI_INPUT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FBSS_UI_INPUT_BIND'
      exporting
        IR_UI_INPUT   = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.


*** Create Toolbar for Provider
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_IN_TOOLBAR'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_INPUT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

*** Free Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).

        loop at screen.
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    data: LT_PRVDR_SELECTED type /VCXI/VKSR_TT_GATE.

    SUPER->DO_PBO( ).

*** Initialize Visualization Structure
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar and provide active tab as Selected Provider (for inserting/deletion)
    append ME->R_OLD_GATE to LT_PRVDR_SELECTED.
    ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = LT_PRVDR_SELECTED ).

  endmethod.
  method DO_USER_COMMAND.

    data:  LF_UCOMM type SYUCOMM.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_BGPROP.
        ME->HANDLE_UC_BGPROP( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_INPUT.

  endmethod.
  method HANDLE_UC_BGPROP.

    data: LS_BGDATA type ZVCXI_FBSS_S_BGDATA.
    data: LR_BL_BGBPROP type ref to ZCL_VCXI_FBSS_BL_BGBPROP,
          LR_BL_BGFPROP type ref to ZCL_VCXI_FBSS_BL_BGFPROP.

***--------------------------------------------------------------------------------------
*** Get Input Backward Property XML (Outbound)
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_PREV~GET_BGBPX( importing ER_BL_BGBPROP = LR_BL_BGBPROP ).
    check LR_BL_BGBPROP is bound.

***--------------------------------------------------------------------------------------
*** Get Input Forward Property XML (Outbound)
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_PREV~GET_BGFPX( importing ER_BL_BGFPROP = LR_BL_BGFPROP ).
    check LR_BL_BGFPROP is bound.

***--------------------------------------------------------------------------------------
*** Get Bag Basic data information
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_PREV~GET_IBAGT( importing EF_IBAGT = LS_BGDATA-IBAGT ).

    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_PREV~GET_BGHEI( importing ES_BGHEI = LS_BGDATA-S_BGHEI ).

    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_PREV~GET_BGWID( importing ES_BGWID = LS_BGDATA-S_BGWID ).

    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_PREV~GET_BGWGT( importing ES_BGWGT = LS_BGDATA-S_BGWGT ).

*** Start Popup
    ZCL_VCXI_FBSS_POPUP_BGPROP=>START( IR_GATE       = ME->R_GATE
                                       IR_UIGATE     = ME->R_UIGATE
                                       IR_BL_BGBPROP = LR_BL_BGBPROP
                                       IR_BL_BGFPROP = LR_BL_BGFPROP
                                       IS_BGDATA     = LS_BGDATA  ).

  endmethod.
  method INIT_VIS.

    free: ME->S_INPUT_VIS.
    check ME->R_PR_INPUT is bound.

***--------------------------------------------------------------------------------------
*** Bag Type (Outbound)
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_NEXT~GET_IBAGT( importing EF_IBAGT = ME->S_INPUT_VIS-IBAGT
                                                                 EF_DESCR = ME->S_INPUT_VIS-IBAGT_DESCR ).

*** Bag Width (Outbound)
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWID( importing ES_BGWID = ME->S_INPUT_VIS-S_BGWID ).

*** Bag Height (Outbound)
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGHEI( importing ES_BGHEI = ME->S_INPUT_VIS-S_BGHEI ).

*** Bag Weight (Outbound)
    ME->R_PR_INPUT->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWGT( importing ES_BGWGT = ME->S_INPUT_VIS-S_BGWGT ).

  endmethod.
