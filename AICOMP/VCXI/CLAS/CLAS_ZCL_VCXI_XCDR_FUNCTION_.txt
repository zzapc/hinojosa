
class ZCL_VCXI_XCDR_FUNCTION definition
  public
  final
  create public .

public section.

  class-methods FUNCTION_ACTIVE
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_CONDREC type /VCXI/CKX_TT_OBJECT
      !IF_IFUNC type ZVCXI_XCD_IFUNC
    returning
      value(RF_FUNAC) type ZVCXI_XCD_FUNAC
    raising
      /VCXI/CX_CKX .
  class-methods GET_ACTIVE_FUNCTION
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_CONDREC type /VCXI/CKX_TT_OBJECT
    returning
      value(RT_FUNCT) type ZVCXI_XCDC_TT_CR_FUNCT
    raising
      /VCXI/CX_CKX .
protected section.
private section.
endclass. "ZCL_VCXI_XCDR_FUNCTION definition
class ZCL_VCXI_XCDR_FUNCTION implementation.
method FUNCTION_ACTIVE.

  data:          LF_DEFINED         type        ABAP_BOOL.
  data:          LS_REGDVC_FUNCT    type        ZVCXI_XCDC_S_REGDVC_FUNCT,
                 LS_CR_FUNCT        type        ZVCXI_XCDC_S_CR_FUNCT.
  data:          LT_CONDDEF         type        /VCXI/CKX_TT_OBJECT.
  data:          LR_CONDDEF         type ref to ZCL_VCXI_XCDC_CONDDEF,
                 LR_CONDREC         type ref to ZCL_VCXI_XCDC_CONDREC,
                 LR_OBJECT          type ref to /VCXI/IF_CKX_OBJECT.

*** Start Negativ
  RF_FUNAC = ABAP_FALSE.

***--------------------------------------------------------------------------------------
*** Collect all valid Functions
  loop at IT_CONDREC into LR_OBJECT.
    move LR_OBJECT ?to LR_CONDREC.
    check LR_CONDREC is bound and
          LR_CONDREC->R_CONDDEF is bound and
          LR_CONDREC->R_CONDDEF->R_REGDVC is bound.

*** Get initial Status based on Registry Element (only on first round)
    if SY-TABIX eq 1.
      read table LR_CONDREC->R_CONDDEF->R_REGDVC->ZIF_VCXI_XCDC_REGDVC_FUNCT~T_REGDVC_FUNCT into LS_REGDVC_FUNCT with key IFUNC = IF_IFUNC.
      if SY-SUBRC eq 0.
        move LS_REGDVC_FUNCT-FUNAC to RF_FUNAC.
        move ABAP_TRUE             to LF_DEFINED.
      endif.
    endif.

*** Get Status based on Condition Record
    read table LR_CONDREC->T_CR_FUNCT into LS_CR_FUNCT with key IFUNC = IF_IFUNC.
    if SY-SUBRC = 0.
      move LS_CR_FUNCT-FUNAC to RF_FUNAC.
      move ABAP_TRUE         to LF_DEFINED.
    endif.

  endloop.

***--------------------------------------------------------------------------------------
*** If not defined through Condition Records
  if LF_DEFINED ne ABAP_TRUE.

*** Get valid Condition Definitions
    LT_CONDDEF = ZCL_VCXI_XCDR_CONDITION=>GET_CONDDEF( IR_GATE = IR_GATE ).
    loop at LT_CONDDEF into LR_OBJECT.
      move LR_OBJECT ?to LR_CONDDEF.
      read table LR_CONDDEF->R_REGDVC->ZIF_VCXI_XCDC_REGDVC_FUNCT~T_REGDVC_FUNCT into LS_REGDVC_FUNCT with key IFUNC = IF_IFUNC.
      if SY-SUBRC = 0.
        RF_FUNAC = LS_REGDVC_FUNCT-FUNAC.
        exit.
      endif.
    endloop.
  endif.

endmethod.
method GET_ACTIVE_FUNCTION.

  data:          LS_REGDVC_FUNCT    type        ZVCXI_XCDC_S_REGDVC_FUNCT,
                 LS_CR_FUNCT        type        ZVCXI_XCDC_S_CR_FUNCT.
  data:          LT_CONDDEF         type        /VCXI/CKX_TT_OBJECT.
  data:          LR_CONDDEF         type ref to ZCL_VCXI_XCDC_CONDDEF,
                 LR_CONDREC         type ref to ZCL_VCXI_XCDC_CONDREC,
                 LR_OBJECT          type ref to /VCXI/IF_CKX_OBJECT.
  field-symbols: <S_CR_FUNCT>       type        ZVCXI_XCDC_S_CR_FUNCT.

  if IT_CONDREC is initial.

***----------------------------------------------------------------------------
*** Get valid Condition Definitions
    LT_CONDDEF = ZCL_VCXI_XCDR_CONDITION=>GET_CONDDEF( IR_GATE = IR_GATE ).
    loop at LT_CONDDEF into LR_OBJECT.
      move LR_OBJECT ?to LR_CONDDEF.
      loop at LR_CONDDEF->R_REGDVC->ZIF_VCXI_XCDC_REGDVC_FUNCT~T_REGDVC_FUNCT into LS_REGDVC_FUNCT.
        read table RT_FUNCT with key IFUNC = LS_REGDVC_FUNCT-IFUNC transporting no fields.
        if SY-SUBRC ne 0.
          move-corresponding LS_REGDVC_FUNCT to LS_CR_FUNCT.
          append LS_CR_FUNCT to RT_FUNCT.
        endif.
      endloop.
    endloop.

  else.

***--------------------------------------------------------------------------------------
*** Collect all valid Functions
    loop at IT_CONDREC into LR_OBJECT.
      move LR_OBJECT ?to LR_CONDREC.
      check LR_CONDREC is bound and
            LR_CONDREC->R_CONDDEF is bound and
            LR_CONDREC->R_CONDDEF->R_REGDVC is bound.

***   Get all Functions
      loop at LR_CONDREC->R_CONDDEF->R_REGDVC->ZIF_VCXI_XCDC_REGDVC_FUNCT~T_REGDVC_FUNCT into LS_REGDVC_FUNCT.
        read table RT_FUNCT with key IFUNC = LS_REGDVC_FUNCT-IFUNC transporting no fields.
        if SY-SUBRC ne 0.
          move-corresponding LS_REGDVC_FUNCT to LS_CR_FUNCT.
          append LS_CR_FUNCT to RT_FUNCT.
        endif.
      endloop.

***     Get then Special Defintions
      loop at LR_CONDREC->T_CR_FUNCT into LS_CR_FUNCT.
        read table RT_FUNCT assigning <S_CR_FUNCT> with key IFUNC = LS_CR_FUNCT-IFUNC.
        if SY-SUBRC ne 0.
          append LS_CR_FUNCT to RT_FUNCT.
        else.
          move LS_CR_FUNCT-FUNAC to <S_CR_FUNCT>-FUNAC.
        endif.
      endloop.
    endloop.

  endif.

  delete RT_FUNCT where FUNAC ne ABAP_TRUE.

endmethod.
