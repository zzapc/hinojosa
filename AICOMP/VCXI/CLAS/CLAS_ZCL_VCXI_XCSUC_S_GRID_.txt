
class ZCL_VCXI_XCSUC_S_GRID definition
  public
  create public .

public section.

  type-pools ABAP .
  data F_REFRESH_ALL_REQ type ABAP_BOOL .
  data F_REFRESH_REQ type ABAP_BOOL .

  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_CUSTOMIZING type ref to OBJECT
    raising
      /VCXI/CX_CKX .
  methods REFRESH_S_GRID
    raising
      /VCXI/CX_CKX .
  methods CHECK_CHANGED_DATA
    raising
      /VCXI/CX_CKX .
protected section.

  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_CONTAINER_LEFT type ref to CL_GUI_CONTAINER .
  data R_CONTAINER_RIGHT type ref to CL_GUI_CONTAINER .
  data F_CONTAINER_NAME type SCRFNAME .
  data R_CUSTOMIZING type ref to OBJECT .
  data R_SPLITTER type ref to CL_GUI_SPLITTER_CONTAINER .

  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSUC_S_GRID definition
class ZCL_VCXI_XCSUC_S_GRID implementation.
method CHECK_CHANGED_DATA.

*** Will be redefined.

endmethod.
method CONSTRUCTOR.

  move IF_CONTAINER_NAME to ME->F_CONTAINER_NAME.
  move IR_CUSTOMIZING    to ME->R_CUSTOMIZING.

*** Request Refresh
  move ABAP_TRUE to ME->F_REFRESH_ALL_REQ.
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method DO_FREE.

  if ME->R_SPLITTER is bound.
    ME->R_SPLITTER->FREE( exceptions
                            CNTL_ERROR        = 1
                            CNTL_SYSTEM_ERROR = 2
                            others            = 3 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_SPLITTER.
  endif.


  if ME->R_CONTAINER_RIGHT is bound.
    clear ME->R_CONTAINER_RIGHT.
  endif.

  if ME->R_CONTAINER_LEFT is bound.
    clear ME->R_CONTAINER_LEFT.
  endif.



***------------------------------------------------------------------
*** Free Container
  if ME->R_CONTAINER is bound.
    ME->R_CONTAINER->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_CONTAINER.
  endif.

endmethod.
method INIT_CONTAINER .

  if ME->R_CONTAINER is not bound.
    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = ME->F_CONTAINER_NAME
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

  if ME->R_SPLITTER is not bound.
    create object ME->R_SPLITTER
      exporting
        PARENT            = ME->R_CONTAINER
        ROWS              = 1
        COLUMNS           = 2
      exceptions
        CNTL_ERROR        = 1
        CNTL_SYSTEM_ERROR = 2
        others            = 3.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
  endif.

  if ME->R_CONTAINER_LEFT is not bound.
    ME->R_CONTAINER_LEFT  = ME->R_SPLITTER->GET_CONTAINER( ROW    = 1
                                                           COLUMN = 1 ).
  endif.

  if ME->R_CONTAINER_RIGHT is not bound.
    ME->R_CONTAINER_RIGHT = ME->R_SPLITTER->GET_CONTAINER( ROW    = 1
                                                           COLUMN = 2 ).
  endif.


*** Make it not movable
  ME->R_SPLITTER->SET_COLUMN_SASH(
    exporting
      ID                = 1
      TYPE              = CL_GUI_SPLITTER_CONTAINER=>TYPE_MOVABLE
      VALUE             = CL_GUI_SPLITTER_CONTAINER=>FALSE
    exceptions
      CNTL_ERROR        = 1
      CNTL_SYSTEM_ERROR = 2
      others            = 3 ).
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
method INIT_GRID.
endmethod.
method REFRESH_S_GRID.

  check ME->F_REFRESH_REQ eq ABAP_TRUE.
  move ABAP_FALSE to ME->F_REFRESH_REQ.

  if ME->F_REFRESH_ALL_REQ eq ABAP_TRUE.
    move ABAP_FALSE to ME->F_REFRESH_ALL_REQ.
    ME->DO_FREE( ).
  endif.

  ME->INIT_CONTAINER( ).

endmethod.
