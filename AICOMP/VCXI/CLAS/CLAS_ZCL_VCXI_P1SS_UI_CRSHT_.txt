
class ZCL_VCXI_P1SS_UI_CRSHT definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_XSHT
  create public .

public section.

  data S_CRSHT_VIS type ZVCXI_P1SS_S_CRSHT_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_SHT_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_CRPROP type SYUCOMM value 'CRSHT_CRPROP' ##NO_TEXT.
  data R_PR_CRSHT type ref to ZCL_VCXI_P1SS_PR_CRSHT .
  data R_TOOLBAR type ref to ZCL_VCXI_XCS_TOOLBAR_PRVDR .

  methods HANDLE_UC_CRPROP
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_CRSHT definition
class ZCL_VCXI_P1SS_UI_CRSHT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_CRSHT_BIND'
      exporting
        IR_UI_CRSHT   = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

***--------------------------------------------------------------------------------------
*** Create Toolbar to add Connection
    create object ME->R_TOOLBAR
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TOOLBAR'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CRSHT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->DO_FREE( ).
      clear ME->R_TOOLBAR.
    endif.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_TOOLBAR->REFRESH_TOOLBAR( IT_PRVDR_SELECTED = value #( ( ME->R_OLD_GATE ) ) ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_CRSHT_VIS  type ZVCXI_P1SS_S_CRSHT_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_CRSHT is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_CRSHT_VIS.

****--------------------------------------------------------------------------------------
**** Set Flute Orientation
*    if ME->S_CRSHT_VIS-FLUTO ne LS_CRSHT_VIS-FLUTO.
*      ME->R_PR_CRSHT->SET_FLUTO( IF_FLUTO = LS_CRSHT_VIS-FLUTO
*                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
*    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_CRPROP.
        ME->HANDLE_UC_CRPROP( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CRSHT.

  endmethod.
  method HANDLE_UC_CRPROP.

*** Start Popup
    ZCL_VCXI_P1SS_POPUP_CRPROP=>START( IR_BL_CRBPROP = ME->R_PR_CRSHT->GET_CRBPX( )
                                       IR_BL_CRFPROP = ME->R_PR_CRSHT->GET_CRFPX( )
                                       IF_WERKS      = ME->R_PR_CRSHT->GET_WERKS( )
                                       IS_SURWT      = ME->R_PR_CRSHT->GET_SURWT( ) ).

  endmethod.
  method INIT_VIS.

    data: LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.


    free: ME->S_CRSHT_VIS.

    SUPER->INIT_VIS( ).
    ME->S_CRSHT_VIS-S_XSHT_VIS = ME->S_XSHT_VIS.
    check ME->R_PR_CRSHT is bound.

***--------------------------------------------------------------------------------------
*** Get Flute Orientation
*    ME->S_CRSHT_VIS-FLUTO = ME->R_PR_CRSHT->GET_FLUTO( ).

***------------------------------------------------------------------------------------------------
*** Get Sheet Dimension (Outbound)
    ME->S_CRSHT_VIS-S_IOSEC-S_SHTLE = ME->R_PR_CRSHT->GET_SHTLE( ).
    ME->S_CRSHT_VIS-S_IOSEC-S_SHTWI = ME->R_PR_CRSHT->GET_SHTWI( ).

*** Number Ups (Outbound)
    ME->S_CRSHT_VIS-S_IOSEC-NOUPS = ME->R_PR_CRSHT->GET_NOUPS( ).

*** Get Caliper, Paper Grade and Grammage (Outbound)
    LR_BL_CRFPROP = ME->R_PR_CRSHT->GET_CRFPX( ).
    if LR_BL_CRFPROP is bound.
      ME->S_CRSHT_VIS-S_IOSEC-FLUTE   = LR_BL_CRFPROP->GET_FLUTE( importing EF_DESCR = ME->S_CRSHT_VIS-S_IOSEC-FLUTE_DESCR ).
      ME->S_CRSHT_VIS-S_IOSEC-S_CALIP = LR_BL_CRFPROP->S_CALIP.
    endif.

  endmethod.
