
class ZCL_VCXI_XCUC_UIC_MUCEL definition
  public
  final
  create public .

public section.

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    changing
      !CF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START_UI
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_BACK type SYUCOMM value 'BACK' ##NO_TEXT.
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_COPY type SYUCOMM value 'COPY' ##NO_TEXT.
  constants C_UC_CREATE type SYUCOMM value 'CREATE' ##NO_TEXT.
  constants C_UC_DELETE type SYUCOMM value 'DELETE' ##NO_TEXT.
  constants C_UC_EXECUTE type SYUCOMM value 'EXECUTE' ##NO_TEXT.
  constants C_UC_EXIT type SYUCOMM value 'EXIT' ##NO_TEXT.
  data R_SALV type ref to CL_SALV_TABLE .
  data T_MUCEL_GRID type ZVCXI_XCUC_TT_MUCEL_GRID .

  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_ADDED_FUNCTION
    for event ADDED_FUNCTION of CL_SALV_EVENTS
    importing
      !E_SALV_FUNCTION .
  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_SALV_EVENTS_TABLE
    importing
      !ROW
      !COLUMN .
  methods HANDLE_UC_BACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_COPY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CREATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DELETE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXIT
    raising
      /VCXI/CX_CKX .
  methods INIT_DATA
    raising
      /VCXI/CX_CKX .
  methods INIT_SALV
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_EXECUTE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCUC_UIC_MUCEL definition
class ZCL_VCXI_XCUC_UIC_MUCEL implementation.
  method DO_FREE.

    free: ME->T_MUCEL_GRID.

  endmethod.
  method DO_PBO.

***----------------------------------------------------------------------------
*** Set GUI Status
    ME->SET_PF_STATUS( ).

***----------------------------------------------------------------------------
*** Initialize Data and show as Simple ALV
    ME->INIT_DATA( ).
    ME->INIT_SALV( ).

  endmethod.
  method DO_USER_COMMAND.

*** Process User Commands
    case CF_UCOMM.
      when C_UC_BACK.
        ME->HANDLE_UC_BACK( ).
      when C_UC_EXIT.
        ME->HANDLE_UC_EXIT( ).
      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).

    endcase.

*** User Command has been processed
    clear CF_UCOMM.

  endmethod.
  method HANDLE_ADDED_FUNCTION.

    try.
        case E_SALV_FUNCTION.
          when C_UC_CREATE.
            ME->HANDLE_UC_CREATE( ).
          when C_UC_DELETE.
            ME->HANDLE_UC_DELETE( ).
          when C_UC_COPY.
            ME->HANDLE_UC_COPY( ).

          when C_UC_EXECUTE.
            ME->HANDLE_UC_EXECUTE( ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_DOUBLE_CLICK.

    try.
***     Start UI for Update Customizing Element
        ZCL_VCXI_XCUC_UI_MUCEL=>START_UI( IR_MUCEL = ME->T_MUCEL_GRID[ ROW ]-R_MUCEL ).

***     Refresh ALV - Set New Ok Code to force PBO
        CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_BACK.

    leave to screen 0.

  endmethod.
  method HANDLE_UC_CANCEL.

    leave to screen 0.

  endmethod.
  method HANDLE_UC_COPY.

    data: LT_SALV_ROW type SALV_T_ROW.


***----------------------------------------------------------------------------
*** Get Selected Rows
    LT_SALV_ROW = ME->R_SALV->GET_SELECTIONS( )->GET_SELECTED_ROWS( ).
    check LINES( LT_SALV_ROW ) eq 1.

*** Create copy of Customizing Element and start UI to maintain
    ZCL_VCXI_XCUC_UI_MUCEL=>START_UI( IR_MUCEL = ZCL_VCXI_XCUC_MUCEL=>COPY( IR_MUCEL = ME->T_MUCEL_GRID[ LT_SALV_ROW[ 1 ] ]-R_MUCEL ) ).

***----------------------------------------------------------------------------
*** Refresh ALV - Set New Ok Code to force PBO
    CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).

  endmethod.
  method HANDLE_UC_CREATE.

*** Create new Customizing Element and start UI to maintain
    ZCL_VCXI_XCUC_UI_MUCEL=>START_UI( IR_MUCEL = ZCL_VCXI_XCUC_MUCEL=>CREATE( ) ).

*** Refresh ALV - Set New Ok Code to force PBO
    CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).

  endmethod.
  method HANDLE_UC_DELETE.

    data: LF_KORRNR type        TRKORR,
          LF_INDEX  type I.
    data: LT_SALV_ROW type SALV_T_ROW.
*{   INSERT         HEDK918175                                        2
    data: LS_MUCEL_GRID TYPE ZVCXI_XCUC_S_MUCEL_GRID.
*}   INSERT

*** Get Selected Rows
    LT_SALV_ROW = ME->R_SALV->GET_SELECTIONS( )->GET_SELECTED_ROWS( ).
    check LT_SALV_ROW is not initial.

***--------------------------------------------------------------------------------------
*** Popup to pick Transport if needed
    if ZCL_VCXI_XCUC_MUCEL=>F_CCCORACTIV eq '1'.    "Changes are recorded in transport request
      call function 'G_TRANS_NUMBER'
        exporting
          CATEGORY  = 'CUST'
        importing
          KORRNR    = LF_KORRNR
        exceptions
          NO_NUMBER = 1
          others    = 2.
      if SY-SUBRC ne 0.
        return.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Mark Customizing Element of selected lines as Deleted
    loop at LT_SALV_ROW into LF_INDEX.
*{   REPLACE        HEDK918175                                        1
*\      ME->T_MUCEL_GRID[ LF_INDEX ]-R_MUCEL->SET_KORRNR( IF_KORRNR = LF_KORRNR ).
*\      ME->T_MUCEL_GRID[ LF_INDEX ]-R_MUCEL->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCUC_MUCEL=>C_FCODE_DELETE ).
*\      ME->T_MUCEL_GRID[ LF_INDEX ]-R_MUCEL->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCUC_MUCEL=>C_FCODE_SAVE ).
      READ TABLE ME->T_MUCEL_GRID into LS_MUCEL_GRID INDEX LF_INDEX .
      if sy-subrc eq 0.
       LS_MUCEL_GRID-R_MUCEL->SET_KORRNR( IF_KORRNR = LF_KORRNR ).
       LS_MUCEL_GRID-R_MUCEL->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCUC_MUCEL=>C_FCODE_DELETE ).
       LS_MUCEL_GRID-R_MUCEL->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCUC_MUCEL=>C_FCODE_SAVE ).
      endif.
*}   REPLACE
    endloop.
    commit work and wait.

***--------------------------------------------------------------------------------------
*** Refresh ALV - Set New Ok Code to force PBO
    CL_GUI_CFW=>SET_NEW_OK_CODE( NEW_CODE = 'REFRESH' ).


  endmethod.
  method HANDLE_UC_EXECUTE.

    data: LS_MURGR type ZVCXI_XCUR_S_MURGR,
          LS_MUREL type ZVCXI_XCUR_S_MUREL.
    data: LT_SALV_ROW type SALV_T_ROW.


***----------------------------------------------------------------------------
*** Get Selected Rows
    LT_SALV_ROW = ME->R_SALV->GET_SELECTIONS( )->GET_SELECTED_ROWS( ).
    check LT_SALV_ROW is not initial.


*** Create new Update Definition
    data(LR_MURDE) = new ZCL_VCXI_XCUR_MURDE( ).

    LS_MURGR-CMURG = LR_MURDE->ADD_MURGR( ).
    LS_MURGR-SYSOM = 'M'.

*** Add Update Element
    loop at LT_SALV_ROW into data(LF_SALV_ROW).
      data(LF_IMUCE) = value #( ME->T_MUCEL_GRID[ LF_SALV_ROW ]-IMUCE optional ).
      check LF_IMUCE is not initial.
      LS_MUREL = ZCL_VCXI_XCUR_MURDE=>CREATE_MUREL( IR_MUCEL = ZCL_VCXI_XCUC_MUCEL=>GET_INSTANCE_BY_ID( IF_IMUCE = LF_IMUCE ) ).
      append LS_MUREL to LS_MURGR-T_MUREL.
    endloop.

*** Update Group
    LR_MURDE->UPDATE_MURGR( IS_MURGR = LS_MURGR ).

***----------------------------------------------------------------------------
*** Call Popup
    data(LR_RECORD) = ZCL_VCXI_XCUR_POPUP_MURDE=>START( IR_MURDE = LR_MURDE
                                                        IF_OSTAR = 'D' ).
    if LR_RECORD is bound.
      /VCXI/CL_CKMRU_UI_RECORD=>START_UI( IR_RECORD = LR_RECORD ).
    endif.

  endmethod.
  method HANDLE_UC_EXIT.

    leave to screen 0.

  endmethod.
  method INIT_DATA.

    data: LR_MUCEL  type ref to ZCL_VCXI_XCUC_MUCEL,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.

    free: ME->T_MUCEL_GRID.

    loop at ZCL_VCXI_XCUC_MUCEL=>GET_ALL_INSTANCES( ) into LR_OBJECT.
      LR_MUCEL ?= LR_OBJECT.
      append value #( R_MUCEL   = LR_MUCEL
                      IMUCE     = LR_MUCEL->/VCXI/IF_CKX_OBJECT~GET_ID( )
                      DESCR     = LR_MUCEL->/VCXI/IF_CKX_OBJECT~GET_DESCR( )
                      S_LOG_EXT = /VCXI/CL_CKX_SERVICE=>GET_LOG_EXT( IS_LOG = LR_MUCEL->/VCXI/IF_CKX_OBJECT~GET_LOG( ) )
                    ) to ME->T_MUCEL_GRID.
    endloop.

    sort ME->T_MUCEL_GRID by IMUCE.

  endmethod.
  method INIT_SALV.

    data: LR_CUSTOM_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER.

    try.
***----------------------------------------------------------------------------
        if ME->R_SALV is not bound.
          create object LR_CUSTOM_CONTAINER
            exporting
              CONTAINER_NAME = '0100CC_MUCEL'
              LIFETIME       = CL_GUI_COLUMN_TREE=>LIFETIME_DYNPRO
            exceptions
              others         = 9.
          if SY-SUBRC <> 0.
*            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          endif.

          CL_SALV_TABLE=>FACTORY( exporting R_CONTAINER  = LR_CUSTOM_CONTAINER
                                  importing R_SALV_TABLE = ME->R_SALV
                                  changing  T_TABLE      = ME->T_MUCEL_GRID ).

          ME->R_SALV->GET_COLUMNS( )->SET_OPTIMIZE( ABAP_TRUE ).
          ME->R_SALV->GET_SELECTIONS( )->SET_SELECTION_MODE( IF_SALV_C_SELECTION_MODE=>ROW_COLUMN ).

***       Set Technical / Invisible Columns
          ME->R_SALV->GET_COLUMNS( )->GET_COLUMN( 'R_MUCEL' )->SET_TECHNICAL( ).
          ME->R_SALV->GET_COLUMNS( )->GET_COLUMN( 'CREAT' )->SET_VISIBLE( SPACE ).
          ME->R_SALV->GET_COLUMNS( )->GET_COLUMN( 'CREBY' )->SET_VISIBLE( SPACE ).
          ME->R_SALV->GET_COLUMNS( )->GET_COLUMN( 'CHAAT' )->SET_VISIBLE( SPACE ).
          ME->R_SALV->GET_COLUMNS( )->GET_COLUMN( 'CHABY' )->SET_VISIBLE( SPACE ).


***       Set Event Handler
          set handler ME->HANDLE_DOUBLE_CLICK   for ME->R_SALV->GET_EVENT( ).
          set handler ME->HANDLE_ADDED_FUNCTION for ME->R_SALV->GET_EVENT( ).

***       Add Function
          ME->R_SALV->GET_FUNCTIONS( )->ADD_FUNCTION( NAME     = C_UC_CREATE
                                                      ICON     = |{ ICON_CREATE }|
                                                      TEXT     = conv #( 'Create'(F01) )
                                                      TOOLTIP  = conv #( 'Create Update Customizing'(T01) )
                                                      POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).

          ME->R_SALV->GET_FUNCTIONS( )->ADD_FUNCTION( NAME     = C_UC_DELETE
                                                      ICON     = |{ ICON_DELETE_ROW }|
                                                      TEXT     = conv #( 'Delete'(F02) )
                                                      TOOLTIP  = conv #( 'Delete Update Customizing'(T02) )
                                                      POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).

          ME->R_SALV->GET_FUNCTIONS( )->ADD_FUNCTION( NAME     = C_UC_COPY
                                                      ICON     = |{ ICON_COPY_OBJECT }|
                                                      TEXT     = conv #( 'Copy'(F03) )
                                                      TOOLTIP  = conv #( 'Copy Update Customizing'(T03) )
                                                      POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).

          ME->R_SALV->GET_FUNCTIONS( )->ADD_FUNCTION( NAME     = C_UC_EXECUTE
                                                      ICON     = |{ ICON_EXECUTE_OBJECT }|
                                                      TEXT     = conv #( 'Execute'(F04) )
                                                      TOOLTIP  = conv #( 'Execute Mass Update'(T04) )
                                                      POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).


***       Display Simple ALV
          ME->R_SALV->DISPLAY( ).


***----------------------------------------------------------------------------
        else.
***       Refresh Simple ALV
          ME->R_SALV->REFRESH( ).

        endif.

      catch CX_SALV_ERROR into data(LR_CX_SALV_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SALV_ERROR ).
    endtry.

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_XCUC_UIC_MUCEL'.
    set titlebar  '0100' of program 'SAPLZVCXI_XCUC_UIC_MUCEL'.

  endmethod.
  method START_UI.

    data: LR_UIC_MUCEL type ref to ZCL_VCXI_XCUC_UIC_MUCEL.

    create object LR_UIC_MUCEL.

*** Start Screen
    call function 'ZVCXI_XCUC_UIC_MUCEL_START'
      exporting
        IR_UIC_MUCEL = LR_UIC_MUCEL.

*** Free Instance
    LR_UIC_MUCEL->DO_FREE( ).

  endmethod.
