
class ZCL_VCXI_PCSR_BL_PSTEP_WAX definition
  public
  inheriting from ZCL_VCXI_P0SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_P0SR_PCDIR .

  constants C_IPSTP_WAX type /VCXI/VSMC_IPSTP value 'PC_PS_WAX'. "#EC NOTEXT
  data T_MS_WAX type ZVCXI_PCSR_TT_MS_WAX .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_WAX
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  methods INIT_BY_SPEC_WAX
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_WAX
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_WAX
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSR_BL_PSTEP_WAX definition
class ZCL_VCXI_PCSR_BL_PSTEP_WAX implementation.
method ADD_LIMITS_TO_RTE_PSTEP.

  data:          LF_LDUOM         type        /VCXI/VSMC_LDUOM,
                 LF_LDVAL         type        /VCXI/VSMR_LDVAL.
  data:          LS_MS_WAX        type        ZVCXI_PCSR_S_MS_WAX.
  data:          LI_LVVAL         type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
  data:          LT_LTYPE         type        /VCXI/CKX_TT_OBJECT.
  data:          LR_LTYPE         type ref to /VCXI/CL_VSMC_LTYPE,
                 LR_OBJECT        type ref to /VCXI/IF_CKX_OBJECT.
  field-symbols: <S_LVVAL>        type        /VCXI/VSMR_S_RTE_RANGE_LVVAL.

  SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
  LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
  loop at LT_LTYPE into LR_OBJECT.
    move LR_OBJECT ?to LR_LTYPE.

    clear: LF_LDVAL,
           LF_LDUOM,
           LI_LVVAL.

***----------------------------------------------------------------------------
    case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Wax Type
      when 'PC_LT_VP_WAX_TYPE'.
        loop at ME->T_MS_WAX into LS_MS_WAX.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                        to <S_LVVAL>-SIGN.
          move 'EQ'                       to <S_LVVAL>-OPTION.
          move LS_MS_WAX-WAXCO            to <S_LVVAL>-LOW.
        endloop.

      when others.
        continue.
    endcase.


***----------------------------------------------------------------------------
*** Set
    case LR_LTYPE->F_MLTYP.
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
        IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                    IF_LDVAL = LF_LDVAL
                                    IF_LDUOM = LF_LDUOM ).
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
        IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                    II_LVVAL = LI_LVVAL ).
    endcase.
  endloop.

endmethod.
method ADD_SPVRE_MC_WAX.

  data:  LS_MS_WAX           type        ZVCXI_PCSR_S_MS_WAX,
         LS_LEOKY            type        /VCXI/VKSR_S_LEOKY,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_MC_WAX     type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_WAX'
                                      IR_SPVCE_PARENT = IR_SPVRE_ADDON->R_SPVCE ).

  loop at ME->T_MS_WAX into LS_MS_WAX.

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MC_WAX
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ADDON.
    append LR_SPVRE_MC_WAX to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MC_WAX->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Material Number
    clear LS_LEOKY.
    move LS_MS_WAX-MATNR                              to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_LEOKY-SETBY.
    LR_SPVRE_MC_WAX->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_AVGCO_W to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_MS_WAX-AVGCO                             to LS_PARAM-ATFLV.
    move LS_MS_WAX-AVGCO_UOM                         to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_STARCH=>C_PARID_AVGCP_A to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_MS_WAX-AVGCP                             to LS_PARAM-ATFLV.
    move LS_MS_WAX-AVGCP_UOM                         to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Wax Factor
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_WAX=>C_PARID_WAXFA      to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_MS_WAX-WAXFA                             to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_WAX=>C_PARID_PURCH      to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move LS_MS_WAX-PURCH                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).

    check LS_MS_WAX-PURCH eq ABAP_TRUE.

***------------------------------------------------------------------------------------------------
*** Set Price
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_WAX=>C_PARID_PRICE      to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_MS_WAX-PRICE                             to LS_PARAM-ATFLV.
    move LS_MS_WAX-PRICE_CURR                        to LS_PARAM-CURKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_WAX=>C_PARID_PRICP_W     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move LS_MS_WAX-PRICP                              to LS_PARAM-ATFLV.
    move LS_MS_WAX-PRICP_UOM                          to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Vendor
    clear LS_PARAM.
    move ZCL_VCXI_PCSP_PR_MC_WAX=>C_PARID_LIFNR       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move LS_MS_WAX-LIFNR                              to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_MC_WAX->SET_PARAM( IS_PARAM = LS_PARAM ).


  endloop.

endmethod.
method COMPARE.

  data:  LR_BL_PSTEP_WAX type ref to ZCL_VCXI_PCSR_BL_PSTEP_WAX.

*** Super Compare
  RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
  check RF_SIMILAR eq ABAP_TRUE.

  move IR_BL_PSTEP ?to LR_BL_PSTEP_WAX.

***----------------------------------------------------------------------------
*** Wax
  if ME->T_MS_WAX eq LR_BL_PSTEP_WAX->T_MS_WAX.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                      IF_DATE    = IF_DATE
                      IR_APPDATA = IR_APPDATA ).

endmethod.
method COPY.

  data:  LR_BL_PSTEP_WAX type ref to ZCL_VCXI_PCSR_BL_PSTEP_WAX.

*** Super Copy
  RR_BL_PSTEP = SUPER->COPY( ).
  move RR_BL_PSTEP ?to LR_BL_PSTEP_WAX.

***----------------------------------------------------------------------------
*** Copy Wax
  move ME->T_MS_WAX      to LR_BL_PSTEP_WAX->T_MS_WAX.

endmethod.
method DESERIALIZE.

  data:  LF_XML   type STRING.

  check IF_XML is not initial.

*** Deserialize
  call transformation ID
       source xml IF_XML
       result SUPER_XML    = LF_XML

              T_MS_WAX     = ME->T_MS_WAX.

*** Super Deserialize
  SUPER->DESERIALIZE( IF_XML = LF_XML ).

endmethod.
method FILL_SPVRE_ADDON.

  SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     IR_ARBPL       = IR_ARBPL
                           changing  CT_SPVRE       = CT_SPVRE ).

  case IR_SPVRE_ADDON->GET_ID( ).
    when 'PC_AT_WAX'.
      ME->FILL_SPVRE_ADDON_WAX( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                          IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                changing  CT_SPVRE       = CT_SPVRE ).
  endcase.

endmethod.
method FILL_SPVRE_ADDON_WAX.

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Wax
  ME->ADD_SPVRE_MC_WAX( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                  IR_SPVRE_ADDON = IR_SPVRE_ADDON
                        changing  CT_SPVRE       = CT_SPVRE ).

endmethod.
method GET_ARBPL_INFO.

*** Can't be done by itself. Use Info of other Production Step

endmethod.
method GET_SPVRE_MF.

*** No Material Flow In

endmethod.
method INIT_BY_SPEC.

  SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                       IT_PRVDR = IT_PRVDR ).

***-------------------------------------------------------------------
*** Init Material Specification - Wax
  ME->INIT_BY_SPEC_WAX( IT_PRVDR = IT_PRVDR ).

*** Get PC Type and Direction
  ZCL_VCXI_P0SR_CUST_PSTEP=>GET_PSTEP_INFO( exporting IF_IPSTP = ME->F_IPSTP
                                            importing EF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR
                                                      EF_PCDOP = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDOP ).

*** Set Direction
  ME->ZIF_VCXI_P0SR_PCDIR~SET_PCDIR( IF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR ).

endmethod.
method INIT_BY_SPEC_WAX.

  data:          LS_AVGCO          type        ZVCXI_XCS_S_AVGCO,
                 LS_AVGCP          type        ZVCXI_XCS_S_AVGCP.
  data:          LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_MS_WAX      type ref to ZCL_VCXI_PCSS_PR_MS_WAX.
  field-symbols: <S_MS_WAX>        type        ZVCXI_PCSR_S_MS_WAX.


  loop at IT_PRVDR into LR_GATE.
    move LR_GATE->R_CLSPR ?to LR_PR_MS_WAX.

    append initial line to ME->T_MS_WAX assigning <S_MS_WAX>.

    move LR_PR_MS_WAX->GET_MATNR( ) to <S_MS_WAX>-MATNR.
    move LR_PR_MS_WAX->GET_WAXCO( ) to <S_MS_WAX>-WAXCO.
    move LR_PR_MS_WAX->GET_AVGCO( ) to LS_AVGCO.
    move-corresponding LS_AVGCO     to <S_MS_WAX>.
    move LR_PR_MS_WAX->GET_AVGCP( ) to LS_AVGCP.
    move-corresponding LS_AVGCP     to <S_MS_WAX>.

    move LR_PR_MS_WAX->GET_WAXFA( ) to <S_MS_WAX>-WAXFA.

*** Purchasing Info
    move LR_PR_MS_WAX->GET_PURCH( ) to <S_MS_WAX>-PURCH.
    move LR_PR_MS_WAX->GET_LIFNR( ) to <S_MS_WAX>-LIFNR.
    move LR_PR_MS_WAX->GET_PRICE( ) to <S_MS_WAX>-S_PRICE.
    move LR_PR_MS_WAX->GET_PRICP( ) to <S_MS_WAX>-S_PRICP.

  endloop.

endmethod.
method SERIALIZE.

*** Super Serialize
  RF_XML = SUPER->SERIALIZE( ).

*** Serialize
  call transformation ID
       source SUPER_XML    = RF_XML

              T_MS_WAX     = ME->T_MS_WAX

       result xml RF_XML.

endmethod.
method ZIF_VCXI_P0SR_PCDIR~SET_PCDIR.

  move IF_PCDIR to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.

endmethod.
