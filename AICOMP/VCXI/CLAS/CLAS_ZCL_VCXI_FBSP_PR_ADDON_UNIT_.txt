
class ZCL_VCXI_FBSP_PR_ADDON_UNIT definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_FBSP_ADJ_BGDIM .

  constants C_PARID_PRQTY type /VCXI/VKS_PARID value 'ZVCXI_XC_PRQTY' ##NO_TEXT.
  constants C_PARID_SHUNT type /VCXI/VKS_PARID value 'ZVCXI_XC_SHUNT' ##NO_TEXT.
  constants C_PARID_NOUPS type /VCXI/VKS_PARID value 'ZVCXI_F0_NOUPS' ##NO_TEXT.

  methods GET_NOUPS
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NOUPS) type ZVCXI_F0S_NOUPS
    raising
      /VCXI/CX_CKX .
  methods GET_PRQTY
    returning
      value(RS_PRQTY) type ZVCXI_XCSU_S_PRQTY
    raising
      /VCXI/CX_CKX .
  methods GET_SHUNT
    exporting
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_SHUNT) type ZVCXI_XCSU_SHUNT
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_F0S_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRQTY
    importing
      !IS_PRQTY type ZVCXI_XCSU_S_PRQTY
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SHUNT
    importing
      !IF_SHUNT type ZVCXI_XCSU_SHUNT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IAATY_SHUNT type /VCXI/VSMC_IAATY value 'FB_AA_SHUNT' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_PRQTY_CHANGED type /VCXI/VKSC_IEVNT value 'PRQTY_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_SHUNT_CHANGED type /VCXI/VKSC_IEVNT value 'SHUNT_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAVAL
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_PR_ADDON_UNIT definition
class ZCL_VCXI_FBSP_PR_ADDON_UNIT implementation.
  method GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).
    RF_NOUPS = LS_PARAM-ATFLV.
    EF_SETBY = LS_PARAM-SETBY.

  endmethod.
method GET_PRQTY.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRQTY ).
  move LS_PARAM-ATFLV to RS_PRQTY-PRQTY.
  move LS_PARAM-UNIT  to RS_PRQTY-PRQTY_UOM.

endmethod.
method GET_RTE_SAVAL.

  data:          LF_GAATY      type /VCXI/VSMC_GAATY.
  field-symbols: <S_RTE_SAVAL> type /VCXI/VSMR_S_RTE_SAVAL,
                 <S_AVVAL>     type /VCXI/VSMR_S_RTE_RANGE_AVVAL.

*** Get Super
  RT_RTE_SAVAL = SUPER->GET_RTE_SAVAL( ).

  check ME->R_RTE_CADDON          is bound and
        ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - P0_AA_SHUNT
  try.
      LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_SHUNT
                                                                IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
      append initial line to RT_RTE_SAVAL assigning <S_RTE_SAVAL>.
      move LF_GAATY                                     to <S_RTE_SAVAL>-GAATY.
      append initial line      to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
      move 'I'                 to <S_AVVAL>-SIGN.
      move 'EQ'                to <S_AVVAL>-OPTION.
      move ME->GET_SHUNT( )    to <S_AVVAL>-LOW.
    catch /VCXI/CX_CKX.
  endtry.

endmethod.
  method GET_SHUNT.

    data: LR_CUST_SHIPU type ref to ZCL_VCXI_XCSU_CUST_SHIPU.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHUNT ).
    move LS_PARAM-ATWRT to RF_SHUNT.

    if EF_DESCR is requested.
***   Initialize Reference to Shipping & Unitization Cusotmizing
      LR_CUST_SHIPU = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_INSTANCE( ).

      EF_DESCR = LR_CUST_SHIPU->GET_DESCR_FOR_SHUNT( IF_SHUNT = RF_SHUNT ).
    endif.

  endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_RECALC_MC_CONSU.
      ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).
  endcase.

endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LF_UPDATE_ALL type ABAP_BOOL.
    data: LS_MQTYI type ZVCXI_XCSP_S_MQTYI.
    data: LT_GATE  type /VCXI/VKSR_TT_GATE,
          LT_RLDIM type ZVCXI_P5SP_TT_RLDIM.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MC       type ref to ZCL_VCXI_XCSP_PR_MC.


***------------------------------------------------------------------
*** Should all MC Packaging materials updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE
    transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
    transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get all Machine Quantity and Setup Waste
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
***   Get Machine Quantity Out as In
      LS_MQTYI = corresponding #( cast ZCL_VCXI_XCSP_PR_MACHINE( LR_GATE->R_CLSPR )->GET_MQTYO( ) mapping MQTYI     = MQTYO
                                                                                                          MQTYI_UOM = MQTYO_UOM ).
    endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

      try.
          clear: LR_PR_MC.
          move LR_GATE->R_CLSPR ?to LR_PR_MC.
          check LR_PR_MC is bound.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).

        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).

    move IF_NOUPS to LS_PARAM-ATFLV.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
method SET_PRQTY.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRQTY ).

  move IS_PRQTY-PRQTY     to LS_PARAM-ATFLV.
  move IS_PRQTY-PRQTY_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
*    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RLDIM_CHANGED ).
  endif.

endmethod.
method SET_SHUNT.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHUNT ).

  move IF_SHUNT to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SHUNT_CHANGED ).
  endif.

endmethod.
  method ZIF_VCXI_FBSP_ADJ_BGDIM~CALC_BGDIM_OUT.

    data(LF_NOUPS) = ME->GET_NOUPS( ).
    data(LF_SHUNT) = ME->GET_SHUNT( ).

    loop at CT_BGDIM assigning field-symbol(<S_BGDIM>).
      <S_BGDIM>-NOUPS = LF_NOUPS.
      <S_BGDIM>-SHUNT = LF_SHUNT.
    endloop.

  endmethod.
