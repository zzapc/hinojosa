
class ZCL_VCXI_P4SS_EA_PRFG definition
  public
  inheriting from ZCL_VCXI_PXSS_EA_FG
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_PRDTL
    exporting
      value(ER_SVCEL) type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_SPLR
    exporting
      !ER_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
    returning
      value(RR_EA_SPLR) type ref to ZCL_VCXI_P4SS_EA_SPLR
    raising
      /VCXI/CX_CKX .
  methods GET_PURCH
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_PURCH) type ZVCXI_XCS_PURCH
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods IS_DUMMY
    returning
      value(RF_RETURN) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods SET_WERKS
    importing
      !IF_WERKS type WERKS_D
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_PRFG type ref to ZCL_VCXI_P4SS_PR_PRFG .
private section.
endclass. "ZCL_VCXI_P4SS_EA_PRFG definition
class ZCL_VCXI_P4SS_EA_PRFG implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_PRFG.
      catch CX_SY_MOVE_CAST_ERROR.
***     Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
  method GET_PRVDR_PRDTL.

    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


    check ME->R_PR_PRFG is bound.

    ME->R_PR_PRFG->GET_PRVDR_PRDTL( importing ER_GATE = LR_GATE ).
    check LR_GATE is bound.

    ER_SVCEL = /VCXI/CL_VKSRA_SVC_ELEMENT=>GET_INSTANCE_BY_GATE( IR_GATE = LR_GATE ).

  endmethod.
  method GET_PRVDR_SPLR.

    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


    check ME->R_PR_PRFG is bound.

    ME->R_PR_PRFG->GET_PRVDR_SPLR( importing ER_GATE = LR_GATE ).
    check LR_GATE is bound.

    ER_SVCEL = /VCXI/CL_VKSRA_SVC_ELEMENT=>GET_INSTANCE_BY_GATE( IR_GATE = LR_GATE ).
    check ER_SVCEL is bound.

    if RR_EA_SPLR is requested.
      try.
          RR_EA_SPLR ?= ER_SVCEL->GET_CLSEA( ).
        catch CX_SY_MOVE_CAST_ERROR into data(LR_CX_SY_MOVE_CAST_ERROR).
          /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( LR_CX_SY_MOVE_CAST_ERROR ).
      endtry.
    endif.

  endmethod.
  method GET_PURCH.

    check ME->R_PR_PRFG is bound.
    RF_PURCH = ME->R_PR_PRFG->GET_PURCH( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_WERKS.

    check ME->R_PR_PRFG is bound.

    if EF_DESCR is requested.
      RF_WERKS = ME->R_PR_PRFG->GET_WERKS( importing EF_SETBY = EF_SETBY
                                                     EF_DESCR = EF_DESCR ).
    else.
      RF_WERKS = ME->R_PR_PRFG->GET_WERKS( importing EF_SETBY = EF_SETBY ).
    endif.

  endmethod.
  method IS_DUMMY.

    check ME->R_PR_PRFG is bound.
    RF_RETURN = ME->R_PR_PRFG->IS_DUMMY( ).

  endmethod.
  method SET_WERKS.

    check ME->R_PR_PRFG            is bound     and
          ME->R_GATE->IS_LOCKED( ) eq ABAP_TRUE.

    ME->R_PR_PRFG->SET_WERKS( IF_WERKS = IF_WERKS
                              IF_SETBY = IF_SETBY ).

  endmethod.
