
class ZCL_VCXI_PCSSC_MANTU_E definition
  public
  create public .

public section.

  interfaces ZIF_VCXI_P0SSC_PRSTY_MANTU_E .

  data T_MANTU_E type ZVCXI_PCSSC_TT_FEFCO_MANTU_E read-only .
  constants C_TABEK type ZVCXI_P0SS_TABEK value 'ZVCXI_PCS_TC320'. "#EC NOTEXT

  methods CONSTRUCTOR .
protected section.

  types:
    YT_TC210 type standard table of ZVCXI_PCS_TC210 .

  data T_TC210 type YT_TC210 .
private section.
endclass. "ZCL_VCXI_PCSSC_MANTU_E definition
class ZCL_VCXI_PCSSC_MANTU_E implementation.
method CONSTRUCTOR.

*** Get Valid Flutes
  select *
         into table T_TC210
         from ZVCXI_PCS_TC210.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~ADD.

  data: LS_FEFCO_MANTU_E type ZVCXI_PCSSC_S_FEFCO_MANTU_E.

*** Get Import in right format
  move-corresponding IS_MANTU_E to LS_FEFCO_MANTU_E.
  move IF_GMATU                 to LS_FEFCO_MANTU_E-GMATU.

  read table ME->T_MANTU_E with key GMATU = LS_FEFCO_MANTU_E-GMATU
                           transporting no fields.
  check SY-SUBRC ne 0.

  append LS_FEFCO_MANTU_E to ME->T_MANTU_E.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~CHECK_KEY.

  data:          LS_FEFCO_MANTU_E  type ZVCXI_PCSSC_S_FEFCO_MANTU_E,
                 LS_MANTU_E        type ZVCXI_PCSSC_S_FEFCO_MANTU_E.
  data:          LT_MANTU_E        type ZVCXI_PCSSC_TT_FEFCO_MANTU_E.
  field-symbols: <S_FIELD>         type SVAL,
                 <S_PRSTY_MANTU_E> type ZVCXI_PCSSC_S_FEFCO_MANTU_E.


  read table IT_SVAL assigning <S_FIELD> with key FIELDNAME = 'PTYPE'.
  if SY-SUBRC = 0.
    move <S_FIELD>-VALUE to LS_FEFCO_MANTU_E-PTYPE.
  endif.

  read table IT_SVAL assigning <S_FIELD> with key FIELDNAME = 'FLUTE'.
  if SY-SUBRC = 0.
    move <S_FIELD>-VALUE to LS_FEFCO_MANTU_E-FLUTE.
  endif.

  read table IT_SVAL assigning <S_FIELD> with key FIELDNAME = 'CALIF'.
  if SY-SUBRC = 0.
    move <S_FIELD>-VALUE to LS_FEFCO_MANTU_E-CALIF.
  endif.

  read table IT_SVAL assigning <S_FIELD> with key FIELDNAME = 'CALIF_UOM'.
  if SY-SUBRC = 0.
    move <S_FIELD>-VALUE to LS_FEFCO_MANTU_E-CALIF_UOM.
  endif.

  read table IT_SVAL assigning <S_FIELD> with key FIELDNAME = 'JOIPO'.
  if SY-SUBRC = 0.
    move <S_FIELD>-VALUE to LS_FEFCO_MANTU_E-JOIPO.
  endif.

***----------------------------------------------------------------------
*** Check Product Type
  if LS_FEFCO_MANTU_E-PTYPE is not initial and
     ZCL_VCXI_P0SS_CUST_PRSTY=>CHECK_PTYPE_EXIST( IF_PTYPE = LS_FEFCO_MANTU_E-PTYPE ) eq ABAP_FALSE.
*** Selected Product Type is not valid. Please Change.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'W'
                                          IF_MSGID = 'ZVCXI_PCSSC'
                                          IF_MSGNO = '401' ).
  endif.

*** Check Flute
  read table T_TC210 with key FLUTE = LS_FEFCO_MANTU_E-FLUTE
                     transporting no fields.
  if SY-SUBRC ne 0.
*** Selected Flute is not valid. Please Change.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'W'
                                          IF_MSGID = 'ZVCXI_PCSSC'
                                          IF_MSGNO = '402' ).
  endif.

  if IF_NO_CHECK ne ABAP_TRUE.
*** Check only relevant entries
    move ME->T_MANTU_E to LT_MANTU_E.
    loop at LT_MANTU_E into LS_MANTU_E.
      read table IT_GMATU with key TABLE_LINE = LS_MANTU_E-GMATU
                          transporting no fields.
      check SY-SUBRC ne 0.
      delete LT_MANTU_E.
    endloop.
***----------------------------------------------------------------------
*** Check Key - No Double Entrie allowed
    read table LT_MANTU_E with key PTYPE     = LS_FEFCO_MANTU_E-PTYPE
                                   FLUTE     = LS_FEFCO_MANTU_E-FLUTE
                                   CALIF     = LS_FEFCO_MANTU_E-CALIF
                                   CALIF_UOM = LS_FEFCO_MANTU_E-CALIF_UOM
                                   JOIPO     = LS_FEFCO_MANTU_E-JOIPO
                          transporting no fields.

    if SY-SUBRC eq 0.
***   There is already one Entrie with specified Key. Please Change.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'W'
                                            IF_MSGID = 'ZVCXI_P0SSC'
                                            IF_MSGNO = '105' ).
    endif.
  endif.

  create data ER_S_PRSTY_MANTU_E type ('ZVCXI_PCSSC_S_FEFCO_MANTU_E').
  assign ER_S_PRSTY_MANTU_E->* to <S_PRSTY_MANTU_E>.
  move-corresponding LS_FEFCO_MANTU_E to <S_PRSTY_MANTU_E>.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~DELETE.

  read table ME->T_MANTU_E with key GMATU = IF_GMATU
                           transporting no fields.

  if SY-SUBRC eq 0.
    delete ME->T_MANTU_E where GMATU = IF_GMATU.
  endif.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~DELETE_ALL.

  clear: ME->T_MANTU_E.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~GET_COMPONENT.

  data: LR_STRUCTDESCR type ref to CL_ABAP_STRUCTDESCR,
        LR_TYPEDESCR   type ref to CL_ABAP_TYPEDESCR.

***--------------------------------------------------------------------------------------
*** Get Fixed Columns
  CL_ABAP_TYPEDESCR=>DESCRIBE_BY_NAME( exporting  P_NAME         = 'ZVCXI_PCSSC_S_FEFCO_MANTU_E'
                                       receiving  P_DESCR_REF    = LR_TYPEDESCR
                                       exceptions TYPE_NOT_FOUND = 1              ).
  move LR_TYPEDESCR ?to LR_STRUCTDESCR.
  RT_COMPONENT = LR_STRUCTDESCR->GET_COMPONENTS( ).

*** Do not Add GUID
  delete RT_COMPONENT where NAME = 'GMATU'.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~GET_FIELDS.

  field-symbols: <S_FIELD> type SVAL.

  append initial line to RT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME    = 'ZVCXI_PCSSC_S_FEFCO_MANTU_E'.
  <S_FIELD>-FIELDNAME  = 'PTYPE'.

  append initial line to RT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME    = 'ZVCXI_PCSSC_S_FEFCO_MANTU_E'.
  <S_FIELD>-FIELDNAME  = 'FLUTE'.
  <S_FIELD>-FIELD_OBL  = ABAP_TRUE.

  append initial line to RT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME    = 'ZVCXI_PCSSC_S_FEFCO_MANTU_E'.
  <S_FIELD>-FIELDNAME  = 'CALIF'.

  append initial line to RT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME    = 'ZVCXI_PCSSC_S_FEFCO_MANTU_E'.
  <S_FIELD>-FIELDNAME  = 'CALIF_UOM'.
  <S_FIELD>-VALUE      = 'MM'.
  <S_FIELD>-FIELD_OBL  = ABAP_TRUE.

  append initial line to RT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME    = 'ZVCXI_PCSSC_S_FEFCO_MANTU_E'.
  <S_FIELD>-FIELDNAME  = 'JOIPO'.
  <S_FIELD>-FIELD_OBL  = ABAP_TRUE.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~LOAD_FROM_DB.

  check IT_GMATU_OLD is not initial.

  select * from ZVCXI_PCS_TC320
         into corresponding fields of table ME->T_MANTU_E
         for all entries in IT_GMATU_OLD
         where GMATU = IT_GMATU_OLD-TABLE_LINE.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~READ.

  data:          LS_FEFCO_MANTU_E  type ZVCXI_PCSSC_S_FEFCO_MANTU_E.
  field-symbols: <S_PRSTY_MANTU_E> type ZVCXI_PCSSC_S_FEFCO_MANTU_E.

  read table ME->T_MANTU_E with key GMATU = IF_GMATU into LS_FEFCO_MANTU_E.

  create data ER_S_PRSTY_MANTU_E type ('ZVCXI_PCSSC_S_FEFCO_MANTU_E').
  assign ER_S_PRSTY_MANTU_E->* to <S_PRSTY_MANTU_E>.
  move-corresponding LS_FEFCO_MANTU_E to <S_PRSTY_MANTU_E>.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~SAVE.

*** Do Save
  call function 'ZVCXI_PCSSC_DB_SAVE_MANTU_E'
          in update task
    exporting
      IT_GMATU_OLD = IT_GMATU_OLD
      IT_MANTU_E   = ME->T_MANTU_E
*   IF_WRITE_CD    = ABAP_TRUE
     IF_WRITE_TR   = ABAP_TRUE.

endmethod.
method ZIF_VCXI_P0SSC_PRSTY_MANTU_E~SORT_DATA.

  field-symbols: <T_DATA> type standard table.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

  sort <T_DATA> by ('VALFR') ('WERKS') ('PTYPE') ('FLUTE') ('CALIF').

endmethod.
endclass. "ZCL_VCXI_PCSSC_MANTU_E implementation
