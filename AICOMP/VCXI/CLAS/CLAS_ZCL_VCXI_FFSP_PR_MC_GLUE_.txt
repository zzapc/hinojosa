
class ZCL_VCXI_FFSP_PR_MC_GLUE definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  create public .

public section.

  constants C_IPRVT_MC_GLUE type /VCXI/VKSC_IPRVT value 'ZVCXI_FFSP_MC_GLUE' ##NO_TEXT.
  constants C_PARID_GLTIN type /VCXI/VKS_PARID value 'ZVCXI_FF_GLTIN' ##NO_TEXT.
  constants C_PARID_GLWID type /VCXI/VKS_PARID value 'ZVCXI_FF_GLWID' ##NO_TEXT.
  constants C_PARID_TGLUE type /VCXI/VKS_PARID value 'ZVCXI_FF_TGLUE' ##NO_TEXT.
  constants C_PARID_SURWT type /VCXI/VKS_PARID value 'ZVCXI_F0_SURWT' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCO
    exporting
      !ES_AVGCO type ZVCXI_XCS_S_AVGCO
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCP
    exporting
      !ES_AVGCP type ZVCXI_XCS_S_AVGCP
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_SURWT
    importing
      !IS_SURWT type ZVCXI_F0S_S_SURWT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_GLTIN
    exporting
      !ES_GLTIN type ZVCXI_FFS_S_GLTIN
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_SURWT
    exporting
      !ES_SURWT type ZVCXI_F0S_S_SURWT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_GLWID
    exporting
      !ES_GLWID type ZVCXI_FFS_S_GLWID
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_TGLUE
    exporting
      !EF_TGLUE type ZVCXI_FFS_TGLUE
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCO
    importing
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCP
    importing
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_GLTIN
    importing
      !IS_GLTIN type ZVCXI_FFS_S_GLTIN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_GLWID
    importing
      !IS_GLWID type ZVCXI_FFS_S_GLWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TGLUE
    importing
      !IF_TGLUE type ZVCXI_FFS_TGLUE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods CALC_CONSU
    redefinition .
protected section.

  constants C_IEVNT_O_GLTIN_CHANGED type /VCXI/VKSC_IEVNT value 'GLTIN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_TGLUE_CHANGED type /VCXI/VKSC_IEVNT value 'TGLUE_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_SURWT_CHANGED type /VCXI/VKSC_IEVNT value 'SURWT_CHANGED' ##NO_TEXT.
private section.
endclass. "ZCL_VCXI_FFSP_PR_MC_GLUE definition
class ZCL_VCXI_FFSP_PR_MC_GLUE implementation.
  method CALC_CONSU.

    data: LS_AVGCO type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP type ZVCXI_XCS_S_AVGCP,
          LS_CONSU type ZVCXI_XCSP_S_CONSU,
          LS_CALCV type ZVCXI_XCS_S_CALCV,
          LS_GLWID type ZVCXI_FFS_S_GLWID.

    check IS_MQTYI is not initial.

*** Get Average Consumption
    ME->GET_AVGCO( importing ES_AVGCO = LS_AVGCO ).
    ME->GET_AVGCP( importing ES_AVGCP = LS_AVGCP ).
    ME->GET_GLWID( importing ES_GLWID = LS_GLWID ).

*** Calculate Weight
    if LS_AVGCP-AVGCP is not initial and
       LS_GLWID-GLWID is not initial.

      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_MQTYI-MQTYI
                                                          IF_CALCV_UOM_1 = IS_MQTYI-MQTYI_UOM
                                                          IF_CALCV_2     = LS_GLWID-GLWID
                                                          IF_CALCV_UOM_2 = LS_GLWID-GLWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                          IF_UOM         = LS_AVGCP-AVGCP_UOM
                                                importing EF_CALCV       = LS_CALCV-CALCV
                                                          EF_CALCV_UOM   = LS_CALCV-CALCV_UOM ).

      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_CALCV-CALCV
                                                          IF_CALCV_UOM_1 = LS_CALCV-CALCV_UOM
                                                          IF_CALCV_2     = LS_AVGCP-AVGCP
                                                          IF_CALCV_UOM_2 = LS_AVGCP-AVGCP_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LS_CALCV-CALCV
                                                          EF_CALCV_UOM   = LS_CALCV-CALCV_UOM ).

      LS_CONSU-CONSU   =  LS_CALCV-CALCV * LS_AVGCO-AVGCO.
    else.
      LS_CONSU-CONSU   = 0.
    endif.
    LS_CONSU-CONSU_UOM = LS_AVGCO-AVGCO_UOM.

*** Set Consumption
    ME->SET_CONSU( IS_CONSU = LS_CONSU ).

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

    F_PARID_CONSU = C_PARID_CONSU_W.
    F_PARID_PRICP = C_PARID_PRICP_W.
    F_PARID_AVGCO = C_PARID_AVGCO_W.
    F_PARID_AVGCP = C_PARID_AVGCP_A.

  endmethod.
  method GET_AVGCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).
    move LS_PARAM-ATFLV to ES_AVGCO-AVGCO.
    move LS_PARAM-UNIT  to ES_AVGCO-AVGCO_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_AVGCP.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).
    move LS_PARAM-ATFLV to ES_AVGCP-AVGCP.
    move LS_PARAM-UNIT  to ES_AVGCP-AVGCP_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_GLTIN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GLTIN ).
    move LS_PARAM-ATFLV to ES_GLTIN-GLTIN.
    move LS_PARAM-UNIT  to ES_GLTIN-GLTIN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_GLWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GLWID ).
    move LS_PARAM-ATFLV to ES_GLWID-GLWID.
    move LS_PARAM-UNIT  to ES_GLWID-GLWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_SURWT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SURWT ).
    move LS_PARAM-ATFLV to ES_SURWT-SURWT.
    move LS_PARAM-UNIT  to ES_SURWT-SURWT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_TGLUE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TGLUE ).
    move LS_PARAM-ATWRT to EF_TGLUE.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method SET_AVGCO.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).

    move IS_AVGCO-AVGCO     to LS_PARAM-ATFLV.
    move IS_AVGCO-AVGCO_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_AVGCP.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).

    move IS_AVGCP-AVGCP     to LS_PARAM-ATFLV.
    move IS_AVGCP-AVGCP_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_GLTIN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GLTIN ).

    move IS_GLTIN-GLTIN     to LS_PARAM-ATFLV.
    move IS_GLTIN-GLTIN_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_GLTIN_CHANGED ).
    endif.

  endmethod.
  method SET_GLWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_GLWID ).

    move IS_GLWID-GLWID     to LS_PARAM-ATFLV.
    move IS_GLWID-GLWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_SURWT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SURWT ).

    move IS_SURWT-SURWT     to LS_PARAM-ATFLV.
    move IS_SURWT-SURWT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SURWT_CHANGED ).
    endif.

  endmethod.
  method SET_TGLUE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TGLUE ).

    move IF_TGLUE           to LS_PARAM-ATWRT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TGLUE_CHANGED ).
    endif.

  endmethod.
