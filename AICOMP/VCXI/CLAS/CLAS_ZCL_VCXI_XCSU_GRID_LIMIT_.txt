
class ZCL_VCXI_XCSU_GRID_LIMIT definition
  public
  inheriting from ZCL_VCXI_XCS_GRID
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_XCSU_S_LIMIT_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data T_PURCHASED type BSPTAGTAB .
  data F_PURCHASED type CHAR1 .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSU_GRID_LIMIT definition
class ZCL_VCXI_XCSU_GRID_LIMIT implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED       type        /VCXI/CKX_LOCKED,
                 LF_INUSE        type        /VCXI/VKSR_INUSE,
                 LF_FOVRR_LIMIT  type        ZVCXI_XCS_FOVRR.
  data:          LS_FCAT         type        LVC_S_FCAT.
  data:          LR_PR_SHIPUNIT  type ref to ZCL_VCXI_XCSU_PR_SHIPUNIT.
  field-symbols: <S_FCAT>        type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Get Shipping Unit Reference
  try.
      move ME->R_GATE->R_CLSPR ?to LR_PR_SHIPUNIT.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PR_SHIPUNIT.
  endtry.

  if LR_PR_SHIPUNIT                     is bound and
     LR_PR_SHIPUNIT->GET_FOVRR_LIMIT( ) eq ABAP_TRUE.
    move ABAP_TRUE to LF_FOVRR_LIMIT.
  endif.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'DIMVA'.
        if LF_LOCKED      eq ABAP_TRUE and
           LF_INUSE       eq ABAP_TRUE and
           LF_FOVRR_LIMIT eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

***   Overwrite Limit
      when 'LIMIT'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      when 'LIMIT_DESCR'.
        read table RT_FCAT into LS_FCAT
                           with key FIELDNAME = 'LIMIT'.
        if SY-SUBRC eq 0.
          move LS_FCAT-COL_POS   to <S_FCAT>-COL_POS.
          move LS_FCAT-REPTEXT   to <S_FCAT>-REPTEXT.
          move LS_FCAT-SCRTEXT_L to <S_FCAT>-SCRTEXT_L.
          move LS_FCAT-SCRTEXT_M to <S_FCAT>-SCRTEXT_M.
          move LS_FCAT-SCRTEXT_S to <S_FCAT>-SCRTEXT_S.
        endif.

***   Overwrite Dimension
      when 'DIMEN'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      when 'DIMEN_DESCR'.
        read table RT_FCAT into LS_FCAT
                           with key FIELDNAME = 'DIMEN'.
        if SY-SUBRC eq 0.
          move LS_FCAT-COL_POS   to <S_FCAT>-COL_POS.
          move LS_FCAT-REPTEXT   to <S_FCAT>-REPTEXT.
          move LS_FCAT-SCRTEXT_L to <S_FCAT>-SCRTEXT_L.
          move LS_FCAT-SCRTEXT_M to <S_FCAT>-SCRTEXT_M.
          move LS_FCAT-SCRTEXT_S to <S_FCAT>-SCRTEXT_S.
        endif.

    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_LIMIT             type          ZVCXI_XCSU_S_LIMIT,
                 LS_LIMIT_GRID        type          ZVCXI_XCSU_S_LIMIT_GRID.
  data:          LT_LIMIT             type          ZVCXI_XCSU_TT_LIMIT.
  data:          LR_PR_SHIPUNIT       type ref to   ZCL_VCXI_XCSU_PR_SHIPUNIT.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Shipping Unit Reference
  try.
      move ME->R_GATE->R_CLSPR ?to LR_PR_SHIPUNIT.
      check LR_PR_SHIPUNIT is bound.

***------------------------------------------------------------------------------------------------
***   Get Data from PR Class
      LR_PR_SHIPUNIT->GET_LIMIT( importing ET_LIMIT = LT_LIMIT ).
      loop at LT_LIMIT into LS_LIMIT.

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.

        move LS_LIMIT to LS_LIMIT_GRID-S_LIMIT.
        LS_LIMIT_GRID-LIMIT_DESCR = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_DESCR_FOR_LIMIT( IF_LIMIT = LS_LIMIT-LIMIT ).
        LS_LIMIT_GRID-DIMEN_DESCR = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_DESCR_FOR_DIMEN( IF_DIMEN = LS_LIMIT-DIMEN ).

        move-corresponding LS_LIMIT_GRID to <S_DATA>.
      endloop.

    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PR_SHIPUNIT.
  endtry.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LF_ROW_ID            type          I,
                 LF_UPDATE            type          ABAP_BOOL.
  data:          LS_LIMIT             type          ZVCXI_XCSU_S_LIMIT.
  data:          LT_LIMIT             type          ZVCXI_XCSU_TT_LIMIT.
  data:          LR_PR_SHIPUNIT       type ref to   ZCL_VCXI_XCSU_PR_SHIPUNIT,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

***   Get Shipping Unit Reference
      try.
          move ME->R_GATE->R_CLSPR ?to LR_PR_SHIPUNIT.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_SHIPUNIT.
      endtry.

      check LR_PR_SHIPUNIT is bound.

***   Get Data and set Update Flag
      loop at <T_DATA> assigning <S_DATA>.
        move SY-TABIX to LF_ROW_ID.

        move-corresponding <S_DATA> to LS_LIMIT.
        append LS_LIMIT to LT_LIMIT.

        read table ET_GOOD_CELLS with key ROW_ID = LF_ROW_ID
                                 transporting no fields.
        check SY-SUBRC eq 0.
        move ABAP_TRUE to LF_UPDATE.

      endloop.

***   Update Effect Data
      check LF_UPDATE eq ABAP_TRUE.

      LR_PR_SHIPUNIT->SET_LIMIT( IT_LIMIT = LT_LIMIT
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).


      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
