
class ZCL_VCXI_XCSU_UI_SHIPINFO definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_CURSOR type SCRFNAME .
  data S_SHIPINFO_VIS type ZVCXI_XCSU_S_SHIPINFO_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_SHIPINFO_VIS
    importing
      !IS_SHIPINFO_VIS type ZVCXI_XCSU_S_SHIPINFO_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_SHIPINFO type ref to ZCL_VCXI_XCSU_PR_SHIPINFO .
  data R_TEXTEDIT_LTEXT type ref to ZCL_VCXI_XCS_TEXTEDIT_LTEXT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSU_UI_SHIPINFO definition
class ZCL_VCXI_XCSU_UI_SHIPINFO implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_XCSU_UI_SHIPINFO_BIND'
      exporting
        IR_UI_SHIPINFO = ME
      importing
        ES_DYNP        = ME->S_DYNP.

*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT_LTEXT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

  endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign the RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_SHIPINFO.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Update the Long Text before leaving the screen
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
      ME->R_TEXTEDIT_LTEXT->DO_FREE( ).
      clear ME->R_TEXTEDIT_LTEXT.
    endif.

  endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED   type        /VCXI/CKX_LOCKED,
         LF_INUSE    type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX   type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
  method DO_PBO.

*** Check if the PR Class is bound
    check ME->R_PR_SHIPINFO is bound.


***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_LTEXT->F_REFRESH_REQ.
      ME->R_TEXTEDIT_LTEXT->REFRESH_TEXTEDIT( ).
    endif.

***--------------------------------------------------------------------------------------
    set cursor field ME->F_CURSOR.
    clear ME->F_CURSOR.

  endmethod.
  method DO_UPDATE_SHIPINFO_VIS.

*** Label Type
    if ME->S_SHIPINFO_VIS-TLABL ne IS_SHIPINFO_VIS-TLABL.
      ME->R_PR_SHIPINFO->SET_TLABL( IF_TLABL = IS_SHIPINFO_VIS-TLABL
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Label Type
    if ME->S_SHIPINFO_VIS-LAPOS ne IS_SHIPINFO_VIS-LAPOS.
      ME->R_PR_SHIPINFO->SET_LAPOS( IF_LAPOS = IS_SHIPINFO_VIS-LAPOS
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

  endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_SHIPINFO.

endmethod.
method INIT_VIS.

  free: ME->S_SHIPINFO_VIS.

*** Unit Label Type
  move ME->R_PR_SHIPINFO->GET_TLABL( )         to ME->S_SHIPINFO_VIS-TLABL.
  move ME->R_PR_SHIPINFO->GET_TLABL_DESCR( )   to ME->S_SHIPINFO_VIS-TLABL_DESCR.

*** Unit Label Position
  move ME->R_PR_SHIPINFO->GET_LAPOS( )         to ME->S_SHIPINFO_VIS-LAPOS.
  move ME->R_PR_SHIPINFO->GET_LAPOS_DESCR( )   to ME->S_SHIPINFO_VIS-LAPOS_DESCR.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
