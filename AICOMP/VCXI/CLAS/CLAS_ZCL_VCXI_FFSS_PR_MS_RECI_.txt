
class ZCL_VCXI_FFSS_PR_MS_RECI definition
  public
  inheriting from ZCL_VCXI_XCSS_PR_MS
  create public .

public section.

  constants C_IPRVT_MS_RECI type /VCXI/VKSC_IPRVT value 'ZVCXI_FFSS_MS_RECI' ##NO_TEXT.
  constants C_PARID_FIDEN type /VCXI/VKS_PARID value 'ZVCXI_FF_FIDEN' ##NO_TEXT.
  constants C_PARID_NOLAY type /VCXI/VKS_PARID value 'ZVCXI_F0_NOLAY' ##NO_TEXT.
  constants C_PARID_FBLOF type /VCXI/VKS_PARID value 'ZVCXI_F0_FBLOF' ##NO_TEXT.
  data R_CUST_RECI type ref to ZCL_VCXI_FFSS_CUST_RECI .

  methods GET_FIDEN
    exporting
      !ES_FIDEN type ZVCXI_FFS_S_FIDEN
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_NOLAY
    exporting
      !EF_NOLAY type ZVCXI_F0S_NOLAY
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_FBLOF
    exporting
      !EF_FBLOF type ZVCXI_F0S_FBLOF
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_FBLOF
    importing
      !IF_FBLOF type ZVCXI_F0S_FBLOF
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_WERKS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  constants C_IEVNT_O_FIDEN_CHANGED type /VCXI/VKSC_IEVNT value 'FIDEN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_NOLAY_CHANGED type /VCXI/VKSC_IEVNT value 'NOLAY_CHANGED' ##NO_TEXT.

  methods CHECK_NOLAY
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods SET_FIDEN
    importing
      !IS_FIDEN type ZVCXI_FFS_S_FIDEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOLAY
    importing
      !IF_NOLAY type ZVCXI_F0S_NOLAY
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TEXTR
    importing
      !IF_TEXTR type ZVCXI_F0S_TEXTR
    raising
      /VCXI/CX_CKX .

  methods HANDLE_INIT_CUST_MATNR
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_PR_MS_RECI definition
class ZCL_VCXI_FFSS_PR_MS_RECI implementation.
  method CHECK_NOLAY.

    data: LF_NOLAY type ZVCXI_F0S_NOLAY.

    ME->GET_NOLAY( importing EF_NOLAY = LF_NOLAY ).

    if LF_NOLAY is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Number of Layer is valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '102' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Number of Layer is not valid.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FRS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '103' ).
      endif.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

    ME->F_PARID_PRICP = C_PARID_PRICP_W.

  endmethod.
  method GET_FBLOF.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FBLOF ).
    move LS_PARAM-ATWRT to EF_FBLOF.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_FIDEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FIDEN ).
    move LS_PARAM-ATFLV to ES_FIDEN-FIDEN.
    move LS_PARAM-UNIT  to ES_FIDEN-FIDEN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOLAY.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOLAY ).
    move LS_PARAM-ATFLV to EF_NOLAY.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

*** Check Number of Layer
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_NOLAY( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

*** Check Number of Layer
    ME->CHECK_NOLAY( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_WERKS.

    data: LT_GATE    type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SPEC type ref to ZCL_VCXI_F0SS_PR_SPEC.

    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_F0SS_PR_SPEC=>C_IPRVT_F0_SPEC ).
    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC eq 0.
      move LR_GATE->R_CLSPR ?to LR_PR_SPEC.
      LR_PR_SPEC->GET_WERKS( importing EF_WERKS = RF_WERKS ).
    else.
      RF_WERKS = SUPER->GET_WERKS( ).
    endif.

  endmethod.
  method HANDLE_INIT_CUST_MATNR.

    data: LF_MATNR type        MATNR,
          LF_WERKS type        WERKS_D,
          LF_DCONF type        DATS,
          LF_NOLAY type        ZVCXI_F0S_NOLAY,
          LF_TEXTR type        ZVCXI_F0S_TEXTR,
          LF_FBLOF type        ZVCXI_F0S_FBLOF.
    data: LS_FIDEN type        ZVCXI_FFS_S_FIDEN.


***--------------------------------------------------------------------------------------
    move ME->GET_MATNR( )  to LF_MATNR.
    move ME->GET_WERKS( )  to LF_WERKS.
    ME->R_GATE->GET_CONFIG_INFO( importing EF_DCONF = LF_DCONF ).

    if ME->R_CUST_RECI          is bound    and
       ME->R_CUST_RECI->F_MATNR eq LF_MATNR and
       ME->R_CUST_RECI->F_WERKS eq LF_WERKS.
***   Everything was loaded already...
      return.
    endif.
    clear:  ME->R_CUST_MATNR, ME->R_CUST_RECI.

***--------------------------------------------------------------------------------------
*** Load the Customizing
    if LF_MATNR is not initial.
      try.
          ME->R_CUST_RECI = ZCL_VCXI_FFSS_CUST_RECI=>GET_INSTANCE_RECI( IF_MATNR = LF_MATNR
                                                                        IF_WERKS = LF_WERKS
                                                                        IF_DATE  = LF_DCONF ).
        catch /VCXI/CX_CKX.
***       It is not needed to handle Exception
          exit.
      endtry.
    endif.
    move ME->R_CUST_RECI to ME->R_CUST_MATNR.

***--------------------------------------------------------------------------------------
*** Set Film Density
    if ME->R_CUST_RECI is bound.
      move ME->R_CUST_RECI->S_FIDEN to LS_FIDEN.
    endif.
    ME->SET_FIDEN( IS_FIDEN = LS_FIDEN ).

*** Set Number of Layer
    if ME->R_CUST_RECI is bound.
      move LINES( ME->R_CUST_RECI->T_FSFLAYER ) to LF_NOLAY.
    endif.
    ME->SET_NOLAY( IF_NOLAY = LF_NOLAY ).

*** Set Extrusion Type to Extrusion
    if ME->R_CUST_RECI is bound.
      move ME->R_CUST_RECI->F_TEXTR to LF_TEXTR.
    endif.
    ME->SET_TEXTR( IF_TEXTR = LF_TEXTR ).

*** Set Flag Blocked Film
    if ME->R_CUST_RECI is bound.
      move ME->R_CUST_RECI->F_FBLOF to LF_FBLOF.
    endif.
    ME->SET_FBLOF( IF_FBLOF = LF_FBLOF ).

  endmethod.
  method SET_FBLOF.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FBLOF ).

    move IF_FBLOF to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method SET_FIDEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FIDEN ).

    move IS_FIDEN-FIDEN     to LS_PARAM-ATFLV.
    move IS_FIDEN-FIDEN_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FIDEN_CHANGED ).
    endif.

  endmethod.
  method SET_NOLAY.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOLAY ).

    move IF_NOLAY           to LS_PARAM-ATFLV.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOLAY_CHANGED ).
    endif.

  endmethod.
  method SET_TEXTR.

    data: LT_GATE    type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_EXTR type ref to ZCL_VCXI_FFSS_PR_EXTR.

***--------------------------------------------------------------------------------------
*** Don't overwrite the Extrusion Type on Extrusion, if Recipe doesn't define it
    check IF_TEXTR is not initial.

***--------------------------------------------------------------------------------------
*** Get Provider for Extrusion
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSS_PR_EXTR=>C_IPRVT_EXTR ).
    read table LT_GATE into LR_GATE index 1.
    check SY-SUBRC eq 0.

*** Get PR Class
    move LR_GATE->R_CLSPR ?to LR_PR_EXTR.
    check LR_PR_EXTR is bound.

*** Set Extrusion Type
    LR_PR_EXTR->SET_TEXTR( IF_TEXTR = IF_TEXTR ).

  endmethod.
