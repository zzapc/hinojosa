
class ZCL_VCXI_P0SS_GRID_SP_INK definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods ADD_PRVDR
    redefinition .
  methods DEL_PRVDR
    redefinition .
  methods GET_DISABLED_ADD
    redefinition .
  methods GET_DISABLED_DEL
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SS_GRID_SP_INK definition
class ZCL_VCXI_P0SS_GRID_SP_INK implementation.
method ADD_PRVDR.

  RR_GATE = SUPER->ADD_PRVDR( IF_ID = IF_ID ).

*** Refresh is required
  ME->F_REFRESH_REQ = ABAP_TRUE.

*** Send Event
  ME->R_GATE->SET_EVENT( IF_IEVNT = ZCL_VCXI_P0SS_PR_SP_PRINT=>C_IEVNT_O_NOCOL_CHANGED ).
  ME->R_GATE->RAISE_EVENTS( ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_P0SS_S_SP_INK_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_P0SS_PR_SP_INK=>C_IPRVT_P0_SP_INK.

endmethod.
method DEL_PRVDR.

  SUPER->DEL_PRVDR( ).

*** Send Event
  ME->R_GATE->SET_EVENT( IF_IEVNT = ZCL_VCXI_P0SS_PR_PRINT=>C_IEVNT_O_NOCOL_CHANGED ).
  ME->R_GATE->RAISE_EVENTS( ).

endmethod.
method GET_DISABLED_ADD.

  data: LS_ATTRI type /VCXI/VKS_S_ATTRI.

  RF_DISABLED = SUPER->GET_DISABLED_ADD( ).

  check RF_DISABLED eq ABAP_FALSE.

*** Check if Ink is "Calculated"
  try.
      LS_ATTRI = ME->R_GATE->GET_ATTRI( IF_ATTID = ZCL_VCXI_P0SS_PR_SP_INK=>C_ATTID_CALCULATED ).
      if LS_ATTRI-ATTVA eq ABAP_TRUE.
        move ABAP_TRUE to RF_DISABLED.
      endif.
    catch /VCXI/CX_CKX.
      clear: RF_DISABLED.
  endtry.

endmethod.
method GET_DISABLED_DEL.

  data: LS_ATTRI type /VCXI/VKS_S_ATTRI.

  RF_DISABLED = SUPER->GET_DISABLED_DEL( ).

  check RF_DISABLED eq ABAP_FALSE.

*** Check if Ink is "Calculated"
  try.
      LS_ATTRI = ME->R_GATE->GET_ATTRI( IF_ATTID = ZCL_VCXI_P0SS_PR_SP_INK=>C_ATTID_CALCULATED ).
      if LS_ATTRI-ATTVA eq ABAP_TRUE.
        move ABAP_TRUE to RF_DISABLED.
      endif.
    catch /VCXI/CX_CKX.
      clear: RF_DISABLED.
  endtry.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED       type          /VCXI/CKX_LOCKED,
                 LF_INUSE        type          /VCXI/VKSR_INUSE,
                 LF_COLPOS       type          I,
                 LF_EDIT         type          ABAP_BOOL.
  data:          LS_ATTRI        type          /VCXI/VKS_S_ATTRI.
  field-symbols: <S_FCAT>        type          LVC_S_FCAT.



***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock, In-Use Status and Print Data not changeable
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Read Attribute Calculated
  try.
      LS_ATTRI = ME->R_GATE->GET_ATTRI( IF_ATTID = ZCL_VCXI_P0SS_PR_SP_INK=>C_ATTID_CALCULATED ).
      if LS_ATTRI-ATTVA eq ABAP_FALSE.
        move ABAP_TRUE to LF_EDIT.
      endif.
    catch /VCXI/CX_CKX.
      move ABAP_TRUE to LF_EDIT.
  endtry.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.
        move 0            to <S_FCAT>-COL_POS.

      when 'COVRG'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT    to <S_FCAT>-EDIT.
        endif.

      when 'COLCO'.
        move ABAP_TRUE    to <S_FCAT>-F4AVAILABL.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move LF_EDIT    to <S_FCAT>-EDIT.
        endif.

    endcase.


***----------------------------------------------------------------------------
*** Set Position for each Field
    move 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'COLCO'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'COLCO_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'COVRG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'COVRG_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data:          LS_SP_INK_GRID       type          ZVCXI_P0SS_S_SP_INK_GRID,
                 LS_COVRG             type          ZVCXI_P0S_S_COVRG.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_SP_INK         type ref to   ZCL_VCXI_P0SS_PR_SP_INK,
                 LR_APPDATA           type ref to   /VCXI/CL_VKSR_APPDATA.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Ink
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_SP_INK=>C_IPRVT_P0_SP_INK
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_SP_INK_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SP_INK.
        check LR_PR_SP_INK is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_SP_INK_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_SP_INK_GRID-GATKY.
        move LR_GATE               to LS_SP_INK_GRID-R_GATE.

        LR_PR_SP_INK->GET_COLCO( importing EF_COLCO = LS_SP_INK_GRID-COLCO ).
        move LR_PR_SP_INK->GET_COLCO_DESCR( IF_COLCO  = LS_SP_INK_GRID-COLCO ) to LS_SP_INK_GRID-COLCO_DESCR.

        LR_PR_SP_INK->GET_COVRG( importing ES_COVRG = LS_COVRG ).
        move-corresponding LS_COVRG     to LS_SP_INK_GRID.

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_SP_INK_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

***------------------------------------------------------------------------------------------------
*** Set Plant to Parameter for Search Help
*** Get Application Data
  move ME->R_GATE->GET_APPDATA( ) to LR_APPDATA.
  if LR_APPDATA is bound.
    set parameter id 'WRK' field LR_APPDATA->F_WERKS.
  endif.


endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LF_ROW_ID            type          I.
  data:          LS_SP_INK_GRID       type          ZVCXI_P0SS_S_MS_INK_GRID,
                 LS_MODI              type          LVC_S_MODI,
                 LS_COVRG             type          ZVCXI_P0S_S_COVRG.
  data:          LR_PR_SP_INK         type ref to   ZCL_VCXI_P0SS_PR_SP_INK,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move SY-TABIX to LF_ROW_ID.
        read table ET_GOOD_CELLS with key ROW_ID = LF_ROW_ID
                                 transporting no fields.
        check SY-SUBRC eq 0.

        try.
            move-corresponding <S_DATA> to LS_SP_INK_GRID.
            check LS_SP_INK_GRID-R_GATE is bound.

            move LS_SP_INK_GRID-R_GATE->R_CLSPR ?to LR_PR_SP_INK.
            check LR_PR_SP_INK is bound.

***         Set Values to PR Class
            loop at ET_GOOD_CELLS into LS_MODI where ROW_ID = LF_ROW_ID.
              case LS_MODI-FIELDNAME.
                when 'COLCO'.
                  LR_PR_SP_INK->SET_COLCO( IF_COLCO = LS_SP_INK_GRID-COLCO
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'COVRG'.
                  move-corresponding LS_SP_INK_GRID to LS_COVRG.
                  LR_PR_SP_INK->SET_COVRG( IS_COVRG = LS_COVRG
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
              endcase.
            endloop.

          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
