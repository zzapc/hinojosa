
class ZCL_VCXI_PXSS_GRID_PRINT_COM definition
  public
  inheriting from ZCL_VCXI_XCS_GRID
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE optional
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSS_S_PRINT_COM_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE optional
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
      !IR_PRINT_COM type ref to ZIF_VCXI_PXSS_PRINT_COM
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_ADD type UI_FUNC value 'ADD' ##NO_TEXT.
  constants C_UC_DEL type UI_FUNC value 'DEL' ##NO_TEXT.
  data R_PRINT_COM type ref to ZIF_VCXI_PXSS_PRINT_COM .

  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_UCOMM
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .
  methods HANDLE_UC_ADD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DEL
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_GRID_PRINT_COM definition
class ZCL_VCXI_PXSS_GRID_PRINT_COM implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IR_UIGATE         = IR_UIGATE
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

    ME->R_PRINT_COM = IR_PRINT_COM.

  endmethod.
  method GET_FIELDCAT.

    data: LF_EDIT_ALLOWED type ABAP_BOOL,
          LF_COLPOS       type I.
    field-symbols:  <S_FCAT>  type  LVC_S_FCAT.

***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

    LF_EDIT_ALLOWED = ME->R_PRINT_COM->IS_EDIT_ALLOWED( ).
*** Get Lock and In-Use Status
    if ME->R_GATE is not bound or
       ME->R_GATE->IS_LOCKED( ) ne ABAP_TRUE or
       ME->R_GATE->IS_INUSE( )  ne ABAP_TRUE.
      LF_EDIT_ALLOWED = ABAP_FALSE.
    endif.

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
***   General adjustments
      case <S_FCAT>-FIELDNAME.
        when 'T_STYL'.
          <S_FCAT>-TECH = ABAP_TRUE.
        when 'TPRIN'.
          <S_FCAT>-F4AVAILABL = ABAP_TRUE.
      endcase.

***   Adjust Edit Mode
      if LF_EDIT_ALLOWED eq ABAP_TRUE.
        case <S_FCAT>-FIELDNAME.
          when 'PRSID' or 'TPRIN' or 'NOCOL'.
            <S_FCAT>-EDIT = ABAP_TRUE.
        endcase.
      else.
        move ABAP_FALSE to <S_FCAT>-EDIT.
      endif.

***----------------------------------------------------------------------------
***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRSID'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRSID_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TPRIN'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TPRIN_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOCOL'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.

    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_PRINT_COM_GRID type ZVCXI_PXSS_S_PRINT_COM_GRID,
          LS_PRINT_COM      type ZVCXI_PXSS_S_PRINT_COM.
    data: LT_PRINT_COM  type  ZVCXI_PXSS_TT_PRINT_COM.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type        ANY.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Prints
    LT_PRINT_COM = ME->R_PRINT_COM->GET_PRINT_COM( ).

    loop at LT_PRINT_COM into LS_PRINT_COM.
      clear LS_PRINT_COM_GRID.
      move LS_PRINT_COM to LS_PRINT_COM_GRID-S_PRINT_COM.

***   Get Descriptions
      LS_PRINT_COM_GRID-PRSID_DESCR = ZCL_VCXI_P0SS_CUST_PRINT=>GET_PRSID_DESCR( IF_PRSID = LS_PRINT_COM_GRID-PRSID ).
      LS_PRINT_COM_GRID-TPRIN_DESCR = ZCL_VCXI_PXSS_CUST_PRINT=>GET_TPRIN_DESCR( IF_TPRIN = LS_PRINT_COM_GRID-TPRIN ).

***--------------------------------------------------------------------------------------
***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_PRINT_COM_GRID to <S_DATA>.

    endloop.

  endmethod.
  method GET_LAYOUT.

    RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Activate Toolbar
    RS_LAYOUT-NO_TOOLBAR = switch #( ME->R_PRINT_COM->IS_EDIT_ALLOWED( ) when ABAP_TRUE then ABAP_FALSE
                                                                                        else ABAP_TRUE ).

*** Disable Line Selection (and Drag&Drop function)
    move ABAP_TRUE to RS_LAYOUT-NO_ROWMARK.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    field-symbols: <T_DATA> type standard table.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
***     Set Print Information to Interface
        ME->R_PRINT_COM->SET_PRINT_COM( IT_PRINT_COM = corresponding #( <T_DATA> )
                                        IF_SETBY     = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method HANDLE_TOOLBAR.

    data: LF_DISABLED type ABAP_BOOL.


    try.
***--------------------------------------------------------------------------------------
***     Get Lock and In-Use Status
        if ME->R_GATE is not bound or
           ME->R_GATE->IS_LOCKED( ) ne ABAP_TRUE.
          move ABAP_TRUE to LF_DISABLED.
        else.
***       Do general DVC Check if Function is activ
          if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE  = ME->R_GATE
                                                        IF_IFUNC = 'TOOLBAR_DISABLED' ) eq ABAP_TRUE.
            move ABAP_TRUE to LF_DISABLED.
          endif.
        endif.

***     Insert Toolbar elements to modify Scores
        append value #( FUNCTION  = C_UC_ADD
                        TEXT      = 'Add Print'(001)
                        BUTN_TYPE = C_BTYPE_BUTTON
                        ICON      = ICON_INSERT_ROW
                        DISABLED  = LF_DISABLED
                      ) to E_OBJECT->MT_TOOLBAR.

        append value #( FUNCTION  = C_UC_DEL
                        TEXT      = 'Delete Print'(002)
                        BUTN_TYPE = C_BTYPE_BUTTON
                        ICON      = ICON_DELETE_ROW
                        DISABLED  = LF_DISABLED
                      ) to E_OBJECT->MT_TOOLBAR.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method HANDLE_UC_ADD.

    data: LS_ROW type LVC_S_ROW.
    field-symbols: <T_DATA> type standard table.


    check ME->R_GATE is bound and
          ME->R_GATE->F_FREED ne ABAP_TRUE.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
*** Get Cursor of Last Row in Grid
    ME->GET_SELECTED_ROWS( importing ES_LAST_ROW = LS_ROW ).

*** Add Print
    insert initial line into <T_DATA> index LS_ROW-INDEX + 1.

***--------------------------------------------------------------------------------------
*** Set new Print Definition
    ME->R_PRINT_COM->SET_PRINT_COM( IT_PRINT_COM = corresponding #( <T_DATA> )
                                    IF_SETBY     = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    ME->R_GATE->RAISE_EVENTS( ).

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method HANDLE_UC_DEL.

    data: LS_ROW type LVC_S_ROW.
    field-symbols: <T_DATA> type standard table.


    check ME->R_GATE is bound and
          ME->R_GATE->F_FREED ne ABAP_TRUE.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
*** Get Cursor of Last Row in Grid
    ME->GET_SELECTED_ROWS( importing ES_LAST_ROW = LS_ROW ).
    check LS_ROW is not initial.

*** Delete Print
    delete <T_DATA> index LS_ROW-INDEX.

***--------------------------------------------------------------------------------------
*** Set new Print Definition
    ME->R_PRINT_COM->SET_PRINT_COM( IT_PRINT_COM = corresponding #( <T_DATA> )
                                    IF_SETBY     = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    ME->R_GATE->RAISE_EVENTS( ).

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method HANDLE_UCOMM.

    try.
***     Trigger command
        case E_UCOMM.
          when C_UC_ADD.
            ME->HANDLE_UC_ADD( ).
          when C_UC_DEL.
            ME->HANDLE_UC_DEL( ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

    move ABAP_TRUE to ME->F_REFRESH_REQ .

  endmethod.
  method SET_EVENT.

    SUPER->SET_EVENT( ).

    ME->R_GRID->REGISTER_EDIT_EVENT( CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

*** Set Eventhandler for Toolbar
    set handler ME->HANDLE_TOOLBAR             for ME->R_GRID.
    set handler ME->HANDLE_UCOMM               for ME->R_GRID.

  endmethod.
