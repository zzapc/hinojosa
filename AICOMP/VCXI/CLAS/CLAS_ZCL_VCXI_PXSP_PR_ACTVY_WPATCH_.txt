
class ZCL_VCXI_PXSP_PR_ACTVY_WPATCH definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_PCHEI type /VCXI/VKS_PARID value 'ZVCXI_P0_PCHEI' ##NO_TEXT.
  constants C_PARID_PCLEN type /VCXI/VKS_PARID value 'ZVCXI_P0_PCLEN' ##NO_TEXT.
  constants C_PARID_PCWID type /VCXI/VKS_PARID value 'ZVCXI_P0_PCWID' ##NO_TEXT.

  methods GET_PCHEI
    returning
      value(RS_PCHEI) type ZVCXI_P0SP_S_PCHEI
    raising
      /VCXI/CX_CKX .
  methods GET_PCLEN
    returning
      value(RS_PCLEN) type ZVCXI_P0SP_S_PCLEN
    raising
      /VCXI/CX_CKX .
  methods GET_PCWID
    returning
      value(RS_PCWID) type ZVCXI_P0SP_S_PCWID
    raising
      /VCXI/CX_CKX .
  methods SET_PCHEI
    importing
      !IS_PCHEI type ZVCXI_P0SP_S_PCHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCLEN
    importing
      !IS_PCLEN type ZVCXI_P0SP_S_PCLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCWID
    importing
      !IS_PCWID type ZVCXI_P0SP_S_PCWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSP_PR_ACTVY_WPATCH definition
class ZCL_VCXI_PXSP_PR_ACTVY_WPATCH implementation.
  method GET_PCHEI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).
    move LS_PARAM-ATFLV to RS_PCHEI-PCHEI.
    move LS_PARAM-UNIT  to RS_PCHEI-PCHEI_UOM.

  endmethod.
  method GET_PCLEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).
    move LS_PARAM-ATFLV to RS_PCLEN-PCLEN.
    move LS_PARAM-UNIT  to RS_PCLEN-PCLEN_UOM.

  endmethod.
  method GET_PCWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
    move LS_PARAM-ATFLV to RS_PCWID-PCWID.
    move LS_PARAM-UNIT  to RS_PCWID-PCWID_UOM.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE       type /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI      type ZVCXI_XCSP_S_MQTYI.
    data: LF_UPDATE_ALL  type ABAP_BOOL.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_OPERATION type ref to ZIF_VCXI_XCSP_OPERATION.

***------------------------------------------------------------------
*** Should all MC Inks be updated or just the requestered
    if LINE_EXISTS( IT_GATE[ TABLE_LINE = ME->R_GATE ] ).
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      if LINE_EXISTS( IT_GATE[ TABLE_LINE = ME->R_GATE->GET_PARENT( ) ] ).
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get all Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
      try.
          move LR_GATE->R_CLSPR ?to LR_OPERATION.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_OPERATION.
      endtry.
      if LR_OPERATION is bound.
        move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
      endif.
    endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

*** Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        if not LINE_EXISTS( IT_GATE[ TABLE_LINE = LR_GATE ] ).
          continue.
        endif.
      endif.
      cast ZCL_VCXI_XCSP_PR_MC( LR_GATE->R_CLSPR )->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
    endloop.

  endmethod.
  method SET_PCHEI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).

    move IS_PCHEI-PCHEI     to LS_PARAM-ATFLV.
    move IS_PCHEI-PCHEI_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
    endif.

  endmethod.
  method SET_PCLEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).

    move IS_PCLEN-PCLEN     to LS_PARAM-ATFLV.
    move IS_PCLEN-PCLEN_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
    endif.

  endmethod.
  method SET_PCWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

    move IS_PCWID-PCWID     to LS_PARAM-ATFLV.
    move IS_PCWID-PCWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

    data: LF_PCTYP type ZVCXI_P0SP_PCTYP.
    field-symbols: <S_PCDIM>  type ZVCXI_P0SP_S_PCDIM.


    if CT_PCDIM is initial.
***   No PC Dimension found
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_P0SP'
                                            IF_MSGNO = '020' ).
    endif.

*** Find or define Entry
    if LINES( CT_PCDIM ) eq 1.
      read table CT_PCDIM assigning <S_PCDIM> index 1.
    else.
      free CT_PCDIM.
      append initial line to CT_PCDIM assigning <S_PCDIM>.

***   PC Direction, Number Ups and Number Outs are fixed
      move 'A' to <S_PCDIM>-PCDIR.
      move 1   to <S_PCDIM>-PCUPS.
      move 1   to <S_PCDIM>-NOOUT.
    endif.

*** Fill Values
    <S_PCDIM>-S_PCLEN = ME->GET_PCLEN( ).
    <S_PCDIM>-S_PCWID = ME->GET_PCWID( ).
    <S_PCDIM>-S_PCHEI = ME->GET_PCHEI( ).

  endmethod.
