
class ZCL_VCXI_P0SP_PR_ADDON_UNIT definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_PCHEI type /VCXI/VKS_PARID value 'ZVCXI_P0_PCHEI' ##NO_TEXT.
  constants C_PARID_PCLEN type /VCXI/VKS_PARID value 'ZVCXI_P0_PCLEN' ##NO_TEXT.
  constants C_PARID_PCUPS type /VCXI/VKS_PARID value 'ZVCXI_P0_PCUPS' ##NO_TEXT.
  constants C_PARID_PCWID type /VCXI/VKS_PARID value 'ZVCXI_P0_PCWID' ##NO_TEXT.
  constants C_PARID_PRQTY type /VCXI/VKS_PARID value 'ZVCXI_XC_PRQTY' ##NO_TEXT.
  constants C_PARID_SHUNT type /VCXI/VKS_PARID value 'ZVCXI_XC_SHUNT' ##NO_TEXT.
  constants C_PARID_PCTYP type /VCXI/VKS_PARID value 'ZVCXI_P0_PCTYP' ##NO_TEXT.

  methods GET_PCTYP_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_SHUNT
    returning
      value(RF_SHUNT) type ZVCXI_XCSU_SHUNT
    raising
      /VCXI/CX_CKX .
  methods GET_PCHEI
    returning
      value(RS_PCHEI) type ZVCXI_P0SP_S_PCHEI
    raising
      /VCXI/CX_CKX .
  methods GET_PCLEN
    returning
      value(RS_PCLEN) type ZVCXI_P0SP_S_PCLEN
    raising
      /VCXI/CX_CKX .
  methods GET_PCWID
    returning
      value(RS_PCWID) type ZVCXI_P0SP_S_PCWID
    raising
      /VCXI/CX_CKX .
  methods GET_PRQTY
    returning
      value(RS_PRQTY) type ZVCXI_XCSU_S_PRQTY
    raising
      /VCXI/CX_CKX .
  methods SET_PCHEI
    importing
      !IS_PCHEI type ZVCXI_P0SP_S_PCHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP
    returning
      value(RF_PCTYP) type ZVCXI_P0SP_PCTYP
    raising
      /VCXI/CX_CKX .
  methods SET_PCLEN
    importing
      !IS_PCLEN type ZVCXI_P0SP_S_PCLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PCUPS
    returning
      value(RF_PCUPS) type ZVCXI_P0SP_PCUPS
    raising
      /VCXI/CX_CKX .
  methods SET_PCWID
    importing
      !IS_PCWID type ZVCXI_P0SP_S_PCWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRQTY
    importing
      !IS_PRQTY type ZVCXI_XCSU_S_PRQTY
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SHUNT
    importing
      !IF_SHUNT type ZVCXI_XCSU_SHUNT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCTYP
    importing
      !IF_PCTYP type ZVCXI_P0SP_PCTYP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCUPS
    importing
      !IF_PCUPS type ZVCXI_P0SP_PCUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_SHUNT_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE
    redefinition .
protected section.

  constants C_IAATY_NOPCBUNDLE type /VCXI/VSMC_IAATY value 'P0_AA_NOPCBUNDLE' ##NO_TEXT.
  constants C_IAATY_SHUNT type /VCXI/VSMC_IAATY value 'P0_AA_SHUNT' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PRQTY_CHANGED type /VCXI/VKSC_IEVNT value 'PRQTY_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_SHUNT_CHANGED type /VCXI/VKSC_IEVNT value 'SHUNT_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAREC
    redefinition .
  methods GET_RTE_SAVAL
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SP_PR_ADDON_UNIT definition
class ZCL_VCXI_P0SP_PR_ADDON_UNIT implementation.
method GET_PCHEI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).
  move LS_PARAM-ATFLV to RS_PCHEI-PCHEI.
  move LS_PARAM-UNIT  to RS_PCHEI-PCHEI_UOM.

endmethod.
method GET_PCLEN.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).
  move LS_PARAM-ATFLV to RS_PCLEN-PCLEN.
  move LS_PARAM-UNIT  to RS_PCLEN-PCLEN_UOM.

endmethod.
method GET_PCTYP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).
  move LS_PARAM-ATWRT to RF_PCTYP.

endmethod.
method GET_PCTYP_DESCR.

  data: LF_PCTYP type ZVCXI_P0SP_PCTYP.

  LF_PCTYP = ME->GET_PCTYP( ).
  RF_DESCR = ZCL_VCXI_P0SP_CUST_PCTYP=>GET_PCTYP_DESCR( IF_PCTYP = LF_PCTYP ).

endmethod.
method GET_PCUPS.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).
  move LS_PARAM-ATFLV to RF_PCUPS.

endmethod.
method GET_PCWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
  move LS_PARAM-ATFLV to RS_PCWID-PCWID.
  move LS_PARAM-UNIT  to RS_PCWID-PCWID_UOM.

endmethod.
method GET_PRQTY.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRQTY ).
  move LS_PARAM-ATFLV to RS_PRQTY-PRQTY.
  move LS_PARAM-UNIT  to RS_PRQTY-PRQTY_UOM.

endmethod.
method GET_RTE_SAREC.

  data:          LF_GAATY      type /VCXI/VSMC_GAATY.
  data:          LS_PRQTY      type ZVCXI_XCSU_S_PRQTY.
  field-symbols: <S_RTE_SAREC> type /VCXI/VSMR_S_RTE_SAREC,
                 <S_ARECN>     type /VCXI/VSMR_S_RTE_RANGE_ARECN.

*** Get Super
  RT_RTE_SAREC = SUPER->GET_RTE_SAREC( ).

  check ME->R_RTE_CADDON          is bound and
        ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - P0_AA_NOPCBUNDLE
  try.
      LS_PRQTY = ME->GET_PRQTY( ).
      if LS_PRQTY-PRQTY is not initial.
        LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_NOPCBUNDLE
                                                                  IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_REC ).
        append initial line to RT_RTE_SAREC assigning <S_RTE_SAREC>.
        move LF_GAATY                                     to <S_RTE_SAREC>-GAATY.
        move 1                                            to <S_RTE_SAREC>-MAXSEL.
        move /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING to <S_RTE_SAREC>-ASORT.

        append initial line      to <S_RTE_SAREC>-I_ARECN assigning <S_ARECN>.
        move 'I'                 to <S_ARECN>-SIGN.
        move 'LE'                to <S_ARECN>-OPTION.
        move LS_PRQTY-PRQTY      to <S_ARECN>-LOW.
      endif.

    catch /VCXI/CX_CKX.
  endtry.

endmethod.
method GET_RTE_SAVAL.

  data:          LF_GAATY      type /VCXI/VSMC_GAATY.
  field-symbols: <S_RTE_SAVAL> type /VCXI/VSMR_S_RTE_SAVAL,
                 <S_AVVAL>     type /VCXI/VSMR_S_RTE_RANGE_AVVAL.

*** Get Super
  RT_RTE_SAVAL = SUPER->GET_RTE_SAVAL( ).

  check ME->R_RTE_CADDON          is bound and
        ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - P0_AA_SHUNT
  try.
      LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_SHUNT
                                                                IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
      append initial line to RT_RTE_SAVAL assigning <S_RTE_SAVAL>.
      move LF_GAATY                                     to <S_RTE_SAVAL>-GAATY.
      append initial line      to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
      move 'I'                 to <S_AVVAL>-SIGN.
      move 'EQ'                to <S_AVVAL>-OPTION.
      move ME->GET_SHUNT( )    to <S_AVVAL>-LOW.
    catch /VCXI/CX_CKX.
  endtry.

endmethod.
method GET_SHUNT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHUNT ).
  move LS_PARAM-ATWRT to RF_SHUNT.

endmethod.
method GET_SHUNT_DESCR.

  data: LF_SHUNT      type        ZVCXI_XCSU_SHUNT.
  data: LR_CUST_SHIPU type ref to ZCL_VCXI_XCSU_CUST_SHIPU.

*** Initialize Reference to Shipping & Unitization Cusotmizing
  move ZCL_VCXI_XCSU_CUST_SHIPU=>GET_INSTANCE( ) to LR_CUST_SHIPU.

  LF_SHUNT = ME->GET_SHUNT( ).
  RF_DESCR = LR_CUST_SHIPU->GET_DESCR_FOR_SHUNT( IF_SHUNT = LF_SHUNT ).

endmethod.
method GET_STATUS.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check PC dimensions
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).

*** Check PC Length
  if LS_PCLEN-PCLEN is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Width
  if LS_PCWID-PCWID is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Height
  if LS_PCHEI-PCHEI is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Ups
  if ME->GET_PCUPS( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check PC dimensions
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).

*** Check PC Length
  if LS_PCLEN-PCLEN is not initial.
***   PC Length is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '001' ).
  else.
***   PC Length is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '002' ).
  endif.

*** Check PC Width
  if LS_PCWID-PCWID is not initial.
***   PC Width is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '003' ).
  else.
***   PC Width is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '004' ).
  endif.

*** Check PC Height
  if LS_PCHEI-PCHEI is not initial.
***   PC Height is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '005' ).
  else.
***   PC Height is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '006' ).
  endif.

*** Check PC Ups
  if ME->GET_PCUPS( ) is not initial.
***   PC Ups is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '007' ).
  else.
***   PC Ups is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '008' ).
  endif.


endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_RECALC_MC_CONSU.
      ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).
  endcase.

endmethod.
method HANDLE_RECALC_MC_CONSU.

  data:  LF_UPDATE_ALL      type        ABAP_BOOL,
         LF_PCUPS           type        ZVCXI_P0SP_PCUPS.
  data:  LS_MQTYI           type        ZVCXI_XCSP_S_MQTYI,
         LS_PCDIM           type        ZVCXI_P0SP_S_PCDIM.
  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE,
         LT_PCDIM           type        ZVCXI_P0SP_TT_PCDIM.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_PARENT     type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_MACHINE_PTP  type ref to ZCL_VCXI_P0SP_PR_MACHINE_PTP,
         LR_PR_MC           type ref to ZCL_VCXI_XCSP_PR_MC.

***------------------------------------------------------------------
*** Should all MC Packaging materials updated or just the requester
  read table IT_GATE with key TABLE_LINE = ME->R_GATE
  transporting no fields.
  if SY-SUBRC = 0.
    LF_UPDATE_ALL = ABAP_TRUE.
  else.
    LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
    read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
  transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    endif.
  endif.

***------------------------------------------------------------------
*** Get all Machine Quantity and Setup Waste
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC = 0.

    clear: LR_PR_MACHINE_PTP.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MACHINE_PTP.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MACHINE_PTP.
    endtry.
    if LR_PR_MACHINE_PTP is bound.
      move LR_PR_MACHINE_PTP->GET_MQTYI( ) to LS_MQTYI.
***   Divide the PC of the machine by the Number Ups of the addon
      LF_PCUPS = ME->GET_PCUPS( ).
      LT_PCDIM = LR_PR_MACHINE_PTP->GET_MFI_PCDIM( ).
      read table LT_PCDIM into LS_PCDIM index 1.

      if LF_PCUPS is not initial.
        LS_MQTYI-MQTYI = LS_MQTYI-MQTYI / LF_PCUPS * LS_PCDIM-PCUPS.
      endif.
    endif.

  endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
  loop at LT_GATE into LR_GATE.
    if LF_UPDATE_ALL eq ABAP_FALSE.
      read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
      if SY-SUBRC ne 0.
        continue.
      endif.
    endif.

    try.

        clear: LR_PR_MC.
        move LR_GATE->R_CLSPR ?to LR_PR_MC.
        check LR_PR_MC is bound.
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

  endloop.

endmethod.
method SET_PCHEI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).

  move IS_PCHEI-PCHEI     to LS_PARAM-ATFLV.
  move IS_PCHEI-PCHEI_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCLEN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).

  move IS_PCLEN-PCLEN     to LS_PARAM-ATFLV.
  move IS_PCLEN-PCLEN_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCTYP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).

  move IF_PCTYP to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCUPS.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).

  move IF_PCUPS to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

  move IS_PCWID-PCWID     to LS_PARAM-ATFLV.
  move IS_PCWID-PCWID_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PRQTY.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRQTY ).

  move IS_PRQTY-PRQTY     to LS_PARAM-ATFLV.
  move IS_PRQTY-PRQTY_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_SHUNT.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SHUNT ).

  move IF_SHUNT to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_SHUNT_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

  data:          LF_PCDIR   type ZVCXI_P0SP_PCDIR.
  field-symbols: <S_PCDIM>  type ZVCXI_P0SP_S_PCDIM.


  if CT_PCDIM is initial.
*** No PC Dimension found
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                          IF_MSGID = 'ZVCXI_P0SP'
                                          IF_MSGNO = '020' ).
  endif.


*** Find or define Entry
  if lines( CT_PCDIM ) eq 1.
    read table CT_PCDIM assigning <S_PCDIM> index 1.
  else.
    LF_PCDIR = value #( CT_PCDIM[ 1 ]-PCDIR default 'A' ).
    free CT_PCDIM.
    append value #( PCDIR = LF_PCDIR ) to CT_PCDIM assigning <S_PCDIM>.
  endif.

*** Set values
  <S_PCDIM>-S_PCLEN = ME->GET_PCLEN( ).
  <S_PCDIM>-S_PCWID = ME->GET_PCWID( ).
  <S_PCDIM>-S_PCHEI = ME->GET_PCHEI( ).
  <S_PCDIM>-PCUPS   = ME->GET_PCUPS( ).
  <S_PCDIM>-PCTYP   = ME->GET_PCTYP( ).

*** Number of Outs is fix
  move:               1        to <S_PCDIM>-NOOUT.

endmethod.
  method ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE.

    SUPER->ZIF_VCXI_XCSP_ADDON~ADJ_FEATURE( changing CT_FEATURE = CT_FEATURE ).

*** PCs per Bundle
    data(LS_PRQTY) = ME->GET_PRQTY( ).
    if LS_PRQTY-PRQTY ne 0.
      /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'pcsPerBundle'     FTVAL = LS_PRQTY-PRQTY )
                                        changing  CT_FEATURE = CT_FEATURE ).
    endif.

  endmethod.
