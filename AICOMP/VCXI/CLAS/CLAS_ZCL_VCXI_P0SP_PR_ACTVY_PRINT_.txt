
class ZCL_VCXI_P0SP_PR_ACTVY_PRINT definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_PARID_PRARE type /VCXI/VKS_PARID value 'ZVCXI_P0_PRARE'. "#EC NOTEXT

  methods GET_PRARE
    returning
      value(RS_PRARE) type ZVCXI_P0S_S_PRARE
    raising
      /VCXI/CX_CKX .
  methods SET_PRARE
    importing
      !IS_PRARE type ZVCXI_P0S_S_PRARE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU'. "#EC NOTEXT
  constants C_IEVNT_O_RECALC_CONSU_REQ type /VCXI/VKSC_IEVNT value 'RECALC_CONSU_REQUESTED'. "#EC NOTEXT

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SP_PR_ACTVY_PRINT definition
class ZCL_VCXI_P0SP_PR_ACTVY_PRINT implementation.
method GET_PRARE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRARE ).
  move LS_PARAM-ATFLV to RS_PRARE-PRARE.
  move LS_PARAM-UNIT  to RS_PRARE-PRARE_UOM.

endmethod.
method GET_STATUS.

  data: LS_PRARE type ZVCXI_P0S_S_PRARE.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Print Data
  LS_PRARE = ME->GET_PRARE( ).

*** Check Printable Area
  if LS_PRARE-PRARE is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_PRARE type ZVCXI_P0S_S_PRARE.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Print Data
  LS_PRARE = ME->GET_PRARE( ).

*** Check Printable Area
  if LS_PRARE-PRARE is not initial.
***   Printable Area is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '041' ).
  else.
***   Printable Area is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '042' ).
  endif.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_RECALC_MC_CONSU.
      ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).
  endcase.

endmethod.
method HANDLE_RECALC_MC_CONSU.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LS_MQTYI           type        ZVCXI_XCSP_S_MQTYI,
         LS_MQTYI_C         type        ZVCXI_XCSP_S_MQTYI,
         LS_PRARE           type        ZVCXI_P0S_S_PRARE.
  data:  LF_UPDATE_ALL      type        ABAP_BOOL.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_PARENT     type ref to /VCXI/CL_VKSR_GATE,
         LR_OPERATION       type ref to ZIF_VCXI_XCSP_OPERATION,
         LR_PR_MC           type ref to ZCL_VCXI_XCSP_PR_MC.

***------------------------------------------------------------------
*** Should all MC Ink's updated or just the requester
  read table IT_GATE with key TABLE_LINE = ME->R_GATE
                     transporting no fields.
  if SY-SUBRC = 0.
    LF_UPDATE_ALL = ABAP_TRUE.
  else.
    LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
    read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
                       transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    endif.
  endif.

***------------------------------------------------------------------
*** Get Pritable Area
  LS_PRARE = ME->GET_PRARE( ).

***------------------------------------------------------------------
*** Get all Machine Quantity
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC = 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_OPERATION.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_OPERATION.
    endtry.
    if LR_OPERATION is bound.
      move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
    endif.
  endif.

*** Calc total Printable Area
  LS_MQTYI_C-MQTYI     = LS_MQTYI-MQTYI * LS_PRARE-PRARE.
  LS_MQTYI_C-MQTYI_UOM = LS_PRARE-PRARE_UOM.

***------------------------------------------------------------------
*** Get all Material Consumptions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
  loop at LT_GATE into LR_GATE.
    if LF_UPDATE_ALL eq ABAP_FALSE.
      read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
      if SY-SUBRC ne 0.
        continue.
      endif.
    endif.

    try.

        clear: LR_PR_MC.
        move LR_GATE->R_CLSPR ?to LR_PR_MC.
        check LR_PR_MC is bound.
        if LR_GATE->F_ID = 'MC_INK'.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI_C ).
        else.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
        endif.


      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

  endloop.

endmethod.
method SET_PRARE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRARE ).

  move IS_PRARE-PRARE     to LS_PARAM-ATFLV.
  move IS_PRARE-PRARE_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
  endif.

endmethod.
