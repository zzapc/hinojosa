
class ZCL_VCXI_FBSP_UI_ADDON_BMAKE definition
  public
  inheriting from ZCL_VCXI_XCSP_UI_ADDON
  create public .

public section.

  data S_ADDON_BMAKE_VIS type ZVCXI_FBSP_S_ADDON_BMAKE_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_MC_HANDLE type ref to ZCL_VCXI_FBSP_GRID_MC_HANDLE .
  data R_PR_ADDON_BMAKE type ref to ZCL_VCXI_FBSP_PR_ADDON_BMAKE .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_UI_ADDON_BMAKE definition
class ZCL_VCXI_FBSP_UI_ADDON_BMAKE implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_FBSP_UI_ADDON_BMAKE_BIND'
    exporting
      IR_UI_ADDON_BMAKE = ME
    importing
      ES_DYNP           = ME->S_DYNP.

** Create Grid for MC Handle
  create object ME->R_GRID_MC_HANDLE
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0100CC_GRID_MC_HANDLE'.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_ADDON_BMAKE.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DEACTIVATE.

  SUPER->DEACTIVATE( ).

  if ME->R_GRID_MC_HANDLE is bound.
    ME->R_GRID_MC_HANDLE->DO_FREE( ).
    clear ME->R_GRID_MC_HANDLE.
  endif.

endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Super PBO
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Grid
    if ME->R_GRID_MC_HANDLE is bound.
      ME->R_GRID_MC_HANDLE->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_MC_HANDLE->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_ADDON_BMAKE_VIS type ZVCXI_FBSP_S_ADDON_BMAKE_VIS.


*** Super
    SUPER->DO_UPDATE_VIS( IS_VIS = IS_VIS ).
    check ME->R_PR_ADDON_BMAKE is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_ADDON_BMAKE_VIS.

***-------------------------------------------------------------------------------------
*** Set Bag Type
    if ME->S_ADDON_BMAKE_VIS-IBAGT ne LS_ADDON_BMAKE_VIS-IBAGT.
      ME->R_PR_ADDON_BMAKE->SET_IBAGT( IF_IBAGT = LS_ADDON_BMAKE_VIS-IBAGT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Width
    if ME->S_ADDON_BMAKE_VIS-S_BGWID ne LS_ADDON_BMAKE_VIS-S_BGWID.
      ME->R_PR_ADDON_BMAKE->SET_BGWID( IS_BGWID = LS_ADDON_BMAKE_VIS-S_BGWID
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Height
    if ME->S_ADDON_BMAKE_VIS-S_BGHEI ne LS_ADDON_BMAKE_VIS-S_BGHEI.
      ME->R_PR_ADDON_BMAKE->SET_BGHEI( IS_BGHEI = LS_ADDON_BMAKE_VIS-S_BGHEI
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Bag Weight
    if ME->S_ADDON_BMAKE_VIS-S_BGWGT ne LS_ADDON_BMAKE_VIS-S_BGWGT.
      ME->R_PR_ADDON_BMAKE->SET_BGWGT( IS_BGWGT = LS_ADDON_BMAKE_VIS-S_BGWGT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Outs
    if ME->S_ADDON_BMAKE_VIS-NOOUT ne LS_ADDON_BMAKE_VIS-NOOUT.
      ME->R_PR_ADDON_BMAKE->SET_NOOUT( IF_NOOUT = LS_ADDON_BMAKE_VIS-NOOUT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Ups
    if ME->S_ADDON_BMAKE_VIS-NOUPS ne LS_ADDON_BMAKE_VIS-NOUPS.
      ME->R_PR_ADDON_BMAKE->SET_NOUPS( IF_NOUPS = LS_ADDON_BMAKE_VIS-NOUPS
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    if ME->R_GRID_MC_HANDLE is bound.
      ME->R_GRID_MC_HANDLE->CHECK_CHANGED_DATA( ).
    endif.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_ADDON_BMAKE.

  endmethod.
  method INIT_VIS.

*** Super
    SUPER->INIT_VIS( ).

    free: ME->S_ADDON_BMAKE_VIS.
    ME->S_ADDON_BMAKE_VIS-S_ADDON_VIS = ME->S_ADDON_VIS.

***--------------------------------------------------------------------------------------
*** Get Bag Type
    ME->R_PR_ADDON_BMAKE->GET_IBAGT( importing EF_IBAGT = ME->S_ADDON_BMAKE_VIS-IBAGT
                                               EF_DESCR = ME->S_ADDON_BMAKE_VIS-IBAGT_DESCR ).

*** Get Bag Width
    ME->R_PR_ADDON_BMAKE->GET_BGWID( importing ES_BGWID = ME->S_ADDON_BMAKE_VIS-S_BGWID ).

*** Get Bag Height
    ME->R_PR_ADDON_BMAKE->GET_BGHEI( importing ES_BGHEI = ME->S_ADDON_BMAKE_VIS-S_BGHEI ).

*** Get Bag Weight
    ME->R_PR_ADDON_BMAKE->GET_BGWGT( importing ES_BGWGT = ME->S_ADDON_BMAKE_VIS-S_BGWGT ).

*** Get Number of Outs
    ME->R_PR_ADDON_BMAKE->GET_NOOUT( importing EF_NOOUT = ME->S_ADDON_BMAKE_VIS-NOOUT ).

*** Get Number of Ups
    ME->R_PR_ADDON_BMAKE->GET_NOUPS( importing EF_NOUPS = ME->S_ADDON_BMAKE_VIS-NOUPS ).

  endmethod.
