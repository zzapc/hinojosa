
class ZCL_VCXI_P1E_MM_QRY_MMEXT definition
  public
  inheriting from ZCL_VCXI_XCE_MM_QRY_MMEXT
  create public .

public section.

  data:
    I_SABOA type range of ZVCXI_PCSS_SABOA .
  data:
    I_PRBOA type range of ZVCXI_PCSS_PRBOA .
  data:
    I_FLUTE type range of ZVCXI_PCS_FLUTE .

  methods CONSTRUCTOR
    raising
      /VCXI/CX_CKX .

  methods EXECUTE
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_P1E_MM_QRY_MMEXT definition
class ZCL_VCXI_P1E_MM_QRY_MMEXT implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( ).

*** Define relevant Context
    ME->I_CNTXT = value #( ( SIGN = 'I' OPTION = 'EQ' LOW = ZCL_VCXI_P1E_MM_MMEXT=>C_CNTXT_P1 ) ).

  endmethod.
  method EXECUTE.

    data: LF_MATNR   type MATNR.
    data: LS_ORGDATA type ZVCXI_XCA_MWB_S_ORGDATA.
    data: LT_MATNR   type table of MATNR,
          LT_ORGDATA type ZVCXI_XCA_MWB_TT_ORGDATA.
    data: LI_CUOBJ type range of CUOBJ.
    data: LR_CLMAT type ref to ZCL_VCXI_XCA_MWB_CLMAT.


*** Convert Varinat Flag to Range based on Configuration Number
    if ME->I_XLTYP is not initial.
      if ABAP_TRUE in ME->I_XLTYP.
        append value #( SIGN = 'I' OPTION = 'NE' LOW = 0 ) to LI_CUOBJ.
      endif.
      if ABAP_FALSE in ME->I_XLTYP.
        append value #( SIGN = 'I' OPTION = 'EQ' LOW = 0 ) to LI_CUOBJ.
      endif.
    endif.

***------------------------------------------------------------------
*** Select Data from Database
    select ZVCXI_XCE_TD100~MATNR
           from ZVCXI_XCE_TD100
          inner join ZVCXI_P1E_TD100
             on ZVCXI_P1E_TD100~MATNR eq ZVCXI_XCE_TD100~MATNR and
                ZVCXI_P1E_TD100~WERKS eq ZVCXI_XCE_TD100~WERKS
          inner join MARA
             on MARA~MATNR eq ZVCXI_XCE_TD100~MATNR
          inner join MARC
             on MARC~MATNR eq ZVCXI_XCE_TD100~MATNR and
                MARC~WERKS eq ZVCXI_XCE_TD100~WERKS
          inner join MAKT
             on MAKT~MATNR eq MARA~MATNR and
                MAKT~SPRAS eq SY-LANGU
           into table LT_MATNR
           up to ME->F_MAXSEL rows
          where ZVCXI_XCE_TD100~MATNR in ME->I_MATNR
            and ZVCXI_XCE_TD100~WERKS in ME->I_WERKS
            and ZVCXI_XCE_TD100~CNTXT in ME->I_CNTXT
            and ZVCXI_P1E_TD100~SABOA in ME->I_SABOA       "Board ID Sales
            and ZVCXI_P1E_TD100~PRBOA in ME->I_PRBOA       "Board ID Production
            and ZVCXI_P1E_TD100~FLUTE in ME->I_FLUTE       "Flute
            and MARA~MSTAE            in ME->I_MSTAE
            and MAKT~MAKTX            in ME->I_MAKTX
            and MARC~MMSTA            in ME->I_MMSTA
            and MARC~CUOBJ            in LI_CUOBJ
            and MARC~LVORM            ne 'X'
           group by ZVCXI_XCE_TD100~MATNR
           order by ZVCXI_XCE_TD100~MATNR.

***------------------------------------------------------------------
*** Create Material Object List based on Selection Result
    loop at LT_MATNR into LF_MATNR.
***   Get all Organisational Data for a Material
      LT_ORGDATA = ME->GET_ORGDATA( IF_MATNR = LF_MATNR ).

***   Create Material instance for each Org Data
      loop at LT_ORGDATA into LS_ORGDATA.
        append ZCL_VCXI_XCA_MWB_CLMAT=>FACTORY( IR_REGMDL  = ME->R_REGMDL
                                                IF_MATNR   = LF_MATNR
                                                IS_ORGDATA = LS_ORGDATA ) to RT_RESULT.
      endloop.
    endloop.

  endmethod.
endclass. "ZCL_VCXI_P1E_MM_QRY_MMEXT implementation
