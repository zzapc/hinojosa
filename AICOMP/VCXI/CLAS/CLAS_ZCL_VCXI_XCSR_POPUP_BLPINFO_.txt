
class ZCL_VCXI_XCSR_POPUP_BLPINFO definition
  public
  create protected .

public section.

  data S_BLPINFO_VIS type ZVCXI_XCSR_S_BLPINFO_VIS .

  class-methods START
    importing
      !IR_BL_PSTEP type ref to ZCL_VCXI_XCSR_BL_PSTEP
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
protected section.

  data R_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP .
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  data R_GRID_LDIM type ref to ZCL_VCXI_XCSR_GRID_LDIM .
  data R_GRID_LVAL type ref to ZCL_VCXI_XCSR_GRID_LVAL .
  data R_BL_PSTEP type ref to ZCL_VCXI_XCSR_BL_PSTEP .
  constants C_UC_WERKS type SYUCOMM value '0100UC_WERKS'. "#EC NOTEXT
  constants C_UC_ARBPL type SYUCOMM value '0100UC_ARBPL'. "#EC NOTEXT

  methods HANDLE_UC_ARBPL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_WERKS
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_BL_PSTEP type ref to ZCL_VCXI_XCSR_BL_PSTEP
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSR_POPUP_BLPINFO definition
class ZCL_VCXI_XCSR_POPUP_BLPINFO implementation.
method CONSTRUCTOR.

  move IR_BL_PSTEP to ME->R_BL_PSTEP.

*** Create Production Step
  create object ME->R_RTE_PSTEP
    exporting
      IR_PSTEP     = ME->R_BL_PSTEP->R_PSTEP.

*** Add Limits to Routing Production Step
  ME->R_BL_PSTEP->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = ME->R_RTE_PSTEP ).

endmethod.
method DO_FREE.

  if ME->R_GRID_LDIM is bound.
    ME->R_GRID_LDIM->DO_FREE( ).
    clear ME->R_GRID_LDIM.
  endif.

  if ME->R_GRID_LVAL is bound.
    ME->R_GRID_LVAL->DO_FREE( ).
    clear ME->R_GRID_LVAL.
  endif.

endmethod.
method DO_PBO.

***------------------------------------------------------------------
*** Set PF-Status
  set pf-status '0100' of program 'SAPLZVCXI_XCSR_POPUP_BLPINFO'.

***------------------------------------------------------------------
*** Init VIS
  ME->INIT_VIS( ).

***------------------------------------------------------------------
*** BL PStep
  if ME->R_GRID_LDIM is not bound.
*** Create Grid
    create object ME->R_GRID_LDIM
      exporting
        IF_CONTAINER_NAME = '0100CC_LDIM'
        IR_RTE_PSTEP      = ME->R_RTE_PSTEP.
  endif.
*** Refresh
  ME->R_GRID_LDIM->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Routing Definition
  if ME->R_GRID_LVAL is not bound.
*** Create Grid
    create object ME->R_GRID_LVAL
      exporting
        IF_CONTAINER_NAME = '0100CC_LVAL'
        IR_RTE_PSTEP      = ME->R_RTE_PSTEP.
  endif.
*** Refresh
  ME->R_GRID_LVAL->REFRESH_GRID( ).

endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).

    when C_UC_WERKS.
      ME->HANDLE_UC_WERKS( ).

    when C_UC_ARBPL.
      ME->HANDLE_UC_ARBPL( ).

  endcase.

endmethod.
method HANDLE_UC_ARBPL.

  data:          LS_WERKS_ARBPL       type          ZVCXI_XCSR_S_WERKS_ARBPL.
  data:          LT_WERKS_ARBPL       type table of ZVCXI_XCSR_S_WERKS_ARBPL.
  data:          LR_OBJECT            type ref to   /VCXI/IF_CKX_OBJECT,
                 LR_ARBPL             type ref to   /VCXI/CL_VSMC_ARBPL,
                 LR_SALV              type ref to   CL_SALV_TABLE,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.

  try.

***   Get Work Center Filter
      loop at ME->R_RTE_PSTEP->T_ARBPL into LR_OBJECT.
        try.
            move LR_OBJECT ?to LR_ARBPL.
          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_ARBPL.
        endtry.
        check LR_ARBPL is bound.
        LS_WERKS_ARBPL-ARBPL = LR_ARBPL->F_ARBPL.
        LS_WERKS_ARBPL-WERKS = LR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_ID( ).
        append LS_WERKS_ARBPL to LT_WERKS_ARBPL.

      endloop.

***   Call Work Center Filter PopUp
      try.
          call method CL_SALV_TABLE=>FACTORY
            importing
              R_SALV_TABLE = LR_SALV
            changing
              T_TABLE      = LT_WERKS_ARBPL.
        catch CX_SALV_MSG .
          raise exception type /VCXI/CX_CKX.
      endtry.

      LR_SALV->SET_SCREEN_POPUP( START_COLUMN = 10
                                 END_COLUMN   = 40
                                 START_LINE   = 10
                                 END_LINE     = 20 ).

      LR_SALV->DISPLAY( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.


endmethod.
method HANDLE_UC_CANCEL.

  leave to screen 0.

endmethod.
method HANDLE_UC_WERKS.

  data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX.

  try.

***   Call Select Options
      call function 'COMPLEX_SELECTIONS_DIALOG'
        exporting
          TITLE             = 'Show Values'(S01)
          JUST_DISPLAY      = 'X'
        tables
          RANGE             = ME->R_RTE_PSTEP->I_WERKS
        exceptions
          NO_RANGE_TAB      = 1
          CANCELLED         = 2
          INTERNAL_ERROR    = 3
          INVALID_FIELDNAME = 4
          others            = 5.
      if SY-SUBRC ne 0 and
         SY-SUBRC ne 2.
        raise exception type /VCXI/CX_CKX.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.


endmethod.
method INIT_VIS.

  data: LS_WERKS  type        ZVCXI_XCSR_S_RANGE_WERKS.
  data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
        LR_ARBPL  type ref to /VCXI/CL_VSMC_ARBPL.

  clear: ME->S_BLPINFO_VIS.

*** Get Plant Filter
  read table ME->R_RTE_PSTEP->I_WERKS into LS_WERKS index 1.
  move-corresponding LS_WERKS to ME->S_BLPINFO_VIS.

*** Set Selection Button
  if lines( ME->R_RTE_PSTEP->I_WERKS ) le 1.
    move ICON_ENTER_MORE to ME->S_BLPINFO_VIS-BTN_WERKS.
  else.
    move ICON_DISPLAY_MORE to ME->S_BLPINFO_VIS-BTN_WERKS.
  endif.

*** Get Work Center Filter
  read table ME->R_RTE_PSTEP->T_ARBPL into LR_OBJECT index 1.
  if SY-SUBRC = 0.
    try.
        move LR_OBJECT ?to LR_ARBPL.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_ARBPL.
    endtry.
    if LR_ARBPL is bound.
      ME->S_BLPINFO_VIS-ARBPL = LR_ARBPL->F_ARBPL.
      ME->S_BLPINFO_VIS-WERKS = LR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_ID( ).
    endif.
  endif.

*** Set Selection Button
  if lines( ME->R_RTE_PSTEP->T_ARBPL ) le 1.
    move ICON_ENTER_MORE to ME->S_BLPINFO_VIS-BTN_ARBPL.
  else.
    move ICON_DISPLAY_MORE to ME->S_BLPINFO_VIS-BTN_ARBPL.
  endif.

endmethod.
method START.

  data:  LR_POPUP_BLPINFO type ref to ZCL_VCXI_XCSR_POPUP_BLPINFO.

*** Create Instance
  create object LR_POPUP_BLPINFO
    exporting
      IR_BL_PSTEP = IR_BL_PSTEP.

*** Call Popup
  call function 'ZVCXI_XCSR_POPUP_BLPINFO_START'
    exporting
      IR_POPUP_BLPINFO = LR_POPUP_BLPINFO.

*** Free the Popup
  LR_POPUP_BLPINFO->DO_FREE( ).

endmethod.
