
class ZCL_VCXI_PCSP_PR_ADDON_CORR definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .
  interfaces ZIF_VCXI_P0SP_CONV_ATP .
  interfaces ZIF_VCXI_P0SP_CONV_LTP .
  interfaces ZIF_VCXI_PCSP_ADJ_FLUTE .

  constants C_IAATY_BOARD type /VCXI/VSMC_IAATY value 'PC_AA_BOARD' ##NO_TEXT.
  constants C_IAATY_FLUTE type /VCXI/VSMC_IAATY value 'PC_AA_FLUTE' ##NO_TEXT.
  constants C_PARID_BOARD type /VCXI/VKS_PARID value 'ZVCXI_PC_BOARD' ##NO_TEXT.
  constants C_PARID_COLEN type /VCXI/VKS_PARID value 'ZVCXI_PC_COLEN' ##NO_TEXT.
  constants C_PARID_COWID type /VCXI/VKS_PARID value 'ZVCXI_PC_COWID' ##NO_TEXT.
  constants C_PARID_FLUTE type /VCXI/VKS_PARID value 'ZVCXI_PC_FLUTE' ##NO_TEXT.
  constants C_PARID_PCDIR type /VCXI/VKS_PARID value 'ZVCXI_P0_PCDIR' ##NO_TEXT.
  constants C_PARID_PCHEI type /VCXI/VKS_PARID value 'ZVCXI_P0_PCHEI' ##NO_TEXT.
  constants C_PARID_PCLEN type /VCXI/VKS_PARID value 'ZVCXI_P0_PCLEN' ##NO_TEXT.
  constants C_PARID_PCTYP type /VCXI/VKS_PARID value 'ZVCXI_P0_PCTYP' ##NO_TEXT.
  constants C_PARID_PCUPS type /VCXI/VKS_PARID value 'ZVCXI_P0_PCUPS' ##NO_TEXT.
  constants C_PARID_PCWID type /VCXI/VKS_PARID value 'ZVCXI_P0_PCWID' ##NO_TEXT.

  methods GET_BOARD
    returning
      value(RF_BOARD) type ZVCXI_PCS_BOARD
    raising
      /VCXI/CX_CKX .
  methods GET_COLEN
    returning
      value(RS_COLEN) type ZVCXI_PCS_S_COLEN
    raising
      /VCXI/CX_CKX .
  methods GET_COWID
    returning
      value(RS_COWID) type ZVCXI_PCS_S_COWID
    raising
      /VCXI/CX_CKX .
  methods GET_FLUTE
    returning
      value(RF_FLUTE) type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .
  methods GET_PCDIR
    returning
      value(RF_PCDIR) type ZVCXI_P0SP_PCDIR
    raising
      /VCXI/CX_CKX .
  methods GET_PCHEI
    returning
      value(RS_PCHEI) type ZVCXI_P0SP_S_PCHEI
    raising
      /VCXI/CX_CKX .
  methods GET_PCLEN
    returning
      value(RS_PCLEN) type ZVCXI_P0SP_S_PCLEN
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP
    returning
      value(RF_PCTYP) type ZVCXI_P0SP_PCTYP
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_PCUPS
    returning
      value(RF_PCUPS) type ZVCXI_P0SP_PCUPS
    raising
      /VCXI/CX_CKX .
  methods GET_PCWID
    returning
      value(RS_PCWID) type ZVCXI_P0SP_S_PCWID
    raising
      /VCXI/CX_CKX .
  methods SET_BOARD
    importing
      !IF_BOARD type ZVCXI_PCS_BOARD
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_COLEN
    importing
      !IS_COLEN type ZVCXI_PCS_S_COLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_COWID
    importing
      !IS_COWID type ZVCXI_PCS_S_COWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FLUTE
    importing
      !IF_FLUTE type ZVCXI_PCS_FLUTE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCDIR
    importing
      !IF_PCDIR type ZVCXI_P0SP_PCDIR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCHEI
    importing
      !IS_PCHEI type ZVCXI_P0SP_S_PCHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCLEN
    importing
      !IS_PCLEN type ZVCXI_P0SP_S_PCLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCTYP
    importing
      !IF_PCTYP type ZVCXI_P0SP_PCTYP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCUPS
    importing
      !IF_PCUPS type ZVCXI_P0SP_PCUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCWID
    importing
      !IS_PCWID type ZVCXI_P0SP_S_PCWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_BOARD_CHANGED type /VCXI/VKSC_IEVNT value 'BOARD_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_FLUTE_CHANGED type /VCXI/VKSC_IEVNT value 'FLUTE_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_MQTY_CONV_CHANGED type /VCXI/VKSC_IEVNT value 'MQTY_CONV_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED' ##NO_TEXT.

  methods CHECK_PCDIM
    importing
      value(IR_MESSAGE) type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_MC_CONSU
    raising
      /VCXI/CX_CKX .

  methods GET_RTE_SAVAL
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSP_PR_ADDON_CORR definition
class ZCL_VCXI_PCSP_PR_ADDON_CORR implementation.
  method CHECK_PCDIM.

***----------------------------------------------------------------------------
*** Check PC Length (if Corrugation Length is not defined)
    if ME->GET_COLEN( )-COLEN is initial.
      if ME->GET_PCLEN( )-PCLEN is not initial.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
        if IR_MESSAGE is bound.
***       PC Length is maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                   IF_MSGTY = 'S'
                                   IF_MSGNO = '001' ).
        endif.
      else.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
        if IR_MESSAGE is bound.
***       PC Length is not maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '002' ).
        endif.
      endif.
    endif.

***----------------------------------------------------------------------------
*** Check PC Width
    if ME->GET_PCWID( )-PCWID is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      if IR_MESSAGE is bound.
***     PC Width is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '003' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
      if IR_MESSAGE is bound.
***     PC Width is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '004' ).
      endif.
    endif.

***----------------------------------------------------------------------------
*** Check PC Height
    if ME->GET_PCHEI( )-PCHEI is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      if IR_MESSAGE is bound.
***     PC Height is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '005' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
      if IR_MESSAGE is bound.
***     PC Height is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '006' ).
      endif.
    endif.

***----------------------------------------------------------------------------
*** Check PC Ups
    if ME->GET_PCUPS( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      if IR_MESSAGE is bound.
***     PC Ups is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '007' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
      if IR_MESSAGE is bound.
***     PC Ups is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '008' ).
      endif.
    endif.

  endmethod.
method GET_BOARD.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BOARD ).
  move LS_PARAM-ATWRT to RF_BOARD.

endmethod.
method GET_COLEN.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COLEN ).
  move LS_PARAM-ATFLV to RS_COLEN-COLEN.
  move LS_PARAM-UNIT  to RS_COLEN-COLEN_UOM.

endmethod.
method GET_COWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COWID ).
  move LS_PARAM-ATFLV to RS_COWID-COWID.
  move LS_PARAM-UNIT  to RS_COWID-COWID_UOM.

endmethod.
method GET_FLUTE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).
  move LS_PARAM-ATWRT to RF_FLUTE.

endmethod.
method GET_PCDIR.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCDIR ).
  move LS_PARAM-ATWRT to RF_PCDIR.

endmethod.
method GET_PCHEI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).
  move LS_PARAM-ATFLV to RS_PCHEI-PCHEI.
  move LS_PARAM-UNIT  to RS_PCHEI-PCHEI_UOM.

endmethod.
method GET_PCLEN.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).
  move LS_PARAM-ATFLV to RS_PCLEN-PCLEN.
  move LS_PARAM-UNIT  to RS_PCLEN-PCLEN_UOM.

endmethod.
method GET_PCTYP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).
  move LS_PARAM-ATWRT to RF_PCTYP.

endmethod.
method GET_PCTYP_DESCR.

  data: LF_PCTYP type ZVCXI_P0SP_PCTYP.

  LF_PCTYP = ME->GET_PCTYP( ).
  RF_DESCR = ZCL_VCXI_P0SP_CUST_PCTYP=>GET_PCTYP_DESCR( IF_PCTYP = LF_PCTYP ).

endmethod.
method GET_PCUPS.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).
  move LS_PARAM-ATFLV to RF_PCUPS.

endmethod.
method GET_PCWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
  move LS_PARAM-ATFLV to RS_PCWID-PCWID.
  move LS_PARAM-UNIT  to RS_PCWID-PCWID_UOM.

endmethod.
method GET_RTE_SAVAL.

  data:          LF_GAATY      type /VCXI/VSMC_GAATY.
  field-symbols: <S_RTE_SAVAL> type /VCXI/VSMR_S_RTE_SAVAL,
                 <S_AVVAL>     type /VCXI/VSMR_S_RTE_RANGE_AVVAL.

*** Get Super
  RT_RTE_SAVAL = SUPER->GET_RTE_SAVAL( ).

  check ME->R_RTE_CADDON          is bound and
        ME->R_RTE_CADDON->R_ATYPE is bound.

*** Aspect - Rate Reduction by Board ID
  try.
      LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_BOARD
                                                                IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
      append initial line to RT_RTE_SAVAL assigning <S_RTE_SAVAL>.
      move LF_GAATY to <S_RTE_SAVAL>-GAATY.
      append initial line to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
      move 'I'              to <S_AVVAL>-SIGN.
      move 'EQ'             to <S_AVVAL>-OPTION.
      move ME->GET_BOARD( ) to <S_AVVAL>-LOW.
    catch /VCXI/CX_CKX.
  endtry.

*** Aspect - Rate Reduction by Flute
  try.
      LF_GAATY = ME->R_RTE_CADDON->R_ATYPE->GET_GAATY_BY_IAATY( IF_IAATY = C_IAATY_FLUTE
                                                                IF_MAATY = /VCXI/CL_VSMC_ATYPE=>C_MAATY_VALUE ).
      append initial line to RT_RTE_SAVAL assigning <S_RTE_SAVAL>.
      move LF_GAATY to <S_RTE_SAVAL>-GAATY.
      append initial line to <S_RTE_SAVAL>-I_AVVAL assigning <S_AVVAL>.
      move 'I'              to <S_AVVAL>-SIGN.
      move 'EQ'             to <S_AVVAL>-OPTION.
      move ME->GET_FLUTE( ) to <S_AVVAL>-LOW.
    catch /VCXI/CX_CKX.
  endtry.

endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check PC Dimension
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_PCDIM( ) ).

***--------------------------------------------------------------------------------------
*** Check BoardID
    if ME->GET_BOARD( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

*** Check Flute Type
    if ME->GET_FLUTE( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check PC Dimensions
    ME->CHECK_PCDIM( IR_MESSAGE = IR_MESSAGE ).


***------------------------------------------------------------------
*** Check BoardID and Flute Type
*** Check BoardID
    if ME->GET_BOARD( ) is not initial.
***   BoardID is maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '001' ).
    else.
***   BoardID is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '002' ).
    endif.

*** Check Flute Type
    if ME->GET_FLUTE( ) is not initial.
***   Flute Type is maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                               IF_MSGTY = 'S'
                               IF_MSGNO = '003' ).
    else.
***   Flute Type is not maintained.
      IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '004' ).
    endif.

  endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_RECALC_MC_CONSU.
      ME->HANDLE_RECALC_MC_CONSU( ).
  endcase.

endmethod.
method HANDLE_RECALC_MC_CONSU.

  data:  LF_DIMID           type        DIMID.
  data:  LS_MQTYI           type        ZVCXI_XCSP_S_MQTYI,
         LS_COWID           type        ZVCXI_PCS_S_COWID.
  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_MACHINE      type ref to ZCL_VCXI_XCSP_PR_MACHINE,
         LR_PR_MC           type ref to ZCL_VCXI_XCSP_PR_MC.

***------------------------------------------------------------------
*** Get all Machine Quantity
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC = 0.

    clear: LR_PR_MACHINE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MACHINE.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MACHINE.
    endtry.
    if LR_PR_MACHINE is bound.
      move LR_PR_MACHINE->GET_MQTYI( ) to LS_MQTYI.

***   Get Dimensions of Unit
      call function 'DIMENSION_GET_FOR_UNIT'
        exporting
          UNIT           = LS_MQTYI-MQTYI_UOM
        importing
          DIMENSION      = LF_DIMID
        exceptions
          UNIT_NOT_FOUND = 1
          others         = 2.
      if SY-SUBRC <> 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

***   if it is not already a "Area" -> Multiply with Corrugation Width
      if LF_DIMID eq 'LENGTH'.
        LS_COWID = ME->GET_COWID( ).
***     Get Right Area Dimension
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_MQTYI-MQTYI
                                                            IF_CALCV_UOM_1 = LS_MQTYI-MQTYI_UOM
                                                            IF_CALCV_2     = LS_COWID-COWID
                                                            IF_CALCV_UOM_2 = LS_COWID-COWID_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                  importing EF_CALCV       = LS_MQTYI-MQTYI
                                                            EF_CALCV_UOM   = LS_MQTYI-MQTYI_UOM ).

      elseif LF_DIMID eq 'SURFAC'.
***     Everything is fine
      else.
***     Can't work
        exit.
      endif.
    endif.

  endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions
  loop at LT_GATE into LR_GATE.
    try.

        clear: LR_PR_MC.
        move LR_GATE->R_CLSPR ?to LR_PR_MC.
        check LR_PR_MC is bound.
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

  endloop.

endmethod.
method SET_BOARD.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BOARD ).

  move IF_BOARD to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BOARD_CHANGED ).
  endif.

endmethod.
method SET_COLEN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COLEN ).

  move IS_COLEN-COLEN     to LS_PARAM-ATFLV.
  move IS_COLEN-COLEN_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MQTY_CONV_CHANGED ).
  endif.

endmethod.
method SET_COWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COWID ).

  move IS_COWID-COWID     to LS_PARAM-ATFLV.
  move IS_COWID-COWID_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MQTY_CONV_CHANGED ).
  endif.

endmethod.
method SET_FLUTE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).

  move IF_FLUTE to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FLUTE_CHANGED ).
  endif.

endmethod.
method SET_PCDIR.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCDIR ).

  move IF_PCDIR to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCHEI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).

  move IS_PCHEI-PCHEI     to LS_PARAM-ATFLV.
  move IS_PCHEI-PCHEI_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCLEN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).

  move IS_PCLEN-PCLEN     to LS_PARAM-ATFLV.
  move IS_PCLEN-PCLEN_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MQTY_CONV_CHANGED ).
  endif.

endmethod.
method SET_PCTYP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).

  move IF_PCTYP to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCUPS.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCUPS ).

  move IF_PCUPS to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MQTY_CONV_CHANGED ).
  endif.

endmethod.
method SET_PCWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

  move IS_PCWID-PCWID     to LS_PARAM-ATFLV.
  move IS_PCWID-PCWID_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MQTY_CONV_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

  data:          LS_PCLEN    type ZVCXI_P0SP_S_PCLEN,
                 LS_PCWID    type ZVCXI_P0SP_S_PCWID,
                 LS_PCHEI    type ZVCXI_P0SP_S_PCHEI.
  field-symbols: <S_PCDIM>   type ZVCXI_P0SP_S_PCDIM.

***------------------------------------------------------------------
*** Add new PC Dimension
  append initial line to CT_PCDIM assigning <S_PCDIM>.

*** PC Type
  move ME->GET_PCTYP( )       to <S_PCDIM>-PCTYP.

*** PC Length
  move ME->GET_PCLEN( ) to LS_PCLEN.
  move-corresponding LS_PCLEN to <S_PCDIM>.

*** PC Width
  move ME->GET_PCWID( ) to LS_PCWID.
  move-corresponding LS_PCWID to <S_PCDIM>.

*** PC Height
  move ME->GET_PCHEI( ) to LS_PCHEI.
  move-corresponding LS_PCHEI to <S_PCDIM>.

*** PC Ups
  move ME->GET_PCUPS( )       to <S_PCDIM>-PCUPS.

*** Number of Outs
  move 1                      to <S_PCDIM>-NOOUT.

*** PC Direction
  move ME->GET_PCDIR( )       to <S_PCDIM>-PCDIR.

endmethod.
  method ZIF_VCXI_P0SP_CONV_ATP~CONV_AREA_TO_PC.

    data: LF_NOUPW type F.
    data: LF_PCUPS type ZVCXI_P0SP_PCUPS,
          LF_PCDIR type ZVCXI_P0SP_PCDIR,
          LF_PCTYP type ZVCXI_P0SP_PCTYP.
    data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
          LS_PCWID type ZVCXI_P0SP_S_PCWID,
          LS_PCHEI type ZVCXI_P0SP_S_PCHEI,
          LS_COWID type ZVCXI_PCS_S_COWID,
          LS_COLEN type ZVCXI_PCS_S_COLEN.
    field-symbols: <S_PCDIM>    type ZVCXI_P0SP_S_PCDIM.


***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
    LS_PCLEN = ME->GET_PCLEN( ).
    LS_PCWID = ME->GET_PCWID( ).
    LS_PCHEI = ME->GET_PCHEI( ).
    LF_PCUPS = ME->GET_PCUPS( ).
    LF_PCDIR = ME->GET_PCDIR( ).
    LF_PCTYP = ME->GET_PCTYP( ).

*** Get Corrugation Width/Length
    LS_COWID = ME->GET_COWID( ).
    LS_COLEN = ME->GET_COLEN( ).

*** Use Corrugation Length as PC Length
    if LS_COLEN-COLEN is not initial.
      LS_PCLEN = value #( PCLEN     = LS_COLEN-COLEN
                          PCLEN_UOM = LS_COLEN-COLEN_UOM ).
    endif.

***------------------------------------------------------------------------------------------------
    if LS_COWID-COWID is initial.
      append initial line to RT_PCDIM assigning <S_PCDIM>.
      <S_PCDIM>-S_PCLEN = LS_PCLEN.
      <S_PCDIM>-S_PCWID = LS_PCWID.
      <S_PCDIM>-S_PCHEI = LS_PCHEI.
      <S_PCDIM>-PCUPS   = LF_PCUPS.
      <S_PCDIM>-PCDIR   = LF_PCDIR.
      <S_PCDIM>-PCTYP   = LF_PCTYP.

***------------------------------------------------------------------------------------------------
    else.
      check LS_PCWID-PCWID is not initial.

***   Check how many times the Sheet fits in the Corrugation Width
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_COWID-COWID
                                                          IF_CALCV_UOM_1 = LS_COWID-COWID_UOM
                                                          IF_CALCV_2     = LS_PCWID-PCWID
                                                          IF_CALCV_UOM_2 = LS_PCWID-PCWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LF_NOUPW ).

***   Corrugation Width is new Width
      move LS_COWID-COWID     to LS_PCWID-PCWID.
      move LS_COWID-COWID_UOM to LS_PCWID-PCWID_UOM.

***   With corresponding Ups
      LF_PCUPS = LF_PCUPS * FLOOR( LF_NOUPW ).

      append initial line to RT_PCDIM assigning <S_PCDIM>.
      move-corresponding LS_PCLEN to <S_PCDIM>.
      move-corresponding LS_PCWID to <S_PCDIM>.
      move-corresponding LS_PCHEI to <S_PCDIM>.
      move               LF_PCUPS to <S_PCDIM>-PCUPS.
      move               LF_PCDIR to <S_PCDIM>-PCDIR.
      move               LF_PCTYP to <S_PCDIM>-PCTYP.

    endif.

  endmethod.
  method ZIF_VCXI_P0SP_CONV_ATP~CONV_PC_TO_AREA.

    data: LF_NOUPW     type F.
    data: LF_PCUPS type ZVCXI_P0SP_PCUPS,
          LF_PCTYP type ZVCXI_P0SP_PCTYP.
    data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
          LS_PCWID type ZVCXI_P0SP_S_PCWID,
          LS_COWID type ZVCXI_PCS_S_COWID,
          LS_COLEN type ZVCXI_PCS_S_COLEN,
          LS_PCARE type ZVCXI_P0SP_S_PCARE.
    field-symbols: <S_AREADIM>  type ZVCXI_P0SP_S_AREADIM.


***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
    LS_PCLEN = ME->GET_PCLEN( ).
    LS_PCWID = ME->GET_PCWID( ).
    LF_PCUPS = ME->GET_PCUPS( ).
    LF_PCTYP = ME->GET_PCTYP( ).


*** Get Corrugation Width/Length
    LS_COWID = ME->GET_COWID( ).
    LS_COLEN = ME->GET_COLEN( ).

*** Use PC Length as Corrugation Length
    if LS_COLEN-COLEN is initial.
      LS_COLEN = value #( COLEN     = LS_PCLEN-PCLEN
                          COLEN_UOM = LS_PCLEN-PCLEN_UOM ).
    endif.

***------------------------------------------------------------------------------------------------
    if LS_COWID-COWID is initial.
***   Calculate Single Sheet Area
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_COLEN-COLEN
                                                          IF_CALCV_UOM_1 = LS_COLEN-COLEN_UOM
                                                          IF_CALCV_2     = LS_PCWID-PCWID
                                                          IF_CALCV_UOM_2 = LS_PCWID-PCWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = LS_PCARE-PCARE
                                                          EF_CALCV_UOM   = LS_PCARE-PCARE_UOM ).

      append initial line to RT_AREADIM assigning <S_AREADIM>.
      move-corresponding LS_PCARE to <S_AREADIM>.
      move               LF_PCUPS to <S_AREADIM>-PCUPS.
      move               LF_PCTYP to <S_AREADIM>-PCTYP.


***------------------------------------------------------------------------------------------------
    else.
      check LS_PCWID-PCWID is not initial.

***   Check how many times the Sheet fits in the Corrugation Width
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_COWID-COWID
                                                          IF_CALCV_UOM_1 = LS_COWID-COWID_UOM
                                                          IF_CALCV_2     = LS_PCWID-PCWID
                                                          IF_CALCV_UOM_2 = LS_PCWID-PCWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LF_NOUPW ).

***   Calculate Corrugation Area (Multi-Sheet + Siderun)
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_COLEN-COLEN
                                                          IF_CALCV_UOM_1 = LS_COLEN-COLEN_UOM
                                                          IF_CALCV_2     = LS_COWID-COWID
                                                          IF_CALCV_UOM_2 = LS_COWID-COWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = LS_PCARE-PCARE
                                                          EF_CALCV_UOM   = LS_PCARE-PCARE_UOM ).

      append initial line to RT_AREADIM assigning <S_AREADIM>.
      move-corresponding LS_PCARE to <S_AREADIM>.
      <S_AREADIM>-PCUPS = LF_PCUPS * FLOOR( LF_NOUPW ).

    endif.

  endmethod.
method ZIF_VCXI_P0SP_CONV_LTP~CONV_LENGTH_TO_PC.

  data:          LF_PCUPS     type ZVCXI_P0SP_PCUPS,
                 LF_PCDIR     type ZVCXI_P0SP_PCDIR,
                 LF_PCTYP     type ZVCXI_P0SP_PCTYP.
  data:          LS_PCLEN     type ZVCXI_P0SP_S_PCLEN,
                 LS_PCWID     type ZVCXI_P0SP_S_PCWID,
                 LS_PCHEI     type ZVCXI_P0SP_S_PCHEI.
  field-symbols: <S_PCDIM>    type ZVCXI_P0SP_S_PCDIM.

***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).
  LF_PCUPS = ME->GET_PCUPS( ).
  LF_PCDIR = ME->GET_PCDIR( ).
  LF_PCTYP = ME->GET_PCTYP( ).


***------------------------------------------------------------------------------------------------
  append initial line to RT_PCDIM assigning <S_PCDIM>.
  move-corresponding LS_PCLEN to <S_PCDIM>.
  move-corresponding LS_PCWID to <S_PCDIM>.
  move-corresponding LS_PCHEI to <S_PCDIM>.
  move               LF_PCUPS to <S_PCDIM>-PCUPS.
  move               LF_PCDIR to <S_PCDIM>-PCDIR.
  move               LF_PCTYP to <S_PCDIM>-PCTYP.

endmethod.
method ZIF_VCXI_P0SP_CONV_LTP~CONV_PC_TO_LENGTH.

  data:          LF_PCUPS     type ZVCXI_P0SP_PCUPS,
                 LF_PCDIR     type ZVCXI_P0SP_PCDIR,
                 LF_PCTYP     type ZVCXI_P0SP_PCTYP.
  data:          LS_PCLEN     type ZVCXI_P0SP_S_PCLEN,
                 LS_PCWID     type ZVCXI_P0SP_S_PCWID,
                 LS_PCHEI     type ZVCXI_P0SP_S_PCHEI.
  field-symbols: <S_PCDIM>    type ZVCXI_P0SP_S_PCDIM.

***------------------------------------------------------------------------------------------------
*** Get PC Dimensions
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).
  LF_PCUPS = ME->GET_PCUPS( ).
  LF_PCDIR = ME->GET_PCDIR( ).
  LF_PCTYP = ME->GET_PCTYP( ).


***------------------------------------------------------------------------------------------------
  append initial line to RT_PCDIM assigning <S_PCDIM>.
  move-corresponding LS_PCLEN to <S_PCDIM>.
  move-corresponding LS_PCWID to <S_PCDIM>.
  move-corresponding LS_PCHEI to <S_PCDIM>.
  move               LF_PCUPS to <S_PCDIM>-PCUPS.
  move               LF_PCDIR to <S_PCDIM>-PCDIR.
  move               LF_PCTYP to <S_PCDIM>-PCTYP.

endmethod.
method ZIF_VCXI_PCSP_ADJ_FLUTE~ADJ_FLUTE.

  CF_FLUTE = ME->GET_FLUTE( ).

endmethod.
