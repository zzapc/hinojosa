
class ZCL_VCXI_P1SS_UI_MS_WAX definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_WAX_VIS type ZVCXI_P1SS_S_MS_WAX_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_MS_WAX type ref to ZCL_VCXI_P1SS_PR_MS_WAX .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_MS_WAX definition
class ZCL_VCXI_P1SS_UI_MS_WAX implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_MS_WAX_BIND'
      exporting
        IR_UI_MS_WAX = ME
      importing
        ES_DYNP      = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_WAX.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.

***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.

        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize VIS
    ME->INIT_VIS( ).

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MS_WAX.

  endmethod.
  method INIT_VIS.

    free: ME->S_MS_WAX_VIS.
    check ME->R_PR_MS_WAX is bound.

***--------------------------------------------------------------------------------------
*** Material
    move ME->R_PR_MS_WAX->GET_MATNR( )                 to ME->S_MS_WAX_VIS-MATNR.
    move ME->R_PR_MS_WAX->GET_MATNR_DESCR( )           to ME->S_MS_WAX_VIS-MATNR_DESCR.

*** Wax Code
    ME->S_MS_WAX_VIS-WAXCO = ME->R_PR_MS_WAX->GET_WAXCO( importing EF_DESCR = ME->S_MS_WAX_VIS-WAXCO_DESCR ).

*** Wax Factor
    ME->S_MS_WAX_VIS-WAXFA = ME->R_PR_MS_WAX->GET_WAXFA( ).

***--------------------------------------------------------------------------------------
*** Average Consumption
    ME->S_MS_WAX_VIS-S_AVGCO = ME->R_PR_MS_WAX->GET_AVGCO( ).

*** Average Consumption per
    ME->S_MS_WAX_VIS-S_AVGCP = ME->R_PR_MS_WAX->GET_AVGCP( ).

*** Solid Content
    ME->S_MS_WAX_VIS-S_SLDCO = ME->R_PR_MS_WAX->GET_SLDCO( ).

  endmethod.
