
class ZCL_VCXI_FRS_EA_INGR_EXTR definition
  public
  inheriting from ZCL_VCXI_FRS_EA_INGR
  create public .

public section.
protected section.

  methods GET_BOM_CONSU
    redefinition .
private section.
endclass. "ZCL_VCXI_FRS_EA_INGR_EXTR definition
class ZCL_VCXI_FRS_EA_INGR_EXTR implementation.
  method GET_BOM_CONSU.

    data: LF_LRFAC type        ZVCXI_FRS_LRFAC,
          LF_VRFAC type        ZVCXI_FRS_VRFAC,
          LF_SYSOM type        /VCXI/VKS_SYSOM,
          LF_UOM   type        /VCXI/CKX_UOM.
    data: LS_INRAT type        ZVCXI_FRS_S_INRAT,
          LS_CALCV type        ZVCXI_XCS_S_CALCV.
    data: LT_GATE_LAYER type        /VCXI/VKSR_TT_GATE,
          LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE_LAYER   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_LAYER     type ref to ZCL_VCXI_FRS_PR_LAYER_EXTR,
          LR_GATE_VERS    type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_VERS_EXTR type ref to ZCL_VCXI_FRS_PR_VERS_EXTR,
          LR_PARAM        type ref to /VCXI/CL_VKSC_PARAM.

***--------------------------------------------------------------------------------------
*** Find Provider Layer for this Ingredient
    LT_GATE_LAYER = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_FRS_PR_LAYER_EXTR=>C_IPRVT_LAYER_EXTR
                                           IF_INUSE  = ABAP_TRUE
                                           IF_SORTED = ABAP_TRUE ).
    check LT_GATE_LAYER is not initial.

    read table LT_GATE_LAYER into LR_GATE_LAYER index 1.
    check SY-SUBRC eq 0.

    try.
        move LR_GATE_LAYER->R_CLSPR ?to LR_PR_LAYER.
      catch CX_SY_MOVE_CAST_ERROR.
        return.
    endtry.

    check LR_PR_LAYER is bound.

*** Get Layer percentage
    LF_LRFAC = LR_PR_LAYER->GET_LRFAC( ).

*** Get Version Percentage
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FRS_PR_VERS_EXTR=>C_IPRVT_VERS_EXTR
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into LR_GATE_VERS index 1.
    check LR_GATE_VERS is bound.
    try.
        move LR_GATE_VERS->R_CLSPR ?to LR_PR_VERS_EXTR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_VERS_EXTR.
    endtry.
    check LR_PR_VERS_EXTR is bound.
    LF_VRFAC = LR_PR_VERS_EXTR->GET_VRFAC( ).

***--------------------------------------------------------------------------------------
*** Calculate Quantity
*** Requirement Qty / 100 * (Layer Thickness/(Overall Thickness/100)) / 100 * Material Ratio

*** Calculate Layer Quantity ( Base Quantity / 100 )
    LS_CALCV-CALCV = IF_BMENG / 100.

*** Correction with Layer Density Factor
    LS_CALCV-CALCV = LS_CALCV-CALCV * LF_LRFAC / LF_VRFAC * 100.

*** Get Ingredient Ratio
    ME->R_PR_INGR->GET_INRAT( importing ES_INRAT = LS_INRAT ).

*** Calculate based on Ingredient Ratio
    RS_CONSU-CONSU = ( LS_CALCV-CALCV / 100 ) * LS_INRAT-INRAT.
    move IF_BMEIN to RS_CONSU-CONSU_UOM.

***--------------------------------------------------------------------------------------
*** Get Unit by definition of Consumption Parameter
    LR_PARAM ?= /VCXI/CL_VKSC_PARAM=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = 'ZVCXI_XC_CONSU_W' ).
    ME->R_GATE->GET_CONFIG_INFO( importing EF_SYSOM = LF_SYSOM ).
    case LF_SYSOM.
      when /VCXI/CL_VKSR_RUNTIME=>C_SYSOM_METRIC.
        move LR_PARAM->F_UOMKY_M to LF_UOM.
      when /VCXI/CL_VKSR_RUNTIME=>C_SYSOM_IMPERIAL.
        move LR_PARAM->F_UOMKY_I to LF_UOM.
    endcase.

*** Convert to identified Unit
    ZCL_VCXI_XCS_SERVICE_UNIT=>CONVERT_UNIT( exporting IF_VALUE_IN  = RS_CONSU-CONSU
                                                       IF_UOM_IN    = RS_CONSU-CONSU_UOM
                                                       IF_UOM_OUT   = LF_UOM
                                             importing EF_VALUE_OUT = RS_CONSU-CONSU
                                                       EF_UOM_OUT   = RS_CONSU-CONSU_UOM ).

  endmethod.
endclass. "ZCL_VCXI_FRS_EA_INGR_EXTR definition
endclass. "ZCL_VCXI_FRS_EA_INGR_EXTR implementation
