
class ZCL_VCXI_P4SS_EA_SPLR definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  methods GET_PSCALE
    returning
      value(RT_PSCALE) type ZVCXI_XCS_TT_PSCALE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_BSTME
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_BSTME) type BSTME
    raising
      /VCXI/CX_CKX .
  methods GET_IDNLF
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_IDNLF) type IDNLF
    raising
      /VCXI/CX_CKX .
  methods GET_PURCH
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_PURCH) type ZVCXI_XCS_PURCH
    raising
      /VCXI/CX_CKX .
  methods GET_LIFNR
    exporting
      !EF_NAME1 type NAME1_GP
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_LIFNR) type LIFNR
    raising
      /VCXI/CX_CKX .
  methods GET_UMBS
    exporting
      !EF_UMBSZ type UMBSZ
      !EF_UMBSZ_UOM type /VCXI/CKX_UOM
      !EF_UMBSN type UMBSN
      !EF_UMBSN_UOM type /VCXI/CKX_UOM
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_SPLR type ref to ZCL_VCXI_P4SS_PR_SPLR .
private section.
endclass. "ZCL_VCXI_P4SS_EA_SPLR definition
class ZCL_VCXI_P4SS_EA_SPLR implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_SPLR.
      catch CX_SY_MOVE_CAST_ERROR.
***     Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
  method GET_BSTME.

    check ME->R_PR_SPLR is bound.
    RF_BSTME = ME->R_PR_SPLR->GET_BSTME( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_IDNLF.

    check ME->R_PR_SPLR is bound.
    RF_IDNLF = ME->R_PR_SPLR->GET_IDNLF( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_LIFNR.

    check ME->R_PR_SPLR is bound.

    if EF_NAME1 is requested.
      RF_LIFNR = ME->R_PR_SPLR->GET_LIFNR( importing EF_SETBY = EF_SETBY
                                                     EF_NAME1 = EF_NAME1 ).
    else.
      RF_LIFNR = ME->R_PR_SPLR->GET_LIFNR( importing EF_SETBY = EF_SETBY ).
    endif.

  endmethod.
  method GET_PSCALE.

    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PSCALE type ref to ZCL_VCXI_XCS_PR_PSCALE.


    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ) into LR_GATE.
      LR_PR_PSCALE ?= LR_GATE->R_CLSPR.
      append value #( S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                      S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                      S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                    ) to RT_PSCALE.
    endloop.

  endmethod.
  method GET_PURCH.

    check ME->R_PR_SPLR is bound.
    RF_PURCH = ME->R_PR_SPLR->GET_PURCH( importing EF_SETBY = EF_SETBY ).

  endmethod.
  method GET_UMBS.

    clear: EF_UMBSZ, EF_UMBSZ_UOM,
           EF_UMBSN, EF_UMBSN_UOM.

    check ME->R_PR_SPLR is bound.
    EF_UMBSZ = ME->R_PR_SPLR->GET_UMBSZ( importing EF_UMBSZ_UOM = EF_UMBSZ_UOM ).
    EF_UMBSN = ME->R_PR_SPLR->GET_UMBSN( importing EF_UMBSN_UOM = EF_UMBSN_UOM ).

  endmethod.
