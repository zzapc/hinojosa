
class ZCL_VCXI_XCSP_EA_MFMO definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  interfaces /VCXI/IF_VKCR_EXPL_BOM .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_MFMO type ref to ZCL_VCXI_XCSP_PR_MFMO .

  methods GET_BOM_CONSU
    importing
      !IS_EXQTY type /VCXI/VKCR_S_EXQTY
      !IF_BMENG type BASMN
      !IF_BMEIN type BASME
    returning
      value(RS_CONSU) type ZVCXI_XCSP_S_CONSU
    raising
      /VCXI/CX_CKX .
  methods GET_EXQTY
    returning
      value(RS_EXQTY) type /VCXI/VKCR_S_EXQTY
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSP_EA_MFMO definition
class ZCL_VCXI_XCSP_EA_MFMO implementation.
method /VCXI/IF_VKCR_EXPL_BOM~FILTER_CPBRG.
endmethod.
method /VCXI/IF_VKCR_EXPL_BOM~GET_BOM.

  data:  LS_EXQTY     type /VCXI/VKCR_S_EXQTY,
         LS_CONSU     type ZVCXI_XCSP_S_CONSU.

  if IS_EXQTY is supplied.
    move IS_EXQTY         to LS_EXQTY.
  else.
    move ME->GET_EXQTY( ) to LS_EXQTY.
  endif.

*** Material Number
  move ME->R_PR_MFMO->GET_MATNR( )     to RS_EXBOM-IDNRK.
  move ABAP_TRUE                       to RS_EXBOM-IDNRK_X.

*** Item Category
  move 'L'                             to RS_EXBOM-POSTP.
  move ABAP_TRUE                       to RS_EXBOM-POSTP_X.

*** BOM Consumption
  LS_CONSU = ME->GET_BOM_CONSU( IS_EXQTY = LS_EXQTY
                                IF_BMENG = IF_BMENG
                                IF_BMEIN = IF_BMEIN ).
  move LS_CONSU-CONSU                  to RS_EXBOM-MENGE.
  move ABAP_TRUE                       to RS_EXBOM-MENGE_X.
  move LS_CONSU-CONSU_UOM              to RS_EXBOM-MEINS.
  move ABAP_TRUE                       to RS_EXBOM-MEINS_X.

*** Mark as Co-Product
  RS_EXBOM-MENGE = RS_EXBOM-MENGE * -1.
  move ABAP_TRUE                       to RS_EXBOM-KZKUP.
  move ABAP_TRUE                       to RS_EXBOM-KZKUP_X.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_MFMO.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

endmethod.
method GET_BOM_CONSU.

  data:  LF_CALCV   type        F.
  data:  LS_CONSU   type        ZVCXI_XCSP_S_CONSU.


  move ME->R_PR_MFMO->GET_CONSU( )  to LS_CONSU.

  if IS_EXQTY-EXQTY is not initial.
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IF_BMENG
                                                        IF_CALCV_UOM_1 = IF_BMEIN
                                                        IF_CALCV_2     = IS_EXQTY-EXQTY
                                                        IF_CALCV_UOM_2 = IS_EXQTY-EXQTY_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                              importing EF_CALCV       = LF_CALCV ).

    RS_CONSU-CONSU = LS_CONSU-CONSU * LF_CALCV.
  endif.
  RS_CONSU-CONSU_UOM = LS_CONSU-CONSU_UOM.

endmethod.
method GET_EXQTY.

  data:  LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

  if LR_APPDATA is bound and
     LR_APPDATA->S_OPQTY-OPQTY is not initial.
    move LR_APPDATA->S_OPQTY-OPQTY     to RS_EXQTY-EXQTY.
    move LR_APPDATA->S_OPQTY-OPQTY_UOM to RS_EXQTY-EXQTY_UOM.
  endif.

endmethod.
