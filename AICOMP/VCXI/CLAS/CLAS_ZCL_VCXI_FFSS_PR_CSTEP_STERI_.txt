
class ZCL_VCXI_FFSS_PR_CSTEP_STERI definition
  public
  inheriting from ZCL_VCXI_FFSS_PR_CSTEP
  create public .

public section.

  constants C_PARID_TSTER type /VCXI/VKS_PARID value 'ZVCXI_FF_TSTER' ##NO_TEXT.

  methods GET_TSTER
    exporting
      !EF_TSTER type ZVCXI_FFS_TSTER
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods SET_TSTER
    importing
      !IF_TSTER type ZVCXI_FFS_TSTER
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_IEVNT_O_TSTER_CHANGED type /VCXI/VKSC_IEVNT value 'TSTER_CHANGED' ##NO_TEXT.

  methods CHECK_TSTER
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSS_PR_CSTEP_STERI definition
class ZCL_VCXI_FFSS_PR_CSTEP_STERI implementation.
method CHECK_TSTER.

*** 0 - Sterilization Type is maintained.
*** 1 - Sterilization Type is not maintained.

  data: LF_TSTER  type  ZVCXI_FFS_TSTER.

  move 1 to RF_RETURN.

  ME->GET_TSTER( importing EF_TSTER = LF_TSTER ).
  if LF_TSTER is not initial.
    move 0 to RF_RETURN.
  endif.

endmethod.
  method GET_STATUS.

    SUPER->GET_STATUS( receiving RF_ELMST = RF_ELMST ).

*** Check Sterilization Type
    case ME->CHECK_TSTER( ) .
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***--------------------------------------------------------------------------------------
*** Check Sterilization Type
    case ME->CHECK_TSTER( ).
      when 0.

***     Sterilization Type is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '458' ).

      when 1.

***     Sterilization Type is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FFSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '459' ).

    endcase.

  endmethod.
  method GET_TSTER.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TSTER ).
    move LS_PARAM-ATWRT to EF_TSTER.
    move LS_PARAM-SETBY to EF_SETBY.

    check EF_TSTER is not initial.

    if EF_DESCR is requested.
***   Get Sterilization Type Description
      select single DESCR
               from ZVCXI_FFS_TC160T
               into EF_DESCR
              where LANGU eq SY-LANGU
                and TSTER eq EF_TSTER.

      if SY-SUBRC ne 0.
        select single DESCR
                 from ZVCXI_FFS_TC160T
                 into EF_DESCR
                where TSTER eq EF_TSTER.
      endif.
    endif.

  endmethod.
  method SET_TSTER.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TSTER ).

    move IF_TSTER           to LS_PARAM-ATWRT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TSTER_CHANGED ).

    endif.

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE.


*** Get Attribute Data
    ME->GET_TSTER( importing EF_TSTER = data(LF_TSTER)                "Sterilization Type
                             EF_DESCR = data(LF_DESCR) ).
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_LABEL     = CR_NETGRAPH_JSON->GET_LABEL( IF_VALUE = LF_TSTER )
                                          IF_VALUE     = LF_DESCR
                                changing  CT_ATTR      = LT_ATTR ).

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR      = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON       = 'sap-icon://expand-group'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY
                                                    IT_ATTR       = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
