
class ZCL_VCXI_XCM_MBQ_STP_S404 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.

  methods CREATE_SALES_BOM
    importing
      !IS_ACTDAT_CSB type ZVCXI_XCM_MBQ_S_ACTDAT_CSB
      !IS_MATLI type ZVCXI_XCM_MBQ_S_MATLI
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S404 definition
class ZCL_VCXI_XCM_MBQ_STP_S404 implementation.
  method CREATE_SALES_BOM.

    data: LS_SBDAT_ITEM type ZVCXI_XCM_MBQ_S_SBDAT_ITEM,
          LS_MATLI      type ZVCXI_XCM_MBQ_S_MATLI,
          LS_STKO_IN    type STKO_API01,
          LS_STPO_IN    type STPO_API01.
    data: LT_STKO_EX type ZCL_VCXI_XCI_BOB_BOM=>YT_STKO_EX,
          LT_STPO_EX type ZCL_VCXI_XCI_BOB_BOM=>YT_STPO_EX,
          LT_STPO_IN type ZCL_VCXI_XCI_BOB_BOM=>YT_STPO_IN.
    data: LR_BOB_BOM type ref to ZCL_VCXI_XCI_BOB_BOM,
          LR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT.


***--------------------------------------------------------------------------------------
*** Read Template BOM
    new ZCL_VCXI_XCI_BOB_BOM( IF_MATNR = IS_ACTDAT_CSB-TMATN
                              IF_WERKS = IS_ACTDAT_CSB-WERKS )->READ( exporting IF_STLAN = IS_ACTDAT_CSB-STLAN
                                                                      importing ET_STKO  = LT_STKO_EX
                                                                                ET_STPO  = LT_STPO_EX ).
    if LINE_EXISTS( LT_STKO_EX[ 1 ] ).
***   Copy Header Data from Source to Target (incl. adjustments)
      LS_STKO_IN = corresponding #( base ( LT_STKO_EX[ 1 ] ) IS_ACTDAT_CSB ).
    else.
      raise exception type /VCXI/CX_CKX.
    endif.


*** Instance of Business Object - Bill of Material for Sales BOM
    LR_BOB_BOM = new ZCL_VCXI_XCI_BOB_BOM( IF_MATNR = IS_MATLI-MATNR
                                           IF_WERKS = IS_ACTDAT_CSB-WERKS ).

***--------------------------------------------------------------------------------------
*** All Sales BOM Items are defined with DISST 1
    loop at IS_ACTDAT_CSB-T_SBDAT_ITEM into LS_SBDAT_ITEM.
***   Get Material Number
      LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ LEVEL_SOURCE = LS_SBDAT_ITEM-LEVEL_SOURCE ].

***   Copy Position Data from Source to Target (incl. adjustments)
      LS_STPO_IN = corresponding #( base ( LT_STPO_EX[ 1 ] ) LS_SBDAT_ITEM ).
      clear: LS_STPO_IN-ITM_IDENT, LS_STPO_IN-ITEM_GUID.

***   Set Component Material Number of FG
      LS_STPO_IN-COMPONENT = LS_MATLI-MATNR.

***   Set Material Description
      LR_BOB_MAT = new #( ).
      LR_BOB_MAT->INIT_FROM_DB( IF_MATNR = LS_MATLI-MATNR ).
      LS_STPO_IN-ITEM_TEXT1 = LR_BOB_MAT->GET_DESCR( ).

      append LS_STPO_IN to LT_STPO_IN.
    endloop.

***--------------------------------------------------------------------------------------
*** Create new Sales BOM
    LR_BOB_BOM->CREATE( IF_STLAN    = IS_ACTDAT_CSB-STLAN
                        IF_DATUV    = IS_ACTDAT_CSB-DATUV
                        IS_STKO     = LS_STKO_IN
                        IT_STPO     = LT_STPO_IN
                        IF_COMMIT   = ABAP_TRUE ).

  endmethod.
  method EXECUTE.

    data: LS_MATLI   type ZVCXI_XCM_MBQ_S_MATLI.
    data: LR_ACTDAT  type ref to DATA.
    field-symbols: <S_ACTDAT_CSB> type ZVCXI_XCM_MBQ_S_ACTDAT_CSB.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Create Sales BOM
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CSB ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CSB ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_CSB>.


***--------------------------------------------------------------------------------------
***     Create Sales BOM
        ME->CREATE_SALES_BOM( IS_ACTDAT_CSB = <S_ACTDAT_CSB>
                              IS_MATLI      = LS_MATLI ).


***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S404 implementation
