
class ZCL_VCXI_FBSP_PR_MFSI_P definition
  public
  inheriting from ZCL_VCXI_F0SP_PR_MFSI
  create public .

public section.

  interfaces ZIF_VCXI_FBSP_BGDIM .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_BGHEI
    importing
      !IS_BGHEI type ZVCXI_FBS_S_BGHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_BGWGT
    importing
      !IS_BGWGT type ZVCXI_FBS_S_BGWGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_BGWID
    importing
      !IS_BGWID type ZVCXI_FBS_S_BGWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_IBAGT
    importing
      !IF_IBAGT type ZVCXI_FBS_IBAGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SHUNT
    importing
      !IF_SHUNT type ZVCXI_XCSU_SHUNT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_F0S_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods ZIF_VCXI_XCSP_MFSI~DO_FORWARD
    redefinition .
protected section.

  constants C_IEVNT_O_BGDIM_CHANGED type /VCXI/VKSC_IEVNT value 'BGDIM_CHANGED' ##NO_TEXT.

  methods CONV_TO_CONSU
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_PR_MFSI_P definition
class ZCL_VCXI_FBSP_PR_MFSI_P implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( exporting IR_GATE = IR_GATE ).

*** Set Dimension-Depending Parameter IDs
    move C_PARID_CONSU_P to ME->F_PARID_CONSU.

  endmethod.
  method CONV_TO_CONSU.

*** Perform a 1:1 forward
    RS_CONSU-CONSU     = IS_MQTYI-MQTYI.
    RS_CONSU-CONSU_UOM = IS_MQTYI-MQTYI_UOM.

  endmethod.
  method SET_BGHEI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_BGHEI ).

    move IS_BGHEI-BGHEI     to LS_PARAM-ATFLV.
    move IS_BGHEI-BGHEI_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).

    endif.

  endmethod.
  method SET_BGWGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_BGWGT ).

    move IS_BGWGT-BGWGT     to LS_PARAM-ATFLV.
    move IS_BGWGT-BGWGT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).

    endif.

  endmethod.
  method SET_BGWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_BGWID ).

    move IS_BGWID-BGWID     to LS_PARAM-ATFLV.
    move IS_BGWID-BGWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).

    endif.

  endmethod.
  method SET_IBAGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_IBAGT ).

    move IF_IBAGT to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).

    endif.

  endmethod.
  method SET_NOOUT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_NOOUT ).

    move IF_NOOUT                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_NOUPS ).

    move IF_NOUPS                      to LS_PARAM-ATFLV.
    move IF_SETBY                      to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_SHUNT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_SHUNT ).

    move IF_SHUNT to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_BGHEI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_BGHEI ).
    move LS_PARAM-ATFLV to ES_BGHEI-BGHEI.
    move LS_PARAM-UNIT  to ES_BGHEI-BGHEI_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_BGWGT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_BGWGT ).
    move LS_PARAM-ATFLV to ES_BGWGT-BGWGT.
    move LS_PARAM-UNIT  to ES_BGWGT-BGWGT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_BGWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_BGWID ).
    move LS_PARAM-ATFLV to ES_BGWID-BGWID.
    move LS_PARAM-UNIT  to ES_BGWID-BGWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_IBAGT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_IBAGT ).
    move LS_PARAM-ATWRT to EF_IBAGT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_NOOUT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_NOOUT ).
    move LS_PARAM-ATFLV to EF_NOOUT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_NOUPS ).
    move LS_PARAM-ATFLV to EF_NOUPS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_FBSP_BGDIM~GET_SHUNT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ZIF_VCXI_FBSP_BGDIM~C_PARID_SHUNT ).
    move LS_PARAM-ATWRT to RF_SHUNT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method ZIF_VCXI_XCSP_MFSI~DO_FORWARD.

    data:  LS_BGDIM  type        ZVCXI_FBSP_S_BGDIM.
    data:  LR_BGDIM  type ref to ZIF_VCXI_FBSP_BGDIM.

    SUPER->ZIF_VCXI_XCSP_MFSI~DO_FORWARD( IR_MFSO = IR_MFSO ).

***--------------------------------------------------------------------------------------
*** Get Film Dimensions of MFO
    try.
        move IR_MFSO ?to LR_BGDIM.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_BGDIM.
    endtry.

    check LR_BGDIM is bound.

***--------------------------------------------------------------------------------------
*** Bag Type
    LR_BGDIM->GET_IBAGT( importing EF_IBAGT = LS_BGDIM-IBAGT ).
    ME->SET_IBAGT( IF_IBAGT = LS_BGDIM-IBAGT ).

*** Bag Width
    LR_BGDIM->GET_BGWID( importing ES_BGWID = LS_BGDIM-S_BGWID ).
    ME->SET_BGWID( IS_BGWID = LS_BGDIM-S_BGWID ).

*** Bag Height
    LR_BGDIM->GET_BGHEI( importing ES_BGHEI = LS_BGDIM-S_BGHEI ).
    ME->SET_BGHEI( IS_BGHEI = LS_BGDIM-S_BGHEI ).

*** Bag Weight
    LR_BGDIM->GET_BGWGT( importing ES_BGWGT = LS_BGDIM-S_BGWGT ).
    ME->SET_BGWGT( IS_BGWGT = LS_BGDIM-S_BGWGT ).

*** Number of Ups
    LR_BGDIM->GET_NOUPS( importing EF_NOUPS = LS_BGDIM-NOUPS ).
    ME->SET_NOUPS( IF_NOUPS = LS_BGDIM-NOUPS ).

*** No Out (On MFI its always 1)
    ME->SET_NOOUT( IF_NOOUT = 1 ).

*** Shipping Unit ID
    LS_BGDIM-SHUNT = LR_BGDIM->GET_SHUNT( ).
    ME->SET_SHUNT( IF_SHUNT = LS_BGDIM-SHUNT ).

  endmethod.
