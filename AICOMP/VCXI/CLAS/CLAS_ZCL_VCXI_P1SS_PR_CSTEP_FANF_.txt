
class ZCL_VCXI_P1SS_PR_CSTEP_FANF definition
  public
  inheriting from ZCL_VCXI_P1SS_PR_CSTEP
  create public .

public section.

  constants C_IPRVT_P1_CSTEP_FANF type /VCXI/VKSC_IPRVT value 'ZVCXI_P1SS_CSTEP_FANF' ##NO_TEXT.
  constants C_PARID_HNDHE type /VCXI/VKS_PARID value 'ZVCXI_PX_HNDHE' ##NO_TEXT.
  constants C_PARID_HNDLE type /VCXI/VKS_PARID value 'ZVCXI_PX_HNDLE' ##NO_TEXT.
  constants C_PARID_HNDWI type /VCXI/VKS_PARID value 'ZVCXI_PX_HNDWI' ##NO_TEXT.

  methods GET_HNDDIM
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RS_HNDDIM) type ZVCXI_PXS_S_HNDDIM
    raising
      /VCXI/CX_CKX .
  methods SET_HNDDIM
    importing
      !IS_HNDDIM type ZVCXI_PXS_S_HNDDIM optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
      !IF_FOVRR type ZVCXI_XCS_FOVRR optional
    raising
      /VCXI/CX_CKX .
  methods GET_FANSH
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_FANSH) type ZVCXI_P1S_S_FANSH
    raising
      /VCXI/CX_CKX .
  methods GET_FANLE
    returning
      value(RS_FANLE) type ZVCXI_P1S_S_FANLE
    raising
      /VCXI/CX_CKX .
  methods GET_FANHE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_FANHE) type ZVCXI_P1S_S_FANHE
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX
    redefinition .
  methods ZIF_VCXI_P1SS_COMM_PREV~GET_CRBPX
    redefinition .
  methods ZIF_VCXI_XCS_NGREP~FILL
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_HNDDIM type /VCXI/VKSC_IEVNT value 'RECALC_HNDDIM' ##NO_TEXT.
  constants C_IEVNT_O_HNDDIM_CHANGED type /VCXI/VKSC_IEVNT value 'HNDDIM_CHANGED' ##NO_TEXT.

  methods CHECK_HNDDIM
    importing
      value(IR_MESSAGE) type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods GET_HNDHE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_HNDHE) type ZVCXI_PXS_S_HNDHE
    raising
      /VCXI/CX_CKX .
  methods GET_HNDLE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_HNDLE) type ZVCXI_PXS_S_HNDLE
    raising
      /VCXI/CX_CKX .
  methods GET_HNDWI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_HNDWI) type ZVCXI_PXS_S_HNDWI
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_HNDDIM
    raising
      /VCXI/CX_CKX .
  methods SET_HNDHE
    importing
      !IS_HNDHE type ZVCXI_PXS_S_HNDHE optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_HNDLE
    importing
      !IS_HNDLE type ZVCXI_PXS_S_HNDLE optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_HNDWI
    importing
      !IS_HNDWI type ZVCXI_PXS_S_HNDWI optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P1SS_PR_CSTEP_FANF definition
class ZCL_VCXI_P1SS_PR_CSTEP_FANF implementation.
  method CHECK_HNDDIM.

    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM.


*** Get Handling Dimensions
    LS_HNDDIM = ME->GET_HNDDIM( ).

*** Check Handling Dimension
    if LS_HNDDIM-HNDLE is not initial and
       LS_HNDDIM-HNDWI is not initial and
       LS_HNDDIM-HNDHE is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Handling Dimensions are maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '451' ).
      endif.
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Handling Dimensions are not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P1SS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '452' ).
      endif.
    endif.

  endmethod.
  method GET_FANHE.

*** Fanfold Height = Caliper * Fanfold Sheets
    data(LS_CALIP) = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( )->S_CALIP.
    RS_FANHE = ZCL_VCXI_P1SS_BL_FANF=>CALC_FANHE( IS_FANSH = ME->GET_FANSH( )
                                                  IS_CALIP = LS_CALIP
                                                  IF_UOM   = LS_CALIP-CALIP_UOM ).

  endmethod.
  method GET_FANLE.

    RS_FANLE = corresponding #( ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( )->S_COLEN mapping FANLE     = COLEN
                                                                                          FANLE_UOM = COLEN_UOM ).

  endmethod.
  method GET_FANSH.

*** Fanfold Sheets = Fanfold Length / Sheet Length
    ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_SHTDIM( importing ES_SHTLE = data(LS_SHTLE) ).
    RS_FANSH = ZCL_VCXI_P1SS_BL_FANF=>CALC_FANSH_BY_FANLE( IS_FANLE = ME->GET_FANLE( )
                                                           IS_SHTLE = LS_SHTLE ).

  endmethod.
  method GET_HNDDIM.

    RS_HNDDIM-S_HNDLE = ME->GET_HNDLE( importing EF_SETBY = EF_SETBY ).
    RS_HNDDIM-S_HNDWI = ME->GET_HNDWI( ).
    RS_HNDDIM-S_HNDHE = ME->GET_HNDHE( ).

    EF_FOVRR = switch #( EF_SETBY when /VCXI/CL_VKSR_GATE=>C_SETBY_USER then ABAP_TRUE ).

  endmethod.
  method GET_HNDHE.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDHE ).
    RS_HNDHE-HNDHE     = LS_PARAM-ATFLV.
    RS_HNDHE-HNDHE_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method GET_HNDLE.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDLE ).
    RS_HNDLE-HNDLE     = LS_PARAM-ATFLV.
    RS_HNDLE-HNDLE_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method GET_HNDWI.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDWI ).
    RS_HNDWI-HNDWI     = LS_PARAM-ATFLV.
    RS_HNDWI-HNDWI_UOM = LS_PARAM-UNIT.
    EF_SETBY           = LS_PARAM-SETBY.

  endmethod.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check Handling Dimension
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_HNDDIM( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Handling Dimensions
    ME->CHECK_HNDDIM( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_HNDDIM.
        ME->HANDLE_RECALC_HNDDIM( ).

    endcase.

  endmethod.
  method HANDLE_RECALC_HNDDIM.

    data: LF_FOVRR type ZVCXI_XCS_FOVRR.
    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM,
          LS_SHTLE  type ZVCXI_P0SS_S_SHTLE,
          LS_SHTWI  type ZVCXI_P0SS_S_SHTWI,
          LS_FANHE  type ZVCXI_P1S_S_FANHE.
    data: LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP.


***--------------------------------------------------------------------------------------
*** Do only recalculate Handling Dimensions if they are not overridden.
    LS_HNDDIM = ME->GET_HNDDIM( importing EF_FOVRR = LF_FOVRR ).
    check LF_FOVRR eq ABAP_FALSE.


***--------------------------------------------------------------------------------------
    clear: LS_HNDDIM-HNDLE,
           LS_HNDDIM-HNDWI,
           LS_HNDDIM-HNDHE.

*** Get Corrugator Backward Property (Outbound)
    LR_BL_CRBPROP = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( ).
    if LR_BL_CRBPROP is bound.
***   Use Sheet Dimension and Fanfold Height
      LR_BL_CRBPROP->GET_SHTDIM( importing ES_SHTLE = LS_SHTLE
                                           ES_SHTWI = LS_SHTWI ).
      LS_FANHE = ME->GET_FANHE( ).

      LS_HNDDIM = value #( HNDLE     = LS_SHTLE-SHTLE
                           HNDLE_UOM = LS_SHTLE-SHTLE_UOM
                           HNDWI     = LS_SHTWI-SHTWI
                           HNDWI_UOM = LS_SHTWI-SHTWI_UOM
                           HNDHE     = LS_FANHE-FANHE
                           HNDHE_UOM = LS_FANHE-FANHE_UOM ).
    endif.

*** Ensure no negative Values have been calculated
    LS_HNDDIM-HNDLE = cond #( when LS_HNDDIM-HNDLE lt 0 then 0 else LS_HNDDIM-HNDLE ).
    LS_HNDDIM-HNDWI = cond #( when LS_HNDDIM-HNDWI lt 0 then 0 else LS_HNDDIM-HNDWI ).
    LS_HNDDIM-HNDHE = cond #( when LS_HNDDIM-HNDHE lt 0 then 0 else LS_HNDDIM-HNDHE ).

*** Set new Handling Dimensions
    ME->SET_HNDDIM( IS_HNDDIM = LS_HNDDIM ).

  endmethod.
  method SET_HNDDIM.

    data: LF_SETBY type /VCXI/VKSR_SETBY.

*** Identify correct SETBY
    if IF_FOVRR is supplied.
      LF_SETBY = switch #( IF_FOVRR when ABAP_TRUE then /VCXI/CL_VKSR_GATE=>C_SETBY_USER
                                                   else SPACE ).
    else.
      LF_SETBY = IF_SETBY.
    endif.

*** Set Dimensions
    if IS_HNDDIM is supplied.
      ME->SET_HNDLE( IS_HNDLE = IS_HNDDIM-S_HNDLE
                     IF_SETBY = LF_SETBY ).
      ME->SET_HNDWI( IS_HNDWI = IS_HNDDIM-S_HNDWI
                     IF_SETBY = LF_SETBY ).
      ME->SET_HNDHE( IS_HNDHE = IS_HNDDIM-S_HNDHE
                     IF_SETBY = LF_SETBY ).
    else.
      ME->SET_HNDLE( IF_SETBY = LF_SETBY ).
      ME->SET_HNDWI( IF_SETBY = LF_SETBY ).
      ME->SET_HNDHE( IF_SETBY = LF_SETBY ).
    endif.

  endmethod.
  method SET_HNDHE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDHE ).

    if IS_HNDHE is supplied.
      LS_PARAM-ATFLV = IS_HNDHE-HNDHE.
      LS_PARAM-UNIT  = IS_HNDHE-HNDHE_UOM.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HNDDIM_CHANGED ).
    endif.

  endmethod.
  method SET_HNDLE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDLE ).

    if IS_HNDLE is supplied.
      LS_PARAM-ATFLV = IS_HNDLE-HNDLE.
      LS_PARAM-UNIT  = IS_HNDLE-HNDLE_UOM.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HNDDIM_CHANGED ).
    endif.

  endmethod.
  method SET_HNDWI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HNDWI ).

    if IS_HNDWI is supplied.
      LS_PARAM-ATFLV = IS_HNDWI-HNDWI.
      LS_PARAM-UNIT  = IS_HNDWI-HNDWI_UOM.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HNDDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX.

*** Super
    RR_BL_CRFPROP = SUPER->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( importing EF_SETBY = EF_SETBY ).
    check RR_BL_CRFPROP is bound.

***--------------------------------------------------------------------------------------
*** Set Handling Dimensions to Forward Properties
    RR_BL_CRFPROP->SET_HNDDIM( IS_HNDDIM = ME->GET_HNDDIM( ) ).

***--------------------------------------------------------------------------------------
*** Get new Corrugator Forward Property XML
    if EF_CRFPX is requested.
      EF_CRFPX = RR_BL_CRFPROP->GET_CRFPX( ).
    endif.

  endmethod.
  method ZIF_VCXI_P1SS_COMM_PREV~GET_CRBPX.

    data: LT_SCORE_COM type ZVCXI_PXSS_TT_SCORE_COM.


*** Call SUPER
    RR_BL_CRBPROP = SUPER->ZIF_VCXI_P1SS_COMM_PREV~GET_CRBPX( importing EF_SETBY = EF_SETBY ).

***--------------------------------------------------------------------------------------
*** Update Scores to remove Sheet Length
    LT_SCORE_COM = RR_BL_CRBPROP->T_SCORE.
    delete LT_SCORE_COM where ISCOR(1) eq ZCL_VCXI_P0SSC_PRSTY=>GET_CSCOR( IF_DIMEN = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_LENGTH ).
    RR_BL_CRBPROP->SET_SCORE( IT_SCORE = LT_SCORE_COM ).

***--------------------------------------------------------------------------------------
*** Return XML
    if EF_CRBPX is requested.
      move RR_BL_CRBPROP->GET_CRBPX( ) to EF_CRBPX.
    endif.

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

    data: LT_ATTR type CR_NETGRAPH_JSON->YT_ATTRIBUTE.


*** Get Attribute Data
    data(LS_FANSH) = ME->GET_FANSH( ).
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE = LS_FANSH-FANSH
                                          IF_UOM   = LS_FANSH-FANSH_UOM
                                changing  CT_ATTR  = LT_ATTR ).
    data(LS_FANLE) = ME->GET_FANLE( ).
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE = LS_FANLE-FANLE
                                          IF_UOM   = LS_FANLE-FANLE_UOM
                                changing  CT_ATTR  = LT_ATTR ).
    data(LS_FANHE) = ME->GET_FANHE( ).
    CR_NETGRAPH_JSON->ADD_ATTR( exporting IF_VALUE = LS_FANHE-FANHE
                                          IF_UOM   = LS_FANHE-FANHE_UOM
                                changing  CT_ATTR  = LT_ATTR ).

*** Add Node
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE     = |{ ME->GET_DESCR( ) }|
                                                    IF_DESCR     = |{ ME->GET_DESCR( ) }|
                                                    IF_ICON      = 'sap-icon://journey-change'
                                                    IF_STATUS    = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY = IF_GROUP_KEY
                                                    IT_ATTR      = LT_ATTR ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
