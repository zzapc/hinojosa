
class ZCL_VCXI_XCSP_PR_RELOCATE definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_XCSP_MFI .
  interfaces ZIF_VCXI_XCSP_MFS .
  interfaces ZIF_VCXI_XCSP_MFSI .
  interfaces ZIF_VCXI_XCSP_MFMGR .
  interfaces ZIF_VCXI_XCSP_MFO .
  interfaces ZIF_VCXI_XCSP_MFSO .

  constants C_PARID_CONSU_A type /VCXI/VKS_PARID value 'ZVCXI_XC_CONSU_A' ##NO_TEXT.
  constants C_PARID_CONSU_L type /VCXI/VKS_PARID value 'ZVCXI_XC_CONSU_L' ##NO_TEXT.
  constants C_PARID_CONSU_P type /VCXI/VKS_PARID value 'ZVCXI_XC_CONSU_P' ##NO_TEXT.
  constants C_PARID_CONSU_W type /VCXI/VKS_PARID value 'ZVCXI_XC_CONSU_W' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_CONSU
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_CONSU) type ZVCXI_XCSP_S_CONSU
    raising
      /VCXI/CX_CKX .
  methods GET_SOBSL
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_SOBSL) type SOBSL
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  class-methods DETERMINE_SOBSL
    importing
      !IF_WERKS_MFSI type WERKS_D
      !IF_WERKS_MFSO type WERKS_D
      !IF_REWFG type REWFG default ABAP_TRUE
    returning
      value(RF_SOBSL) type SOBSL
    raising
      /VCXI/CX_CKX .

  methods GET_DESCR
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_O_CONSU_CHANGED type /VCXI/VKSC_IEVNT value 'CONSU_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_MATNR_CHANGED type /VCXI/VKSC_IEVNT value 'MATNR_CHANGED' ##NO_TEXT.
  constants C_PARID_SOBSL type /VCXI/VKS_PARID value 'ZVCXI_XC_SOBSL' ##NO_TEXT.
  data F_PARID_CONSU type /VCXI/VKS_PARID .

  methods GET_PRVDR_MATPO
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_MATPO type ref to ZCL_VCXI_XCSP_PR_MATPO
    raising
      /VCXI/CX_CKX .
  methods REDET_MATNR
    raising
      /VCXI/CX_CKX .
  methods SET_MATNR
    importing
      !IF_MATNR type MATNR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_SOBSL
    importing
      !IF_SOBSL type SOBSL
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
private section.

  methods INIT_PARID_CONSU
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_XCSP_PR_RELOCATE definition
class ZCL_VCXI_XCSP_PR_RELOCATE implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize Parameter ID for Consumption
    ME->INIT_PARID_CONSU( ).

  endmethod.
  method DETERMINE_SOBSL.

    data: LF_REWRK type REWRK.


    check IF_WERKS_MFSI ne IF_WERKS_MFSO.

***----------------------------------------------------------------------------
*** Search for Special Procurement Type
ENHANCEMENT-SECTION DETERMINE_SOBSL SPOTS ZVCXI_PXSP_ES_PR_RELOCATE .
    if IF_WERKS_MFSI is not initial and
       IF_WERKS_MFSO is not initial.
      if IF_REWFG eq ABAP_TRUE.
        LF_REWRK = IF_WERKS_MFSO.
      endif.

      select single SOBSL
             into RF_SOBSL
             from T460A
            where WERKS eq IF_WERKS_MFSI
             and  BESKZ eq 'F'
             and  SOBES eq '7'
             and  WRK02 eq IF_WERKS_MFSO
             and  REWFG eq IF_REWFG
             and  REWRK eq LF_REWRK.
      if SY-SUBRC ne 0.
        clear RF_SOBSL.
      endif.
    endif.
END-ENHANCEMENT-SECTION.

***----------------------------------------------------------------------------
    if RF_SOBSL is initial.
***   No Special Procurement Type determined from &1 to &2.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCSP'
                                            IF_MSGNO = '301'
                                            IF_MSGV1 = IF_WERKS_MFSI
                                            IF_MSGV2 = IF_WERKS_MFSO ).
    endif.

  endmethod.
  method GET_CONSU.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_CONSU ).
    move LS_PARAM-ATFLV to RS_CONSU-CONSU.
    move LS_PARAM-UNIT  to RS_CONSU-CONSU_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_DESCR.

    data: LF_WERKS type WERKS_D.

    LF_WERKS = ME->GET_WERKS( ).
    if LF_WERKS is not initial.
      RF_DESCR =  'Relocate to plant &1'(001).
      replace '&1' in RF_DESCR with LF_WERKS.
    else.
      RF_DESCR = SUPER->GET_DESCR( ).
    endif.

  endmethod.
  method GET_PRVDR_MATPO.

    data:  LT_GATE   type        /VCXI/VKSR_TT_GATE.

***------------------------------------------------------------------
*** Get Material Pool
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MATPO=>C_IPRVT_XCS_MATPO
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC eq 0.

    try.
        move ER_GATE->R_CLSPR ?to ER_PR_MATPO.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: ER_PR_MATPO.
    endtry.

  endmethod.
  method GET_SOBSL.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SOBSL ).
    move LS_PARAM-ATWRT to RF_SOBSL.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_WERKS.

    RF_WERKS = ME->R_GATE->GET_APPDATA( )->F_WERKS.

  endmethod.
  method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when ZIF_VCXI_XCSP_MFS~C_IEVNT_I_REQUEST_BACKWARD.
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_XCSP_MFS~C_IEVNT_O_BACKWARD_REQUESTED ).
  endcase.

endmethod.
method INIT_PARID_CONSU.

  data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
  data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.

  LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

  loop at LT_PARAM into LS_PARAM
                  where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                   and  ( PARID eq C_PARID_CONSU_A or
                          PARID eq C_PARID_CONSU_L or
                          PARID eq C_PARID_CONSU_P or
                          PARID eq C_PARID_CONSU_W ).
    move LS_PARAM-PARID to ME->F_PARID_CONSU.
    exit.
  endloop.

endmethod.
  method REDET_MATNR.

    data: LF_MATNR    type MATNR.
    data: LR_PR_MATPO type ref to ZCL_VCXI_XCSP_PR_MATPO.
***------------------------------------------------------------------
*** Get Material Pool
    ME->GET_PRVDR_MATPO( importing ER_PR_MATPO = LR_PR_MATPO ).
    check LR_PR_MATPO is bound.

*** Get current Material Number
    LF_MATNR = ME->ZIF_VCXI_XCSP_MFS~GET_MATNR( ).

*** Request new Material Number for req. Low-Level Code
    LR_PR_MATPO->CHANGE_MATNR( exporting IF_DISST     = ME->ZIF_VCXI_XCSP_MFS~GET_DISST( )
                                         IF_DISST_REQ = ME->ZIF_VCXI_XCSP_MFS~GET_DISST( )
                                         IR_MFI       = ME->R_GATE
                               changing  CF_MATNR     = LF_MATNR ).

*** Set new Material Number
    ME->SET_MATNR( IF_MATNR = LF_MATNR ).

  endmethod.
  method SET_MATNR.

    data:  LF_CHANGED  type ABAP_BOOL.
    data:  LS_LEOKY    type /VCXI/VKSR_S_LEOKY.

    move IF_MATNR to LS_LEOKY-LEOKY.
    move IF_SETBY to LS_LEOKY-SETBY.

    LF_CHANGED = ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_MATNR_CHANGED ).
    endif.

  endmethod.
  method SET_SOBSL.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_SOBSL ).

    move IF_SOBSL to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method ZIF_VCXI_XCSP_MFI~CALC_CONSU.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~GET_CONSU.

    RS_CONSU = ME->GET_CONSU( ).

  endmethod.
  method ZIF_VCXI_XCSP_MFI~GET_CSPLIT.

    data: LT_GATE           type        /VCXI/VKSR_TT_GATE.
    data: LR_PR_CSPLIT_MGR type ref to ZCL_VCXI_XCSP_PR_CSPLIT_MGR.

***--------------------------------------------------------------------------------------
*** Get Manager
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_CSPLIT_MGR=>C_IPRVT_XCS_CSPLIT_MGR
                                     IF_INUSE = ABAP_TRUE ).
    check LT_GATE is not initial.
    LR_PR_CSPLIT_MGR ?= LT_GATE[ 1 ]->R_CLSPR.

***--------------------------------------------------------------------------------------
*** Get ID of active Cost Split
    move LR_PR_CSPLIT_MGR->GET_ICSPA( ) to EF_ICSPA.
    check EF_ICSPA is not initial.

*** Get active Cost Splits
    move LR_PR_CSPLIT_MGR->GET_DCSPL( ) to ES_DCSPL.

*** Get Component Factor
    move LR_PR_CSPLIT_MGR->GET_COMPF( ) to EF_COMPF.

  endmethod.
  method ZIF_VCXI_XCSP_MFI~GET_KAUSF.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~GET_MFICF.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~GET_MFICP.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~GET_MFISP.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~HANDLE_INIT_MFICF.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~HANDLE_INIT_MFISP.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~SET_MFICF.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~SET_MFICP.
  endmethod.
  method ZIF_VCXI_XCSP_MFI~SET_MFISP.
  endmethod.
  method ZIF_VCXI_XCSP_MFMGR~GET_MFI.

*** Return own Instance as Relocate is also the MFSI
    append ME->R_GATE to RT_GATE.

  endmethod.
  method ZIF_VCXI_XCSP_MFMGR~GET_MFO.

*** Return own Instance as Relocate is also the MFSO
    append ME->R_GATE to RT_GATE.

  endmethod.
  method ZIF_VCXI_XCSP_MFO~GET_CONSU.

    RS_CONSU = ME->GET_CONSU( ).

  endmethod.
  method ZIF_VCXI_XCSP_MFO~GET_NOOUT.
  endmethod.
  method ZIF_VCXI_XCSP_MFO~GET_WERKS.

    RF_WERKS = ME->GET_WERKS( ).

  endmethod.
  method ZIF_VCXI_XCSP_MFO~SET_CONSU.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_CONSU ).

    move IS_CONSU-CONSU                      to LS_PARAM-ATFLV.
    move IS_CONSU-CONSU_UOM                  to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC    to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_CONSU_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_XCSP_MFO~SET_NOOUT.
  endmethod.
  method ZIF_VCXI_XCSP_MFSI~DO_FORWARD.

    data: LF_WERKS_MFSI type WERKS_D,
          LF_WERKS_MFSO type WERKS_D,
          LF_SOBSL      type SOBSL.

***--------------------------------------------------------------------------------------
*** Determin Special Procurement Type
    if ME->ZIF_VCXI_XCSP_MFSI~GET_NEXTL( ) eq ABAP_TRUE.
      move ME->GET_WERKS( ) to LF_WERKS_MFSI.
      if IR_MFSO is bound.
        move IR_MFSO->ZIF_VCXI_XCSP_MFO~GET_WERKS( ) to LF_WERKS_MFSO.
      endif.

***   Search for Special Procurement Type
      if LF_WERKS_MFSI ne LF_WERKS_MFSO.
        LF_SOBSL = ME->DETERMINE_SOBSL( IF_WERKS_MFSI = LF_WERKS_MFSI
                                        IF_WERKS_MFSO = LF_WERKS_MFSO ).
      endif.

***   Set identified Special Procurement Type
      ME->SET_SOBSL( IF_SOBSL = LF_SOBSL ).
    else.
***   Initialize Special Procurement Type
      ME->SET_SOBSL( IF_SOBSL = SPACE
                     IF_SETBY = SPACE ).
    endif.

  endmethod.
  method ZIF_VCXI_XCSP_MFSI~GET_NEXTL.

    RF_NEXTL = ABAP_TRUE.

  endmethod.
  method ZIF_VCXI_XCSP_MFSI~SET_NEXTL.
  endmethod.
  method ZIF_VCXI_XCSP_MFSO~DO_BACKWARD.

    data: LF_MATNR type MATNR,
          LF_DISST type /VCXI/VKC_DISST,
          LF_MFRAT type ZVCXI_XCSP_MFRAT.
    data: LS_CONSU type ZVCXI_XCSP_S_CONSU.


    if IR_MFSI is bound.
***   Move Low-Level Code and Consumption
      LS_CONSU = IR_MFSI->GET_CONSU( ).

***   Relocation Element will mimic previous element (normal case the Organizer)
      if ME->ZIF_VCXI_XCSP_MFSI~F_ORGLC ne IR_MFSI->F_ORGLC.
        ME->ZIF_VCXI_XCSP_MFSI~F_ORGLC = IR_MFSI->F_ORGLC.
***     Trigger Backwarding Request to ensure communication to related MFSO
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_XCSP_MFS~C_IEVNT_O_BACKWARD_REQUESTED ).
      endif.
    endif.

    ME->ZIF_VCXI_XCSP_MFO~SET_CONSU( IS_CONSU = LS_CONSU ).

    ME->REDET_MATNR( ).

  endmethod.
  method ZIF_VCXI_XCSP_MFSO~GET_ICSPL.
  endmethod.
  method ZIF_VCXI_XCSP_MFSO~GET_KAUSF.
  endmethod.
  method ZIF_VCXI_XCSP_MFSO~IS_ACTIVE_BY_CSPLIT.
  endmethod.
  method ZIF_VCXI_XCSP_MFS~GET_DISST.

*** Return MFSI Low-Level Code
    move 1 to RF_DISST.

  endmethod.
  method ZIF_VCXI_XCSP_MFS~GET_MATNR.

*** Return MFSI Low-Level Code
    RF_MATNR = ME->R_GATE->GET_LEOKY( )-LEOKY.

  endmethod.
  method ZIF_VCXI_XCSP_MFS~SET_DISST.
  endmethod.
  method ZIF_VCXI_XCSP_MFS~SET_MATNR.
  endmethod.
