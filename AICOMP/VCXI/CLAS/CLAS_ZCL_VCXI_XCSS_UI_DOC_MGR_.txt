
class ZCL_VCXI_XCSS_UI_DOC_MGR definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data R_GRID_DOC type ref to ZCL_VCXI_XCSS_GRID_DOC .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  class-methods PICK_DOKAR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_DOKAR) type DOKAR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  methods HANDLE_OPEN_USER
    for event OPEN_USER of ZCL_VCXI_XCSS_GRID_DOC
    importing
      !IR_GATE_USER .
private section.
endclass. "ZCL_VCXI_XCSS_UI_DOC_MGR definition
class ZCL_VCXI_XCSS_UI_DOC_MGR implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_XCSS_UI_DOC_MGR_BIND'
      exporting
        IR_UI_DOC_MGR = ME
      importing
        ES_DYNP       = ME->S_DYNP.

*** Create Grid for Document
    create object ME->R_GRID_DOC
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_DOC'.

    set handler HANDLE_OPEN_USER for ME->R_GRID_DOC.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_DOC is bound.
      set handler HANDLE_OPEN_USER for ME->R_GRID_DOC activation ABAP_FALSE.
      ME->R_GRID_DOC->DO_FREE( ).
      clear ME->R_GRID_DOC.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                             IF_DYNNR = IF_DYNNR ).

    try.

        if IF_REPID eq ME->S_DYNP-REPID and
           IF_DYNNR eq ME->S_DYNP-DYNNR.

          LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
          LF_INUSE  = ME->R_GATE->IS_INUSE( ).

          loop at screen.
            if LF_LOCKED ne ABAP_TRUE or
               LF_INUSE  ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
            modify screen.
          endloop.
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    if ME->R_GRID_DOC is bound.

      if ME->R_GRID_DOC->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_DOC->F_REFRESH_REQ.
      endif.

      ME->R_GRID_DOC->REFRESH_GRID( ).

    endif.

  endmethod.
  method HANDLE_OPEN_USER.

    try.
        check IR_GATE_USER is bound.
        ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = IR_GATE_USER ).
        ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = IR_GATE_USER->F_GATKY ).
        ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = IR_GATE_USER->F_GATKY ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method PICK_DOKAR.

    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF,
          LS_SHLP      type SHLP_DESCR,
          LS_RETURN    type DDSHRETVAL.
    data: LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF,
          LT_TDWA      type table of H_TDWA,
          LT_RETURN    type table of DDSHRETVAL.


***--------------------------------------------------------------------------------------
*** Initialize Document Type
    LT_PRVDR_DEF = IR_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_XCSS_PR_DOC=>C_IPRVT_DOC
                                           IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_ALL ).
    if LINES( LT_PRVDR_DEF ) lt 2.
***   Read the first ID
      read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.
      if SY-SUBRC is initial.
        move LS_PRVDR_DEF-ID to RF_DOKAR.
      endif.

    else.
***   Fill the table for display
      loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
        insert corresponding #( LS_PRVDR_DEF mapping DOKAR  = ID
                                                     DARTXT = DESCR
                              ) into table LT_TDWA.
      endloop.

***   Get Search Help Definition
      call function 'F4IF_GET_SHLP_DESCR'
        exporting
          SHLPNAME = 'H_TDWA'
        importing
          SHLP     = LS_SHLP.

***   Show the table
      call function 'F4IF_INT_TABLE_VALUE_REQUEST'
        exporting
          RETFIELD        = 'DOKAR'
          VALUE_ORG       = 'S'
        tables
          VALUE_TAB       = LT_TDWA
          FIELD_TAB       = LS_SHLP-FIELDDESCR
          RETURN_TAB      = LT_RETURN
        exceptions
          PARAMETER_ERROR = 1
          NO_VALUES_FOUND = 2
          others          = 3.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

      read table LT_RETURN into LS_RETURN index 1.
      if SY-SUBRC is initial.
        move LS_RETURN-FIELDVAL to RF_DOKAR.
      endif.
    endif.

    if RF_DOKAR is initial.
***   Document type '&' not defined
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = '26'
                                            IF_MSGNO = '168' ).
    endif.

  endmethod.
