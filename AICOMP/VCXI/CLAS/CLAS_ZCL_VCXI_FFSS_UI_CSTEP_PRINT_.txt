
class ZCL_VCXI_FFSS_UI_CSTEP_PRINT definition
  public
  inheriting from ZCL_VCXI_FFSS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_PRINT_VIS type ZVCXI_FFSS_S_CSTEP_PRINT_VIS .
  data R_GRID_MS_INK type ref to ZCL_VCXI_FFSS_GRID_MS_INK .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_CSTEP_PRINT_VIS
    importing
      !IS_CSTEP_PRINT_VIS type ZVCXI_FFSS_S_CSTEP_PRINT_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_CSTEP_PRINT type ref to ZCL_VCXI_FFSS_PR_CSTEP_PRINT .
  constants C_UC_LINK_DESDO type SYUCOMM value 'LINK_DESDO' ##NO_TEXT.
  constants C_UC_CREATE_DESDO type SYUCOMM value 'CREATE_DESDO' ##NO_TEXT.

  methods HANDLE_UC_CREATE_DESDO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_LINK_DESDO
    raising
      /VCXI/CX_CKX .
  methods PICK_DOKAR
    returning
      value(RF_DOKAR) type DOKAR
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_DESDO
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_CSTEP_PRINT definition
class ZCL_VCXI_FFSS_UI_CSTEP_PRINT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_CSTEP_PRINT_BIND'
      exporting
        IR_UI_CSTEP_PRINT = ME
      importing
        ES_DYNP           = ME->S_DYNP.

*** Create Grid for GRID_MS_INK
    create object ME->R_GRID_MS_INK
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_MS_INK'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_PRINT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_MS_INK is bound.
      ME->R_GRID_MS_INK->DO_FREE( ).
      clear ME->R_GRID_MS_INK.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_PRTEC type ZVCXI_FFS_PRTEC,
          LF_RELEA type ABAP_BOOL.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***     Get Print Technology
        ME->R_PR_CSTEP_PRINT->GET_TPRIN( importing EF_PRTEC = LF_PRTEC ).

***     Get Release Status of Print Design Document
        ME->R_PR_CSTEP_PRINT->GET_DESDO( importing EF_RELEA = LF_RELEA ).

        loop at screen.
***       Hide Design Document Description Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_DESDD' and
             ME->S_CSTEP_PRINT_VIS-FOVRR_DESDD eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Disable Design Document Description if generated
          if SCREEN-NAME cp '*-DESDD' and
             ME->S_CSTEP_PRINT_VIS-FOVRR_DESDD eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.
***       Disable Design Document Desciption for existing Design Document
          if ME->S_CSTEP_PRINT_VIS-DESDO is not initial.
            if SCREEN-NAME cp '*-DESDD'.
              SCREEN-INPUT  = 0.
            endif.
            if SCREEN-NAME cp '*-FOVRR_DESDD'.
              SCREEN-ACTIVE = 0.
            endif.
          endif.

***       Hide by Print Technology
          case LF_PRTEC.
***         Traditional Printing
            when ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_ANALOG.
              if SCREEN-GROUP3 eq 'PTD'.    "Digital Print Technology
                SCREEN-ACTIVE = 0.
              endif.

***         Digital Printing
            when ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_DIGITAL.
              if SCREEN-GROUP3 eq 'PTA'.    "Analog Print Technology
                SCREEN-ACTIVE = 0.
              endif.
          endcase.

          case SCREEN-GROUP1.
            when 'OVR'.
***           Override values
              if ME->S_CSTEP_PRINT_VIS-FOVRR_PRTIN eq ABAP_FALSE.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.

***       Released Design Document
          if SCREEN-GROUP2 eq 'PDD' and    "Controlled by Design Document
             LF_RELEA eq ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

    if ME->R_GRID_MS_INK is bound.
      if ME->R_GRID_MS_INK->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_MS_INK->F_REFRESH_REQ.
      endif.
      ME->R_GRID_MS_INK->REFRESH_GRID( ).
    endif.

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_CSTEP->F_REFRESH_REQ.
      ME->R_TEXTEDIT_CSTEP->REFRESH_TEXTEDIT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Define DropDown Values for Design Document
    ME->SET_DDVAL_DESDO( ).

  endmethod.
  method DO_UPDATE_CSTEP_PRINT_VIS.

    check ME->R_PR_CSTEP_PRINT is bound.

***--------------------------------------------------------------------------------------
*** Set Print Type
    if ME->S_CSTEP_PRINT_VIS-TPRIN ne IS_CSTEP_PRINT_VIS-TPRIN.
      ME->R_PR_CSTEP_PRINT->SET_TPRIN( IF_TPRIN = IS_CSTEP_PRINT_VIS-TPRIN
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Print Category
    if ME->S_CSTEP_PRINT_VIS-PRCAT ne IS_CSTEP_PRINT_VIS-PRCAT.
      ME->R_PR_CSTEP_PRINT->SET_PRCAT( IF_PRCAT = IS_CSTEP_PRINT_VIS-PRCAT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of Colors
    if ME->S_CSTEP_PRINT_VIS-NOCOL ne IS_CSTEP_PRINT_VIS-NOCOL.
      ME->R_PR_CSTEP_PRINT->SET_NOCOL( IF_NOCOL = IS_CSTEP_PRINT_VIS-NOCOL ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Internal Print Thickness if it is "Overriden"
    if ME->S_CSTEP_PRINT_VIS-FOVRR_PRTIN eq ABAP_TRUE.
***   Set Internal Print Thickness
      if ME->S_CSTEP_PRINT_VIS-PRTIN ne IS_CSTEP_PRINT_VIS-PRTIN.
        ME->R_PR_CSTEP_PRINT->SET_PRTIN( IS_PRTIN = IS_CSTEP_PRINT_VIS-S_PRTIN
                                         IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Internal Print Thickness
    if ME->S_CSTEP_PRINT_VIS-FOVRR_PRTIN ne IS_CSTEP_PRINT_VIS-FOVRR_PRTIN.
      ME->R_PR_CSTEP_PRINT->SET_FOVRR_PRTIN( IF_FOVRR = IS_CSTEP_PRINT_VIS-FOVRR_PRTIN ).
    endif.

*** Set Conversion Trim Requirement
    if ME->S_CSTEP_PRINT_VIS-CTRQW ne IS_CSTEP_PRINT_VIS-CTRQW.
      ME->R_PR_CSTEP_PRINT->SET_CTRQW( IS_CTRQW = IS_CSTEP_PRINT_VIS-S_CTRQW
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Design Document
    if ME->S_CSTEP_PRINT_VIS-DESDO ne IS_CSTEP_PRINT_VIS-DESDO.
      ME->R_PR_CSTEP_PRINT->SET_DESDO( IF_DESDO = IS_CSTEP_PRINT_VIS-DESDO
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Design Design Description
    if ME->S_CSTEP_PRINT_VIS-DESDD        ne IS_CSTEP_PRINT_VIS-DESDD or
       ME->S_CSTEP_PRINT_VIS-FOVRR_DESDD  ne IS_CSTEP_PRINT_VIS-FOVRR_DESDD.
      if IS_CSTEP_PRINT_VIS-FOVRR_DESDD ne ABAP_FALSE.
        ME->R_PR_CSTEP_PRINT->SET_DESDD( IF_DESDD = IS_CSTEP_PRINT_VIS-DESDD
                                         IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_CSTEP_PRINT->SET_DESDD( IF_DESDD = IS_CSTEP_PRINT_VIS-DESDD
                                         IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Print Repeat Width
    if ME->S_CSTEP_PRINT_VIS-PRRWI ne IS_CSTEP_PRINT_VIS-PRRWI.
      ME->R_PR_CSTEP_PRINT->SET_PRRWI( IS_PRRWI = IS_CSTEP_PRINT_VIS-S_PRRWI
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Print Repeat Length
    if ME->S_CSTEP_PRINT_VIS-PRRLE ne IS_CSTEP_PRINT_VIS-PRRLE.
      ME->R_PR_CSTEP_PRINT->SET_PRRLE( IS_PRRLE = IS_CSTEP_PRINT_VIS-S_PRRLE
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Repeat Next
    if ME->S_CSTEP_PRINT_VIS-RENEX ne IS_CSTEP_PRINT_VIS-RENEX.
      ME->R_PR_CSTEP_PRINT->SET_RENEX( IF_RENEX = IS_CSTEP_PRINT_VIS-RENEX
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Repeat Behind
    if ME->S_CSTEP_PRINT_VIS-REBEH ne IS_CSTEP_PRINT_VIS-REBEH.
      ME->R_PR_CSTEP_PRINT->SET_REBEH( IF_REBEH = IS_CSTEP_PRINT_VIS-REBEH
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Additional Number of Color Changes
    if ME->S_CSTEP_PRINT_VIS-NOACC ne IS_CSTEP_PRINT_VIS-NOACC.
      ME->R_PR_CSTEP_PRINT->SET_NOACC( IF_NOACC = IS_CSTEP_PRINT_VIS-NOACC
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Additional Number of Ink Tool Changes
    if ME->S_CSTEP_PRINT_VIS-NOATC ne IS_CSTEP_PRINT_VIS-NOATC.
      ME->R_PR_CSTEP_PRINT->SET_NOATC( IF_NOATC = IS_CSTEP_PRINT_VIS-NOATC
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Number of different Designs
    if ME->S_CSTEP_PRINT_VIS-NODDG ne IS_CSTEP_PRINT_VIS-NODDG.
      ME->R_PR_CSTEP_PRINT->SET_NODDG( IF_NODDG = IS_CSTEP_PRINT_VIS-NODDG
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      ME->R_TEXTEDIT_CSTEP->UPDATE_TEXT( ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_MS_INK is bound.
      ME->R_GRID_MS_INK->CHECK_CHANGED_DATA( ).
    endif.

    case IF_UCOMM.
      when C_UC_CREATE_DESDO.
        ME->HANDLE_UC_CREATE_DESDO( ).
      when C_UC_LINK_DESDO.
        ME->HANDLE_UC_LINK_DESDO( ).
    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_PRINT.

  endmethod.
  method HANDLE_UC_CREATE_DESDO.

    data: LF_DOKAR type DOKAR.
    data: LR_BL_DOC type ref to ZCL_VCXI_XCSS_BL_DOC.


***--------------------------------------------------------------------------------------
*** Pick Document Type based on available Provider
    LF_DOKAR = ZCL_VCXI_XCSS_UI_DOC_MGR=>PICK_DOKAR( IR_GATE = ME->R_GATE ).

***--------------------------------------------------------------------------------------
*** Create DMS Document using PopUp
    LR_BL_DOC = ZCL_VCXI_XCSS_POPUP_DOC=>START( IF_DOKAR = LF_DOKAR
                                                IF_DKTXT = ME->R_PR_CSTEP_PRINT->GET_DESDD( ) ).
    check LR_BL_DOC          is bound       and
          LR_BL_DOC->F_DOKAR is not initial and
          LR_BL_DOC->F_DOKNR is not initial and
          LR_BL_DOC->F_DOKTL is not initial and
          LR_BL_DOC->F_DOKVR is not initial.

***--------------------------------------------------------------------------------------
*** Set Print Design
    ME->R_PR_CSTEP_PRINT->CREATE_DESDO( IR_BL_DOC = LR_BL_DOC ).

  endmethod.
  method HANDLE_UC_LINK_DESDO.

    data: LF_DOKAR type DOKAR,
          LF_DESDO type ZVCXI_FFS_DESDO.
    data: LT_GATE      type /VCXI/VKSR_TT_GATE.
    data: LR_BL_DOC     type ref to ZCL_VCXI_XCSS_BL_DOC,
          LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_DOC_MGR type ref to ZCL_VCXI_XCSS_PR_DOC_MGR.


***--------------------------------------------------------------------------------------
*** Pick Document Type based on available Provider
    LF_DOKAR = ME->PICK_DOKAR( ).

***--------------------------------------------------------------------------------------
*** Call Pop-Up and Request Document Number, Part, Version
    LR_BL_DOC = ZCL_VCXI_XCSS_POPUP_DOC=>REQUEST_DOC_KEY( exporting IF_DOKAR = LF_DOKAR ).

    check LR_BL_DOC          is bound       and
          LR_BL_DOC->F_DOKAR is not initial and
          LR_BL_DOC->F_DOKNR is not initial and
          LR_BL_DOC->F_DOKTL is not initial and
          LR_BL_DOC->F_DOKVR is not initial.

***--------------------------------------------------------------------------------------
*** Get Document Manager Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSS_PR_DOC_MGR=>C_IPRVT_DOC_MGR ).
    read table LT_GATE into LR_GATE index 1.
    check SY-SUBRC eq 0.

    move LR_GATE->R_CLSPR ?to LR_PR_DOC_MGR.

*** Add Document Instance
    LR_PR_DOC_MGR->ADD_DOCS( IT_DOC_KEY = value #( ( LR_BL_DOC->GET_DOC_KEY( ) ) ) ).

***--------------------------------------------------------------------------------------
*** Get Design Document Key
    LF_DESDO = ZCL_VCXI_XCSS_BL_DOC=>ENCRYPT_GUID( IF_DOKAR = LR_BL_DOC->F_DOKAR
                                                   IF_DOKNR = LR_BL_DOC->F_DOKNR
                                                   IF_DOKTL = LR_BL_DOC->F_DOKTL
                                                   IF_DOKVR = LR_BL_DOC->F_DOKVR ).

    ME->R_PR_CSTEP_PRINT->SET_DESDO( IF_DESDO = LF_DESDO
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    free: ME->S_CSTEP_PRINT_VIS.
    move ME->S_CSTEP_VIS to ME->S_CSTEP_PRINT_VIS-S_CSTEP_VIS.

***--------------------------------------------------------------------------------------
*** Print Type
    ME->S_CSTEP_PRINT_VIS-TPRIN = ME->R_PR_CSTEP_PRINT->GET_TPRIN( ).

*** Print Category
    ME->S_CSTEP_PRINT_VIS-PRCAT = ME->R_PR_CSTEP_PRINT->GET_PRCAT( ).

*** Number of Colors
    ME->S_CSTEP_PRINT_VIS-NOCOL = ME->R_PR_CSTEP_PRINT->GET_NOCOL( importing EF_DESCR = ME->S_CSTEP_PRINT_VIS-NOCOL_DESCR ).

*** Internal Print Thickness
    ME->R_PR_CSTEP_PRINT->GET_PRTIN( importing ES_PRTIN = ME->S_CSTEP_PRINT_VIS-S_PRTIN ).

*** Flag - Override
    move ME->R_PR_CSTEP_PRINT->GET_FOVRR_PRTIN( ) to ME->S_CSTEP_PRINT_VIS-FOVRR_PRTIN.

*** Conversion Trim Requirement
    ME->R_PR_CSTEP_PRINT->GET_CTRQW( importing ES_CTRQW = ME->S_CSTEP_PRINT_VIS-S_CTRQW ).

***--------------------------------------------------------------------------------------
*** Design Document
    ME->S_CSTEP_PRINT_VIS-DESDO = ME->R_PR_CSTEP_PRINT->GET_DESDO( importing EF_LINK_ICON  = ME->S_CSTEP_PRINT_VIS-DESDO_LINK_ICON
                                                                             EF_LINK_DESCR = ME->S_CSTEP_PRINT_VIS-DESDO_LINK_DESCR ).
*** Design Document Description
    ME->S_CSTEP_PRINT_VIS-DESDD = ME->R_PR_CSTEP_PRINT->GET_DESDD( importing EF_FOVRR = ME->S_CSTEP_PRINT_VIS-FOVRR_DESDD ).

***--------------------------------------------------------------------------------------
*** Print Repeat Width
    ME->R_PR_CSTEP_PRINT->GET_PRRWI( importing ES_PRRWI = ME->S_CSTEP_PRINT_VIS-S_PRRWI ).

*** Print Repeat Length
    ME->R_PR_CSTEP_PRINT->GET_PRRLE( importing ES_PRRLE = ME->S_CSTEP_PRINT_VIS-S_PRRLE ).

*** Repeat Next
    ME->R_PR_CSTEP_PRINT->GET_RENEX( importing EF_RENEX = ME->S_CSTEP_PRINT_VIS-RENEX ).

*** Repeat Behind
    ME->R_PR_CSTEP_PRINT->GET_REBEH( importing EF_REBEH = ME->S_CSTEP_PRINT_VIS-REBEH ).

***--------------------------------------------------------------------------------------
*** Additional Number of Color Changes
    ME->R_PR_CSTEP_PRINT->GET_NOACC( importing EF_NOACC = ME->S_CSTEP_PRINT_VIS-NOACC ).

*** Additional Number of Ink Tool Changes
    ME->R_PR_CSTEP_PRINT->GET_NOATC( importing EF_NOATC = ME->S_CSTEP_PRINT_VIS-NOATC ).

*** Number of different Designs
    ME->R_PR_CSTEP_PRINT->GET_NODDG( importing EF_NODDG = ME->S_CSTEP_PRINT_VIS-NODDG ).

  endmethod.
  method PICK_DOKAR.

    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF,
          LS_SHLP      type SHLP_DESCR,
          LS_RETURN    type DDSHRETVAL.
    data: LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF,
          LT_TDWA      type table of H_TDWA,
          LT_RETURN    type table of DDSHRETVAL.


***--------------------------------------------------------------------------------------
*** Initialize Document Type
    LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_XCSS_PR_DOC=>C_IPRVT_DOC
                                              IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_ALL ).
    if LINES( LT_PRVDR_DEF ) lt 2.
***   Read the first ID
      read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.
      if SY-SUBRC is initial.
        move LS_PRVDR_DEF-ID to RF_DOKAR.
      endif.

    else.
***   Fill the table for display
      loop at LT_PRVDR_DEF into LS_PRVDR_DEF.
        insert corresponding #( LS_PRVDR_DEF mapping DOKAR  = ID
                                                     DARTXT = DESCR
                              ) into table LT_TDWA.
      endloop.

***   Get Search Help Definition
      call function 'F4IF_GET_SHLP_DESCR'
        exporting
          SHLPNAME = 'H_TDWA'
        importing
          SHLP     = LS_SHLP.

***   Show the table
      call function 'F4IF_INT_TABLE_VALUE_REQUEST'
        exporting
          RETFIELD        = 'DOKAR'
          VALUE_ORG       = 'S'
        tables
          VALUE_TAB       = LT_TDWA
          FIELD_TAB       = LS_SHLP-FIELDDESCR
          RETURN_TAB      = LT_RETURN
        exceptions
          PARAMETER_ERROR = 1
          NO_VALUES_FOUND = 2
          others          = 3.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.

      read table LT_RETURN into LS_RETURN index 1.
      if SY-SUBRC is initial.
        move LS_RETURN-FIELDVAL to RF_DOKAR.
      endif.
    endif.

    if RF_DOKAR is initial.
***   Document type '&' not defined
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = '26'
                                            IF_MSGNO = '168' ).
    endif.

  endmethod.
  method SET_DDVAL_DESDO.

    data: LF_ID    type        VRM_ID,
          LF_DOKAR type        DOKAR,
          LF_DOKNR type        DOKNR,
          LF_DOKTL type        DOKTL_D,
          LF_DOKVR type        DOKVR.
    data: LT_GATE  type        /VCXI/VKSR_TT_GATE,
          LT_VALUE type        VRM_VALUES.
    data: LR_GATE   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_DOC type ref to ZCL_VCXI_XCSS_PR_DOC.
    field-symbols: <S_VALUE>  type        VRM_VALUE.

***------------------------------------------------------------------------------------------------
*** Get all Print Documents
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSS_PR_DOC=>C_IPRVT_DOC
                                     IF_INUSE = ABAP_TRUE ).
*** Add to search help structure
    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_DOC.

      LR_PR_DOC->GET_DOKAR(   receiving RF_DOKAR = LF_DOKAR ).
      LR_PR_DOC->GET_DOC_KEY( importing EF_DOKNR = LF_DOKNR
                                        EF_DOKTL = LF_DOKTL
                                        EF_DOKVR = LF_DOKVR ).

      append initial line to LT_VALUE assigning <S_VALUE>.

      <S_VALUE>-KEY = ZCL_VCXI_XCSS_BL_DOC=>ENCRYPT_GUID( IF_DOKAR = LF_DOKAR
                                                          IF_DOKNR = LF_DOKNR
                                                          IF_DOKTL = LF_DOKTL
                                                          IF_DOKVR = LF_DOKVR ).

      <S_VALUE>-TEXT = LR_PR_DOC->GET_DESCR( ).
    endloop.

***------------------------------------------------------------------------------------------------
*** Set to DropDown List
    move 'ZVCXI_FFSS_S_CSTEP_PRINT_VIS-DESDO' to LF_ID.

*** Initialize listbox content
    call function 'VRM_REFRESH_VALUES'.

    call function 'VRM_SET_VALUES'
      exporting
        ID     = LF_ID
        VALUES = LT_VALUE.

  endmethod.
