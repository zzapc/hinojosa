
class ZCL_VCXI_PXSS_POPUP_CADIF definition
  public
  create protected .

public section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    YT_NODE type standard table of MTREESNODE with default key .
  types:
    begin of YS_MAPPING,
           NODEKEY type TV_NODEKEY,
           R_GATE   type ref to /VCXI/CL_VKSR_GATE,
           DFILE    type FILEP,
         end   of YS_MAPPING .

  data:
    T_MAPPING type table of YS_MAPPING .
  data R_GATE type ref to /VCXI/CL_VKSR_GATE .
  data R_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE .
  data R_TREE type ref to CL_GUI_SIMPLE_TREE .

  methods GET_NODEKEY
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_DFILE type FILEP optional
    returning
      value(RF_NODEKEY) type TV_NODEKEY
    raising
      /VCXI/CX_CKX .
  methods ADD_NODES_CADDL
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CT_NODE type YT_NODE
    raising
      /VCXI/CX_CKX .
  methods FILL_TREE
    raising
      /VCXI/CX_CKX .
  methods SHOW_DOCUMENT
    importing
      !IF_ALIASS type DIRPROFILENAMES default 'ZVCXI_PXE_CAD'
      !IF_DFILE type FILEP
    raising
      /VCXI/CX_CKX .
  methods HANDLE_NODE_DOUBLE_CLICK
    for event NODE_DOUBLE_CLICK of CL_GUI_SIMPLE_TREE
    importing
      !NODE_KEY .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods INIT_TREE
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_POPUP_CADIF definition
class ZCL_VCXI_PXSS_POPUP_CADIF implementation.
  method ADD_NODES_CADDL.

    data: LT_CADDL type ZVCXI_PXS_TT_CADDL.


***--------------------------------------------------------------------------------------
*** Get Documents
    case type of IR_GATE->R_CLSPR.
      when type ZCL_VCXI_PXSS_PR_CADIF_PRJ into data(LR_PR_CADIF_PRJ).
        LT_CADDL = LR_PR_CADIF_PRJ->GET_CADDL( ).
      when type ZCL_VCXI_PXSS_PR_CADIF_ONEUP into data(LR_PR_CADIF_ONEUP).
        LT_CADDL = LR_PR_CADIF_ONEUP->GET_CADDL( ).
      when type ZCL_VCXI_PXSS_PR_CADIF_MLTUP into data(LR_PR_CADIF_MLTUP).
        LT_CADDL = LR_PR_CADIF_MLTUP->GET_CADDL( ).
    endcase.

***--------------------------------------------------------------------------------------
*** Add Documents as Node
    loop at LT_CADDL into data(LS_CADDL).
      append value #( NODE_KEY  = ME->GET_NODEKEY( IR_GATE  = IR_GATE
                                                   IF_DFILE = LS_CADDL-DFILE )
                      RELATKEY  = ME->GET_NODEKEY( IR_GATE )
                      RELATSHIP = CL_GUI_SIMPLE_TREE=>RELAT_LAST_CHILD
                      STYLE     = CL_GUI_SIMPLE_TREE=>STYLE_DEFAULT
                      TEXT      = LS_CADDL-DKTXT
                    ) to CT_NODE.
    endloop.

  endmethod.
  method CONSTRUCTOR.

    ME->R_GATE   = IR_GATE.
    ME->R_UIGATE = IR_UIGATE.

  endmethod.
  method DO_FREE.

    clear: ME->R_GATE,
           ME->R_TREE,
           ME->R_UIGATE.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Set PF-Status
    ME->SET_PF_STATUS( ).

***--------------------------------------------------------------------------------------
*** Initialize and Fill Tree
    ME->INIT_TREE( ).
    ME->FILL_TREE( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).

    endcase.

  endmethod.
  method FILL_TREE.

    data: LF_TIICO_ID type ICON_D.
    data: LT_NODE type YT_NODE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Prepare Tree for new data
    ME->R_TREE->DELETE_ALL_NODES( exceptions FAILED            = 1
                                             CNTL_SYSTEM_ERROR = 2 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

***--------------------------------------------------------------------------------------
*** Define Project
    ME->R_GATE->GET_TIICO( importing EF_TIICO_ID = LF_TIICO_ID ).
    append value #( NODE_KEY  = ME->GET_NODEKEY( ME->R_GATE )
                    RELATSHIP = CL_GUI_SIMPLE_TREE=>RELAT_LAST_CHILD
                    ISFOLDER  = ABAP_TRUE
                    N_IMAGE   = LF_TIICO_ID
                    EXP_IMAGE = LF_TIICO_ID
                    STYLE     = CL_GUI_SIMPLE_TREE=>STYLE_DEFAULT
                    TEXT      = ME->R_GATE->R_CLSPR->GET_DESCR( )
                  ) to LT_NODE.
*** Add Nodes for CAD Documents
    ME->ADD_NODES_CADDL( exporting IR_GATE = ME->R_GATE
                         changing  CT_NODE = LT_NODE ).

***--------------------------------------------------------------------------------------
*** Add OneUps Folder
    append value #( NODE_KEY  = 'ONEUP'
                    RELATSHIP = CL_GUI_SIMPLE_TREE=>RELAT_LAST_CHILD
                    DISABLED  = ABAP_TRUE
                    ISFOLDER  = ABAP_TRUE
                    STYLE     = CL_GUI_SIMPLE_TREE=>STYLE_DEFAULT
                    TEXT      = 'OneUp'
                  ) to LT_NODE.
*** Add existing Provider
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_IPRVT_PX_CADIF_ONEUP
                                   IF_INUSE = ABAP_TRUE ) into LR_GATE.
      LR_GATE->GET_TIICO( importing EF_TIICO_ID = LF_TIICO_ID ).
      append value #( NODE_KEY  = ME->GET_NODEKEY( LR_GATE )
                      RELATKEY  = 'ONEUP'
                      RELATSHIP = CL_GUI_SIMPLE_TREE=>RELAT_LAST_CHILD
                      ISFOLDER  = ABAP_TRUE
                      N_IMAGE   = LF_TIICO_ID
                      EXP_IMAGE = LF_TIICO_ID
                      STYLE     = CL_GUI_SIMPLE_TREE=>STYLE_DEFAULT
                      TEXT      = LR_GATE->R_CLSPR->GET_DESCR( )
                    ) to LT_NODE.
***   Add Nodes for CAD Documents
      ME->ADD_NODES_CADDL( exporting IR_GATE = LR_GATE
                           changing  CT_NODE = LT_NODE ).
    endloop.

***------------------------------------------------------------------------------------------------
*** Add MultiUps Folder
    append value #( NODE_KEY  = 'MLTUP'
                    RELATSHIP = CL_GUI_SIMPLE_TREE=>RELAT_LAST_CHILD
                    DISABLED  = ABAP_TRUE
                    ISFOLDER  = ABAP_TRUE
                    STYLE     = CL_GUI_SIMPLE_TREE=>STYLE_DEFAULT
                    TEXT      = 'MultiUp'
                  ) to LT_NODE.
*** Add existing Provider
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_CADIF_MLTUP=>C_IPRVT_PX_CADIF_MLTUP
                                   IF_INUSE = ABAP_TRUE ) into LR_GATE.
      LR_GATE->GET_TIICO( importing EF_TIICO_ID = LF_TIICO_ID ).
      append value #( NODE_KEY  = ME->GET_NODEKEY( LR_GATE )
                      RELATKEY  = 'MLTUP'
                      RELATSHIP = CL_GUI_SIMPLE_TREE=>RELAT_LAST_CHILD
                      ISFOLDER  = ABAP_TRUE
                      N_IMAGE   = LF_TIICO_ID
                      EXP_IMAGE = LF_TIICO_ID
                      STYLE     = CL_GUI_SIMPLE_TREE=>STYLE_DEFAULT
                      TEXT      = LR_GATE->R_CLSPR->GET_DESCR( )
                    ) to LT_NODE.
***   Add Nodes for CAD Documents
      ME->ADD_NODES_CADDL( exporting IR_GATE = LR_GATE
                           changing  CT_NODE = LT_NODE ).
    endloop.


***--------------------------------------------------------------------------------------
*** Add Nodes to Tree
    ME->R_TREE->ADD_NODES( exporting TABLE_STRUCTURE_NAME = 'MTREESNODE'
                                     NODE_TABLE           = LT_NODE
                          exceptions others               = 9 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Expand all Nodes
    ME->R_TREE->EXPAND_ROOT_NODES( EXPAND_SUBTREE = ABAP_TRUE ).

  endmethod.
  method GET_NODEKEY.

    if not LINE_EXISTS( ME->T_MAPPING[ R_GATE = IR_GATE
                                       DFILE  = IF_DFILE ] ).
      append value #( NODEKEY = LINES( ME->T_MAPPING ) + 1
                      R_GATE  = IR_GATE
                      DFILE   = IF_DFILE
                    ) to ME->T_MAPPING.
    endif.

    RF_NODEKEY = ME->T_MAPPING[ R_GATE = IR_GATE
                                DFILE  = IF_DFILE ]-NODEKEY.

  endmethod.
  method HANDLE_NODE_DOUBLE_CLICK.

    try.
***     Get selected Node
        data(LS_MAPPING) = value #( ME->T_MAPPING[ NODEKEY = NODE_KEY ] optional ).

        if LS_MAPPING-DFILE is not initial.
***       Show Document on Front-End
          ME->SHOW_DOCUMENT( IF_DFILE = LS_MAPPING-DFILE ).

***       Display Messages
          ME->R_UIGATE->DISPLAY_MSG( ).

        else.
***       Check Gate is bound and Provider has an own UI
          check LS_MAPPING-R_GATE is bound and
                LS_MAPPING-R_GATE->GET_CLSUI( ) is not initial.
          ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = LS_MAPPING-R_GATE ).

***       Expand and select in Tree
          ME->R_UIGATE->EXPAND_TREE_NODE( IF_GATKY = LS_MAPPING-R_GATE->F_GATKY ).
          ME->R_UIGATE->SELECT_TREE_NODE( IF_GATKY = LS_MAPPING-R_GATE->F_GATKY ).

***       Close Popup
          leave to screen 0.
        endif.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method INIT_TREE.

    data: LR_CUSTOM_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER.


    check ME->R_TREE is not bound.

***--------------------------------------------------------------------------------------
*** Create Container
    create object LR_CUSTOM_CONTAINER
      exporting
        CONTAINER_NAME = '0100CC_TREE'
        LIFETIME       = CL_GUI_COLUMN_TREE=>LIFETIME_DYNPRO
      exceptions
        others         = 9.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Create Tree
    ME->R_TREE = new CL_GUI_SIMPLE_TREE( PARENT              = LR_CUSTOM_CONTAINER
                                         NODE_SELECTION_MODE = CL_GUI_SIMPLE_TREE=>NODE_SEL_MODE_SINGLE ).

*** Define and register Events on which should be reacted
    ME->R_TREE->SET_REGISTERED_EVENTS( EVENTS = value #( ( EVENTID    = CL_GUI_SIMPLE_TREE=>EVENTID_NODE_DOUBLE_CLICK
                                                           APPL_EVENT = ABAP_TRUE ) ) ).
    set handler HANDLE_NODE_DOUBLE_CLICK for ME->R_TREE.

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_PXSS_POPUP_CADIF'.

  endmethod.
  method SHOW_DOCUMENT.

    data: LF_PATH  type FILEP,
          LF_DAPPL type DAPPL,
          LF_XSTR  type XSTRING.


***--------------------------------------------------------------------------------------
*** Get File from User Directory of Server
    LF_XSTR = ZCL_VCXI_XCS_SERVICE=>GET_FILE( IF_ALIASS  = IF_ALIASS
                                              IF_FILEP   = IF_DFILE ).
    data(LT_DATA) = CL_BCS_CONVERT=>XSTRING_TO_SOLIX( IV_XSTRING = LF_XSTR ).

***--------------------------------------------------------------------------------------
*** Get Application
    call function 'CV120_DOC_GET_APPL'
      exporting
        PF_FILE   = IF_DFILE
      importing
        PFX_DAPPL = LF_DAPPL.

*** Generate Local File Name incl. Path
    call function 'CV120_CREATE_VIEW_FILE'
      exporting
        PF_DAPPL     = LF_DAPPL
        PF_FILENAME  = IF_DFILE
      importing
        PFX_TMP_FILE = LF_PATH
      exceptions
        ERROR        = 1
        others       = 2.
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

***--------------------------------------------------------------------------------------
*** Create Local File
    CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD( exporting  FILENAME = conv #( LF_PATH )
                                                       FILETYPE = 'BIN'
                                            changing   DATA_TAB = LT_DATA
                                            exceptions others   = 99 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Open File
    CL_GUI_FRONTEND_SERVICES=>EXECUTE( exporting  DOCUMENT = conv #( LF_PATH )
                                       exceptions others   = 10 ).
    if SY-SUBRC <> 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method START.

    data: LR_POPUP_CADIF type ref to ZCL_VCXI_PXSS_POPUP_CADIF.


***--------------------------------------------------------------------------------------
*** Create Instance
    LR_POPUP_CADIF = new #( IR_GATE   = IR_GATE
                            IR_UIGATE = IR_UIGATE ).

***--------------------------------------------------------------------------------------
*** Call Popup
    call function 'ZVCXI_PXSS_POPUP_CADIF_START'
      exporting
        IR_POPUP_CADIF = LR_POPUP_CADIF.

***--------------------------------------------------------------------------------------
*** Free the Popup
    LR_POPUP_CADIF->DO_FREE( ).

  endmethod.
