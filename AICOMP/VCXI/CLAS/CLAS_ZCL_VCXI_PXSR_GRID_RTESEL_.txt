
class ZCL_VCXI_PXSR_GRID_RTESEL definition
  public
  inheriting from ZCL_VCXI_XCSR_GRID_RTESEL
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSR_S_RTESEL_GRID'
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_UC_RHICO
    importing
      !IS_ROW type LVC_S_ROW
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_HOTSPOT_CLICK
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSR_GRID_RTESEL definition
class ZCL_VCXI_PXSR_GRID_RTESEL implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_TABNAME        = IF_TABNAME
                      IR_UIGATE         = IR_UIGATE ).

endmethod.
  method GET_FIELDCAT.

    data: LF_PCDIR type ABAP_BOOL,
          LF_RHNDL type ABAP_BOOL.
    data: LS_RTESEL_GRID type ZVCXI_PXSR_S_RTESEL_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


    RT_FCAT = SUPER->GET_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_RTESEL_GRID.

***   PC Direction
      if LS_RTESEL_GRID-R_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_PCDIR.
        LF_PCDIR = ABAP_TRUE.
      endif.

***   Roll Handling
      if LS_RTESEL_GRID-R_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_RHNDL.
        LF_RHNDL = ABAP_TRUE.
      endif.
    endloop.

***----------------------------------------------------------------------------
*** Change Field catalog attributes
    loop at RT_FCAT assigning field-symbol(<S_FCAT>).
      case <S_FCAT>-FIELDNAME.
***     PC Direction
        when 'PCDIR'.
          <S_FCAT>-NO_OUT  = switch #( LF_PCDIR when ABAP_TRUE then ABAP_FALSE else ABAP_TRUE ).

***     Roll Handling Button
        when 'RHICO'.
          <S_FCAT>-NO_OUT  = switch #( LF_RHNDL when ABAP_TRUE then ABAP_FALSE else ABAP_TRUE ).
          <S_FCAT>-ICON    = ABAP_TRUE.
          <S_FCAT>-HOTSPOT = ABAP_TRUE.
          <S_FCAT>-JUST    = 'C'.    "Align Center

      endcase.
    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_RTESEL_GRID type ZVCXI_PXSR_S_RTESEL_GRID.
    data: LT_RTE_PSTEP type /VCXI/VSMR_TT_RTE_PSTEP.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL,
          LR_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


    check ME->R_PR_RTESPV->R_RTESEL is bound.

*** Get Super Data
    SUPER->GET_GRID_DATA( IR_DATA = IR_DATA ).

*** Collect "last" Roll Handling of each machine
    loop at ME->R_PR_RTESPV->R_RTESEL->R_RTE_PRTE->T_RTE_ARBPL into LR_RTE_ARBPL.
      clear LR_RTE_PSTEP.
      loop at LR_RTE_ARBPL->T_RTE_PSTEP into LR_RTE_PSTEP
             where TABLE_LINE->R_BLOBJ is instance of ZIF_VCXI_PXSR_RHNDL.
      endloop.
      if LR_RTE_PSTEP is bound.
        append LR_RTE_PSTEP to LT_RTE_PSTEP.
      endif.
    endloop.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_RTESEL_GRID.

***   PC Direction of Production Step
      if LS_RTESEL_GRID-R_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_PXSR_PCDIR.
        LS_RTESEL_GRID-PCDIR = cast ZIF_VCXI_PXSR_PCDIR( LS_RTESEL_GRID-R_RTE_PSTEP->R_BLOBJ )->F_PCDIR.
      endif.

***   Roll Handling of last Production Step per Work Center
      if LINE_EXISTS( LT_RTE_PSTEP[ TABLE_LINE = LS_RTESEL_GRID-R_RTE_PSTEP ] ).
***     Icon for Roll Handling Popup
        LS_RTESEL_GRID-RHICO = ICON_MODIFY.
      else.
***     No HotSpot
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RHICO'
                                    IF_STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO
                          changing  CT_STYL      = LS_RTESEL_GRID-T_STYL ).
      endif.

      move-corresponding LS_RTESEL_GRID to <S_DATA>.
    endloop.

  endmethod.
  method HANDLE_HOTSPOT_CLICK.

*** Call Super
    SUPER->HANDLE_HOTSPOT_CLICK( E_ROW_ID    = E_ROW_ID
                                 E_COLUMN_ID = E_COLUMN_ID
                                 ES_ROW_NO   = ES_ROW_NO ).

    try.
        case E_COLUMN_ID-FIELDNAME.
          when 'RHICO'.
            ME->HANDLE_UC_RHICO( IS_ROW = E_ROW_ID ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_RHICO.

    data: LF_SYSOM type /VCXI/VKS_SYSOM.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL.


*** Find Work Center
    LR_RTE_ARBPL = ME->GET_SELECTED_RTE_ARBPL( IS_ROW = IS_ROW ).
    check LR_RTE_ARBPL is bound.

    ME->R_GATE->GET_CONFIG_INFO( importing EF_SYSOM = LF_SYSOM ).

*** Call Popup
    ZCL_VCXI_PXSR_POPUP_RHNDL=>START( IR_RTE_ARBPL = LR_RTE_ARBPL
                                      IF_LOCKED    = ABAP_FALSE
                                      IF_SYSOM     = LF_SYSOM ).

  endmethod.
