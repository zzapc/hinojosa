
class ZCL_VCXI_XCSP_PR_HELPER definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_XCS_HELPER type /VCXI/VKSC_IPRVT value 'ZVCXI_XCSP_HELPER'. "#EC NOTEXT
  constants C_PARID_HELPN type /VCXI/VKS_PARID value 'ZVCXI_XC_HELPN'. "#EC NOTEXT
  constants C_PARID_TEXT type /VCXI/VKS_PARID value 'ZVCXI_XC_TEXT'. "#EC NOTEXT

  methods GET_HELPN
    returning
      value(RF_HELPN) type ZVCXI_XCSP_HELPN
    raising
      /VCXI/CX_CKX .
  methods GET_TEXT
    returning
      value(RF_TEXT) type TEXT30
    raising
      /VCXI/CX_CKX .
  methods SET_HELPN
    importing
      !IF_HELPN type ZVCXI_XCSP_HELPN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TEXT
    importing
      !IF_TEXT type TEXT30
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  constants C_IEVNT_O_HELPN_CHANGED type /VCXI/VKSC_IEVNT value 'HELPN_CHANGED'. "#EC NOTEXT

  methods CHECK_HELPN
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHECK_TEXT
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSP_PR_HELPER definition
class ZCL_VCXI_XCSP_PR_HELPER implementation.
method CHECK_HELPN .

  data:  LF_HELPN type ZVCXI_XCSP_HELPN.

  LF_HELPN = ME->GET_HELPN( ).

  if LF_HELPN is not initial.
    move ABAP_TRUE  to RF_OKAY.
  else.
    move ABAP_FALSE to RF_OKAY.
  endif.

endmethod.
method CHECK_TEXT .

  data:  LF_TEXT type TEXT30.

  LF_TEXT = ME->GET_TEXT( ).

  if LF_TEXT is not initial.
    move ABAP_TRUE  to RF_OKAY.
  else.
    move ABAP_FALSE to RF_OKAY.
  endif.

endmethod.
method GET_HELPN.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HELPN ).
  move LS_PARAM-ATFLV to RF_HELPN.

endmethod.
method GET_STATUS.

  RF_ELMST = SUPER->GET_STATUS( ).

*** Check the Text
  if ME->CHECK_TEXT( ) eq ABAP_TRUE.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check the Number of Helpers
  if ME->CHECK_HELPN( ) eq ABAP_TRUE.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
***   Check the Text
  if ME->CHECK_TEXT( ) eq ABAP_TRUE.
*** Text maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '051' ).
  else.
*** Text not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSP'
                             IF_MSGTY = 'W'
                             IF_MSGNO = '052' ).
  endif.

***----------------------------------------------------------------------------
*** Check the Number of Helper
  if ME->CHECK_HELPN( ) eq ABAP_TRUE.
*** Number of Helper maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '053' ).
  else.
*** Number of Helper not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSP'
                             IF_MSGTY = 'W'
                             IF_MSGNO = '054' ).
  endif.

endmethod.
method GET_TEXT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TEXT ).
  move LS_PARAM-ATWRT to RF_TEXT.

endmethod.
method SET_HELPN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HELPN ).

  move IF_HELPN to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HELPN_CHANGED ).
  endif.

endmethod.
method SET_TEXT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TEXT ).

  move IF_TEXT  to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
