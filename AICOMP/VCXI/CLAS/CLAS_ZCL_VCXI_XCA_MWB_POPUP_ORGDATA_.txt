
class ZCL_VCXI_XCA_MWB_POPUP_ORGDATA definition
  public
  create protected .

public section.

  data S_ORGDATA_VIS type ZVCXI_XCA_MWB_S_ORGDATA_VIS read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START_POPUP
    importing
      !IT_CLMAT type /VCXI/CKX_TT_OBJECT
    returning
      value(RR_CLMAT) type ref to ZCL_VCXI_XCA_MWB_CLMAT
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  constants C_UC_OK type SYUCOMM value 'OK' ##NO_TEXT.
  data R_CLMAT type ref to ZCL_VCXI_XCA_MWB_CLMAT .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_GRID type ref to CL_GUI_ALV_GRID .
  data T_FCAT type LVC_T_FCAT .
  data:
    T_ORGDATA_GRID type table of ZVCXI_XCA_MWB_S_ORGDATA_GRID .

  methods MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OK
    raising
      /VCXI/CX_CKX .
  methods REFRESH_FIELDCAT
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IT_CLMAT type /VCXI/CKX_TT_OBJECT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
private section.

  constants C_TABNAME type TABNAME value 'ZVCXI_XCA_MWB_S_ORGDATA_GRID' ##NO_TEXT.
endclass. "ZCL_VCXI_XCA_MWB_POPUP_ORGDATA definition
class ZCL_VCXI_XCA_MWB_POPUP_ORGDATA implementation.
  method CONSTRUCTOR.

    data: LF_MATNR type MATNR,
          LF_MAKTX type MAKTX.
    data: LR_CLMAT  type ref to ZCL_VCXI_XCA_MWB_CLMAT,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


    loop at IT_CLMAT into LR_OBJECT.
      LR_CLMAT ?= LR_OBJECT.

      LF_MATNR = LR_CLMAT->GET_MATNR( importing EF_MAKTX = LF_MAKTX ).
      append value #( MATNR     = LF_MATNR
                      MAKTX     = LF_MAKTX
                      S_ORGDATA = LR_CLMAT->GET_ORGDATA( )
                      R_CLMAT   = LR_CLMAT
                    ) to ME->T_ORGDATA_GRID.
    endloop.

  endmethod.
  method DO_FREE.

*** Free Grid
    if ME->R_GRID is bound.
      ME->R_GRID->FREE( exceptions others = 9 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_GRID.
    endif.

*** Free Container
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions others = 9 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.

  endmethod.
  method DO_PBO.

*** Set PF-Status
    ME->SET_PF_STATUS( ).

**** Create Container and Grid
    ME->INIT_CONTAINER( ).
    ME->INIT_GRID( ).

*** Build Grid Data
    ME->REFRESH_GRID( ).

*** FModify Screen
    ME->INIT_VIS( ).
    ME->MODIFY_SCREEN( ).

  endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when C_UC_OK.
      ME->HANDLE_UC_OK( ).

    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).
  endcase.

endmethod.
  method HANDLE_DOUBLE_CLICK.

    check E_ROW-INDEX is not initial.

    try.
        ME->DO_USER_COMMAND( IF_UCOMM = C_UC_OK ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_CANCEL.

    leave to screen 0.

  endmethod.
  method HANDLE_UC_OK.

    data: LS_ORGDATA_GRID type ZVCXI_XCA_MWB_S_ORGDATA_GRID.
    data: LT_INDEX     type LVC_T_ROW.

***----------------------------------------------------------------------------
*** Get the selected rows from the ALV
    ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_INDEX ).

*** Get Match (or first if nothing has been selected)
    LS_ORGDATA_GRID = value #( ME->T_ORGDATA_GRID[ value #( LT_INDEX[ 1 ] default 1 ) ] optional ).
    check LS_ORGDATA_GRID is not initial.

***----------------------------------------------------------------------------
*** Buffer material in order to retrieve it later
    ME->R_CLMAT = LS_ORGDATA_GRID-R_CLMAT.

***----------------------------------------------------------------------------
*** Leave Screen
    leave to screen 0.

  endmethod.
  method INIT_CONTAINER.

    check ME->R_CONTAINER is not bound.

    create object ME->R_CONTAINER
      exporting
        CONTAINER_NAME              = '0100CC_GRID'
      exceptions
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5
        others                      = 6.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method INIT_GRID.

    check ME->R_GRID is not bound.

    create object ME->R_GRID
      exporting
        I_PARENT          = ME->R_CONTAINER
        I_APPL_EVENTS     = 'X'
      exceptions
        ERROR_CNTL_CREATE = 1
        ERROR_CNTL_INIT   = 2
        ERROR_CNTL_LINK   = 3
        ERROR_DP_CREATE   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
  method INIT_VIS.

    data: LS_FCAT         type LVC_S_FCAT,
          LS_ORGDATA_GRID type ZVCXI_XCA_MWB_S_ORGDATA_GRID.
    field-symbols: <S_FLVAL_GRID> type ANY,
                   <S_FLVAL_VIS>  type ANY.


    check ME->T_ORGDATA_GRID is not initial.
    ME->S_ORGDATA_VIS = ME->T_ORGDATA_GRID[ 1 ]-S_ORGDATA_VIS.

    loop at ME->T_FCAT into LS_FCAT.
      assign component LS_FCAT-FIELDNAME of structure ME->S_ORGDATA_VIS to <S_FLVAL_VIS>.
      check SY-SUBRC eq 0 and <S_FLVAL_VIS> is not initial.

      loop at ME->T_ORGDATA_GRID into LS_ORGDATA_GRID.
        assign component LS_FCAT-FIELDNAME of structure LS_ORGDATA_GRID to <S_FLVAL_GRID>.
        if SY-SUBRC is not initial or <S_FLVAL_GRID> ne <S_FLVAL_VIS>.
          clear <S_FLVAL_VIS>.
          exit.
        endif.
      endloop.
    endloop.

  endmethod.
  method MODIFY_SCREEN.

    field-symbols: <S_FLVAL> type ANY.


    loop at screen.
      assign component SUBSTRING_AFTER( VAL = SCREEN-NAME SUB = '-' ) of structure ME->S_ORGDATA_VIS to <S_FLVAL>.
      if SY-SUBRC eq 0 and <S_FLVAL> is initial.
        SCREEN-ACTIVE = 0.
      endif.

      modify screen.
    endloop.

  endmethod.
  method REFRESH_FIELDCAT.

    data: LS_FIRST        type ZVCXI_XCA_MWB_S_ORGDATA_GRID,
          LS_ORGDATA_GRID type ZVCXI_XCA_MWB_S_ORGDATA_GRID.
    field-symbols: <S_FCAT>  type LVC_S_FCAT,
                   <F_FIRST> type ANY,
                   <F_FLVAL> type ANY.


    refresh ME->T_FCAT.

    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        I_STRUCTURE_NAME       = C_TABNAME
      changing
        CT_FIELDCAT            = ME->T_FCAT
      exceptions
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        others                 = 3.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.


    loop at ME->T_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'R_CLMAT'.
          move 'X' to <S_FCAT>-TECH.

        when others.
***       Optimize columns
          move 'A' to <S_FCAT>-COL_OPT.

***       Only show Columns with different Values
          <S_FCAT>-NO_OUT = ABAP_TRUE.
          assign component <S_FCAT>-FIELDNAME of structure ME->T_ORGDATA_GRID[ 1 ] to <F_FIRST>.
          check SY-SUBRC eq 0.
          loop at ME->T_ORGDATA_GRID into LS_ORGDATA_GRID.
            assign component <S_FCAT>-FIELDNAME of structure LS_ORGDATA_GRID to <F_FLVAL>.
            if <F_FLVAL> ne <F_FIRST>.
              clear <S_FCAT>-NO_OUT.
              exit.
            endif.
          endloop.
      endcase.
    endloop.

  endmethod.
  method REFRESH_GRID.

***----------------------------------------------------------------------------
*** Refresh Field Catalog
    ME->REFRESH_FIELDCAT( ).
    check ME->R_GRID is bound.

***----------------------------------------------------------------------------
*** Refresh ALV Grid
    ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
      exporting
        IT_TOOLBAR_EXCLUDING          = value #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
        IS_LAYOUT                     = value #( ZEBRA    = ABAP_TRUE
                                                 SEL_MODE = 'B' )
      changing
        IT_FIELDCATALOG               = ME->T_FCAT
        IT_OUTTAB                     = ME->T_ORGDATA_GRID
      exceptions
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        others                        = 4 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

    set handler HANDLE_DOUBLE_CLICK for ME->R_GRID.

*** Mark first line as selected
    ME->R_GRID->SET_SELECTED_ROWS( IT_INDEX_ROWS = value #( ( INDEX = '1' ) ) ).

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_XCA_MWB_POPUP_ORGD'.

  endmethod.
  method START_POPUP.

    data: LR_POPUP_ORGDATA  type ref to ZCL_VCXI_XCA_MWB_POPUP_ORGDATA.


***----------------------------------------------------------------------------
*** Create Material List Instance
    create object LR_POPUP_ORGDATA
      exporting
        IT_CLMAT = IT_CLMAT.

    check LR_POPUP_ORGDATA is bound.

***----------------------------------------------------------------------------
*** Start Popup
    call function 'ZVCXI_XCA_MWB_POPUP_ORGD_START'
      exporting
        IR_POPUP_ORGDATA = LR_POPUP_ORGDATA.

    RR_CLMAT = LR_POPUP_ORGDATA->R_CLMAT.

*** Free the Popup
    LR_POPUP_ORGDATA->DO_FREE( ).

  endmethod.
