
class ZCL_VCXI_P0SSC_UI_PRSTY definition
  public
  create public .

public section.

  constants C_UC_CD type SYUCOMM value 'CD'. "#EC NOTEXT
  data F_ACTIVE_TAB type STRING .
  data F_CURSOR type SCRFNAME .
  data R_PRSTY type ref to ZCL_VCXI_P0SSC_PRSTY .
  data S_DYNP type /VCXI/CKX_S_DYNP_KEY .
  data S_PRSTY_TAB type ZVCXI_P0SSC_S_TAB_DESCR .
  data S_PRSTY_VIS type ZVCXI_P0SSC_S_PRSTY_VIS .

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IF_TPRST type ZVCXI_P0SS_TPRST
      !IF_PRSTY type ZVCXI_P0SS_PRSTY
      !IF_CHANGE type ABAP_BOOL default ABAP_FALSE
    raising
      /VCXI/CX_CKX .
  methods DO_MODIFY_SCREEN
    importing
      !IF_REPID type SYREPID
      !IF_DYNNR type SYDYNNR
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_PRSTY_VIS
    importing
      !IS_PRSTY_VIS type ZVCXI_P0SSC_S_PRSTY_VIS
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods REOPEN_PRSTY
    importing
      !IF_CHANGE type ABAP_BOOL default 'X'
      !IF_PRSTY type ZVCXI_P0SS_PRSTY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .
  class-methods START_UI
    importing
      !IF_TPRST type ZVCXI_P0SS_TPRST
      !IF_PRSTY type ZVCXI_P0SS_PRSTY
      !IF_CHANGE type ABAP_BOOL default ABAP_FALSE
      !IF_ACTIVE_TAB type STRING optional
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_CHECK_S type SYUCOMM value 'CHECK_S'. "#EC NOTEXT
  constants C_UC_SAVE type SYUCOMM value 'SAVE'. "#EC NOTEXT
  constants C_UC_TOGGLE type SYUCOMM value 'TOGGLE'. "#EC NOTEXT
  data R_PART_DELEM type ref to ZCL_VCXI_P0SSC_PS_PART_DELEM .
  data R_PART_FOLDM type ref to ZCL_VCXI_P0SSC_PS_PART_FOLDM .
  data R_PART_JOITY type ref to ZCL_VCXI_P0SSC_PS_PART_JOITY .
  data R_PART_PTYPE type ref to ZCL_VCXI_P0SSC_PS_PART_PTYPE .
  data R_PART_SCORE type ref to ZCL_VCXI_P0SSC_PS_PART_SCORE .
  data R_PART_MANTU type ref to ZCL_VCXI_P0SSC_PS_PART_MANTU .

  methods CHECK_FOR_CHANGES
    returning
      value(RF_CANCELED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FCUSD
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SAVE
    raising
      /VCXI/CX_CKX .
  methods INIT_DELEM
    raising
      /VCXI/CX_CKX .
  methods INIT_FOLDM
    raising
      /VCXI/CX_CKX .
  methods INIT_JOITY
    raising
      /VCXI/CX_CKX .
  methods INIT_MANTU
    raising
      /VCXI/CX_CKX .
  methods INIT_PTYPE
    raising
      /VCXI/CX_CKX .
  methods INIT_SCORE
    raising
      /VCXI/CX_CKX .
  methods INIT_TAB_LIST
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_PFSTATUS
    raising
      /VCXI/CX_CKX .
  methods SET_TITLE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SSC_UI_PRSTY definition
class ZCL_VCXI_P0SSC_UI_PRSTY implementation.
method CHECK_FOR_CHANGES.

  data:  LF_ANSWER          type C.

*** If Changes are allowed
  if ME->R_PRSTY->F_CHANGED eq ABAP_TRUE.
    call function 'POPUP_TO_CONFIRM'
      exporting
        TEXT_QUESTION  = 'Changed data will be lost. Do you want to save?'(Q02)
      importing
        ANSWER         = LF_ANSWER
      exceptions
        TEXT_NOT_FOUND = 1
        others         = 2.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

    case LF_ANSWER.
      when '1'.
***     Save and than go on
        ME->HANDLE_UC_SAVE( ).
        move ABAP_FALSE to RF_CANCELED.
      when '2'.
***     Do nothing but go on
        move ABAP_FALSE to RF_CANCELED.
      when 'A'.
***     Cancel
        move ABAP_TRUE to RF_CANCELED.
    endcase.
  endif.

endmethod.
method CONSTRUCTOR.

  data:  LF_GUID    type        /VCXI/CKX_GUID.
  data:  LS_TPRST_T type        ZVCXI_P0S_TC300T.
  data:  LR_CX_CKX  type ref to /VCXI/CX_CKX.

***--------------------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_P0SSC_PRSTY=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_P0SSC_PRSTY=>C_ACTVT_DISPLAY
                                    IF_ID    = IF_TPRST ).

*** Set Product Style Type
  select single * from ZVCXI_P0S_TC300
  into corresponding fields of ME->S_PRSTY_VIS
  where TPRST = IF_TPRST.

  select single * from ZVCXI_P0S_TC300T
  into corresponding fields of LS_TPRST_T
  where TPRST = IF_TPRST
    and LANGU = SY-LANGU.

  if SY-SUBRC = 0.
    move LS_TPRST_T-DESCR to ME->S_PRSTY_VIS-TPRST_DESCR.
  endif.

*** Get Instance
  LF_GUID = ZCL_VCXI_P0SSC_PRSTY=>ENCRYPT_GUID( IF_TPRST = ME->S_PRSTY_VIS-TPRST
                                                IF_PRSTY = IF_PRSTY ).
  ME->R_PRSTY ?= ZCL_VCXI_P0SSC_PRSTY=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
  check ME->R_PRSTY is bound.

*** Change Mode -> Lock Instance
  if IF_CHANGE eq ABAP_TRUE.
    try.
        ME->R_PRSTY->DO_LOCK( ).
      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'I' ).
    endtry.
  endif.

*** Bind UI Customizing
  call function 'ZVCXI_P0SSC_UI_PRSTY_BIND'
    exporting
      IR_UI_PRSTY = ME
    importing
      ES_DYNP     = ME->S_DYNP.

  ME->INIT_PTYPE( ).
  ME->INIT_JOITY( ).
  ME->INIT_SCORE( ).
  ME->INIT_FOLDM( ).
  ME->INIT_DELEM( ).
  ME->INIT_MANTU( ).

endmethod.
method DO_FREE.

  ME->R_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_FREE ).
  free: ME->R_PRSTY.

***------------------------------------------------------------------
*** Free Product Type Part
  if ME->R_PART_PTYPE is bound.
    ME->R_PART_PTYPE->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Joint Type Part
  if ME->R_PART_JOITY is bound.
    ME->R_PART_JOITY->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Score Part
  if ME->R_PART_SCORE is bound.
    ME->R_PART_SCORE->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Folding Measurement Part
  if ME->R_PART_FOLDM is bound.
    ME->R_PART_FOLDM->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Default Element Part
  if ME->R_PART_DELEM is bound.
    ME->R_PART_DELEM->DO_FREE( ).
  endif.

***------------------------------------------------------------------
*** Free Manual Take-up Part
  if ME->R_PART_MANTU is bound.
    ME->R_PART_MANTU->DO_FREE( ).
  endif.

endmethod.
method DO_MODIFY_SCREEN.

***------------------------------------------------------------------------------------------------
*** Modify Screen
  loop at screen.
    if ME->R_PRSTY->IS_LOCKED( ) ne ABAP_TRUE.
      move 0 to SCREEN-INPUT.
      move 0 to SCREEN-REQUIRED.
    endif.

*** Hide Product Type Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_P0SSC_S_PRSTY_VIS-STRIPDESCR_PTYPE'.
      if ME->R_PART_PTYPE is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Joint Type Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_P0SSC_S_PRSTY_VIS-STRIPDESCR_JOITY'.
      if ME->R_PART_JOITY is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Score Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_P0SSC_S_PRSTY_VIS-STRIPDESCR_SCORE'.
      if ME->R_PART_SCORE is not bound or
         ME->S_PRSTY_VIS-FCUSD is not initial.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Folding Measurement Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_P0SSC_S_PRSTY_VIS-STRIPDESCR_FOLDM'.
      if ME->R_PART_FOLDM is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Default Element Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_P0SSC_S_PRSTY_VIS-STRIPDESCR_DELEM'.
      if ME->R_PART_DELEM is not bound.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

*** Hide Manual Take-up Tab when not bound
    if SCREEN-NAME eq 'ZVCXI_P0SSC_S_PRSTY_VIS-STRIPDESCR_MANTU'.
      if ME->R_PART_MANTU is not bound or
         ME->S_PRSTY_VIS-FCUSD is not initial.
        move 1 to SCREEN-INVISIBLE.
      endif.
      move 1 to SCREEN-INPUT.
    endif.

    modify screen.
  endloop.

endmethod.
method DO_PBO.

  ME->SET_PFSTATUS( ).
  ME->SET_TITLE( ).

*** Check if Product Style Object is bound
  check ME->R_PRSTY is bound.

*** initialze Visualization
  ME->INIT_VIS( ).
  ME->INIT_TAB_LIST( ).

***----------------------------------------------------------------------------
*** Active Tab
  if ( ME->R_PART_PTYPE is not bound and ME->F_ACTIVE_TAB eq '0100STRIP_PTYPE' ) or
     ( ME->R_PART_JOITY is not bound and ME->F_ACTIVE_TAB eq '0100STRIP_JOITY' ) or
     ( ME->R_PART_SCORE is not bound and ME->F_ACTIVE_TAB eq '0100STRIP_SCORE' ) or
     ( ME->R_PART_FOLDM is not bound and ME->F_ACTIVE_TAB eq '0100STRIP_FOLDM' ) or
     ( ME->R_PART_DELEM is not bound and ME->F_ACTIVE_TAB eq '0100STRIP_DELEM' ) or
     ( ME->R_PART_MANTU is not bound and ME->F_ACTIVE_TAB eq '0100STRIP_MANTU' ).
    clear ME->F_ACTIVE_TAB.
  endif.

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
method DO_UPDATE_PRSTY_VIS.

*** Set Product Style Data
  if ME->S_PRSTY_VIS-PRSTY_DESCR ne IS_PRSTY_VIS-PRSTY_DESCR.
    ME->R_PRSTY->SET_DESCR( IF_DESCR = IS_PRSTY_VIS-PRSTY_DESCR ).
  endif.

  if ME->S_PRSTY_VIS-FCUSD ne IS_PRSTY_VIS-FCUSD.
    ME->R_PRSTY->SET_FCUSD( IF_FCUSD = IS_PRSTY_VIS-FCUSD ).
  endif.

endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when 'BACK' or 'CANCEL'.
      if ME->CHECK_FOR_CHANGES( ) eq ABAP_FALSE.
        ME->DO_FREE( ).
        leave to screen 0.
      endif.

    when 'EXIT'.
      if ME->CHECK_FOR_CHANGES( ) eq ABAP_FALSE.
        ME->DO_FREE( ).
        leave to screen 0.
      endif.

    when C_UC_CD.
      ME->HANDLE_UC_CD( ).

    when 'SAVE'.
      ME->HANDLE_UC_SAVE( ).


    when 'TOGGLE'.
      if ME->R_PRSTY->IS_LOCKED( ) eq ABAP_TRUE.
***     Check for changes and ask user to save them
        check ME->CHECK_FOR_CHANGES( ) ne ABAP_TRUE.
        ME->R_PRSTY->DO_UNLOCK( ).
        ME->REOPEN_PRSTY( IF_PRSTY  = ME->S_PRSTY_VIS-PRSTY
                          IF_CHANGE = ABAP_FALSE ).
      else.
        ME->REOPEN_PRSTY( IF_PRSTY  = ME->S_PRSTY_VIS-PRSTY
                          IF_CHANGE = ABAP_TRUE ).
      endif.

    when 'CHECK_S'.
      ME->R_PRSTY->HANDLE_ACTION( IF_FCODE = IF_UCOMM ).

    when 'FCUSD'.
      ME->HANDLE_UC_FCUSD( ).

    when '0100STRIP_PTYPE' or
         '0100STRIP_JOITY' or
         '0100STRIP_SCORE' or
         '0100STRIP_FOLDM' or
         '0100STRIP_DELEM' or
         '0100STRIP_MANTU'.
      move IF_UCOMM to ME->F_ACTIVE_TAB.

    when others.
      if ME->R_PART_PTYPE is bound.
        ME->R_PART_PTYPE->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_JOITY is bound.
        ME->R_PART_JOITY->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_SCORE is bound.
        ME->R_PART_SCORE->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_FOLDM is bound.
        ME->R_PART_FOLDM->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_DELEM is bound.
        ME->R_PART_DELEM->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.
      if ME->R_PART_MANTU is bound.
        ME->R_PART_MANTU->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).
      endif.

  endcase.

endmethod.
method HANDLE_UC_CD.

  data:  LF_CDOCL                type CDHDR-OBJECTCLAS,
         LF_CDOID                type CDHDR-OBJECTID,
         LF_APPLICATIONID        type REPID,
         LF_MSGV2                type SYMSGV.
  data:  LT_CDRED_STR            type CDRED_STR_TAB,
         LT_EDITPOS_WITH_HEADER  type standard table of CDRED.
  data:  LR_OBJECT_CD            type ref to /VCXI/IF_CKX_OBJECT_CD.

***----------------------------------------------------------------------------
*** Get Change Document Info
  try.
      move ME->R_PRSTY ?to LR_OBJECT_CD.
      check LR_OBJECT_CD is bound.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

  LR_OBJECT_CD->GET_INFO( importing EF_CDOCL = LF_CDOCL
                                    EF_CDOID = LF_CDOID ).


***----------------------------------------------------------------------------
*** Read Change Documents
  call function 'CHANGEDOCUMENT_READ'
    exporting
      OBJECTCLASS       = LF_CDOCL
      OBJECTID          = LF_CDOID
    importing
      ET_CDRED_STR      = LT_CDRED_STR[]
    tables
      EDITPOS           = LT_EDITPOS_WITH_HEADER
    exceptions
      NO_POSITION_FOUND = 1
      others            = 2.
  case SY-SUBRC.
    when 0.
***   Display the Records
      LF_APPLICATIONID = LF_CDOCL.
      call function 'CHANGEDOCUMENT_DISPLAY'
        exporting
          I_APPLICATIONID  = LF_APPLICATIONID
          FLG_AUTOCONDENSE = 'X'
          I_OBJECTCLAS     = LF_CDOCL
          IT_CDRED_STR     = LT_CDRED_STR[]
        tables
          I_CDRED          = LT_EDITPOS_WITH_HEADER.
    when 1.
***   No change document positions found
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '649'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.
    when 2.
***   Error in change document creation/analysis: & &
      move SY-SUBRC to LF_MSGV2.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'I'
          F_MSGID = 'CD'
          F_MSGNO = '327'
          F_MSGV1 = 'SY-SUBRC'
          F_MSGV2 = LF_MSGV2.

  endcase.

endmethod.
method HANDLE_UC_FCUSD.

  data:  LF_ANSWER          type C.

  check ME->S_PRSTY_VIS-FCUSD      eq ABAP_FALSE  and
      ( ME->R_PRSTY->T_PRSTY_SCORE is not initial or
        ME->R_PRSTY->T_PRSTY_DELEM is not initial    ).

*** Check if Custom Design is
  call function 'POPUP_TO_CONFIRM'
    exporting
      TEXT_QUESTION  = 'Score and Default Element Info will be deleted. Do you want to switch to Custom Design?'(Q01)
    importing
      ANSWER         = LF_ANSWER
    exceptions
      TEXT_NOT_FOUND = 1
      others         = 2.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

  case LF_ANSWER.
    when '1'.
***   Switch to First Tab Product Type
      move '0100STRIP_PTYPE' to ME->F_ACTIVE_TAB.
***     Delete and go on
        ME->R_PRSTY->DELETE_SCORE_ALL( ).
        ME->R_PRSTY->DELETE_DELEM_ALL( ).
        ME->R_PRSTY->DELETE_MANTU_ALL( ).
    when others.
***     Switch back
      ME->R_PRSTY->SET_FCUSD( IF_FCUSD = ABAP_FALSE ).
  endcase.

endmethod.
method HANDLE_UC_SAVE.

  data: LR_CX_CKX type ref to /VCXI/CX_CKX.

*** Do Save
  try.
      ME->R_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_CHECK ).
    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'S' ).
  endtry.
  ME->R_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_SAVE ).

endmethod.
method INIT_DELEM.

  try.

      create object ME->R_PART_DELEM
        exporting
          IR_PRSTY = ME->R_PRSTY.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_FOLDM.

  try.

      create object ME->R_PART_FOLDM
        exporting
          IR_PRSTY = ME->R_PRSTY.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_JOITY.

  try.

      create object ME->R_PART_JOITY
        exporting
          IR_PRSTY = ME->R_PRSTY.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_MANTU.

  try.

      create object ME->R_PART_MANTU
        exporting
          IR_PRSTY = ME->R_PRSTY.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_PTYPE.

  try.

      create object ME->R_PART_PTYPE
        exporting
          IR_PRSTY = ME->R_PRSTY.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_SCORE.

  try.

      create object ME->R_PART_SCORE
        exporting
          IR_PRSTY = ME->R_PRSTY.

    catch CX_SY_MOVE_CAST_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endtry.

endmethod.
method INIT_TAB_LIST.

***----------------------------------------------------------------------------
*** Initialize TabStrip Description and Refresh
  if ME->R_PART_PTYPE is bound.
    ME->S_PRSTY_VIS-STRIPDESCR_PTYPE = ME->R_PART_PTYPE->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_PTYPE->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_JOITY is bound.
    ME->S_PRSTY_VIS-STRIPDESCR_JOITY = ME->R_PART_JOITY->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_JOITY->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_SCORE is bound.
    ME->S_PRSTY_VIS-STRIPDESCR_SCORE = ME->R_PART_SCORE->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_SCORE->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_FOLDM is bound.
    ME->S_PRSTY_VIS-STRIPDESCR_FOLDM = ME->R_PART_FOLDM->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_FOLDM->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_DELEM is bound.
    ME->S_PRSTY_VIS-STRIPDESCR_DELEM = ME->R_PART_DELEM->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_DELEM->F_REFRESH_REQUESTED.
  endif.
  if ME->R_PART_MANTU is bound.
    ME->S_PRSTY_VIS-STRIPDESCR_MANTU = ME->R_PART_MANTU->GET_STRIPDESCR( ).
    move ABAP_TRUE to ME->R_PART_MANTU->F_REFRESH_REQUESTED.
  endif.
endmethod.
method INIT_VIS.

  data: LS_DESCR type /VCXI/CKX_S_DESCR.

*** Get Product Style Definition Info
  move-corresponding ME->R_PRSTY->S_PRSTY to ME->S_PRSTY_VIS.
  set parameter id 'ZVCXI_P0SS_PRSTY' field ME->S_PRSTY_VIS-PRSTY.
  set parameter id 'ZVCXI_P0SS_TPRST' field ME->S_PRSTY_VIS-TPRST.

  read table ME->R_PRSTY->T_DESCR
    into LS_DESCR
    with key LANGU = SY-LANGU.

  check SY-SUBRC = 0.

  move LS_DESCR-DESCR to ME->S_PRSTY_VIS-PRSTY_DESCR.

endmethod.
method REOPEN_PRSTY.

  data:  LF_GUID     type        /VCXI/CKX_GUID.
  data:  LR_CX_CKX   type ref to /VCXI/CX_CKX.

*** Do Free
  ME->DO_FREE( ).

*** Get Instance
  LF_GUID = ZCL_VCXI_P0SSC_PRSTY=>ENCRYPT_GUID( IF_TPRST = ME->S_PRSTY_VIS-TPRST
                                                IF_PRSTY = IF_PRSTY ).
  ME->R_PRSTY ?= ZCL_VCXI_P0SSC_PRSTY=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
  check ME->R_PRSTY is bound.

*** Change Mode -> Lock Instance
  if IF_CHANGE eq ABAP_TRUE.
    try.
        ME->R_PRSTY->DO_LOCK( ).
      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( IF_TYPE = 'I' ).
    endtry.
  endif.

  ME->INIT_PTYPE( ).
  ME->INIT_JOITY( ).
  ME->INIT_SCORE( ).
  ME->INIT_FOLDM( ).
  ME->INIT_DELEM( ).
  ME->INIT_MANTU( ).

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method SET_PFSTATUS.

  data:  LT_EXCLUDE type standard table of SYUCOMM.

***----------------------------------------------------------------------------
*** Exclude SAVE and When no Detail screen or nor changes
  if ME->R_PRSTY            is not bound  or
   ( ME->R_PRSTY            is bound      and
     ME->R_PRSTY->F_CHANGED ne ABAP_TRUE ).
    append C_UC_SAVE to LT_EXCLUDE.
  endif.

*** If no Object, don't allow toggle (not changeable)
  if ME->R_PRSTY     is not bound   or
     ME->R_PRSTY->F_CCCORACTIV eq 2.
    append C_UC_TOGGLE to LT_EXCLUDE.
  endif.

*** If no Object, don't allow 'Check Current'
  if ME->R_PRSTY is not bound.
    append C_UC_CHECK_S to LT_EXCLUDE.
  endif.

***----------------------------------------------------------------------------
*** Set PF-Status
    set pf-status '0100' of program ME->S_DYNP-REPID excluding LT_EXCLUDE.

endmethod.
method SET_TITLE.

  data:  LR_OBJECT_LOCKING type ref to /VCXI/IF_CKX_OBJECT_LOCKING.

  move ME->R_PRSTY ?to LR_OBJECT_LOCKING.

  if LR_OBJECT_LOCKING->IS_LOCKED( ) eq ABAP_TRUE.
    set titlebar '0100_EDIT' of program ME->S_DYNP-REPID.
  else.
    set titlebar '0100_DISP' of program ME->S_DYNP-REPID.
  endif.

endmethod.
method START_UI.

  data:  LR_UI_PRSTY type ref to ZCL_VCXI_P0SSC_UI_PRSTY.

*** Create Instance of Product Style Customizing
  create object LR_UI_PRSTY
    exporting
      IF_TPRST  = IF_TPRST
      IF_PRSTY  = IF_PRSTY
      IF_CHANGE = IF_CHANGE.

  if IF_ACTIVE_TAB is supplied.
    move IF_ACTIVE_TAB to LR_UI_PRSTY->F_ACTIVE_TAB.
  endif.

  call function 'ZVCXI_P0SSC_UI_PRSTY_START'.

endmethod.
