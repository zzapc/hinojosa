
class ZCL_VCXI_PFSS_UI_MS_RCUT definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.
  type-pools VRM .

  data F_DYNNR_SUBSC type DYNNR read-only .
  data S_MS_RCUT_VIS type ZVCXI_PFSS_S_MS_RCUT_VIS read-only .
  data F_CURSOR type SCRFNAME .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods UPDATE_BY_MS_RCUT_VIS
    importing
      !IS_MS_RCUT_VIS type ZVCXI_PFSS_S_MS_RCUT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_DYNNR_INITIAL type DYNNR value '9999'. "#EC NOTEXT
  constants C_DYNNR_PSCALE type DYNNR value '0110'. "#EC NOTEXT
  data R_PR_MS_RCUT type ref to ZCL_VCXI_PFSS_PR_MS_RCUT .
  data R_GRID_PSCALE type ref to ZCL_VCXI_XCS_GRID_PSCALE .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PFSS_UI_MS_RCUT definition
class ZCL_VCXI_PFSS_UI_MS_RCUT implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_PFSS_UI_MS_RCUT_BIND'
    exporting
      IR_UI_MS_RCUT = ME
    importing
      ES_DYNP       = ME->S_DYNP.


*** Create Grid for Price Scale
  create object ME->R_GRID_PSCALE
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0110CC_PSCALE'.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_MS_RCUT.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class doesn't work together with PR ABAP Class
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DEACTIVATE.

  SUPER->DEACTIVATE( ).

  if ME->R_GRID_PSCALE is bound.
    ME->R_GRID_PSCALE->DO_FREE( ).
    clear ME->R_GRID_PSCALE.
  endif.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

      SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                               IF_DYNNR = IF_DYNNR ).

      LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
      LF_INUSE  = ME->R_GATE->IS_INUSE( ).

      loop at screen.
***     Set Reel Fields to no Input if we have no DUMMY Material
        if ME->R_PR_MS_RCUT->IS_DUMMY( ) eq ABAP_FALSE and
           SCREEN-GROUP1                 eq 'STO'.
          move 0 to SCREEN-INPUT.
        endif.

***     Set Purchase Flag to No Input for Dummy
        if ME->R_PR_MS_RCUT->IS_DUMMY( ) eq ABAP_TRUE and
           SCREEN-GROUP1                 eq 'FPU'.
          move 0 to SCREEN-INPUT.
        endif.

***     Set Purchased Field to not visible if we have no Puchased Material
        if ME->R_PR_MS_RCUT->GET_PURCH( ) eq ABAP_FALSE and
           SCREEN-GROUP1                   eq 'PUR'.
          move 1 to SCREEN-INVISIBLE.
          move 0 to SCREEN-ACTIVE.
          move 0 to SCREEN-INPUT.
        endif.

        modify screen.
      endloop.

***     Modify Screen using DynamicVC
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

      loop at screen.
***     Set all Fields to no Input
        if LF_LOCKED ne ABAP_TRUE or
           LF_INUSE  ne ABAP_TRUE.
          move 0 to SCREEN-INPUT.
        endif.
        modify screen.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Set Cursor
  ME->SET_CURSOR( ).

*** Set right subscreen
  if ME->R_PR_MS_RCUT->GET_PURCH( ) eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
    move C_DYNNR_PSCALE to ME->F_DYNNR_SUBSC.

*** Refresh Grid
    if ME->R_GRID_PSCALE is bound.
      if ME->R_GRID_PSCALE->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_PSCALE->F_REFRESH_REQ.

      endif.
      ME->R_GRID_PSCALE->REFRESH_GRID( ).
    endif.

  else.
    move C_DYNNR_INITIAL to ME->F_DYNNR_SUBSC.
  endif.

*** Initialize Visualization Structure
  ME->INIT_VIS( ).

endmethod.
method DO_USER_COMMAND.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_PSCALE is bound.
    ME->R_GRID_PSCALE->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_MS_RCUT.

endmethod.
method INIT_VIS.

  data:  LS_GRAMM          type ZVCXI_P0SS_S_GRAMM,
         LS_REWID          type ZVCXI_P0SS_S_REWID,
         LS_SIDRU          type ZVCXI_P0SS_S_SIDRU,
         LS_CALIP          type ZVCXI_P0SS_S_CALIP.

  clear: ME->S_MS_RCUT_VIS.
  check ME->R_PR_MS_RCUT is bound.

*** Get Material Number
  move ME->R_PR_MS_RCUT->GET_MATNR( )        to ME->S_MS_RCUT_VIS-MATNR.
  move ME->R_PR_MS_RCUT->GET_MATNR_DESCR( )  to ME->S_MS_RCUT_VIS-MATNR_DESCR.

*** Get Vendor Number
  move ME->R_PR_MS_RCUT->GET_LIFNR( )        to ME->S_MS_RCUT_VIS-LIFNR.
  move ME->R_PR_MS_RCUT->GET_LIFNR_DESCR( )  to ME->S_MS_RCUT_VIS-LIFNR_DESCR.

  move ME->R_PR_MS_RCUT->GET_PURCH( )        to ME->S_MS_RCUT_VIS-PURCH.

*** Get Paper Grade
  move ME->R_PR_MS_RCUT->GET_PAPGR( )        to ME->S_MS_RCUT_VIS-PAPGR.

*** Get Grammage
  move ME->R_PR_MS_RCUT->GET_GRAMM( )        to LS_GRAMM.
  move-corresponding LS_GRAMM                to ME->S_MS_RCUT_VIS.

*** Get Reel Width
  move ME->R_PR_MS_RCUT->GET_REWID( )        to LS_REWID.
  move-corresponding LS_REWID                to ME->S_MS_RCUT_VIS.

*** Get Side Run
  move ME->R_PR_MS_RCUT->GET_SIDRU( )        to LS_SIDRU.
  move-corresponding LS_SIDRU                to ME->S_MS_RCUT_VIS.

*** Get Caliper
  move ME->R_PR_MS_RCUT->GET_CALIP( )        to LS_CALIP.
  move-corresponding LS_CALIP                to ME->S_MS_RCUT_VIS.

*** Get Flag - Price Scael modified
  move ME->R_PR_MS_RCUT->GET_FPSMO( )        to ME->S_MS_RCUT_VIS-FPSMO.

endmethod.                    "INIT_VIS
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method UPDATE_BY_MS_RCUT_VIS.

  data:  LS_GRAMM          type ZVCXI_P0SS_S_GRAMM,
         LS_REWID          type ZVCXI_P0SS_S_REWID,
         LS_CALIP          type ZVCXI_P0SS_S_CALIP.

  check ME->R_PR_MS_RCUT is bound.

*** Set Material Number
  if ME->S_MS_RCUT_VIS-MATNR ne IS_MS_RCUT_VIS-MATNR.
    ME->R_PR_MS_RCUT->SET_MATNR( IF_MATNR = IS_MS_RCUT_VIS-MATNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Procurement Option
  if ME->S_MS_RCUT_VIS-PURCH ne IS_MS_RCUT_VIS-PURCH.
    ME->R_PR_MS_RCUT->SET_PURCH( IF_PURCH = IS_MS_RCUT_VIS-PURCH
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Vendor Number
  if ME->S_MS_RCUT_VIS-LIFNR ne IS_MS_RCUT_VIS-LIFNR.
    ME->R_PR_MS_RCUT->SET_LIFNR( IF_LIFNR = IS_MS_RCUT_VIS-LIFNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Paper Grade
  if ME->S_MS_RCUT_VIS-PAPGR ne IS_MS_RCUT_VIS-PAPGR.
    ME->R_PR_MS_RCUT->SET_PAPGR( IF_PAPGR = IS_MS_RCUT_VIS-PAPGR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Grammage
  if ME->S_MS_RCUT_VIS-GRAMM ne IS_MS_RCUT_VIS-GRAMM.
    move-corresponding IS_MS_RCUT_VIS to LS_GRAMM.
    ME->R_PR_MS_RCUT->SET_GRAMM( IS_GRAMM = LS_GRAMM
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Reel Width
  if ME->S_MS_RCUT_VIS-REWID ne IS_MS_RCUT_VIS-REWID.
    move-corresponding IS_MS_RCUT_VIS to LS_REWID.
    ME->R_PR_MS_RCUT->SET_REWID( IS_REWID = LS_REWID
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Caliper
  if ME->S_MS_RCUT_VIS-CALIP ne IS_MS_RCUT_VIS-CALIP.
    move-corresponding IS_MS_RCUT_VIS to LS_CALIP.
    ME->R_PR_MS_RCUT->SET_CALIP( IS_CALIP = LS_CALIP
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Flag - Price Scale modified
  if ME->S_MS_RCUT_VIS-FPSMO ne IS_MS_RCUT_VIS-FPSMO.
    ME->R_PR_MS_RCUT->SET_FPSMO( IF_FPSMO = IS_MS_RCUT_VIS-FPSMO
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
