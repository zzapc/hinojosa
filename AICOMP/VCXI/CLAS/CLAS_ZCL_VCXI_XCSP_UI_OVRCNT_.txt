
class ZCL_VCXI_XCSP_UI_OVRCNT definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_OVRCNT_VIS type ZVCXI_XCSP_S_OVRCNT_VIS .
  data F_CURSOR type SCRFNAME .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_OVRCNT_VIS
    importing
      !IS_OVRCNT_VIS type ZVCXI_XCSP_S_OVRCNT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_OVRCNT type ref to ZCL_VCXI_XCSP_PR_OVRCNT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSP_UI_OVRCNT definition
class ZCL_VCXI_XCSP_UI_OVRCNT implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_XCSP_UI_OVRCNT_BIND'
    exporting
      IR_UI_OVRCNT = ME
    importing
      ES_DYNP      = ME->S_DYNP.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign the RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_OVRCNT.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
***     Control by Radiobutton
        loop at screen.
          case SCREEN-NAME.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-ORSTI'.
              if ME->S_OVRCNT_VIS-FLAG_ORSTI ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-OASTI'.
              if ME->S_OVRCNT_VIS-FLAG_OASTI ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'ZVCXI_XCSP_S_OVRCNT_VIS-ORSWA'.
              if ME->S_OVRCNT_VIS-FLAG_ORSWA ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-OASWA'.
              if ME->S_OVRCNT_VIS-FLAG_OASWA ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'ZVCXI_XCSP_S_OVRCNT_VIS-ORRSR'.
              if ME->S_OVRCNT_VIS-FLAG_ORRSR ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-OARSR' or
                 'ZVCXI_XCSP_S_OVRCNT_VIS-OARST'.
              if ME->S_OVRCNT_VIS-FLAG_OARS ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'ZVCXI_XCSP_S_OVRCNT_VIS-ORRSF'.
              if ME->S_OVRCNT_VIS-FLAG_ORRSF ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-OARSF'.
              if ME->S_OVRCNT_VIS-FLAG_OARSF ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'ZVCXI_XCSP_S_OVRCNT_VIS-ORRWF'.
              if ME->S_OVRCNT_VIS-FLAG_ORRWF ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-OARWF'.
              if ME->S_OVRCNT_VIS-FLAG_OARWF ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

            when 'ZVCXI_XCSP_S_OVRCNT_VIS-ORTTI'.
              if ME->S_OVRCNT_VIS-FLAG_ORTTI ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
            when 'ZVCXI_XCSP_S_OVRCNT_VIS-OATTI'.
              if ME->S_OVRCNT_VIS-FLAG_OATTI ne ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.

          endcase.
          modify screen.
        endloop.

***----------------------------------------------------------------------------
***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Check if the PR Class is bound
  check ME->R_PR_OVRCNT is bound.

  ME->INIT_VIS( ).

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
method DO_UPDATE_OVRCNT_VIS.

***----------------------------------------------------------------------------
*** Setup Time
  case ABAP_TRUE.
    when IS_OVRCNT_VIS-FLAG_ORSTI.
      ME->R_PR_OVRCNT->SET_ORSTI( IS_ORSTI = IS_OVRCNT_VIS-S_ORSTI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      ME->R_PR_OVRCNT->SET_OASTI( IF_SETBY = SPACE ).

    when IS_OVRCNT_VIS-FLAG_OASTI.
      ME->R_PR_OVRCNT->SET_ORSTI( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OASTI( IS_OASTI = IS_OVRCNT_VIS-S_OASTI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    when IS_OVRCNT_VIS-FLAG_ONSTI.
      ME->R_PR_OVRCNT->SET_ORSTI( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OASTI( IF_SETBY = SPACE ).
  endcase.

*** Setup Waste
  case ABAP_TRUE.
    when IS_OVRCNT_VIS-FLAG_ORSWA.
      ME->R_PR_OVRCNT->SET_ORSWA( IS_ORSWA = IS_OVRCNT_VIS-S_ORSWA
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      ME->R_PR_OVRCNT->SET_OASWA( IF_SETBY = SPACE ).

    when IS_OVRCNT_VIS-FLAG_OASWA.
      ME->R_PR_OVRCNT->SET_ORSWA( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OASWA( IS_OASWA = IS_OVRCNT_VIS-S_OASWA
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    when IS_OVRCNT_VIS-FLAG_ONSWA.
      ME->R_PR_OVRCNT->SET_ORSWA( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OASWA( IF_SETBY = SPACE ).
  endcase.


***----------------------------------------------------------------------------
*** Run Speed
  case ABAP_TRUE.
    when IS_OVRCNT_VIS-FLAG_ORRSR.
      ME->R_PR_OVRCNT->SET_ORRSR( IS_ORRSR = IS_OVRCNT_VIS-S_ORRSR
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      ME->R_PR_OVRCNT->SET_OARS(  IF_SETBY = SPACE ).

    when IS_OVRCNT_VIS-FLAG_OARS.
      ME->R_PR_OVRCNT->SET_ORRSR( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OARS(  IS_OARS  = IS_OVRCNT_VIS-S_OARS
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    when IS_OVRCNT_VIS-FLAG_ONRS.
      ME->R_PR_OVRCNT->SET_ORRSR( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OARS(  IF_SETBY = SPACE ).
  endcase.

*** Run Slowdown Factor
  case ABAP_TRUE.
    when IS_OVRCNT_VIS-FLAG_ORRSF.
      ME->R_PR_OVRCNT->SET_ORRSF( IS_ORRSF = IS_OVRCNT_VIS-S_ORRSF
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      ME->R_PR_OVRCNT->SET_OARSF( IF_SETBY = SPACE ).

    when IS_OVRCNT_VIS-FLAG_OARSF.
      ME->R_PR_OVRCNT->SET_ORRSF( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OARSF( IS_OARSF = IS_OVRCNT_VIS-S_OARSF
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    when IS_OVRCNT_VIS-FLAG_ONRSF.
      ME->R_PR_OVRCNT->SET_ORRSF( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OARSF( IF_SETBY = SPACE ).
  endcase.

*** Run Waste Factor
  case ABAP_TRUE.
    when IS_OVRCNT_VIS-FLAG_ORRWF.
      ME->R_PR_OVRCNT->SET_ORRWF( IS_ORRWF = IS_OVRCNT_VIS-S_ORRWF
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      ME->R_PR_OVRCNT->SET_OARWF( IF_SETBY = SPACE ).

    when IS_OVRCNT_VIS-FLAG_OARWF.
      ME->R_PR_OVRCNT->SET_ORRWF( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OARWF( IS_OARWF = IS_OVRCNT_VIS-S_OARWF
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    when IS_OVRCNT_VIS-FLAG_ONRWF.
      ME->R_PR_OVRCNT->SET_ORRWF( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OARWF( IF_SETBY = SPACE ).
  endcase.


***----------------------------------------------------------------------------
*** Teardown Time
  case ABAP_TRUE.
    when IS_OVRCNT_VIS-FLAG_ORTTI.
      ME->R_PR_OVRCNT->SET_ORTTI( IS_ORTTI = IS_OVRCNT_VIS-S_ORTTI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      ME->R_PR_OVRCNT->SET_OATTI( IF_SETBY = SPACE ).

    when IS_OVRCNT_VIS-FLAG_OATTI.
      ME->R_PR_OVRCNT->SET_ORTTI( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OATTI( IS_OATTI = IS_OVRCNT_VIS-S_OATTI
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    when IS_OVRCNT_VIS-FLAG_ONTTI.
      ME->R_PR_OVRCNT->SET_ORTTI( IF_SETBY = SPACE ).
      ME->R_PR_OVRCNT->SET_OATTI( IF_SETBY = SPACE ).
  endcase.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_OVRCNT.

endmethod.
method INIT_VIS.

  data:  LF_SETBY   type /VCXI/VKSR_SETBY.

  free: ME->S_OVRCNT_VIS.

***----------------------------------------------------------------------------
*** Setup Time
  ME->R_PR_OVRCNT->GET_ORSTI( importing ES_ORSTI = ME->S_OVRCNT_VIS-S_ORSTI
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ORSTI.
  endif.
  ME->R_PR_OVRCNT->GET_OASTI( importing ES_OASTI = ME->S_OVRCNT_VIS-S_OASTI
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_OASTI.
  endif.
  if ME->S_OVRCNT_VIS-FLAG_ORSTI ne ABAP_TRUE and
     ME->S_OVRCNT_VIS-FLAG_OASTI ne ABAP_TRUE.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ONSTI.
  endif.

*** Setup Waste
  ME->R_PR_OVRCNT->GET_ORSWA( importing ES_ORSWA = ME->S_OVRCNT_VIS-S_ORSWA
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ORSWA.
  endif.
  ME->R_PR_OVRCNT->GET_OASWA( importing ES_OASWA = ME->S_OVRCNT_VIS-S_OASWA
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_OASWA.
  endif.
  if ME->S_OVRCNT_VIS-FLAG_ORSWA ne ABAP_TRUE and
     ME->S_OVRCNT_VIS-FLAG_OASWA ne ABAP_TRUE.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ONSWA.
  endif.

***----------------------------------------------------------------------------
*** Run Speed
  ME->R_PR_OVRCNT->GET_ORRSR( importing ES_ORRSR = ME->S_OVRCNT_VIS-S_ORRSR
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ORRSR.
  endif.
  ME->R_PR_OVRCNT->GET_OARS(  importing ES_OARS  = ME->S_OVRCNT_VIS-S_OARS
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_OARS.
  endif.
  if ME->S_OVRCNT_VIS-FLAG_ORRSR ne ABAP_TRUE and
     ME->S_OVRCNT_VIS-FLAG_OARS  ne ABAP_TRUE.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ONRS.
  endif.

*** Run Slowdown Factor
  ME->R_PR_OVRCNT->GET_ORRSF( importing ES_ORRSF = ME->S_OVRCNT_VIS-S_ORRSF
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ORRSF.
  endif.
  ME->R_PR_OVRCNT->GET_OARSF( importing ES_OARSF = ME->S_OVRCNT_VIS-S_OARSF
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_OARSF.
  endif.
  if ME->S_OVRCNT_VIS-FLAG_ORRSF ne ABAP_TRUE and
     ME->S_OVRCNT_VIS-FLAG_OARSF ne ABAP_TRUE.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ONRSF.
  endif.

*** Run Waste Factor
  ME->R_PR_OVRCNT->GET_ORRWF( importing ES_ORRWF = ME->S_OVRCNT_VIS-S_ORRWF
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ORRWF.
  endif.
  ME->R_PR_OVRCNT->GET_OARWF( importing ES_OARWF = ME->S_OVRCNT_VIS-S_OARWF
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_OARWF.
  endif.
  if ME->S_OVRCNT_VIS-FLAG_ORRWF ne ABAP_TRUE and
     ME->S_OVRCNT_VIS-FLAG_OARWF ne ABAP_TRUE.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ONRWF.
  endif.

***----------------------------------------------------------------------------
*** Teardown Time
  ME->R_PR_OVRCNT->GET_ORTTI( importing ES_ORTTI = ME->S_OVRCNT_VIS-S_ORTTI
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ORTTI.
  endif.
  ME->R_PR_OVRCNT->GET_OATTI( importing ES_OATTI = ME->S_OVRCNT_VIS-S_OATTI
                                        EF_SETBY = LF_SETBY ).
  if LF_SETBY is not initial.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_OATTI.
  endif.
  if ME->S_OVRCNT_VIS-FLAG_ORTTI ne ABAP_TRUE and
     ME->S_OVRCNT_VIS-FLAG_OATTI ne ABAP_TRUE.
    move ABAP_TRUE to ME->S_OVRCNT_VIS-FLAG_ONTTI.
  endif.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
