
class ZCL_VCXI_FBSSC_GRID_RECLO definition
  public
  inheriting from ZCL_VCXI_FBSSC_GRID
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_CUSTOMIZING type ref to OBJECT
    raising
      /VCXI/CX_CKX .
protected section.

  data R_BAGTY type ref to ZCL_VCXI_FBSSC_BAGTY .

  methods ADD_RECLO
    raising
      /VCXI/CX_CKX .
  methods CHECK_SEL_DELETE
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_RECLO
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods DELETE_RECLO
    importing
      !IT_BAGTY_RECLO type ZVCXI_FBSSC_TT_BAGTY_RECLO
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_USER_COMMAND
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSSC_GRID_RECLO definition
class ZCL_VCXI_FBSSC_GRID_RECLO implementation.
  method ADD_RECLO.

    data: LS_RETURN      type          DDSHRETVAL,
          LS_BAGTY_RECLO type          ZVCXI_FBSSC_S_BAGTY_RECLO.
    data: LT_RETURN      type table of DDSHRETVAL.

    call function 'F4IF_FIELD_VALUE_REQUEST'
      exporting
        TABNAME           = 'ZVCXI_FBS_TC210'
        FIELDNAME         = 'TRECL'
        MULTIPLE_CHOICE   = 'X'
      tables
        RETURN_TAB        = LT_RETURN
      exceptions
        FIELD_NOT_FOUND   = 1
        NO_HELP_FOR_FIELD = 2
        INCONSISTENT_HELP = 3
        NO_VALUES_FOUND   = 4
        others            = 5.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Process Result
    loop at LT_RETURN into LS_RETURN.
      move ME->R_BAGTY->F_IBAGT to LS_BAGTY_RECLO-IBAGT.
      move  LS_RETURN-FIELDVAL  to LS_BAGTY_RECLO-TRECL.

***   Add Reclosing
      ME->R_BAGTY->ADD_RECLO( IS_BAGTY_RECLO = LS_BAGTY_RECLO ).
    endloop.

  endmethod.
  method CHANGE_STYLE_RECLO.

*** Set Reclosing Type = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TRECL'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Reclosing Type Description = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TRECL_DESCR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endmethod.
  method CHECK_SEL_DELETE.

    data: LT_CELL type LVC_T_CELL,
          LT_ROW  type LVC_T_ROW.

    ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
    ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

*** Delete is only available if Cells are selected
    if LINES( LT_CELL ) gt 0 or
       LINES( LT_ROW )  gt 0.
      move ABAP_TRUE to RF_OKAY.
    else.
      move ABAP_FALSE to RF_OKAY.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME ).

*** Try to Assign Customizing Reference
    try.
        move IR_CUSTOMIZING ?to ME->R_BAGTY.
      catch CX_SY_MOVE_CAST_ERROR.
***     Bag Type Customizing Reference can't be assigned.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
            IF_MSGTY = 'E'
            IF_MSGID = 'ZVCXI_FBSSC'
            IF_MSGNO = '101' ).
    endtry.

    check ME->R_BAGTY is bound.
    ME->F_LOCKED = ME->R_BAGTY->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).

  endmethod.
  method DELETE_RECLO.

    data:  LS_BAGTY_RECLO  type ZVCXI_FBSSC_S_BAGTY_RECLO.

*** Process Result
    loop at IT_BAGTY_RECLO into LS_BAGTY_RECLO.
***   Delete Reclosing Type
      ME->R_BAGTY->DELETE_RECLO( IS_BAGTY_RECLO = LS_BAGTY_RECLO ).
    endloop.

  endmethod.
  method GET_FIELDCAT.

    field-symbols: <S_FCAT> type LVC_S_FCAT.

***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'T_STYL' or 'IBAGT'.
          move ABAP_TRUE    to <S_FCAT>-TECH.

        when 'TRECL'.
          move text-D02 to : <S_FCAT>-SCRTEXT_L, <S_FCAT>-SCRTEXT_M,
                             <S_FCAT>-SCRTEXT_S, <S_FCAT>-REPTEXT.
          move 'A'      to   <S_FCAT>-COL_OPT.

        when 'TRECL_DESCR'.
          move text-D03 to : <S_FCAT>-SCRTEXT_L, <S_FCAT>-SCRTEXT_M,
                             <S_FCAT>-SCRTEXT_S, <S_FCAT>-REPTEXT.
          move 'A'      to   <S_FCAT>-COL_OPT.

      endcase.
    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_RECLO      type ZVCXI_FBSSC_S_BAGTY_RECLO,
          LS_TC210T     type ZVCXI_FBS_TC210T,
          LS_RECLO_GRID type ZVCXI_FBSSC_S_BAGTY_RECLO_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
*** Get Bag Type - Reclosing
    loop at ME->R_BAGTY->T_BAGTY_RECLO into LS_RECLO.
      clear: LS_RECLO_GRID.

      move: LS_RECLO-IBAGT to LS_RECLO_GRID-IBAGT,
            LS_RECLO-TRECL to LS_RECLO_GRID-TRECL.

      read table ME->R_BAGTY->T_TC210T into LS_TC210T with key TRECL = LS_RECLO-TRECL.
      if SY-SUBRC is initial.
        move LS_TC210T-DESCR to LS_RECLO_GRID-TRECL_DESCR.
      else.
        move LS_RECLO-TRECL to LS_RECLO_GRID-TRECL_DESCR.
      endif.

***--------------------------------------------------------------------------------------
***   Set Style Details
      ME->CHANGE_STYLE_RECLO( changing CT_STYL = LS_RECLO_GRID-T_STYL ).

***--------------------------------------------------------------------------------------
***   Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_RECLO_GRID to <S_DATA>.

    endloop.

  endmethod.
  method GET_LAYOUT.

    RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Toolbar to Activ
    move ABAP_FALSE to RS_LAYOUT-NO_TOOLBAR.
    move 'A'        to RS_LAYOUT-SEL_MODE.

  endmethod.
  method HANDLE_TOOLBAR.

    data:  LF_DISABLED     type        ABAP_BOOL.
    data:  LR_CX_CKX       type ref to /VCXI/CX_CKX.
    field-symbols: <S_TOOLBAR> type STB_BUTTON.

    try.

        if ME->R_BAGTY->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
          move ABAP_TRUE to LF_DISABLED.
        endif.

***--------------------------------------------------------------------------------------
***     Insert Toolbar elements Add, Delete
        insert initial line into table E_OBJECT->MT_TOOLBAR assigning <S_TOOLBAR>.
        move: C_FCODE_ADD               to <S_TOOLBAR>-FUNCTION,
              text-T02                  to <S_TOOLBAR>-TEXT,
              C_BTYPE_BUTTON            to <S_TOOLBAR>-BUTN_TYPE,
              ICON_INSERT_ROW           to <S_TOOLBAR>-ICON,
              LF_DISABLED               to <S_TOOLBAR>-DISABLED.

        insert initial line into table E_OBJECT->MT_TOOLBAR assigning <S_TOOLBAR>.
        move: C_FCODE_DELETE            to <S_TOOLBAR>-FUNCTION,
              text-T03                  to <S_TOOLBAR>-TEXT,
              C_BTYPE_BUTTON            to <S_TOOLBAR>-BUTN_TYPE,
              ICON_DELETE_ROW           to <S_TOOLBAR>-ICON,
              LF_DISABLED               to <S_TOOLBAR>-DISABLED.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_USER_COMMAND.

    data: LS_CELL type          LVC_S_CELL,
          LS_ROW  type          LVC_S_ROW.
    data: LT_CELL        type          LVC_T_CELL,
          LT_ROW         type          LVC_T_ROW,
          LT_BAGTY_RECLO type          ZVCXI_FBSSC_TT_BAGTY_RECLO.
    data:          LR_CX_CKX       type ref to   /VCXI/CX_CKX.
    field-symbols: <T_DATA>        type standard table,
                   <S_BAGTY_RECLO> type          ZVCXI_FBSSC_S_BAGTY_RECLO,
                   <S_DATA>        type          ANY.

    try.
***     Get Reclosing
        assign ME->R_DATA->* to <T_DATA>.
        free: <T_DATA>.
        ME->GET_GRID_DATA( IR_DATA = ME->R_DATA ).

        ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
        ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

        case E_UCOMM.
          when C_FCODE_ADD.
***         Add new Reclosing
            ME->ADD_RECLO( ).

          when C_FCODE_DELETE.
***         Delete Reclosing
            if ME->CHECK_SEL_DELETE( ) eq ABAP_FALSE.
***           No rows selected. Please select all rows you want to delete.
              raise exception type /VCXI/CX_CKX
                exporting
                  F_MSGTY = 'E'
                  F_MSGID = 'ZVCXI_FBSSC'
                  F_MSGNO = '056'.
            endif.

***         Get Selected Handle
            loop at LT_CELL into LS_CELL.
              read table <T_DATA> assigning <S_DATA> index LS_CELL-ROW_ID-INDEX.
              check SY-SUBRC = 0.

              insert initial line into table LT_BAGTY_RECLO assigning <S_BAGTY_RECLO>.
              move-corresponding <S_DATA> to <S_BAGTY_RECLO>.
            endloop.

            loop at LT_ROW into LS_ROW.
              read table <T_DATA> assigning <S_DATA> index LS_ROW-INDEX.
              check SY-SUBRC = 0.

              insert initial line into table LT_BAGTY_RECLO assigning <S_BAGTY_RECLO>.
              move-corresponding <S_DATA> to <S_BAGTY_RECLO>.
            endloop.

***         Delete Selected Reclosing
            ME->DELETE_RECLO( IT_BAGTY_RECLO = LT_BAGTY_RECLO ).

        endcase.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

    ME->F_REFRESH_REQ = ABAP_TRUE.

  endmethod.
  method SET_EVENT.

    SUPER->SET_EVENT( ).

*** Add Event for UserCommand and Toolbar
    set handler ME->HANDLE_USER_COMMAND for ME->R_GRID.
    set handler ME->HANDLE_TOOLBAR      for ME->R_GRID.

  endmethod.
