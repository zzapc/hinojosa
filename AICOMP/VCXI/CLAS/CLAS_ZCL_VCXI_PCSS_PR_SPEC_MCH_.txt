
class ZCL_VCXI_PCSS_PR_SPEC_MCH definition
  public
  inheriting from ZCL_VCXI_P0SS_PR_SPEC_MCH
  create public .

public section.

  constants C_PARID_BDESC type /VCXI/VKS_PARID value 'ZVCXI_PC_BDESC'. "#EC NOTEXT
  constants C_PARID_FLUTE type /VCXI/VKS_PARID value 'ZVCXI_PC_FLUTE'. "#EC NOTEXT
  constants C_IPRVT_PC_SPEC_MCH type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSS_SPEC_MCH'. "#EC NOTEXT
  constants C_TPRST_FEFCO type ZVCXI_P0SS_TPRST value 'FEFCO'. "#EC NOTEXT

  methods GET_FEFCO
    returning
      value(RF_FEFCO) type ZVCXI_PCS_FEFCO
    raising
      /VCXI/CX_CKX .
  methods GET_FEFCO_DESCR
    returning
      value(RF_FEFCO_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_FLUTE
    returning
      value(RF_FLUTE) type ZVCXI_PCS_FLUTE
    raising
      /VCXI/CX_CKX .
  methods GET_FLUTE_DESCR
    returning
      value(RF_FLUTE_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_BDESC
    returning
      value(RF_BDESC) type ZVCXI_PCSS_BDESC
    raising
      /VCXI/CX_CKX .
  methods SET_FEFCO
    importing
      !IF_FEFCO type ZVCXI_PCS_FEFCO
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_FLUTE
    importing
      !IF_FLUTE type ZVCXI_PCS_FLUTE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_BDESC
    importing
      !IF_BDESC type ZVCXI_PCSS_BDESC
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods GET_TPRST
    redefinition .
protected section.

  constants C_IEVNT_O_FLUTE_CHANGED type /VCXI/VKSC_IEVNT value 'FLUTE_CHANGED'. "#EC NOTEXT
private section.
endclass. "ZCL_VCXI_PCSS_PR_SPEC_MCH definition
class ZCL_VCXI_PCSS_PR_SPEC_MCH implementation.
method GET_BDESC.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BDESC ).
  move LS_PARAM-ATWRT to RF_BDESC.

endmethod.
method GET_FEFCO.

  RF_FEFCO = ME->GET_PRSTY( ).

endmethod.
method GET_FEFCO_DESCR.

  RF_FEFCO_DESCR = ME->GET_PRSTY_DESCR( ).

endmethod.
method GET_FLUTE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).
  move LS_PARAM-ATWRT to RF_FLUTE.

endmethod.
method GET_FLUTE_DESCR.

  constants: LC_DOMNAME type                   DOMNAME value 'ZVCXI_PCS_FLUTE'.
  data:      LT_D07V    type standard table of DD07V.
  data:      LS_D07V    type                   DD07V.
  data:      LF_FLUTE   type                   ZVCXI_PCS_FLUTE.

  LF_FLUTE = ME->GET_FLUTE( ).

*** Return Flute Description
  call function 'DD_DOMVALUES_GET'
    exporting
      DOMNAME   = LC_DOMNAME
      TEXT      = 'X'
      LANGU     = SY-LANGU
    tables
      DD07V_TAB = LT_D07V.

  read table LT_D07V with key DOMVALUE_L = LF_FLUTE into LS_D07V.
  check SY-SUBRC = 0.

  RF_FLUTE_DESCR = LS_D07V-DDTEXT.

endmethod.
method GET_STATUS.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Board Description is Maintained
  if ME->GET_BDESC( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

***------------------------------------------------------------------
*** Check Flute is Maintained
  if ME->GET_FLUTE( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Board ID is Maintained
  if ME->GET_BDESC( ) is not initial.
*** Board Descripiton is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '040' ).
  else.
*** Board ID is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '041' ).

  endif.

***------------------------------------------------------------------
*** Check Flute is Maintained
  if ME->GET_FLUTE( ) is not initial.
*** Flute is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '107' ).
  else.
*** Flute is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSS'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '114' ).
  endif.

endmethod.
method GET_TPRST.

  RF_TPRST = C_TPRST_FEFCO.

endmethod.
method SET_BDESC.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BDESC ).

  move IF_BDESC to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
method SET_FEFCO.

  ME->SET_PRSTY( IF_PRSTY = IF_FEFCO
                 IF_SETBY = IF_SETBY ).

endmethod.
method SET_FLUTE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FLUTE ).

  move IF_FLUTE to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_FLUTE_CHANGED ).
  endif.


endmethod.
