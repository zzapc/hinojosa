
class ZCL_VCXI_P0SS_EA_MS_AUX definition
  public
  inheriting from ZCL_VCXI_XCSS_EA_MS
  create public .

public section.

  interfaces /VCXI/IF_VKCR_EXPL_BOM .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_MS_AUX type ref to ZCL_VCXI_P0SS_PR_MS_AUX .

  methods GET_EXQTY
    returning
      value(RS_EXQTY) type /VCXI/VKCR_S_EXQTY
    raising
      /VCXI/CX_CKX .
  methods GET_BOM_CONSU
    importing
      !IS_EXQTY type /VCXI/VKCR_S_EXQTY
      !IF_BMENG type BASMN
      !IF_BMEIN type BASME
    returning
      value(RS_CONSU) type ZVCXI_XCSP_S_CONSU
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SS_EA_MS_AUX definition
class ZCL_VCXI_P0SS_EA_MS_AUX implementation.
method /VCXI/IF_VKCR_EXPL_BOM~FILTER_CPBRG.
endmethod.
method /VCXI/IF_VKCR_EXPL_BOM~GET_BOM.

  data: LF_PURCH type ZVCXI_XCS_PURCH.
  data: LS_EXQTY type /VCXI/VKCR_S_EXQTY,
        LS_CONSU type ZVCXI_XCSP_S_CONSU,
        LS_PRICE type ZVCXI_XCS_S_PRICE,
        LS_PRICP type ZVCXI_XCS_S_PRICP.

  if IS_EXQTY is supplied.
    move IS_EXQTY         to LS_EXQTY.
  else.
    move ME->GET_EXQTY( ) to LS_EXQTY.
  endif.

*** Material Number
  move ME->R_PR_MS_AUX->GET_MATNR( ) to RS_EXBOM-IDNRK.
  move ABAP_TRUE                     to RS_EXBOM-IDNRK_X.

*** Item Category
  RS_EXBOM-POSTP   = switch #( LF_PURCH when ZCL_VCXI_XCSP_PR_MC=>C_PURCH_STOCK        then 'L'
                                        when ZCL_VCXI_XCSP_PR_MC=>C_PURCH_DIRECT       then 'N'
                                        when ZCL_VCXI_XCSP_PR_MC=>C_PURCH_DIRECT_PRICE then 'N' ).
  RS_EXBOM-POSTP_X = ABAP_TRUE.

*** BOM Consumption
  LS_CONSU = ME->GET_BOM_CONSU( IS_EXQTY = LS_EXQTY
                                IF_BMENG = IF_BMENG
                                IF_BMEIN = IF_BMEIN ).
  move LS_CONSU-CONSU                to RS_EXBOM-MENGE.
  move ABAP_TRUE                     to RS_EXBOM-MENGE_X.
  move LS_CONSU-CONSU_UOM            to RS_EXBOM-MEINS.
  move ABAP_TRUE                     to RS_EXBOM-MEINS_X.


*** Price for BOM
  if LF_PURCH eq ZCL_VCXI_XCSP_PR_MC=>C_PURCH_DIRECT_PRICE.
    move ME->R_PR_MS_AUX->GET_PRICE( ) to LS_PRICE.
    move LS_PRICE-PRICE                to RS_EXBOM-PREIS.
    move ABAP_TRUE                     to RS_EXBOM-PREIS_X.
    move LS_PRICE-PRICE_CURR           to RS_EXBOM-WAERS.
    move ABAP_TRUE                     to RS_EXBOM-WAERS_X.

    move ME->R_PR_MS_AUX->GET_PRICP( ) to LS_PRICP.
    move LS_PRICP-PRICP                to RS_EXBOM-PEINH.
    move ABAP_TRUE                     to RS_EXBOM-PEINH_X.
  endif.

*** Vendor
  move ME->R_PR_MS_AUX->GET_LIFNR( ) to RS_EXBOM-LIFNR.
  move ABAP_TRUE                     to RS_EXBOM-LIFNR_X.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_MS_AUX.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

endmethod.
method GET_BOM_CONSU.

  data:  LS_AVGCO   type        ZVCXI_XCS_S_AVGCO,
         LS_AVGCP   type        ZVCXI_XCS_S_AVGCP.
  move ME->R_PR_MS_AUX->GET_AVGCO( )  to LS_AVGCO.
  move ME->R_PR_MS_AUX->GET_AVGCP( )  to LS_AVGCP.

  if IS_EXQTY-EXQTY is not initial.
    RS_CONSU-CONSU     = ( ( LS_AVGCO-AVGCO / LS_AVGCP-AVGCP ) * IS_EXQTY-EXQTY ) /
                           ( IS_EXQTY-EXQTY / IF_BMENG ).
  endif.
  RS_CONSU-CONSU_UOM = LS_AVGCO-AVGCO_UOM.

endmethod.
method GET_EXQTY.

  data:  LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

  if LR_APPDATA is bound and
     LR_APPDATA->S_OPQTY-OPQTY is not initial.
    move LR_APPDATA->S_OPQTY-OPQTY     to RS_EXQTY-EXQTY.
    move LR_APPDATA->S_OPQTY-OPQTY_UOM to RS_EXQTY-EXQTY_UOM.
  endif.

endmethod.
