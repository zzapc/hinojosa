
class ZCL_VCXI_XCSS_EA_MS definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods IS_DUMMY
    returning
      value(RF_RETURN) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods GET_MATNR
    exporting
      !EF_MATNR type MATNR
      !EF_MATNR_DESCR type /VCXI/CKX_DESCR
      !EF_WERTU type WERTU
    raising
      /VCXI/CX_CKX .
  methods GET_PURCH_INFO
    exporting
      !EF_LIFNR type LIFNR
      !EF_LIFNR_DESCR type /VCXI/CKX_DESCR
      !EF_PURCH type ZVCXI_XCS_PURCH
      !EF_FPTOS type ZVCXI_XCS_FPTOS
      !ES_PRICE type ZVCXI_XCS_S_PRICE
      !ES_PRICP type ZVCXI_XCS_S_PRICP
      !ET_PSCALE type ZVCXI_XCS_TT_PSCALE
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_MS type ref to ZCL_VCXI_XCSS_PR_MS .
private section.
endclass. "ZCL_VCXI_XCSS_EA_MS definition
class ZCL_VCXI_XCSS_EA_MS implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_MS.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

endmethod.
  method GET_MATNR.

    check ME->R_PR_MS is bound.

    if EF_MATNR is requested or
       EF_WERTU is requested.
      EF_MATNR = ME->R_PR_MS->GET_MATNR( importing EF_WERTU = EF_WERTU ).
    endif.

    if EF_MATNR_DESCR is requested.
      EF_MATNR_DESCR = ME->R_PR_MS->GET_MATNR_DESCR( ).
    endif.

  endmethod.
  method GET_PURCH_INFO.

    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PSCALE type ref to ZCL_VCXI_XCS_PR_PSCALE.


    check ME->R_PR_MS is bound.

    if EF_LIFNR is requested.
      EF_LIFNR = ME->R_PR_MS->GET_LIFNR( ).
    endif.

    if EF_LIFNR_DESCR is requested.
      EF_LIFNR_DESCR = ME->R_PR_MS->GET_LIFNR_DESCR( ).
    endif.

    if EF_PURCH is requested.
      EF_PURCH = ME->R_PR_MS->GET_PURCH( ).
    endif.

    if EF_FPTOS is requested.
      EF_FPTOS = ME->R_PR_MS->GET_FPTOS( ).
    endif.

    if ES_PRICE is requested.
      ES_PRICE = ME->R_PR_MS->GET_PRICE( ).
    endif.

    if ES_PRICP is requested.
      ES_PRICP = ME->R_PR_MS->GET_PRICP( ).
    endif.

    if ET_PSCALE is requested.
      loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ) into LR_GATE.
        LR_PR_PSCALE ?= LR_GATE->R_CLSPR.
        append value #( S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                        S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                        S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                      ) to ET_PSCALE.
      endloop.
    endif.

  endmethod.
  method GET_WERKS.

    check ME->R_PR_MS is bound.
    RF_WERKS = ME->R_PR_MS->GET_WERKS( ).

  endmethod.
method IS_DUMMY.

  check ME->R_PR_MS is bound.
  RF_RETURN = ME->R_PR_MS->IS_DUMMY( ).

endmethod.
