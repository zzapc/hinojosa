
class ZCL_VCXI_PCSR_PR_RTESPV_SE definition
  public
  inheriting from ZCL_VCXI_PCSR_PR_RTESPV
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV optional
    raising
      /VCXI/CX_CKX .

  methods FILL_PROD
    redefinition .
  methods GET_EXQTY
    redefinition .
protected section.

  methods GET_COMP_SE_RTESEL
    returning
      value(RT_COMP_SE_RTESEL) type ZVCXI_P0SR_TT_COMP_SE_RTESEL
    raising
      /VCXI/CX_CKX .

  methods GET_BL_PSTEP_CUT
    redefinition .
  methods GET_PRVDR_SPEC
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSR_PR_RTESPV_SE definition
class ZCL_VCXI_PCSR_PR_RTESPV_SE implementation.
method CONSTRUCTOR.

  data:  LR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV.

*** Use or create the BL Routing Supervisor
  if IR_BL_RTESPV is bound.
    move IR_BL_RTESPV to LR_BL_RTESPV.
  else.
    create object LR_BL_RTESPV
      type
        ZCL_VCXI_PCSR_BL_RTESPV_SE
      exporting
        IR_GATE                    = IR_GATE.
  endif.

*** Call Super
  call method SUPER->CONSTRUCTOR
    exporting
      IR_GATE      = IR_GATE
      IR_BL_RTESPV = LR_BL_RTESPV.

endmethod.
method FILL_PROD.

  data:  LF_COMPR           type        ZVCXI_P0SS_COMPR.
  data:  LS_EXQTY           type        /VCXI/VKCR_S_EXQTY.
  data:  LT_LAMI_RTESEL     type        ZVCXI_P0SR_TT_LAMI_RTESEL,
         LT_COMP_SE_RTESEL  type        ZVCXI_P0SR_TT_COMP_SE_RTESEL.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_SPEC_SE      type ref to ZCL_VCXI_P0SS_PR_SPEC_SE,
         LR_BL_RTESPV_SE    type ref to ZCL_VCXI_PCSR_BL_RTESPV_SE,
         LR_RTEFIL          type ref to ZCL_VCXI_XCSR_BL_PRTE.

  check ME->R_BL_RTESPV is bound.

  if ME->R_PR_RTESPV_HL is not bound.
*** Get Explosion Quantity
    move ME->GET_EXQTY( )   to LS_EXQTY.

***----------------------------------------------------------------------------
*** Refresh Auto
    ME->REFRESH_AUTO( ).
    ME->R_GATE->RAISE_EVENTS( ).

    if ME->R_RTESEL is not bound.
***   No Selected Route defined.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCSR'
                                            IF_MSGNO = '310' ).
    endif.

*** Get Selected Route of Laminating
    LT_LAMI_RTESEL = ME->GET_LAMI_RTESEL( ).

*** Get Selected Route of Component
    LT_COMP_SE_RTESEL = ME->GET_COMP_SE_RTESEL( ).

***----------------------------------------------------------------------------
*** Copy Selected Route to Filled Route
    move ME->R_RTESEL->COPY( ) to LR_RTEFIL.

    move ME->R_BL_RTESPV ?to LR_BL_RTESPV_SE.
    LR_BL_RTESPV_SE->SET_PC_BL_PRTE_SE( IR_BL_PRTE        = LR_RTEFIL
                                        IT_LAMI_RTESEL    = LT_LAMI_RTESEL
                                        IT_COMP_SE_RTESEL = LT_COMP_SE_RTESEL
                                        IS_EXQTY          = LS_EXQTY ).

    raise event PROD_FILLED exporting IR_BL_PRTE = LR_RTEFIL.

  else.
***----------------------------------------------------------------------------
*** Use Higher Level
    ME->R_PR_RTESPV_HL->FILL_PROD( ).
  endif.

endmethod.
method GET_BL_PSTEP_CUT.

  data:  LT_GATE_BOARD         type        /VCXI/VKSR_TT_GATE,
         LT_GATE_MS_SHTPR      type        /VCXI/VKSR_TT_GATE,
         LT_GATE_COMP_SE       type        /VCXI/VKSR_TT_GATE,
         LT_GATE_COMP_CO       type        /VCXI/VKSR_TT_GATE,
         LT_GATE_COMP_FG       type        /VCXI/VKSR_TT_GATE,
         LT_PRVDR              type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE_SPEC          type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_DCT           type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_SHTDIM        type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_BOARD         type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_MS_SHTPR      type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_COMP_SE       type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_COMP_CO       type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_COMP_FG       type ref to /VCXI/CL_VKSR_GATE,
         LR_DCT                type ref to ZIF_VCXI_P0SS_DCT,
         LR_BL_PSTEP_CUT       type ref to ZCL_VCXI_PCSR_BL_PSTEP_CUT,
         LR_PR_MS_SHTPR        type ref to ZCL_VCXI_PCSS_PR_MS_SHTPR,
         LR_APPDATA            type ref to /VCXI/CL_VKSR_APPDATA.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

*** Find Provider for DieCut
  LR_GATE_DCT = ME->GET_PRVDR_DCT( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_DCT is bound.
  append LR_GATE_DCT to LT_PRVDR.

  try.
      move LR_GATE_DCT->R_CLSPR ?to LR_DCT.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

*** Check if Die Cut Type is defined
  check LR_DCT->GET_TDCUT( ) is not initial.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Dimension
  LR_GATE_SHTDIM = ME->GET_PRVDR_SHTDIM( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_SHTDIM is bound.
  append LR_GATE_SHTDIM to LT_PRVDR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Board
  LT_GATE_BOARD = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_BOARD=>C_IPRVT_PC_BOARD
                                         IF_INUSE  = ABAP_TRUE
                                         IF_SORTED = ABAP_TRUE ).
  read table LT_GATE_BOARD into LR_GATE_BOARD index 1.
  if LR_GATE_BOARD is not bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Procurement
    LT_GATE_MS_SHTPR = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PCSS_PR_MS_SHTPR=>C_IPRVT_PC_MS_SHTPR
                                              IF_INUSE  = ABAP_TRUE
                                              IF_SORTED = ABAP_TRUE ).
    loop at LT_GATE_MS_SHTPR into LR_GATE_MS_SHTPR.
***   Check is child of Specification
      if LR_GATE_MS_SHTPR->GET_PARENT( ) eq LR_GATE_SPEC.
        exit.
      else.
        clear LR_GATE_MS_SHTPR.
      endif.
    endloop.

    check LR_GATE_MS_SHTPR is bound.

*** Check if Cutting was already done
    try.
        move LR_GATE_MS_SHTPR->R_CLSPR ?to LR_PR_MS_SHTPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.
    check LR_PR_MS_SHTPR               is bound      and
          LR_PR_MS_SHTPR->GET_FLCUT( ) eq ABAP_FALSE.

    append LR_GATE_MS_SHTPR to LT_PRVDR.

  else.
    append LR_GATE_BOARD    to LT_PRVDR.
  endif.

***------------------------------------------------------------------------------------------------
*** Find Provider for Components SE
  LT_GATE_COMP_SE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_SE=>C_IPRVT_P0_COMP_SE
                                           IF_INUSE  = ABAP_TRUE
                                           IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE_COMP_SE into LR_GATE_COMP_SE.
    if LR_GATE_COMP_SE->GET_PARENT( ) eq LR_GATE_SPEC.
      append LR_GATE_COMP_SE to LT_PRVDR.
    endif.
  endloop.

*** Find Provider for Components CO
  LT_GATE_COMP_CO = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_CO=>C_IPRVT_P0_COMP_CO
                                           IF_INUSE  = ABAP_TRUE
                                           IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE_COMP_CO into LR_GATE_COMP_CO.
    if LR_GATE_COMP_CO->GET_PARENT( ) eq LR_GATE_SPEC.
      append LR_GATE_COMP_CO to LT_PRVDR.
    endif.
  endloop.

*** Find Provider for Components FG
  LT_GATE_COMP_FG = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_FG=>C_IPRVT_P0_COMP_FG
                                           IF_INUSE  = ABAP_TRUE
                                           IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE_COMP_FG into LR_GATE_COMP_FG.
    if LR_GATE_COMP_FG->GET_PARENT( ) eq LR_GATE_SPEC.
      append LR_GATE_COMP_FG to LT_PRVDR.
    endif.
  endloop.

*** Get Application Data
  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

***------------------------------------------------------------------------------------------------
*** Create BL PStep
  create object LR_BL_PSTEP_CUT
    exporting
      IF_DATE    = ME->F_DATE
      IR_APPDATA = LR_APPDATA.
  append LR_BL_PSTEP_CUT to CT_BL_PSTEP.
  LR_BL_PSTEP_CUT->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                 IT_PRVDR = LT_PRVDR ).

endmethod.
method GET_COMP_SE_RTESEL.

  data:          LF_COMP              type        N length 2.
  data:          LT_GATE_COMP_SE      type        /VCXI/VKSR_TT_GATE,
                 LT_GATE_RTESPV       type        /VCXI/VKSR_TT_GATE,
                 LT_GATE_COMP_FG      type        /VCXI/VKSR_TT_GATE,
                 LT_GATE_COMP         type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE_COMP         type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_COMP_SE        type ref to ZCL_VCXI_P0SS_PR_COMP_SE,
                 LR_GATE_RTESPV       type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_RTESPV         type ref to ZCL_VCXI_P0SR_PR_RTESPV,
                 LR_PR_COMP_FG        type ref to ZCL_VCXI_P0SS_PR_COMP_FG.
  field-symbols: <S_COMP_SE_RTESEL>   type        ZVCXI_P0SR_S_COMP_SE_RTESEL,
                 <S_CPM_RTESEL>       type        ZVCXI_P0SR_S_CPM_RTESEL,
                 <S_COMP_RTESEL>      type        ZVCXI_P0SR_S_COMP_RTESEL.

***------------------------------------------------------------------------------------------------
*** Find Provider for Component of SE
  LT_GATE_COMP_SE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_COMP_SE=>C_IPRVT_P0_COMP_SE
                                           IF_INUSE = ABAP_TRUE ).
  if LT_GATE_COMP_SE is not initial.
    append lines of LT_GATE_COMP_SE to LT_GATE_COMP.

*** Find Provider for Routing Supervisor of Components
    LT_GATE_RTESPV = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SR_PR_RTESPV=>C_IPRVT_P0_RTESPV
                                            IF_INUSE = ABAP_TRUE ).
  endif.

*** Find Provider for Component of FG
  LT_GATE_COMP_FG = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_COMP_FG=>C_IPRVT_P0_COMP_FG
                                           IF_INUSE = ABAP_TRUE ).
  append lines of LT_GATE_COMP_FG to LT_GATE_COMP.

*** Sort Components
  ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE_COMP ).

***------------------------------------------------------------------------------------------------
*** Loop at Components
  loop at LT_GATE_COMP into LR_GATE_COMP.
    append initial line to RT_COMP_SE_RTESEL assigning <S_COMP_SE_RTESEL>.

*** Component SE
    try.
        move LR_GATE_COMP->R_CLSPR ?to LR_PR_COMP_SE.
      catch CX_SY_MOVE_CAST_ERROR.
        clear LR_PR_COMP_SE.
    endtry.
    if LR_PR_COMP_SE is bound.
***   Get Routing Supervisor
      loop at LT_GATE_RTESPV into LR_GATE_RTESPV.
        check LR_GATE_RTESPV->IS_IN_LINE( IR_GATE = LR_GATE_COMP ) eq ABAP_TRUE.

        try.
            move LR_GATE_RTESPV->R_CLSPR ?to LR_PR_RTESPV.
            check LR_PR_RTESPV is bound.
          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.

***     Refresh Auto and get Selected Route
        LR_PR_RTESPV->REFRESH_AUTO( ).
        ME->R_GATE->RAISE_EVENTS( ).
        move LR_PR_RTESPV->R_RTESEL to <S_COMP_SE_RTESEL>-R_RTESEL.

        if LR_PR_RTESPV->R_RTESEL is not bound.
***       No Selected Route defined.
          /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                                IF_MSGID = 'ZVCXI_XCSR'
                                                IF_MSGNO = '310' ).
        endif.


***     Get Selected Route of Configured Packaging Material for Component
        <S_COMP_SE_RTESEL>-T_CPM_RTESEL = LR_PR_RTESPV->GET_CPM_RTESEL( ).

      endloop.
    else.
***   Component FG
      try.
          move LR_GATE_COMP->R_CLSPR ?to LR_PR_COMP_FG.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_COMP_FG.
      endtry.
      if LR_PR_COMP_FG is bound.
        move LR_PR_COMP_FG->GET_RTESEL( ) to <S_COMP_SE_RTESEL>-R_RTESEL.
      endif.
    endif.
  endloop.

***------------------------------------------------------------------------------------------------
*** Set MF X-Connect
  loop at RT_COMP_SE_RTESEL assigning <S_COMP_SE_RTESEL>.
*** Add MF X-Connect
    add  1       to LF_COMP.
    move LF_COMP to <S_COMP_SE_RTESEL>-IMFXC.

*** Set X-Connect for Configured Packaging Material
    loop at <S_COMP_SE_RTESEL>-T_CPM_RTESEL assigning <S_CPM_RTESEL>.
      concatenate LF_COMP '_' <S_CPM_RTESEL>-IMFXC into <S_CPM_RTESEL>-IMFXC.

      loop at <S_CPM_RTESEL>-T_COMP_RTESEL assigning <S_COMP_RTESEL>.
        concatenate LF_COMP '_' <S_COMP_RTESEL>-IMFXC into <S_COMP_RTESEL>-IMFXC.
      endloop.
    endloop.

  endloop.

endmethod.
method GET_EXQTY.

  data:  LF_COMPR        type        ZVCXI_P0SS_COMPR.
  data:  LR_GATE         type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_SPEC_SE   type ref to ZCL_VCXI_P0SS_PR_SPEC_SE.

***----------------------------------------------------------------------------
*** Call Super
  RS_EXQTY = SUPER->GET_EXQTY( ).

***----------------------------------------------------------------------------
*** Adjust Explosion Quantity by Component Ratio
  move ME->GET_PRVDR_SPEC( ) to LR_GATE.

  move LR_GATE->R_CLSPR ?to LR_PR_SPEC_SE.
  LF_COMPR = LR_PR_SPEC_SE->GET_COMPR( ).
  if LF_COMPR is not initial.
    RS_EXQTY-EXQTY = RS_EXQTY-EXQTY / LF_COMPR.
  else.
    RS_EXQTY-EXQTY = 0.
  endif.

endmethod.
method GET_PRVDR_SPEC.

  data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification for SE
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_SPEC_SE=>C_IPRVT_P0_SPEC_SE
                                   IF_INUSE = ABAP_TRUE ).
  check LT_GATE is not initial.

  read table LT_GATE into RR_GATE index 1.

endmethod.
