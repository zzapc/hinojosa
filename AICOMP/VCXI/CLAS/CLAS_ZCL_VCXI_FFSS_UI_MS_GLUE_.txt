
class ZCL_VCXI_FFSS_UI_MS_GLUE definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_GLUE_VIS type ZVCXI_FFSS_S_MS_GLUE_VIS .
  constants C_DYNNR_PSCALE type DYNNR value '0110' ##NO_TEXT.
  constants C_DYNNR_BLANK type DYNNR value '9999' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_MS_GLUE_VIS
    importing
      !IS_MS_GLUE_VIS type ZVCXI_FFSS_S_MS_GLUE_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_REGISTERED_UI_INFO
    returning
      value(RS_DYNP) type /VCXI/CKX_S_DYNP_KEY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_PSCALE type ref to ZCL_VCXI_XCS_GRID_PSCALE .
  data R_PR_MS_GLUE type ref to ZCL_VCXI_FFSS_PR_MS_GLUE .
  data R_TEXTEDIT type ref to ZCL_VCXI_F0S_TEXTEDIT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSS_UI_MS_GLUE definition
class ZCL_VCXI_FFSS_UI_MS_GLUE implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_MS_GLUE_BIND'
      exporting
        IR_UI_MS_GLUE = ME
      importing
        ES_DYNP       = ME->S_DYNP.

*** Create Grid for Price Scale
    create object ME->R_GRID_PSCALE
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0110CC_PSCALE'.

*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_GLUE.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_PSCALE is bound.
      ME->R_GRID_PSCALE->DO_FREE( ).
      clear ME->R_GRID_PSCALE.
    endif.

    if ME->R_TEXTEDIT is bound.
***--------------------------------------------------------------------------------------
***   Update the Long Text before leaving the screen
      ME->R_TEXTEDIT->UPDATE_TEXT( ).
      ME->R_TEXTEDIT->DO_FREE( ).
      clear ME->R_TEXTEDIT.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       If No Dummy Material, then set to read only
          if ME->R_PR_MS_GLUE->IS_DUMMY( ) eq ABAP_FALSE.
            if SCREEN-GROUP1               eq 'DUM'.
              move 0 to SCREEN-INPUT.
            endif.
***       If Dummy Material set the Purchased Flag
          elseif SCREEN-GROUP1             eq 'PUR'.
            move 0 to SCREEN-INPUT.
          endif.

***       Hide Purchasing Infos (e.g Vendor) if not purchased
          if ME->S_MS_GLUE_VIS-PURCH eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK and
             SCREEN-GROUP2           eq 'APU'.  "Active Purchasing
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Glue Width Changeable if Override Flag is set.
          if SCREEN-GROUP1 eq 'OGW'.
            if ME->S_MS_GLUE_VIS-FOVRR_GLWID eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            else.
              move 1 to SCREEN-INPUT.
              move 2 to SCREEN-REQUIRED.
            endif.
          endif.

***       Internal Glue Thickness Changeable if Override Flag is set.
          if SCREEN-GROUP1 eq 'OGT'.
            if ME->S_MS_GLUE_VIS-FOVRR_GLTIN eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            else.
              move 1 to SCREEN-INPUT.
            endif.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.

        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Initialize VIS
    ME->INIT_VIS( ).

*** Refresh Grid
    if ME->R_GRID_PSCALE is bound.
      if ME->R_GRID_PSCALE->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_PSCALE->F_REFRESH_REQ.
      endif.
      ME->R_GRID_PSCALE->REFRESH_GRID( ).
    endif.

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT->F_REFRESH_REQ.
      ME->R_TEXTEDIT->REFRESH_TEXTEDIT( ).
    endif.

  endmethod.
  method DO_UPDATE_MS_GLUE_VIS.

    data: LF_MAKTX type MAKTX.

    check ME->R_PR_MS_GLUE is bound.

*** Set Material Number
    if ME->S_MS_GLUE_VIS-MATNR ne IS_MS_GLUE_VIS-MATNR.
      ME->R_PR_MS_GLUE->SET_MATNR( IF_MATNR = IS_MS_GLUE_VIS-MATNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material description
    if ME->S_MS_GLUE_VIS-MATNR_DESCR ne IS_MS_GLUE_VIS-MATNR_DESCR.
      LF_MAKTX = IS_MS_GLUE_VIS-MATNR_DESCR.
      ME->R_PR_MS_GLUE->SET_MAKTX( IF_MAKTX = LF_MAKTX
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Procurement Option
    if ME->S_MS_GLUE_VIS-PURCH ne IS_MS_GLUE_VIS-PURCH.
      ME->R_PR_MS_GLUE->SET_PURCH( IF_PURCH = IS_MS_GLUE_VIS-PURCH
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Vendor
    if ME->S_MS_GLUE_VIS-LIFNR ne IS_MS_GLUE_VIS-LIFNR.
      ME->R_PR_MS_GLUE->SET_LIFNR( IF_LIFNR = IS_MS_GLUE_VIS-LIFNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Application Weight
    if ME->S_MS_GLUE_VIS-APWGT ne IS_MS_GLUE_VIS-APWGT.
      ME->R_PR_MS_GLUE->SET_APWGT( IS_APWGT = IS_MS_GLUE_VIS-S_APWGT
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Internal Glue Thickness if it is "Overriden"
    if ME->S_MS_GLUE_VIS-FOVRR_GLTIN eq ABAP_TRUE.
      if ME->S_MS_GLUE_VIS-GLTIN ne IS_MS_GLUE_VIS-GLTIN.
        ME->R_PR_MS_GLUE->SET_GLTIN( IS_GLTIN = IS_MS_GLUE_VIS-S_GLTIN
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Internal Glue Thickness
    if ME->S_MS_GLUE_VIS-FOVRR_GLTIN ne IS_MS_GLUE_VIS-FOVRR_GLTIN.
      ME->R_PR_MS_GLUE->SET_FOVRR_GLTIN( IF_FOVRR = IS_MS_GLUE_VIS-FOVRR_GLTIN ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Glue Wdith if it is "Overriden"
    if ME->S_MS_GLUE_VIS-FOVRR_GLWID eq ABAP_TRUE.
      if ME->S_MS_GLUE_VIS-GLWID ne IS_MS_GLUE_VIS-GLWID.
        ME->R_PR_MS_GLUE->SET_GLWID( IS_GLWID = IS_MS_GLUE_VIS-S_GLWID
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Set Flag Override Glue Width
    if ME->S_MS_GLUE_VIS-FOVRR_GLWID ne IS_MS_GLUE_VIS-FOVRR_GLWID.
      ME->R_PR_MS_GLUE->SET_FOVRR_GLWID( IF_FOVRR = IS_MS_GLUE_VIS-FOVRR_GLWID ).
    endif.

*** Set Solid Content
    if ME->S_MS_GLUE_VIS-SLDCO ne IS_MS_GLUE_VIS-SLDCO.
      ME->R_PR_MS_GLUE->SET_SLDCO( IS_SLDCO = IS_MS_GLUE_VIS-S_SLDCO
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Glue Type
    if ME->S_MS_GLUE_VIS-TGLUE ne IS_MS_GLUE_VIS-TGLUE.
      ME->R_PR_MS_GLUE->SET_TGLUE( IF_TGLUE = IS_MS_GLUE_VIS-TGLUE
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT is bound.
      ME->R_TEXTEDIT->UPDATE_TEXT( ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Update TextEdit
    if ME->R_TEXTEDIT is bound.
      ME->R_TEXTEDIT->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_PSCALE is bound.
      ME->R_GRID_PSCALE->CHECK_CHANGED_DATA( ).
    endif.

  endmethod.
  method GET_REGISTERED_UI_INFO.

*** Display Blank subscreen if no Price Scale should be shown
    if ME->R_PR_MS_GLUE->GET_PURCH( ) ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
      move ME->C_DYNNR_BLANK to  RS_DYNP-DYNNR.
    else.
      move ME->C_DYNNR_PSCALE to RS_DYNP-DYNNR.
    endif.

  endmethod.
  method INIT_VIS.

    free: ME->S_MS_GLUE_VIS.
    check ME->R_PR_MS_GLUE is bound.

***--------------------------------------------------------------------------------------
*** Material
    move ME->R_PR_MS_GLUE->GET_MATNR( )       to ME->S_MS_GLUE_VIS-MATNR.
    move ME->R_PR_MS_GLUE->GET_MATNR_DESCR( ) to ME->S_MS_GLUE_VIS-MATNR_DESCR.

***--------------------------------------------------------------------------------------
*** Procurement Option
    move ME->R_PR_MS_GLUE->GET_PURCH( )       to ME->S_MS_GLUE_VIS-PURCH.

***--------------------------------------------------------------------------------------
*** Vendor
    move ME->R_PR_MS_GLUE->GET_LIFNR( )       to ME->S_MS_GLUE_VIS-LIFNR.
    move ME->R_PR_MS_GLUE->GET_LIFNR_DESCR( ) to ME->S_MS_GLUE_VIS-LIFNR_DESCR.

***--------------------------------------------------------------------------------------
*** Application Weight
    ME->R_PR_MS_GLUE->GET_APWGT( importing ES_APWGT = ME->S_MS_GLUE_VIS-S_APWGT ).
    move ME->S_MS_GLUE_VIS-S_APWGT-APWGT_UOM to ME->S_MS_GLUE_VIS-APWGT_UOMC6.

*** Set Min/Max Application Weight
    if ME->R_PR_MS_GLUE->R_CUST_GLUE is bound.
      move ME->R_PR_MS_GLUE->R_CUST_GLUE->S_APWMI to ME->S_MS_GLUE_VIS-S_APWMI.
      move ME->S_MS_GLUE_VIS-S_APWMI-APWMI_UOM to ME->S_MS_GLUE_VIS-APWMI_UOMC6.
      move ME->R_PR_MS_GLUE->R_CUST_GLUE->S_APWMA to ME->S_MS_GLUE_VIS-S_APWMA.
      move ME->S_MS_GLUE_VIS-S_APWMA-APWMA_UOM to ME->S_MS_GLUE_VIS-APWMA_UOMC6.
    endif.

***--------------------------------------------------------------------------------------
*** Glue Type
    ME->R_PR_MS_GLUE->GET_TGLUE( importing EF_TGLUE = ME->S_MS_GLUE_VIS-TGLUE ).

***--------------------------------------------------------------------------------------
*** Glue Internal Thickness
    ME->R_PR_MS_GLUE->GET_GLTIN(       importing ES_GLTIN = ME->S_MS_GLUE_VIS-S_GLTIN ).
    ME->R_PR_MS_GLUE->GET_FOVRR_GLTIN( importing EF_FOVRR = ME->S_MS_GLUE_VIS-FOVRR_GLTIN ).

***--------------------------------------------------------------------------------------
*** Glue Width
    ME->R_PR_MS_GLUE->GET_GLWID(       importing ES_GLWID = ME->S_MS_GLUE_VIS-S_GLWID ).
    ME->R_PR_MS_GLUE->GET_FOVRR_GLWID( importing EF_FOVRR = ME->S_MS_GLUE_VIS-FOVRR_GLWID ).

***--------------------------------------------------------------------------------------
*** Trim Req. of Glue
    ME->R_PR_MS_GLUE->GET_TREQG( importing ES_TREQG = ME->S_MS_GLUE_VIS-S_TREQG ).

***--------------------------------------------------------------------------------------
*** Solid Content
    ME->R_PR_MS_GLUE->GET_SLDCO( importing ES_SLDCO = ME->S_MS_GLUE_VIS-S_SLDCO ).

***--------------------------------------------------------------------------------------
*** Surface Weight
    ME->R_PR_MS_GLUE->GET_SURWT( importing ES_SURWT = ME->S_MS_GLUE_VIS-S_SURWT ).
    move ME->S_MS_GLUE_VIS-S_SURWT-SURWT_UOM to ME->S_MS_GLUE_VIS-SURWT_UOMC6.

  endmethod.
