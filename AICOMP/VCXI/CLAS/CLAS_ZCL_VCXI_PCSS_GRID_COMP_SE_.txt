
class ZCL_VCXI_PCSS_GRID_COMP_SE definition
  public
  inheriting from ZCL_VCXI_P0SS_GRID_COMP_SE
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_PCSS_S_COMP_SE_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods GET_PC_COMP_SE_VIS
    importing
      !IR_PR_COMP_SE type ref to ZCL_VCXI_PCSS_PR_COMP_SE
    returning
      value(RS_COMP_SE_VIS) type ZVCXI_PCSS_S_COMP_SE_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_PC_COMP_SE_VIS
    importing
      !IR_PR_COMP_SE type ref to ZCL_VCXI_PCSS_PR_COMP_SE
      !IS_COMP_SE_VIS type ZVCXI_PCSS_S_COMP_SE_VIS
    raising
      /VCXI/CX_CKX .

  methods CHANGE_STYLE_COMP_SE
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods CHANGE_STYLE_COMP_FG
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_GRID_COMP_SE definition
class ZCL_VCXI_PCSS_GRID_COMP_SE implementation.
method CHANGE_STYLE_COMP_FG.

  SUPER->CHANGE_STYLE_COMP_FG( changing CT_STYL = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FEFCO'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CHANGE_STYLE_COMP_SE.

  SUPER->CHANGE_STYLE_COMP_SE( changing CT_STYL = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FEFCO'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  call method SUPER->CONSTRUCTOR
    exporting
      IR_GATE           = IR_GATE
      IF_TABNAME        = IF_TABNAME
      IF_CONTAINER_NAME = IF_CONTAINER_NAME
      IR_UIGATE         = IR_UIGATE
      IF_APPL_EVENTS    = IF_APPL_EVENTS.

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_PCSS_PR_COMP_SE=>C_IPRVT_PC_COMP_SE.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED type        /VCXI/CKX_LOCKED,
                 LF_INUSE  type        /VCXI/VKSR_INUSE.
  field-symbols: <S_FCAT>  type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'FEFCO'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.
  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data:          LS_COMP_SE_GRID      type          ZVCXI_PCSS_S_COMP_SE_GRID,
                 LS_COMP_SE_VIS       type          ZVCXI_PCSS_S_COMP_SE_VIS,
                 LS_COMP_FG_VIS       type          ZVCXI_P0SS_S_COMP_FG_VIS.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE,
                 LT_GATE_TMP          type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_COMP_SE        type ref to   ZCL_VCXI_PCSS_PR_COMP_SE,
                 LR_PR_COMP_FG        type ref to   ZCL_VCXI_P0SS_PR_COMP_FG.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Initialize No FG Component
  ME->F_NO_COMP_FG = ABAP_TRUE.

*** Get Gates of Components SE
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_SE=>C_IPRVT_P0_COMP_SE
                                   IF_INUSE  = ABAP_TRUE ).

*** Get Gates of Components FG
  LT_GATE_TMP = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_COMP_FG=>C_IPRVT_P0_COMP_FG
                                       IF_INUSE  = ABAP_TRUE ).

  append lines of LT_GATE_TMP to LT_GATE.
  ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).

  loop at LT_GATE into LR_GATE.
    clear: LS_COMP_SE_GRID.

***------------------------------------------------------------------------------------------------
*** Get Global Data
    move LR_GATE->GET_POSID( ) to LS_COMP_SE_GRID-POSID.
    move LR_GATE->F_GATKY      to LS_COMP_SE_GRID-GATKY.
    move LR_GATE               to LS_COMP_SE_GRID-R_GATE.

    try.
***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->R_CLSPR ?to LR_PR_COMP_SE.
        check LR_PR_COMP_SE is bound.

        LS_COMP_SE_VIS = ME->GET_PC_COMP_SE_VIS( IR_PR_COMP_SE = LR_PR_COMP_SE ).
        move-corresponding LS_COMP_SE_VIS to LS_COMP_SE_GRID.

***------------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_COMP_SE( changing  CT_STYL  = LS_COMP_SE_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_COMP_SE_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_COMP_SE_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_COMP_SE.
    endtry.

    try.
***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->R_CLSPR ?to LR_PR_COMP_FG.
        check LR_PR_COMP_FG is bound.

        clear: ME->F_NO_COMP_FG.

        LS_COMP_FG_VIS = ME->GET_COMP_FG_VIS( IR_PR_COMP_FG = LR_PR_COMP_FG ).
        move-corresponding LS_COMP_FG_VIS to LS_COMP_SE_GRID.
        move LS_COMP_FG_VIS-PRSTY       to LS_COMP_SE_GRID-FEFCO.
        move LS_COMP_FG_VIS-PRSTY_DESCR to LS_COMP_SE_GRID-FEFCO_DESCR.

***------------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_COMP_FG( changing  CT_STYL  = LS_COMP_SE_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_COMP_SE_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_COMP_SE_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_COMP_FG.
    endtry.

  endloop.

endmethod.
method GET_PC_COMP_SE_VIS.

  data: LS_PROLE type ZVCXI_P0S_S_PROLE,
        LS_PROWI type ZVCXI_P0S_S_PROWI,
        LS_PROHE type ZVCXI_P0S_S_PROHE,
        LS_SHTPL type ZVCXI_P0SS_S_SHTPL,
        LS_SHTPW type ZVCXI_P0SS_S_SHTPW,
        LS_DIKEY type ZVCXI_P0SS_S_DIKEY.

*** Get Component Product Type and Ratio, Ups and Distribution Key
  RS_COMP_SE_VIS-COMPP       = IR_PR_COMP_SE->GET_COMPP( ).
  RS_COMP_SE_VIS-COMPP_DESCR = IR_PR_COMP_SE->GET_COMPP_DESCR( ).
  RS_COMP_SE_VIS-COMPR       = IR_PR_COMP_SE->GET_COMPR( ).
  RS_COMP_SE_VIS-NOUPS       = IR_PR_COMP_SE->GET_NOUPS( ).
  LS_DIKEY                   = IR_PR_COMP_SE->GET_DIKEY( ).
  move-corresponding LS_DIKEY to RS_COMP_SE_VIS.

*** Get Fefco
  RS_COMP_SE_VIS-FEFCO         = IR_PR_COMP_SE->GET_PRSTY( ).
  RS_COMP_SE_VIS-FEFCO_DESCR   = IR_PR_COMP_SE->GET_PRSTY_DESCR( ).

*** Get Part of Box
  RS_COMP_SE_VIS-BOXPA         = IR_PR_COMP_SE->GET_BOXPA( ).
  RS_COMP_SE_VIS-BOXPA_DESCR   = IR_PR_COMP_SE->GET_BOXPA_DESCR( ).

*** Get Product Dimensions
  LS_PROLE                     = IR_PR_COMP_SE->GET_PROLE( ).
  move-corresponding LS_PROLE to RS_COMP_SE_VIS.
  LS_PROWI                     = IR_PR_COMP_SE->GET_PROWI( ).
  move-corresponding LS_PROWI to RS_COMP_SE_VIS.
  LS_PROHE                     = IR_PR_COMP_SE->GET_PROHE( ).
  move-corresponding LS_PROHE to RS_COMP_SE_VIS.

*** Get Product Sheet Dimensions
  LS_SHTPL                     = IR_PR_COMP_SE->GET_SHTPL( ).
  move-corresponding LS_SHTPL to RS_COMP_SE_VIS.
  LS_SHTPW                     = IR_PR_COMP_SE->GET_SHTPW( ).
  move-corresponding LS_SHTPW to RS_COMP_SE_VIS.

*** Get Material Description
  RS_COMP_SE_VIS-MATDE         = IR_PR_COMP_SE->GET_MATDE( ).

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_COMP_SE_GRID      type          ZVCXI_PCSS_S_COMP_SE_GRID,
                 LS_COMP_SE_VIS       type          ZVCXI_PCSS_S_COMP_SE_VIS,
                 LS_COMP_FG_VIS       type          ZVCXI_P0SS_S_COMP_FG_VIS.
  data:          LR_PR_COMP_SE        type ref to   ZCL_VCXI_PCSS_PR_COMP_SE,
                 LR_PR_COMP_FG        type ref to   ZCL_VCXI_P0SS_PR_COMP_FG,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

***   If we switch Application Events off -> do manually Refresh Screen
      if ME->F_APPL_EVENTS eq ABAP_FALSE.
        ME->R_UIGATE->REFRESH_SCREEN( ).
      endif.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move-corresponding <S_DATA> to LS_COMP_SE_GRID.
        check LS_COMP_SE_GRID-R_GATE is bound.

***     Set Data to COMP SE
        try.
            move LS_COMP_SE_GRID-R_GATE->R_CLSPR ?to LR_PR_COMP_SE.
            check LR_PR_COMP_SE is bound.

***         Set Values to PR Class
            move-corresponding LS_COMP_SE_GRID to LS_COMP_SE_VIS.
            ME->SET_PC_COMP_SE_VIS( IR_PR_COMP_SE  = LR_PR_COMP_SE
                                    IS_COMP_SE_VIS = LS_COMP_SE_VIS ).

          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_COMP_SE.
        endtry.

***     Set Data to COMP FG
        try.
            move LS_COMP_SE_GRID-R_GATE->R_CLSPR ?to LR_PR_COMP_FG.
            check LR_PR_COMP_FG is bound.

***         Set Values to PR Class
            move-corresponding LS_COMP_SE_GRID to LS_COMP_FG_VIS.
            ME->SET_COMP_FG_VIS( IR_PR_COMP_FG  = LR_PR_COMP_FG
                                 IS_COMP_FG_VIS = LS_COMP_FG_VIS ).

          catch CX_SY_MOVE_CAST_ERROR.
            clear: LR_PR_COMP_FG.
        endtry.

      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_PC_COMP_SE_VIS.

  data: LS_PROLE       type ZVCXI_P0S_S_PROLE,
        LS_PROWI       type ZVCXI_P0S_S_PROWI,
        LS_PROHE       type ZVCXI_P0S_S_PROHE,
        LS_SHTPL       type ZVCXI_P0SS_S_SHTPL,
        LS_SHTPW       type ZVCXI_P0SS_S_SHTPW,
        LS_DIKEY       type ZVCXI_P0SS_S_DIKEY,
        LS_COMP_SE_VIS type ZVCXI_PCSS_S_COMP_SE_VIS.

  LS_COMP_SE_VIS = ME->GET_PC_COMP_SE_VIS( IR_PR_COMP_SE = IR_PR_COMP_SE ).

*** Set Component Product Type and Ratio
  if LS_COMP_SE_VIS-COMPP ne IS_COMP_SE_VIS-COMPP.
    IR_PR_COMP_SE->SET_COMPP( IF_COMPP = IS_COMP_SE_VIS-COMPP
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SE_VIS-NOUPS ne IS_COMP_SE_VIS-NOUPS.
    IR_PR_COMP_SE->SET_NOUPS( IF_NOUPS = IS_COMP_SE_VIS-NOUPS
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endif.

  if LS_COMP_SE_VIS-COMPR ne IS_COMP_SE_VIS-COMPR.
    IR_PR_COMP_SE->SET_COMPR( IF_COMPR = IS_COMP_SE_VIS-COMPR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SE_VIS-DIKEY ne IS_COMP_SE_VIS-DIKEY.
    move-corresponding IS_COMP_SE_VIS to LS_DIKEY.
    IR_PR_COMP_SE->SET_DIKEY( IS_DIKEY = LS_DIKEY
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Fefco
  if LS_COMP_SE_VIS-FEFCO ne IS_COMP_SE_VIS-FEFCO.
    IR_PR_COMP_SE->SET_PRSTY( IF_PRSTY = IS_COMP_SE_VIS-FEFCO
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Box Part
  if LS_COMP_SE_VIS-BOXPA ne IS_COMP_SE_VIS-BOXPA.
    IR_PR_COMP_SE->SET_BOXPA( IF_BOXPA = IS_COMP_SE_VIS-BOXPA
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Product Dimensions
  if LS_COMP_SE_VIS-PROLE ne IS_COMP_SE_VIS-PROLE.
    move-corresponding IS_COMP_SE_VIS to LS_PROLE.
    IR_PR_COMP_SE->SET_PROLE( IS_PROLE = LS_PROLE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SE_VIS-PROWI ne IS_COMP_SE_VIS-PROWI.
    move-corresponding IS_COMP_SE_VIS to LS_PROWI.
    IR_PR_COMP_SE->SET_PROWI( IS_PROWI = LS_PROWI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SE_VIS-PROHE ne IS_COMP_SE_VIS-PROHE.
    move-corresponding IS_COMP_SE_VIS to LS_PROHE.
    IR_PR_COMP_SE->SET_PROHE( IS_PROHE = LS_PROHE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Product Sheet Dimensions
  if LS_COMP_SE_VIS-SHTPL ne IS_COMP_SE_VIS-SHTPL.
    move-corresponding IS_COMP_SE_VIS to LS_SHTPL.
    IR_PR_COMP_SE->SET_SHTPL( IS_SHTPL = LS_SHTPL
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_COMP_SE_VIS-SHTPW ne IS_COMP_SE_VIS-SHTPW.
    move-corresponding IS_COMP_SE_VIS to LS_SHTPW.
    IR_PR_COMP_SE->SET_SHTPW( IS_SHTPW = LS_SHTPW
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

***--------------------------------------------------------------------------------------
*** Set Material Description
  if LS_COMP_SE_VIS-MATDE ne IS_COMP_SE_VIS-MATDE.
    IR_PR_COMP_SE->SET_MATDE( IF_MATDE = IS_COMP_SE_VIS-MATDE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
