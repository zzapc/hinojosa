
class ZCL_VCXI_FBSP_PR_ADDON_BMAKE definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_ADDON
  create public .

public section.

  interfaces ZIF_VCXI_FBSP_ADJ_BGDIM .

  constants C_PARID_BGHEI type /VCXI/VKS_PARID value 'ZVCXI_FB_BGHEI' ##NO_TEXT.
  constants C_PARID_BGWGT type /VCXI/VKS_PARID value 'ZVCXI_FB_BGWGT' ##NO_TEXT.
  constants C_PARID_BGWID type /VCXI/VKS_PARID value 'ZVCXI_FB_BGWID' ##NO_TEXT.
  constants C_PARID_IBAGT type /VCXI/VKS_PARID value 'ZVCXI_FB_IBAGT' ##NO_TEXT.
  constants C_PARID_NOOUT type /VCXI/VKS_PARID value 'ZVCXI_XC_NOOUT' ##NO_TEXT.
  constants C_PARID_NOUPS type /VCXI/VKS_PARID value 'ZVCXI_F0_NOUPS' ##NO_TEXT.

  methods GET_BGHEI
    exporting
      !ES_BGHEI type ZVCXI_FBS_S_BGHEI
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_BGWGT
    exporting
      !ES_BGWGT type ZVCXI_FBS_S_BGWGT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_BGWID
    exporting
      !ES_BGWID type ZVCXI_FBS_S_BGWID
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_IBAGT
    exporting
      !EF_IBAGT type ZVCXI_FBS_IBAGT
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_NOOUT
    exporting
      !EF_NOOUT type ZVCXI_XCS_NOOUT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_NOUPS
    exporting
      !EF_NOUPS type ZVCXI_F0S_NOUPS
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_BGHEI
    importing
      !IS_BGHEI type ZVCXI_FBS_S_BGHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_BGWGT
    importing
      !IS_BGWGT type ZVCXI_FBS_S_BGWGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_BGWID
    importing
      !IS_BGWID type ZVCXI_FBS_S_BGWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_IBAGT
    importing
      !IF_IBAGT type ZVCXI_FBS_IBAGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOUPS
    importing
      !IF_NOUPS type ZVCXI_F0S_NOUPS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_BGDIM type /VCXI/VKSC_IEVNT value 'RECALC_BGDIM' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_BGHEI_CHANGED type /VCXI/VKSC_IEVNT value 'BGHEI_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_BGWGT_CHANGED type /VCXI/VKSC_IEVNT value 'BGWGT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_BGWID_CHANGED type /VCXI/VKSC_IEVNT value 'BGWID_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_IBAGT_CHANGED type /VCXI/VKSC_IEVNT value 'IBAGT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RECALC_CONSU_REQ type /VCXI/VKSC_IEVNT value 'RECALC_CONSU_REQ' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FBSP_PR_ADDON_BMAKE definition
class ZCL_VCXI_FBSP_PR_ADDON_BMAKE implementation.
  method GET_BGHEI.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BGHEI ).
    move LS_PARAM-ATFLV to ES_BGHEI-BGHEI.
    move LS_PARAM-UNIT  to ES_BGHEI-BGHEI_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_BGWGT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BGWGT ).
    move LS_PARAM-ATFLV to ES_BGWGT-BGWGT.
    move LS_PARAM-UNIT  to ES_BGWGT-BGWGT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_BGWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BGWID ).
    move LS_PARAM-ATFLV to ES_BGWID-BGWID.
    move LS_PARAM-UNIT  to ES_BGWID-BGWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_IBAGT.

    data:  LS_PARAM     type        /VCXI/VKSR_S_PARAM.
    data:  LR_CUST_BAG  type ref to ZCL_VCXI_FBSS_CUST_BAG.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_IBAGT ).
    move LS_PARAM-ATWRT to EF_IBAGT.
    move LS_PARAM-SETBY to EF_SETBY.

    if EF_DESCR is requested and
       EF_IBAGT is not initial.
***   Get Bag Type Customizing
      LR_CUST_BAG = ZCL_VCXI_FBSS_CUST_BAG=>GET_INSTANCE( IF_IBAGT = EF_IBAGT ).
      if LR_CUST_BAG is bound.
        move LR_CUST_BAG->GET_DESCR( ) to EF_DESCR.
      endif.
    endif.

  endmethod.
  method GET_NOOUT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).
    move LS_PARAM-ATFLV to EF_NOOUT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_NOUPS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).
    move LS_PARAM-ATFLV to EF_NOUPS.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

***   Bag Dimensions
      when C_IEVNT_I_RECALC_BGDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE         type        /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI        type        ZVCXI_XCSP_S_MQTYI.
    data: LF_UPDATE_ALL   type        ABAP_BOOL.
    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT  type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MACHINE   type ref to ZCL_VCXI_XCSP_PR_MACHINE,
          LR_PR_MC        type ref to ZCL_VCXI_XCSP_PR_MC,
          LR_PR_MC_HANDLE type ref to ZCL_VCXI_FBSP_PR_MC_HANDLE.

***--------------------------------------------------------------------------------------
*** Should all MC Handle's updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MACHINE=>C_IPRVT_XCS_MACHINE
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.

      clear: LR_PR_MACHINE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MACHINE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_MACHINE.
      endtry.
      if LR_PR_MACHINE is bound.
        move LR_PR_MACHINE->GET_MQTYI( ) to LS_MQTYI.
      endif.

    endif.

***--------------------------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

***   Try Calculation for Handle
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MC_HANDLE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MC_HANDLE.
      endtry.
      if LR_PR_MC_HANDLE is bound.
        LR_PR_MC_HANDLE->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
      else.
***     Calculate standard Consumption
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_MC.
          catch CX_SY_MOVE_CAST_ERROR.
            clear LR_PR_MC.
        endtry.
        if LR_PR_MC is bound.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
        endif.
      endif.
    endloop.

  endmethod.
  method SET_BGHEI.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BGHEI ).

    move IS_BGHEI-BGHEI     to LS_PARAM-ATFLV.
    move IS_BGHEI-BGHEI_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_BGWGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BGWGT ).

    move IS_BGWGT-BGWGT     to LS_PARAM-ATFLV.
    move IS_BGWGT-BGWGT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_BGWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BGWID ).

    move IS_BGWID-BGWID     to LS_PARAM-ATFLV.
    move IS_BGWID-BGWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_IBAGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_IBAGT ).

    move IF_IBAGT to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_NOOUT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).

    move IF_NOOUT           to LS_PARAM-ATFLV.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method SET_NOUPS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOUPS ).

    move IF_NOUPS           to LS_PARAM-ATFLV.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FBSP_ADJ_BGDIM~CALC_BGDIM_OUT.

    data:          LF_NOUPS   type ZVCXI_F0S_NOUPS.
    field-symbols: <S_BGDIM>  type ZVCXI_FBSP_S_BGDIM.

    free CT_BGDIM.

*** Define new Bag Dimensions
    append initial line to CT_BGDIM assigning <S_BGDIM>.
    ME->GET_IBAGT( importing EF_IBAGT = <S_BGDIM>-IBAGT ).
    ME->GET_BGWID( importing ES_BGWID = <S_BGDIM>-S_BGWID ).
    ME->GET_BGHEI( importing ES_BGHEI = <S_BGDIM>-S_BGHEI ).
    ME->GET_BGWGT( importing ES_BGWGT = <S_BGDIM>-S_BGWGT ).
    ME->GET_NOOUT( importing EF_NOOUT = <S_BGDIM>-NOOUT ).
    ME->GET_NOUPS( importing EF_NOUPS = <S_BGDIM>-NOUPS ).

  endmethod.
