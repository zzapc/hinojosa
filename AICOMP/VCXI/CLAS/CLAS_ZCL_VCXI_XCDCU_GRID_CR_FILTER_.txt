
class ZCL_VCXI_XCDCU_GRID_CR_FILTER definition
  public
  inheriting from ZCL_VCXI_XCDCU_GRID
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME optional
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_CUSTOMIZING type ref to OBJECT
    raising
      /VCXI/CX_CKX .
protected section.

  data R_CONDREC type ref to ZCL_VCXI_XCDC_CONDREC .
  constants C_FUNC_ADD type UI_FUNC value 'ADD'. "#EC NOTEXT
  constants C_FUNC_DEL type UI_FUNC value 'DELETE'. "#EC NOTEXT

  methods ADD_FILTER
    raising
      /VCXI/CX_CKX .
  methods DELETE_FILTER
    importing
      !IT_CR_FILTER type ZVCXI_XCDC_TT_CR_FILTER
    raising
      /VCXI/CX_CKX .
  methods CHECK_SEL_DELETE
    returning
      value(RF_OKAY) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT
      !E_INTERACTIVE .
  methods HANDLE_USER_COMMAND
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods INIT_LOCKED
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_XCDCU_GRID_CR_FILTER definition
class ZCL_VCXI_XCDCU_GRID_CR_FILTER implementation.
method ADD_FILTER.

  data:          LF_DISPLAY         type                   ABAP_BOOL.
  data:          LS_RETURN          type                   DDSHRETVAL,
                 LS_MAP             type                   DSELC,
                 LS_CR_FILTER       type                   ZVCXI_XCDC_S_CR_FILTER,
                 LS_CD_VALID        type                   ZVCXI_XCDC_S_CD_VALID.
  data:          LT_RETURN          type table of          DDSHRETVAL,
                 LT_MAP             type standard table of DSELC,
                 LT_CR_FILTER       type                   ZVCXI_XCDC_TT_CR_FILTER,
                 LT_CR_FILTER_NEW   type                   ZVCXI_XCDC_TT_CR_FILTER.
  field-symbols: <F_FIELD>          type                   any,
                 <S_CR_FILTER>      type                   ZVCXI_XCDC_S_CR_FILTER.

*** Change mode?
  if ME->R_CONDREC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
    move ABAP_TRUE to LF_DISPLAY.
  endif.


*** Get all Condition Definition Possibilities
  loop at ME->R_CONDREC->R_CONDDEF->T_CD_VALID into LS_CD_VALID.

    do.
      clear: LS_CR_FILTER.
***   Get the different Combinations
      case SY-INDEX.
        when 1.
          move LS_CD_VALID-CMATN to LS_CR_FILTER-CMATN.
        when 2.
          move LS_CD_VALID-PRFID to LS_CR_FILTER-PRFID.
        when 3.
          move LS_CD_VALID-ICELM to LS_CR_FILTER-ICELM.
        when 4.
          move LS_CD_VALID-CMATN to LS_CR_FILTER-CMATN.
          move LS_CD_VALID-PRFID to LS_CR_FILTER-PRFID.
        when 5.
          move LS_CD_VALID-CMATN to LS_CR_FILTER-CMATN.
          move LS_CD_VALID-PRFID to LS_CR_FILTER-PRFID.
          move LS_CD_VALID-ICELM to LS_CR_FILTER-ICELM.
        when others.
          exit.
      endcase.

***   Check if it already Exist
      read table ME->R_CONDREC->T_CR_FILTER with key CMATN = LS_CR_FILTER-CMATN
                                                     PRFID = LS_CR_FILTER-PRFID
                                                     ICELM = LS_CR_FILTER-ICELM
                                            transporting no fields.
      if SY-SUBRC ne 0.
        collect LS_CR_FILTER into LT_CR_FILTER.
      endif.
    enddo.
  endloop.


  LS_MAP-FLDNAME   = 'F0002'. "Field for Position 1
  LS_MAP-DYFLDNAME = 'CMATN'.
  append LS_MAP to LT_MAP.

  LS_MAP-FLDNAME   = 'F0003'. "Field for Position 2
  LS_MAP-DYFLDNAME = 'PRFID'.
  append LS_MAP to LT_MAP.

  LS_MAP-FLDNAME   = 'F0004'. "Field for Position 3
  LS_MAP-DYFLDNAME = 'ICELM'.
  append LS_MAP to LT_MAP.


*** Call Searchelp
  call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    exporting
      RETFIELD        = 'CMATN'
      VALUE_ORG       = 'S'
      MULTIPLE_CHOICE = ABAP_TRUE
      DISPLAY         = LF_DISPLAY
    tables
      VALUE_TAB       = LT_CR_FILTER
      DYNPFLD_MAPPING = LT_MAP
      RETURN_TAB      = LT_RETURN
    exceptions
      PARAMETER_ERROR = 1
      NO_VALUES_FOUND = 2
      others          = 3.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

  if SY-SUBRC eq 0.
    sort LT_RETURN by RECORDPOS.
    loop at LT_RETURN into LS_RETURN.
      read table LT_CR_FILTER_NEW assigning <S_CR_FILTER> index LS_RETURN-RECORDPOS.
      if SY-SUBRC ne 0.
        append initial line to LT_CR_FILTER_NEW assigning <S_CR_FILTER>.
      endif.
      assign component LS_RETURN-RETFIELD of structure <S_CR_FILTER> to <F_FIELD>.
      check SY-SUBRC = 0.
      move LS_RETURN-FIELDVAL to <F_FIELD>.
      unassign <F_FIELD>.
    endloop.
  endif.

*** Process Result
  loop at LT_CR_FILTER_NEW into LS_CR_FILTER.

*** Add Initial Filter
    ME->R_CONDREC->ADD_CR_FILTER( IS_CR_FILTER = LS_CR_FILTER ).

  endloop.

endmethod.                    "ADD_FILTER
method CHECK_SEL_DELETE.

  data: LT_CELL type LVC_T_CELL,
        LT_ROW  type LVC_T_ROW.

  ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
  ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

*** Delete is only available if Cells are selected
  if lines( LT_CELL ) gt 0 or
     lines( LT_ROW )  gt 0.
    move ABAP_TRUE to RF_OKAY.
  else.
    move ABAP_FALSE to RF_OKAY.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_TABNAME        = 'ZVCXI_XCDCU_S_CR_FILTER_GRID'
                      IF_CONTAINER_NAME = '0100CC_GRID_FILTER'
                      IR_CUSTOMIZING    = IR_CUSTOMIZING ).


*** Try to Assign Customizing Reference
  try.
      move IR_CUSTOMIZING ?to ME->R_CONDREC.
    catch CX_SY_MOVE_CAST_ERROR.
***   Condition Record Customizing Reference can't be assigned.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCDC'
          IF_MSGNO = '252' ).
  endtry.

  check ME->R_CONDREC is bound.
  ME->F_LOCKED = ME->R_CONDREC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).

endmethod.
method DELETE_FILTER.

  data: LS_CR_FILTER type ZVCXI_XCDC_S_CR_FILTER.

  loop at IT_CR_FILTER into LS_CR_FILTER.
*** Delete by ID
    ME->R_CONDREC->DELETE_CR_FILTER( IS_CR_FILTER = LS_CR_FILTER ).

  endloop.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>     type                   LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'GCRFI'.
        move ABAP_TRUE to <S_FCAT>-TECH.
      when 'IEALI'.
        if ME->F_LOCKED eq ABAP_TRUE.
          move ABAP_TRUE to <S_FCAT>-EDIT.
        endif.
    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_CR_FILTER_GRID    type          ZVCXI_XCDCU_S_CR_FILTER_GRID,
                 LS_CR_FILTER         type          ZVCXI_XCDC_S_CR_FILTER.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

  free: <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get all Condition Values
  loop at ME->R_CONDREC->T_CR_FILTER into LS_CR_FILTER.
    clear: LS_CR_FILTER_GRID.

    move-corresponding LS_CR_FILTER to LS_CR_FILTER_GRID.

*** --------------------------------------------------------------------------------------------
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.
    move-corresponding LS_CR_FILTER_GRID to <S_DATA>.

  endloop.

endmethod.
method GET_LAYOUT.

  RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Toolbar to Activ
  move ABAP_FALSE to RS_LAYOUT-NO_TOOLBAR.
  move 'A'        to RS_LAYOUT-SEL_MODE.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_CR_FILTER         type          ZVCXI_XCDC_S_CR_FILTER.
  data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( exporting E_MODIFIED    = E_MODIFIED
                                                     ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.

        read table ET_GOOD_CELLS with key ROW_ID = SY-TABIX transporting no fields.
        check SY-SUBRC eq 0.
        move-corresponding <S_DATA> to LS_CR_FILTER.
        ME->R_CONDREC->UPDATE_CR_FILTER( IS_CR_FILTER = LS_CR_FILTER ).
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method HANDLE_TOOLBAR.

  data:  LS_TOOLBAR      type        STB_BUTTON.
  data:  LF_DISABLED     type        ABAP_BOOL.
  data:  LR_CX_CKX       type ref to /VCXI/CX_CKX.

  try.

      if ME->R_CONDREC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_FALSE.
        move ABAP_TRUE to LF_DISABLED.
      endif.

***----------------------------------------------------------------------------
***   Insert Toolbar elements Add and Delete
      clear LS_TOOLBAR.
      move C_FUNC_ADD                 to LS_TOOLBAR-FUNCTION.
      move 'Add'(002)                 to LS_TOOLBAR-TEXT.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_INSERT_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

      clear LS_TOOLBAR.
      move C_FUNC_DEL                 to LS_TOOLBAR-FUNCTION.
      move 'Delete'(003)              to LS_TOOLBAR-TEXT.
      move C_BTYPE_BUTTON             to LS_TOOLBAR-BUTN_TYPE.
      move ICON_DELETE_ROW            to LS_TOOLBAR-ICON.
      move LF_DISABLED                to LS_TOOLBAR-DISABLED.
      append LS_TOOLBAR               to E_OBJECT->MT_TOOLBAR.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_USER_COMMAND.

  data:          LS_CELL         type          LVC_S_CELL,
                 LS_ROW          type          LVC_S_ROW.
  data:          LT_CELL         type          LVC_T_CELL,
                 LT_ROW          type          LVC_T_ROW,
                 LT_CR_FILTER    type          ZVCXI_XCDC_TT_CR_FILTER.
  data:          LR_CX_CKX       type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>        type standard table,
                 <S_CR_FILTER>   type          ZVCXI_XCDC_S_CR_FILTER,
                 <S_DATA>        type          any.

  try.

***   Get Value Data
      assign ME->R_DATA->* to <T_DATA>.
      free: <T_DATA>.
      ME->GET_GRID_DATA( IR_DATA = ME->R_DATA ).

      ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
      ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).

      case E_UCOMM.

        when C_FUNC_ADD.
***       Add new Filter
          ME->ADD_FILTER( ).

        when C_FUNC_DEL.
***       Delete Filter
          if ME->CHECK_SEL_DELETE( ) eq ABAP_FALSE.
***         No Row Selected. Please Select all Row's you wanna Delete.
            raise exception type /VCXI/CX_CKX
             exporting
                F_MSGTY = 'E'
                F_MSGID = 'ZVCXI_XCDCU'
                F_MSGNO = '301'.
          endif.

***       Get Selected Filter's
          loop at LT_CELL into LS_CELL.
            read table <T_DATA> assigning <S_DATA> index LS_CELL-ROW_ID-INDEX.
            check SY-SUBRC = 0.

            append initial line to LT_CR_FILTER assigning <S_CR_FILTER>.
            move-corresponding <S_DATA> to <S_CR_FILTER>.
          endloop.

          loop at LT_ROW into LS_ROW.
            read table <T_DATA> assigning <S_DATA> index LS_ROW-INDEX.
            check SY-SUBRC = 0.

            append initial line to LT_CR_FILTER assigning <S_CR_FILTER>.
            move-corresponding <S_DATA> to <S_CR_FILTER>.
          endloop.

***       Delete Filter's
          ME->DELETE_FILTER( IT_CR_FILTER = LT_CR_FILTER ).

      endcase.

      ME->F_REFRESH_REQ = ABAP_TRUE.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method INIT_LOCKED.

  ME->F_LOCKED = ME->R_CONDREC->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).

endmethod.
method SET_EVENT.

  SUPER->SET_EVENT( ).

*** Add Event for Double Click, UserCommand and Toolbar
  set handler ME->HANDLE_USER_COMMAND for ME->R_GRID.
  set handler ME->HANDLE_TOOLBAR      for ME->R_GRID.

endmethod.
