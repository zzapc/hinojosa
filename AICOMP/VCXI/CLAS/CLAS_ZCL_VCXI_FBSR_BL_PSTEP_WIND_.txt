
class ZCL_VCXI_FBSR_BL_PSTEP_WIND definition
  public
  inheriting from ZCL_VCXI_FBSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .

  constants C_IPSTP_WIND type /VCXI/VSMC_IPSTP value 'FB_PS_WIND' ##NO_TEXT.
  data S_RLDIA type ZVCXI_FBS_S_RLDIA read-only .
  data S_WMDRL type ZVCXI_FBS_S_WMDRL read-only .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_WIND
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
protected section.

  constants C_ATTID_ISVCE type /VCXI/VKS_ATTID value 'ISVCE_MC' ##NO_TEXT.
  constants C_IATYP_AT_WIND type /VCXI/VSMC_IATYP value 'FB_AT_WIND' ##NO_TEXT.
  data T_MS_WNMAT type ZVCXI_FBSR_TT_MS_WNMAT .

  methods GET_PRVDR_WIND
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_PR_WICKET) type ref to ZCL_VCXI_FBSS_PR_CSTEP_WICKET
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_WIND
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_CSTEP_WIND
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MS_WNMAT
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_WNMAT
    importing
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL optional
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSR_BL_PSTEP_WIND definition
class ZCL_VCXI_FBSR_BL_PSTEP_WIND implementation.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL  type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE  type /VCXI/CKX_TT_OBJECT.
    data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
          LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE.
    field-symbols: <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***--------------------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***--------------------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Winding Mandrel
        when 'FB_LT_DP_WMDRL'.
          LF_LDVAL = ME->S_WMDRL-WMDRL.
          LF_LDUOM = ME->S_WMDRL-WMDRL_UOM.

***     Roll Diameter
        when 'FB_LT_DP_RLDIA'.
          LF_LDVAL = ME->S_RLDIA-RLDIA.
          LF_LDUOM = ME->S_RLDIA-RLDIA_UOM.

        when others.
          continue.
      endcase.

***--------------------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_WNMAT.

    data: LS_MS_WNMAT type ZVCXI_FBSR_S_MS_WNMAT,
          LS_AVGCO    type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP    type ZVCXI_XCS_S_AVGCP.
    data: LR_SPVRE type ref to /VCXI/CL_VKSR_SPVRE.


    loop at ME->T_MS_WNMAT into LS_MS_WNMAT.

***------------------------------------------------------------------------------------------------
***   Create Supervisor Runtime Element
      LR_SPVRE = new #( IR_SPVCE  = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_WNMAT-ISVCE
                                                             IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE )
                        IR_PARENT = IR_SPVRE_PARENT ).
      append LR_SPVRE to CT_SPVRE.

***   Set In Use
      LR_SPVRE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Material Number
      LR_SPVRE->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_WNMAT-MATNR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Text
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_TEXT
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_WNMAT-TEXT
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Average Consumption
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_MS_WNMAT-ISVCE when 'MC_WNMAT_L' then ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_AVGCO_L
                                                                                   when 'MC_WNMAT_P' then ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_AVGCO_P )
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WNMAT-AVGCO
                                               UNIT  = LS_MS_WNMAT-AVGCO_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Average Consumption Per
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_AVGCP_P
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WNMAT-AVGCP
                                               UNIT  = LS_MS_WNMAT-AVGCP_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Purchase Flag
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_PURCH
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_WNMAT-PURCH
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Purchase Information
      check LS_MS_WNMAT-PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

***   Price
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_PRICE
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WNMAT-PRICE
                                               CURKY = LS_MS_WNMAT-PRICE_CURR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Price Unit
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_MS_WNMAT-ISVCE when 'MC_WNMAT_L' then ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_PRICP_L
                                                                                   when 'MC_WNMAT_P' then ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_PRICP_P )
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WNMAT-PRICP
                                               UNIT  = LS_MS_WNMAT-PRICP_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Vendor
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_MC_WNMAT=>C_PARID_LIFNR
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_WNMAT-LIFNR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).


***------------------------------------------------------------------------------------------------
****   Add Price Scale
*      if LS_MS_WNMAT-T_PSCALE is not initial.
*        IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE
*                                                IT_PSCALE       = LS_MS_WNMAT-T_PSCALE
*                                      changing  CT_SPVRE        = CT_SPVRE ).
*      endif.
    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_WIND type ref to ZCL_VCXI_FBSR_BL_PSTEP_WIND.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_WIND.

***--------------------------------------------------------------------------------------
*** Winding Materials
    if ME->T_MS_WNMAT eq LR_BL_PSTEP_WIND->T_MS_WNMAT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Winding Mandrel and Roll Diameter
    if ME->S_WMDRL eq LR_BL_PSTEP_WIND->S_WMDRL and
       ME->S_RLDIA eq LR_BL_PSTEP_WIND->S_RLDIA.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_WIND type ref to ZCL_VCXI_FBSR_BL_PSTEP_WIND.

***--------------------------------------------------------------------------------------
*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_WIND.

*** Winding Materials
    move ME->T_MS_WNMAT to  LR_BL_PSTEP_WIND->T_MS_WNMAT.

*** Winding Mandrel and Roll Diameter
    move ME->S_WMDRL    to LR_BL_PSTEP_WIND->S_WMDRL.
    move ME->S_RLDIA    to LR_BL_PSTEP_WIND->S_RLDIA.

  endmethod.
  method DESERIALIZE.

    data:  LF_XML   type STRING.

    check IF_XML is not initial.

*** Deserialize
    call transformation ID
         source xml IF_XML
         result SUPER_XML    = LF_XML
                S_WMDRL      = ME->S_WMDRL
                S_RLDIA      = ME->S_RLDIA
                T_MS_WNMAT   = ME->T_MS_WNMAT.

    SUPER->DESERIALIZE( IF_XML = LF_XML ).

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when C_IATYP_AT_WIND.
        ME->FILL_SPVRE_ADDON_WIND( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                             IR_ARBPL       = IR_ARBPL
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_WIND.

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Winding Material
    ME->ADD_SPVRE_MC_WNMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = IR_SPVRE_ADDON
                            changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***--------------------------------------------------------------------------------------
*** Standard
    move 'GRP_CONV'   to CF_ID_GRP.
    move 'ARBPL_CONV' to CF_ID_ARBPL.

***--------------------------------------------------------------------------------------
*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'GRP_CONV'       to CF_ID_GRP.
      move 'ARBPL_OUTSO'    to CF_ID_ARBPL.
    endif.

***--------------------------------------------------------------------------------------
*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'GRP_CONV'    to CF_ID_GRP.
      move 'ARBPL_MANU'  to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_PRVDR_WIND.

    data:  LR_GATE   type ref to /VCXI/CL_VKSR_GATE.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_WICKET.
          if RR_PR_WICKET is bound.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM       type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***--------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_WICKET'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Winding Material
    ME->ADD_SPVRE_MC_WNMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                            changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method INIT_BY_CSTEP_WIND.

    data: LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_WIND type ref to ZCL_VCXI_FBSS_PR_CSTEP_WIND.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Winding
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_FBSS_PR_CSTEP_WIND.
      LR_PR_CSTEP_WIND ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_CSTEP_WIND is bound.

***--------------------------------------------------------------------------------------
*** Winding Mandrel
    ME->S_WMDRL = LR_PR_CSTEP_WIND->GET_WMDRL( ).

*** Roll Diameter
    ME->S_RLDIA = LR_PR_CSTEP_WIND->GET_RLDIA( ).

  endmethod.
  method INIT_BY_MS_WNMAT.

    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_WNMAT type ref to ZCL_VCXI_FBSS_PR_MS_WNMAT.


    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_FBSS_PR_MS_WNMAT.
      LR_PR_MS_WNMAT ?= LR_GATE->R_CLSPR.

      append value #( ISVCE   = LR_GATE->GET_ATTRI( IF_ATTID = C_ATTID_ISVCE )-ATTVA
                      MATNR   = LR_PR_MS_WNMAT->GET_MATNR( )
                      TEXT    = LR_PR_MS_WNMAT->GET_TEXT( )
                      S_AVGCO = LR_PR_MS_WNMAT->GET_AVGCO( )
                      S_AVGCP = LR_PR_MS_WNMAT->GET_AVGCP( )
                      PURCH   = LR_PR_MS_WNMAT->GET_PURCH( )
                      LIFNR   = LR_PR_MS_WNMAT->GET_LIFNR( )
                      S_PRICE = LR_PR_MS_WNMAT->GET_PRICE( )
                      S_PRICP = LR_PR_MS_WNMAT->GET_PRICP( )
                    ) to ME->T_MS_WNMAT.
    endloop.

  endmethod.
  method INIT_BY_SPEC.

    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Initialize by CStep Winding
    ME->INIT_BY_CSTEP_WIND( IT_PRVDR = IT_PRVDR ).

*** Get Winding Material Data
    ME->INIT_BY_MS_WNMAT( IR_GATE  = IR_GATE
                          IT_PRVDR = IT_PRVDR ).

  endmethod.
  method SERIALIZE.

*** Super Serialize
    RF_XML = SUPER->SERIALIZE( ).

*** Serialize
    call transformation ID
         source SUPER_XML    = RF_XML
                S_WMDRL      = ME->S_WMDRL
                S_RLDIA      = ME->S_RLDIA
                T_MS_WNMAT   = ME->T_MS_WNMAT

    result xml RF_XML.

  endmethod.
