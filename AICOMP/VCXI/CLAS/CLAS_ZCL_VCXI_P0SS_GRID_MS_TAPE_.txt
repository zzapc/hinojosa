
class ZCL_VCXI_P0SS_GRID_MS_TAPE definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  type-pools ABAP .
  methods CHANGE_STYLE_TAPE
    importing
      !IF_PURCH type ABAP_BOOL
      !IF_DUMMY type ABAP_BOOL
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SS_GRID_MS_TAPE definition
class ZCL_VCXI_P0SS_GRID_MS_TAPE implementation.
method CHANGE_STYLE_TAPE.

  free CT_STYL.

***------------------------------------------------------------------
*** Purchase Tape
  case IF_PURCH.
    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***   Set Vendor = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
  endcase.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_P0SS_S_MS_TAPE_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_P0SS_PR_MS_TAPE=>C_IPRVT_P0_MS_TAPE.

endmethod.
method GET_FIELDCAT.

  data: LF_LOCKED type /VCXI/CKX_LOCKED,
        LF_INUSE  type /VCXI/VKSR_INUSE,
        LF_LIFNR  type ABAP_BOOL,
        LF_PRICE  type ABAP_BOOL,
        LF_COLPOS type I.
  data: LS_MS_TAPE_GRID  type ZVCXI_P0SS_S_MS_TAPE_GRID.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY,
                 <S_FCAT> type          LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
  assign ME->R_DATA->* to <T_DATA>.

  loop at <T_DATA> assigning <S_DATA>.
    move-corresponding <S_DATA> to LS_MS_TAPE_GRID.
    case LS_MS_TAPE_GRID-PURCH.
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
        LF_LIFNR = ABAP_TRUE.
        LF_PRICE = ABAP_TRUE.
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
        LF_LIFNR = ABAP_TRUE.
    endcase.
  endloop.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.
        move 0            to <S_FCAT>-COL_POS.

      when 'TTAPE'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'TEXT'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'TAPOS'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'PURCH'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'LIFNR'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'PRICE' or 'PRICP'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.

***----------------------------------------------------------------------------
*** Hide Field if not purchase
    if LF_LIFNR ne ABAP_TRUE.
      if <S_FCAT>-FIELDNAME eq 'LIFNR' or
         <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      endif.
    endif.
    if LF_PRICE ne ABAP_TRUE.
      if <S_FCAT>-FIELDNAME eq 'PRICE' or
         <S_FCAT>-FIELDNAME eq 'PRICE_CURR' or
         <S_FCAT>-FIELDNAME eq 'PRICP' or
         <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      endif.
    endif.

***----------------------------------------------------------------------------
*** Set Position for each Field
    move 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'POSID'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'GATKY'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    move 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'POSID'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'GATKY'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    move 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TTAPE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TTAPE_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TAPOS'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TAPOS_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TEXT'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PURCH'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'LIFNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICE_CURR'.  <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data: LS_MS_TAPE_GRID type          ZVCXI_P0SS_S_MS_TAPE_GRID,
        LS_TAPOS        type          ZVCXI_P0SS_S_TAPOS.
  data: LT_GATE       type          /VCXI/VKSR_TT_GATE.
  data: LR_GATE       type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_MS_TAPE type ref to   ZCL_VCXI_P0SS_PR_MS_TAPE.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Joint
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_MS_TAPE=>C_IPRVT_P0_MS_TAPE
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    check LR_GATE->IS_IN_LINE( IR_GATE = ME->R_GATE ) eq ABAP_TRUE.
    clear: LS_MS_TAPE_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_TAPE.
        check LR_PR_MS_TAPE is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( )             to LS_MS_TAPE_GRID-POSID.
        move LR_GATE->F_GATKY                  to LS_MS_TAPE_GRID-GATKY.
        move LR_GATE                           to LS_MS_TAPE_GRID-R_GATE.

        move LR_PR_MS_TAPE->GET_TTAPE( )       to LS_MS_TAPE_GRID-TTAPE.
        move LR_PR_MS_TAPE->GET_TTAPE_DESCR( ) to LS_MS_TAPE_GRID-TTAPE_DESCR.

        move LR_PR_MS_TAPE->GET_TAPOS( )       to LS_TAPOS.
        move-corresponding LS_TAPOS            to LS_MS_TAPE_GRID.

        move LR_PR_MS_TAPE->GET_MATNR( )       to LS_MS_TAPE_GRID-MATNR.
        move LR_PR_MS_TAPE->GET_MATNR_DESCR( ) to LS_MS_TAPE_GRID-MATNR_DESCR.

        move LR_PR_MS_TAPE->GET_TEXT( )        to LS_MS_TAPE_GRID-TEXT.

        move LR_PR_MS_TAPE->GET_PURCH( )       to LS_MS_TAPE_GRID-PURCH.
        move LR_PR_MS_TAPE->GET_LIFNR( )       to LS_MS_TAPE_GRID-LIFNR.
        move LR_PR_MS_TAPE->GET_LIFNR_DESCR( ) to LS_MS_TAPE_GRID-LIFNR_DESCR.

        move LR_PR_MS_TAPE->GET_PRICE( )       to LS_MS_TAPE_GRID-S_PRICE.
        move LR_PR_MS_TAPE->GET_PRICP( )       to LS_MS_TAPE_GRID-S_PRICP.

*** -----------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_TAPE( exporting IF_PURCH = LS_MS_TAPE_GRID-PURCH
                                         IF_DUMMY = LR_PR_MS_TAPE->IS_DUMMY( )
                               changing  CT_STYL  = LS_MS_TAPE_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MS_TAPE_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MS_TAPE_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LF_ROW_ID            type          I.
  data:          LS_MS_TAPE_GRID      type          ZVCXI_P0SS_S_MS_TAPE_GRID,
                 LS_MODI              type          LVC_S_MODI,
                 LS_TAPOS             type          ZVCXI_P0SS_S_TAPOS,
                 LS_PRICE             type          ZVCXI_XCS_S_PRICE,
                 LS_PRICP             type          ZVCXI_XCS_S_PRICP.
  data:          LR_PR_MS_TAPE        type ref to   ZCL_VCXI_P0SS_PR_MS_TAPE,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move SY-TABIX to LF_ROW_ID.
        read table ET_GOOD_CELLS with key ROW_ID = LF_ROW_ID
                                 transporting no fields.
        check SY-SUBRC eq 0.

        try.
            move-corresponding <S_DATA> to LS_MS_TAPE_GRID.
            check LS_MS_TAPE_GRID-R_GATE is bound.

            move LS_MS_TAPE_GRID-R_GATE->R_CLSPR ?to LR_PR_MS_TAPE.
            check LR_PR_MS_TAPE is bound.

***         Set Values to PR Class
            loop at ET_GOOD_CELLS into LS_MODI where ROW_ID = LF_ROW_ID.
              case LS_MODI-FIELDNAME.
                when 'TTAPE'.
                  LR_PR_MS_TAPE->SET_TTAPE( IF_TTAPE = LS_MS_TAPE_GRID-TTAPE
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'TAPOS'.
                  move-corresponding LS_MS_TAPE_GRID to LS_TAPOS.
                  LR_PR_MS_TAPE->SET_TAPOS( IS_TAPOS = LS_TAPOS
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'TEXT'.
                  LR_PR_MS_TAPE->SET_TEXT(  IF_TEXT  = LS_MS_TAPE_GRID-TEXT
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PURCH'.
                  LR_PR_MS_TAPE->SET_PURCH( IF_PURCH = LS_MS_TAPE_GRID-PURCH
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'LIFNR'.
                  LR_PR_MS_TAPE->SET_LIFNR( IF_LIFNR = LS_MS_TAPE_GRID-LIFNR
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PRICE'.
                  move-corresponding LS_MS_TAPE_GRID to LS_PRICE.
                  LR_PR_MS_TAPE->SET_PRICE( IS_PRICE = LS_PRICE
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PRICP'.
                  move-corresponding LS_MS_TAPE_GRID to LS_PRICP.
                  LR_PR_MS_TAPE->SET_PRICP( IS_PRICP = LS_PRICP
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
              endcase.
            endloop.

          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
