
class ZCL_VCXI_P3SS_UI_ASCONO definition
  public
  inheriting from ZCL_VCXI_PXSS_UI_XCONO
  create public .

public section.

  data S_ASCONO_VIS type ZVCXI_P3SS_S_ASCONO_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_IN_TAB-TAB'
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_ASCONO type ref to ZCL_VCXI_P3SS_PR_ASCONO .
  constants C_UC_ASPROP_OUT type SYUCOMM value 'ASPROP_OUT' ##NO_TEXT.

  methods HANDLE_UC_ASPROP
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P3SS_UI_ASCONO definition
class ZCL_VCXI_P3SS_UI_ASCONO implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P3SS_UI_ASCONO_BIND'
      exporting
        IR_UI_ASCONO = ME
      importing
        ES_DYNP      = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_ASCONO.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
***   Assembly Property Popup
      when C_UC_ASPROP_OUT.
        ME->HANDLE_UC_ASPROP( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_ASCONO.

  endmethod.
  method HANDLE_UC_ASPROP.

    data: LR_BL_ASBPROP type ref to ZCL_VCXI_P3SS_BL_ASBPROP,
          LR_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP.


*** Get Assembly Property (Outbound)
    LR_BL_ASBPROP = ME->R_PR_ASCONO->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASBPX( ).
    LR_BL_ASFPROP = ME->R_PR_ASCONO->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASFPX( ).

*** Start Popup
    ZCL_VCXI_P3SS_POPUP_ASPROP=>START( IR_BL_ASBPROP = LR_BL_ASBPROP
                                       IR_BL_ASFPROP = LR_BL_ASFPROP
                                       IF_WERKS      = ME->R_PR_ASCONO->GET_WERKS( ) ).

  endmethod.
  method INIT_VIS.

    data: LR_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP.


    SUPER->INIT_VIS( ).

    free: ME->S_ASCONO_VIS.
    ME->S_ASCONO_VIS-S_XCONO_VIS = ME->S_XCONO_VIS.

***--------------------------------------------------------------------------------------
*** Get Handling Dimension (Outbound)
    LR_BL_ASFPROP = ME->R_PR_ASCONO->ZIF_VCXI_P3SS_COMM_NEXT~GET_ASFPX( ).
    if LR_BL_ASFPROP is bound.
      ME->S_ASCONO_VIS-S_IOSEC_OUT-S_HNDDIM = LR_BL_ASFPROP->S_HNDDIM.
    endif.

  endmethod.
