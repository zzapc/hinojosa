
class ZCL_VCXI_FBSS_TOOLBAR_PRVDR definition
  public
  inheriting from ZCL_VCXI_F0S_TOOLBAR_PRVDR
  create public .

public section.

  data T_MENU_ITEMS type /VCXI/VKSR_TT_PRVDR_DEF .
protected section.

  methods CHECK_PRVDR_PARAM_ADD
    importing
      !IF_ID type /VCXI/CKX_ID
      !IF_PARAM_VAL type /VCXI/CKX_ID
    returning
      value(RF_DISABLED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHECK_PRVDR_PARAM_DEL
    importing
      !IF_ID type /VCXI/CKX_ID
      !IF_PARAM_VAL type /VCXI/CKX_ID
    returning
      value(RF_DISABLED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods GET_MENU_ITEMS
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_PARAM
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_PARAM_VAL) type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .
  methods SET_PRVDR_PARAM
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_PARAM_VAL type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .

  methods DEL_PRVDR
    redefinition .
  methods GET_DISABLED_ADD
    redefinition .
  methods GET_DISABLED_DEL
    redefinition .
  methods HANDLE_MENU_BUTTON
    redefinition .
  methods HANDLE_TOOLBAR_FCODE
    redefinition .
  methods INIT_TOOLBAR_DEF
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSS_TOOLBAR_PRVDR definition
class ZCL_VCXI_FBSS_TOOLBAR_PRVDR implementation.
  method CHECK_PRVDR_PARAM_ADD.

    data: LF_PARAM_VAL   type /VCXI/CKX_ID,
          LF_ACTIV_PRVDR type I.
    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF,
          LS_ATTRI     type /VCXI/VKS_S_ATTRI.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Start negative
    move ABAP_TRUE to RF_DISABLED.

    loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF where ID = IF_ID.
      read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI index 1.
      if LS_ATTRI-ATTVA eq IF_PARAM_VAL.
        exit.
      endif.
    endloop.

    check SY-SUBRC eq 0.

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.

***   Get all Active Provider with searched ID
      check LR_GATE->F_ID eq IF_ID.

***   Check Provider Parameter Value
      move ME->GET_PRVDR_PARAM( exporting IR_GATE = LR_GATE ) to LF_PARAM_VAL.
      if LF_PARAM_VAL is not initial.
        check LF_PARAM_VAL eq IF_PARAM_VAL.
      endif.

      add 1 to LF_ACTIV_PRVDR.

    endloop.

*** Check if there are less then maximal Provider
    check LF_ACTIV_PRVDR lt LS_PRVDR_DEF-QTYMA.

    move ABAP_FALSE to RF_DISABLED.

  endmethod.
  method CHECK_PRVDR_PARAM_DEL.

    data: LF_PARAM_VAL   type /VCXI/CKX_ID,
          LF_ACTIV_PRVDR type I.
    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF,
          LS_ATTRI     type /VCXI/VKS_S_ATTRI.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Start negative
    move ABAP_TRUE to RF_DISABLED.

    loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF where ID = IF_ID.
      read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI index 1.
      if LS_ATTRI-ATTVA eq IF_PARAM_VAL.
        exit.
      endif.
    endloop.

    check SY-SUBRC eq 0.

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.

***   Get all Provider with searched ID
      check LR_GATE->F_ID eq IF_ID.

***   Check Provider Parameter Value
      move ME->GET_PRVDR_PARAM( exporting IR_GATE = LR_GATE ) to LF_PARAM_VAL.
      if LF_PARAM_VAL is not initial.
        check LF_PARAM_VAL eq IF_PARAM_VAL.
      endif.

***   Check also if Provider is changeable -> can be deleted!!
      check ZCL_VCXI_XCDR_SERVICE=>IS_INUSE_CHANGEABLE( IR_GATE = LR_GATE ) ne ABAP_FALSE.

      add 1 to LF_ACTIV_PRVDR.

    endloop.

*** Check if there is min. one changeable Provider
    check LF_ACTIV_PRVDR gt 0.

*** Check if there are more than min. number of Provider
    check LF_ACTIV_PRVDR gt LS_PRVDR_DEF-QTYMI.

    move ABAP_FALSE to RF_DISABLED.

  endmethod.
  method DEL_PRVDR.

    data: LF_PARAM_VAL  type        /VCXI/CKX_ID.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Free selected Provider
    loop at ME->T_PRVDR_SELECTED into LR_GATE where TABLE_LINE is bound.

***   Check if it's Menu Item
      read table ME->T_PRVDR_DEF with key ID = LR_GATE->F_ID transporting no fields.
      check SY-SUBRC = 0.

***   Check if Delete Disabled
      LF_PARAM_VAL = ME->GET_PRVDR_PARAM( exporting IR_GATE = LR_GATE ).
      check ME->CHECK_PRVDR_PARAM_DEL( IF_ID        = LR_GATE->F_ID
                                       IF_PARAM_VAL = LF_PARAM_VAL ) eq ABAP_FALSE.

      LR_GATE->DO_FREE( ).

    endloop.

*** Process Events
    ME->R_GATE->RAISE_EVENTS( ).

***--------------------------------------------------------------------------------------
*** Refresh is required
    ME->F_REFRESH_REQ = ABAP_TRUE.

  endmethod.
  method GET_DISABLED_ADD.

    data: LF_LOCKED    type   /VCXI/CKX_LOCKED,
          LF_PARAM_VAL type   /VCXI/CKX_ID.
    data: LS_PRVDR_DEF type   /VCXI/VKSR_S_PRVDR_DEF,
          LS_ATTRI     type   /VCXI/VKS_S_ATTRI.

    if ME->T_PRVDR_DEF is initial.
      move ABAP_TRUE to RF_DISABLED .
      exit.
    endif.

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).

    if LF_LOCKED ne ABAP_TRUE.
      move ABAP_TRUE to RF_DISABLED.
      exit.
    endif.

*** Get add Button in Grid or not in Grid
    loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF.
      clear LS_ATTRI.
      read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI index 1.
      move LS_ATTRI-ATTVA to LF_PARAM_VAL.

      RF_DISABLED = ME->CHECK_PRVDR_PARAM_ADD( IF_ID        = LS_PRVDR_DEF-ID
                                               IF_PARAM_VAL = LF_PARAM_VAL ).

      check RF_DISABLED eq ABAP_FALSE.
      exit.
    endloop.

*** Do general DVC Check if Function is activ
    if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE  = ME->R_GATE
                                                  IF_IFUNC = 'TOOLBAR_DISABLED' ) eq ABAP_TRUE.
      move ABAP_TRUE to RF_DISABLED.
    endif.


  endmethod.
  method GET_DISABLED_DEL.

    data: LF_LOCKED    type   /VCXI/CKX_LOCKED,
          LF_PARAM_VAL type   /VCXI/CKX_ID.
    data: LS_PRVDR_DEF type   /VCXI/VKSR_S_PRVDR_DEF,
          LS_ATTRI     type   /VCXI/VKS_S_ATTRI.

    if ME->T_PRVDR_DEF is initial.
      move ABAP_TRUE to RF_DISABLED .
      exit.
    endif.

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).

    if LF_LOCKED ne ABAP_TRUE.
      move ABAP_TRUE to RF_DISABLED.
      exit.
    endif.

*** Get delete Button in Grid or not in Grid
    loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF.
      clear LS_ATTRI.
      read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI index 1.
      move LS_ATTRI-ATTVA to LF_PARAM_VAL.

      RF_DISABLED = ME->CHECK_PRVDR_PARAM_DEL( IF_ID        = LS_PRVDR_DEF-ID
                                               IF_PARAM_VAL = LF_PARAM_VAL ).

      check RF_DISABLED eq ABAP_FALSE.
      exit.
    endloop.

*** Do general DVC Check if Function is activ
    if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE  = ME->R_GATE
                                                  IF_IFUNC = 'TOOLBAR_DISABLED' ) eq ABAP_TRUE.
      move ABAP_TRUE to RF_DISABLED.
    endif.

  endmethod.
  method GET_MENU_ITEMS.

*** Need to be implemented in sub-class
    exit.

  endmethod.
  method GET_PRVDR_PARAM.

*** Need to be implemented in sub-class
    exit.

  endmethod.
  method HANDLE_MENU_BUTTON.

    data: LF_FCODE      type        UI_FUNC,
          LF_TEXT       type        GUI_TEXT,
          LF_DISABLED   type        CUA_ACTIVE,
          LF_PARAM_VAL  type        /VCXI/CKX_ID.
    data: LS_PRVDR_DEF  type        /VCXI/VKSR_S_PRVDR_DEF,
          LS_ATTRI      type        /VCXI/VKS_S_ATTRI.
    data: LR_MENU       type ref to CL_CTMENU,
          LR_CX_CKX     type ref to /VCXI/CX_CKX.

    try.
        case FCODE.
          when C_FCODE_ADD.
            move ABAP_UNDEFINED to ME->F_REFRESH_REQ.

***         Check if Providers exist
            if ME->T_PRVDR_DEF is not initial.

***           Create DropDown Menu
              create object LR_MENU.

              loop at ME->T_PRVDR_DEF into LS_PRVDR_DEF.
                clear: LF_FCODE, LF_TEXT.

***             Get Provider Set Parameter
                read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI index 1.
                move LS_ATTRI-ATTVA to LF_PARAM_VAL.

***             Get Function Code
                concatenate C_FCODE_ADD LS_PRVDR_DEF-ID LF_PARAM_VAL into LF_FCODE separated by '@'.

***             Get Description
                move LS_PRVDR_DEF-DESCR to LF_TEXT.

***             Check if Provider can be added
                LF_DISABLED = ME->CHECK_PRVDR_PARAM_ADD( IF_ID        = LS_PRVDR_DEF-ID
                                                         IF_PARAM_VAL = LF_PARAM_VAL ).

***             Add Function
                LR_MENU->ADD_FUNCTION( FCODE    = LF_FCODE
                                       TEXT     = LF_TEXT
                                       DISABLED = LF_DISABLED ).

              endloop.
            endif.

        endcase.

***--------------------------------------------------------------------------------------
***     Show DropDown Menu
        if LR_MENU is bound.
          ME->R_TOOLBAR->TRACK_CONTEXT_MENU( CONTEXT_MENU = LR_MENU
                                             POSX         = POSX
                                             POSY         = POSY ).
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method HANDLE_TOOLBAR_FCODE.

    data: LF_FUNC      type UI_FUNC,
          LF_ID        type /VCXI/CKX_ID,
          LF_PARAM_VAL type /VCXI/CKX_ID.
    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF,
          LS_ATTRI     type /VCXI/VKS_S_ATTRI.
    data: LR_GATE   type ref to /VCXI/CL_VKSR_GATE,
          LR_CX_CKX type ref to /VCXI/CX_CKX.


    try.
***     Trigger specific Add command
        if FCODE cp 'ADD*'.

          split FCODE at '@' into LF_FUNC LF_ID LF_PARAM_VAL.
          move ME->ADD_PRVDR( IF_ID = LF_ID ) to LR_GATE.

***       Get Provider Parameter
          if LINES( ME->T_PRVDR_DEF ) eq 1.
            read table ME->T_PRVDR_DEF into LS_PRVDR_DEF index 1.
            read table LS_PRVDR_DEF-T_ATTRI into LS_ATTRI index 1.
            move LS_ATTRI-ATTVA to LF_PARAM_VAL.
          endif.

***       Set Provider Parameter
          if LR_GATE is bound and LF_PARAM_VAL is not initial.
            ME->SET_PRVDR_PARAM( exporting  IR_GATE      = LR_GATE
                                            IF_PARAM_VAL = LF_PARAM_VAL ).
          endif.
        endif.

***     Trigger general Add command
        case FCODE.
*          when C_FCODE_ADD.
*            ME->ADD_PRVDR( ).
          when C_FCODE_DEL.
            ME->DEL_PRVDR( ).
        endcase.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** If we switch Application Events off -> do manually Refresh Screen
    if ME->F_APPL_EVENTS eq ABAP_FALSE.
      ME->R_UIGATE->REFRESH_SCREEN( ).
    endif.

  endmethod.
  method INIT_TOOLBAR_DEF.

    data: LS_PRVDR_DEF  type /VCXI/VKSR_S_PRVDR_DEF,
          LS_MENU_ITEMS type /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_PRVDR_DEF  type /VCXI/VKSR_TT_PRVDR_DEF.
    field-symbols: <S_PRVDR_DEF> type /VCXI/VKSR_S_PRVDR_DEF.


    clear: ME->T_PRVDR_DEF.

    LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ME->F_IPRVT
                                              IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
    sort LT_PRVDR_DEF.
    delete adjacent duplicates from LT_PRVDR_DEF comparing ID.

*** Get Menu Items
    ME->GET_MENU_ITEMS( ).

    loop at LT_PRVDR_DEF into LS_PRVDR_DEF .

***   Check if provider is used
      if ME->CHECK_PRVDR_REL( IF_ID = LS_PRVDR_DEF-ID ) eq ABAP_FALSE.
        clear: LS_PRVDR_DEF.
      else.

***     Create Toolbar Menu related to Provider ID
        loop at ME->T_MENU_ITEMS into LS_MENU_ITEMS where ID = LS_PRVDR_DEF-ID.
          append initial line to ME->T_PRVDR_DEF assigning <S_PRVDR_DEF>.
          move LS_MENU_ITEMS-ID       to <S_PRVDR_DEF>-ID.
          move LS_MENU_ITEMS-QTYMI    to <S_PRVDR_DEF>-QTYMI.
          move LS_MENU_ITEMS-QTYMA    to <S_PRVDR_DEF>-QTYMA.
          move LS_MENU_ITEMS-DESCR    to <S_PRVDR_DEF>-DESCR.
          move LS_MENU_ITEMS-T_ATTRI  to <S_PRVDR_DEF>-T_ATTRI.
        endloop.

      endif.

    endloop.

    case LINES( ME->T_PRVDR_DEF ).
      when 0.

***     Set Type of Add Button
        move C_BTYPE_BUTTON to ME->F_BTYPE_ADD.
        move ABAP_FALSE     to ME->F_MENU_BUTTON_ACTIV.

***     Set Button Text - Translate related
        move text-ADD to ME->F_TEXT_ADD.
        replace first occurrence of '&' in ME->F_TEXT_ADD with ''.
        move text-DEL to ME->F_TEXT_DEL.
        replace first occurrence of '&' in ME->F_TEXT_DEL with ''.

      when 1.

***     Set Type of Add Button
        move C_BTYPE_BUTTON to ME->F_BTYPE_ADD.
        move ABAP_FALSE     to ME->F_MENU_BUTTON_ACTIV.

        read table ME->T_PRVDR_DEF into LS_PRVDR_DEF index 1.

***     Set Button Text - Translate related
        move text-ADD to ME->F_TEXT_ADD.
        replace first occurrence of '&' in ME->F_TEXT_ADD with LS_PRVDR_DEF-DESCR.
        move text-DEL to ME->F_TEXT_DEL.
        replace first occurrence of '&' in ME->F_TEXT_DEL with LS_PRVDR_DEF-DESCR.

      when others.

***     Set Type of Add Button
        move C_BTYPE_MENU to ME->F_BTYPE_ADD.
        move ABAP_TRUE    to ME->F_MENU_BUTTON_ACTIV.

***     Set Button Text - Translate related
        move text-ADD to ME->F_TEXT_ADD.
        replace first occurrence of '&' in ME->F_TEXT_ADD with ''.
        move text-DEL to ME->F_TEXT_DEL.
        replace first occurrence of '&' in ME->F_TEXT_DEL with ''.

    endcase.

  endmethod.
  method SET_PRVDR_PARAM.

*** Need to be implemented in sub-class
    exit.

  endmethod.
