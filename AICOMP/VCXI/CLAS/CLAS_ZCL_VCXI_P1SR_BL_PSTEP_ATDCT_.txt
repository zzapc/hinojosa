
class ZCL_VCXI_P1SR_BL_PSTEP_ATDCT definition
  public
  inheriting from ZCL_VCXI_P1SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .

  constants C_IPSTP_ATDCT type /VCXI/VSMC_IPSTP value 'PX_PS_ATDCT' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_ATDCT
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  data S_PCDIM_IN type ZVCXI_P0SP_S_PCDIM .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data T_MS_TOOL type ZVCXI_P0SR_TT_MS_TOOL .

  methods ADD_SPVRE_MC_TOOL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_ATDCT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_CSTEP_ATDCT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MS_ATDCTT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SR_BL_PSTEP_ATDCT definition
class ZCL_VCXI_P1SR_BL_PSTEP_ATDCT implementation.
  method ADD_SPVRE_MC_TOOL.

    data: LS_MS_TOOL type ZVCXI_P0SR_S_MS_TOOL.
    data: LR_SPVCE         type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_TOOL type ref to /VCXI/CL_VKSR_SPVRE.


    check ME->T_MS_TOOL is not initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_TOOL'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

    loop at ME->T_MS_TOOL into LS_MS_TOOL.
***------------------------------------------------------------------------------------------------
***   Create Supervisor Runtime Element
      LR_SPVRE_MC_TOOL = new #( IR_SPVCE  = LR_SPVCE
                                IR_PARENT = IR_SPVRE_PARENT ).
      append LR_SPVRE_MC_TOOL to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_TOOL->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Material Number
      LR_SPVRE_MC_TOOL->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_TOOL-MATNR
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Set Average Consumption
      LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCO_P
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                       ATFLV = 1
                                                       UNIT  = 'ST'
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Average Consumption Per
      LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCP_P
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                       ATFLV = LS_MS_TOOL-LTITO
                                                       UNIT  = LS_MS_TOOL-LTITO_UOM
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_ATDCT type ref to ZCL_VCXI_P1SR_BL_PSTEP_ATDCT.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_ATDCT.


***------------------------------------------------------------------------------------------------
*** PC Dimensions
    if ME->S_PCDIM_IN  eq LR_BL_PSTEP_ATDCT->S_PCDIM_IN and
       ME->S_PCDIM_OUT eq LR_BL_PSTEP_ATDCT->S_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Tool
    if ME->T_MS_TOOL eq LR_BL_PSTEP_ATDCT->T_MS_TOOL.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_ATDCT type ref to ZCL_VCXI_P1SR_BL_PSTEP_ATDCT.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_ATDCT.

***------------------------------------------------------------------------------------------------
*** PC Dimensions
    move ME->S_PCDIM_IN    to LR_BL_PSTEP_ATDCT->S_PCDIM_IN.
    move ME->S_PCDIM_OUT   to LR_BL_PSTEP_ATDCT->S_PCDIM_OUT.

*** Tool
    move ME->T_MS_TOOL     to LR_BL_PSTEP_ATDCT->T_MS_TOOL.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'PX_AT_ATDCT'.
        ME->FILL_SPVRE_ADDON_ATDCT( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                              IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                    changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_ATDCT.

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = IR_SPVRE_ADDON
                           changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    move 'CONV'     to CF_ID_ARBPL.

*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'MANU'     to CF_ID_ARBPL.
    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_ATDCT'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                           changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_PCDIM_IN'   VALUE = ref #( ME->S_PCDIM_IN )  ) to RT_DATA.
    append value #( NAME = 'S_PCDIM_OUT'  VALUE = ref #( ME->S_PCDIM_OUT ) ) to RT_DATA.

    append value #( NAME = 'T_MS_TOOL'    VALUE = ref #( ME->T_MS_TOOL )   ) to RT_DATA.

  endmethod.
  method INIT_BY_CSTEP_ATDCT.

    data: LF_SHTDI type ZVCXI_P0SS_SHTDI.
    data: LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_ATDCT type ref to ZCL_VCXI_P1SS_PR_CSTEP_ATDCT.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Attachment Die Cutting
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_CSTEP_ATDCT.
      LR_PR_CSTEP_ATDCT ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_CSTEP_ATDCT is bound.


***--------------------------------------------------------------------------------------
*** Sheet Direction
    move LR_PR_CSTEP_ATDCT->GET_SHTDI( ) to LF_SHTDI.
    if LF_SHTDI is not initial.
      move LF_SHTDI                               to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.
      move ZIF_VCXI_PXSR_PCDIR=>C_PCDOP_MANDATORY to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDOP.
    endif.

  endmethod.
  method INIT_BY_MS_ATDCTT.

    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_ATDCTT type ref to ZCL_VCXI_PXSS_PR_MS_ATDCTT.


    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_ATDCTT.
      LR_PR_MS_ATDCTT ?= LR_GATE->R_CLSPR.

      append value #( MATNR   = LR_PR_MS_ATDCTT->GET_MATNR( )
                      TEXT    = LR_PR_MS_ATDCTT->GET_TEXT( )
                      PURCH   = LR_PR_MS_ATDCTT->GET_PURCH( )
                      LIFNR   = LR_PR_MS_ATDCTT->GET_LIFNR( )
                      S_PRICE = LR_PR_MS_ATDCTT->GET_PRICE( )
                      S_PRICP = LR_PR_MS_ATDCTT->GET_PRICP( )
                    ) to ME->T_MS_TOOL.
    endloop.

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


***--------------------------------------------------------------------------------------
*** Get Inbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_IN( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_IN = value #( LT_PCDIM[ 1 ] optional ).

*** Get Outbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_OUT = value #( LT_PCDIM[ 1 ] optional ).

*** Initialize by CStep Attachment Die Cutting
    ME->INIT_BY_CSTEP_ATDCT( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Initialize by Additional Die Cut Tool
    ME->INIT_BY_MS_ATDCTT( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.

    RT_PCDIM = value #( ( ME->S_PCDIM_IN ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
    ME->S_PCDIM_IN  = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_IN
                                      IF_PCDIR = IF_PCDIR ).

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
