
class ZCL_VCXI_FFSS_CUST_RECI definition
  public
  inheriting from ZCL_VCXI_XCS_CUST_MATNR
  create protected .

public section.

  data F_TEXTR type ZVCXI_F0S_TEXTR read-only .
  data F_FBLOF type ZVCXI_F0S_FBLOF .
  data S_FIDEN type ZVCXI_FFS_S_FIDEN read-only .
  data S_FITMA type ZVCXI_FRS_S_FITMA read-only .
  data S_FITMI type ZVCXI_FRS_S_FITMI read-only .
  data T_FSFLAYER type ZVCXI_FFSS_TT_FSFLAYER read-only .

  class-methods GET_INSTANCE_RECI
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS default SY-DATUM
    returning
      value(RR_INSTANCE) type ref to ZCL_VCXI_FFSS_CUST_RECI
    raising
      /VCXI/CX_CKX .
protected section.

  methods CONSTRUCTOR
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSS_CUST_RECI definition
class ZCL_VCXI_FFSS_CUST_RECI implementation.
  method CONSTRUCTOR.

    data: LF_MSG_C type C length 255,
          LF_MSG_S type STRING.
    data: LS_VRDEN      type ZVCXI_FRS_S_VRDEN,
          LS_BAPIRET2   type BAPIRET2,
          LS_LAYER_EXTR type ZVCXI_FRS_S_LAYER_EXTR.
    data: LT_LAYER_EXTR  type ZVCXI_FRS_TT_LAYER_EXTR.
    field-symbols: <S_FSFLAYER> type ZVCXI_FFSS_S_FSFLAYER.

    try.
        SUPER->CONSTRUCTOR( IF_MATNR = IF_MATNR
                            IF_WERKS = IF_WERKS
                            IF_DATE  = IF_DATE ).

***--------------------------------------------------------------------------------------
***     Get Information of Extrusion Recipe
        call function 'ZVCXI_FRS_INFO_EXTR'
          destination 'NONE'
          exporting
            IF_MATNR              = IF_MATNR
            IF_WERKS              = IF_WERKS
            IF_DATE               = IF_DATE
          importing
            EF_TEXTR              = ME->F_TEXTR
            EF_FBLOF              = ME->F_FBLOF
            ES_FITMI              = ME->S_FITMI
            ES_FITMA              = ME->S_FITMA
            ES_VRDEN              = LS_VRDEN
            ET_LAYER_EXTR         = LT_LAYER_EXTR
            ES_BAPIRET2           = LS_BAPIRET2
          exceptions
            SYSTEM_FAILURE        = 1 message LF_MSG_C
            COMMUNICATION_FAILURE = 2 message LF_MSG_C.
        if SY-SUBRC ne 0.
          move LF_MSG_C to LF_MSG_S.
          /VCXI/CX_CKX=>RAISE_CKX_BY_STRING( IF_STRING = LF_MSG_S ).
        endif.
        if LS_BAPIRET2 is not initial.
          /VCXI/CX_CKX=>RAISE_CKX_BY_BAPIRET2( IS_BAPIRET2 = LS_BAPIRET2 ).
        endif.

***--------------------------------------------------------------------------------------
***     Use Version Density as Film Density
        move LS_VRDEN-VRDEN     to ME->S_FIDEN-FIDEN.
        move LS_VRDEN-VRDEN_UOM to ME->S_FIDEN-FIDEN_UOM.

***     Use Layer Information
        loop at LT_LAYER_EXTR into LS_LAYER_EXTR.
          append initial line to ME->T_FSFLAYER assigning <S_FSFLAYER>.
          move-corresponding LS_LAYER_EXTR to <S_FSFLAYER>.
        endloop.

      cleanup.
        ME->DO_FREE( ).
    endtry.

  endmethod.
  method GET_INSTANCE_RECI.

    data:  LS_INSTANCE type        YS_INSTANCE.

***--------------------------------------------------------------------------------------
*** Check for buffered instance and ensure correct Class Type
    read table ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE
               into LS_INSTANCE
               with key MATNR = IF_MATNR
                        WERKS = IF_WERKS
                        DATE  = IF_DATE.

    if SY-SUBRC eq 0.
      try.
          move LS_INSTANCE-R_INSTANCE ?to RR_INSTANCE.
        catch CX_SY_MOVE_CAST_ERROR.
          delete ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE where R_INSTANCE eq LS_INSTANCE-R_INSTANCE.
          clear RR_INSTANCE.
      endtry.
    endif.

***--------------------------------------------------------------------------------------
    if RR_INSTANCE is initial.
      try.
***       Constructor call of redefined Class
          create object RR_INSTANCE
            exporting
              IF_MATNR = IF_MATNR
              IF_WERKS = IF_WERKS
              IF_DATE  = IF_DATE.

        cleanup.
          clear RR_INSTANCE.
      endtry.
    endif.

  endmethod.
