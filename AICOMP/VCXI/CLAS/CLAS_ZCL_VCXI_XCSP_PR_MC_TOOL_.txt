
class ZCL_VCXI_XCSP_PR_MC_TOOL definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  create public .

public section.

  constants C_IPRVT_XC_MC_TOOL type /VCXI/VKSC_IPRVT value 'ZVCXI_XCSP_MC_TOOL' ##NO_TEXT.

  methods GET_XCHPF
    returning
      value(RF_XCHPF) type XCHPF_WERKS
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_AVGCO) type ZVCXI_XCS_S_AVGCO
    raising
      /VCXI/CX_CKX .
  methods GET_AVGCP
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_AVGCP) type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCO
    importing
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_AVGCP
    importing
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods CALC_CONSU
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  methods CHECK_AVGCO
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
private section.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_XCSP_PR_MC_TOOL definition
class ZCL_VCXI_XCSP_PR_MC_TOOL implementation.
  method CALC_CONSU.

    data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
          LS_CALCV type ZVCXI_XCS_S_CALCV.


*** Get Average Consumption
    data(LS_AVGCO) = ME->GET_AVGCO( ).
    data(LS_AVGCP) = ME->GET_AVGCP( ).

    if IS_MQTYI is not initial.
***   Calculate consumption
      if LS_AVGCP-AVGCP is not initial.
        LS_CALCV-CALCV   = CEIL( IS_MQTYI-MQTYI / LS_AVGCP-AVGCP ).
        LS_CONSU-CONSU   = CEIL( LS_CALCV-CALCV * LS_AVGCO-AVGCO ).
      else.
        LS_CONSU-CONSU   = LS_AVGCO-AVGCO.
      endif.
    else.
      clear LS_CONSU-CONSU.
    endif.

    LS_CONSU-CONSU_UOM = LS_AVGCO-AVGCO_UOM.

*** Set Consumption
    ME->SET_CONSU( IS_CONSU = LS_CONSU ).

  endmethod.
  method CHECK_AVGCO.

    if ME->GET_AVGCO( )-AVGCO is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Average Consumption is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSP'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '253' ).
      endif.

    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Average Consumption is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSP'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '254' ).
      endif.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Pramameter dimensions
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method GET_AVGCO.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).
    move LS_PARAM-ATFLV to RS_AVGCO-AVGCO.
    move LS_PARAM-UNIT  to RS_AVGCO-AVGCO_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_AVGCP.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).
    move LS_PARAM-ATFLV to RS_AVGCP-AVGCP.
    move LS_PARAM-UNIT  to RS_AVGCP-AVGCP_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

***--------------------------------------------------------------------------------------
*** Check Average Consumption
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_AVGCO( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***--------------------------------------------------------------------------------------
*** Check Average Consumption
    ME->CHECK_AVGCO( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_XCHPF.

    data(LF_MATNR) = ME->GET_MATNR( ).
    data(LF_WERKS) = ME->GET_WERKS( ).

*** Batch Managed?
    select single XCHPF
           from MARC
           into @RF_XCHPF
          where MATNR eq @LF_MATNR
           and  WERKS eq @LF_WERKS.

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.

    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

***--------------------------------------------------------------------------------------
*** Search for Average Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_AVGCO_A or
                            PARID eq C_PARID_AVGCO_L or
                            PARID eq C_PARID_AVGCO_P or
                            PARID eq C_PARID_AVGCO_W ).
      move LS_PARAM-PARID to ME->F_PARID_AVGCO.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Search for Average Consumption Per
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_AVGCP_A or
                            PARID eq C_PARID_AVGCP_L or
                            PARID eq C_PARID_AVGCP_P or
                            PARID eq C_PARID_AVGCP_W ).
      move LS_PARAM-PARID to ME->F_PARID_AVGCP.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Search for Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Search for Price Per
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_PRICP_A or
                            PARID eq C_PARID_PRICP_L or
                            PARID eq C_PARID_PRICP_P or
                            PARID eq C_PARID_PRICP_W ).
      move LS_PARAM-PARID to ME->F_PARID_PRICP.
      exit.
    endloop.

  endmethod.
  method SET_AVGCO.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCO ).

    move IS_AVGCO-AVGCO     to LS_PARAM-ATFLV.
    move IS_AVGCO-AVGCO_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_AVGCP.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->F_PARID_AVGCP ).

    move IS_AVGCP-AVGCP     to LS_PARAM-ATFLV.
    move IS_AVGCP-AVGCP_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
