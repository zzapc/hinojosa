
class ZCL_VCXI_P0SR_BL_PSTEP_CLOS_AS definition
  public
  inheriting from ZCL_VCXI_P0SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_P0SR_ADJ_PCDIM .
  interfaces ZIF_VCXI_P0SR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_MANU .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_CLOS_AS type /VCXI/VSMC_IPSTP value 'P0_PS_CLOS_AS'. "#EC NOTEXT
  data F_PPASS type ZVCXI_P0SS_PPASS read-only .

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_CLOS_AS
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  constants C_IAATY_JOINT type /VCXI/VSMC_IAATY value 'P0_AA_JOINT'. "#EC NOTEXT
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data T_MS_JOINT type ZVCXI_P0SR_TT_MS_JOINT .
  data T_COMP_IN type ZVCXI_P0SR_TT_COMP_IN .
  data T_MFMI_P type ZVCXI_P0SR_TT_MFMI_P .

  methods ADD_SPVRE_JOINT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_JOINT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFMI_P
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_CLOS
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_PSCALE_MGR
    importing
      !IT_PSCALE type ZVCXI_XCSR_TT_PSCALE
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_MC_JOINT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_MFMI_P
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_PCDIM
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JGLUE
    importing
      !IR_SPVRE_MC_JGLUE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JSTITCH
    importing
      !IR_SPVRE_MC_JSTITCH type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JTAPE
    importing
      !IR_SPVRE_MC_JTAPE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_VALUE_PSCALE_A
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .
  methods SET_VALUE_PSCALE_L
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .
  methods SET_VALUE_PSCALE_P
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .
  methods SET_VALUE_PSCALE_W
    importing
      !IR_SPVRE_PSCALE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_PSCALE type ZVCXI_XCSR_S_PSCALE
    raising
      /VCXI/CX_CKX .

  methods ADD_SPVRE_MFSI_P
    redefinition .
  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SR_BL_PSTEP_CLOS_AS definition
class ZCL_VCXI_P0SR_BL_PSTEP_CLOS_AS implementation.
method ADD_ASPECTS_TO_RTE_PSTEP.

  data:          LS_RTE_SAVAL  type        /VCXI/VSMR_S_RTE_SAVAL,
                 LS_MS_JOINT   type        ZVCXI_P0SR_S_MS_JOINT.
  field-symbols: <S_AVVAL>     type        /VCXI/VSMR_S_RTE_RANGE_AVVAL.

***----------------------------------------------------------------------------
*** Get Super
  SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - P0_AA_JOINT
  try.
      clear LS_RTE_SAVAL.
      loop at ME->T_MS_JOINT into LS_MS_JOINT.
        append initial line         to LS_RTE_SAVAL-I_AVVAL assigning <S_AVVAL>.
        move 'I'                    to <S_AVVAL>-SIGN.
        move 'EQ'                   to <S_AVVAL>-OPTION.
        move LS_MS_JOINT-JOITY      to <S_AVVAL>-LOW.
      endloop.

      delete adjacent duplicates from LS_RTE_SAVAL-I_AVVAL comparing LOW.

      IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_JOINT
                                   II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).

    catch /VCXI/CX_CKX.
  endtry.

endmethod.
method ADD_LIMITS_TO_RTE_PSTEP.

  data:          LF_LDUOM               type        /VCXI/VSMC_LDUOM,
                 LF_LDVAL               type        /VCXI/VSMR_LDVAL.
  data:          LS_MS_JOINT            type        ZVCXI_P0SR_S_MS_JOINT.
  data:          LI_LVVAL               type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
  data:          LT_LTYPE               type        /VCXI/CKX_TT_OBJECT.
  data:          LR_LTYPE               type ref to /VCXI/CL_VSMC_LTYPE,
                 LR_OBJECT              type ref to /VCXI/IF_CKX_OBJECT.
  field-symbols: <S_LVVAL>              type        /VCXI/VSMR_S_RTE_RANGE_LVVAL.

  SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
  LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
  loop at LT_LTYPE into LR_OBJECT.
    move LR_OBJECT ?to LR_LTYPE.

    clear: LF_LDVAL,
           LF_LDUOM,
           LI_LVVAL.

***----------------------------------------------------------------------------
    case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***   Joint Type
      when 'P0_LT_VP_JOINTTYPE'.
        loop at ME->T_MS_JOINT into LS_MS_JOINT.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                        to <S_LVVAL>-SIGN.
          move 'EQ'                       to <S_LVVAL>-OPTION.
          move LS_MS_JOINT-JOITY          to <S_LVVAL>-LOW.
        endloop.

***   Joint Width
      when 'P0_LT_DP_JOINTWIDTH'.
        loop at ME->T_MS_JOINT into LS_MS_JOINT.
          move LS_MS_JOINT-JOIWI     to LF_LDVAL.
          move LS_MS_JOINT-JOIWI_UOM to LF_LDUOM.
        endloop.

      when others.
        continue.
    endcase.


***----------------------------------------------------------------------------
*** Set
    case LR_LTYPE->F_MLTYP.
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
        IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                    IF_LDVAL = LF_LDVAL
                                    IF_LDUOM = LF_LDUOM ).
      when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
        IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                    II_LVVAL = LI_LVVAL ).
    endcase.
  endloop.

endmethod.
method ADD_SPVRE_JOINT.

  data:  LF_WERKS            type        WERKS_D,
         LF_ARBPL            type        ARBPL.
  data:  LS_MS_JOINT         type        ZVCXI_P0SR_S_MS_JOINT,
         LS_LEOKY            type        /VCXI/VKSR_S_LEOKY,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_JOINT      type ref to /VCXI/CL_VKSR_SPVRE.


  move IR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_WERKS.
  move IR_ARBPL->F_ARBPL                                  to LF_ARBPL.

***------------------------------------------------------------------------------------------------
  loop at ME->T_MS_JOINT into LS_MS_JOINT
                        where ISVCE is initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'JOINT'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_JOINT
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_PARENT.
    append LR_SPVRE_JOINT to CT_SPVRE.

*** Set In Use
    LR_SPVRE_JOINT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Joint Type
    clear LS_LEOKY.
    move LS_MS_JOINT-JOITY                 to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_LEOKY-SETBY.
    LR_SPVRE_JOINT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_JOINT=>C_PARID_JOILE       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
    move LS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_JOINT->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Joint Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_JOINT=>C_PARID_JOIWI       to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move LS_MS_JOINT-JOIWI                           to LS_PARAM-ATFLV.
    move LS_MS_JOINT-JOIWI_UOM                       to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_JOINT->SET_PARAM( IS_PARAM = LS_PARAM ).

  endloop.

endmethod.
method ADD_SPVRE_MC_JOINT.

  data:  LF_WERKS            type        WERKS_D,
         LF_ARBPL            type        ARBPL.
  data:  LS_MS_JOINT         type        ZVCXI_P0SR_S_MS_JOINT,
         LS_LEOKY            type        /VCXI/VKSR_S_LEOKY,
         LS_AVGCO            type        ZVCXI_XCS_S_AVGCO,
         LS_AVGCP            type        ZVCXI_XCS_S_AVGCP.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_MC_JOINT   type ref to /VCXI/CL_VKSR_SPVRE.


  move IR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_WERKS.
  move IR_ARBPL->F_ARBPL                                  to LF_ARBPL.

***------------------------------------------------------------------------------------------------
  loop at ME->T_MS_JOINT into LS_MS_JOINT
                        where ISVCE is not initial.
    clear: LS_AVGCO, LS_AVGCP.

*** Read Average Consumption
    ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_AVGCO( exporting IF_WERKS = LF_WERKS
                                                         IF_ARBPL = LF_ARBPL
                                                         IF_MATNR = LS_MS_JOINT-MATNR
                                                         IF_DATE  = ME->F_DATE
                                               importing ES_AVGCO = LS_AVGCO
                                                         ES_AVGCP = LS_AVGCP ).

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_JOINT-ISVCE
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MC_JOINT
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_PARENT.
    append LR_SPVRE_MC_JOINT to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MC_JOINT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Material Number
    clear LS_LEOKY.
    move LS_MS_JOINT-MATNR                 to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_LEOKY-SETBY.
    LR_SPVRE_MC_JOINT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).


***------------------------------------------------------------------------------------------------
*** Set Parameter Value
    case LS_MS_JOINT-ISVCE.
      when 'MC_JGLUE'.
        ME->SET_SPVRE_VALUE_MC_JGLUE(   IR_SPVRE_MC_JGLUE   = LR_SPVRE_MC_JOINT
                                        IS_MS_JOINT         = LS_MS_JOINT
                                        IS_AVGCO            = LS_AVGCO
                                        IS_AVGCP            = LS_AVGCP ).

      when 'MC_JSTITCH'.
        ME->SET_SPVRE_VALUE_MC_JSTITCH( IR_SPVRE_MC_JSTITCH = LR_SPVRE_MC_JOINT
                                        IS_MS_JOINT         = LS_MS_JOINT
                                        IS_AVGCO            = LS_AVGCO
                                        IS_AVGCP            = LS_AVGCP ).
      when 'MC_JTAPE'.
        ME->SET_SPVRE_VALUE_MC_JTAPE(   IR_SPVRE_MC_JTAPE   = LR_SPVRE_MC_JOINT
                                        IS_MS_JOINT         = LS_MS_JOINT
                                        IS_AVGCO            = LS_AVGCO
                                        IS_AVGCP            = LS_AVGCP ).
    endcase.
  endloop.

endmethod.
method ADD_SPVRE_MFMI_P.

  data:  LS_MFMI_P           type        ZVCXI_P0SR_S_MFMI_P,
         LS_LEOKY            type        /VCXI/VKSR_S_LEOKY,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_MFMI_P     type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Remove existing
  loop at CT_SPVRE into LR_SPVRE_MFMI_P.
    if LR_SPVRE_MFMI_P->GET_ID( ) eq 'MFMI_P'.
      delete CT_SPVRE.
    endif.
  endloop.

*** Get Customizing Element
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFMI_P'
                                      IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

***------------------------------------------------------------------------------------------------
  loop at ME->T_MFMI_P into LS_MFMI_P.
*** Create Supervisor Runtime Element
    create object LR_SPVRE_MFMI_P
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_MFMGR.
    append LR_SPVRE_MFMI_P to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MFMI_P->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Leading Object
    move LS_MFMI_P-MATNR                                   to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_LEOKY-SETBY.
    LR_SPVRE_MFMI_P->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

*** Set Consumption Factor for Material Flow In
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFICF              to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move LS_MFMI_P-MFICF                                   to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Consumption Factor Per for Material Flow In
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFICP              to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move LS_MFMI_P-MFICP                                   to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PURCH              to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PURCH                                   to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Vendor Number
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_LIFNR              to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
    move LS_MFMI_P-LIFNR                                   to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCTYP            to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PCTYP                                   to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCLEN            to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PCLEN                                   to LS_PARAM-ATFLV.
    move LS_MFMI_P-PCLEN_UOM                               to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCWID            to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PCWID                                   to LS_PARAM-ATFLV.
    move LS_MFMI_P-PCWID_UOM                               to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Height
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCHEI            to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PCHEI                                   to LS_PARAM-ATFLV.
    move LS_MFMI_P-PCHEI_UOM                               to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Ups
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCUPS            to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PCUPS                                   to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Direction
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCDIR            to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
    move LS_MFMI_P-PCDIR                                   to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Price Scale Manager
    ME->ADD_SPVRE_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MFMI_P
                                        IR_BL_RTESPV    = IR_BL_RTESPV
                                        IT_PSCALE       = LS_MFMI_P-T_PSCALE
                              changing  CT_SPVRE        = CT_SPVRE ).

  endloop.

endmethod.
method ADD_SPVRE_MFSI_P.

  data:  LF_TABIX            type        I,
         LF_IMFXC            type        ZVCXI_XCSP_IMFXC,
         LF_NEXTL            type        ZVCXI_XCSP_NEXTL.
  data:  LS_COMP_IN          type        ZVCXI_P0SR_S_COMP_IN,
         LS_PARAM            type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_MFSI_P     type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_P'
                                      IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

  loop at ME->T_COMP_IN into LS_COMP_IN.
    move SY-TABIX to LF_TABIX.
    read table ME->T_IMFXC_IN into LF_IMFXC index LF_TABIX.
    read table ME->T_NEXTL    into LF_NEXTL index LF_TABIX.

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MFSI_P
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_MFMGR.
    append LR_SPVRE_MFSI_P to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MFSI_P->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set MF X-Connect
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC          to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move LF_IMFXC                                    to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set "Next Low-Level Code" Flag
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL        to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move LF_NEXTL                                    to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Direction
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_PCDIR      to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move LS_COMP_IN-PCDIR                            to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Consumption Factor for Material Flow In
    if LS_COMP_IN-COMPR is not initial.
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_MFICF      to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_COMP_IN-COMPR                            to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = LS_PARAM ).
    endif.
  endloop.

endmethod.
method ADD_SPVRE_PSCALE_MGR.

  data:  LS_PSCALE           type        ZVCXI_XCSR_S_PSCALE.
  data:  LR_SPVCE_PSCALE_MGR type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVCE_PSCALE     type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_PSCALE_MGR type ref to /VCXI/CL_VKSR_SPVRE,
         LR_SPVRE_PSCALE     type ref to /VCXI/CL_VKSR_SPVRE.

  check IT_PSCALE is not initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
  LR_SPVCE_PSCALE_MGR = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'PSCALE_MGR'
                                                 IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_PSCALE_MGR
    exporting
      IR_SPVCE  = LR_SPVCE_PSCALE_MGR
      IR_PARENT = IR_SPVRE_PARENT.
  append LR_SPVRE_PSCALE_MGR to CT_SPVRE.

*** Set In Use
  LR_SPVRE_PSCALE_MGR->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Add Scales
  loop at IT_PSCALE into LS_PSCALE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE_PSCALE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_PSCALE-ISVCE
                                               IR_SPVCE_PARENT = LR_SPVRE_PSCALE_MGR->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_PSCALE
      exporting
        IR_SPVCE  = LR_SPVCE_PSCALE
        IR_PARENT = LR_SPVRE_PSCALE_MGR.
    append LR_SPVRE_PSCALE to CT_SPVRE.

*** Set In Use
    LR_SPVRE_PSCALE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set specific Price Scale Data
    case LS_PSCALE-ISVCE.
      when 'PSCALE_A'.
        ME->SET_VALUE_PSCALE_A( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                IS_PSCALE       = LS_PSCALE ).

      when 'PSCALE_L'.
        ME->SET_VALUE_PSCALE_L( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                IS_PSCALE       = LS_PSCALE ).

      when 'PSCALE_P'.
        ME->SET_VALUE_PSCALE_P( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                IS_PSCALE       = LS_PSCALE ).

      when 'PSCALE_W'.
        ME->SET_VALUE_PSCALE_W( IR_SPVRE_PSCALE = LR_SPVRE_PSCALE
                                IS_PSCALE       = LS_PSCALE ).

    endcase.

  endloop.

endmethod.
method COMPARE.

  data:  LR_BL_PSTEP_CLOS_AS type ref to ZCL_VCXI_P0SR_BL_PSTEP_CLOS_AS.

*** Super Compare
  RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
  check RF_SIMILAR eq ABAP_TRUE.

  move IR_BL_PSTEP ?to LR_BL_PSTEP_CLOS_AS.

***----------------------------------------------------------------------------
*** PC Dimensions
  if ME->T_COMP_IN   eq LR_BL_PSTEP_CLOS_AS->T_COMP_IN and
     ME->S_PCDIM_OUT eq LR_BL_PSTEP_CLOS_AS->S_PCDIM_OUT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

*** SFG Components
  if ME->T_MFMI_P   eq LR_BL_PSTEP_CLOS_AS->T_MFMI_P.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

*** Production Pass
  if ME->F_PPASS eq LR_BL_PSTEP_CLOS_AS->F_PPASS.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

*** Joint
  if ME->T_MS_JOINT eq LR_BL_PSTEP_CLOS_AS->T_MS_JOINT.
    move ABAP_TRUE  to RF_SIMILAR.
  else.
    move ABAP_FALSE to RF_SIMILAR.
    exit.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                      IF_DATE    = IF_DATE
                      IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
  move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
  ME->INIT_MANU( ).

*** Initialize Outsourcing Info
  move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
  ME->INIT_OUTSO( ).

endmethod.
method COPY.

  data:  LR_BL_PSTEP_CLOS_AS type ref to ZCL_VCXI_P0SR_BL_PSTEP_CLOS_AS.

*** Super Copy
  RR_BL_PSTEP = SUPER->COPY( ).
  move RR_BL_PSTEP ?to LR_BL_PSTEP_CLOS_AS.

***----------------------------------------------------------------------------
*** PC Dimensions
  move ME->T_COMP_IN     to LR_BL_PSTEP_CLOS_AS->T_COMP_IN.
  move ME->S_PCDIM_OUT   to LR_BL_PSTEP_CLOS_AS->S_PCDIM_OUT.

*** SFG Components
  move ME->T_MFMI_P      to LR_BL_PSTEP_CLOS_AS->T_MFMI_P.

*** Production Pass
  move ME->F_PPASS       to LR_BL_PSTEP_CLOS_AS->F_PPASS.

*** Joint
  move ME->T_MS_JOINT    to LR_BL_PSTEP_CLOS_AS->T_MS_JOINT.

endmethod.
method DESERIALIZE.

  data:  LF_XML   type STRING.

  check IF_XML is not initial.

*** Deserialize
  call transformation ID
       source xml IF_XML
       result SUPER_XML    = LF_XML

              T_COMP_IN    = ME->T_COMP_IN
              S_PCDIM_OUT  = ME->S_PCDIM_OUT

              F_PPASS      = ME->F_PPASS

              T_MS_JOINT   = ME->T_MS_JOINT

              T_MFMI_P     = ME->T_MFMI_P.

*** Super Deserialize
  SUPER->DESERIALIZE( IF_XML = LF_XML ).

endmethod.
method FILL_SPVRE_ADDON.

  SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                     IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     IR_ARBPL       = IR_ARBPL
                           changing  CT_SPVRE       = CT_SPVRE ).

  case IR_SPVRE_ADDON->GET_ID( ).
    when 'P0_AT_CLOS'.
      ME->FILL_SPVRE_ADDON_CLOS( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                           IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                           IR_ARBPL       = IR_ARBPL
                                 changing  CT_SPVRE       = CT_SPVRE ).
  endcase.

endmethod.
method FILL_SPVRE_ADDON_CLOS.

  data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Ink
  ME->ADD_SPVRE_MC_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                    IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                    IR_ARBPL        = IR_ARBPL
                          changing  CT_SPVRE        = CT_SPVRE ).

***------------------------------------------------------------------------------------------------
*** Add Joint
  ME->ADD_SPVRE_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                 IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                 IR_ARBPL        = IR_ARBPL
                       changing  CT_SPVRE        = CT_SPVRE ).


endmethod.
method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
  check CF_ID_GRP   is initial and
        CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
  move 'GRP_CONV' to CF_ID_GRP.
  move 'CONV'     to CF_ID_ARBPL.

*** If Manual
  if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
    move 'GRP_CONV' to CF_ID_GRP.
    move 'MANU'     to CF_ID_ARBPL.
  endif.

*** If Outsourcing
  if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
    move 'GRP_CONV' to CF_ID_GRP.
    move 'OUTSO'    to CF_ID_ARBPL.
  endif.

endmethod.
method GET_SPVRE_ACTVY.

  data:  LS_PARAM        type        /VCXI/VKSR_S_PARAM.
  data:  LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
         LR_SPVRE_ACTVY  type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity Unitizing
  LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_CLOS'
                                      IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
  create object LR_SPVRE_ACTVY
    exporting
      IR_SPVCE  = LR_SPVCE
      IR_PARENT = IR_SPVRE_ARBPL.
  append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
  LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Joint
  ME->ADD_SPVRE_MC_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                    IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                                    IR_ARBPL        = IR_ARBPL
                          changing  CT_SPVRE        = RT_SPVRE ).

endmethod.
method GET_SPVRE_MF.

***------------------------------------------------------------------------------------------------
*** Add MFMI PC
  ME->ADD_SPVRE_MFMI_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                  IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                        changing  CT_SPVRE       = CT_SPVRE ).


*** Call Super
  SUPER->GET_SPVRE_MF( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                 IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                       changing  CT_SPVRE       = CT_SPVRE
                                 CF_MFI         = CF_MFI
                                 CF_MFO         = CF_MFO ).


endmethod.
method INIT_BY_SPEC.

  SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                       IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
  ME->INIT_BY_SPEC_MC_JOINT( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
  ME->INIT_BY_SPEC_PCDIM( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
  ME->INIT_BY_SPEC_MFMI_P( IT_PRVDR = IT_PRVDR ).

endmethod.
method INIT_BY_SPEC_MC_JOINT.

  data: LF_JOITY type        ZVCXI_P0S_JOITY,
        LF_NOSTI type        ZVCXI_P0SS_NOSTI.
  data: LS_TD342 type        ZVCXI_P0S_TD342,
        LS_JOILE type        ZVCXI_P0S_S_JOILE,
        LS_JOIWI type        ZVCXI_P0S_S_JOIWI,
        LS_STITP type        ZVCXI_P0SS_S_STITP.
  data:          LT_TD342         type        ZCL_VCXI_P0SS_CUST_PRSTY=>YT_TD342.
  data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
        LR_PR_JOINT type ref to ZCL_VCXI_P0SS_PR_JOINT.
  field-symbols: <S_MS_JOINT>     type        ZVCXI_P0SR_S_MS_JOINT.

  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_JOINT.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
    check LR_PR_JOINT is bound.

    move LR_PR_JOINT->GET_JOITY( ) to LF_JOITY.
    move LR_PR_JOINT->GET_PPASS( ) to ME->F_PPASS.

    LR_PR_JOINT->GET_JOILE( importing ES_JOILE = LS_JOILE ).
    LR_PR_JOINT->GET_JOIWI( importing ES_JOIWI = LS_JOIWI ).
    LR_PR_JOINT->GET_STITP( importing ES_STITP = LS_STITP ).
    LR_PR_JOINT->GET_NOSTI( importing EF_NOSTI = LF_NOSTI ).

    clear: LT_TD342.
    ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_MCONSU( exporting IF_JOITY = LF_JOITY
                                                          IF_DATE  = ME->F_DATE
                                                importing ET_TD342 = LT_TD342 ).

    if LT_TD342 is not initial.
***   Add Entry for each defined Material Consumption
      loop at LT_TD342 into LS_TD342.
        append initial line to ME->T_MS_JOINT assigning <S_MS_JOINT>.
        move LS_TD342-ISVCE            to <S_MS_JOINT>-ISVCE.
        move LF_JOITY                  to <S_MS_JOINT>-JOITY.
        move LS_TD342-MATNR            to <S_MS_JOINT>-MATNR.
        move ABAP_FALSE                to <S_MS_JOINT>-PURCH.
        move-corresponding LS_JOILE    to <S_MS_JOINT>.
        move-corresponding LS_JOIWI    to <S_MS_JOINT>.
        move-corresponding LS_STITP    to <S_MS_JOINT>.
        move LF_NOSTI                  to <S_MS_JOINT>-NOSTI.
      endloop.
    else.
***   Add Dummy Entry if no Material Consumption is neede
      append initial line to ME->T_MS_JOINT assigning <S_MS_JOINT>.
      move LF_JOITY                  to <S_MS_JOINT>-JOITY.
      move ABAP_FALSE                to <S_MS_JOINT>-PURCH.
      move-corresponding LS_JOILE    to <S_MS_JOINT>.
      move-corresponding LS_JOIWI    to <S_MS_JOINT>.
      move-corresponding LS_STITP    to <S_MS_JOINT>.
      move LF_NOSTI                  to <S_MS_JOINT>-NOSTI.
    endif.
  endloop.

endmethod.
method INIT_BY_SPEC_MFMI_P.

  data:          LS_MFMI_P        type          ZVCXI_P0SR_S_MFMI_P,
                 LS_FOLLE         type          ZVCXI_P0SS_S_FOLLE,
                 LS_FOLWI         type          ZVCXI_P0SS_S_FOLWI,
                 LS_FOLHE         type          ZVCXI_P0SS_S_FOLHE,
                 LS_PRICE         type          ZVCXI_XCS_S_PRICE,
                 LS_PRICP         type          ZVCXI_XCS_S_PRICP,
                 LS_PSQTY         type          ZVCXI_XCS_S_PSQTY,
                 LS_BAWGT         type          ZVCXI_P0S_S_BAWGT,
                 LS_BAWGP         type          ZVCXI_P0S_S_BAWGP,
                 LS_AREA          type          ZVCXI_XCS_S_CALCV.
  data:          LR_GATE          type ref to   /VCXI/CL_VKSR_GATE,
                 LR_GATE_COMP_SFG type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_COMP_SFG   type ref to   ZCL_VCXI_P0SS_PR_COMP_SFG,
                 LR_PR_PSCALE     type ref to   ZCL_VCXI_XCS_PR_PSCALE.
  field-symbols: <S_PSCALE>       type          ZVCXI_XCSR_S_PSCALE.

*** Process all Component SFGs
  loop at IT_PRVDR into LR_GATE_COMP_SFG.
*** Check is child of Specification
    try.
        move LR_GATE_COMP_SFG->R_CLSPR ?to LR_PR_COMP_SFG.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_COMP_SFG.
    endtry.

    check LR_PR_COMP_SFG is bound.


    move LR_PR_COMP_SFG->GET_MATNR( ) to LS_MFMI_P-MATNR.
    move LR_PR_COMP_SFG->GET_PURCH( ) to LS_MFMI_P-PURCH.

    move 100                          to LS_MFMI_P-MFISP.
    move '%'                          to LS_MFMI_P-MFISP_UOM.

    move LR_PR_COMP_SFG->GET_COMPR( ) to LS_MFMI_P-MFICF.
    move 1                            to LS_MFMI_P-MFICP.

    LR_PR_COMP_SFG->GET_FOLLE( importing ES_FOLLE = LS_FOLLE ).
    move LS_FOLLE-FOLLE               to LS_MFMI_P-PCLEN.
    move LS_FOLLE-FOLLE_UOM           to LS_MFMI_P-PCLEN_UOM.

    LR_PR_COMP_SFG->GET_FOLWI( importing ES_FOLWI = LS_FOLWI ).
    move LS_FOLWI-FOLWI               to LS_MFMI_P-PCWID.
    move LS_FOLWI-FOLWI_UOM           to LS_MFMI_P-PCWID_UOM.

    LR_PR_COMP_SFG->GET_FOLHE( importing ES_FOLHE = LS_FOLHE ).
    move LS_FOLHE-FOLHE               to LS_MFMI_P-PCHEI.
    move LS_FOLHE-FOLHE_UOM           to LS_MFMI_P-PCHEI_UOM.

    move 1                            to LS_MFMI_P-PCUPS.

    move 'A'                          to LS_MFMI_P-PCDIR.

    move 'ZVCXI_P0_PRODUCT'           to LS_MFMI_P-PCTYP.

    move LR_PR_COMP_SFG->GET_LIFNR( ) to LS_MFMI_P-LIFNR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Price Scale
    loop at IT_PRVDR into LR_GATE.
      try.
***     Check Scale is part of Sheet Procurement
          check LR_GATE->GET_PARENT( ) eq LR_GATE_COMP_SFG.
          move LR_GATE->R_CLSPR ?to LR_PR_PSCALE.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_PSCALE.
      endtry.
      check LR_PR_PSCALE is bound.

      append initial line to LS_MFMI_P-T_PSCALE assigning <S_PSCALE>.

***   Add Price Scales
      move LR_GATE->F_ID       to <S_PSCALE>-ISVCE.

      LS_PSQTY = LR_PR_PSCALE->GET_PSQTY( ).
      move LS_PSQTY-PSQTY      to <S_PSCALE>-PSQTY.
      move LS_PSQTY-PSQTY_UOM  to <S_PSCALE>-PSQTY_UOM.

      LS_PRICE = LR_PR_PSCALE->GET_PRICE( ).
      move LS_PRICE-PRICE      to <S_PSCALE>-PRICE.
      move LS_PRICE-PRICE_CURR to <S_PSCALE>-PRICE_CURR.

      LS_PRICP = LR_PR_PSCALE->GET_PRICP( ).
      move LS_PRICP-PRICP      to <S_PSCALE>-PRICP.
      move LS_PRICP-PRICP_UOM  to <S_PSCALE>-PRICP_UOM.

    endloop.

*** Append Material Flow Material In
    append LS_MFMI_P to ME->T_MFMI_P.

  endloop.
endmethod.
method INIT_BY_SPEC_PCDIM.

  data:          LS_FOLLE          type        ZVCXI_P0SS_S_FOLLE,
                 LS_FOLWI          type        ZVCXI_P0SS_S_FOLWI,
                 LS_FOLHE          type        ZVCXI_P0SS_S_FOLHE.
  data:          LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_SPEC_AS     type ref to ZCL_VCXI_P0SS_PR_SPEC_AS,
                 LR_PR_COMP_AS     type ref to ZCL_VCXI_P0SS_PR_COMP_AS.
  field-symbols: <S_COMP_IN>       type        ZVCXI_P0SR_S_COMP_IN.

***------------------------------------------------------------------------------------------------
*** Get Spec for AS Reference
  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SPEC_AS.
        if LR_PR_SPEC_AS is bound.
          exit.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.
  check LR_PR_SPEC_AS is bound.

***------------------------------------------------------------------------------------------------
*** Get PC Dimensions Out
  LR_PR_SPEC_AS->GET_FOLLE( importing ES_FOLLE = LS_FOLLE ).
  LR_PR_SPEC_AS->GET_FOLWI( importing ES_FOLWI = LS_FOLWI ).
  LR_PR_SPEC_AS->GET_FOLHE( importing ES_FOLHE = LS_FOLHE ).
  move LS_FOLLE-FOLLE     to ME->S_PCDIM_OUT-PCLEN.
  move LS_FOLLE-FOLLE_UOM to ME->S_PCDIM_OUT-PCLEN_UOM.
  move LS_FOLWI-FOLWI     to ME->S_PCDIM_OUT-PCWID.
  move LS_FOLWI-FOLWI_UOM to ME->S_PCDIM_OUT-PCWID_UOM.
  move LS_FOLHE-FOLHE     to ME->S_PCDIM_OUT-PCHEI.
  move LS_FOLHE-FOLHE_UOM to ME->S_PCDIM_OUT-PCHEI_UOM.
  move 1                  to ME->S_PCDIM_OUT-PCUPS.
  move 'A'                to ME->S_PCDIM_OUT-PCDIR.
  move 1                  to ME->S_PCDIM_OUT-NOOUT.

***------------------------------------------------------------------------------------------------
*** Get PC Dimensions In
  if ME->F_PPASS gt 1.
*** Ignore Size and have fixed PC Direction
    append initial line to ME->T_COMP_IN assigning <S_COMP_IN>.
    move 'A' to <S_COMP_IN>-PCDIR.
  endif.

  loop at IT_PRVDR into LR_GATE.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_COMP_AS.
        check LR_PR_COMP_AS is bound and
              LR_PR_COMP_AS->GET_PPASS( ) eq ME->F_PPASS.

***     Ignore Size and have fixed PC Direction
        append initial line to ME->T_COMP_IN assigning <S_COMP_IN>.
        move LR_PR_COMP_AS->GET_PPASS( ) to <S_COMP_IN>-PPASS.
        move LR_PR_COMP_AS->GET_COMPR( ) to <S_COMP_IN>-COMPR.
        move 'A'                         to <S_COMP_IN>-PCDIR.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

***------------------------------------------------------------------------------------------------
*** Get PC Type and Direction
  ZCL_VCXI_P0SR_CUST_PSTEP=>GET_PSTEP_INFO( exporting IF_IPSTP = ME->F_IPSTP
                                            importing EF_PCTYP = ME->S_PCDIM_OUT-PCTYP
                                                      EF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR
                                                      EF_PCDOP = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDOP ).

  if ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR is initial.
    move 'A' to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.
  endif.

*** Set Direction
  ME->ZIF_VCXI_P0SR_PCDIR~SET_PCDIR( IF_PCDIR = ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR ).

endmethod.
method SERIALIZE.

*** Super Serialize
  RF_XML = SUPER->SERIALIZE( ).

*** Serialize
  call transformation ID
       source SUPER_XML    = RF_XML

              T_COMP_IN    = ME->T_COMP_IN
              S_PCDIM_OUT  = ME->S_PCDIM_OUT

              F_PPASS      = ME->F_PPASS

              T_MS_JOINT   = ME->T_MS_JOINT

              T_MFMI_P     = ME->T_MFMI_P

       result xml RF_XML.

endmethod.
method SET_SPVRE_VALUE_MC_JGLUE.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOITY    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOITY                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Joint Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOIWI    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOIWI                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOIWI_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_AVGCO_W  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_AVGCO-AVGCO                              to LS_PARAM-ATFLV.
  move IS_AVGCO-AVGCO_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_AVGCP_A  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_AVGCP-AVGCP                              to LS_PARAM-ATFLV.
  move IS_AVGCP-AVGCP_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-LIFNR                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PURCH    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PURCH                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_TEXT     to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-TEXT                            to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PRICE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICE_CURR                      to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PRICP_W  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICP                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICP_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
method SET_SPVRE_VALUE_MC_JSTITCH.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_JOITY    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOITY                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_JOILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOILE                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOILE_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_AVGCO_P  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-NOSTI                             to LS_PARAM-ATFLV.
  move IS_AVGCP-AVGCP_UOM                            to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_AVGCP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-STITP                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-STITP_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Stitch Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_STILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_AVGCO-AVGCO                                to LS_PARAM-ATFLV.
  move IS_AVGCO-AVGCO_UOM                            to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-LIFNR                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PURCH    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-PURCH                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_TEXT     to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-TEXT                              to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PRICE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICE                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICE_CURR                        to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PRICP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICP                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICP_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JSTITCH
method SET_SPVRE_VALUE_MC_JTAPE.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_JOITY    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOITY                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_JOILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-LIFNR                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PURCH    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PURCH                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_TEXT     to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-TEXT                            to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PRICE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICE_CURR                      to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PRICP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICP                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICP_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JTAPE
method SET_VALUE_PSCALE_A.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_A       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_A       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method SET_VALUE_PSCALE_L.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_L       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_L       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method SET_VALUE_PSCALE_P.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_P       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_P       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method SET_VALUE_PSCALE_W.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Price Scale Quantity
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PSQTY_W       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PSQTY                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PSQTY_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICE         to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICE                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICE_CURR                          to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_XCS_PR_PSCALE=>C_PARID_PRICP_W       to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_PSCALE-PRICP                               to LS_PARAM-ATFLV.
  move IS_PSCALE-PRICP_UOM                           to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_PSCALE->SET_PARAM( IS_PARAM = LS_PARAM ).


endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_IN.
endmethod.
method ZIF_VCXI_P0SR_ADJ_PCDIM~CALC_PCDIM_OUT.

  free CT_PCDIM.
  append ME->S_PCDIM_OUT to CT_PCDIM.

endmethod.
method ZIF_VCXI_P0SR_PCDIR~SET_PCDIR.

  data:          LS_PCDIM     type ZVCXI_P0SP_S_PCDIM.
  field-symbols: <S_COMP_IN>  type ZVCXI_P0SR_S_COMP_IN.

  move IF_PCDIR to ME->ZIF_VCXI_P0SR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
  loop at ME->T_COMP_IN assigning <S_COMP_IN>.
    move-corresponding <S_COMP_IN> to LS_PCDIM.
    LS_PCDIM = ME->TURN_PCDIM( IS_PCDIM = LS_PCDIM
                               IF_PCDIR = IF_PCDIR ).
    move-corresponding LS_PCDIM to <S_COMP_IN>.
  endloop.

*** Turn PC Dimension OUT
  ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                    IF_PCDIR = IF_PCDIR ).

endmethod.
