
class ZCL_VCXI_XCM_MBQ_STP_S408 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S408 definition
class ZCL_VCXI_XCM_MBQ_STP_S408 implementation.
  method EXECUTE.

    data: LF_BELNR type CK_BELNR.
    data: LS_MATLI type ZVCXI_XCM_MBQ_S_MATLI.
    data: LT_BAPIRET2 type BAPIRETTAB.
    data: LR_BOB_MAT type ref to ZCL_VCXI_XCI_BOB_MAT,
          LR_ACTDAT  type ref to DATA.
    field-symbols: <S_ACTDAT_PRU> type ZVCXI_XCM_MBQ_S_ACTDAT_PRU.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Price Change
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_PRU ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_PRU ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_PRU>.


***--------------------------------------------------------------------------------------
***     Load Material Business Object
        create object LR_BOB_MAT.
        LR_BOB_MAT->INIT_FROM_DB( exporting IF_MATNR    = LS_MATLI-MATNR
                                            IF_WERKS    = <S_ACTDAT_PRU>-WERKS
                                  importing ET_BAPIRET2 = LT_BAPIRET2 ).

***     Change Price
        LF_BELNR = LR_BOB_MAT->CHANGE_PRICE( IF_BUDAT = <S_ACTDAT_PRU>-BUDAT
                                             IF_VALPR = <S_ACTDAT_PRU>-VALPR
                                             IF_PEINH = <S_ACTDAT_PRU>-PEINH
                                             IF_BKTXT = <S_ACTDAT_PRU>-BKTXT ).

***     Price change document & posted
        ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'CKPRCH'
                                         IF_MSGTY = 'S'
                                         IF_MSGNO = '019'
                                         IF_MSGV1 = LF_BELNR ).

***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S408 definition
endclass. "ZCL_VCXI_XCM_MBQ_STP_S408 implementation
