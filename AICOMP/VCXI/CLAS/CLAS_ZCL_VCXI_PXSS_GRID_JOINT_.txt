
class ZCL_VCXI_PXSS_GRID_JOINT definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  data F_CADLS type ZVCXI_PXS_CADLS .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSS_S_JOINT_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_JOINT
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_JOINT_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_JOINT_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_HOTSPOT_CLICK
    for event HOTSPOT_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW_ID
      !E_COLUMN_ID
      !ES_ROW_NO .

  methods GET_DISABLED_ADD
    redefinition .
  methods GET_DISABLED_DEL
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods SET_EVENT
    redefinition .
  methods INIT_STYLE
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_GRID_JOINT definition
class ZCL_VCXI_PXSS_GRID_JOINT implementation.
  method CHANGE_STYLE_JOINT.

    data: LS_JOINT_VIS type ZVCXI_PXSS_S_JOINT_VIS.
    data: LR_PR_JOINT type ref to ZCL_VCXI_PXSS_PR_JOINT.

    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_JOINT.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_JOINT is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_JOINT_VIS.

*** Set Joint Type = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOITY'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

***------------------------------------------------------------------
    if LS_JOINT_VIS-FOVRW ne ABAP_TRUE and
       LS_JOINT_VIS-HAS_PRVDR eq ABAP_TRUE.
***   Set Joint Width = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Joint Width = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.
    if LS_JOINT_VIS-FOVRW eq ABAP_UNDEFINED.
***   Set Override Joint Width = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRW'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Override Joint Width = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRW'
                                  IF_STYLE     = switch #( ME->F_STYLE_ENABLED when CL_GUI_ALV_GRID=>MC_STYLE_DISABLED then ME->F_STYLE_ENABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO
                                                                                                                       else ME->F_STYLE_ENABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT )
                        changing  CT_STYL      = CT_STYL ).
    endif.


***------------------------------------------------------------------
    if LS_JOINT_VIS-FOVRL ne ABAP_TRUE and
       LS_JOINT_VIS-HAS_PRVDR eq ABAP_TRUE.
***   Set Joint Length = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Joint Length = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.
    if LS_JOINT_VIS-FOVRL eq ABAP_UNDEFINED.
***   Set Override Joint Length = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRL'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Override Joint Length = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRL'
                                  IF_STYLE     = switch #( ME->F_STYLE_ENABLED when CL_GUI_ALV_GRID=>MC_STYLE_DISABLED then ME->F_STYLE_ENABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO
                                                                                                                       else ME->F_STYLE_ENABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT )
                        changing  CT_STYL      = CT_STYL ).
    endif.


***------------------------------------------------------------------
    if LS_JOINT_VIS-FOVRS ne ABAP_TRUE.
***   Set Number of Stiches and Stiches Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOSTI'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STITP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Number of Stiches and Stiches Per = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOSTI'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STITP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.
    if LS_JOINT_VIS-FOVRS eq ABAP_UNDEFINED.
***   Set Override Stiches = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRS'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Override Stiches = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRS'
                                  IF_STYLE     = switch #( ME->F_STYLE_ENABLED when CL_GUI_ALV_GRID=>MC_STYLE_DISABLED then ME->F_STYLE_ENABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO
                                                                                                                       else ME->F_STYLE_ENABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT )
                        changing  CT_STYL      = CT_STYL ).
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZCL_VCXI_PXSS_PR_JOINT=>C_IPRVT_PX_JOINT.

  endmethod.
  method GET_DISABLED_ADD.

    if ( ME->F_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_REVISION or
         ME->F_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_LOCKED ).
***   Disable Tapes in case of CAD
      RF_DISABLED = ABAP_TRUE.
    else.
      RF_DISABLED = SUPER->GET_DISABLED_ADD( ).
    endif.

  endmethod.
  method GET_DISABLED_DEL.

    if ( ME->F_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_REVISION or
         ME->F_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_LOCKED ).
***   Disable Tapes in case of CAD
      RF_DISABLED = ABAP_TRUE.
    else.
      RF_DISABLED = SUPER->GET_DISABLED_DEL( ).
    endif.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED    type /VCXI/CKX_LOCKED,
          LF_INUSE     type /VCXI/VKSR_INUSE,
          LF_JOIWI     type ABAP_BOOL,
          LF_JOILE     type ABAP_BOOL,
          LF_STITCH    type ABAP_BOOL,
          LF_HAS_PRVDR type ABAP_BOOL.
    data: LS_JOINT_GRID type ZVCXI_PXSS_S_JOINT_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <S_FCAT> type          LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Find Joint Settings
    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_JOINT_GRID.
      if LS_JOINT_GRID-FOVRW ne ABAP_UNDEFINED.
        move ABAP_TRUE to LF_JOIWI.
      endif.
      if LS_JOINT_GRID-FOVRL ne ABAP_UNDEFINED.
        move ABAP_TRUE to LF_JOILE.
      endif.
      if LS_JOINT_GRID-FOVRS ne ABAP_UNDEFINED.
        move ABAP_TRUE to LF_STITCH.
      endif.
      if LS_JOINT_GRID-HAS_PRVDR eq ABAP_TRUE.
        LF_HAS_PRVDR = ABAP_TRUE.
      endif.
    endloop.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'HAS_PRVDR' or 'T_STYL'.
          move ABAP_TRUE    to <S_FCAT>-TECH.
          move 0            to <S_FCAT>-COL_POS.

        when 'JOIPO'.
          if LF_HAS_PRVDR ne ABAP_TRUE and
             LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

        when 'JOITY'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

***     Joint Width
        when 'JOIWI'.
          if LF_JOIWI eq ABAP_TRUE.
            if LF_LOCKED eq ABAP_TRUE and
               LF_INUSE  eq ABAP_TRUE.
              move ABAP_TRUE    to <S_FCAT>-EDIT.
            endif.
          else.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.
        when 'JOIWI_UOM'.
          if LF_JOIWI ne ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.
        when 'FOVRW'.
          if LF_JOIWI     eq ABAP_TRUE and
             LF_HAS_PRVDR eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
            if LF_LOCKED eq ABAP_TRUE and
               LF_INUSE  eq ABAP_TRUE.
              move ABAP_TRUE    to <S_FCAT>-EDIT.
              move ABAP_TRUE    to <S_FCAT>-HOTSPOT.
            endif.
          else.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.


***     Joint Length
        when 'JOILE'.
          if LF_JOILE eq ABAP_TRUE.
            if LF_LOCKED eq ABAP_TRUE and
               LF_INUSE  eq ABAP_TRUE.
              move ABAP_TRUE    to <S_FCAT>-EDIT.
            endif.
          else.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.
        when 'JOILE_UOM'.
          if LF_JOILE ne ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.
        when 'FOVRL'.
          if LF_JOILE eq ABAP_TRUE and
             LF_HAS_PRVDR eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
            if LF_LOCKED eq ABAP_TRUE and
               LF_INUSE  eq ABAP_TRUE.
              move ABAP_TRUE    to <S_FCAT>-EDIT.
              move ABAP_TRUE    to <S_FCAT>-HOTSPOT.
            endif.
          else.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.


***     Stitching
        when 'NOSTI' or 'STITP'.
          if LF_STITCH eq ABAP_TRUE.
            if LF_LOCKED eq ABAP_TRUE and
               LF_INUSE  eq ABAP_TRUE.
              move ABAP_TRUE    to <S_FCAT>-EDIT.
            endif.
          else.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.

        when 'STITP_UOM'.
          if LF_STITCH eq ABAP_FALSE.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.

        when 'FOVRS'.
          if LF_STITCH eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
            if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
              move ABAP_TRUE    to <S_FCAT>-EDIT.
              move ABAP_TRUE    to <S_FCAT>-HOTSPOT.
            endif.
          else.
            move ABAP_TRUE    to <S_FCAT>-NO_OUT.
          endif.

      endcase.

    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_PXSS_S_JOINT_GRID( POSID  = LR_GATE->GET_POSID( )
                                                        GATKY  = LR_GATE->F_GATKY
                                                        R_GATE = LR_GATE
                                                      ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_JOINT_VIS( exporting IR_GATE = LR_GATE
                         changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_JOINT( exporting IR_GATE = LR_GATE
                                            IS_DATA = <S_DATA>
                                   changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_JOINT_VIS.

    data: LS_JOINT_VIS type ZVCXI_PXSS_S_JOINT_GRID.
    data: LR_PR_JOINT  type ref to ZCL_VCXI_PXSS_PR_JOINT.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_JOINT.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_JOINT is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_JOINT_VIS.

***--------------------------------------------------------------------------------------
*** Get Joint Position
    LS_JOINT_VIS-JOIPO = LR_PR_JOINT->GET_JOIPO( ).

*** Get Joint Type and Description
    LS_JOINT_VIS-JOITY = LR_PR_JOINT->GET_JOITY( importing EF_DESCR = LS_JOINT_VIS-JOITY_DESCR ).

*** Get Joint Width and override Flag
    LS_JOINT_VIS-S_JOIWI = LR_PR_JOINT->GET_JOIWI( importing EF_FOVRW = LS_JOINT_VIS-FOVRW ).
    if LS_JOINT_VIS-FOVRW eq ABAP_UNDEFINED.
      clear LS_JOINT_VIS-S_JOIWI.
    endif.

*** Get Joint Length and override Flag
    LS_JOINT_VIS-S_JOILE = LR_PR_JOINT->GET_JOILE( importing EF_FOVRL = LS_JOINT_VIS-FOVRL ).
    if LS_JOINT_VIS-FOVRL eq ABAP_UNDEFINED.
      clear LS_JOINT_VIS-S_JOILE.
    endif.

*** Get Stitching Setting and override Flag
    LS_JOINT_VIS-NOSTI   = LR_PR_JOINT->GET_NOSTI( importing EF_FOVRS = LS_JOINT_VIS-FOVRS ).
    LS_JOINT_VIS-S_STITP = LR_PR_JOINT->GET_STITP( ).
    if LS_JOINT_VIS-FOVRS eq ABAP_UNDEFINED.
      clear: LS_JOINT_VIS-NOSTI,
             LS_JOINT_VIS-S_STITP.
    endif.

*** Has Provider for Joint Dimension
    if LR_PR_JOINT->GET_PRVDR_JOIDIM( ) is bound.
      LS_JOINT_VIS-HAS_PRVDR = ABAP_TRUE.
    endif.

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_JOINT_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_JOINT_GRID type ZVCXI_PXSS_S_JOINT_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_JOINT_GRID.

          check LS_JOINT_GRID-R_GATE is bound and
                LS_JOINT_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_JOINT_VIS( IR_GATE = LS_JOINT_GRID-R_GATE
                             IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method HANDLE_HOTSPOT_CLICK.

    data: LS_JOINT_GRID type ZVCXI_PXSS_S_JOINT_GRID.
    field-symbols: <T_DATA>  type standard table,
                   <S_DATA>  type ANY,
                   <F_FIELD> type ANY.

    try.
***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        read table <T_DATA> assigning <S_DATA> index E_ROW_ID.
        check SY-SUBRC eq 0.

        assign component E_COLUMN_ID of structure <S_DATA> to <F_FIELD>.
        check SY-SUBRC eq 0.

***     Adjust Flag
        <F_FIELD> = switch #( <F_FIELD> when ABAP_TRUE  then ABAP_FALSE
                                        when ABAP_FALSE then ABAP_TRUE ).

***     Set Values to PR Class
        move-corresponding <S_DATA> to LS_JOINT_GRID.
        ME->SET_JOINT_VIS( IR_GATE = LS_JOINT_GRID-R_GATE
                           IS_DATA = <S_DATA> ).

***     Process Events
        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

*** If we switch Application Events off -> do manually Refresh Screen
    if ME->F_APPL_EVENTS eq ABAP_FALSE.
      ME->R_UIGATE->REFRESH_SCREEN( ).
    endif.

  endmethod.
  method INIT_STYLE.

    if ( ME->F_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_REVISION or
         ME->F_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_LOCKED ).
***   Disable Tapes in case of CAD
      ME->F_STYLE_ENABLED  = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
      ME->F_STYLE_DISABLED = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
    else.
      SUPER->INIT_STYLE( ).
    endif.

  endmethod.
  method SET_EVENT.

    SUPER->SET_EVENT( ).

*** Set Hotspot
    set handler ME->HANDLE_HOTSPOT_CLICK       for ME->R_GRID.

  endmethod.
  method SET_JOINT_VIS.

    data: LS_JOINT_VIS_OLD type        ZVCXI_PXSS_S_JOINT_VIS,
          LS_JOINT_VIS_NEW type        ZVCXI_PXSS_S_JOINT_VIS.
    data: LR_PR_JOINT  type ref to ZCL_VCXI_PXSS_PR_JOINT.


***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_JOINT.
    LR_PR_JOINT ?= IR_GATE->R_CLSPR.
    check LR_PR_JOINT is bound.

*** Get old Values
    ME->GET_JOINT_VIS( exporting IR_GATE = IR_GATE
                       changing  CS_DATA = LS_JOINT_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_JOINT_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Joint Type
    if LS_JOINT_VIS_NEW-JOITY ne LS_JOINT_VIS_OLD-JOITY.
      LR_PR_JOINT->SET_JOITY( IF_JOITY = LS_JOINT_VIS_NEW-JOITY
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Controlled by Provider
    if LS_JOINT_VIS_NEW-HAS_PRVDR eq ABAP_TRUE.
***   Joint Width
      if LS_JOINT_VIS_NEW-FOVRW ne LS_JOINT_VIS_OLD-FOVRW.
        LR_PR_JOINT->SET_JOIWI( IF_FOVRW = LS_JOINT_VIS_NEW-FOVRW ).
      endif.
      if LS_JOINT_VIS_NEW-FOVRW eq ABAP_TRUE and
         LS_JOINT_VIS_NEW-JOIWI ne LS_JOINT_VIS_OLD-JOIWI.
        LR_PR_JOINT->SET_JOIWI( IS_JOIWI = LS_JOINT_VIS_NEW-S_JOIWI
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Joint Length
      if LS_JOINT_VIS_NEW-FOVRL ne LS_JOINT_VIS_OLD-FOVRL.
        LR_PR_JOINT->SET_JOILE( IF_FOVRL = LS_JOINT_VIS_NEW-FOVRL ).
      endif.
      if LS_JOINT_VIS_NEW-FOVRL eq ABAP_TRUE and
         LS_JOINT_VIS_NEW-JOILE ne LS_JOINT_VIS_OLD-JOILE.
        LR_PR_JOINT->SET_JOILE( IS_JOILE = LS_JOINT_VIS_NEW-S_JOILE
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    else.
***   Joint Position
      if LS_JOINT_VIS_NEW-JOIPO ne LS_JOINT_VIS_OLD-JOIPO.
        LR_PR_JOINT->SET_JOIPO( IF_JOIPO = LS_JOINT_VIS_NEW-JOIPO
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
***   Joint Width
      if LS_JOINT_VIS_NEW-JOIWI ne LS_JOINT_VIS_OLD-JOIWI.
        LR_PR_JOINT->SET_JOIWI( IS_JOIWI = LS_JOINT_VIS_NEW-S_JOIWI
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
***   Joint Length
      if LS_JOINT_VIS_NEW-JOILE ne LS_JOINT_VIS_OLD-JOILE.
        LR_PR_JOINT->SET_JOILE( IS_JOILE = LS_JOINT_VIS_NEW-S_JOILE
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Stitching Settings
    if LS_JOINT_VIS_NEW-FOVRS ne LS_JOINT_VIS_OLD-FOVRS.
      LR_PR_JOINT->SET_NOSTI( IF_FOVRS = LS_JOINT_VIS_NEW-FOVRS ).
      LR_PR_JOINT->SET_STITP( IF_FOVRS = LS_JOINT_VIS_NEW-FOVRS ).
    endif.
    if LS_JOINT_VIS_NEW-FOVRS eq ABAP_TRUE.
      if LS_JOINT_VIS_NEW-NOSTI ne LS_JOINT_VIS_OLD-NOSTI.
        LR_PR_JOINT->SET_NOSTI( IF_NOSTI = LS_JOINT_VIS_NEW-NOSTI
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
      if LS_JOINT_VIS_NEW-S_STITP ne LS_JOINT_VIS_OLD-S_STITP.
        LR_PR_JOINT->SET_STITP( IS_STITP = LS_JOINT_VIS_NEW-S_STITP
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

  endmethod.
