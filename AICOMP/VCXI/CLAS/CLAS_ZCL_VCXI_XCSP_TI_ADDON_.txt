
class ZCL_VCXI_XCSP_TI_ADDON definition
  public
  inheriting from ZCL_VCXI_XCS_TI
  create public .

public section.

  methods /VCXI/IF_VKSU_TI_EVENT~HANDLE_DOUBLE_CLICK
    redefinition .
protected section.

  constants C_OPEN_MODE_OPERATION type /VCXI/CKX_PRPVA value 'OPERATION'. "#EC NOTEXT

  methods OPEN_UI_OPERATION
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSP_TI_ADDON definition
class ZCL_VCXI_XCSP_TI_ADDON implementation.
method /VCXI/IF_VKSU_TI_EVENT~HANDLE_DOUBLE_CLICK.

*** If it is TI_OPEN_MODE with Attribute OPERATION
  if IF_ITMNA ne /VCXI/CL_VKSRU_TREE=>C_COLUMN_STATUS and
     ME->GET_OPEN_MODE( ) eq C_OPEN_MODE_OPERATION.
    ME->OPEN_UI_OPERATION( ).

*** All other do Super
  else.
    SUPER->/VCXI/IF_VKSU_TI_EVENT~HANDLE_DOUBLE_CLICK( IF_ITMNA = IF_ITMNA ).
  endif.

endmethod.
method OPEN_UI_OPERATION.

  data:  LR_GATE_OPERATION type ref to /VCXI/CL_VKSR_GATE,
         LR_UI             type ref to /VCXI/CL_VKSRU_CLSUI,
         LR_UI_MACHINE     type ref to ZCL_VCXI_XCSP_UI_MACHINE.

  LR_GATE_OPERATION = ME->R_GATE->GET_PARENT( ).
  check LR_GATE_OPERATION is bound.

*** Open Operation UI
  LR_UI = ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = LR_GATE_OPERATION ).

*** Set Default Gate for Activ Tab
  try.
      move LR_UI ?to LR_UI_MACHINE.
    catch CX_SY_MOVE_CAST_ERROR.
      exit.
  endtry.

  check LR_UI_MACHINE is bound.
  LR_UI_MACHINE->R_DEFAULT_GATE = ME->R_GATE.

endmethod.
endclass. "ZCL_VCXI_XCSP_TI_ADDON implementation
