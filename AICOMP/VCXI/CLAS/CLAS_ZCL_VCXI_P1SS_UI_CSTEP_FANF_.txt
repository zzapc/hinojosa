
class ZCL_VCXI_P1SS_UI_CSTEP_FANF definition
  public
  inheriting from ZCL_VCXI_P1SS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_FANF_VIS type ZVCXI_P1SS_S_CSTEP_FANF_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_UPDATE_VIS
    redefinition .
protected section.

  data R_PR_CSTEP_FANF type ref to ZCL_VCXI_P1SS_PR_CSTEP_FANF .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_CSTEP_FANF definition
class ZCL_VCXI_P1SS_UI_CSTEP_FANF implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_CSTEP_FANF_BIND'
      exporting
        IR_UI_CSTEP_FANF = ME
      importing
        ES_DYNP          = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_FANF.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***----------------------------------------------------------------------------
***     Modify Screen
        loop at screen.
***       Handling Dimension changeable if Override Flag is set
          if SCREEN-GROUP1 eq 'OHD'.
            if ME->S_CSTEP_FANF_VIS-FOVRR_HNDDIM eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_CSTEP_FANF_VIS type ZVCXI_P1SS_S_CSTEP_FANF_VIS.


*** Call SUPER
    SUPER->DO_UPDATE_VIS( IS_CSTEP_VIS = IS_CSTEP_VIS ).

    check ME->R_PR_CSTEP_FANF is bound.

*** "Cast" Vis Structure
    move-corresponding IS_CSTEP_VIS to LS_CSTEP_FANF_VIS.

***--------------------------------------------------------------------------------------
*** Update Handling Dimension if it is "Overriden"
    if ME->S_CSTEP_FANF_VIS-FOVRR_HNDDIM eq ABAP_TRUE and
       ME->S_CSTEP_FANF_VIS-S_HNDDIM ne LS_CSTEP_FANF_VIS-S_HNDDIM.
      ME->R_PR_CSTEP_FANF->SET_HNDDIM( IS_HNDDIM = LS_CSTEP_FANF_VIS-S_HNDDIM
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Handling Dimension
    if ME->S_CSTEP_FANF_VIS-FOVRR_HNDDIM ne LS_CSTEP_FANF_VIS-FOVRR_HNDDIM.
      ME->R_PR_CSTEP_FANF->SET_HNDDIM( IF_FOVRR = LS_CSTEP_FANF_VIS-FOVRR_HNDDIM ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_FANF.

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    free: ME->S_CSTEP_FANF_VIS.
    ME->S_CSTEP_FANF_VIS-S_CSTEP_VIS = ME->S_CSTEP_VIS.

***--------------------------------------------------------------------------------------
*** Fanfold
    ME->S_CSTEP_FANF_VIS-S_FANHE = ME->R_PR_CSTEP_FANF->GET_FANHE( ).
    ME->S_CSTEP_FANF_VIS-S_FANLE = ME->R_PR_CSTEP_FANF->GET_FANLE( ).
    ME->S_CSTEP_FANF_VIS-S_FANSH = ME->R_PR_CSTEP_FANF->GET_FANSH( ).

*** Handling Dimension
    ME->S_CSTEP_FANF_VIS-S_HNDDIM = ME->R_PR_CSTEP_FANF->GET_HNDDIM( importing EF_FOVRR = ME->S_CSTEP_FANF_VIS-FOVRR_HNDDIM ).

  endmethod.
