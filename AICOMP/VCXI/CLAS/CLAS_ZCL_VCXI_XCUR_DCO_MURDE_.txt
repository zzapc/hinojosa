
class ZCL_VCXI_XCUR_DCO_MURDE definition
  public
  inheriting from /VCXI/CL_CKMR_CLDCO
  create public .

public section.

  data R_SMDCNTRL type ref to ZCL_VCXI_XCUR_SMDCNTRL read-only .

  methods SET_MURGR
    importing
      !IT_MURGR type ZVCXI_XCUR_TT_MURGR
    raising
      /VCXI/CX_CKX .
  methods SET_SMDCNTRL
    importing
      !IR_SMDCNTRL type ref to ZCL_VCXI_XCUR_SMDCNTRL
    raising
      /VCXI/CX_CKX .
  methods GET_MURGR
    exporting
      !ET_MURGR_XML type ZVCXI_XCUR_TT_MURGR_XML
    returning
      value(RT_MURGR) type ZVCXI_XCUR_TT_MURGR
    raising
      /VCXI/CX_CKX .
protected section.

  methods COMPLETE_RANGE
    changing
      !CI_RANGE type TABLE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SMDCNTRL_CHANGED
    for event CHANGED of ZCL_VCXI_XCUR_SMDCNTRL .

  methods DESERIALIZE_INFO
    redefinition .
  methods SERIALIZE_INFO
    redefinition .
private section.

  data T_MURGR type ZVCXI_XCUR_TT_MURGR .
  data T_MURGR_XML type ZVCXI_XCUR_TT_MURGR_XML .
endclass. "ZCL_VCXI_XCUR_DCO_MURDE definition
class ZCL_VCXI_XCUR_DCO_MURDE implementation.
  method COMPLETE_RANGE.

    field-symbols: <S_RANGE>  type ANY,
                   <F_SIGN>   type ANY,
                   <F_OPTION> type ANY,
                   <F_HIGH>   type ANY.


    loop at CI_RANGE assigning <S_RANGE>.
***   Fill Sign if needed
      assign component 'SIGN' of structure <S_RANGE> to <F_SIGN>.
      if <F_SIGN> is initial.
        <F_SIGN> = 'I'.
      endif.

***   Fill Option if needed
      assign component 'OPTION' of structure <S_RANGE> to <F_OPTION>.
      if <F_OPTION> is initial.
        assign component 'HIGH' of structure <S_RANGE> to <F_HIGH>.
        if <F_HIGH> is initial.
          <F_OPTION> = 'EQ'.
        else.
          <F_OPTION> = 'BT'.
        endif.
      endif.

    endloop.

  endmethod.
  method DESERIALIZE_INFO.

    data: LF_XML_SMDCNTRL type STRING.


    check IF_XMLDC is not initial.

***--------------------------------------------------------------------------------------
*** Open XML
    call transformation ID
         source xml IF_XMLDC
         result T_MURGR_XML    = ME->T_MURGR_XML
                F_XML_SMDCNTRL = LF_XML_SMDCNTRL.

***--------------------------------------------------------------------------------------
*** Deserialize SmartMD Control Settings
    ME->R_SMDCNTRL = ZCL_VCXI_XCUR_SMDCNTRL=>DESERIALIZE( IF_XML = LF_XML_SMDCNTRL ).
    if ME->R_SMDCNTRL is bound.
      set handler ME->HANDLE_SMDCNTRL_CHANGED for ME->R_SMDCNTRL.
    endif.

  endmethod.
  method GET_MURGR.

*** Direct return of XML if only XML is requested
    if ET_MURGR_XML is     requested and
       RT_MURGR     is not requested and
       ME->T_MURGR_XML is not initial.
      ET_MURGR_XML = ME->T_MURGR_XML.
      exit.
    endif.


*** Delayed convertion of XML to Update Group
    if ME->T_MURGR_XML is not initial.
      ME->T_MURGR = ZCL_VCXI_XCUR_MURDE=>CONV_XML_TO_MURGR( IT_MURGR_XML = ME->T_MURGR_XML ).
      clear ME->T_MURGR_XML.
    endif.

*** Return Update Group
    RT_MURGR = ME->T_MURGR.

    if ET_MURGR_XML is requested.
      ET_MURGR_XML = ZCL_VCXI_XCUR_MURDE=>CONV_MURGR_TO_XML( IT_MURGR = RT_MURGR ).
    endif.

  endmethod.
  method HANDLE_SMDCNTRL_CHANGED.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SERIALIZE_INFO.

    data: LF_XML_SMDCNTRL type STRING.
    data: LT_MURGR_XML type ZVCXI_XCUR_TT_MURGR_XML.


***--------------------------------------------------------------------------------------
*** Prepare Update Groups for XML (No Memory free)
    ME->GET_MURGR( importing ET_MURGR_XML = LT_MURGR_XML ).

*** Serialize SmartMD Control Settings
    if ME->R_SMDCNTRL is bound.
      LF_XML_SMDCNTRL = ME->R_SMDCNTRL->SERIALIZE( ).
    endif.

***--------------------------------------------------------------------------------------
*** Create XML
    call transformation ID
         source T_MURGR_XML    = LT_MURGR_XML
                F_XML_SMDCNTRL = LF_XML_SMDCNTRL
         result xml RF_XMLDC.

  endmethod.
  method SET_MURGR.

    data: LT_MURGR  type ZVCXI_XCUR_TT_MURGR.
    field-symbols: <S_MURGR>      type ZVCXI_XCUR_S_MURGR,
                   <S_MUREL>      type ZVCXI_XCUR_S_MUREL,
                   <S_MURUP>      type ZVCXI_XCUR_S_MURUP,
                   <S_MUMAP>      type ZVCXI_XCUR_S_MUMAP,
                   <I_RANGE_FROM> type TABLE.


    LT_MURGR = IT_MURGR.

***------------------------------------------------------------------------------------------------
*** Enrich Update Group
    loop at LT_MURGR assigning <S_MURGR>.
      loop at <S_MURGR>-T_MUREL assigning <S_MUREL>.
        loop at <S_MUREL>-T_MURUP assigning <S_MURUP>.
          loop at <S_MURUP>-T_MUMAP assigning <S_MUMAP>.

***         Dereferencing of Mapping
            assign <S_MUMAP>-R_RANGE_FROM->* to <I_RANGE_FROM>.

***         Complet Range (Fill Sign and Option)
            ME->COMPLETE_RANGE( changing CI_RANGE = <I_RANGE_FROM> ).

          endloop.
        endloop.
      endloop.
    endloop.

***------------------------------------------------------------------------------------------------
    check ME->GET_MURGR( ) ne LT_MURGR.
    ME->T_MURGR = LT_MURGR.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SET_SMDCNTRL.

    free ME->R_SMDCNTRL.
    check IR_SMDCNTRL is bound.

*** Fill new Instance based on provided Instance
    ME->R_SMDCNTRL = ZCL_VCXI_XCUR_SMDCNTRL=>DESERIALIZE( IF_XML = IR_SMDCNTRL->SERIALIZE( ) ).

*** Register Change Event Handler
    set handler HANDLE_SMDCNTRL_CHANGED for ME->R_SMDCNTRL.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
