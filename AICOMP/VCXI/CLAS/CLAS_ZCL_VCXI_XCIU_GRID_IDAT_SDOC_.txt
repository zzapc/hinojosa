
class ZCL_VCXI_XCIU_GRID_IDAT_SDOC definition
  public
  create public .

public section.

  type-pools ABAP .
  data F_REFRESH_REQ type ABAP_BOOL .

  methods GET_SELECTED_IDAT_SDOC
    returning
      value(RT_IDAT_SDOC) type /VCXI/CKX_TT_OBJECT
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIC_IDAT_SDOC type ref to ZCL_VCXI_XCIU_UIC_IDAT_SDOC
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
protected section.

  data R_GRID type ref to CL_GUI_ALV_GRID .
  data R_UIC_IDAT_SDOC type ref to ZCL_VCXI_XCIU_UIC_IDAT_SDOC .
  data T_IDAT_SDOC_GRID type ZVCXI_XCIU_TT_IDAT_SDOC_GRID .

  methods HANDLE_DOUBLE_CLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW
      !E_COLUMN
      !ES_ROW_NO .
  methods INIT_IDAT_SDOC_GRID
    raising
      /VCXI/CX_CKX .
  methods GET_FIELDCAT
    returning
      value(RT_FCAT) type LVC_T_FCAT
    raising
      /VCXI/CX_CKX .
  methods GET_SELECTED_ROWS
    exporting
      !ET_ROW type LVC_T_ROW
      !ES_LAST_ROW type LVC_S_ROW
    raising
      /VCXI/CX_CKX .
  methods INIT_GRID
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCIU_GRID_IDAT_SDOC definition
class ZCL_VCXI_XCIU_GRID_IDAT_SDOC implementation.
method CONSTRUCTOR.

  move IR_UIC_IDAT_SDOC   to ME->R_UIC_IDAT_SDOC.

*** Request Refresh
  move ABAP_TRUE to ME->F_REFRESH_REQ.

*** Initialize Grid
  ME->INIT_GRID( ).

endmethod.
method DO_FREE.

*** Free Grid
  if ME->R_GRID is bound.
    ME->R_GRID->FREE( exceptions
                        CNTL_ERROR        = 1
                        CNTL_SYSTEM_ERROR = 2
                        others            = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.
    clear ME->R_GRID.
  endif.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>   type LVC_S_FCAT.

  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      I_STRUCTURE_NAME       = 'ZVCXI_XCIU_S_IDAT_SDOC_GRID'
    changing
      CT_FIELDCAT            = RT_FCAT
    exceptions
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      others                 = 3.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'NIDAT'.
        move ABAP_TRUE to <S_FCAT>-KEY.
      when 'CREAT'.
        move ABAP_TRUE to <S_FCAT>-TECH.
      when 'CHAAT'.
        move ABAP_TRUE to <S_FCAT>-TECH.
    endcase.
  endloop.

endmethod.
method GET_SELECTED_IDAT_SDOC.

  data:  LF_GUID            type        /VCXI/CKX_GUID.
  data:  LS_ROW             type        LVC_S_ROW,
         LS_IDAT_SDOC_GRID  type        ZVCXI_XCIU_S_IDAT_SDOC_GRID.
  data:  LT_ROW             type        LVC_T_ROW.
  data:  LR_IDAT_SDOC       type ref to ZCL_VCXI_XCI_IDAT_SDOC.

*** Get selecte Rows
  ME->GET_SELECTED_ROWS( importing ET_ROW = LT_ROW ).

*** Process selected Lines
  loop at LT_ROW into LS_ROW.
    read table ME->T_IDAT_SDOC_GRID into LS_IDAT_SDOC_GRID index LS_ROW-INDEX.
    check SY-SUBRC eq 0.

*** Get Instance
    move LS_IDAT_SDOC_GRID-NIDAT to LF_GUID.
    LR_IDAT_SDOC ?= ZCL_VCXI_XCI_IDAT_SDOC=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).

    append LR_IDAT_SDOC to RT_IDAT_SDOC.
  endloop.

endmethod.
method GET_SELECTED_ROWS.

  data:          LS_CELL              type        LVC_S_CELL,
                 LS_ROW               type        LVC_S_ROW.
  data:          LT_CELL              type        LVC_T_CELL,
                 LT_ROW               type        LVC_T_ROW.

*** Get Cursor in Grid
  ME->R_GRID->GET_SELECTED_CELLS( importing ET_CELL = LT_CELL ).
  if lines( LT_CELL ) gt 0.

    loop at LT_CELL into LS_CELL.
      append LS_CELL-ROW_ID to ET_ROW.
***   Get last Index
      if ES_LAST_ROW-INDEX lt LS_CELL-ROW_ID-INDEX.
        move LS_CELL-ROW_ID to ES_LAST_ROW.
      endif.
    endloop.

  endif.

*** Get Selected Rows
  ME->R_GRID->GET_SELECTED_ROWS( importing ET_INDEX_ROWS = LT_ROW ).
  if lines( LT_ROW ) gt 0.

    append lines of LT_ROW to ET_ROW.

    loop at LT_ROW into LS_ROW.
***   Get last Index
      if ES_LAST_ROW-INDEX lt LS_ROW-INDEX.
        move LS_ROW to ES_LAST_ROW.
      endif.
    endloop.

  endif.

endmethod.
method HANDLE_DOUBLE_CLICK.

  data:  LF_GUID            type        /VCXI/CKX_GUID.
  data:  LS_IDAT_SDOC_GRID  type        ZVCXI_XCIU_S_IDAT_SDOC_GRID.
  data:  LR_IDAT_SDOC       type ref to ZCL_VCXI_XCI_IDAT_SDOC,
         LR_CX_CKX          type ref to /VCXI/CX_CKX.

  try.
      read table ME->T_IDAT_SDOC_GRID into LS_IDAT_SDOC_GRID index E_ROW-INDEX.
      check SY-SUBRC eq 0.

***   Get Instance
      move LS_IDAT_SDOC_GRID-NIDAT to LF_GUID.
      LR_IDAT_SDOC ?= ZCL_VCXI_XCI_IDAT_SDOC=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).

***   Open UI
      ME->R_UIC_IDAT_SDOC->OPEN_IDAT_SDOC( IR_IDAT_SDOC = LR_IDAT_SDOC ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method INIT_GRID.

  check ME->R_GRID is not bound.

  create object ME->R_GRID
    exporting
      I_PARENT          = CL_GUI_CONTAINER=>DEFAULT_SCREEN
      I_APPL_EVENTS     = ABAP_TRUE
    exceptions
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      others            = 5.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

*** Set Event Handler
  set handler ME->HANDLE_DOUBLE_CLICK for ME->R_GRID.

endmethod.
method INIT_IDAT_SDOC_GRID.

  data:          LS_TD200            type          ZVCXI_XCI_TD200,
                 LS_LOG              type          /VCXI/CKX_S_LOG,
                 LS_LOG_EXT          type          /VCXI/CKX_S_LOG_EXT.
  data:          LT_TD200            type table of ZVCXI_XCI_TD200.
  field-symbols: <S_IDAT_SDOC_GRID>  type          ZVCXI_XCIU_S_IDAT_SDOC_GRID.

  free: ME->T_IDAT_SDOC_GRID.

*** Select all Entries
  select * into table LT_TD200
           from ZVCXI_XCI_TD200
           where NIDAT in R_UIC_IDAT_SDOC->I_NIDAT
             and AUART in R_UIC_IDAT_SDOC->I_AUART
             and VKORG in R_UIC_IDAT_SDOC->I_VKORG
             and VTWEG in R_UIC_IDAT_SDOC->I_VTWEG
             and SPART in R_UIC_IDAT_SDOC->I_SPART
             and BSTKD in R_UIC_IDAT_SDOC->I_BSTKD
             and BSTDK in R_UIC_IDAT_SDOC->I_BSTDK
             and CREBY in R_UIC_IDAT_SDOC->I_CREBY
             and CREAT in R_UIC_IDAT_SDOC->I_CREAT
             and CHABY in R_UIC_IDAT_SDOC->I_CHABY
             and CHAAT in R_UIC_IDAT_SDOC->I_CHAAT.

  loop at LT_TD200 into LS_TD200.
    append initial line to ME->T_IDAT_SDOC_GRID assigning <S_IDAT_SDOC_GRID>.
    move-corresponding LS_TD200 to <S_IDAT_SDOC_GRID>.

*** Get Extended Log
    move-corresponding LS_TD200 to LS_LOG.
    LS_LOG_EXT = /VCXI/CL_CKX_SERVICE=>GET_LOG_EXT( IS_LOG = LS_LOG ).
    move-corresponding LS_LOG_EXT to <S_IDAT_SDOC_GRID>.
  endloop.

  sort ME->T_IDAT_SDOC_GRID by NIDAT.

endmethod.
method REFRESH_GRID.

  data:          LS_LAYOUT            type        LVC_S_LAYO.
  data:          LT_TOOLBAR_EXCLUDING type        UI_FUNCTIONS,
                 LT_FCAT              type        LVC_T_FCAT.

  check ME->F_REFRESH_REQ eq ABAP_TRUE.
  move ABAP_FALSE to ME->F_REFRESH_REQ.

***--------------------------------------------------------------------------------------
*** Get Grid Data
  ME->INIT_IDAT_SDOC_GRID( ).

***--------------------------------------------------------------------------------------
*** Field Catalog
  move ME->GET_FIELDCAT( )                to LT_FCAT.

*** Toolbar Exclusion
  append CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL  to LT_TOOLBAR_EXCLUDING.

*** Layout
  move 'X' to LS_LAYOUT-NO_TOOLBAR.
  move 'X' to LS_LAYOUT-CWIDTH_OPT.
  move 'A' to LS_LAYOUT-SEL_MODE.

***--------------------------------------------------------------------------------------
*** Relfreh ALV Grid
  ME->R_GRID->SET_TABLE_FOR_FIRST_DISPLAY(
    exporting
      IT_TOOLBAR_EXCLUDING          = LT_TOOLBAR_EXCLUDING
      IS_LAYOUT                     = LS_LAYOUT
    changing
      IT_FIELDCATALOG               = LT_FCAT
      IT_OUTTAB                     = ME->T_IDAT_SDOC_GRID
    exceptions
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3
      others                        = 4 ).
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
