
class ZCL_VCXI_P3SS_POPUP_ASPROP definition
  public
  create protected .

public section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.
  data S_POPUP_ASPROP_VIS type ZVCXI_P3SS_S_POPUP_ASPROP_VIS read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IR_BL_ASBPROP type ref to ZCL_VCXI_P3SS_BL_ASBPROP
      !IR_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP
      !IF_WERKS type WERKS_D
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_JOINT_GRID,
      JOITY type ZVCXI_P0S_JOITY,
      DESCR type /VCXI/CKX_DESCR,
    end of YS_JOINT_GRID .
  types:
    YT_JOINT_GRID type standard table of YS_JOINT_GRID .

  data R_BL_ASBPROP type ref to ZCL_VCXI_P3SS_BL_ASBPROP .
  data R_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP .
  data R_SALV_JOINT type ref to CL_SALV_TABLE .
  data R_SALV_APINFO type ref to CL_SALV_TABLE .
  data T_JOINT_GRID type YT_JOINT_GRID .
  data T_APINFO type ZVCXI_P3SS_TT_APINFO .

  methods CONSTRUCTOR
    importing
      !IR_BL_ASFPROP type ref to ZCL_VCXI_P3SS_BL_ASFPROP
      !IR_BL_ASBPROP type ref to ZCL_VCXI_P3SS_BL_ASBPROP
      !IF_WERKS type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods INIT_DATA_JOINT
    raising
      /VCXI/CX_CKX .
  methods INIT_SALV_JOINT
    raising
      /VCXI/CX_CKX .
  methods INIT_SALV_APINFO
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P3SS_POPUP_ASPROP definition
class ZCL_VCXI_P3SS_POPUP_ASPROP implementation.
  method CONSTRUCTOR.

***--------------------------------------------------------------------------------------
*** Keep Input
    ME->R_BL_ASFPROP = IR_BL_ASFPROP.
    ME->R_BL_ASBPROP = IR_BL_ASBPROP.

***--------------------------------------------------------------------------------------
*** Handling Dimension
    ME->S_POPUP_ASPROP_VIS-S_HNDDIM = IR_BL_ASFPROP->S_HNDDIM.

*** Additional Weight
    ME->S_POPUP_ASPROP_VIS-S_ADDWT  = IR_BL_ASFPROP->GET_ADDWT( ).

*** Product Hierarchy
    ME->S_POPUP_ASPROP_VIS-PRODH       = IR_BL_ASFPROP->F_PRODH.
    ME->S_POPUP_ASPROP_VIS-PRODH_DESCR = ZCL_VCXI_XCS_SERVICE=>GET_PRODH_DESCR( IF_PRODH = ME->S_POPUP_ASPROP_VIS-PRODH ).

***--------------------------------------------------------------------------------------
*** Initialize Data
    ME->T_APINFO = ME->R_BL_ASFPROP->T_APINFO.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Set PF-Status
    ME->SET_PF_STATUS( ).

***----------------------------------------------------------------------------
*** Initialize Data and show as Simple ALV for Joint
    ME->INIT_DATA_JOINT( ).
    ME->INIT_SALV_JOINT( ).

*** Show as Simple ALV for Assembly Part Information
    ME->INIT_SALV_APINFO( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).

    endcase.

  endmethod.
  method HANDLE_UC_CANCEL.

*** Leave Popup
    leave to screen 0.

  endmethod.
  method INIT_DATA_JOINT.

    data: LF_JOITY type ZVCXI_P0S_JOITY.

    free: ME->T_JOINT_GRID.
    check ME->R_BL_ASFPROP is bound.

    loop at ME->R_BL_ASFPROP->T_JOITY into LF_JOITY.
      append value #( JOITY = LF_JOITY
                      DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_DESCR( IF_JOITY = LF_JOITY )
                    ) to ME->T_JOINT_GRID.
    endloop.

  endmethod.
  method INIT_SALV_APINFO.

    data: LR_CUSTOM_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER.

    try.
***----------------------------------------------------------------------------
        if ME->R_SALV_APINFO is not bound.
***       Create Container
          create object LR_CUSTOM_CONTAINER
            exporting
              CONTAINER_NAME = '0100CC_APINFO'
              LIFETIME       = CL_GUI_COLUMN_TREE=>LIFETIME_DYNPRO
            exceptions
              others         = 9.
          if SY-SUBRC ne 0.
            /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
          endif.

***       Create Simple ALV
          CL_SALV_TABLE=>FACTORY( exporting R_CONTAINER  = LR_CUSTOM_CONTAINER
                                  importing R_SALV_TABLE = ME->R_SALV_APINFO
                                  changing  T_TABLE      = ME->T_APINFO ).

          ME->R_SALV_APINFO->GET_COLUMNS( )->SET_OPTIMIZE( ABAP_TRUE ).
          ME->R_SALV_APINFO->GET_FUNCTIONS( )->SET_ALL( ABAP_FALSE ).

***       Display Simple ALV
          ME->R_SALV_APINFO->DISPLAY( ).

***----------------------------------------------------------------------------
        else.
***       Refresh Simple ALV
          ME->R_SALV_APINFO->REFRESH( ).
        endif.

      catch CX_SALV_ERROR into data(LR_CX_SALV_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SALV_ERROR ).
    endtry.

  endmethod.
  method INIT_SALV_JOINT.

    data: LR_CUSTOM_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER.

    try.
***----------------------------------------------------------------------------
        if ME->R_SALV_JOINT is not bound.
***       Create Container
          create object LR_CUSTOM_CONTAINER
            exporting
              CONTAINER_NAME = '0100CC_JOINT'
              LIFETIME       = CL_GUI_COLUMN_TREE=>LIFETIME_DYNPRO
            exceptions
              others         = 9.
          if SY-SUBRC ne 0.
            /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
          endif.

***       Create Simple ALV
          CL_SALV_TABLE=>FACTORY( exporting R_CONTAINER  = LR_CUSTOM_CONTAINER
                                  importing R_SALV_TABLE = ME->R_SALV_JOINT
                                  changing  T_TABLE      = ME->T_JOINT_GRID ).

          ME->R_SALV_JOINT->GET_COLUMNS( )->SET_OPTIMIZE( ABAP_TRUE ).
          ME->R_SALV_JOINT->GET_FUNCTIONS( )->SET_ALL( ABAP_FALSE ).

***       Display Simple ALV
          ME->R_SALV_JOINT->DISPLAY( ).

***----------------------------------------------------------------------------
        else.
***       Refresh Simple ALV
          ME->R_SALV_JOINT->REFRESH( ).
        endif.

      catch CX_SALV_ERROR into data(LR_CX_SALV_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SALV_ERROR ).
    endtry.

  endmethod.
  method SET_PF_STATUS.

    set pf-status '0100' of program 'SAPLZVCXI_P1SS_POPUP_CRPROP'.

  endmethod.
  method START.

    data: LR_POPUP_ASPROP type ref to ZCL_VCXI_P3SS_POPUP_ASPROP.

*** Create Instance
    create object LR_POPUP_ASPROP
      exporting
        IR_BL_ASBPROP = IR_BL_ASBPROP
        IR_BL_ASFPROP = IR_BL_ASFPROP
        IF_WERKS      = IF_WERKS.

*** Call Popup
    call function 'ZVCXI_P3SS_POPUP_ASPROP_START'
      exporting
        IR_POPUP_ASPROP = LR_POPUP_ASPROP.

  endmethod.
