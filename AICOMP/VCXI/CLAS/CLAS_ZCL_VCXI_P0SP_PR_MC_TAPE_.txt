
class ZCL_VCXI_P0SP_PR_MC_TAPE definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  create public .

public section.

  constants C_PARID_TTAPE type /VCXI/VKS_PARID value 'ZVCXI_P0_TTAPE'. "#EC NOTEXT
  constants C_PARID_TAPLE type /VCXI/VKS_PARID value 'ZVCXI_P0_TAPLE'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_TAPLE
    returning
      value(RS_TAPLE) type ZVCXI_P0SP_S_TAPLE
    raising
      /VCXI/CX_CKX .
  methods GET_TTAPE
    returning
      value(RF_TTAPE) type ZVCXI_P0S_TTAPE
    raising
      /VCXI/CX_CKX .
  methods SET_TAPLE
    importing
      !IS_TAPLE type ZVCXI_P0SP_S_TAPLE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_TTAPE
    importing
      !IF_TTAPE type ZVCXI_P0S_TTAPE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_TTAPE_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .

  methods CALC_CONSU
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_P0SP_PR_MC_TAPE definition
class ZCL_VCXI_P0SP_PR_MC_TAPE implementation.
method CALC_CONSU.

  data:  LS_TAPLE         type ZVCXI_P0SP_S_TAPLE,
         LS_CONSU         type ZVCXI_XCSP_S_CONSU.

  check IS_MQTYI is not initial.

*** Get Tape Length
  move ME->GET_TAPLE( ) to LS_TAPLE.

*** Calculate Length
  LS_CONSU-CONSU     = IS_MQTYI-MQTYI * LS_TAPLE-TAPLE.
  LS_CONSU-CONSU_UOM = LS_TAPLE-TAPLE_UOM.

*** Set Consumption
  ME->SET_CONSU( IS_CONSU = LS_CONSU ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

  F_PARID_CONSU = C_PARID_CONSU_L.
  F_PARID_PRICP = C_PARID_PRICP_L.

endmethod.
method GET_STATUS.

  data: LS_TAPLE type ZVCXI_P0SP_S_TAPLE.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Starch Details
  LS_TAPLE = ME->GET_TAPLE( ).

*** Check Tape Length
  if LS_TAPLE-TAPLE is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check Tape Type
  if ME->GET_TTAPE( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_TAPLE type ZVCXI_P0SP_S_TAPLE.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Tape Details
  LS_TAPLE = ME->GET_TAPLE( ).

*** Check Tape Length
  if LS_TAPLE-TAPLE is not initial.
*** Tape Length is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '191' ).
  else.
*** Tape Length is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '192' ).
  endif.

*** Check Tape Type
  if ME->GET_TTAPE( ) is not initial.
*** Tape Type is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '193' ).
  else.
*** Tape Type is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '194' ).
  endif.


endmethod.
method GET_TAPLE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPLE ).
  move LS_PARAM-ATFLV to RS_TAPLE-TAPLE.
  move LS_PARAM-UNIT  to RS_TAPLE-TAPLE_UOM.

endmethod.
method GET_TTAPE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TTAPE ).
  move LS_PARAM-ATWRT to RF_TTAPE.

endmethod.
method GET_TTAPE_DESCR.

  data: LF_TTAPE type ZVCXI_P0S_TTAPE.

  LF_TTAPE = ME->GET_TTAPE( ).

*** Get Tape Type Description from Product Style Customizing
  RF_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_TTAPE_DESCR( IF_TTAPE = LF_TTAPE ).

endmethod.
method SET_TAPLE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPLE ).

  move IS_TAPLE-TAPLE                      to LS_PARAM-ATFLV.
  move IS_TAPLE-TAPLE_UOM                  to LS_PARAM-UNIT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
  endif.

endmethod.
method SET_TTAPE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TTAPE ).

  move IF_TTAPE                            to LS_PARAM-ATWRT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
