
class ZCL_VCXI_P0SP_EA_MACHINE_PTP definition
  public
  inheriting from ZCL_VCXI_XCSP_EA_MACHINE
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_MFI_PCDIM
    returning
      value(RT_PCDIM) type ZVCXI_P0SP_TT_PCDIM
    raising
      /VCXI/CX_CKX .
  methods GET_MFO_PCDIM
    returning
      value(RT_PCDIM) type ZVCXI_P0SP_TT_PCDIM
    raising
      /VCXI/CX_CKX .

  methods /VCXI/IF_VKCR_EXPL_RTE~FILTER_CPBRG
    redefinition .
protected section.

  data R_PR_MACHINE_PTP type ref to ZCL_VCXI_P0SP_PR_MACHINE_PTP .

  methods GET_QUANTITY
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SP_EA_MACHINE_PTP definition
class ZCL_VCXI_P0SP_EA_MACHINE_PTP implementation.
method /VCXI/IF_VKCR_EXPL_RTE~FILTER_CPBRG.

  data:  LF_IMFXC    type        ZVCXI_XCSP_IMFXC,
         LF_ID       type        /VCXI/CKX_ID,
         LF_CNT      type        STRING.
  data:  LT_MFO      type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_MF    type ref to ZCL_VCXI_XCSP_PR_MF,
         LR_CPBRG    type ref to /VCXI/CL_VKCC_CPBRG,
         LR_OBJECT   type ref to /VCXI/IF_CKX_OBJECT.

  SUPER->/VCXI/IF_VKCR_EXPL_RTE~FILTER_CPBRG( changing CT_CPBRG = CT_CPBRG ).

  check ME->R_PR_MACHINE->ZIF_VCXI_XCSP_OPERATION~R_PR_MFMGR is bound.

***------------------------------------------------------------------------------------------------
*** Get Material Flow Out
  move ME->R_PR_MACHINE->ZIF_VCXI_XCSP_OPERATION~R_PR_MFMGR->ZIF_VCXI_XCSP_MFMGR~GET_MFO( ) to LT_MFO.

  if lines( LT_MFO ) eq 1.
    try.
        read table LT_MFO into LR_GATE index 1.
        check SY-SUBRC eq 0.
        move LR_GATE->R_CLSPR ?to LR_PR_MF.

***     Get MF x-connection and split it
        LF_IMFXC = LR_PR_MF->GET_IMFXC( ).
        check LF_IMFXC is not initial.
        split LF_IMFXC at '@' into LF_ID LF_CNT.

***     Check X-Connect used to filter Operation Groups
        check LF_ID cp 'OP_*'.

        loop at CT_CPBRG into LR_OBJECT.
          move LR_OBJECT ?to LR_CPBRG.

***       Filter
          if LR_CPBRG->/VCXI/IF_CKX_OBJECT~GET_ID( ) ne LF_ID.
            delete CT_CPBRG.
          endif.
        endloop.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MF.
    endtry.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_MACHINE_PTP.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

endmethod.
method GET_MFI_PCDIM.

  check ME->R_PR_MACHINE_PTP is bound.
  move ME->R_PR_MACHINE_PTP->GET_MFI_PCDIM( ) to RT_PCDIM.

endmethod.
method GET_MFO_PCDIM.

  check ME->R_PR_MACHINE_PTP is bound.
  move ME->R_PR_MACHINE_PTP->GET_MFO_PCDIM( ) to RT_PCDIM.

endmethod.
method GET_QUANTITY.

  data: LS_MQTYI      type ZVCXI_XCSP_S_MQTYI,
        LS_QTY        type ZVCXI_XCSP_S_QTY,
        LS_MQTYI_AS_O type ZVCXI_XCSP_S_MQTYO,
        LS_PCDIM      type ZVCXI_P0SP_S_PCDIM.
  data:  LT_PCDIM         type ZVCXI_P0SP_TT_PCDIM.

  check ME->R_PR_MACHINE_PTP is bound and
        ME->R_PR_MACHINE_PTP->R_RTE_CMACH is bound.

  if ME->R_PR_MACHINE_PTP->R_RTE_CMACH->R_MTYPE->F_RCALC eq /VCXI/CL_VSMC_MTYPE=>C_RCALC_I.
***--------------------------------------------------------------------------------------
*** Use Operation Quantity In
    move ME->R_PR_MACHINE_PTP->GET_MQTYI( ) to LS_MQTYI.

    move LS_MQTYI-MQTYI                     to EF_BMSCH.
    move ABAP_TRUE                          to EF_BMSCH_X.
    move LS_MQTYI-MQTYI_UOM                 to EF_MEINH.
    move ABAP_TRUE                          to EF_MEINH_X.

*** Get Flow In
    LT_PCDIM = ME->R_PR_MACHINE_PTP->GET_MFI_PCDIM( ).

  else.
***--------------------------------------------------------------------------------------
*** Convert Operation Quantity In to Out
    move ME->R_PR_MACHINE_PTP->GET_MQTYI( )   to LS_MQTYI.
    move LS_MQTYI-MQTYI                       to LS_QTY-QTY.
    move LS_MQTYI-MQTYI_UOM                   to LS_QTY-QTY_UOM .
    LS_MQTYI_AS_O = ME->R_PR_MACHINE_PTP->ZIF_VCXI_XCSP_OPERATION~CONV_TO_MQTYO( IS_QTY = LS_QTY ).

    move LS_MQTYI_AS_O-MQTYO                  to EF_BMSCH.
    move ABAP_TRUE                            to EF_BMSCH_X.
    move LS_MQTYI_AS_O-MQTYO_UOM              to EF_MEINH.
    move ABAP_TRUE                            to EF_MEINH_X.

*** Get Flow Out
    LT_PCDIM = ME->R_PR_MACHINE_PTP->GET_MFO_PCDIM( ).
  endif.

*** Always up Round to next full
  call function 'ROUND'
    exporting
      INPUT  = EF_BMSCH
      SIGN   = '+'
    importing
      OUTPUT = EF_BMSCH.

***--------------------------------------------------------------------------------------
*** Get Ups
  read table LT_PCDIM into LS_PCDIM index 1.
  move LS_PCDIM-PCUPS   to EF_UMREZ.
  move ABAP_TRUE        to EF_UMREZ_X.
  move ME->GET_MFRAT( ) to EF_UMREN.
  move ABAP_TRUE        to EF_UMREN_X.

endmethod.
