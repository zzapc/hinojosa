
class ZCL_VCXI_P2SR_BL_PSTEP_RCUT definition
  public
  inheriting from ZCL_VCXI_P2SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_CONV_LTP .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .
  interfaces ZIF_VCXI_PXSR_PCDIR .

  constants C_IPSTP_RCUT type /VCXI/VSMC_IPSTP value 'P2_PS_RCUT' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_RCUT
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
protected section.

  data S_MFMI_REEL type ZVCXI_PFSR_S_MFMI_REEL .
  data T_MFCSP type /VCXI/CKX_TT_STRING .
  data T_PCDIM_OUT type ZVCXI_P0SP_TT_PCDIM .

  methods INIT_BY_MS_REEL
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_RCUT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFMI_REEL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_PCDIM_OUT
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SR_BL_PSTEP_RCUT definition
class ZCL_VCXI_P2SR_BL_PSTEP_RCUT implementation.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.

    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Sheet Length (Outbound)
        when 'P0_LT_DO_SHTLEN'.
          LF_LDVAL = value #( ME->T_PCDIM_OUT[ 1 ]-PCLEN optional ).
          LF_LDUOM = value #( ME->T_PCDIM_OUT[ 1 ]-PCLEN_UOM optional ).

***     Sheet Width (Outbound)
        when 'P0_LT_DO_SHTWID'.
          LF_LDVAL = value #( ME->T_PCDIM_OUT[ 1 ]-PCWID optional ).
          LF_LDUOM = value #( ME->T_PCDIM_OUT[ 1 ]-PCWID_UOM optional ).

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MFMI_REEL.

    data: LS_LEOKY type        /VCXI/VKSR_S_LEOKY,
          LS_PARAM type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE           type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFMI_REEL type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFMI_REEL'
                                        IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MFMI_REEL
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_MFMGR.
    append LR_SPVRE_MFMI_REEL to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MFMI_REEL->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Material Number
    clear LS_LEOKY.
    move ME->S_MFMI_REEL-MATNR                        to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_LEOKY-SETBY.
    LR_SPVRE_MFMI_REEL->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***------------------------------------------------------------------------------------------------
*** Set Basis Weight
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_BAWGT    to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-BAWGT                        to LS_PARAM-ATFLV.
    move ME->S_MFMI_REEL-BAWGT_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Basis Weight Per
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_BAWGP_A  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-BAWGP                        to LS_PARAM-ATFLV.
    move ME->S_MFMI_REEL-BAWGP_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Factor
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_MFICF  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-MFICF                      to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCTYP         to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-PCTYP                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

**** Set PC Length
*    clear LS_PARAM.
*    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCLEN         to LS_PARAM-PARID.
*    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
*    move ME->S_MFMI_REEL-PCLEN                             to LS_PARAM-ATFLV.
*    move ME->S_MFMI_REEL-PCLEN_UOM                         to LS_PARAM-UNIT.
*    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
*    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).
*
*** Set PC Width
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCWID         to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-PCWID                             to LS_PARAM-ATFLV.
    move ME->S_MFMI_REEL-PCWID_UOM                         to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

**** Set PC Height
*    clear LS_PARAM.
*    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCHEI         to LS_PARAM-PARID.
*    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
*    move ME->S_MFMI_REEL-PCHEI                             to LS_PARAM-ATFLV.
*    move ME->S_MFMI_REEL-PCHEI_UOM                         to LS_PARAM-UNIT.
*    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
*    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).
*
**** Set PC Ups
*    clear LS_PARAM.
*    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCUPS         to LS_PARAM-PARID.
*    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
*    move ME->S_MFMI_REEL-PCUPS                             to LS_PARAM-ATFLV.
*    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
*    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set PC Direction
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PCDIR         to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-PCDIR                             to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Purchase Flag
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_PURCH   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-PURCH                       to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Vendor
    clear LS_PARAM.
    move ZCL_VCXI_PFSP_PR_MFMI_REEL=>C_PARID_LIFNR   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
    move ME->S_MFMI_REEL-LIFNR                       to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MFMI_REEL->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Add Price Scale Manager
    IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MFMI_REEL
                                            IT_PSCALE       = ME->S_MFMI_REEL-T_PSCALE
                                  changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_RCUT type ref to ZCL_VCXI_P2SR_BL_PSTEP_RCUT.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_RCUT.


***------------------------------------------------------------------------------------------------
*** PC Dimensions
    if ME->S_MFMI_REEL eq LR_BL_PSTEP_RCUT->S_MFMI_REEL and
       ME->T_PCDIM_OUT eq LR_BL_PSTEP_RCUT->T_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Material Flow relevant Cost Split IDs
    if ME->T_MFCSP eq LR_BL_PSTEP_RCUT->T_MFCSP.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_RCUT type ref to ZCL_VCXI_P2SR_BL_PSTEP_RCUT.

*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_RCUT.

***------------------------------------------------------------------------------------------------
*** PC Dimensions
    move ME->S_MFMI_REEL   to LR_BL_PSTEP_RCUT->S_MFMI_REEL.
    move ME->T_PCDIM_OUT   to LR_BL_PSTEP_RCUT->T_PCDIM_OUT.

*** Material Flow relevant Cost Split IDs
    move ME->T_MFCSP       to LR_BL_PSTEP_RCUT->T_MFCSP.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'P0_AT_RCUT'.
        ME->FILL_SPVRE_ADDON_RCUT( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_RCUT.

***------------------------------------------------------------------------------------------------
*** Add PC Out
    ME->ADD_SPVRE_PCOUT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                   IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                   IT_PCDIM        = ME->T_PCDIM_OUT
                         changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Standard (Overrule existing)
    CF_ID_ARBPL = 'RCUT'.

  endmethod.
  method GET_PCDIM_OUT.

    data: LF_NOOUT type F.


*** Call SUPER
    RT_PCDIM = SUPER->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    check RT_PCDIM is not initial.

*** Check how many times the Sheet fits in the Reel Width
    if ME->S_MFMI_REEL-PCWID_UOM is not initial and
       RT_PCDIM[ 1 ]-PCWID       ne 0 and
       RT_PCDIM[ 1 ]-PCWID_UOM   is not initial.
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = ME->S_MFMI_REEL-PCWID
                                                          IF_CALCV_UOM_1 = ME->S_MFMI_REEL-PCWID_UOM
                                                          IF_CALCV_2     = RT_PCDIM[ 1 ]-PCWID
                                                          IF_CALCV_UOM_2 = RT_PCDIM[ 1 ]-PCWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LF_NOOUT ).
    else.
      LF_NOOUT = 0.
    endif.

*** Determine Outs
    RT_PCDIM[ 1 ]-NOOUT = RT_PCDIM[ 1 ]-NOOUT * FLOOR( LF_NOOUT ).

  endmethod.
  method GET_SPVRE_MF.

***------------------------------------------------------------------------------------------------
*** Add Reel
    ME->ADD_SPVRE_MFMI_REEL( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                             changing  CT_SPVRE       = CT_SPVRE ).
    move ABAP_TRUE to CF_MFI.

***------------------------------------------------------------------------------------------------
*** Add MFSO PC
    ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                    IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                          changing  CT_SPVRE       = CT_SPVRE ).
    move ABAP_TRUE to CF_MFO.

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_MFMI_REEL'  VALUE = ref #( ME->S_MFMI_REEL ) ) to RT_DATA.
    append value #( NAME = 'T_PCDIM_OUT'  VALUE = ref #( ME->T_PCDIM_OUT ) ) to RT_DATA.

    append value #( NAME = 'T_MFCSP'      VALUE = ref #( ME->T_MFCSP )     ) to RT_DATA.

  endmethod.
  method INIT_BY_MS_REEL.

    data: LS_BAWGT type ZVCXI_P0S_S_BAWGT,
          LS_BAWGP type ZVCXI_P0S_S_BAWGP.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_REEL type ref to ZCL_VCXI_P2SS_PR_MS_REEL.


*** Get Reel Provider
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P2SS_PR_MS_REEL.
      LR_PR_MS_REEL ?= LR_GATE->R_CLSPR.
      exit.
    endloop.

    if LR_PR_MS_REEL is bound.
***   Get Basis Weight
      LS_BAWGT = LR_PR_MS_REEL->GET_BAWGT( importing ES_BAWGP = LS_BAWGP ).

***   Define as Material Flow Material In
      ME->S_MFMI_REEL = value #( MATNR     = LR_PR_MS_REEL->GET_MATNR( )
                                 MFISP     = 100
                                 MFISP_UOM = '%'
                                 MFICF     = 1
                                 MFICP     = 1
                                 SANKA     = LR_PR_MS_REEL->GET_SANKA( )
*                                 TEXT      = LR_PR_MS_REEL->GET_TEXT( )
                                 PURCH     = LR_PR_MS_REEL->GET_PURCH( )
                                 LIFNR     = LR_PR_MS_REEL->GET_LIFNR( )
                                 T_PSCALE  = ME->GET_PSCALE( IR_GATE_PARENT = LR_GATE )
                                 PCTYP     = 'ZVCXI_PF_REEL'
                                 S_PCWID   = corresponding #( LR_PR_MS_REEL->GET_REWID( ) mapping PCWID     = REWID
                                                                                                  PCWID_UOM = REWID_UOM )
                                 PCDIR     = 'A'
                                 S_BAWGT   = LS_BAWGT
                                 S_BAWGP   = LS_BAWGP ).
    endif.

  endmethod.
  method INIT_BY_SPEC.

***--------------------------------------------------------------------------------------
*** Get Material Flow Material In - Reel
    ME->INIT_BY_MS_REEL( IT_PRVDR = IT_PRVDR ).

*** Get Outbound PC Dimension
    ME->T_PCDIM_OUT = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.

*** No PC Dimensions In
    return.

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    CT_PCDIM = ME->T_PCDIM_OUT.

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.
  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    field-symbols: <S_PCDIM_OUT>  type ZVCXI_P0SP_S_PCDIM.


    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension OUT
    loop at ME->T_PCDIM_OUT assigning <S_PCDIM_OUT>.
      <S_PCDIM_OUT> = ME->TURN_PCDIM( IS_PCDIM = <S_PCDIM_OUT>
                                      IF_PCDIR = IF_PCDIR ).
    endloop.

  endmethod.
