
class ZCL_VCXI_P0SS_PR_MS_TAPE definition
  public
  inheriting from ZCL_VCXI_XCSS_PR_MS
  create public .

public section.

  constants C_IPRVT_P0_MS_TAPE type /VCXI/VKSC_IPRVT value 'ZVCXI_P0SS_MS_TAPE'. "#EC NOTEXT
  constants C_PARID_TTAPE type /VCXI/VKS_PARID value 'ZVCXI_P0_TTAPE'. "#EC NOTEXT
  constants C_PARID_TAPOS type /VCXI/VKS_PARID value 'ZVCXI_P0_TAPOS'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_TAPOS
    returning
      value(RS_TAPOS) type ZVCXI_P0SS_S_TAPOS
    raising
      /VCXI/CX_CKX .
  methods SET_TAPOS
    importing
      !IS_TAPOS type ZVCXI_P0SS_S_TAPOS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_TTAPE
    returning
      value(RF_TTAPE) type ZVCXI_P0S_TTAPE
    raising
      /VCXI/CX_CKX .
  methods GET_TTAPE_DESCR
    returning
      value(RF_TTAPE_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods SET_TTAPE
    importing
      !IF_TTAPE type ZVCXI_P0S_TTAPE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_TAPE_DATA type /VCXI/VKSC_IEVNT value 'INIT_TAPE_DATA'. "#EC NOTEXT
  constants C_IEVNT_O_TAPE_DATA_CHANGED type /VCXI/VKSC_IEVNT value 'TAPE_DATA_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_O_TTAPE_CHANGED type /VCXI/VKSC_IEVNT value 'TTAPE_CHANGED'. "#EC NOTEXT

  methods HANDLE_INIT_TAPE_DATA
    raising
      /VCXI/CX_CKX .
  methods GET_DCONF
    returning
      value(RF_DCONF) type DATS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SS_PR_MS_TAPE definition
class ZCL_VCXI_P0SS_PR_MS_TAPE implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

  move C_PARID_PRICP_L to ME->F_PARID_PRICP.

endmethod.
method GET_DCONF.

  data: LR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA.

  LR_APPDATA = ME->R_GATE->GET_APPDATA( ).

  RF_DCONF =  LR_APPDATA->F_DCONF.

endmethod.
method GET_STATUS.

  data: LS_TAPOS type ZVCXI_P0SS_S_TAPOS.

  RF_ELMST = SUPER->GET_STATUS( ).

*** Check Tape Type
  if ME->GET_TTAPE( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check Tape Position
  LS_TAPOS = ME->GET_TAPOS( ).
  if LS_TAPOS-TAPOS is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_TAPOS type ZVCXI_P0SS_S_TAPOS.

***----------------------------------------------------------------------------
*** Super
  SUPER->GET_STATUS_MSG( IR_MESSAGE =  IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Tape Type
  if ME->GET_TTAPE( ) is not initial.
*** Tape Type is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '111' ).
  else.
*** Tape Type is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                            IF_MSGTY = 'E'
                            IF_MSGNO = '112' ).
  endif.

*** Check Tape Position
  LS_TAPOS = ME->GET_TAPOS( ).
  if LS_TAPOS-TAPOS is not initial.
*** Tape Position is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '113' ).
  else.
*** Tape Position is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SS'
                            IF_MSGTY = 'E'
                            IF_MSGNO = '114' ).
  endif.

endmethod.
method GET_TAPOS.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPOS ).
  move LS_PARAM-ATFLV to RS_TAPOS-TAPOS.
  move LS_PARAM-UNIT  to RS_TAPOS-TAPOS_UOM.

endmethod.
method GET_TTAPE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TTAPE ).
  move LS_PARAM-ATWRT to RF_TTAPE.

endmethod.
method GET_TTAPE_DESCR.

  data: LF_TTAPE type ZVCXI_P0S_TTAPE.

  LF_TTAPE = ME->GET_TTAPE( ).

*** Get Tape Type Description from Product Style Customizing
  RF_TTAPE_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_TTAPE_DESCR( IF_TTAPE = LF_TTAPE ).

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_INIT_TAPE_DATA.
      ME->HANDLE_INIT_TAPE_DATA( ).

  endcase.


endmethod.
method HANDLE_INIT_TAPE_DATA.

  data:  LF_TTAPE       type        ZVCXI_P0S_TTAPE,
         LF_WERKS       type        WERKS_D,
         LF_MATNR       type        MATNR,
         LF_DCONF       type        DATS.

  move ME->GET_TTAPE( ) to LF_TTAPE.

  if LF_TTAPE is not initial.
*** Read Customizing
    move ME->GET_WERKS( ) to LF_WERKS.
    move ME->GET_DCONF( ) to LF_DCONF.

*** Get Tape Type Material Assignment from Product Style Customizing
    LF_MATNR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_TTAPE_MATNR( IF_TTAPE = LF_TTAPE
                                                          IF_WERKS = LF_WERKS
                                                          IF_DATE  = LF_DCONF ).

  endif.

*** Set Material
  ME->SET_MATNR( IF_MATNR = LF_MATNR
                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).


endmethod.
method SET_TAPOS.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPOS ).

  move IS_TAPOS-TAPOS     to LS_PARAM-ATFLV.
  move IS_TAPOS-TAPOS_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TAPE_DATA_CHANGED ).
  endif.

endmethod.
method SET_TTAPE.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TTAPE ).

  move IF_TTAPE to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TTAPE_CHANGED ).
  endif.

endmethod.
