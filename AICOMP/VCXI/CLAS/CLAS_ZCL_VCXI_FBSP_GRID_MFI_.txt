
class ZCL_VCXI_FBSP_GRID_MFI definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_FBSP_S_MFI_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data F_MFI_L_IS_ACTIV type ABAP_BOOL .
  data F_MFI_P_IS_ACTIV type ABAP_BOOL .
  data F_MFMI_IS_ACTIV type ABAP_BOOL .
  data F_MFMI_IS_PURCH type ABAP_BOOL .
  data F_MFSI_IS_ACTIV type ABAP_BOOL .

  methods SET_BGDIM
    importing
      !IR_PR_MFMI type ref to ZCL_VCXI_XCSP_PR_MFMI
      !IS_BGDIM type ZVCXI_FBSP_S_BGDIM
    raising
      /VCXI/CX_CKX .
  methods SET_FIDIM
    importing
      !IR_PR_MFMI type ref to ZCL_VCXI_XCSP_PR_MFMI
      !IS_FIDIM type ZVCXI_FFSP_S_FIDIM
    raising
      /VCXI/CX_CKX .
  methods GET_BGDIM
    importing
      !IR_BGDIM type ref to ZIF_VCXI_FBSP_BGDIM
    returning
      value(RS_BGDIM) type ZVCXI_FBSP_S_BGDIM
    raising
      /VCXI/CX_CKX .
  methods GET_FIDIM
    importing
      !IR_FIDIM type ref to ZIF_VCXI_FFSP_FIDIM
    returning
      value(RS_FIDIM) type ZVCXI_FFSP_S_FIDIM
    raising
      /VCXI/CX_CKX .
  methods CHECK_PSCALE_MGR_ACTIV
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RF_ACTIV) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFMI
    importing
      !IF_PURCH type ZVCXI_XCS_PURCH
      !IF_DUMMY type ABAP_BOOL
      !IF_BASED_ON type CHAR01 optional
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MFSI
    importing
      !IF_BASED_ON type CHAR01
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MFSI_VIS
    importing
      !IR_PR_MFSI type ref to ZCL_VCXI_XCSP_PR_MFSI
    returning
      value(RS_MFI_VIS) type ZVCXI_FBSP_S_MFI_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_MFMI_VIS
    importing
      !IR_PR_MFMI type ref to ZCL_VCXI_XCSP_PR_MFMI
    returning
      value(RS_MFI_VIS) type ZVCXI_FBSP_S_MFI_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFMI_VIS
    importing
      !IR_PR_MFMI type ref to ZCL_VCXI_XCSP_PR_MFMI
      !IS_MFI_VIS type ZVCXI_FBSP_S_MFI_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MFSI_VIS
    importing
      !IR_PR_MFSI type ref to ZCL_VCXI_XCSP_PR_MFSI
      !IS_MFI_VIS type ZVCXI_FBSP_S_MFI_VIS
    raising
      /VCXI/CX_CKX .
  methods IS_BASED_ON
    importing
      !IR_MFI type ref to ZIF_VCXI_XCSP_MFI
    returning
      value(RF_RESULT) type CHAR01
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_GRID_MFI definition
class ZCL_VCXI_FBSP_GRID_MFI implementation.
method CHANGE_STYLE_MFMI.

  data: LF_STYLE_ENABLED_FILM type LVC_STYLE,
        LF_STYLE_ENABLED_BAG  type LVC_STYLE.

  free CT_STYL.

***--------------------------------------------------------------------------------------
  case IF_BASED_ON.
*** Enable Length parameters, Disable PC parameters
    when 'L'.
      move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_FILM.
      move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_BAG.

*** Enable PC parameters, Disable Length parameters
    when 'P'.
      move ME->F_STYLE_DISABLED to LF_STYLE_ENABLED_FILM.
      move ME->F_STYLE_ENABLED  to LF_STYLE_ENABLED_BAG.

  endcase.


***--------------------------------------------------------------------------------------
*** Set Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set ID of MF x-connection = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Component Scrap = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'KAUSF'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICF'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Setup Percentage = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFISP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low-Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Next Low Level Code = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NEXTL'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Film Width = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIWIDFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Repeat Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RELENFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Film Internal Thickness = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITINFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Film External Thickness = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITEXFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Surface Weight = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SURWTFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Target Roll Length = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RLETAFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUTFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Ups = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPSFI'
                              IF_STYLE     = LF_STYLE_ENABLED_FILM
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Bag Type = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IBAGTBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

*** Set Bag Width = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BGWIDBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

*** Set Bag Height = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BGHEIBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

*** Set Bag Weight = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BGWGTBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUTBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Ups = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPSBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

*** Set Shipping Unit = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SHUNTBG'
                              IF_STYLE     = LF_STYLE_ENABLED_BAG
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Vendor, Price and Price Unit based on Procurement Option
  case IF_PURCH.
    when ZIF_VCXI_XCSP_MFM=>C_PURCH_DIRECT_PRICE.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZIF_VCXI_XCSP_MFM=>C_PURCH_DIRECT.
***   Set Vendor = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).

    when ZIF_VCXI_XCSP_MFM=>C_PURCH_STOCK.
***   Set Vendor = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
***   Set Price Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
  endcase.

*** Set Purchase Flag not Editable if it is a Dummy
  if IF_DUMMY eq ABAP_TRUE.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).
  else.
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).
  endif.

endmethod.
method CHANGE_STYLE_MFSI.

  free CT_STYL.

***--------------------------------------------------------------------------------------
*** Set ID of MF x-connection = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IMFXC'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICF'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Factor per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFICP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow in Setup Percentage = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFISP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Next Low Level Code = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NEXTL'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Style Details -> all other DISABLED because nothing needs to be edit in MFSI
*** Set Sheet Matnr = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Consumption = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'CONSU'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Component Scrap = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'KAUSF'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Material Flow Ratio = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MFRAT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Low Level Code = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'DISST'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Not needed Fields for MFSI
*** Set Text = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Vendor, Price and Price Unit = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LFINR'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Film Width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FIWIDFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Repeat Length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RELENFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Film Internal Thickness = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITINFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Film External Thickness = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FITEXFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Surface Weight = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SURWTFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Target Roll Length = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RLETAFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUTFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Ups = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPSFI'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

***--------------------------------------------------------------------------------------
*** Set Bag Type = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'IBAGTBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Bag Width = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BGWIDBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Bag Height = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BGHEIBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Bag Weight = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'BGWGTBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Outs = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOOUTBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Number of Ups = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOUPSBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Shipping Unit ID = Not Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'SHUNTBG'
                              IF_STYLE     = ME->F_STYLE_DISABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CHECK_PSCALE_MGR_ACTIV.

  data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
  data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
        LR_PSCALE_MGR type ref to ZIF_VCXI_XCS_PSCALE_MGR.

***--------------------------------------------------------------------------------------
*** If we are connect to a Scale Manager -> Request Price depending on Consumption
  LT_GATE = IR_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCS_PSCALE_MGR=>C_IPRVT_XCS_PSCALE_MGR
                                IF_INUSE = ABAP_TRUE ).

*** Assign Reference of Price Scale Manager
  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC eq 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_PSCALE_MGR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PSCALE_MGR.
    endtry.
  endif.

  check LR_PSCALE_MGR is bound.
  move ABAP_TRUE to RF_ACTIV.

endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZIF_VCXI_XCSP_MFI=>C_IPRVT_XCS_MFI.

  endmethod.
  method GET_BGDIM.

*** Bag Type
    IR_BGDIM->GET_IBAGT( importing EF_IBAGT = RS_BGDIM-IBAGT ).

*** Bag Height
    IR_BGDIM->GET_BGHEI( importing ES_BGHEI = RS_BGDIM-S_BGHEI ).

*** Bag Width
    IR_BGDIM->GET_BGWID( importing ES_BGWID = RS_BGDIM-S_BGWID ).

*** Bag Weight
    IR_BGDIM->GET_BGWGT( importing ES_BGWGT = RS_BGDIM-S_BGWGT ).

*** No Ups
    IR_BGDIM->GET_NOUPS( importing EF_NOUPS = RS_BGDIM-NOUPS ).

*** No Out
    IR_BGDIM->GET_NOOUT( importing EF_NOOUT = RS_BGDIM-NOOUT ).

*** Shipping Unit ID
    RS_BGDIM-SHUNT = IR_BGDIM->GET_SHUNT( ).

  endmethod.
  method GET_FIDIM.

*** External Film Thickness
    IR_FIDIM->GET_FITEX( importing ES_FITEX = RS_FIDIM-S_FITEX ).

*** Internal Film Thickness
    IR_FIDIM->GET_FITIN( importing ES_FITIN = RS_FIDIM-S_FITIN ).

*** Film Width
    IR_FIDIM->GET_FIWID( importing ES_FIWID = RS_FIDIM-S_FIWID ).

*** Internal Film Thickness
    IR_FIDIM->GET_SURWT( importing ES_SURWT = RS_FIDIM-S_SURWT ).

*** Repeat Length
    IR_FIDIM->GET_RELEN( importing ES_RELEN = RS_FIDIM-S_RELEN ).

*** No Ups
    IR_FIDIM->GET_NOUPS( importing EF_NOUPS = RS_FIDIM-NOUPS ).

*** No Out
    IR_FIDIM->GET_NOOUT( importing EF_NOOUT = RS_FIDIM-NOOUT ).

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED           type        /VCXI/CKX_LOCKED,
          LF_INUSE            type        /VCXI/VKSR_INUSE,
          LF_HIDE_MFMI_DATA   type        ABAP_BOOL,
          LF_HIDE_MFSI_DATA   type        ABAP_BOOL,
          LF_HIDE_PURCH_DATA  type        ABAP_BOOL,
          LF_HIDE_LENGTH_DATA type        ABAP_BOOL,
          LF_HIDE_PC_DATA     type        ABAP_BOOL,
          LF_COLPOS           type        I.
    field-symbols: <S_FCAT>                 type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Get Show/Hide Data
    if ME->F_MFMI_IS_ACTIV eq ABAP_FALSE.
      LF_HIDE_MFMI_DATA  = ABAP_TRUE.
    else.
      LF_HIDE_MFMI_DATA  = ABAP_FALSE.
    endif.

    if ME->F_MFSI_IS_ACTIV eq ABAP_FALSE.
      LF_HIDE_MFSI_DATA  = ABAP_TRUE.
    else.
      LF_HIDE_MFSI_DATA  = ABAP_FALSE.
    endif.

    if ME->F_MFMI_IS_PURCH eq ABAP_FALSE.
      LF_HIDE_PURCH_DATA = ABAP_TRUE.
    else.
      LF_HIDE_PURCH_DATA = ABAP_FALSE.
    endif.

    if ME->F_MFI_L_IS_ACTIV eq ABAP_FALSE.
      LF_HIDE_LENGTH_DATA = ABAP_TRUE.
    else.
      LF_HIDE_LENGTH_DATA = ABAP_FALSE.
    endif.

    if ME->F_MFI_P_IS_ACTIV eq ABAP_FALSE.
      LF_HIDE_PC_DATA = ABAP_TRUE.
    else.
      LF_HIDE_PC_DATA = ABAP_FALSE.
    endif.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE'.
          move ABAP_TRUE    to <S_FCAT>-TECH.

***     ID for MF x-connect
        when 'IMFXC'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

***     Always Visible and Editable
        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

***     Component Factor and per / Setup % / Scrap
        when 'MFICF' or 'MFICP' or 'MFISP' or 'KAUSF'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE to <S_FCAT>-EDIT.
          endif.

        when 'MFICF_UOM' or 'MFISP_UOM' or 'KAUSF_UOM'.

***     Only Visible if MFSI is there
        when 'DISST'.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.

***     Next Low-Level Code
        when 'NEXTL'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE         to <S_FCAT>-EDIT.
          endif.
          move LF_HIDE_MFSI_DATA   to <S_FCAT>-NO_OUT.
          move ABAP_TRUE           to <S_FCAT>-CHECKBOX.

***     Only Visible if MFMI is there and it is purchased
        when 'LIFNR' or 'PRICE' or 'PRICP'.
          move LF_HIDE_PURCH_DATA  to <S_FCAT>-NO_OUT.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFMI_IS_PURCH to <S_FCAT>-EDIT.
          endif.

        when 'TEXT'.
          move LF_HIDE_MFMI_DATA   to <S_FCAT>-NO_OUT.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
          endif.

        when 'PRICE_CURR' or 'PRICP_UOM' or 'LIFNR_DESCR'.
          move LF_HIDE_PURCH_DATA to <S_FCAT>-NO_OUT.

        when 'PURCH'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFMI_IS_ACTIV to <S_FCAT>-EDIT.
          endif.

***     Only Available if Film Dimensions is there
        when 'FIWIDFI' or 'RELENFI' or 'FITINFI' or 'FITEXFI' or 'SURWTFI' or 'RLETAFI' or 'NOUPSFI' or 'NOOUTFI'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFI_L_IS_ACTIV to <S_FCAT>-EDIT.
          endif.
          move LF_HIDE_LENGTH_DATA to <S_FCAT>-NO_OUT.

        when 'FIWID_UOMFI' or 'RELEN_UOMFI' or 'FITIN_UOMFI' or 'FITEX_UOMFI' or 'SURWT_UOMC6' or 'RLETA_UOMFI'.
          move LF_HIDE_LENGTH_DATA to <S_FCAT>-NO_OUT.

        when 'SURWT_UOMFI'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.

***     Only Available if Bag Dimensions is there
        when 'IBAGTBG' or 'BGHEIBG' or 'BGWIDBG' or 'BGWGTBG' or 'NOUPSBG' or 'NOOUTBG' or 'SHUNTBG'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ME->F_MFI_P_IS_ACTIV to <S_FCAT>-EDIT.
          endif.
          move LF_HIDE_PC_DATA     to <S_FCAT>-NO_OUT.

        when 'BGHEI_UOMBG' or 'BGWID_UOMBG' or 'BGWGT_UOMBG'.
          move LF_HIDE_PC_DATA     to <S_FCAT>-NO_OUT.

      endcase.

***--------------------------------------------------------------------------------------
***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'IMFXC'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'CONSU_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFRAT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'KAUSF'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'KAUSF_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFISP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFISP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFICF'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MFICP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'DISST'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NEXTL'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

      if <S_FCAT>-FIELDNAME eq 'TEXT'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE_CURR'.  <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PURCH'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

      if <S_FCAT>-FIELDNAME eq 'FIWIDFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FIWID_UOMFI'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RELENFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RELEN_UOMFI'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITINFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITIN_UOMFI'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITEXFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FITEX_UOMFI'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWTFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOMFI'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOMC6'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RLETAFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RLETA_UOMFI'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOOUTFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOUPSFI'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.

      if <S_FCAT>-FIELDNAME eq 'IBAGTBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWIDBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWID_UOMBG'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGHEIBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGHEI_UOMBG'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWGTBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'BGWGT_UOMBG'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOOUTBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'NOUPSBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SHUNTBG'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_GRID_DATA.

    data: LF_PSCALE_ACTIV type     ABAP_BOOL,
          LF_PURCH        type     ABAP_BOOL,
          LF_BASED_ON     type     CHAR01.
    data: LS_MFI_GRID     type     ZVCXI_FBSP_S_MFI_GRID.
    data: LT_GATE         type     /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to   /VCXI/CL_VKSR_GATE,
          LR_PR_MFMI type ref to   ZCL_VCXI_XCSP_PR_MFMI,
          LR_PR_MFSI type ref to   ZCL_VCXI_XCSP_PR_MFSI,
          LR_MFI     type ref to   ZIF_VCXI_XCSP_MFI.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

*** Clear Indicator for Sheet and Material Flow
    clear: ME->F_MFMI_IS_ACTIV, ME->F_MFSI_IS_ACTIV, ME->F_MFMI_IS_PURCH,
           ME->F_MFI_L_IS_ACTIV, ME->F_MFI_P_IS_ACTIV.

*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
*** Get Gates of Material Flow
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
      clear: LS_MFI_GRID.

***--------------------------------------------------------------------------------------
***   Check general based on
      try.
          move LR_GATE->R_CLSPR ?to LR_MFI.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_MFI.
      endtry.
      if LR_MFI is bound.
***     Get MFI base -> Length or PC
        move ME->IS_BASED_ON( IR_MFI = LR_MFI ) to LF_BASED_ON.
        case LF_BASED_ON.
          when 'L'.
            move ABAP_TRUE to ME->F_MFI_L_IS_ACTIV.
          when 'P'.
            move ABAP_TRUE to ME->F_MFI_P_IS_ACTIV.
        endcase.
      endif.

***--------------------------------------------------------------------------------------
***   Material Flow Material In
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MFMI.
          check LR_PR_MFMI is bound.

***       Set Indicator that a Film is activ
          if LR_GATE->IS_INUSE( ) eq ABAP_TRUE.
            move ABAP_TRUE to ME->F_MFMI_IS_ACTIV.
          endif.

          move LR_GATE->GET_POSID( ) to LS_MFI_GRID-POSID.
          move LR_GATE->F_GATKY      to LS_MFI_GRID-GATKY.
          move LR_GATE               to LS_MFI_GRID-R_GATE.

          LS_MFI_GRID-S_MFI_VIS = ME->GET_MFMI_VIS( IR_PR_MFMI = LR_PR_MFMI ).

***       Get Flags for Fieldcat
          case LS_MFI_GRID-S_MFI_VIS-PURCH.
            when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
              ME->F_MFMI_IS_PURCH =  LS_MFI_GRID-S_MFI_VIS-PURCH.
            when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
              if ME->F_MFMI_IS_PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
                ME->F_MFMI_IS_PURCH =  LS_MFI_GRID-S_MFI_VIS-PURCH.
              endif.
          endcase.

          if LS_MFI_GRID-S_MFI_VIS-PURCH ne ZIF_VCXI_XCSP_MFM=>C_PURCH_STOCK.
            LF_PSCALE_ACTIV = ME->CHECK_PSCALE_MGR_ACTIV( IR_GATE = LR_GATE ).
            if LF_PSCALE_ACTIV eq ABAP_FALSE.
              move ABAP_TRUE to LF_PURCH.
            endif.
          endif.

***       Set Style Details
          ME->CHANGE_STYLE_MFMI( exporting IF_PURCH    = LF_PURCH
                                           IF_DUMMY    = LR_PR_MFMI->IS_DUMMY( )
                                           IF_BASED_ON = LF_BASED_ON
                                 changing  CT_STYL     = LS_MFI_GRID-T_STYL ).

***       Call DVC Service - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = LS_MFI_GRID-T_STYL ).

***       Add Entry
          append initial line to <T_DATA> assigning <S_DATA>.
          move-corresponding LS_MFI_GRID to <S_DATA>.

        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MFMI.
      endtry.

***--------------------------------------------------------------------------------------
***   Material Flow SFG In
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MFSI.
          check LR_PR_MFSI is bound.

***       Set Indicator that an MFSI_L is activ
          move ABAP_TRUE to ME->F_MFSI_IS_ACTIV.

          move LR_GATE->GET_POSID( ) to LS_MFI_GRID-POSID.
          move LR_GATE->F_GATKY      to LS_MFI_GRID-GATKY.
          move LR_GATE               to LS_MFI_GRID-R_GATE.

          LS_MFI_GRID-S_MFI_VIS = ME->GET_MFSI_VIS( IR_PR_MFSI = LR_PR_MFSI ).

***       Set Style Details -> all DISABLED because nothing needs to be edit in MFSI
          ME->CHANGE_STYLE_MFSI( exporting IF_BASED_ON = LF_BASED_ON
                                 changing  CT_STYL  = LS_MFI_GRID-T_STYL ).

***       Call DVC Service - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = LS_MFI_GRID-T_STYL ).

***       Add Entry
          append initial line to <T_DATA> assigning <S_DATA>.
          move-corresponding LS_MFI_GRID to <S_DATA>.

        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MFSI.
      endtry.
    endloop.

    sort <T_DATA> by ('POSID').

  endmethod.
method GET_MFMI_VIS.

  data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
        LS_MFISP type ZVCXI_XCSP_S_MFISP,
        LS_KAUSF type ZVCXI_XCSP_S_KAUSF,
        LS_PRICE type ZVCXI_XCS_S_PRICE,
        LS_PRICP type ZVCXI_XCS_S_PRICP.
  data: LR_FIDIM type ref to ZIF_VCXI_FFSP_FIDIM,
        LR_BGDIM type ref to ZIF_VCXI_FBSP_BGDIM.

***----------------------------------------------------------------------------
*** Material
  move IR_PR_MFMI->GET_MATNR( )           to RS_MFI_VIS-MATNR.
  move IR_PR_MFMI->GET_MATNR_DESCR( )     to RS_MFI_VIS-MATNR_DESCR.

*** x-connect
  move IR_PR_MFMI->GET_IMFXC( )           to RS_MFI_VIS-IMFXC.

*** Consumption
  move IR_PR_MFMI->GET_CONSU( )           to LS_CONSU.
  move-corresponding LS_CONSU             to RS_MFI_VIS.

*** MF Ratio
  move IR_PR_MFMI->GET_MFRAT( )           to RS_MFI_VIS-MFRAT.

*** Setup Percentage for Material Flow In
  move IR_PR_MFMI->GET_MFISP( )           to LS_MFISP.
  move-corresponding LS_MFISP             to RS_MFI_VIS.

*** Consumption Factor for Material Flow In per
  move IR_PR_MFMI->GET_MFICF( )           to RS_MFI_VIS-MFICF.
  move IR_PR_MFMI->GET_MFICP( )           to RS_MFI_VIS-MFICP.

*** Get Component Scrap
  move IR_PR_MFMI->GET_KAUSF( )           to LS_KAUSF.
  move-corresponding LS_KAUSF             to RS_MFI_VIS.

*** Text
  move IR_PR_MFMI->GET_TEXT( )            to RS_MFI_VIS-TEXT.

*** Vendor
  move IR_PR_MFMI->GET_LIFNR( )           to RS_MFI_VIS-LIFNR.
  move IR_PR_MFMI->GET_LIFNR_DESCR( )     to RS_MFI_VIS-LIFNR_DESCR.

*** Price
  move IR_PR_MFMI->GET_PRICE( )           to LS_PRICE.
  move-corresponding LS_PRICE             to RS_MFI_VIS.

  move IR_PR_MFMI->GET_PRICP( )           to LS_PRICP.
  move-corresponding LS_PRICP             to RS_MFI_VIS.

*** Purchased Flag
  move IR_PR_MFMI->GET_PURCH( )           to RS_MFI_VIS-PURCH.

***----------------------------------------------------------------------------
*** Get Film Dimensions
  try.
      move IR_PR_MFMI ?to LR_FIDIM.
      check LR_FIDIM is bound.

      move ME->GET_FIDIM( IR_FIDIM = LR_FIDIM ) to RS_MFI_VIS-S_FIDIM.
      move RS_MFI_VIS-S_FIDIM-SURWT_UOM         to RS_MFI_VIS-SURWT_UOMC6.

    catch CX_SY_MOVE_CAST_ERROR.
      clear LR_FIDIM.
  endtry.

*** Get Bag Dimensions
  try.
      move IR_PR_MFMI ?to LR_BGDIM.
      check LR_BGDIM is bound.

      move ME->GET_BGDIM( IR_BGDIM = LR_BGDIM ) to RS_MFI_VIS-S_BGDIM.

    catch CX_SY_MOVE_CAST_ERROR.
      clear LR_FIDIM.
  endtry.

endmethod.
method GET_MFSI_VIS.

  data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
        LS_MFISP type ZVCXI_XCSP_S_MFISP,
        LS_KAUSF type ZVCXI_XCSP_S_KAUSF.
  data: LR_FIDIM type ref to ZIF_VCXI_FFSP_FIDIM,
        LR_BGDIM type ref to ZIF_VCXI_FBSP_BGDIM.

*** Get MaterialNumber, Description, Low Level Code and x-connect
  move IR_PR_MFSI->GET_MATNR( )       to RS_MFI_VIS-MATNR.
  move IR_PR_MFSI->GET_MATNR_DESCR( ) to RS_MFI_VIS-MATNR_DESCR.
  move IR_PR_MFSI->GET_DISST( )       to RS_MFI_VIS-DISST.
  move IR_PR_MFSI->GET_NEXTL( )       to RS_MFI_VIS-NEXTL.
  move IR_PR_MFSI->GET_IMFXC( )       to RS_MFI_VIS-IMFXC.

*** Get Consumption
  move IR_PR_MFSI->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU         to RS_MFI_VIS.

*** MF Ratio
  move IR_PR_MFSI->GET_MFRAT( )       to RS_MFI_VIS-MFRAT.

*** Get Consumption Factor and per
  move IR_PR_MFSI->GET_MFICF( )       to RS_MFI_VIS-MFICF.
  move IR_PR_MFSI->GET_MFICP( )       to RS_MFI_VIS-MFICP.

*** Get Setup Percentage
  move IR_PR_MFSI->GET_MFISP( )       to LS_MFISP.
  move-corresponding LS_MFISP         to RS_MFI_VIS.

*** Get Component Scrap
  move IR_PR_MFSI->GET_KAUSF( )       to LS_KAUSF.
  move-corresponding LS_KAUSF         to RS_MFI_VIS.

*** Get Film Dimensions
  try.
      move IR_PR_MFSI ?to LR_FIDIM.
      check LR_FIDIM is bound.

      move ME->GET_FIDIM( IR_FIDIM = LR_FIDIM ) to RS_MFI_VIS-S_FIDIM.
      move RS_MFI_VIS-S_FIDIM-SURWT_UOM         to RS_MFI_VIS-SURWT_UOMC6.

    catch CX_SY_MOVE_CAST_ERROR.
      clear LR_FIDIM.
  endtry.

*** Get Film Dimensions
  try.
      move IR_PR_MFSI ?to LR_BGDIM.
      check LR_BGDIM is bound.

      move ME->GET_BGDIM( IR_BGDIM = LR_BGDIM ) to RS_MFI_VIS-S_BGDIM.

    catch CX_SY_MOVE_CAST_ERROR.
      clear LR_BGDIM.
  endtry.

endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_MFI_GRID type ZVCXI_FBSP_S_MFI_GRID.
    data: LR_PR_MFMI type ref to ZCL_VCXI_XCSP_PR_MFMI,
          LR_PR_MFSI type ref to ZCL_VCXI_XCSP_PR_MFSI,
          LR_CX_CKX  type ref to /VCXI/CX_CKX.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ANY.


    check E_MODIFIED eq ABAP_TRUE.

    try.

        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          clear: LR_PR_MFMI,
                 LR_PR_MFSI.

          move-corresponding <S_DATA>          to LS_MFI_GRID.

***----------------------------------------------------------------------------
***       Changes to Material Flow Material
          try.
              move LS_MFI_GRID-R_GATE->R_CLSPR ?to LR_PR_MFMI.
              check LR_PR_MFMI is bound.

***           Set Values to PR Class
              ME->SET_MFMI_VIS( IR_PR_MFMI = LR_PR_MFMI
                                IS_MFI_VIS = LS_MFI_GRID-S_MFI_VIS ).

            catch CX_SY_MOVE_CAST_ERROR.
              clear: LR_PR_MFMI.
          endtry.

***----------------------------------------------------------------------------
***       Changes to Material Flow SFG
          try.
              move LS_MFI_GRID-R_GATE->R_CLSPR ?to LR_PR_MFSI.
              check LR_PR_MFSI is bound.

***           Set Values to PR Class
              ME->SET_MFSI_VIS( IR_PR_MFSI = LR_PR_MFSI
                                IS_MFI_VIS = LS_MFI_GRID-S_MFI_VIS ).
            catch CX_SY_MOVE_CAST_ERROR.
              clear: LR_PR_MFSI.
          endtry.

        endloop.

***     Request Refresh for ALV
        move ABAP_TRUE to ME->F_REFRESH_REQ.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method IS_BASED_ON.

    data: LR_FIDIM type ref to   ZIF_VCXI_FFSP_FIDIM,
          LR_BGDIM type ref to   ZIF_VCXI_FBSP_BGDIM.

***--------------------------------------------------------------------------------------
*** Check if MFI is Length base
    try.
        move IR_MFI ?to LR_FIDIM.
        check LR_FIDIM is bound.

        move 'L' to RF_RESULT.
        return.
      catch CX_SY_MOVE_CAST_ERROR.
        clear RF_RESULT.
    endtry.

***--------------------------------------------------------------------------------------
*** Check if MFI is PC base
    try.
        move IR_MFI ?to LR_BGDIM.
        check LR_BGDIM is bound.

        move 'P' to RF_RESULT.
        return.
      catch CX_SY_MOVE_CAST_ERROR.
        clear RF_RESULT.
    endtry.

  endmethod.
  method SET_BGDIM.

    data: LS_BGDIM   type        ZVCXI_FBSP_S_BGDIM.
    data: LR_PR_MFMI_P  type ref to ZCL_VCXI_FBSP_PR_MFMI_P.

*** Get current data to do Update only if Value changed.
    move ME->GET_MFMI_VIS( IR_PR_MFMI = IR_PR_MFMI )-S_BGDIM to LS_BGDIM.

*** Cast to MFMI PC
    move IR_PR_MFMI ?to LR_PR_MFMI_P.

***--------------------------------------------------------------------------------------
*** Bag Type
    if IS_BGDIM-IBAGT ne LS_BGDIM-IBAGT.
      LR_PR_MFMI_P->SET_IBAGT( IF_IBAGT = IS_BGDIM-IBAGT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Bag Height
    if IS_BGDIM-S_BGHEI ne LS_BGDIM-S_BGHEI.
      LR_PR_MFMI_P->SET_BGHEI( IS_BGHEI = IS_BGDIM-S_BGHEI
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Bag Width
    if IS_BGDIM-S_BGWID ne LS_BGDIM-S_BGWID.
      LR_PR_MFMI_P->SET_BGWID( IS_BGWID = IS_BGDIM-S_BGWID
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Bag Weight
    if IS_BGDIM-S_BGWGT ne LS_BGDIM-S_BGWGT.
      LR_PR_MFMI_P->SET_BGWGT( IS_BGWGT = IS_BGDIM-S_BGWGT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** No Ups
    if IS_BGDIM-NOUPS ne LS_BGDIM-NOUPS.
      LR_PR_MFMI_P->SET_NOUPS( IF_NOUPS = IS_BGDIM-NOUPS
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** No Out
    if IS_BGDIM-NOOUT ne LS_BGDIM-NOOUT.
      LR_PR_MFMI_P->SET_NOOUT( IF_NOOUT = IS_BGDIM-NOOUT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Shipping Unit ID
    if IS_BGDIM-SHUNT ne LS_BGDIM-SHUNT.
      LR_PR_MFMI_P->SET_SHUNT( IF_SHUNT = IS_BGDIM-SHUNT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_FIDIM.

    data: LS_FIDIM   type        ZVCXI_FFSP_S_FIDIM.
    data: LR_PR_MFMI_L  type ref to ZCL_VCXI_FFSP_PR_MFMI_L.

*** Get current data to do Update only if Value changed.
    move ME->GET_MFMI_VIS( IR_PR_MFMI = IR_PR_MFMI )-S_FIDIM to LS_FIDIM.

*** Cast to MFMI Length
    move IR_PR_MFMI ?to LR_PR_MFMI_L.

***--------------------------------------------------------------------------------------
*** Film Width
    if IS_FIDIM-S_FIWID ne LS_FIDIM-S_FIWID.
      LR_PR_MFMI_L->SET_FIWID( IS_FIWID = IS_FIDIM-S_FIWID
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Film External Thickness
    if IS_FIDIM-S_FITEX ne LS_FIDIM-S_FITEX.
      LR_PR_MFMI_L->SET_FITEX( IS_FITEX = IS_FIDIM-S_FITEX
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Film Internal Thickness
    if IS_FIDIM-S_FITIN ne LS_FIDIM-S_FITIN.
      LR_PR_MFMI_L->SET_FITIN( IS_FITIN = IS_FIDIM-S_FITIN
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Weight Surface
    if IS_FIDIM-S_SURWT ne LS_FIDIM-S_SURWT.
      LR_PR_MFMI_L->SET_SURWT( IS_SURWT = IS_FIDIM-S_SURWT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Repeat Length
    if IS_FIDIM-S_RELEN ne LS_FIDIM-S_RELEN.
      LR_PR_MFMI_L->SET_RELEN( IS_RELEN = IS_FIDIM-S_RELEN
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** No Ups
    if IS_FIDIM-NOUPS ne LS_FIDIM-NOUPS.
      LR_PR_MFMI_L->SET_NOUPS( IF_NOUPS = IS_FIDIM-NOUPS
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** No Out
    if IS_FIDIM-NOOUT ne LS_FIDIM-NOOUT.
      LR_PR_MFMI_L->SET_NOOUT( IF_NOOUT = IS_FIDIM-NOOUT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method SET_MFMI_VIS.

    data: LS_MFISP   type ZVCXI_XCSP_S_MFISP,
          LS_KAUSF   type ZVCXI_XCSP_S_KAUSF,
          LS_PRICE   type ZVCXI_XCS_S_PRICE,
          LS_PRICP   type ZVCXI_XCS_S_PRICP,
          LS_MFI_VIS type ZVCXI_FBSP_S_MFI_VIS.


*** Get Current data to do Update only if Value changed.
    LS_MFI_VIS = ME->GET_MFMI_VIS( IR_PR_MFMI = IR_PR_MFMI ).


*** Material
    if IS_MFI_VIS-MATNR ne LS_MFI_VIS-MATNR.
      IR_PR_MFMI->SET_MATNR( IF_MATNR = IS_MFI_VIS-MATNR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** ID for MF x-connection
    if LS_MFI_VIS-IMFXC ne IS_MFI_VIS-IMFXC.
      IR_PR_MFMI->SET_IMFXC( IF_IMFXC = IS_MFI_VIS-IMFXC
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Setup Percentage for Material Flow In
    if IS_MFI_VIS-MFISP ne LS_MFI_VIS-MFISP.
      move-corresponding IS_MFI_VIS to LS_MFISP.
      IR_PR_MFMI->SET_MFISP( IS_MFISP = LS_MFISP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Consumption Factor for Material Flow In
    if IS_MFI_VIS-MFICF ne LS_MFI_VIS-MFICF.
      IR_PR_MFMI->SET_MFICF( IF_MFICF = IS_MFI_VIS-MFICF
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if IS_MFI_VIS-MFICP ne LS_MFI_VIS-MFICP.
      IR_PR_MFMI->SET_MFICP( IF_MFICP = IS_MFI_VIS-MFICP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Setup Component Scrap
    if IS_MFI_VIS-KAUSF ne LS_MFI_VIS-KAUSF.
      move-corresponding IS_MFI_VIS to LS_KAUSF.
      IR_PR_MFMI->SET_KAUSF( IS_KAUSF = LS_KAUSF
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Text
    if IS_MFI_VIS-TEXT ne LS_MFI_VIS-TEXT.
      IR_PR_MFMI->SET_TEXT( IF_TEXT = IS_MFI_VIS-TEXT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Purchase Flag
    if IS_MFI_VIS-PURCH ne LS_MFI_VIS-PURCH.
      IR_PR_MFMI->SET_PURCH( IF_PURCH = IS_MFI_VIS-PURCH
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if IS_MFI_VIS-LIFNR ne LS_MFI_VIS-LIFNR.
      IR_PR_MFMI->SET_LIFNR( IF_LIFNR = IS_MFI_VIS-LIFNR
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price
    if IS_MFI_VIS-PRICE ne LS_MFI_VIS-PRICE.
      move-corresponding IS_MFI_VIS to LS_PRICE.
      IR_PR_MFMI->SET_PRICE( IS_PRICE = LS_PRICE
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if IS_MFI_VIS-PRICP ne LS_MFI_VIS-PRICP.
      move-corresponding IS_MFI_VIS to LS_PRICP.
      IR_PR_MFMI->SET_PRICP( IS_PRICP = LS_PRICP
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
    case ME->IS_BASED_ON( IR_MFI = IR_PR_MFMI ).
      when 'L'.
        ME->SET_FIDIM( IR_PR_MFMI = IR_PR_MFMI
                       IS_FIDIM   = IS_MFI_VIS-S_FIDIM ).
      when 'P'.
        ME->SET_BGDIM( IR_PR_MFMI = IR_PR_MFMI
                       IS_BGDIM   = IS_MFI_VIS-S_BGDIM ).
    endcase.

  endmethod.
method SET_MFSI_VIS.

  data: LS_MFI_VIS type ZVCXI_FBSP_S_MFI_VIS,
        LS_MFISP   type ZVCXI_XCSP_S_MFISP.

*** Get Current data to do Update only if Value changed.
  LS_MFI_VIS = ME->GET_MFSI_VIS( IR_PR_MFSI = IR_PR_MFSI ).

*** ID for MF x-connection
  if LS_MFI_VIS-IMFXC ne IS_MFI_VIS-IMFXC.
    IR_PR_MFSI->SET_IMFXC( IF_IMFXC = IS_MFI_VIS-IMFXC
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Next Low-Level Code Flag
  if LS_MFI_VIS-NEXTL ne IS_MFI_VIS-NEXTL.
    IR_PR_MFSI->SET_NEXTL( IF_NEXTL = IS_MFI_VIS-NEXTL
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Setup Percentage for Material Flow In
  if LS_MFI_VIS-MFISP ne IS_MFI_VIS-MFISP.
    move-corresponding IS_MFI_VIS to LS_MFISP.
    IR_PR_MFSI->SET_MFISP( IS_MFISP = LS_MFISP
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Consumption Factor for Material Flow In
  if LS_MFI_VIS-MFICF ne IS_MFI_VIS-MFICF.
    IR_PR_MFSI->SET_MFICF( IF_MFICF = IS_MFI_VIS-MFICF
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Factor Per
  if LS_MFI_VIS-MFICP ne IS_MFI_VIS-MFICP.
    IR_PR_MFSI->SET_MFICP( IF_MFICP = IS_MFI_VIS-MFICP
                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
