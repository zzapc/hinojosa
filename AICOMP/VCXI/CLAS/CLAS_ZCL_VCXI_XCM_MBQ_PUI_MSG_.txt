
class ZCL_VCXI_XCM_MBQ_PUI_MSG definition
  public
  inheriting from ZCL_VCXI_XCM_PUI_MSG
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_RPROC type ref to /VCXI/CL_CKMR_RPROC
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_SHOW_DMS type SALV_DE_FUNCTION value '_30_SHOW_DMS' ##NO_TEXT.
  constants C_UC_SHOW_MAT type SALV_DE_FUNCTION value '_20_SHOW_MAT' ##NO_TEXT.
  constants C_UC_SHOW_SDOC_SVC type SALV_DE_FUNCTION value '_10_SHOW_SDOC_SVC' ##NO_TEXT.
  data R_DCO type ref to ZCL_VCXI_XCM_MBQ_DCO_SDOC .

  methods HANDLE_UC_SHOW_DMS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SHOW_MAT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SHOW_SDOC_SVC
    raising
      /VCXI/CX_CKX .

  methods ADJUST_FUNCTIONS
    redefinition .
  methods HANDLE_ADDED_FUNCTION
    redefinition .
private section.
endclass. "ZCL_VCXI_XCM_MBQ_PUI_MSG definition
class ZCL_VCXI_XCM_MBQ_PUI_MSG implementation.
  method ADJUST_FUNCTIONS.

    try.
***     Standard Functions for Messages
        SUPER->ADJUST_FUNCTIONS( IR_FUNCTIONS_LIST = IR_FUNCTIONS_LIST ).

***--------------------------------------------------------------------------------------
***     Sales Document Position based Functions
        if ME->R_DCO->F_POSNR is not initial.
          IR_FUNCTIONS_LIST->ADD_FUNCTION( NAME     = C_UC_SHOW_SDOC_SVC
                                           ICON     = conv #( ICON_CONFIGURATION )
                                           TEXT     = conv #( 'Sales Document SmartVC'(T01) )
                                           TOOLTIP  = conv #( 'Show Sales Document SmartVC'(Q01) )
                                           POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).
        endif.

***--------------------------------------------------------------------------------------
***     Material List based Functions
        if ME->R_DCO->F_MLCNT is not initial.
***       Get active Material List Entry
          data(LS_MATLI) = ME->R_DCO->T_MATLI[ MLCNT = ME->R_DCO->F_MLCNT ].

          if LS_MATLI-MATNR is not initial.
            IR_FUNCTIONS_LIST->ADD_FUNCTION( NAME     = C_UC_SHOW_MAT
                                             ICON     = conv #( ICON_MATERIAL )
                                             TOOLTIP  = conv #( 'Show Material'(Q02) )
                                             POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).
          endif.
        endif.

***--------------------------------------------------------------------------------------
***     DMS List based Functions
        if ME->R_DCO->F_DLCNT is not initial.
***       Get active DMS List Entry
          data(LS_DMSLI) = ME->R_DCO->T_DMSLI[ DLCNT = ME->R_DCO->F_DLCNT ].

          if LS_DMSLI-DOKNR is not initial and
             LS_DMSLI-DOKAR is not initial.
            IR_FUNCTIONS_LIST->ADD_FUNCTION( NAME     = C_UC_SHOW_DMS
                                             ICON     = conv #( ICON_DOCUMENT )
                                             TOOLTIP  = conv #( 'Show DMS Document'(Q03) )
                                             POSITION = IF_SALV_C_FUNCTION_POSITION=>RIGHT_OF_SALV_FUNCTIONS ).
          endif.
        endif.


      catch CX_SALV_WRONG_CALL CX_SALV_EXISTING.
    endtry.

  endmethod.
  method CONSTRUCTOR.

*** Super Constructor
    SUPER->CONSTRUCTOR( IR_RPROC = IR_RPROC ).

*** Map DCO to required Instance
    ME->R_RPROC->MAP_DCO( changing CR_DCO = ME->R_DCO ).

  endmethod.
  method HANDLE_ADDED_FUNCTION.

    try.
        case E_SALV_FUNCTION.
          when C_UC_SHOW_SDOC_SVC.
            ME->HANDLE_UC_SHOW_SDOC_SVC( ).
          when C_UC_SHOW_MAT.
            ME->HANDLE_UC_SHOW_MAT( ).
          when C_UC_SHOW_DMS.
            ME->HANDLE_UC_SHOW_DMS( ).
          when others.
            SUPER->HANDLE_ADDED_FUNCTION( E_SALV_FUNCTION = E_SALV_FUNCTION ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_SHOW_DMS.

*** Get active DMS List Entry
    check ME->R_DCO->F_DLCNT is not initial.
    data(LS_DMSLI) = ME->R_DCO->T_DMSLI[ DLCNT = ME->R_DCO->F_DLCNT ].
    check LS_DMSLI-DOKNR is not initial and
          LS_DMSLI-DOKAR is not initial.

***--------------------------------------------------------------------------------------
*** Define Parameter for Transaction Call
    set parameter id 'CV1' field LS_DMSLI-DOKNR.
    set parameter id 'CV2' field LS_DMSLI-DOKAR.
    set parameter id 'CV3' field LS_DMSLI-DOKVR.
    set parameter id 'CV4' field LS_DMSLI-DOKTL.

*** Set parameters are not processed quick enough
*** so FM is called and screen is not updated
    wait up to 1 seconds.

*** Create new Mode and start Transaction
    call function 'TH_CREATE_MODE'
      exporting
        TRANSAKTION    = 'CV03N'
        PROCESS_DARK   = ABAP_TRUE
      exceptions
        MAX_SESSIONS   = 1
        INTERNAL_ERROR = 2
        NO_AUTHORITY   = 3
        others         = 4.
    case SY-SUBRC.
      when 0.
      when 1.
***     Maximum number of sessions reached
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'I'
                                              IF_MSGID = '14'
                                              IF_MSGNO = '027' ).
      when others.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endcase.

  endmethod.
  method HANDLE_UC_SHOW_MAT.

*** Get active Material List Entry
    check ME->R_DCO->F_MLCNT is not initial.
    data(LS_MATLI) = ME->R_DCO->T_MATLI[ MLCNT = ME->R_DCO->F_MLCNT ].
    check LS_MATLI-MATNR is not initial.

*** Create new Mode and start Transaction
    call function 'TH_CREATE_MODE'
      exporting
        TRANSAKTION    = 'MM03'
        PARAMETERS     = 'RMMG1-MATNR=' && LS_MATLI-MATNR
        PROCESS_DARK   = ABAP_TRUE
      exceptions
        MAX_SESSIONS   = 1
        INTERNAL_ERROR = 2
        NO_AUTHORITY   = 3
        others         = 4.
    case SY-SUBRC.
      when 0.
      when 1.
***     Maximum number of sessions reached
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'I'
                                              IF_MSGID = '14'
                                              IF_MSGNO = '027' ).
      when others.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endcase.

  endmethod.
  method HANDLE_UC_SHOW_SDOC_SVC.

*** Get configuration for current position
    data(LR_SVC) = ME->R_DCO->R_BOB_SDOC->GET_SVC( IF_POSNR = ME->R_DCO->F_POSNR ).
    check LR_SVC is bound.

*** Start SmartVC UI
    LR_SVC->START_UI( ).

  endmethod.
