
class ZCL_VCXI_XCSR_GRID_LVAL definition
  public
  inheriting from ZCL_VCXI_XCS_GRID
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE optional
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE optional
      !IR_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP .

  methods HANDLE_BUTTON_CLICK
    for event BUTTON_CLICK of CL_GUI_ALV_GRID
    importing
      !ES_COL_ID
      !ES_ROW_NO .

  methods GET_GRID_DATA
    redefinition .
  methods SET_EVENT
    redefinition .
  methods GET_FIELDCAT
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSR_GRID_LVAL definition
class ZCL_VCXI_XCSR_GRID_LVAL implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_XCSR_S_LVAL_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

  move IR_RTE_PSTEP to ME->R_RTE_PSTEP.

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'SEL_ICON'.
        move CL_GUI_ALV_GRID=>MC_STYLE_BUTTON to <S_FCAT>-STYLE.
    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_RTE_LVAL          type          /VCXI/VSMR_S_RTE_LVAL,
                 LS_LVAL_GRID         type          ZVCXI_XCSR_S_LVAL_GRID,
                 LS_LVVAL             type          /VCXI/VSMR_S_RTE_RANGE_LVVAL.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

  loop at ME->R_RTE_PSTEP->T_RTE_LVAL into LS_RTE_LVAL.

*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.

*** Fill Data
    clear: LS_LVAL_GRID.

*** Limit Type Data
    move LS_RTE_LVAL-R_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( )    to LS_LVAL_GRID-ILTYP.
    move LS_RTE_LVAL-R_LTYPE->/VCXI/IF_CKX_OBJECT~GET_DESCR( ) to LS_LVAL_GRID-DESCR.

    move LS_RTE_LVAL-I_LVVAL to LS_LVAL_GRID-I_LVVAL.

***--------------------------------------------------------------------------------------
*** First Line of Range
    read table LS_RTE_LVAL-I_LVVAL into LS_LVVAL index 1.
    if SY-SUBRC eq 0.
      move LS_LVVAL-LOW  to LS_LVAL_GRID-LOW.
      move LS_LVVAL-HIGH to LS_LVAL_GRID-HIGH.

      case LS_LVVAL-SIGN.
        when 'I'.
          case LS_LVVAL-OPTION.
            when 'EQ'.
              move ICON_EQUAL_GREEN              to LS_LVAL_GRID-OPT_ICON.
            when 'NE'.
              move ICON_NOT_EQUAL_GREEN          to LS_LVAL_GRID-OPT_ICON.
            when 'GT'.
              move ICON_GREATER_GREEN            to LS_LVAL_GRID-OPT_ICON.
            when 'LT'.
              move ICON_LESS_GREEN               to LS_LVAL_GRID-OPT_ICON.
            when 'GE'.
              move ICON_GREATER_EQUAL_GREEN      to LS_LVAL_GRID-OPT_ICON.
            when 'LE'.
              move ICON_LESS_EQUAL_GREEN         to LS_LVAL_GRID-OPT_ICON.
            when 'BT'.
              move ICON_INTERVAL_INCLUDE_GREEN   to LS_LVAL_GRID-OPT_ICON.
            when 'NB'.
              move ICON_INTERVAL_EXCLUDE_GREEN   to LS_LVAL_GRID-OPT_ICON.
            when 'CP'.
              move ICON_PATTERN_INCLUDE_GREEN    to LS_LVAL_GRID-OPT_ICON.
            when 'NP'.
              move ICON_PATTERN_EXCLUDE_GREEN    to LS_LVAL_GRID-OPT_ICON.
          endcase.
        when 'E'.
          case LS_LVVAL-OPTION.
            when 'EQ'.
              move ICON_EQUAL_RED                to LS_LVAL_GRID-OPT_ICON.
            when 'NE'.
              move ICON_NOT_EQUAL_RED            to LS_LVAL_GRID-OPT_ICON.
            when 'GT'.
              move ICON_GREATER_RED              to LS_LVAL_GRID-OPT_ICON.
            when 'LT'.
              move ICON_LESS_RED                 to LS_LVAL_GRID-OPT_ICON.
            when 'GE'.
              move ICON_GREATER_EQUAL_RED        to LS_LVAL_GRID-OPT_ICON.
            when 'LE'.
              move ICON_LESS_EQUAL_RED           to LS_LVAL_GRID-OPT_ICON.
            when 'BT'.
              move ICON_INTERVAL_INCLUDE_RED     to LS_LVAL_GRID-OPT_ICON.
            when 'NB'.
              move ICON_INTERVAL_EXCLUDE_RED     to LS_LVAL_GRID-OPT_ICON.
            when 'CP'.
              move ICON_PATTERN_INCLUDE_RED      to LS_LVAL_GRID-OPT_ICON.
            when 'NP'.
              move ICON_PATTERN_EXCLUDE_RED      to LS_LVAL_GRID-OPT_ICON.
          endcase.
      endcase.
    endif.

***--------------------------------------------------------------------------------------
*** Add Icon
    if LS_RTE_LVAL-I_LVVAL is initial.
      move ICON_ENTER_MORE to LS_LVAL_GRID-SEL_ICON.
    else.
      if lines( LS_RTE_LVAL-I_LVVAL ) = 1.
        move ICON_ENTER_MORE   to LS_LVAL_GRID-SEL_ICON.
      else.
        move ICON_DISPLAY_MORE to LS_LVAL_GRID-SEL_ICON.
      endif.
    endif.

*** Fill Entry
    move-corresponding LS_LVAL_GRID to <S_DATA>.

  endloop.

  sort <T_DATA>.

endmethod.
method HANDLE_BUTTON_CLICK.

  data:          LS_LVAL_GRID         type          ZVCXI_XCSR_S_LVAL_GRID.
  data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      read table <T_DATA> assigning <S_DATA> index ES_ROW_NO-ROW_ID.
      check SY-SUBRC = 0.

*** --------------------------------------------------------------------------------------------
***   Get Range and Call Searchhelp
      move-corresponding <S_DATA> to LS_LVAL_GRID.

***   Call Select Options
      call function 'COMPLEX_SELECTIONS_DIALOG'
        exporting
          TITLE             = 'Defined Limits'(T01)
          JUST_DISPLAY      = ABAP_TRUE
        tables
          RANGE             = LS_LVAL_GRID-I_LVVAL
        exceptions
          NO_RANGE_TAB      = 1
          CANCELLED         = 2
          INTERNAL_ERROR    = 3
          INVALID_FIELDNAME = 4
          others            = 5.
      if SY-SUBRC ne 0 and
         SY-SUBRC ne 2.
        raise exception type /VCXI/CX_CKX.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method SET_EVENT.

  SUPER->SET_EVENT( ).

  set handler ME->HANDLE_BUTTON_CLICK for ME->R_GRID.

endmethod.
