
class ZCL_VCXI_XCSU_UI_CPM definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.
  type-pools VRM .

  data F_CURSOR type SCRFNAME .
  data S_CPM_VIS type ZVCXI_XCSU_S_CPM_VIS .

  methods CALL_SHLP_CONSC
    returning
      value(RF_CONSC) type ZVCXI_XCSU_CONSC
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_PAMAI
    returning
      value(RF_PAMAI) type ZVCXI_XCSU_PAMAI
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_PMATY
    returning
      value(RF_PMATY) type ZVCXI_XCSU_PMATY
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_CPM_VIS
    importing
      !IS_CPM_VIS type ZVCXI_XCSU_S_CPM_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_GRID_EFFCT type ref to ZCL_VCXI_XCSU_GRID_EFFCT .
  data R_PR_CPM type ref to ZCL_VCXI_XCSU_PR_CPM .

  methods SET_DDVAL_VCPMC
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSU_UI_CPM definition
class ZCL_VCXI_XCSU_UI_CPM implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_XCSU_UI_CPM_BIND'
    exporting
      IR_UI_CPM = ME
    importing
      ES_DYNP   = ME->S_DYNP.

*** Create Grid for Effect
  create object ME->R_GRID_EFFCT
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0100CC_GRID_EFFCT'.

endmethod.
method CALL_SHLP_CONSC.

  RF_CONSC = ME->R_PR_CPM->CALL_SHLP_CONSC( ).

endmethod.
method CALL_SHLP_PAMAI.

  RF_PAMAI = ME->R_PR_CPM->CALL_SHLP_PAMAI( ).

endmethod.
method CALL_SHLP_PMATY.

  RF_PMATY = ME->R_PR_CPM->CALL_SHLP_PMATY( ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_CPM.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DEACTIVATE.

  SUPER->DEACTIVATE( ).

  if ME->R_GRID_EFFCT is bound.
    ME->R_GRID_EFFCT->DO_FREE( ).
    clear ME->R_GRID_EFFCT.
  endif.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          else.
***         Changeable if Override Flag is set.
            if SCREEN-GROUP1                    eq 'FOC'  and
               ME->R_PR_CPM->GET_FOVRR_CONSC( ) eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            elseif SCREEN-GROUP1                    eq 'FOC' and
                   ME->R_PR_CPM->GET_FOVRR_CONSC( ) eq ABAP_TRUE.
              move 1 to SCREEN-INPUT.
            endif.
***         Changeable if Override Flag is set.
            if SCREEN-GROUP1                    eq 'FOP'  and
               ME->R_PR_CPM->GET_FOVRR_PMQTY( ) eq ABAP_FALSE.
              move 0 to SCREEN-INPUT.
            elseif SCREEN-GROUP1                eq 'FOP' and
               ME->R_PR_CPM->GET_FOVRR_PMQTY( ) eq ABAP_TRUE.
              move 1 to SCREEN-INPUT.
            endif.
          endif.

          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Check if the PR Class is bound
  check ME->R_PR_CPM is bound.

  ME->INIT_VIS( ).

*** Set Refresh to Effect Grid
  if ME->R_GRID_EFFCT is bound.
    if ME->R_GRID_EFFCT->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_EFFCT->F_REFRESH_REQ.
    endif.
    ME->R_GRID_EFFCT->REFRESH_GRID( ).
  endif.

*** Define DropDown Values for Variant
  ME->SET_DDVAL_VCPMC( ).

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
method DO_UPDATE_CPM_VIS.

  data: LS_PMQTY type ZVCXI_XCSU_S_PMQTY.

*** Set Variant
  if ME->S_CPM_VIS-VCPMC ne IS_CPM_VIS-VCPMC.
    ME->R_PR_CPM->CREATE_VCPMC( IF_VCPMC = IS_CPM_VIS-VCPMC ).
  endif.


*** Update Packaging Material Information
  if ME->S_CPM_VIS-PAMAI ne IS_CPM_VIS-PAMAI.
    ME->R_PR_CPM->SET_PAMAI( IF_PAMAI = IS_CPM_VIS-PAMAI
                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Update Text
  if ME->S_CPM_VIS-TEXT ne IS_CPM_VIS-TEXT.
    ME->R_PR_CPM->SET_TEXT( IF_TEXT  = IS_CPM_VIS-TEXT
                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Update Consumption Scheme if it is "Overriden"
  if ME->S_CPM_VIS-FOVRR_CONSC eq ABAP_TRUE.
    if ME->S_CPM_VIS-CONSC ne IS_CPM_VIS-CONSC.
      ME->R_PR_CPM->SET_CONSC( IF_CONSC = IS_CPM_VIS-CONSC
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endif.

*** Update Packaging Material Quantity if it is "Overriden"
  if ME->S_CPM_VIS-FOVRR_PMQTY eq ABAP_TRUE.
    if ME->S_CPM_VIS-PMQTY ne IS_CPM_VIS-PMQTY.
      move-corresponding IS_CPM_VIS to LS_PMQTY.
      ME->R_PR_CPM->SET_PMQTY( IS_PMQTY = LS_PMQTY
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endif.

*** Set Flag Override Consumption Scheme
  if ME->S_CPM_VIS-FOVRR_CONSC ne IS_CPM_VIS-FOVRR_CONSC.
    ME->R_PR_CPM->SET_FOVRR_CONSC( IF_FOVRR = IS_CPM_VIS-FOVRR_CONSC ).
  endif.

*** Set Flag Override Packaging Material Quantity
  if ME->S_CPM_VIS-FOVRR_PMQTY ne IS_CPM_VIS-FOVRR_PMQTY.
    ME->R_PR_CPM->SET_FOVRR_PMQTY( IF_FOVRR = IS_CPM_VIS-FOVRR_PMQTY ).
  endif.

endmethod.
method DO_USER_COMMAND.

  data:  LF_UCOMM      type SYUCOMM.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_EFFCT is bound.
    ME->R_GRID_EFFCT->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_CPM.

endmethod.
method INIT_VIS.

  data: LS_PMQTY type        ZVCXI_XCSU_S_PMQTY.
  data: LR_GATE  type ref to /VCXI/CL_VKSR_GATE.

  free: ME->S_CPM_VIS.

*** Get Packaging Material and Type
  move ME->R_PR_CPM->GET_PMATY( )       to ME->S_CPM_VIS-PMATY.
  move ME->R_PR_CPM->GET_PMATY_DESCR( ) to ME->S_CPM_VIS-PMATY_DESCR.
  move ME->R_PR_CPM->GET_VCPMC( )       to LR_GATE.
  if LR_GATE is bound.
    move LR_GATE->F_ID               to ME->S_CPM_VIS-VCPMC.
  endif.

*** Get Consumption Scheme
  ME->R_PR_CPM->GET_CONSC( importing EF_CONSC = ME->S_CPM_VIS-CONSC ).
  move ME->R_PR_CPM->GET_FOVRR_CONSC( ) to ME->S_CPM_VIS-FOVRR_CONSC.

*** Get Packaging Material Quantity
  ME->R_PR_CPM->GET_PMQTY( importing ES_PMQTY = LS_PMQTY ).
  move-corresponding LS_PMQTY           to ME->S_CPM_VIS.
  move ME->R_PR_CPM->GET_FOVRR_PMQTY( ) to ME->S_CPM_VIS-FOVRR_PMQTY.

*** Get Packaging Material Information Info
  move ME->R_PR_CPM->GET_PAMAI( )       to ME->S_CPM_VIS-PAMAI.
  move ME->R_PR_CPM->GET_PAMAI_DESCR( ) to ME->S_CPM_VIS-PAMAI_DESCR.

  move ME->R_PR_CPM->GET_TEXT( )        to ME->S_CPM_VIS-TEXT.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
method SET_DDVAL_VCPMC.

  data:          LF_ID      type       VRM_ID.
  data:          LS_VCPMC   type       ZVCXI_XCSU_S_VCPMC.
  data:          LT_VCPMC   type       ZVCXI_XCSU_TT_VCPMC,
                 LT_VALUE   type       VRM_VALUES.
  field-symbols: <S_VALUE>  type       VRM_VALUE.

***------------------------------------------------------------------------------------------------
*** Get all Variants
  LT_VCPMC = ME->R_PR_CPM->GET_ALL_VCPMC( ).

*** Add to search help structure
  loop at LT_VCPMC into LS_VCPMC.
    append initial line to LT_VALUE assigning <S_VALUE>.
    move LS_VCPMC-VCPMC       to <S_VALUE>-KEY.
    move LS_VCPMC-VCPMC_DESCR to <S_VALUE>-TEXT.
  endloop.

***------------------------------------------------------------------------------------------------
*** Set to DropDown List
  move 'ZVCXI_XCSU_S_CPM_VIS-VCPMC' to LF_ID.
  call function 'VRM_SET_VALUES'
    exporting
      ID     = LF_ID
      VALUES = LT_VALUE.

endmethod.
