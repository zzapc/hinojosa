
class ZCL_VCXI_FFSP_PR_ACTVY_LAMI definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_FFSP_ADJ_FIDIM .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_FIDIM type /VCXI/VKSC_IEVNT value 'RECALC_FIDIM' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_FIWID_CHANGED type /VCXI/VKSC_IEVNT value 'FIWID_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  private section.
endclass. "ZCL_VCXI_FFSP_PR_ACTVY_LAMI definition
class ZCL_VCXI_FFSP_PR_ACTVY_LAMI implementation.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

***   Film Dimensions
      when C_IEVNT_I_RECALC_FIDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FFSP_ADJ_FIDIM~C_IEVNT_O_FIDIM_CHANGED ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE        type        /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI       type        ZVCXI_XCSP_S_MQTYI.
    data: LF_UPDATE_ALL  type        ABAP_BOOL.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE,
          LR_OPERATION   type ref to ZIF_VCXI_XCSP_OPERATION,
          LR_PR_MC       type ref to ZCL_VCXI_XCSP_PR_MC.

***--------------------------------------------------------------------------------------
*** Should all MCs be updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE
                       transporting no fields.
    if SY-SUBRC eq 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
                         transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
      clear: LR_OPERATION.
      try.
          move LR_GATE->R_CLSPR ?to LR_OPERATION.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_OPERATION.
      endtry.
      if LR_OPERATION is bound.
        move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MC.
          check LR_PR_MC is bound.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method ZIF_VCXI_FFSP_ADJ_FIDIM~CALC_FIDIM_OUT.

    data: LS_FIDIM_IN  type        ZVCXI_FFSP_S_FIDIM,
          LS_FIDIM_OUT type        ZVCXI_FFSP_S_FIDIM,
          LS_GLTIN     type        ZVCXI_FFS_S_GLTIN,
          LS_SURWT     type        ZVCXI_F0S_S_SURWT.
    data: LT_GATE       type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MC_GLUE type ref to ZCL_VCXI_FFSP_PR_MC_GLUE.


*** Get first inbound Dimensions as base
    read table CT_FIDIM into LS_FIDIM_OUT index 1.

***--------------------------------------------------------------------------------------
*** Collect inbound Dimensions
    loop at CT_FIDIM into LS_FIDIM_IN from 2.
***   Adjust Film Width
      if ZCL_VCXI_XCS_SERVICE_CALC=>COMPARE_WITH_ANY( IF_CALCV_1     = LS_FIDIM_IN-FIWID
                                                      IF_CALCV_UOM_1 = LS_FIDIM_IN-FIWID_UOM
                                                      IF_CALCV_2     = LS_FIDIM_OUT-FIWID
                                                      IF_CALCV_UOM_2 = LS_FIDIM_OUT-FIWID_UOM
                                                      IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_GT ) eq ABAP_TRUE.
        move LS_FIDIM_IN-FIWID     to LS_FIDIM_OUT-FIWID.
        move LS_FIDIM_IN-FIWID_UOM to LS_FIDIM_OUT-FIWID_UOM.
      endif.

***   Calculate Internal Thickness
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIDIM_IN-FITIN
                                                          IF_CALCV_UOM_1 = LS_FIDIM_IN-FITIN_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITIN
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITIN_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITIN
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITIN_UOM ).

***   Calculate External Thickness
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIDIM_IN-FITEX
                                                          IF_CALCV_UOM_1 = LS_FIDIM_IN-FITEX_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITEX
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITEX_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITEX
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITEX_UOM ).
***   Calculate Surface Weight
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_FIDIM_IN-SURWT
                                                          IF_CALCV_UOM_1 = LS_FIDIM_IN-SURWT_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-SURWT
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-SURWT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-SURWT
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-SURWT_UOM ).
    endloop.

*** Number of Outs
    move 1 to LS_FIDIM_OUT-NOOUT.

***--------------------------------------------------------------------------------------
*** Get all Glues
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSP_PR_MC_GLUE=>C_IPRVT_MC_GLUE
                                     IF_INUSE = ABAP_TRUE ).

*** Add Information of all Glues
    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_MC_GLUE.

***   Get Glue Thickness
      LR_PR_MC_GLUE->GET_GLTIN( importing ES_GLTIN = LS_GLTIN ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_GLTIN-GLTIN
                                                          IF_CALCV_UOM_1 = LS_GLTIN-GLTIN_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-FITIN
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-FITIN_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-FITIN
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-FITIN_UOM ).

***   Get Surface Weight
      LR_PR_MC_GLUE->GET_SURWT( importing ES_SURWT = LS_SURWT ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                          IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                          IF_CALCV_2     = LS_FIDIM_OUT-SURWT
                                                          IF_CALCV_UOM_2 = LS_FIDIM_OUT-SURWT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = LS_FIDIM_OUT-SURWT
                                                          EF_CALCV_UOM   = LS_FIDIM_OUT-SURWT_UOM ).
    endloop.


***--------------------------------------------------------------------------------------
*** Receive defined Dimensions
    free CT_FIDIM.
    append LS_FIDIM_OUT to CT_FIDIM.

  endmethod.
