
class ZCL_VCXI_XCM_MBQ_STP_S301 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  abstract
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.

  methods FILL_IDAT
  abstract
    importing
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
      !IR_SVC type ref to /VCXI/CL_VKSRA_SVC
      !IS_ACTDAT_CNF type ZVCXI_XCM_MBQ_S_ACTDAT_CNF
    raising
      /VCXI/CX_CKX .
  methods ADD_SVCEV
    changing
      !CS_SVCEL type ZVCXI_XCI_S_SVCEL
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCM_MBQ_STP_S301 definition
class ZCL_VCXI_XCM_MBQ_STP_S301 implementation.
  method ADD_SVCEV.

*** Activation Event for Root Element as Roots are not create but kept
    if CS_SVCEL-IPARE is initial.
      append value #( IEVNS = '10'
                      IEVNT = /VCXI/CL_VKSC_REGELMNT=>C_IEVNT_ACTIVATED
                    ) to CS_SVCEL-T_SVCEV.
    endif.

  endmethod.
  method EXECUTE.

    data: LS_MATLI  type ZVCXI_XCM_MBQ_S_MATLI.
    data: LR_ACTDAT   type ref to DATA,
          LR_SVC      type ref to /VCXI/CL_VKSRA_SVC,
          LR_CUPRFL   type ref to /VCXI/CL_VKSC_CUPRFL,
          LR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC.
    field-symbols: <S_ACTDAT_CNF> type ZVCXI_XCM_MBQ_S_ACTDAT_CNF.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Create Configuration
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CNF ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CNF ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_CNF>.

***     Configuration done via LO-VC
        if <S_ACTDAT_CNF>-T_VALUE is not initial.
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***--------------------------------------------------------------------------------------
***     Get original SVC
        LR_SVC = ME->R_DCO_INPUT->R_BOB_SDOC->GET_SVC( IF_POSNR = ME->R_DCO_INPUT->F_POSNR ).

***     Load Target SmartVC Profile
        LR_CUPRFL = /VCXI/CL_VKSC_CUPRFL=>GET_INSTANCE_BY_CMPRK( IS_CMPRK = <S_ACTDAT_CNF>-S_CMPRK ).

***     Build Integration Data Service
        LR_IDAT_SVC = ZCL_VCXI_XCI_IDAT_SVC=>CREATE( IS_CMPRK = <S_ACTDAT_CNF>-S_CMPRK
                                                     IF_IEALI = 'X_IDATSPV' ).

***     Set Application Data
        LR_IDAT_SVC->SET_SVCAD( IS_SVCAD = <S_ACTDAT_CNF>-S_SVCAD ).

***     Fill Integration Data
        ME->FILL_IDAT( IR_IDAT_SVC   = LR_IDAT_SVC
                       IR_SVC        = LR_SVC
                       IS_ACTDAT_CNF = <S_ACTDAT_CNF> ).


***------------------------------------------------------------------------------------------------
***     Save Integration Data if requested
        if ME->R_DCO_INPUT->S_START-FSIDA eq ABAP_TRUE.
          LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = ZCL_VCXI_XCI_IDAT_SVC=>C_FCODE_SAVE ).
***       Integration Data & was saved.
          ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCIU'
                                           IF_MSGTY = 'S'
                                           IF_MSGNO = '101'
                                           IF_MSGV1 = LR_IDAT_SVC->/VCXI/IF_CKX_OBJECT~GET_GUID( ) ).
        endif.

***------------------------------------------------------------------------------------------------
***     Serialize Integration Data and Update Material List
        <S_ACTDAT_CNF>-IDAT_XML = LR_IDAT_SVC->SERIALIZE( ).
        ME->R_DCO_OUTPUT->UPDATE_MATLI( IS_MATLI = LS_MATLI ).

***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
