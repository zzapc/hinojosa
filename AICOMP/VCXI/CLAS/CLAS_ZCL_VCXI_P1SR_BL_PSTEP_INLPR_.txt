
class ZCL_VCXI_P1SR_BL_PSTEP_INLPR definition
  public
  inheriting from ZCL_VCXI_P1SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .

  constants C_IPSTP_INLPR type /VCXI/VSMC_IPSTP value 'P1_PS_INLPR' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_INLPR
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .
  methods GET_NOCOL
    importing
      !IF_TINK type ZVCXI_PXS_TINK optional
    returning
      value(RF_NOCOL) type ZVCXI_P0S_NOCOL
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods ADJ_FEATURE
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  data F_PRSID type ZVCXI_P0S_PRSID .
  data F_TPRIN type ZVCXI_PXS_TPRIN .
  data S_PRARE type ZVCXI_P0S_S_PRARE .
  data S_PRMUT type ZVCXI_PXS_S_PRMUT .
  data T_MS_INK type ZVCXI_PXSR_TT_MS_INK .
  data T_MS_TOOL type ZVCXI_P0SR_TT_MS_TOOL .

  methods ADD_SPVRE_MC_INK
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_TOOL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_PRINT_A
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_INPLIN
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MARK
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MS_DINK
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MS_INK
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SR_BL_PSTEP_INLPR definition
class ZCL_VCXI_P1SR_BL_PSTEP_INLPR implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - Number of Colors (analog)
    try.
        IR_RTE_PSTEP->SET_RTE_SAREC( IF_IAATY  = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_IAATY_NOCOL
                                     II_ARECN  = value #( ( SIGN   = 'I'
                                                            OPTION = 'LE'
                                                            LOW    = ME->GET_NOCOL( ) ) )
                                     IF_MAXSEL = 1
                                     IF_ASORT  = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING ).
      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Number of additional color changes
    try.
        IR_RTE_PSTEP->SET_RTE_SAREC( IF_IAATY  = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_IAATY_NOACC
                                     II_ARECN  = value #( ( SIGN   = 'I'
                                                            OPTION = 'LE'
                                                            LOW    = ME->S_PRMUT-NOACC ) )
                                     IF_MAXSEL = 1
                                     IF_ASORT  = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING
                                     IF_ARECM  = conv #( ME->S_PRMUT-NOACC ) ).
      catch /VCXI/CX_CKX.
    endtry.

*** Aspect - Number of additional tool changes
    try.
        IR_RTE_PSTEP->SET_RTE_SAREC( IF_IAATY  = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_IAATY_NOATC
                                     II_ARECN  = value #( ( SIGN   = 'I'
                                                            OPTION = 'LE'
                                                            LOW    = ME->S_PRMUT-NOATC ) )
                                     IF_MAXSEL = 1
                                     IF_ASORT  = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING
                                     IF_ARECM  = conv #( ME->S_PRMUT-NOATC ) ).
      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LS_MS_INK type ZVCXI_PXSR_S_MS_INK.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Print Type
        when 'PX_LT_VP_TPRIN'.
          append value #( SIGN = 'I' OPTION = 'EQ' LOW = ME->F_TPRIN ) to LI_LVVAL.

***     Number of Colors (analog)
        when 'PX_LT_DP_NOCOL'.
          LF_LDVAL = ME->GET_NOCOL( ).
          LF_LDUOM = 'ST'.

***     Ink Type
        when 'PX_LT_VP_TINK'.
          loop at ME->T_MS_INK into LS_MS_INK.
            append value #( SIGN = 'I' OPTION = 'EQ' LOW = LS_MS_INK-TINK ) to LI_LVVAL.
          endloop.
          sort LI_LVVAL.
          delete adjacent duplicates from LI_LVVAL.

        when others.
***       Number of Colors (analog) per Ink Type
          data(LF_ILTYP) = LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
          if LF_ILTYP cp 'PX_LT_DP_NOCOL_*'.
            LF_LDVAL = ME->GET_NOCOL( IF_TINK = conv #( LF_ILTYP+15 ) ).
            LF_LDUOM = 'ST'.
          else.
            continue.
          endif.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_INK.

    data: LS_MS_INK type ZVCXI_PXSR_S_MS_INK.
    data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_INK type ref to /VCXI/CL_VKSR_SPVRE.


***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_INK'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***------------------------------------------------------------------------------------------------
    loop at ME->T_MS_INK into LS_MS_INK.

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_INK
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_INK to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_INK->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Material Number
      LR_SPVRE_MC_INK->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_INK-MATNR
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Text
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_TEXT
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LS_MS_INK-TEXT
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Set Coverage
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_COVRG
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LS_MS_INK-COVRG
                                                      UNIT  = LS_MS_INK-COVRG_UOM
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

****------------------------------------------------------------------------------------------------
***   Set Average Consumption
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_AVGCO_W
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LS_MS_INK-AVGCO
                                                      UNIT  = LS_MS_INK-AVGCO_UOM
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Set Average Consumption Per
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_AVGCP_A
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LS_MS_INK-AVGCP
                                                      UNIT  = LS_MS_INK-AVGCP_UOM
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Set Procurement Option
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_PURCH
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LS_MS_INK-PURCH
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

      check LS_MS_INK-PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

***   Set Price
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_PRICE
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LS_MS_INK-PRICE
                                                      CURKY = LS_MS_INK-PRICE_CURR
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Price Unit
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_PRICP_W
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LS_MS_INK-PRICP
                                                      UNIT  = LS_MS_INK-PRICP_UOM
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Vendor
      LR_SPVRE_MC_INK->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_INK=>C_PARID_LIFNR
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LS_MS_INK-LIFNR
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endloop.

  endmethod.
  method ADD_SPVRE_MC_TOOL.

    data: LS_MS_TOOL type ZVCXI_P0SR_S_MS_TOOL.
    data: LR_SPVCE         type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_TOOL type ref to /VCXI/CL_VKSR_SPVRE.


    check ME->T_MS_TOOL is not initial.

    loop at ME->T_MS_TOOL into LS_MS_TOOL.
***------------------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = switch #( LS_MS_TOOL-FOTUT when ABAP_TRUE then 'MC_TOOL_OTU'
                                                                                                      else 'MC_TOOL' )
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      LR_SPVRE_MC_TOOL = new #( IR_SPVCE  = LR_SPVCE
                                IR_PARENT = IR_SPVRE_PARENT ).
      append LR_SPVRE_MC_TOOL to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_TOOL->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Material Number
      LR_SPVRE_MC_TOOL->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_TOOL-MATNR
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Set Average Consumption
      LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCO_P
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                       ATFLV = 1
                                                       UNIT  = 'ST'
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Average Consumption Per
      LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCP_P
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                       ATFLV = LS_MS_TOOL-LTITO
                                                       UNIT  = LS_MS_TOOL-LTITO_UOM
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

    endloop.

  endmethod.
  method ADJ_FEATURE.

    SUPER->ADJ_FEATURE( changing CT_FEATURE = CT_FEATURE ).

*** Number of Colors
    /VCXI/CL_CKI_IQC=>MODIFY_FEATURE( exporting IS_FEATURE = value #( FTNAM = 'numberColors'     FTVAL = ME->GET_NOCOL( ) )
                                      changing  CT_FEATURE = CT_FEATURE ).

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_INLPR type ref to ZCL_VCXI_P1SR_BL_PSTEP_INLPR.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_INLPR.

***----------------------------------------------------------------------------
*** Printing Data
    if ME->F_TPRIN eq LR_BL_PSTEP_INLPR->F_TPRIN and
       ME->F_PRSID eq LR_BL_PSTEP_INLPR->F_PRSID and
       ME->S_PRARE eq LR_BL_PSTEP_INLPR->S_PRARE and
       ME->S_PRMUT eq LR_BL_PSTEP_INLPR->S_PRMUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

***----------------------------------------------------------------------------
*** Inks and Tools
    if ME->T_MS_INK  eq LR_BL_PSTEP_INLPR->T_MS_INK and
       ME->T_MS_TOOL eq LR_BL_PSTEP_INLPR->T_MS_TOOL.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_A to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_INLPR type ref to ZCL_VCXI_P1SR_BL_PSTEP_INLPR.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_INLPR.

***--------------------------------------------------------------------------------------
*** Printing Data
    move ME->F_TPRIN       to LR_BL_PSTEP_INLPR->F_TPRIN.
    move ME->F_PRSID       to LR_BL_PSTEP_INLPR->F_PRSID.
    move ME->S_PRARE       to LR_BL_PSTEP_INLPR->S_PRARE.
    move ME->S_PRMUT       to LR_BL_PSTEP_INLPR->S_PRMUT.

***--------------------------------------------------------------------------------------
*** Inks
    move ME->T_MS_INK      to LR_BL_PSTEP_INLPR->T_MS_INK.
    move ME->T_MS_TOOL     to LR_BL_PSTEP_INLPR->T_MS_TOOL.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'PX_AT_PRINT_A'.
        ME->FILL_SPVRE_ADDON_PRINT_A( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                                IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                                IR_ARBPL       = IR_ARBPL
                                      changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_PRINT_A.

***------------------------------------------------------------------------------------------------
*** Set Print Type
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_PARID_TPRIN
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->F_TPRIN
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Print Side
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_PARID_PRSID
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->F_PRSID
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Printable Area
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_PARID_PRARE
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PRARE-PRARE
                                                   UNIT  = ME->S_PRARE-PRARE_UOM
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Additional Number of Color Changes
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_PARID_NOACC
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PRMUT-NOACC
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Additional Number of Ink Tool Changes
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_PARID_NOATC
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PRMUT-NOATC
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*** Set Additional Number of Design Changes
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ADDON_PRINT_A=>C_PARID_NODDG
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_PRMUT-NODDG
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Ink
    ME->ADD_SPVRE_MC_INK( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                    IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                    IR_ARBPL        = IR_ARBPL
                          changing  CT_SPVRE        = CT_SPVRE ).

*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = IR_SPVRE_ADDON
                           changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_NOCOL.

    data: LT_MS_INK type ZVCXI_PXSR_TT_MS_INK.


***--------------------------------------------------------------------------------------
*** Get all Inks (Analog or Digital)
    LT_MS_INK = ME->T_MS_INK.

    if IF_TINK is supplied.
***   Filter by Ink Type
      delete LT_MS_INK where TINK ne IF_TINK.
    else.
***   Filter by Print Technology (Analog Inks only)
      loop at LT_MS_INK into data(LS_MS_INK).
        if ZCL_VCXI_PXSS_CUST_PRINT=>GET_TINK_PRTEC( IF_TINK = LS_MS_INK-TINK ) ne ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_ANALOG.
          delete LT_MS_INK.
        endif.
      endloop.
    endif.

***--------------------------------------------------------------------------------------
*** Return Number of Inks
    move LINES( LT_MS_INK ) to RF_NOCOL.

  endmethod.
  method GET_SPVRE_ACTVY.

*    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
*          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.
*
****------------------------------------------------------------------------------------------------
**** Get Customizing Element for Activity Printing
*    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_PRINT'
*                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).
*
**** Create Supervisor Runtime Element
*    create object LR_SPVRE_ACTVY
*      exporting
*        IR_SPVCE  = LR_SPVCE
*        IR_PARENT = IR_SPVRE_ARBPL.
*    append LR_SPVRE_ACTVY to RT_SPVRE.
*
**** Set In Use
*    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).
*
****------------------------------------------------------------------------------------------------
**** Set Printable Area
*    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_ACTVY_PRINT_A=>C_PARID_PRARE
*                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
*                                                   ATFLV = ME->S_PRARE-PRARE
*                                                   UNIT  = ME->S_PRARE-PRARE_UOM
*                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
*
****------------------------------------------------------------------------------------------------
**** Add Material Consumption for Ink
*    ME->ADD_SPVRE_MC_INK( exporting IR_BL_RTESPV    = IR_BL_RTESPV
*                                    IR_SPVRE_PARENT = LR_SPVRE_ACTVY
*                                    IR_ARBPL        = IR_ARBPL
*                          changing  CT_SPVRE        = RT_SPVRE ).
*
**** Add Material Consumption for Tool
*    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
*                                     IR_SPVRE_PARENT = LR_SPVRE_ACTVY
*                           changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_SPVRE_MF.

*** No Material Flow In
    return.

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'F_TPRIN'      VALUE = ref #( ME->F_TPRIN     ) ) to RT_DATA.
    append value #( NAME = 'F_PRSID'      VALUE = ref #( ME->F_PRSID     ) ) to RT_DATA.
    append value #( NAME = 'S_PRARE'      VALUE = ref #( ME->S_PRARE     ) ) to RT_DATA.
    append value #( NAME = 'T_MS_INK'     VALUE = ref #( ME->T_MS_INK    ) ) to RT_DATA.
    append value #( NAME = 'T_MS_TOOL'    VALUE = ref #( ME->T_MS_TOOL   ) ) to RT_DATA.
    append value #( NAME = 'S_PRMUT'      VALUE = ref #( ME->S_PRMUT     ) ) to RT_DATA.

  endmethod.
  method INIT_BY_INPLIN.

    data: LF_SETTN type ZVCXI_PXS_SETTN.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_INPLIN type ref to ZCL_VCXI_P1SS_PR_INPLIN.


***--------------------------------------------------------------------------------------
*** Get Reference for Inline Printed Liner
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_INPLIN.
      LR_PR_INPLIN ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_INPLIN  is bound.


***--------------------------------------------------------------------------------------
*** Get Print Type
    ME->F_TPRIN = LR_PR_INPLIN->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( ).

*** Get Print Side
    ME->F_PRSID = LR_PR_INPLIN->GET_PRSID( ).

*** Get Printable Area
    ME->S_PRARE = LR_PR_INPLIN->GET_PRARE( ).

*** Get Tool Set Number
    LF_SETTN = LR_PR_INPLIN->GET_SETTN( ).
    if LF_SETTN is not initial.
      append value #( MATNR = LF_SETTN ) to ME->T_MS_TOOL.
    endif.

*** Get Print Mutation
    ME->S_PRMUT = value #( NOACC = LR_PR_INPLIN->GET_NOACC( )
                           NOATC = LR_PR_INPLIN->GET_NOATC( )
                           NODDG = LR_PR_INPLIN->GET_NODDG( )
                          ).

  endmethod.
  method INIT_BY_MARK.

    data: LF_ACONO type ZVCXI_P0SS_ACONO.
    data: LS_COVRG type ZVCXI_P0S_S_COVRG.
    data: LR_GATE    type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MARK type ref to ZCL_VCXI_PXSS_PR_MARK.
    field-symbols: <S_MS_INK> type ZVCXI_PXSR_S_MS_INK.


*** Loop at defined Markings
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MARK.
      LR_PR_MARK ?= LR_GATE->R_CLSPR.

***   Get Ink of Assigned Color Number
      LF_ACONO = LR_PR_MARK->GET_ACONO( ).
      check LINE_EXISTS( ME->T_MS_INK[ ACONO = LF_ACONO ] ).
      assign ME->T_MS_INK[ ACONO = LF_ACONO ] to <S_MS_INK>.

***   Add Marking Coverage to Ink Coverage
      LS_COVRG = LR_PR_MARK->GET_COVRG( ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = <S_MS_INK>-COVRG
                                                          IF_CALCV_UOM_1 = <S_MS_INK>-COVRG_UOM
                                                          IF_CALCV_2     = LS_COVRG-COVRG
                                                          IF_CALCV_UOM_2 = LS_COVRG-COVRG_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = <S_MS_INK>-COVRG
                                                          EF_CALCV_UOM   = <S_MS_INK>-COVRG_UOM ).
    endloop.

  endmethod.
  method INIT_BY_MS_DINK.

    data: LS_APWGT type ZVCXI_PXS_S_APWGT.
    data: LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_DINK type ref to ZCL_VCXI_PXSS_PR_MS_DINK.
    field-symbols: <S_MS_INK> type ZVCXI_PXSR_S_MS_INK.


***--------------------------------------------------------------------------------------
*** Loop at defined Digital Inks
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_DINK.
      LR_PR_MS_DINK ?= LR_GATE->R_CLSPR.

      LS_APWGT = LR_PR_MS_DINK->GET_APWGT( ).
      check LS_APWGT-APWGT is not initial.

      append value #( MATNR   = LR_PR_MS_DINK->GET_MATNR( )
                      TINK    = LR_PR_MS_DINK->GET_TINK( )
                      S_COVRG = LR_PR_MS_DINK->GET_COVRG( )
                    ) to ME->T_MS_INK assigning <S_MS_INK>.

***--------------------------------------------------------------------------------------
***   Calculate Average Consumption by Application Weight
      move 1000 to <S_MS_INK>-AVGCP.
      move 'M2' to <S_MS_INK>-AVGCP_UOM.

      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_APWGT-APWGT
                                                          IF_CALCV_UOM_1 = LS_APWGT-APWGT_UOM
                                                          IF_CALCV_2     = <S_MS_INK>-AVGCP
                                                          IF_CALCV_UOM_2 = <S_MS_INK>-AVGCP_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = <S_MS_INK>-AVGCO
                                                          EF_CALCV_UOM   = <S_MS_INK>-AVGCO_UOM ).

***--------------------------------------------------------------------------------------
***   Purchasing Info
      <S_MS_INK>-PURCH   = LR_PR_MS_DINK->GET_PURCH( ).
      <S_MS_INK>-LIFNR   = LR_PR_MS_DINK->GET_LIFNR( ).
      <S_MS_INK>-S_PRICE = LR_PR_MS_DINK->GET_PRICE( ).
      <S_MS_INK>-S_PRICP = LR_PR_MS_DINK->GET_PRICP( ).

    endloop.

  endmethod.
  method INIT_BY_MS_INK.

    data: LF_INKTN type ZVCXI_PXS_INKTN,
          LF_APCTN type ZVCXI_PXS_APCTN,
          LF_MSLTN type ZVCXI_PXS_MSLTN,
          LF_ANITN type ZVCXI_PXS_ANITN.
    data: LS_APWGT type ZVCXI_PXS_S_APWGT.
    data: LT_GATE_INK type /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_INK type ref to ZCL_VCXI_PXSS_PR_MS_INK.
    field-symbols: <S_MS_INK> type ZVCXI_PXSR_S_MS_INK.


***--------------------------------------------------------------------------------------
*** Get all Inks based on Inline Printed Liner
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P1SS_PR_INPLIN.
      LT_GATE_INK = LR_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                        IF_INUSE  = ABAP_TRUE
                                        IF_SORTED = ABAP_TRUE ).
      exit.
    endloop.

***--------------------------------------------------------------------------------------
*** Loop at defined Inks
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_INK.
      LR_PR_MS_INK ?= LR_GATE->R_CLSPR.

      append initial line to ME->T_MS_INK assigning <S_MS_INK>.
      <S_MS_INK>-ACONO = LINE_INDEX( LT_GATE_INK[ TABLE_LINE = LR_GATE ] ).
      <S_MS_INK>-MATNR = LR_PR_MS_INK->GET_MATNR( ).
*      <S_MS_INK>-TEXT  = LR_PR_MS_INK->GET_TEXT( ).
      <S_MS_INK>-TINK  = LR_PR_MS_INK->GET_TINK( ).

***   Ink Coverage (Marking added separately)
      <S_MS_INK> = corresponding #( base ( <S_MS_INK> ) LR_PR_MS_INK->GET_COVRG( ) ).

***--------------------------------------------------------------------------------------
***   Calculate Average Consumption by Application Weight
      LS_APWGT = LR_PR_MS_INK->GET_APWGT( ).

      move 1000 to <S_MS_INK>-AVGCP.
      move 'M2' to <S_MS_INK>-AVGCP_UOM.

      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_APWGT-APWGT
                                                          IF_CALCV_UOM_1 = LS_APWGT-APWGT_UOM
                                                          IF_CALCV_2     = <S_MS_INK>-AVGCP
                                                          IF_CALCV_UOM_2 = <S_MS_INK>-AVGCP_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = <S_MS_INK>-AVGCO
                                                          EF_CALCV_UOM   = <S_MS_INK>-AVGCO_UOM ).

***--------------------------------------------------------------------------------------
***   Purchasing Info
      <S_MS_INK>-PURCH   = LR_PR_MS_INK->GET_PURCH( ).
      <S_MS_INK>-LIFNR   = LR_PR_MS_INK->GET_LIFNR( ).
      <S_MS_INK>-S_PRICE = LR_PR_MS_INK->GET_PRICE( ).
      <S_MS_INK>-S_PRICP = LR_PR_MS_INK->GET_PRICP( ).

***--------------------------------------------------------------------------------------
***   Ink Tool
      LF_INKTN = LR_PR_MS_INK->GET_INKTN( ).
      if LF_INKTN is not initial.
        append value #( MATNR = LF_INKTN ) to ME->T_MS_TOOL.
      endif.
***   Adapter/Print Cylinder
      LF_APCTN = LR_PR_MS_INK->GET_APCTN( ).
      if LF_APCTN is not initial.
        append value #( MATNR = LF_APCTN ) to ME->T_MS_TOOL.
      endif.
***   Mounting Sleeve
      LF_MSLTN = LR_PR_MS_INK->GET_MSLTN( ).
      if LF_MSLTN is not initial.
        append value #( MATNR = LF_MSLTN ) to ME->T_MS_TOOL.
      endif.
***   Anilox Roll Tool
      LF_ANITN = LR_PR_MS_INK->GET_ANITN( ).
      if LF_ANITN is not initial.
        append value #( MATNR = LF_ANITN ) to ME->T_MS_TOOL.
      endif.

    endloop.

  endmethod.
  method INIT_BY_SPEC.

***--------------------------------------------------------------------------------------
*** Initialize by Inline Printed Liner
    ME->INIT_BY_INPLIN( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Initialize Ink Information
    ME->INIT_BY_MS_DINK( IT_PRVDR = IT_PRVDR ).
    ME->INIT_BY_MS_INK(  IT_PRVDR = IT_PRVDR ).
    ME->INIT_BY_MARK(    IT_PRVDR = IT_PRVDR ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.
  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

  endmethod.
