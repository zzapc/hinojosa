
class ZCL_VCXI_PXSS_EA_FASTD definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods CREATE_FDMDL
    importing
      !IF_FDMDL type ZVCXI_PXSS_FDMDL
      !IF_IFDMV type ZVCXI_PXSS_IFDMV
    returning
      value(RR_API_FDMDL) type ref to ZCL_VCXI_PXSS_API_FDMDL
    raising
      /VCXI/CX_CKX .
  methods GET_FDMDL
    returning
      value(RT_API_FDMDL) type ZVCXI_PXSS_TT_API_FDMDL
    raising
      /VCXI/CX_CKX .
  methods LOAD_BOOSTER
    importing
      !IR_BOOSTER type ref to ZCL_VCXI_XCS_BOOSTER
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_FASTD type ref to ZCL_VCXI_PXSS_PR_FASTD .
private section.
endclass. "ZCL_VCXI_PXSS_EA_FASTD definition
class ZCL_VCXI_PXSS_EA_FASTD implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_FASTD.
      catch CX_SY_MOVE_CAST_ERROR.
***     Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
  method CREATE_FDMDL.

    data: LR_BL_FDMDL type ref to ZCL_VCXI_PXSS_BL_FDMDL.

*** Create new Fast Data Model (don't use the Model directly, as gates are not set)
    LR_BL_FDMDL = ZCL_VCXI_PXSS_BL_FDMDL=>CREATE( IR_GATE_FASTD = ME->R_GATE
                                                  IF_FDMDL      = IF_FDMDL
                                                  IF_IFDMV      = IF_IFDMV ).

*** Determine Variant again after Gates where set
    LR_BL_FDMDL->DET_IFDMV( ).

*** Create API for the new Model
    RR_API_FDMDL = new #( IR_BL_FDMDL = LR_BL_FDMDL ).

  endmethod.
  method GET_FDMDL.

    data: LR_BL_FDMDL type ref to ZCL_VCXI_PXSS_BL_FDMDL.


    loop at ME->R_PR_FASTD->GET_BL_FDMDL( ) into LR_BL_FDMDL.
      append new #( IR_BL_FDMDL = LR_BL_FDMDL ) to RT_API_FDMDL.
    endloop.

  endmethod.
  method LOAD_BOOSTER.

    check IR_BOOSTER is bound and
          IR_BOOSTER->F_NIDAT is not initial.

*** Get Integration Data from Booster
    data(LR_IDAT_SVC) = ZCL_VCXI_XCI_IDAT_SVC=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( conv #( IR_BOOSTER->F_NIDAT ) ).

*** Get Provider for Integration Data
    data(LT_GATE) = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCS_PR_IDATSPV=>C_IPRVT_IDATSPV ).
    loop at LT_GATE into data(LR_GATE).
      if LR_GATE->R_CLSPR is instance of ZCL_VCXI_XCS_PR_IDATSPV.
        cast ZCL_VCXI_XCS_PR_IDATSPV( LR_GATE->R_CLSPR )->SET_IDAT( cast ZCL_VCXI_XCI_IDAT_SVC( LR_IDAT_SVC ) ).
      endif.
    endloop.

  endmethod.
