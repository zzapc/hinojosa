
class ZCL_VCXI_PFSR_PR_RTESPV definition
  public
  inheriting from ZCL_VCXI_P0SR_PR_RTESPV
  create public .

public section.

  methods GET_UCB_RTESEL
    returning
      value(RR_RTESEL_UCB) type ref to ZCL_VCXI_XCSR_BL_PRTE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV optional
    raising
      /VCXI/CX_CKX .

  methods FILL_PROD
    redefinition .
protected section.

  methods IS_IN_LINE_UCB_RTESPV
    importing
      !IR_PRVDR type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR_RTESPV type /VCXI/VKSR_TT_GATE
    returning
      value(RF_RETURN) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_UCB
    importing
      !IR_GATE_SPEC type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_GATE_UCB) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods GET_MFMI
    redefinition .
  methods GET_MFSI
    redefinition .
  methods GET_PRVDR_BASE
    redefinition .
private section.
endclass. "ZCL_VCXI_PFSR_PR_RTESPV definition
class ZCL_VCXI_PFSR_PR_RTESPV implementation.
method CONSTRUCTOR.

  data:  LR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV.

*** Use or create the BL Routing Supervisor
  if IR_BL_RTESPV is bound.
    move IR_BL_RTESPV to LR_BL_RTESPV.
  else.
    create object LR_BL_RTESPV
      type
        ZCL_VCXI_PFSR_BL_RTESPV
      exporting
        IR_GATE                    = IR_GATE.
  endif.

*** Call Super
  call method SUPER->CONSTRUCTOR
    exporting
      IR_GATE      = IR_GATE
      IR_BL_RTESPV = LR_BL_RTESPV.

endmethod.
method FILL_PROD.

  data:  LS_EXQTY        type        /VCXI/VKCR_S_EXQTY.
  data:  LT_LAMI_RTESEL  type        ZVCXI_P0SR_TT_LAMI_RTESEL.
  data:  LR_UCB_RTESEL   type ref to ZCL_VCXI_XCSR_BL_PRTE,
         LR_BL_RTESPV    type ref to ZCL_VCXI_PFSR_BL_RTESPV,
         LR_RTEFIL       type ref to ZCL_VCXI_XCSR_BL_PRTE.

  check ME->R_BL_RTESPV is bound.

  if ME->R_PR_RTESPV_HL is not bound.
*** Get Explosion Quantity
    move ME->GET_EXQTY( )   to LS_EXQTY.

***----------------------------------------------------------------------------
*** Refresh Auto
    ME->REFRESH_AUTO( ).
    ME->R_GATE->RAISE_EVENTS( ).

    if ME->R_RTESEL is not bound.
***   No Selected Route defined.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCSR'
                                            IF_MSGNO = '310' ).
    endif.

*** Get Selected Route of Laminating
    LT_LAMI_RTESEL = ME->GET_LAMI_RTESEL( ).

*** Get Selected Route of UCB
    LR_UCB_RTESEL = ME->GET_UCB_RTESEL( ).

***----------------------------------------------------------------------------
*** Copy Selected Route to Filled Route
    move ME->R_RTESEL->COPY( ) to LR_RTEFIL.

    move ME->R_BL_RTESPV ?to LR_BL_RTESPV.
    LR_BL_RTESPV->SET_PF_BL_PRTE( IR_BL_PRTE     = LR_RTEFIL
                                  IR_UCB_RTESEL  = LR_UCB_RTESEL
                                  IT_LAMI_RTESEL = LT_LAMI_RTESEL
                                  IS_EXQTY       = LS_EXQTY ).

    raise event PROD_FILLED exporting IR_BL_PRTE = LR_RTEFIL.

  else.
***----------------------------------------------------------------------------
*** Use Higher Level
    ME->R_PR_RTESPV_HL->FILL_PROD( ).
  endif.

endmethod.
method GET_MFMI.

  data: LS_MFMI_P type          ZVCXI_P0SR_S_MFMI_P,
        LS_PCDIM  type          ZVCXI_P0SP_S_PCDIM,
        LS_CALIP  type          ZVCXI_P0SS_S_CALIP,
        LS_EVQTY  type          ZVCXI_XCSR_S_EVQTY,
        LS_KAUSF  type          ZVCXI_XCSP_S_KAUSF,
        LS_BAWGT  type          ZVCXI_P0S_S_BAWGT,
        LS_BAWGP  type          ZVCXI_P0S_S_BAWGP.
  data: LT_GATE        type          /VCXI/VKSR_TT_GATE,
        LT_GATE_SHTDIM type          /VCXI/VKSR_TT_GATE.
  data: LR_GATE        type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SPEC   type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SHTPR  type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SHTDIM type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_MS_SHTPR type ref to   ZCL_VCXI_PFSS_PR_MS_SHTPR,
        LR_SHTDIM      type ref to   ZIF_VCXI_P0SS_SHTDIM,
        LR_PR_PSCALE   type ref to   ZCL_VCXI_XCS_PR_PSCALE.
  field-symbols: <T_MFMI>   type standard table.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).

  check LR_GATE_SPEC is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Procurement
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSS_PR_MS_SHTPR=>C_IPRVT_PF_MS_SHTPR
                                   IF_INUSE = ABAP_TRUE ).
  check LT_GATE is not initial.

  loop at LT_GATE into LR_GATE_SHTPR.
*** Check is child of Specification
    check LR_GATE_SHTPR->GET_PARENT( ) eq LR_GATE_SPEC.
    try.
        move LR_GATE_SHTPR->R_CLSPR ?to LR_PR_MS_SHTPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_SHTPR.
    endtry.
    exit.
  endloop.

  check LR_PR_MS_SHTPR is bound.

***------------------------------------------------------------------------------------------------
*** Find Provider for Sheet Dimension
  LT_GATE_SHTDIM = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_P0SS_SHTDIM=>C_IPRVT_P0_SHTDIM
                                          IF_INUSE = ABAP_TRUE ).

  loop at LT_GATE_SHTDIM into LR_GATE_SHTDIM.
*** Check is child of Specification
    check LR_GATE_SHTDIM->GET_PARENT( ) eq LR_GATE_SPEC.
    try.
        move LR_GATE_SHTDIM->R_CLSPR ?to LR_SHTDIM.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_SHTDIM.
    endtry.
    exit.
  endloop.

  check LR_SHTDIM is bound.

*** Create Data Reference
  create data RR_MFMI type table of ZVCXI_P0SR_S_MFMI_P.
  assign RR_MFMI->* to <T_MFMI>.

  move LR_PR_MS_SHTPR->GET_MATNR( ) to LS_MFMI_P-MATNR.
  move LR_PR_MS_SHTPR->GET_PURCH( ) to LS_MFMI_P-PURCH.

  move ME->GET_EVQTY( ) to LS_EVQTY.
  LS_KAUSF = LR_PR_MS_SHTPR->GET_KAUSF( IS_EVQTY = LS_EVQTY ).
  move-corresponding LS_KAUSF to LS_MFMI_P.

  move 100                          to LS_MFMI_P-MFISP.
  move '%'                          to LS_MFMI_P-MFISP_UOM.

  move 1                            to LS_MFMI_P-MFICF.
  move 1                            to LS_MFMI_P-MFICP.

  move LR_PR_MS_SHTPR->GET_SANKA( ) to LS_MFMI_P-SANKA.

  LS_PCDIM = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_BFDIV ).

  move LS_PCDIM-PCLEN               to LS_MFMI_P-PCLEN.
  move LS_PCDIM-PCLEN_UOM           to LS_MFMI_P-PCLEN_UOM.

  move LS_PCDIM-PCWID               to LS_MFMI_P-PCWID.
  move LS_PCDIM-PCWID_UOM           to LS_MFMI_P-PCWID_UOM.

  LS_CALIP = LR_PR_MS_SHTPR->GET_CALIP( ).
  move LS_CALIP-CALIP               to LS_MFMI_P-PCHEI.
  move LS_CALIP-CALIP_UOM           to LS_MFMI_P-PCHEI_UOM.

  LS_BAWGT = LR_PR_MS_SHTPR->GET_BAWGT( ).
  move LS_BAWGT-BAWGT               to LS_MFMI_P-BAWGT.
  move LS_BAWGT-BAWGT_UOM           to LS_MFMI_P-BAWGT_UOM.

  LS_BAWGP = LR_PR_MS_SHTPR->GET_BAWGP( ).
  move LS_BAWGP-BAWGP               to LS_MFMI_P-BAWGP.
  move LS_BAWGP-BAWGP_UOM           to LS_MFMI_P-BAWGP_UOM.

  move LS_PCDIM-PCUPS               to LS_MFMI_P-PCUPS.

  move 'A'                          to LS_MFMI_P-PCDIR.

  move 'ZVCXI_P0_SHEET'             to LS_MFMI_P-PCTYP.

  move LR_PR_MS_SHTPR->GET_LIFNR( ) to LS_MFMI_P-LIFNR.

***------------------------------------------------------------------------------------------------
*** Find Provider for Price Scale
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCS_PR_PSCALE=>C_IPRVT_XCS_PSCALE
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    try.
***     Check Scale is part of Sheet Procurement
        check LR_GATE->GET_PARENT( ) eq LR_GATE_SHTPR.
        move LR_GATE->R_CLSPR ?to LR_PR_PSCALE.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
    check LR_PR_PSCALE is bound.

*** Add Price Scales
    append value #( ISVCE   = LR_GATE->F_ID
                    S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                    S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                    S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                  ) to LS_MFMI_P-T_PSCALE.
  endloop.

*** Append Material Flow Material to Data Reference
  append LS_MFMI_P to <T_MFMI>.

endmethod.
method GET_MFSI.

  data: LS_MFSI_P type          ZVCXI_P0SR_S_MFSI_P,
        LS_PCDIM  type          ZVCXI_P0SP_S_PCDIM.
  data: LR_GATE_SPEC    type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_COMP_SE type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_COMP_SE   type ref to   ZCL_VCXI_P0SS_PR_COMP_SE,
        LR_GATE_UCB     type ref to   /VCXI/CL_VKSR_GATE,
        LR_GATE_SHTDIM  type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_UCB       type ref to   ZCL_VCXI_PFSS_PR_UCB,
        LR_SHTDIM       type ref to   ZIF_VCXI_P0SS_SHTDIM.
  field-symbols: <T_MFSI>       type standard table.


***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.

***------------------------------------------------------------------------------------------------
*** Find Components SE as Parent of Specification
  LR_GATE_COMP_SE = ME->GET_PRVDR_COMP_SE( IR_GATE_SPEC = LR_GATE_SPEC ).
  if LR_GATE_COMP_SE is bound.
    LR_PR_COMP_SE ?= LR_GATE_COMP_SE->R_CLSPR.

*** Create Data Reference
    create data RR_MFSI type table of ZVCXI_P0SR_S_MFSI_P.
    assign RR_MFSI->* to <T_MFSI>.

*** Get PC Dimensions
    LS_PCDIM = LR_PR_COMP_SE->ZIF_VCXI_P0SS_PRODDIM~GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_PRODDIM=>C_POOTI_PRODUCT ).
    move-corresponding LS_PCDIM to LS_MFSI_P.

*** Append Material Flow SFG to Data Reference
    append LS_MFSI_P to <T_MFSI>.
  endif.


***------------------------------------------------------------------------------------------------
*** Find Provider for Unconverted Board
  LR_GATE_UCB = ME->GET_PRVDR_UCB( IR_GATE_SPEC = LR_GATE_SPEC ).
  if LR_GATE_UCB is bound.
    LR_PR_UCB ?= LR_GATE_UCB->R_CLSPR.

*** Find Provider for Sheet Dimension
    LR_GATE_SHTDIM = ME->GET_PRVDR_SHTDIM( IR_GATE_SPEC = LR_GATE_SPEC ).
    if LR_GATE_SHTDIM is bound.
      LR_SHTDIM ?= LR_GATE_SHTDIM->R_CLSPR.
    endif.
    check LR_SHTDIM is bound.

*** Create Data Reference
    create data RR_MFSI type table of ZVCXI_P0SR_S_MFSI_P.
    assign RR_MFSI->* to <T_MFSI>.

    LS_PCDIM = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_BFDIV ).
    move-corresponding LS_PCDIM to LS_MFSI_P.

*** Append Material Flow SFG to Data Reference
    append LS_MFSI_P to <T_MFSI>.
  endif.

endmethod.
method GET_PRVDR_BASE.

  data:  LT_GATE  type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE  type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for UCB
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PFSS_PR_UCB=>C_IPRVT_PF_UCB
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).
  loop at LT_GATE into LR_GATE.
***   Check is child of Specification
    if LR_GATE->GET_PARENT( ) eq IR_GATE_SPEC.
      move LR_GATE to RR_GATE_BASE.
      exit.
    endif.
  endloop.

***------------------------------------------------------------------------------------------------
  if RR_GATE_BASE is not bound.
*** Find Provider for Sheet Procurement
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PFSS_PR_MS_SHTPR=>C_IPRVT_PF_MS_SHTPR
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
***   Check is child of Specification
      if LR_GATE->GET_PARENT( ) eq IR_GATE_SPEC.
        move LR_GATE to RR_GATE_BASE.
        exit.
      endif.
    endloop.
  endif.


endmethod.
  method GET_PRVDR_UCB.

    data:  LT_GATE_UCB  type        /VCXI/VKSR_TT_GATE.
    data:  LR_GATE_UCB  type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Unconverted Board
    LT_GATE_UCB = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSS_PR_UCB=>C_IPRVT_PF_UCB
                                             IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE_UCB into LR_GATE_UCB.
***   Check is child of Specification
      check LR_GATE_UCB->GET_PARENT( ) eq IR_GATE_SPEC.
      move LR_GATE_UCB to RR_GATE_UCB.
      exit.
    endloop.

  endmethod.
method GET_UCB_RTESEL.

  data:          LR_GATE_SPEC      type ref to /VCXI/CL_VKSR_GATE,
                 LR_GATE_BASE      type ref to /VCXI/CL_VKSR_GATE,
                 LR_GATE_RTESPV    type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_RTESPV_UCB  type ref to ZCL_VCXI_PFSR_PR_RTESPV_UCB.
  data:          LT_GATE_RTESPV    type        /VCXI/VKSR_TT_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Routing Supervisor of Components
  LT_GATE_RTESPV = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PFSR_PR_RTESPV_UCB=>C_IPRVT_PF_RTESPV_UCB
                                          IF_INUSE = ABAP_TRUE ).
  check LT_GATE_RTESPV is not initial.

*** Get Base
  LR_GATE_SPEC = ME->GET_PRVDR_SPEC( ).
  check LR_GATE_SPEC is bound.
  LR_GATE_BASE = ME->GET_PRVDR_BASE( IR_GATE_SPEC = LR_GATE_SPEC ).
  check LR_GATE_BASE is bound.

***------------------------------------------------------------------------------------------------
*** Loop at Routing Supervisor
  loop at LT_GATE_RTESPV into LR_GATE_RTESPV.

*** Check it is inline with Base
    check LR_GATE_RTESPV->IS_IN_LINE( IR_GATE = LR_GATE_BASE ) eq ABAP_TRUE.

    try.
        move LR_GATE_RTESPV->R_CLSPR ?to LR_PR_RTESPV_UCB.
      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

    check LR_PR_RTESPV_UCB is bound.
*** Refresh Auto and get Selected Route
    LR_PR_RTESPV_UCB->REFRESH_AUTO( ).
    ME->R_GATE->RAISE_EVENTS( ).
    move LR_PR_RTESPV_UCB->R_RTESEL to RR_RTESEL_UCB.
    exit.

    if LR_PR_RTESPV_UCB->R_RTESEL is not bound.
***   No Selected Route defined.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCSR'
                                            IF_MSGNO = '310' ).
    endif.
  endloop.

endmethod.
method IS_IN_LINE_UCB_RTESPV.

  data: LR_PRVDR type ref to /VCXI/CL_VKSR_GATE.

  loop at IT_PRVDR_RTESPV into LR_PRVDR.
    check IR_PRVDR->IS_IN_LINE( IR_GATE = LR_PRVDR ) eq ABAP_TRUE.
    move ABAP_TRUE to RF_RETURN.
    exit.
  endloop.

endmethod.
