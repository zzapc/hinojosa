
class ZCL_VCXI_XCSUC_GRID_DFLT_SL definition
  public
  inheriting from ZCL_VCXI_XCSUC_GRID
  create public .

public section.

  type-pools ABAP .
  data F_CHANGED type ABAP_BOOL read-only .
  data S_DFLT_SHUNT type ZVCXI_XCS_TD430 read-only .
  data T_DFLT_L_SHUNT type ZVCXI_XCSUC_TT_SHUNT_L_DFLT read-only .

  methods CONSTRUCTOR
    importing
      !IF_TABNAME type TABNAME optional
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_CUSTOMIZING type ref to OBJECT
      !IR_S_CONTAINER type ref to CL_GUI_CONTAINER optional
      !IS_DFLT_SHUNT type ZVCXI_XCS_TD430
    raising
      /VCXI/CX_CKX .
protected section.

  data R_CUST_SHIPU type ref to ZCL_VCXI_XCSU_CUST_SHIPU .
  data R_DFLT type ref to ZCL_VCXI_XCSUC_DFLT .

  methods INIT_LIMIT_BY_SEQ
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods GET_LAYOUT
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSUC_GRID_DFLT_SL definition
class ZCL_VCXI_XCSUC_GRID_DFLT_SL implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( exporting IF_TABNAME        = 'ZVCXI_XCSUC_S_DFLT_SHUNTL_GRID'
                                IF_CONTAINER_NAME = '0150CC_DFLT_SHUNTL_GRID'
                                IR_CUSTOMIZING    = IR_CUSTOMIZING
                                IR_S_CONTAINER    = IR_S_CONTAINER ).

*** Try to Assign Customizing Reference
  try.
      move IR_CUSTOMIZING ?to ME->R_DFLT.
    catch CX_SY_MOVE_CAST_ERROR.
***   Default Customizing Reference can't be assigned.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCSUC'
          IF_MSGNO = '203' ).
  endtry.

  move IS_DFLT_SHUNT to ME->S_DFLT_SHUNT.

*** Get Shipping and Unitization Customizing
  ME->R_CUST_SHIPU = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_INSTANCE( ).

*** Extract Values
  ME->INIT_LIMIT_BY_SEQ( ).

  ME->F_LOCKED = ME->R_DFLT->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ).

endmethod.
method GET_FIELDCAT.

  field-symbols: <S_FCAT>           type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
***   Set GUID to only technical Fields
      when 'GLIDF'.
        move ABAP_TRUE to <S_FCAT>-TECH.
***   Make Dimension Value Editable
      when 'DIMVA'.
        if ME->R_DFLT->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
          move ABAP_TRUE to <S_FCAT>-EDIT.
        endif.
    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data:          LS_DFLT_L_SHUNT_GRID type          ZVCXI_XCSUC_S_DFLT_SHUNTL_GRID,
                 LS_DFLT_L_SHUNT      type          ZVCXI_XCSUC_S_SHUNT_L_DFLT.
  data:          LT_DFLT_L_SHUNT      type          ZVCXI_XCSUC_TT_SHUNT_L_DFLT.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

  free: <T_DATA>.

*** --------------------------------------------------------------------------------------------
*** Get all Shipping Unit Limit Entries
  loop at ME->T_DFLT_L_SHUNT into LS_DFLT_L_SHUNT.

    clear: LS_DFLT_L_SHUNT_GRID.
    move-corresponding LS_DFLT_L_SHUNT to LS_DFLT_L_SHUNT_GRID.

*** --------------------------------------------------------------------------------------------
*** Add Entry
    append initial line to <T_DATA> assigning <S_DATA>.
    move-corresponding LS_DFLT_L_SHUNT_GRID to <S_DATA>.
  endloop.

endmethod.
method GET_LAYOUT.

  RS_LAYOUT = SUPER->GET_LAYOUT( ).

*** Set Toolbar to Activ
  move ABAP_FALSE  to RS_LAYOUT-NO_TOOLBAR.
  move 'A'         to RS_LAYOUT-SEL_MODE.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LS_DFLT_L_SHUNT      type          ZVCXI_XCSUC_S_SHUNT_L_DFLT.
  data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any,
                 <S_DFLT_L_SHUNT>     type          ZVCXI_XCSUC_S_SHUNT_L_DFLT.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( exporting E_MODIFIED    = E_MODIFIED
                                                     ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.


      loop at <T_DATA> assigning <S_DATA>.
        read table ET_GOOD_CELLS with key ROW_ID = SY-TABIX transporting no fields.
        check SY-SUBRC eq 0.
        move-corresponding <S_DATA> to LS_DFLT_L_SHUNT.
        move ME->S_DFLT_SHUNT-GLIDF to LS_DFLT_L_SHUNT-GLIDF.
        read table ME->T_DFLT_L_SHUNT assigning <S_DFLT_L_SHUNT> with key LIMIT = LS_DFLT_L_SHUNT-LIMIT
                                                                          DIMEN = LS_DFLT_L_SHUNT-DIMEN.
        check SY-SUBRC = 0.
        move-corresponding LS_DFLT_L_SHUNT to <S_DFLT_L_SHUNT>.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.
  move ABAP_TRUE to ME->F_CHANGED.

endmethod.
method INIT_LIMIT_BY_SEQ.

  data: LS_DFLT_L_SHUNT type ZVCXI_XCSUC_S_SHUNT_L_DFLT,
        LS_SHUTY_COMBI  type ZVCXI_XCSU_S_SHUTY_COMBI,
        LS_LIMIT        type ZVCXI_XCSU_S_LIMIT.
  data: LT_DFLT_L_SHUNT type ZVCXI_XCSUC_TT_SHUNT_L_DFLT,
        LT_SHUTY_COMBI  type ZVCXI_XCSU_TT_SHUTY_COMBI,
        LT_LIMIT        type ZVCXI_XCSU_TT_LIMIT.
  field-symbols: <S_DFLT_L_SHUNT> type ZVCXI_XCSUC_S_SHUNT_L_DFLT,
                 <S_LIMIT>        type ZVCXI_XCSU_S_LIMIT.

***--------------------------------------------------------------------------------------------
*** Get Linked Limits
  move ME->R_DFLT->T_SHUNT_L_DFLT to LT_DFLT_L_SHUNT.
  delete LT_DFLT_L_SHUNT where GLIDF ne ME->S_DFLT_SHUNT-GLIDF.
  move LT_DFLT_L_SHUNT to ME->T_DFLT_L_SHUNT.

  loop at LT_DFLT_L_SHUNT into LS_DFLT_L_SHUNT.
    append initial line to LT_LIMIT assigning <S_LIMIT>.
    move-corresponding LS_DFLT_L_SHUNT to <S_LIMIT>.
  endloop.

  if ME->R_CUST_SHIPU is bound.
*** Get assigned Shipping Unit Type
    LT_SHUTY_COMBI = ME->R_CUST_SHIPU->GET_SHUTY_COMBI( ).
    read table LT_SHUTY_COMBI into LS_SHUTY_COMBI
                              with key SHUNT = ME->S_DFLT_SHUNT-SHUNT.
    check SY-SUBRC = 0.

*** Do Sort
    ME->R_CUST_SHIPU->SORT_SHUTY_LIMIT( exporting IF_SHUTY = LS_SHUTY_COMBI-SHUTY
                                        changing  CT_LIMIT = LT_LIMIT ).

    clear: ME->T_DFLT_L_SHUNT.
*** Return sortet Limits
    loop at LT_LIMIT into LS_LIMIT.
      read table LT_DFLT_L_SHUNT into LS_DFLT_L_SHUNT
                                 with key DIMEN = LS_LIMIT-DIMEN
                                          LIMIT = LS_LIMIT-LIMIT.
      if SY-SUBRC eq 0.
        append LS_DFLT_L_SHUNT to ME->T_DFLT_L_SHUNT.
      endif.
    endloop.
  endif.

endmethod.
