
class ZCL_VCXI_P0SP_PR_ACTVY_CLOS definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_PCHEI type /VCXI/VKS_PARID value 'ZVCXI_P0_PCHEI'. "#EC NOTEXT
  constants C_PARID_PCLEN type /VCXI/VKS_PARID value 'ZVCXI_P0_PCLEN'. "#EC NOTEXT
  constants C_PARID_PCWID type /VCXI/VKS_PARID value 'ZVCXI_P0_PCWID'. "#EC NOTEXT
  constants C_PARID_PCTYP type /VCXI/VKS_PARID value 'ZVCXI_P0_PCTYP'. "#EC NOTEXT

  methods GET_PCTYP_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_PCHEI
    returning
      value(RS_PCHEI) type ZVCXI_P0SP_S_PCHEI
    raising
      /VCXI/CX_CKX .
  methods GET_PCLEN
    returning
      value(RS_PCLEN) type ZVCXI_P0SP_S_PCLEN
    raising
      /VCXI/CX_CKX .
  methods GET_PCWID
    returning
      value(RS_PCWID) type ZVCXI_P0SP_S_PCWID
    raising
      /VCXI/CX_CKX .
  methods SET_PCHEI
    importing
      !IS_PCHEI type ZVCXI_P0SP_S_PCHEI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP
    returning
      value(RF_PCTYP) type ZVCXI_P0SP_PCTYP
    raising
      /VCXI/CX_CKX .
  methods SET_PCLEN
    importing
      !IS_PCLEN type ZVCXI_P0SP_S_PCLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCWID
    importing
      !IS_PCWID type ZVCXI_P0SP_S_PCWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PCTYP
    importing
      !IF_PCTYP type ZVCXI_P0SP_PCTYP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU'. "#EC NOTEXT

  methods GET_JOITY_OF_MC
    returning
      value(RT_JOITY) type ZVCXI_P0SS_TT_JOITY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SP_PR_ACTVY_CLOS definition
class ZCL_VCXI_P0SP_PR_ACTVY_CLOS implementation.
method GET_JOITY_OF_MC.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LS_JOITY           type        ZVCXI_P0SS_S_JOITY.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_MC_JGLUE     type ref to ZCL_VCXI_P0SP_PR_MC_JGLUE,
         LR_PR_MC_JSTITCH   type ref to ZCL_VCXI_P0SP_PR_MC_JSTITCH,
         LR_PR_MC_JTAPE     type ref to ZCL_VCXI_P0SP_PR_MC_JTAPE.

***------------------------------------------------------------------
*** Get all Material Consumptions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE = ABAP_TRUE ).

  LS_JOITY-SIGN   = 'I'.
  LS_JOITY-OPTION = 'EQ'.

***----------------------------------------------------------------------------
*** Get Joint Type of all Material Consumptions or just the requester
  loop at LT_GATE into LR_GATE.
    clear: LS_JOITY-LOW.

    try.
        clear: LR_PR_MC_JGLUE.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_JGLUE.
        check LR_PR_MC_JGLUE is bound.
        LS_JOITY-LOW = LR_PR_MC_JGLUE->GET_JOITY( ).
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MC_JGLUE.
    endtry.

    try.
        clear: LR_PR_MC_JSTITCH.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_JSTITCH.
        check LR_PR_MC_JSTITCH is bound.
        LS_JOITY-LOW = LR_PR_MC_JSTITCH->GET_JOITY( ).
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MC_JSTITCH.
    endtry.

    try.
        clear: LR_PR_MC_JTAPE.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_JTAPE.
        check LR_PR_MC_JTAPE is bound.
        LS_JOITY-LOW = LR_PR_MC_JTAPE->GET_JOITY( ).
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MC_JTAPE.
    endtry.

    check LS_JOITY-LOW is not initial.
    append LS_JOITY to RT_JOITY.

  endloop.

endmethod.
method GET_PCHEI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).
  move LS_PARAM-ATFLV to RS_PCHEI-PCHEI.
  move LS_PARAM-UNIT  to RS_PCHEI-PCHEI_UOM.

endmethod.
method GET_PCLEN.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).
  move LS_PARAM-ATFLV to RS_PCLEN-PCLEN.
  move LS_PARAM-UNIT  to RS_PCLEN-PCLEN_UOM.

endmethod.
method GET_PCTYP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).
  move LS_PARAM-ATWRT to RF_PCTYP.

endmethod.
method GET_PCTYP_DESCR.

  data: LF_PCTYP type ZVCXI_P0SP_PCTYP.

  LF_PCTYP = ME->GET_PCTYP( ).
  RF_DESCR = ZCL_VCXI_P0SP_CUST_PCTYP=>GET_PCTYP_DESCR( IF_PCTYP = LF_PCTYP ).

endmethod.
method GET_PCWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
  move LS_PARAM-ATFLV to RS_PCWID-PCWID.
  move LS_PARAM-UNIT  to RS_PCWID-PCWID_UOM.

endmethod.
method GET_STATUS.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check PC dimensions
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).

*** Check PC Length
  if LS_PCLEN-PCLEN is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Width
  if LS_PCWID-PCWID is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check PC Height
  if LS_PCHEI-PCHEI is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_PCLEN type ZVCXI_P0SP_S_PCLEN,
        LS_PCWID type ZVCXI_P0SP_S_PCWID,
        LS_PCHEI type ZVCXI_P0SP_S_PCHEI.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check PC dimensions
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).

*** Check PC Length
  if LS_PCLEN-PCLEN is not initial.
***   PC Length is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '001' ).
  else.
***   PC Length is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '002' ).
  endif.

*** Check PC Width
  if LS_PCWID-PCWID is not initial.
***   PC Width is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '003' ).
  else.
***   PC Width is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '004' ).
  endif.

*** Check PC Height
  if LS_PCHEI-PCHEI is not initial.
***   PC Height is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '005' ).
  else.
***   PC Height is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '006' ).
  endif.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
    when C_IEVNT_I_RECALC_MC_CONSU.
      ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).
  endcase.

endmethod.
method HANDLE_RECALC_MC_CONSU.

  data:  LF_UPDATE_ALL      type        ABAP_BOOL.
  data:  LS_MQTYI           type        ZVCXI_XCSP_S_MQTYI.
  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_PARENT     type ref to /VCXI/CL_VKSR_GATE,
         LR_OPERATION       type ref to ZIF_VCXI_XCSP_OPERATION,
         LR_PR_MC           type ref to ZCL_VCXI_XCSP_PR_MC.

***------------------------------------------------------------------
*** Should all Joint's updated or just the requester
  read table IT_GATE with key TABLE_LINE = ME->R_GATE
                     transporting no fields.
  if SY-SUBRC = 0.
    LF_UPDATE_ALL = ABAP_TRUE.
  else.
    LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
    read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
                       transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    endif.
  endif.

***------------------------------------------------------------------
*** Get all Machine Quantity
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC = 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_OPERATION.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_OPERATION.
    endtry.
    if LR_OPERATION is bound.
      move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
    endif.
  endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
  loop at LT_GATE into LR_GATE.
    if LF_UPDATE_ALL eq ABAP_FALSE.
      read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
      if SY-SUBRC ne 0.
        continue.
      endif.
    endif.

    try.
        clear: LR_PR_MC.
        move LR_GATE->R_CLSPR ?to LR_PR_MC.
        check LR_PR_MC is bound.
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.

  endloop.

endmethod.
method SET_PCHEI.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCHEI ).

  move IS_PCHEI-PCHEI     to LS_PARAM-ATFLV.
  move IS_PCHEI-PCHEI_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCLEN.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCLEN ).

  move IS_PCLEN-PCLEN     to LS_PARAM-ATFLV.
  move IS_PCLEN-PCLEN_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCTYP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).

  move IF_PCTYP to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

  move IS_PCWID-PCWID     to LS_PARAM-ATFLV.
  move IS_PCWID-PCWID_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

  data:          LF_PCTYP   type ZVCXI_P0SP_PCTYP.
  data:          LS_PCLEN   type ZVCXI_P0SP_S_PCLEN,
                 LS_PCWID   type ZVCXI_P0SP_S_PCWID,
                 LS_PCHEI   type ZVCXI_P0SP_S_PCHEI.
  field-symbols: <S_PCDIM>  type ZVCXI_P0SP_S_PCDIM.

  if CT_PCDIM is initial.
*** No PC Dimension found
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                          IF_MSGID = 'ZVCXI_P0SP'
                                          IF_MSGNO = '020' ).
  endif.

*** Find or define Entry
  if lines( CT_PCDIM ) eq 1.
    read table CT_PCDIM assigning <S_PCDIM> index 1.
  else.
    free CT_PCDIM.
    append initial line to CT_PCDIM assigning <S_PCDIM>.

*** PC Direction, Number Ups and Number Outs are fixed
    move 'A' to <S_PCDIM>-PCDIR.
    move 1   to <S_PCDIM>-PCUPS.
    move 1   to <S_PCDIM>-NOOUT.
  endif.

*** Fill Values
  LS_PCLEN = ME->GET_PCLEN( ).
  LS_PCWID = ME->GET_PCWID( ).
  LS_PCHEI = ME->GET_PCHEI( ).
  LF_PCTYP = ME->GET_PCTYP( ).

  move-corresponding LS_PCLEN to <S_PCDIM>.
  move-corresponding LS_PCWID to <S_PCDIM>.
  move-corresponding LS_PCHEI to <S_PCDIM>.
  move               LF_PCTYP to <S_PCDIM>-PCTYP.


endmethod.
