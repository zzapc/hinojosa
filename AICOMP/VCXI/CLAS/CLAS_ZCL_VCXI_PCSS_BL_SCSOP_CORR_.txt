
class ZCL_VCXI_PCSS_BL_SCSOP_CORR definition
  public
  inheriting from ZCL_VCXI_P0SS_BL_SCSOP
  create public .

public section.

  constants C_SCSOP_CORRUGATION type ZVCXI_P0S_SCSOP value 'CORR'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IF_SHTDI type ZVCXI_P0SS_SHTDI
      !IF_CSCOR type ZVCXI_P0SS_CSCOR
    raising
      /VCXI/CX_CKX .
protected section.

  methods CALC_SCSTR
    redefinition .
  methods GET_DIVDI
    redefinition .
  methods READ_SHT_DIM
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_BL_SCSOP_CORR definition
class ZCL_VCXI_PCSS_BL_SCSOP_CORR implementation.
method CALC_SCSTR.

  data:          LF_DUPSW            type        ZVCXI_P0SS_DUPSW,
                 LF_NOUPT            type        ZVCXI_P0SS_NOUPT.
  data:          LS_PCDIM            type        ZVCXI_P0SP_S_PCDIM,
                 LS_SCSTR_CALC       type        ZVCXI_P0SS_S_SCSTR_CALC,
                 LS_TRIRB            type        ZVCXI_P0SS_S_TRIRB,
                 LS_TRILT            type        ZVCXI_P0SS_S_TRILT.
  data:          LT_SCSTR_CALC       type        ZVCXI_P0SS_TT_SCSTR_CALC,
                 LT_SCSTR_CALC_TAPE  type        ZVCXI_P0SS_TT_SCSTR_CALC.
  data:          LR_PRODDIM          type ref to ZIF_VCXI_P0SS_PRODDIM,
                 LR_SHTDIM           type ref to ZIF_VCXI_P0SS_SHTDIM.

  LR_PRODDIM  = ME->GET_PRODDIM_PRVDR( IT_PRVDR = IT_PRVDR ).
  LR_SHTDIM   = ME->GET_SHTDIM_PRVDR( IT_PRVDR = IT_PRVDR ).
  check LR_SHTDIM  is bound.

***------------------------------------------------------------------------------------------------
*** 1 Get Values of Scores and Tapes
  LT_SCSTR_CALC      = ME->GET_SCORES_OF_SCSTR( IT_PRVDR = IT_PRVDR ).
  LT_SCSTR_CALC_TAPE = ME->GET_TAPES_OF_SCSTR( IT_PRVDR = IT_PRVDR ).
  append lines of LT_SCSTR_CALC_TAPE to LT_SCSTR_CALC.

***------------------------------------------------------------------------------------------------
*** If we do not handle Scores -> just take the Product Sheet Width as absolute value if we have tapes
*** If we have no tapes -> take the net sheet size
  if  ME->F_CSCOR is initial.
    clear: LS_SCSTR_CALC, LT_SCSTR_CALC.
*** Save Values
    if lines( LT_SCSTR_CALC_TAPE ) ne 0.
      if LR_PRODDIM is bound.
        LS_PCDIM = LR_PRODDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_PRODDIM=>C_POOTI_PRODUCT ).
      else.
        LS_PCDIM = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_NET ).
      endif.
    else.
      LS_PCDIM = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_NET ).
    endif.
    move LS_PCDIM-PCWID                         to LS_SCSTR_CALC-SCORP.
    move LS_PCDIM-PCWID_UOM                     to LS_SCSTR_CALC-SCORP_UOM.

    append          LS_SCSTR_CALC      to LT_SCSTR_CALC.
    append lines of LT_SCSTR_CALC_TAPE to LT_SCSTR_CALC.
  endif.

***------------------------------------------------------------------------------------------------
*** 2 Sort Values
  sort LT_SCSTR_CALC by SCORP.

***------------------------------------------------------------------------------------------------
*** 3 Add Ups
  if ME->F_CSCOR                 is not initial or
     lines( LT_SCSTR_CALC_TAPE ) ne 0.
    case ME->F_SHTDI.
      when 'A'.
        LF_NOUPT = LR_SHTDIM->GET_NOUPW( ).
      when 'B'.
        LF_NOUPT = LR_SHTDIM->GET_NOUPL( ).
    endcase.

    ME->ADD_UPS( exporting IF_NOUPT      = LF_NOUPT
                 changing  CT_SCSTR_CALC = LT_SCSTR_CALC ).
  endif.

***------------------------------------------------------------------------------------------------
*** 4 Get The Production Side Trim and add it to the absolute value
  IR_PR_SCSTR_MGR->GET_TRIM( exporting IF_PARID = ZCL_VCXI_P0SS_PR_SCSTR_MGR=>C_TRIM_PARID_TRIPS
                             importing ES_TRILT = LS_TRILT
                                       ES_TRIRB = LS_TRIRB ).

  ME->ADD_TRIM( exporting IS_TRILT      = LS_TRILT
                          IS_TRIRB      = LS_TRIRB
                changing  CT_SCSTR_CALC = LT_SCSTR_CALC ).

***------------------------------------------------------------------------------------------------
*** 5 Check if we need a division on the width
  LF_DUPSW = LR_SHTDIM->GET_DUPSW( ).

  ME->ADD_UPS( exporting IF_NOUPT      = LF_DUPSW
               changing  CT_SCSTR_CALC = LT_SCSTR_CALC ).

***------------------------------------------------------------------------------------------------
*** 6 Get The Divison Trim Width and add ti to the absolute value
  IR_PR_SCSTR_MGR->GET_TRIM( exporting IF_PARID = ZCL_VCXI_P0SS_PR_SCSTR_MGR=>C_TRIM_PARID_DTRIW
                             importing ES_TRILT = LS_TRILT
                                       ES_TRIRB = LS_TRIRB ).

  ME->ADD_TRIM( exporting IS_TRILT      = LS_TRILT
                          IS_TRIRB      = LS_TRIRB
                changing  CT_SCSTR_CALC = LT_SCSTR_CALC ).


***------------------------------------------------------------------------------------------------
*** 7 Define the right Score String Values ( SCSTR_VALUE ) and return the Hole string
  RF_SCSTR = ME->BUILD_SCSTR( IF_SSTRC      = IR_PR_SCSTR_MGR->F_SSTRC
                              IT_SCSTR_CALC = LT_SCSTR_CALC ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IF_SHTDI = IF_SHTDI
                      IF_CSCOR = IF_CSCOR ).

*** Set Score Operation
  move C_SCSOP_CORRUGATION to ME->F_SCSOP.

endmethod.
method GET_DIVDI.

*** Nothing to do!

endmethod.
method READ_SHT_DIM.

  data: LS_PCDIM_IN  type        ZVCXI_P0SP_S_PCDIM.
  data: LR_SHTDIM    type ref to ZIF_VCXI_P0SS_SHTDIM.

***------------------------------------------------------------------------------------------------
*** Get Sheet Dimension Before First Divison
  LR_SHTDIM = ME->GET_SHTDIM_PRVDR( IT_PRVDR = IT_PRVDR ).
  check LR_SHTDIM is bound.
  LS_PCDIM_IN = LR_SHTDIM->GET_PCDIM( IF_POOTI = ZIF_VCXI_P0SS_SHTDIM=>C_POOTI_GROSS ).

  move LS_PCDIM_IN-PCLEN     to ES_SHTLE-SHTLE.
  move LS_PCDIM_IN-PCLEN_UOM to ES_SHTLE-SHTLE_UOM.

  move LS_PCDIM_IN-PCWID     to ES_SHTWI-SHTWI.
  move LS_PCDIM_IN-PCWID_UOM to ES_SHTWI-SHTWI_UOM.

endmethod.
