
class ZCL_VCXI_PXSS_UI_CADIF_PRJ definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_CADIF_PRJ_VIS type ZVCXI_PXSS_S_CADIF_PRJ_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_CADDE type UI_FUNC value 'CADDE' ##NO_TEXT.
  constants C_UC_CADIF type UI_FUNC value 'CADIF' ##NO_TEXT.
  constants C_UC_OVERVIEW type UI_FUNC value 'OVERVIEW' ##NO_TEXT.
  constants C_UC_XML type UI_FUNC value 'XML' ##NO_TEXT.
  data R_GRID_CADDL type ref to ZCL_VCXI_PXSS_GRID_CADDL .
  data R_PR_CADIF_PRJ type ref to ZCL_VCXI_PXSS_PR_CADIF_PRJ .
  data R_TEXTEDIT_LTEXT type ref to ZCL_VCXI_PXSS_TEXTEDIT_LTEXT .

  methods CONFIRM_RESET
    importing
      !IF_CADPS_NEW type ZVCXI_PXS_CADPS
    returning
      value(RF_CONFIRMED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods GET_DDTEXT_CADPS
    importing
      !IF_CADPS type ZVCXI_PXS_CADPS
    returning
      value(RF_DDTEXT) type DDTEXT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CADDE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_CADIF
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OVERVIEW
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_XML
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_DDVAL_CADPS
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_UI_CADIF_PRJ definition
class ZCL_VCXI_PXSS_UI_CADIF_PRJ implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_CADIF_PRJ_BIND'
      exporting
        IR_UI_CADIF_PRJ = ME
      importing
        ES_DYNP         = ME->S_DYNP.

***--------------------------------------------------------------------------------------
*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT_LTEXT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

*** Create Grid for Documents
    create object ME->R_GRID_CADDL
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_CADDL'.

  endmethod.
  method CONFIRM_RESET.

    data: LF_CADPS_PREV type ZVCXI_PXS_CADPS,
          LF_ANSWER     type C.


*** Get Previous CAD Status
    ME->R_PR_CADIF_PRJ->GET_CADPS( importing EF_CADPS_PREV = LF_CADPS_PREV ).

*** Confirm Reset
    if LF_CADPS_PREV eq 'D' and IF_CADPS_NEW eq 'IP'.
      call function 'POPUP_TO_CONFIRM'
        exporting
          TITLEBAR              = 'CAD Integration'(T01)
          TEXT_QUESTION         = 'Reset CAD Project Status?'(Q01)
          DISPLAY_CANCEL_BUTTON = ABAP_FALSE
        importing
          ANSWER                = LF_ANSWER.
      case LF_ANSWER.
        when '1'.
          RF_CONFIRMED = ABAP_TRUE.
        when others.
          RF_CONFIRMED = ABAP_FALSE.
      endcase.
    else.
***   Confirmation not needed
      RF_CONFIRMED = ABAP_UNDEFINED.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CADIF_PRJ.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Update the Long Text before leaving the screen
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
      ME->R_TEXTEDIT_LTEXT->DO_FREE( ).
      clear ME->R_TEXTEDIT_LTEXT.
    endif.

*** Free Document Grid
    if ME->R_GRID_CADDL is bound.
      ME->R_GRID_CADDL->DO_FREE( ).
      clear ME->R_GRID_CADDL.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Hide Material Description Override Flag if undefined or Fixed
          if SCREEN-NAME cp 'ZVCXI_PXSS_S_CADIF_PRJ_VIS-FOVRR_MAKTX' and
           ( ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED or
             ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX eq 'S'  or
             ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX eq 'F' ).
            move 0 to SCREEN-ACTIVE.
          endif.

***       Disable Material Description if generated
          if SCREEN-NAME cp '*-MAKTX' and
             ( ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX eq  ABAP_FALSE or
               ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX eq 'S' or
               ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX eq 'F' ).
            move 0 to SCREEN-INPUT.
          endif.

***       Disable Customer Material if generated
          if SCREEN-NAME cp '*-KDMAT' and
             ( ME->S_CADIF_PRJ_VIS-FOVRR_KDMAT eq 'S' or
               ME->S_CADIF_PRJ_VIS-FOVRR_KDMAT eq 'F' ).
            move 0 to SCREEN-INPUT.
          endif.

***       Disable Customer Material Description if generated
          if SCREEN-NAME cp '*-KDPTX' and
             ( ME->S_CADIF_PRJ_VIS-FOVRR_KDPTX eq 'S' or
               ME->S_CADIF_PRJ_VIS-FOVRR_KDPTX eq 'F' ).
            move 0 to SCREEN-INPUT.
          endif.

***       Disable Project Requested if SETBY is CALC
          if SCREEN-NAME cp '*-FPRJR'.
            ME->R_PR_CADIF_PRJ->GET_FPRJR( importing EF_SETBY = data(LF_SETBY_FPRJR) ).
            if LF_SETBY_FPRJR eq /VCXI/CL_VKSR_GATE=>C_SETBY_CALC.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Disable Review Requested if it is mandatory
          if SCREEN-NAME cp '*-FREVR' and
            ME->S_CADIF_PRJ_VIS-OREVR eq ZCL_VCXI_PXSS_PR_CADIF_ONEUP=>C_OREVR_MANDATORY.
            move 0 to SCREEN-INPUT.
          endif.

***       Block user interaction, when waiting on the interface
          if ME->S_CADIF_PRJ_VIS-CADPS eq 'ID' or
             ME->S_CADIF_PRJ_VIS-CADPS eq 'ITA'.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

*** Define Dropdown Values for CAD Project Status
    ME->SET_DDVAL_CADPS( ).

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_LTEXT->F_REFRESH_REQ.
      ME->R_TEXTEDIT_LTEXT->REFRESH_TEXTEDIT( ).
    endif.

*** Initialize Grid
    if ME->R_GRID_CADDL is bound.
      ME->R_GRID_CADDL->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_CADDL->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_CADIF_PRJ_VIS type ZVCXI_PXSS_S_CADIF_PRJ_VIS.


*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_CADIF_PRJ_VIS.

***--------------------------------------------------------------------------------------
*** Set Project Status
    if ME->S_CADIF_PRJ_VIS-CADPS  ne LS_CADIF_PRJ_VIS-CADPS.
      if ME->CONFIRM_RESET( IF_CADPS_NEW = LS_CADIF_PRJ_VIS-CADPS ) ne ABAP_FALSE.
        ME->R_PR_CADIF_PRJ->SET_CADPS( IF_CADPS = LS_CADIF_PRJ_VIS-CADPS
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Material Description
    if ME->S_CADIF_PRJ_VIS-MAKTX ne LS_CADIF_PRJ_VIS-MAKTX or
       ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX ne LS_CADIF_PRJ_VIS-FOVRR_MAKTX.
      if LS_CADIF_PRJ_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        ME->R_PR_CADIF_PRJ->SET_MAKTX( IF_MAKTX = LS_CADIF_PRJ_VIS-MAKTX
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_CADIF_PRJ->SET_MAKTX( IF_MAKTX = LS_CADIF_PRJ_VIS-MAKTX
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Customer Material
    if ME->S_CADIF_PRJ_VIS-KDMAT ne LS_CADIF_PRJ_VIS-KDMAT.
      if LS_CADIF_PRJ_VIS-FOVRR_KDMAT ne ABAP_FALSE.
        ME->R_PR_CADIF_PRJ->SET_KDMAT( IF_KDMAT = LS_CADIF_PRJ_VIS-KDMAT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_CADIF_PRJ->SET_KDMAT( IF_KDMAT = LS_CADIF_PRJ_VIS-KDMAT
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Customer Material Description
    if ME->S_CADIF_PRJ_VIS-KDPTX ne LS_CADIF_PRJ_VIS-KDPTX.
      if LS_CADIF_PRJ_VIS-FOVRR_KDPTX ne ABAP_FALSE.
        ME->R_PR_CADIF_PRJ->SET_KDPTX( IF_KDPTX = LS_CADIF_PRJ_VIS-KDPTX
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_CADIF_PRJ->SET_KDPTX( IF_KDPTX = LS_CADIF_PRJ_VIS-KDPTX
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Flag - Project Requested
    if ME->S_CADIF_PRJ_VIS-FPRJR  ne LS_CADIF_PRJ_VIS-FPRJR.
      ME->R_PR_CADIF_PRJ->SET_FPRJR( IF_FPRJR = LS_CADIF_PRJ_VIS-FPRJR
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag - Review Requested
    if ME->S_CADIF_PRJ_VIS-FREVR  ne LS_CADIF_PRJ_VIS-FREVR.
      ME->R_PR_CADIF_PRJ->SET_FREVR( IF_FREVR = LS_CADIF_PRJ_VIS-FREVR
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag - PDF Requested
    if ME->S_CADIF_PRJ_VIS-FPDFR ne LS_CADIF_PRJ_VIS-FPDFR.
      ME->R_PR_CADIF_PRJ->SET_FPDFR( IF_FPDFR = LS_CADIF_PRJ_VIS-FPDFR
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Project Reference
    if ME->S_CADIF_PRJ_VIS-FPDFR ne LS_CADIF_PRJ_VIS-PRREF.
      ME->R_PR_CADIF_PRJ->SET_PRREF( IF_PRREF = LS_CADIF_PRJ_VIS-PRREF
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_CADDE.
        ME->HANDLE_UC_CADDE( ).
      when C_UC_CADIF.
        ME->HANDLE_UC_CADIF( ).
      when C_UC_XML.
        ME->HANDLE_UC_XML( ).
      when C_UC_OVERVIEW.
        ME->HANDLE_UC_OVERVIEW( ).
    endcase.

  endmethod.
  method GET_DDTEXT_CADPS.

    check IF_CADPS is not initial.
    RF_DDTEXT = /VCXI/CL_CKX_SERVICE=>GET_DOMAIN_VALUE_TEXT( IF_DOMNAME    = 'ZVCXI_PXS_CADPS'
                                                             IF_DOMVALUE_L = conv #( IF_CADPS ) ).

  endmethod.
  method HANDLE_UC_CADDE.

*** Display Design Error Message as Popup
    ZCL_VCXI_XCS_POPUP_TEXTEDIT=>START( IF_TEXT = ME->R_PR_CADIF_PRJ->GET_CADDE( ) ).

  endmethod.
  method HANDLE_UC_CADIF.

    data: LF_XML type STRING.
    data: LR_CADIF_IO type ref to DATA,
          LR_XML      type ref to CL_XML_DOCUMENT.
    field-symbols: <S_CADIF_IO> type ANY.


    LR_CADIF_IO = ME->R_PR_CADIF_PRJ->GET_CADIF_IO( ).
    assign LR_CADIF_IO->* to <S_CADIF_IO>.

*** Create XML
    call transformation ID
         source S_CADIF_PRJ_IO = <S_CADIF_IO>
         result xml LF_XML.

    create object LR_XML.
    LR_XML->PARSE_STRING( STREAM = LF_XML ).
    LR_XML->DISPLAY( ).

  endmethod.
  method HANDLE_UC_OVERVIEW.

*** Popup for CAD Integration Overview
    ZCL_VCXI_PXSS_POPUP_CADIF=>START( IR_GATE   = ME->R_GATE
                                      IR_UIGATE = ME->R_UIGATE ).

  endmethod.
  method HANDLE_UC_XML.

    call function '/VCXI/CKX_XML_POPUP_START'
      exporting
        IF_XSTRING = ME->R_PR_CADIF_PRJ->GET_XML( ).

  endmethod.
  method INIT_VIS.

    data: LS_VBAP type VBAP.
    data: LR_APPDATA type ref to ZCL_VCXI_XCS_APPDATA.


    free: ME->S_CADIF_PRJ_VIS.

***--------------------------------------------------------------------------------------
*** Dynamically Fill by VBAP
    ME->S_CADIF_PRJ_VIS = corresponding #( base ( ME->S_CADIF_PRJ_VIS ) ME->R_PR_CADIF_PRJ->GET_VBAP( ) ).

*** Get Appdata
    LR_APPDATA = cast ZCL_VCXI_XCS_APPDATA( ME->R_GATE->GET_APPDATA( ) ).
    if LR_APPDATA is bound.
      ME->S_CADIF_PRJ_VIS-WERKS = LR_APPDATA->F_WERKS.
      ME->S_CADIF_PRJ_VIS-S_AUQTY = LR_APPDATA->S_AUQTY.
      ME->S_CADIF_PRJ_VIS-KUNAG =  LR_APPDATA->S_KNA1_AG-KUNNR.
      ME->S_CADIF_PRJ_VIS-KUNWE =  LR_APPDATA->S_KNA1_WE-KUNNR.
    endif.

***--------------------------------------------------------------------------------------
*** Get CAD Project Status
    ME->S_CADIF_PRJ_VIS-CADPS = ME->R_PR_CADIF_PRJ->GET_CADPS( ).

*** Get Material Description
    ME->S_CADIF_PRJ_VIS-MAKTX = ME->R_PR_CADIF_PRJ->GET_MAKTX( importing EF_FOVRR = ME->S_CADIF_PRJ_VIS-FOVRR_MAKTX ).
*** Get Customer Material Number
    ME->S_CADIF_PRJ_VIS-KDMAT = ME->R_PR_CADIF_PRJ->GET_KDMAT( importing EF_FOVRR = ME->S_CADIF_PRJ_VIS-FOVRR_KDMAT ).
*** Customer Material Description
    ME->S_CADIF_PRJ_VIS-KDPTX = ME->R_PR_CADIF_PRJ->GET_KDPTX( importing EF_FOVRR = ME->S_CADIF_PRJ_VIS-FOVRR_KDPTX ).

*** Get Project Requested
    ME->S_CADIF_PRJ_VIS-FPRJR = ME->R_PR_CADIF_PRJ->GET_FPRJR( ).
*** Get Review Requested
    ME->S_CADIF_PRJ_VIS-FREVR = ME->R_PR_CADIF_PRJ->GET_FREVR( ).

*** Get Flag - PDF Requested
    ME->S_CADIF_PRJ_VIS-FPDFR = ME->R_PR_CADIF_PRJ->GET_FPDFR( ).

*** Get CAD Project ID
    ME->S_CADIF_PRJ_VIS-CADPI = ME->R_PR_CADIF_PRJ->GET_CADPI( ).
*** Get CAD Project Owner
    ME->S_CADIF_PRJ_VIS-CADPO = ME->R_PR_CADIF_PRJ->GET_CADPO( ).
*** Get Option for Review Request
    ME->S_CADIF_PRJ_VIS-OREVR = ME->R_PR_CADIF_PRJ->GET_OREVR( ).

*** Get Project Reference
    ME->S_CADIF_PRJ_VIS-PRREF = ME->R_PR_CADIF_PRJ->GET_PRREF( ).

  endmethod.
  method SET_DDVAL_CADPS.

    data: LF_CADPS_PREV type ZVCXI_PXS_CADPS,
          LF_CADPS_NEXT type ZVCXI_PXS_CADPS.
    data: LT_CADPS_NEXT type ZVCXI_PXS_TT_CADPS,
          LT_VALUE      type VRM_VALUES.


***--------------------------------------------------------------------------------------
*** Get CAD Project Status
    ME->R_PR_CADIF_PRJ->GET_CADPS( importing EF_CADPS_PREV = LF_CADPS_PREV
                                             ET_CADPS_NEXT = LT_CADPS_NEXT ).

***--------------------------------------------------------------------------------------
*** Keep previous as valid
    if LF_CADPS_PREV is not initial.
      insert value #( KEY  = LF_CADPS_PREV
                      TEXT = GET_DDTEXT_CADPS( IF_CADPS = LF_CADPS_PREV )
                    ) into table LT_VALUE.
    endif.

*** Set allowed next values
    loop at LT_CADPS_NEXT into LF_CADPS_NEXT.
      insert value #( KEY  = LF_CADPS_NEXT
                      TEXT = GET_DDTEXT_CADPS( IF_CADPS = LF_CADPS_NEXT )
                    ) into table LT_VALUE.
    endloop.

***--------------------------------------------------------------------------------------
*** Set to DropDown List
    call function 'VRM_SET_VALUES'
      exporting
        ID     = 'ZVCXI_PXSS_S_CADIF_PRJ_VIS-CADPS'
        VALUES = LT_VALUE.

  endmethod.
