
class ZCL_VCXI_FFSS_UI_FFG definition
  public
  inheriting from ZCL_VCXI_F0S_UI_TAB
  create public .

public section.

  data S_FFG_VIS type ZVCXI_FFSS_S_FFG_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_F0S_TABPT default '0100S_FFG_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_FFG_VIS
    importing
      !IS_FFG_VIS type ZVCXI_FFSS_S_FFG_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_FPROP type SYUCOMM value 'FFG_FPROP' ##NO_TEXT.
  constants C_UC_FSTRC type SYUCOMM value 'FFG_FSTRC' ##NO_TEXT.
  data R_PR_FFG type ref to ZCL_VCXI_FFSS_PR_FFG .

  methods HANDLE_UC_FPROP
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_FSTRC
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_FFG definition
class ZCL_VCXI_FFSS_UI_FFG implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_FFG_BIND'
      exporting
        IR_UI_FFG     = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_FFG.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.

          if SCREEN-GROUP1 = 'SLI'.
***         Disable Number of Outs if Slitting not allowed
            if ME->R_PR_FFG->IS_FSLAL( ) ne ABAP_TRUE.
              SCREEN-INPUT = 0.
            endif.
***         Disable Number of Outs if Slitting is optimized
            if ME->R_PR_FFG->GET_FOPSL( ) eq ABAP_TRUE.
              SCREEN-INPUT = 0.
            endif.
          endif.

***       Hide Material Description Override Flag if undefined
          if SCREEN-NAME eq 'ZVCXI_FFSS_S_FFG_VIS-FOVRR_MAKTX' and
             ME->S_FFG_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Disable Material Description if generated
          if SCREEN-NAME eq 'ZVCXI_FFSS_S_FFG_VIS-MAKTX' and
             ME->S_FFG_VIS-FOVRR_MAKTX eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.

***       Hide MTS Flag if not allowed
          if SCREEN-GROUP2 = 'MTS' and
             ME->S_FFG_VIS-FMTSA eq ABAP_UNDEFINED.
            SCREEN-INPUT  = 0.
            SCREEN-ACTIVE = 0.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***---------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_FFG_VIS.

    check ME->R_PR_FFG is bound.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_FFG_VIS-MATNR ne IS_FFG_VIS-MATNR.
      ME->R_PR_FFG->SET_MATNR( IF_MATNR = IS_FFG_VIS-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Description
    if ME->S_FFG_VIS-MAKTX        ne IS_FFG_VIS-MAKTX or
       ME->S_FFG_VIS-FOVRR_MAKTX  ne IS_FFG_VIS-FOVRR_MAKTX.
      if IS_FFG_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        ME->R_PR_FFG->SET_MAKTX( IF_MAKTX = IS_FFG_VIS-MAKTX
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_FFG->SET_MAKTX( IF_MAKTX = IS_FFG_VIS-MAKTX
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Set Material Belonging to the Customer
    if ME->S_FFG_VIS-KDMAT ne IS_FFG_VIS-KDMAT.
      ME->R_PR_FFG->SET_KDMAT( IF_KDMAT = IS_FFG_VIS-KDMAT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Customer Description of Material
    if ME->S_FFG_VIS-KDPTX ne IS_FFG_VIS-KDPTX.
      ME->R_PR_FFG->SET_KDPTX( IF_KDPTX = IS_FFG_VIS-KDPTX
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Number of Outs
    if ME->S_FFG_VIS-NOOUT ne IS_FFG_VIS-NOOUT.
      ME->R_PR_FFG->SET_NOOUT( IF_NOOUT = IS_FFG_VIS-NOOUT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Film Width
    if ME->S_FFG_VIS-S_FIWID ne IS_FFG_VIS-S_FIWID.
      ME->R_PR_FFG->SET_FIWID( IS_FIWID = IS_FFG_VIS-S_FIWID
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Distribution Key
    if ME->S_FFG_VIS-S_DIKEY ne IS_FFG_VIS-S_DIKEY.
      ME->R_PR_FFG->SET_DIKEY( IS_DIKEY = IS_FFG_VIS-S_DIKEY
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag - Disable Check
    if ME->S_FFG_VIS-FDCHK ne IS_FFG_VIS-FDCHK.
      ME->R_PR_FFG->SET_FDCHK( IF_FDCHK = IS_FFG_VIS-FDCHK
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Component Ratio
    if ME->S_FFG_VIS-COMPR ne IS_FFG_VIS-COMPR.
      ME->R_PR_FFG->SET_COMPR( IF_COMPR = IS_FFG_VIS-COMPR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Component Scrap in Percent
    if ME->S_FFG_VIS-S_KAUSF ne IS_FFG_VIS-S_KAUSF.
      ME->R_PR_FFG->SET_KAUSF( IS_KAUSF = IS_FFG_VIS-S_KAUSF
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Make-to-Stock Flag
    if ME->S_FFG_VIS-FMTSA ne IS_FFG_VIS-FMTSA.
      ME->R_PR_FFG->ZIF_VCXI_XCSS_MTS~SET_FMTSA( IF_FMTSA = IS_FFG_VIS-FMTSA ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    data:  LF_UCOMM type SYUCOMM.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_FSTRC.
        ME->HANDLE_UC_FSTRC( ).

      when C_UC_FPROP.
        ME->HANDLE_UC_FPROP( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_FFG.

  endmethod.
  method HANDLE_UC_FPROP.

    data: LR_BL_FIBPROP type ref to ZCL_VCXI_FFSS_BL_FIBPROP,
          LR_BL_FIFPROP type ref to ZCL_VCXI_FFSS_BL_FIFPROP.

*** Get Film Property (Outbound)
    ME->R_PR_FFG->GET_FIBPX( importing ER_BL_FIBPROP = LR_BL_FIBPROP ).
    ME->R_PR_FFG->GET_FIFPX( importing ER_BL_FIFPROP = LR_BL_FIFPROP ).

*** Start Popup
    ZCL_VCXI_FFSS_POPUP_FIPROP=>START( IR_BL_FIBPROP = LR_BL_FIBPROP
                                       IR_BL_FIFPROP = LR_BL_FIFPROP
                                       IS_FIWID      = ME->S_FFG_VIS-S_FIWID
                                       IS_FITIN      = ME->S_FFG_VIS-S_FITIN  ).

  endmethod.
  method HANDLE_UC_FSTRC.

    data: LR_BL_FISTRUCT    type ref to ZCL_VCXI_FFSS_BL_FISTRUCT.


*** Get Film Structure
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_FISTX( importing ER_BL_FISTRUCT = LR_BL_FISTRUCT ).

*** Start Popup
    check LR_BL_FISTRUCT is bound.
    ZCL_VCXI_FFSS_POPUP_FISTRUCT=>START( IR_BL_FISTRUCT = LR_BL_FISTRUCT ).

  endmethod.
  method INIT_VIS.

    free: ME->S_FFG_VIS.
    check ME->R_PR_FFG is bound.

***--------------------------------------------------------------------------------------
*** Get Material Number
    ME->R_PR_FFG->GET_MATNR( importing EF_MATNR = ME->S_FFG_VIS-MATNR ).

*** Get Material Description
    ME->R_PR_FFG->GET_MAKTX( importing EF_MAKTX = ME->S_FFG_VIS-MAKTX
                                       EF_FOVRR = ME->S_FFG_VIS-FOVRR_MAKTX ).

*** Get Material Belonging to the Customer
    ME->R_PR_FFG->GET_KDMAT( importing EF_KDMAT = ME->S_FFG_VIS-KDMAT ).

*** Get Customer Description of Material
    ME->R_PR_FFG->GET_KDPTX( importing EF_KDPTX = ME->S_FFG_VIS-KDPTX ).

*** Get Number of Outs
    ME->S_FFG_VIS-NOOUT = ME->R_PR_FFG->GET_NOOUT( ).

*** Get Repeat Length (Inbound)
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_RELEN( importing ES_RELEN = ME->S_FFG_VIS-S_RELEN ).

*** Flag - Disable Check
    ME->R_PR_FFG->GET_FDCHK( importing EF_FDCHK = ME->S_FFG_VIS-FDCHK ).

***--------------------------------------------------------------------------------------
*** Get Film Width (Outbound)
    ME->R_PR_FFG->GET_FIWID( importing ES_FIWID = ME->S_FFG_VIS-S_FIWID ).

*** Get Trim Requirement on Width (Inbound)
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_TREQW( importing ES_TREQW = ME->S_FFG_VIS-S_TREQW ).

*** Get Number Ups (Outbound)
    ME->R_PR_FFG->GET_NOUPS( importing EF_NOUPS = ME->S_FFG_VIS-NOUPS ).

*** Get External Film Thickness (Inbound)
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_FITEX( importing ES_FITEX = ME->S_FFG_VIS-S_FITEX ).

*** Get Internal Film Thickness (Inbound)
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_FITIN( importing ES_FITIN = ME->S_FFG_VIS-S_FITIN ).

*** Get Surface Weight (Inbound)
    ME->R_PR_FFG->ZIF_VCXI_FFSS_COMM_PREV~GET_SURWT( importing ES_SURWT = ME->S_FFG_VIS-S_SURWT ).
    move ME->S_FFG_VIS-S_SURWT-SURWT_UOM to ME->S_FFG_VIS-SURWT_UOMC6.

*** Distribution Key
    ME->R_PR_FFG->GET_DIKEY( importing ES_DIKEY = ME->S_FFG_VIS-S_DIKEY ).

*** Component Ratio
    ME->R_PR_FFG->GET_COMPR( importing EF_COMPR = ME->S_FFG_VIS-COMPR ).

*** Get Component Scrap in Percent
    ME->R_PR_FFG->GET_KAUSF( importing ES_KAUSF = ME->S_FFG_VIS-S_KAUSF ).

***------------------------------------------------------------------------------------------------
*** Make-to-Stock Flag
    ME->S_FFG_VIS-FMTSA = ME->R_PR_FFG->ZIF_VCXI_XCSS_MTS~GET_FMTSA( ).

  endmethod.
