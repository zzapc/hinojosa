
class ZCL_VCXI_PXSS_GRID_XPART definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSS_S_XPART_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_XPART
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_XPART_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_XPART_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_GRID_XPART definition
class ZCL_VCXI_PXSS_GRID_XPART implementation.
  method CHANGE_STYLE_XPART.

    data: LS_JOINT_VIS type ZVCXI_PXSS_S_JOINT_VIS.
    data: LR_PR_JOINT type ref to ZCL_VCXI_PXSS_PR_JOINT.

    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_JOINT.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_JOINT is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_JOINT_VIS.

***------------------------------------------------------------------
    if LS_JOINT_VIS-FOVRW ne ABAP_TRUE and
       LS_JOINT_VIS-HAS_PRVDR eq ABAP_TRUE.
***   Set Joint Width = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Joint Width = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOIWI'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.
    if LS_JOINT_VIS-FOVRW eq ABAP_UNDEFINED.
***   Set Override Joint Width = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRW'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.


***------------------------------------------------------------------
    if LS_JOINT_VIS-FOVRL ne ABAP_TRUE and
       LS_JOINT_VIS-HAS_PRVDR eq ABAP_TRUE.
***   Set Joint Length = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Joint Length = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'JOILE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.
    if LS_JOINT_VIS-FOVRL eq ABAP_UNDEFINED.
***   Set Override Joint Length = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRL'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.


***------------------------------------------------------------------
    if LS_JOINT_VIS-FOVRS ne ABAP_TRUE.
***   Set Number of Stiches and Stiches Per = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOSTI'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STITP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
***   Set Number of Stiches and Stiches Per = Enable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'NOSTI'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'STITP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.
    if LS_JOINT_VIS-FOVRS eq ABAP_UNDEFINED.
***   Set Override Stiches = Disable
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOVRS'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZCL_VCXI_PXSS_PR_XPART=>C_IPRVT_PX_XPART.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <S_FCAT> type          LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
          <S_FCAT>-TECH = ABAP_TRUE.
          <S_FCAT>-COL_POS = 0.

        when 'PARAT'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            <S_FCAT>-EDIT = ABAP_TRUE.
          endif.
      endcase.

    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_PXSS_S_XPART_GRID( POSID  = LR_GATE->GET_POSID( )
                                                        GATKY  = LR_GATE->F_GATKY
                                                        R_GATE = LR_GATE
                                                      ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_XPART_VIS( exporting IR_GATE = LR_GATE
                         changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_XPART( exporting IR_GATE = LR_GATE
                                            IS_DATA = <S_DATA>
                                   changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_XPART_VIS.

    data: LS_XPART_VIS type ZVCXI_PXSS_S_XPART_GRID.
    data: LR_PR_XPART  type ref to ZCL_VCXI_PXSS_PR_XPART.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_XPART.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_XPART is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_XPART_VIS.

***--------------------------------------------------------------------------------------
*** Get Part Ratio
    LS_XPART_VIS-PARAT = LR_PR_XPART->GET_PARAT( ).

*** Get Handling Dimensions
    LS_XPART_VIS-S_HNDDIM = LR_PR_XPART->GET_HNDDIM( ).

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_XPART_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_XPART_GRID type ZVCXI_PXSS_S_XPART_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_XPART_GRID.

          check LS_XPART_GRID-R_GATE is bound and
                LS_XPART_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_XPART_VIS( IR_GATE = LS_XPART_GRID-R_GATE
                             IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method SET_XPART_VIS.

    data: LS_XPART_VIS_OLD type        ZVCXI_PXSS_S_XPART_VIS,
          LS_XPART_VIS_NEW type        ZVCXI_PXSS_S_XPART_VIS.
    data: LR_PR_XPART  type ref to ZCL_VCXI_PXSS_PR_XPART.


***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_XPART.
    LR_PR_XPART ?= IR_GATE->R_CLSPR.
    check LR_PR_XPART is bound.

*** Get old Values
    ME->GET_XPART_VIS( exporting IR_GATE = IR_GATE
                       changing  CS_DATA = LS_XPART_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_XPART_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Part Ratio
    if LS_XPART_VIS_NEW-PARAT ne LS_XPART_VIS_OLD-PARAT.
      LR_PR_XPART->SET_PARAT( IF_PARAT = LS_XPART_VIS_NEW-PARAT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
