
class ZCL_VCXI_FBSR_BL_PSTEP_UNIT definition
  public
  inheriting from ZCL_VCXI_FBSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_XCSR_BL_MANU .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_FBSR_ADJ_BGDIM .

  constants C_IPSTP_GRP type /VCXI/VSMC_IPSTP value 'FB_PS_GRP' ##NO_TEXT.
  constants C_IPSTP_UNIT type /VCXI/VSMC_IPSTP value 'F0_PS_UNIT' ##NO_TEXT.
  data F_SHUNT type ZVCXI_XCSU_SHUNT read-only .

  methods MERGE
    importing
      !IR_BL_PSTEP_UNIT type ref to ZCL_VCXI_FBSR_BL_PSTEP_UNIT
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  constants C_ATTID_ISVCE type /VCXI/VKS_ATTID value 'ISVCE_MC' ##NO_TEXT.
  constants C_IAATY_SHUNT type /VCXI/VSMC_IAATY value 'FB_AA_SHUNT' ##NO_TEXT.
  data S_TBQTY type ZVCXI_XCSU_S_TBQTY .
  data T_PACKMAT type ZVCXI_XCSR_TT_PACKMAT .
  data S_PRQTY type ZVCXI_XCSU_S_PRQTY .

  methods INIT_BY_MS_PACKMAT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SHIPUNIT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_PACKMAT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_UNIT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .

  methods ADD_SPVRE_MFSI_P
    redefinition .
  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSR_BL_PSTEP_UNIT definition
class ZCL_VCXI_FBSR_BL_PSTEP_UNIT implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Aspect - Shipping Unit
    try.
        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_SHUNT
                                     II_AVVAL  = value #( ( SIGN = 'I'   OPTION = 'EQ'   LOW = ME->F_SHUNT ) ) ).
      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_LVVAL>  type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Shipping Unit (Processing)
        when 'XC_LT_VP_SHUNT'.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                       to <S_LVVAL>-SIGN.
          move 'EQ'                      to <S_LVVAL>-OPTION.
          move ME->F_SHUNT               to <S_LVVAL>-LOW.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_PACKMAT.

    data: LS_PACKMAT type ZVCXI_P0SR_S_PACKMAT,
          LS_PARAM   type /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE            type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_PACKMAT type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
    loop at ME->T_PACKMAT into LS_PACKMAT.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_PACKMAT-ISVCE
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_PACKMAT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_PACKMAT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_PACKMAT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Material Number
      LR_SPVRE_MC_PACKMAT->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_PACKMAT-MATNR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Text
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_TEXT
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PACKMAT-TEXT
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Average Consumption
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_PACKMAT-ISVCE when 'MC_PACKMAT_A' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_A
                                                                                             when 'MC_PACKMAT_L' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_L
                                                                                             when 'MC_PACKMAT_P' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_P
                                                                                             when 'MC_PACKMAT_W' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_AVGCO_W )
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PACKMAT-PMQTY
                                                          UNIT  = LS_PACKMAT-PMQTY_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Purchase Flag
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PURCH
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PACKMAT-PURCH
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Purchase Information
      check LS_PACKMAT-PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

***   Price
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICE
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PACKMAT-PRICE
                                                          CURKY = LS_PACKMAT-PRICE_CURR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Price Unit
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_PACKMAT-ISVCE when 'MC_PACKMAT_A' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_A
                                                                                             when 'MC_PACKMAT_L' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_L
                                                                                             when 'MC_PACKMAT_P' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_P
                                                                                             when 'MC_PACKMAT_W' then ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_PRICP_W )
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PACKMAT-PRICP
                                                          UNIT  = LS_PACKMAT-PRICP_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Vendor
      LR_SPVRE_MC_PACKMAT->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_PACKMAT=>C_PARID_LIFNR
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PACKMAT-LIFNR
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).


***------------------------------------------------------------------------------------------------
***   Add Price Scale
      if LS_PACKMAT-T_PSCALE is not initial.
        IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MC_PACKMAT
                                                IT_PSCALE       = LS_PACKMAT-T_PSCALE
                                      changing  CT_SPVRE        = CT_SPVRE ).
      endif.
    endloop.

  endmethod.
  method ADD_SPVRE_MFSI_P.

    data: LF_IMFXC type ZVCXI_XCSP_IMFXC,
          LF_NEXTL type ZVCXI_XCSP_NEXTL.
    data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFSI_P type ref to /VCXI/CL_VKSR_SPVRE.


***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_P'
                                        IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MFSI_P
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_MFMGR.
    append LR_SPVRE_MFSI_P to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MFSI_P->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Get MF X-Connect
    read table ME->T_IMFXC_IN into LF_IMFXC index 1.
    if SY-SUBRC eq 0.
***   Set MF X-Connect
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_IMFXC
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endif.

*** "Next Low-Level Code" Flag
    read table ME->T_NEXTL into LF_NEXTL index 1.
    if SY-SUBRC eq 0.
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_NEXTL
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endif.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_UNIT type ref to ZCL_VCXI_FBSR_BL_PSTEP_UNIT.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_UNIT.

***----------------------------------------------------------------------------
*** Shipping Unit
    if ME->F_SHUNT       eq LR_BL_PSTEP_UNIT->F_SHUNT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Total Base and Previous Quantity
    if ME->S_TBQTY       eq LR_BL_PSTEP_UNIT->S_TBQTY and
       ME->S_PRQTY       eq LR_BL_PSTEP_UNIT->S_PRQTY.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Packaging Materials
    if ME->T_PACKMAT eq LR_BL_PSTEP_UNIT->T_PACKMAT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_UNIT type ref to ZCL_VCXI_FBSR_BL_PSTEP_UNIT.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_UNIT.

***----------------------------------------------------------------------------
*** Shipping Unit, Total Base Quantity and Previous Quantity
    move ME->F_SHUNT       to LR_BL_PSTEP_UNIT->F_SHUNT.
    move ME->S_TBQTY       to LR_BL_PSTEP_UNIT->S_TBQTY.
    move ME->S_PRQTY       to LR_BL_PSTEP_UNIT->S_PRQTY.

*** Packaging Materials
    move ME->T_PACKMAT     to LR_BL_PSTEP_UNIT->T_PACKMAT.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'F0_AT_UNIT' or 'FB_AT_GRP'.
        ME->FILL_SPVRE_ADDON_UNIT( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_UNIT.

***------------------------------------------------------------------------------------------------
*** Set Shipping Unit
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_ADDON_UNIT=>C_PARID_SHUNT
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->F_SHUNT
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Number of Ups
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_ADDON_UNIT=>C_PARID_NOUPS
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_TBQTY-TBQTY
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Previous Quantity
    if ME->S_PRQTY-PRQTY_UOM is not initial.
      IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_ADDON_UNIT=>C_PARID_PRQTY
                                                     PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                     ATFLV = ME->S_PRQTY-PRQTY
                                                     UNIT  = ME->S_PRQTY-PRQTY_UOM
                                                     SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endif.

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Packaging Material
    ME->ADD_SPVRE_MC_PACKMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                        IR_SPVRE_PARENT = IR_SPVRE_ADDON
                              changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    CF_ID_ARBPL = 'ARBPL_CONV'.

*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      CF_ID_ARBPL = 'ARBPL_MANU'.
    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      CF_ID_ARBPL = 'ARBPL_OUTSO'.
    endif.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM       type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element for Activity Grouping/Unitizing
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = switch #( ME->F_IPSTP when C_IPSTP_GRP  then 'ACTVY_GRP'
                                                                                when C_IPSTP_UNIT then 'ACTVY_UNIT' )
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Shipping Unit
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_ADDON_UNIT=>C_PARID_SHUNT
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                   ATWRT = ME->F_SHUNT
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Number of Ups
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_ADDON_UNIT=>C_PARID_NOUPS
                                                   PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                   ATFLV = ME->S_TBQTY-TBQTY
                                                   SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

*** Set Previous Quantity
    if ME->S_PRQTY-PRQTY_UOM is not initial.
      LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_FBSP_PR_ADDON_UNIT=>C_PARID_PRQTY
                                                     PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                     ATFLV = ME->S_PRQTY-PRQTY
                                                     UNIT  = ME->S_PRQTY-PRQTY_UOM
                                                     SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
    endif.

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Packaging Material
    ME->ADD_SPVRE_MC_PACKMAT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                        IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                              changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_SPVRE_MF.

*** Add MFSI (PC)
    if CF_MFI ne ABAP_TRUE.
      ME->ADD_SPVRE_MFSI_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).
      move ABAP_TRUE to CF_MFI.
    endif.

*** Add MFSO (PC)
    if CF_MFO ne ABAP_TRUE.
      ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                      IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                            changing  CT_SPVRE       = CT_SPVRE ).
      move ABAP_TRUE to CF_MFO.
    endif.

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'F_SHUNT'       VALUE = ref #( ME->F_SHUNT       ) ) to RT_DATA.
    append value #( NAME = 'S_TBQTY'       VALUE = ref #( ME->S_TBQTY       ) ) to RT_DATA.
    append value #( NAME = 'S_PRQTY'       VALUE = ref #( ME->S_PRQTY       ) ) to RT_DATA.
    append value #( NAME = 'T_PACKMAT'     VALUE = ref #( ME->T_PACKMAT     ) ) to RT_DATA.

  endmethod.
  method INIT_BY_MS_PACKMAT.

    data: LT_GATE  type /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PSCALE type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_PACKMAT  type ref to ZCL_VCXI_XCSU_PR_PACKMAT,
          LR_PR_PSCALE   type ref to ZCL_VCXI_XCS_PR_PSCALE.
    field-symbols: <S_PACKMAT> type ZVCXI_P0SR_S_PACKMAT,
                   <S_PSCALE>  type ZVCXI_XCSR_S_PSCALE.

***------------------------------------------------------------------------------------------------
*** Process all Packaging Materials
    loop at IT_PRVDR into LR_GATE
                        where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCSU_PR_PACKMAT.
      move LR_GATE->R_CLSPR ?to LR_PR_PACKMAT.

      append initial line to ME->T_PACKMAT assigning <S_PACKMAT>.

***   Set SVC ID
      <S_PACKMAT>-ISVCE = LR_GATE->GET_ATTRI( IF_ATTID = C_ATTID_ISVCE )-ATTVA.

***   Material Number and Text
      <S_PACKMAT>-MATNR = LR_PR_PACKMAT->GET_PMATN( ).
      <S_PACKMAT>-TEXT = LR_PR_PACKMAT->GET_TEXT( ).

***   Packaging Material Quantity
      LR_PR_PACKMAT->GET_PMQTY( importing ES_PMQTY = <S_PACKMAT>-S_PMQTY ).

***   Get Purchase Flag
      <S_PACKMAT>-PURCH = LR_PR_PACKMAT->GET_PURCH( ).

***   Get Purchased Infos if needed
      check LR_PR_PACKMAT->GET_PURCH( ) ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

      <S_PACKMAT>-S_PRICE = LR_PR_PACKMAT->GET_PRICE( ).
      <S_PACKMAT>-S_PRICP = LR_PR_PACKMAT->GET_PRICP( ).
      <S_PACKMAT>-LIFNR   = LR_PR_PACKMAT->GET_LIFNR( ).

***------------------------------------------------------------------------------------------------
***   Find Provider for Price Scale
      loop at IT_PRVDR into LR_GATE_PSCALE
                      where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCS_PR_PSCALE.
***     Check Scale is part of Packaging Material
        check LR_GATE_PSCALE->IS_IN_LINE( IR_GATE = LR_GATE ) eq ABAP_TRUE.

        LR_PR_PSCALE ?= LR_GATE_PSCALE->R_CLSPR.
        check LR_PR_PSCALE is bound.

***     Add Price Scales
        append value #( ISVCE   = LR_GATE_PSCALE->F_ID
                        S_PSQTY = LR_PR_PSCALE->GET_PSQTY( )
                        S_PRICE = LR_PR_PSCALE->GET_PRICE( )
                        S_PRICP = LR_PR_PSCALE->GET_PRICP( )
                      ) to <S_PACKMAT>-T_PSCALE.
      endloop.

    endloop.

  endmethod.
  method INIT_BY_SHIPUNIT.

    data: LT_DIMEN type ZVCXI_XCSU_TT_DIMEN.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SHIPUNIT type ref to ZCL_VCXI_XCSU_PR_SHIPUNIT.

***------------------------------------------------------------------------------------------------
*** Get Reference for Shipping Unit
    loop at IT_PRVDR into LR_GATE
                      where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_XCSU_PR_SHIPUNIT.
      LR_PR_SHIPUNIT ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_SHIPUNIT is bound.

***------------------------------------------------------------------------------------------------
*** Shipping Unit Type
    ME->F_SHUNT = LR_PR_SHIPUNIT->GET_SHUNT( ).

*** Get Total Base Quantity of Unit
    ME->S_TBQTY = LR_PR_SHIPUNIT->GET_TBQTY( ).

*** Get Previous Quantity (if relevant)
    if ME->F_IPSTP eq C_IPSTP_GRP.
      LR_PR_SHIPUNIT->GET_PRQTY( importing ES_PRQTY = ME->S_PRQTY ).
    endif.

  endmethod.
  method INIT_BY_SPEC.

*** Initialize by Shipping Unit
    ME->INIT_BY_SHIPUNIT( IT_PRVDR = IT_PRVDR ).

*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

*** Initialize by Packaging Materials
    ME->INIT_BY_MS_PACKMAT( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method MERGE.

    append lines of IR_BL_PSTEP_UNIT->T_PACKMAT   to ME->T_PACKMAT.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_IN.
  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_OUT.

    loop at CT_BGDIM assigning field-symbol(<S_BGDIM>).
      <S_BGDIM>-SHUNT = ME->F_SHUNT.
      <S_BGDIM>-NOUPS = ME->S_TBQTY-TBQTY.
    endloop.

  endmethod.
