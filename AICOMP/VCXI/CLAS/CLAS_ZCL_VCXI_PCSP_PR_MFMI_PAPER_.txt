
class ZCL_VCXI_PCSP_PR_MFMI_PAPER definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MFMI
  create public .

public section.

  constants C_IPRVT_PC_MFMI_PAPER type /VCXI/VKSC_IPRVT value 'ZVCXI_PCSP_MFMI_PAPER'. "#EC NOTEXT
  constants C_PARID_BAWGP_A type /VCXI/VKS_PARID value 'ZVCXI_PC_BAWGP_A'. "#EC NOTEXT
  constants C_PARID_BAWGT type /VCXI/VKS_PARID value 'ZVCXI_PC_BAWGT'. "#EC NOTEXT
  constants C_PARID_BPAID type /VCXI/VKS_PARID value 'ZVCXI_PC_BPAID'. "#EC NOTEXT
  constants C_PARID_PAWID type /VCXI/VKS_PARID value 'ZVCXI_PC_PAWID'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_BAWGP
    returning
      value(RS_BAWGP) type ZVCXI_PCS_S_BAWGP
    raising
      /VCXI/CX_CKX .
  methods GET_BAWGT
    returning
      value(RS_BAWGT) type ZVCXI_PCS_S_BAWGT
    raising
      /VCXI/CX_CKX .
  methods GET_PAWID
    returning
      value(RS_PAWID) type ZVCXI_PCS_S_PAWID
    raising
      /VCXI/CX_CKX .
  methods SET_BAWGP
    importing
      !IS_BAWGP type ZVCXI_PCS_S_BAWGP
      !IF_SETBY type /VCXI/VKSR_SETBY optional
    raising
      /VCXI/CX_CKX .
  methods SET_BAWGT
    importing
      !IS_BAWGT type ZVCXI_PCS_S_BAWGT
      !IF_SETBY type /VCXI/VKSR_SETBY optional
    raising
      /VCXI/CX_CKX .
  methods SET_PAWID
    importing
      !IS_PAWID type ZVCXI_PCS_S_PAWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  constants C_IEVNT_O_BAWGT_CHANGED type /VCXI/VKSC_IEVNT value 'BAWGT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PAWID_CHANGED type /VCXI/VKSC_IEVNT value 'PAWID_CHANGED' ##NO_TEXT.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .

  methods CONV_TO_CONSU
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSP_PR_MFMI_PAPER definition
class ZCL_VCXI_PCSP_PR_MFMI_PAPER implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Pramameter dimensions
    ME->INIT_DIM_PARAM( ).

  endmethod.
method CONV_TO_CONSU.

  data:  LF_DIMID_I       type DIMID.
  data: LS_BAWGT type ZVCXI_PCS_S_BAWGT,
        LS_BAWGP type ZVCXI_PCS_S_BAWGP,
        LS_PAWID type ZVCXI_PCS_S_PAWID,
        LS_CALCV type ZVCXI_XCS_S_CALCV,
        LS_AREA  type ZVCXI_XCS_S_CALCV.

***----------------------------------------------------------------------------------------------------------
*** Get Dimension to do Right conversion to Area
  LF_DIMID_I = ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = IS_MQTYI-MQTYI_UOM ).

  case LF_DIMID_I.
    when 'SURFAC'.
      move IS_MQTYI-MQTYI     to LS_AREA-CALCV.
      move IS_MQTYI-MQTYI_UOM to LS_AREA-CALCV_UOM.

    when 'LENGTH'.
      LS_PAWID = ME->GET_PAWID( ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_MQTYI-MQTYI
                                                          IF_CALCV_UOM_1 = IS_MQTYI-MQTYI_UOM
                                                          IF_CALCV_2     = LS_PAWID-PAWID
                                                          IF_CALCV_UOM_2 = LS_PAWID-PAWID_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                importing EF_CALCV       = LS_AREA-CALCV
                                                          EF_CALCV_UOM   = LS_AREA-CALCV_UOM ).

  endcase.

***----------------------------------------------------------------------------------------------------------
*** Perform Conversion to Consumption
  case ZCL_VCXI_XCS_SERVICE_UNIT=>GET_DIMID( IF_UOM = ME->GET_CONSU( )-CONSU_UOM ).
    when 'MASS'.
***   Get Basis Weight
      move ME->GET_BAWGT( ) to LS_BAWGT.
      move ME->GET_BAWGP( ) to LS_BAWGP.

***   Calculate Weight
      if LS_BAWGP-BAWGP is not initial.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_AREA-CALCV
                                                            IF_CALCV_UOM_1 = LS_AREA-CALCV_UOM
                                                            IF_CALCV_2     = LS_BAWGP-BAWGP
                                                            IF_CALCV_UOM_2 = LS_BAWGP-BAWGP_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                  importing EF_CALCV       = LS_CALCV-CALCV
                                                            EF_CALCV_UOM   = LS_CALCV-CALCV_UOM ).

        RS_CONSU-CONSU   = LS_CALCV-CALCV * LS_BAWGT-BAWGT.
      else.
        RS_CONSU-CONSU   = 0.
      endif.
      RS_CONSU-CONSU_UOM = LS_BAWGT-BAWGT_UOM.

    when 'SURFAC'.
***   Direct use of calculated Area
      RS_CONSU = value #( CONSU     = LS_AREA-CALCV
                          CONSU_UOM = LS_AREA-CALCV_UOM ).
  endcase.

endmethod.
method GET_BAWGP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BAWGP_A ).
  move LS_PARAM-ATFLV to RS_BAWGP-BAWGP.
  move LS_PARAM-UNIT  to RS_BAWGP-BAWGP_UOM.

endmethod.
method GET_BAWGT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BAWGT ).
  move LS_PARAM-ATFLV to RS_BAWGT-BAWGT.
  move LS_PARAM-UNIT  to RS_BAWGT-BAWGT_UOM.

endmethod.
method GET_PAWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PAWID ).
  move LS_PARAM-ATFLV to RS_PAWID-PAWID.
  move LS_PARAM-UNIT  to RS_PAWID-PAWID_UOM.

endmethod.
method GET_STATUS.

  data: LS_MFISP type ZVCXI_XCSP_S_MFISP,
        LS_BAWGT type ZVCXI_PCS_S_BAWGT,
        LS_BAWGP type ZVCXI_PCS_S_BAWGP.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Setup Factor
  LS_MFISP = ME->GET_MFISP( ).
  if LS_MFISP-MFISP is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

***------------------------------------------------------------------
*** Check Consumption Factor
  if ME->GET_MFICF( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

***------------------------------------------------------------------
*** Check Base Weight
  LS_BAWGT = ME->GET_BAWGT( ).
  if LS_BAWGT-BAWGT is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

***------------------------------------------------------------------
*** Check Base Weight Unit
  LS_BAWGP = ME->GET_BAWGP( ).
  if LS_BAWGP-BAWGP is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_MFISP type ZVCXI_XCSP_S_MFISP,
        LS_BAWGT type ZVCXI_PCS_S_BAWGT,
        LS_BAWGP type ZVCXI_PCS_S_BAWGP.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Setup Factor
  LS_MFISP = ME->GET_MFISP( ).
  if LS_MFISP-MFISP is not initial.
***  Setup Factor is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '101' ).
  else.
***  Setup Factor is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '102' ).
  endif.

***------------------------------------------------------------------
*** Check Consumption Factor
  if ME->GET_MFICF( ) is not initial.
***  Consumption Factor is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '103' ).
  else.
***  Consumption Factor is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '104' ).
  endif.

***------------------------------------------------------------------
*** Check Base Weight
  LS_BAWGT = ME->GET_BAWGT( ).
  if LS_BAWGT-BAWGT is not initial.
***  Base Weight is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '105' ).
  else.
***  Base Weight is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '106' ).
  endif.

***------------------------------------------------------------------
*** Check Base Weight Unit
  LS_BAWGP = ME->GET_BAWGP( ).
  if LS_BAWGP-BAWGP is not initial.
***  Base Weight Unit is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '107' ).
  else.
***  Base Weight Unit is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PCSP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '108' ).
  endif.

endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.


    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

*** Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

*** Price Per
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_PRICP_A or
                            PARID eq C_PARID_PRICP_L or
                            PARID eq C_PARID_PRICP_P or
                            PARID eq C_PARID_PRICP_W ).
      move LS_PARAM-PARID to ME->F_PARID_PRICP.
      exit.
    endloop.

  endmethod.
method SET_BAWGP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BAWGP_A ).

  move IS_BAWGP-BAWGP                      to LS_PARAM-ATFLV.
  move IS_BAWGP-BAWGP_UOM                  to LS_PARAM-UNIT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BAWGT_CHANGED ).
  endif.

endmethod.
method SET_BAWGT.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BAWGT ).

  move IS_BAWGT-BAWGT                      to LS_PARAM-ATFLV.
  move IS_BAWGT-BAWGT_UOM                  to LS_PARAM-UNIT.
  move IF_SETBY                            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BAWGT_CHANGED ).
  endif.

endmethod.
method SET_PAWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PAWID ).

  move IS_PAWID-PAWID      to LS_PARAM-ATFLV.
  move IS_PAWID-PAWID_UOM  to LS_PARAM-UNIT.
  move IF_SETBY            to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PAWID_CHANGED ).
  endif.

endmethod.
