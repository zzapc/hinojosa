
class ZCL_VCXI_P0SS_UI_SCORE_MGR definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_SCORE_MGR_VIS type ZVCXI_P0SS_S_SCORE_MGR_VIS read-only .
  data F_DYNNR_SUBSC type DYNNR .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_SCORE_MGR_VIS
    importing
      !IS_SCORE_MGR_VIS type ZVCXI_P0SS_S_SCORE_MGR_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_SCORE_MGR type ref to ZCL_VCXI_P0SS_PR_SCORE_MGR .
  data R_GRID_SCORE type ref to ZCL_VCXI_P0SS_GRID_SCORE .
  data F_CURSOR type SCRFNAME .
  data R_GRID_MS_TAPE type ref to ZCL_VCXI_P0SS_GRID_MS_TAPE .
  constants C_DYNNR_INITIAL type DYNNR value '9999'. "#EC NOTEXT
  constants C_DYNNR_MS_TAPE type DYNNR value '0110'. "#EC NOTEXT

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SS_UI_SCORE_MGR definition
class ZCL_VCXI_P0SS_UI_SCORE_MGR implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_P0SS_UI_SCORE_MGR_BIND'
    exporting
      IR_UI_SCORE_MGR = ME
    importing
      ES_DYNP         = ME->S_DYNP.

*** Create Grid for GRID_SCORE
  create object ME->R_GRID_SCORE
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0100CC_GRID_SCORE'.

*** Create Grid for GRID_MS_TAPE
  create object ME->R_GRID_MS_TAPE
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0100CC_GRID_MS_TAPE'.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_SCORE_MGR.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DEACTIVATE.

  SUPER->DEACTIVATE( ).

  if ME->R_GRID_SCORE is bound.
    ME->R_GRID_SCORE->DO_FREE( ).
    clear ME->R_GRID_SCORE.
  endif.

  if ME->R_GRID_MS_TAPE is bound.
    ME->R_GRID_MS_TAPE->DO_FREE( ).
    clear ME->R_GRID_MS_TAPE.
  endif.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Init Vis
  ME->INIT_VIS( ).

*** Init Grid
  if ME->R_GRID_SCORE is bound.
    if ME->R_GRID_SCORE->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_SCORE->F_REFRESH_REQ.
    endif.
    ME->R_GRID_SCORE->REFRESH_GRID( ).
  endif.

*** Set right subscreen
  if ME->R_PR_SCORE_MGR->IS_MS_TAPE_ACTIVE( ) eq ABAP_TRUE.
    move C_DYNNR_MS_TAPE to ME->F_DYNNR_SUBSC.

*** Refresh Grid
  if ME->R_GRID_MS_TAPE is bound.
    if ME->R_GRID_MS_TAPE->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_MS_TAPE->F_REFRESH_REQ.
    endif.
    ME->R_GRID_MS_TAPE->REFRESH_GRID( ).
  endif.

  else.
    move C_DYNNR_INITIAL to ME->F_DYNNR_SUBSC.
  endif.



endmethod.
method DO_UPDATE_SCORE_MGR_VIS.

*** Set Panel Orientation
  if ME->S_SCORE_MGR_VIS-PANOR ne IS_SCORE_MGR_VIS-PANOR.
    ME->R_PR_SCORE_MGR->SET_PANOR( IF_PANOR = IS_SCORE_MGR_VIS-PANOR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Set Score Status
  if ME->S_SCORE_MGR_VIS-SSCOR ne IS_SCORE_MGR_VIS-SSCOR.
    ME->R_PR_SCORE_MGR->SET_SSCOR( IF_SSCOR = IS_SCORE_MGR_VIS-SSCOR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.


*** Set Cross Score Pressure
  if ME->S_SCORE_MGR_VIS-PSCOC ne IS_SCORE_MGR_VIS-PSCOC.
    ME->R_PR_SCORE_MGR->SET_PSCOC( IF_PSCOC = IS_SCORE_MGR_VIS-PSCOC
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.


*** Set Length Score Pressure
  if ME->S_SCORE_MGR_VIS-PSCOL ne IS_SCORE_MGR_VIS-PSCOL.
    ME->R_PR_SCORE_MGR->SET_PSCOL( IF_PSCOL = IS_SCORE_MGR_VIS-PSCOL
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method DO_USER_COMMAND.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_SCORE is bound.
    ME->R_GRID_SCORE->CHECK_CHANGED_DATA( ).
  endif.

  if ME->R_GRID_MS_TAPE is bound.
    ME->R_GRID_MS_TAPE->CHECK_CHANGED_DATA( ).
  endif.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_SCORE_MGR.

endmethod.
method INIT_VIS.

  data: LF_TPRST type ZVCXI_P0SS_TPRST,
        LF_PRSTY type ZVCXI_P0SS_PRSTY.

  free: ME->S_SCORE_MGR_VIS.

*** Get Panel Orientation
  move ME->R_PR_SCORE_MGR->GET_PANOR( )       to ME->S_SCORE_MGR_VIS-PANOR.
  move ME->R_PR_SCORE_MGR->GET_PANOR_DESCR( ) to ME->S_SCORE_MGR_VIS-PANOR_DESCR.

*** Get Score Status
  move ME->R_PR_SCORE_MGR->GET_SSCOR( )       to ME->S_SCORE_MGR_VIS-SSCOR.
  move ME->R_PR_SCORE_MGR->GET_SSCOR_DESCR( ) to ME->S_SCORE_MGR_VIS-SSCOR_DESCR.

*** Get Cross Score Pressure
  move ME->R_PR_SCORE_MGR->GET_PSCOC( )       to ME->S_SCORE_MGR_VIS-PSCOC.
  move ME->R_PR_SCORE_MGR->GET_PSCOC_DESCR( ) to ME->S_SCORE_MGR_VIS-PSCOC_DESCR.

*** Get Length Score Pressure
  move ME->R_PR_SCORE_MGR->GET_PSCOL( )       to ME->S_SCORE_MGR_VIS-PSCOL.
  move ME->R_PR_SCORE_MGR->GET_PSCOL_DESCR( ) to ME->S_SCORE_MGR_VIS-PSCOL_DESCR.

*** Set Parameter ID's for Product Style Type and Product Style
  ME->R_PR_SCORE_MGR->GET_TPRST_PRSTY( importing EF_TPRST = LF_TPRST
                                                 EF_PRSTY = LF_PRSTY ).
  set parameter id 'ZVCXI_P0SS_TPRST' field LF_TPRST.
  set parameter id 'ZVCXI_P0SS_PRSTY' field LF_PRSTY.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
