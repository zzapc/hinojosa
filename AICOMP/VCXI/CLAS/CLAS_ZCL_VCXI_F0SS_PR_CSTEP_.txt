
class ZCL_VCXI_F0SS_PR_CSTEP definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  abstract
  create public .

public section.

  interfaces ZIF_VCXI_F0SS_COMM_NEXT
      all methods abstract .
  interfaces ZIF_VCXI_F0SS_COMM_PREV
      all methods abstract .
  interfaces ZIF_VCXI_XCS_NGREP .

  constants C_IPRVT_F0_CSTEP type /VCXI/VKSC_IPRVT value 'ZVCXI_F0SS_CSTEP' ##NO_TEXT.

  methods GET_INB_CSTEPS_DEF
    importing
      !IF_NOCHECK type ABAP_BOOL default ABAP_FALSE
    exporting
      !ET_PRVDR_CSTEPS type ZVCXI_F0SS_TT_PRVDR_DEF
    raising
      /VCXI/CX_CKX .
  methods GET_WERKS
    exporting
      !EF_LANGU type LANGU
    returning
      value(RF_WERKS) type WERKS_D
    raising
      /VCXI/CX_CKX .
  methods ADD_CSTEP_PRVDR
    importing
      !IF_FCODE type SYUCOMM
      !IT_PRVDR_DEF type ZVCXI_F0SS_TT_PRVDR_DEF
    returning
      value(RR_GATE) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_CSTEPS_DEF
    exporting
      !ET_PRVDR_CSTEPS type ZVCXI_F0SS_TT_PRVDR_DEF
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.

  methods GET_PRVDR_SPEC
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_SPEC) type ref to ZCL_VCXI_F0SS_PR_SPEC
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_F0SS_PR_CSTEP definition
class ZCL_VCXI_F0SS_PR_CSTEP implementation.
  method ADD_CSTEP_PRVDR.

    data: LF_POSID type /VCXI/VKSR_POSID,
          LF_ID    type /VCXI/CKX_ID.
    data: LS_PRVDR_DEF type ZVCXI_F0SS_S_PRVDR_DEF.


***--------------------------------------------------------------------------------------
*** Check ID
    check IF_FCODE cp 'ADD@*'.

    move IF_FCODE+4 to LF_ID.
    check LF_ID is not initial.

    read table IT_PRVDR_DEF into LS_PRVDR_DEF with key ID = LF_ID.

    if ME->R_GATE is bound.
      read table LS_PRVDR_DEF-T_GATE_SEQ with key TABLE_LINE = ME->R_GATE transporting no fields.
      if SY-SUBRC is initial.
        LF_POSID = SY-TABIX.
        multiply LF_POSID by 10.
      endif.
    endif.

*** Make sure it`s after selected position
    add 5 to LF_POSID.

***--------------------------------------------------------------------------------------
*** Create Provider
    check LS_PRVDR_DEF-R_PARENT_GATE is bound.

    RR_GATE = LS_PRVDR_DEF-R_PARENT_GATE->CREATE_ELEMENT( IF_ID = LF_ID ).
    if RR_GATE->IS_INUSE( ) eq ABAP_FALSE.
      RR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).
    endif.
    RR_GATE->SET_POSID( IF_POSID = LF_POSID ).

*** Reorg position ID's
    RR_GATE->REORG_POSID( ).

  endmethod.
  method GET_CSTEPS_DEF.

    data: LT_PRVDR     type /VCXI/VKSR_TT_GATE,
          LT_PRVDR_DEF type ZVCXI_F0SS_TT_PRVDR_DEF.
    data: LR_GATE    type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SPEC type ref to ZCL_VCXI_F0SS_PR_SPEC.
    field-symbols: <S_PRVDR_CSTEPS> type ZVCXI_F0SS_S_PRVDR_DEF.


***--------------------------------------------------------------------------------------
*** Get Conversion Steps via Specification
    LT_PRVDR = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_F0SS_PR_SPEC=>C_IPRVT_F0_SPEC ).
    read table LT_PRVDR into LR_GATE index 1.
    if LR_GATE is bound.
      try .
          move LR_GATE->R_CLSPR ?to LR_PR_SPEC.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_SPEC.
      endtry.

      if LR_PR_SPEC is bound.
        LR_PR_SPEC->GET_CSTEPS_DEF( importing ET_PRVDR_CSTEPS = LT_PRVDR_DEF ).

        if LINES( LT_PRVDR_DEF ) is not initial.
***       Add Split option
          insert initial line into table ET_PRVDR_CSTEPS assigning <S_PRVDR_CSTEPS>.
          move ZCL_VCXI_F0SS_ND_CSTEP=>C_UC_SPLIT to <S_PRVDR_CSTEPS>-ID.

          append lines of LT_PRVDR_DEF to ET_PRVDR_CSTEPS.
        endif.

***     Specification and Conversion Steps are found
        return.
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** Get Conversion Steps via Input -> Inbound CSteps
    ME->GET_INB_CSTEPS_DEF( importing ET_PRVDR_CSTEPS = LT_PRVDR_DEF ).
    if LINES( LT_PRVDR_DEF ) is not initial.
***   Add Split option
      insert initial line into table ET_PRVDR_CSTEPS assigning <S_PRVDR_CSTEPS>.
      move ZCL_VCXI_F0SS_ND_CSTEP=>C_UC_SPLIT to <S_PRVDR_CSTEPS>-ID.

      append lines of LT_PRVDR_DEF to ET_PRVDR_CSTEPS.
    endif.

  endmethod.
  method GET_INB_CSTEPS_DEF.

    data: LF_ACTIV_PRVDR  type        NUMC3.
    data: LS_PRVDR     type        ZVCXI_F0SS_S_PRVDR_DEF,
          LS_PRVDR_DEF type        /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_PRVDR_DEF type        /VCXI/VKSR_TT_PRVDR_DEF,
          LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PARENT_GATE type ref to /VCXI/CL_VKSR_GATE.

*** Get Parent Gate
    move ME->R_GATE->GET_PARENT( ) to LR_PARENT_GATE.

    check LR_PARENT_GATE is bound.

*** Get Provider Definition of the Parent Gate
    LT_PRVDR_DEF = LR_PARENT_GATE->GET_PRVDR_DEF( IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).

    loop at LT_PRVDR_DEF into LS_PRVDR_DEF where IPRVT = C_IPRVT_F0_CSTEP.

***   Get Gates of Provider
      LT_GATE = LR_PARENT_GATE->GET_PRVDR( IF_IPRVT = LS_PRVDR_DEF-IPRVT
                                           IF_INUSE = ABAP_TRUE ).

      if IF_NOCHECK eq ABAP_FALSE.
        loop at LT_GATE into LR_GATE.
***       Get all Active Provider with searched ID
          check LR_GATE->F_ID eq LS_PRVDR_DEF-ID.
          add 1 to LF_ACTIV_PRVDR.
        endloop.

***     Check if there are less then maximal Provider
        check LF_ACTIV_PRVDR < LS_PRVDR_DEF-QTYMA.
      endif.

      move LS_PRVDR_DEF to LS_PRVDR-S_PRVDR_DEF.
      move LT_GATE      to LS_PRVDR-T_GATE_SEQ.
      LR_PARENT_GATE->SORT_GATE( changing CT_GATE = LS_PRVDR-T_GATE_SEQ ).
      move LR_PARENT_GATE  to LS_PRVDR-R_PARENT_GATE.

      append LS_PRVDR to ET_PRVDR_CSTEPS.
    endloop.

  endmethod.
  method GET_PRVDR_SPEC.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_SPEC.

***------------------------------------------------------------------------------------------------
*** Find Provider for Specification
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_F0SS_PR_SPEC=>C_IPRVT_F0_SPEC
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_SPEC.

  endmethod.
  method GET_WERKS.

    data: LR_PR_SPEC type ref to ZCL_VCXI_F0SS_PR_SPEC.

    LR_PR_SPEC = ME->GET_PRVDR_SPEC( ).
    check LR_PR_SPEC is bound.

    if EF_LANGU is requested.
      LR_PR_SPEC->GET_WERKS( importing EF_WERKS = RF_WERKS
                                       EF_LANGU = EF_LANGU ).
    else.
      LR_PR_SPEC->GET_WERKS( importing EF_WERKS = RF_WERKS ).
    endif.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

    endcase.

  endmethod.
  method HANDLE_SET_DEFAULT.

    ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

  endmethod.
  method ZIF_VCXI_XCS_NGREP~FILL.

*** Add Node for Conversion Step
    data(LF_NODE_KEY) = CR_NETGRAPH_JSON->ADD_NODE( IF_TITLE      = ME->GET_DESCR( )
                                                    IF_DESCR      = ME->GET_DESCR( )
                                                    IF_ICON       = 'sap-icon://activity-items'
                                                    IF_STATUS     = CR_NETGRAPH_JSON->GET_STATUS_BY_GATE( ME->R_GATE )
                                                    IF_GROUP_KEY  = IF_GROUP_KEY ).

*** Register Gate to Node
    CR_NETGRAPH_JSON->REGISTER_TO_NODE( IR_OBJECT   = ME->R_GATE
                                        IF_NODE_KEY = LF_NODE_KEY ).

  endmethod.
