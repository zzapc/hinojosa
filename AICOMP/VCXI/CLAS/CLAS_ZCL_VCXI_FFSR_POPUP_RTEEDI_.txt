
class ZCL_VCXI_FFSR_POPUP_RTEEDI definition
  public
  inheriting from ZCL_VCXI_XCSR_POPUP_RTEEDI
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_BL_PRTE type ref to ZCL_VCXI_XCSR_BL_PRTE
      !IR_PR_RTESPV type ref to ZCL_VCXI_XCSR_PR_RTESPV
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
      !IF_LOCKED type /VCXI/CKX_LOCKED
      !IF_TABNAME type TABNAME default 'ZVCXI_FFSR_S_RTEEDI_GRID'
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_UC_RHICO
    importing
      !IS_ROW type LVC_S_ROW
    raising
      /VCXI/CX_CKX .
  methods GET_SYSOM
    returning
      value(RF_SYSOM) type /VCXI/VKS_SYSOM
    raising
      /VCXI/CX_CKX .

  methods BUILD_GRID_DATA
    redefinition .
  methods FILL_LINE_BY_PSTEP
    redefinition .
  methods HANDLE_HOTSPOT_CLICK
    redefinition .
  methods REFRESH_FIELDCAT
    redefinition .
  methods REFRESH_STYLE
    redefinition .
  methods UPDATE_BL_PRTE
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSR_POPUP_RTEEDI definition
class ZCL_VCXI_FFSR_POPUP_RTEEDI implementation.
  method BUILD_GRID_DATA.

    data: LS_RTEEDI_GRID type ZVCXI_FFSR_S_RTEEDI_GRID.
    data: LT_RTE_PSTEP type /VCXI/VSMR_TT_RTE_PSTEP.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL,
          LR_RTE_PSTEP type ref to /VCXI/CL_VSMR_RTE_PSTEP.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


***--------------------------------------------------------------------------------------
*** Build Super Data
    SUPER->BUILD_GRID_DATA( ).

*** Collect "last" Roll Handling of each machine
    loop at ME->R_BL_PRTE_NEW->R_RTE_PRTE->T_RTE_ARBPL into LR_RTE_ARBPL.
      clear LR_RTE_PSTEP.
      loop at LR_RTE_ARBPL->T_RTE_PSTEP into LR_RTE_PSTEP
             where TABLE_LINE->R_BLOBJ is instance of ZIF_VCXI_FFSR_RHNDL.
      endloop.
      if LR_RTE_PSTEP is bound.
        append LR_RTE_PSTEP to LT_RTE_PSTEP.
      endif.
    endloop.

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

***--------------------------------------------------------------------------------------
    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_RTEEDI_GRID.

***   Keep Roll Handling only for last Step per Work Center
      if not LINE_EXISTS( LT_RTE_PSTEP[ TABLE_LINE = LS_RTEEDI_GRID-R_RTE_PSTEP ] ).
        clear: LS_RTEEDI_GRID-RHICO,
               LS_RTEEDI_GRID-RWSID,
               LS_RTEEDI_GRID-RWDIR,
               LS_RTEEDI_GRID-EYEMP,
               LS_RTEEDI_GRID-RDMTA,
               LS_RTEEDI_GRID-S_RDITA,
               LS_RTEEDI_GRID-S_RLETA,
               LS_RTEEDI_GRID-S_RWGTA.
      endif.

      move-corresponding LS_RTEEDI_GRID to <S_DATA>.
    endloop.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( exporting IR_BL_PRTE   = IR_BL_PRTE
                                  IR_PR_RTESPV = IR_PR_RTESPV
                                  IR_APPDATA   = IR_APPDATA
                                  IF_LOCKED    = IF_LOCKED
                                  IF_TABNAME   = IF_TABNAME ).

  endmethod.
  method FILL_LINE_BY_PSTEP.

    data: LS_RTEEDI_GRID type        ZVCXI_FFSR_S_RTEEDI_GRID.


***--------------------------------------------------------------------------------------
*** Fill Super Data
    SUPER->FILL_LINE_BY_PSTEP( exporting IR_RTE_PSTEP = IR_RTE_PSTEP
                               changing  CS_DATA      = CS_DATA ).

    move-corresponding CS_DATA to LS_RTEEDI_GRID.

***--------------------------------------------------------------------------------------
*** Roll Handling of last Production Step per Work Center
    if IR_RTE_PSTEP->R_BLOBJ is instance of ZIF_VCXI_FFSR_RHNDL and
       ME->GET_COMBO( IF_INDEX = SY-TABIX + 1 ) ne ABAP_TRUE.

***   Roll Handling Information
      data(LR_RHNDL) = cast ZIF_VCXI_FFSR_RHNDL( IR_RTE_PSTEP->R_BLOBJ ).
      if LINES( LR_RHNDL->T_RHNDL ) eq 1.
        data(LS_RHNDL) = LR_RHNDL->T_RHNDL[ 1 ].
        move: LS_RHNDL-RWSID   to LS_RTEEDI_GRID-RWSID,
              LS_RHNDL-RWDIR   to LS_RTEEDI_GRID-RWDIR,
              LS_RHNDL-EYEMP   to LS_RTEEDI_GRID-EYEMP,
              LS_RHNDL-RDMTA   to LS_RTEEDI_GRID-RDMTA,
              LS_RHNDL-S_RDITA to LS_RTEEDI_GRID-S_RDITA,
              LS_RHNDL-S_RLETA to LS_RTEEDI_GRID-S_RLETA,
              LS_RHNDL-S_RWGTA to LS_RTEEDI_GRID-S_RWGTA.
      endif.

***   Icon for Roll Handling Popup
      LS_RTEEDI_GRID-RHICO = ICON_MODIFY.
    endif.

***--------------------------------------------------------------------------------------
*** Update generic line
    move-corresponding LS_RTEEDI_GRID to CS_DATA.

  endmethod.
  method GET_SYSOM.

    data: LR_CUPRFL  type ref to /VCXI/CL_VKSC_CUPRFL.

*** Get Instance of Configuration Profile
    LR_CUPRFL = /VCXI/CL_VKSC_CUPRFL=>GET_INSTANCE_BY_CMPRK( IS_CMPRK = ME->R_APPDATA->S_CMPRK ).
    check LR_CUPRFL is bound.

*** Get System of Measurement for production step plant
    RF_SYSOM = LR_CUPRFL->GET_SYSOM_BY_WERKS( IF_WERKS = ME->R_APPDATA->F_WERKS ).

  endmethod.
  method HANDLE_HOTSPOT_CLICK.

*** Call Super
    SUPER->HANDLE_HOTSPOT_CLICK( E_ROW_ID    = E_ROW_ID
                                 E_COLUMN_ID = E_COLUMN_ID
                                 ES_ROW_NO   = ES_ROW_NO ).

    try.
        case E_COLUMN_ID-FIELDNAME.
          when 'RHICO'.
            ME->HANDLE_UC_RHICO( IS_ROW = E_ROW_ID ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_RHICO.

    data: LS_RTEEDI_GRID type ZVCXI_FFSR_S_RTEEDI_GRID.
    data: LR_RTE_ARBPL type ref to /VCXI/CL_VSMR_RTE_ARBPL.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.


*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Get table line
    read table <T_DATA> assigning <S_DATA> index IS_ROW-INDEX.
    check SY-SUBRC eq 0.
    move-corresponding <S_DATA> to LS_RTEEDI_GRID.

*** Find Work Center
    loop at ME->R_BL_PRTE_NEW->R_RTE_PRTE->T_RTE_ARBPL into LR_RTE_ARBPL.
      read table LR_RTE_ARBPL->T_RTE_PSTEP with key TABLE_LINE = LS_RTEEDI_GRID-R_RTE_PSTEP
                                           transporting no fields.
      if SY-SUBRC eq 0.
        exit.
      else.
        clear LR_RTE_ARBPL.
      endif.
    endloop.
    check LR_RTE_ARBPL is bound.

*** Call Popup
    ZCL_VCXI_FFSR_POPUP_RHNDL=>START( IR_RTE_ARBPL = LR_RTE_ARBPL
                                      IF_LOCKED    = ME->F_LOCKED
                                      IF_SYSOM     = ME->GET_SYSOM( ) ).

*** Update Production Route
    ME->UPDATE_BL_PRTE( ).

*** Check Production Route
    ME->R_BL_PRTE_NEW->CHECK( ).

  endmethod.
  method REFRESH_FIELDCAT.

    field-symbols: <S_FCAT>        type        LVC_S_FCAT.

    SUPER->REFRESH_FIELDCAT( ).

***----------------------------------------------------------------------------
*** Change Field catalog attributes
    loop at ME->T_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
***     Roll Handling Button
        when 'RHICO'.
          move ABAP_TRUE       to <S_FCAT>-HOTSPOT.
          move 'C'             to <S_FCAT>-JUST.

        when 'RDIMU'.
          move ABAP_TRUE       to <S_FCAT>-NO_OUT.

      endcase.
    endloop.

  endmethod.
  method REFRESH_STYLE.

    data:          LS_RTEEDI_GRID  type          ZVCXI_FFSR_S_RTEEDI_GRID.
    data:          LT_STYLE        type table of LVC_S_STYL.
    field-symbols: <T_DATA>  type standard table,
                   <S_DATA>  type          ANY,
                   <S_STYLE> type          LVC_S_STYL.

    SUPER->REFRESH_STYLE( ).


***----------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Update Style
    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_RTEEDI_GRID.
      move LS_RTEEDI_GRID-TSTYL to LT_STYLE.

***----------------------------------------------------------------------------
***   Roll Handling Icon
      append initial line to LT_STYLE assigning <S_STYLE>.
      move 'RHICO'                                 to <S_STYLE>-FIELDNAME.
      if LS_RTEEDI_GRID-RHICO is not initial.
        add CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT      to <S_STYLE>-STYLE.
      else.
        add CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO   to <S_STYLE>-STYLE.
      endif.

***----------------------------------------------------------------------------
***   Update Style Table
      move LT_STYLE to LS_RTEEDI_GRID-TSTYL.
      move-corresponding LS_RTEEDI_GRID to <S_DATA>.

    endloop.

  endmethod.
  method UPDATE_BL_PRTE.

    data: LR_BL_PRTE   type ref to ZCL_VCXI_FFSR_BL_PRTE.

***--------------------------------------------------------------------------------------
*** Run Super Implementation
    SUPER->UPDATE_BL_PRTE( ).

***--------------------------------------------------------------------------------------
*** Update Roll Handling for complete Route
    try.
        move ME->R_BL_PRTE_NEW ?to LR_BL_PRTE.
        check LR_BL_PRTE is bound.

        LR_BL_PRTE->UPDATE_RHNDL( ).
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

  endmethod.
