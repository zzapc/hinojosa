
class ZCL_VCXI_P0SS_GRID_SCSTR_SE definition
  public
  inheriting from ZCL_VCXI_P0SS_GRID_SCSTR
  create public .

public section.
protected section.

  methods GET_NO_CALC
    returning
      value(RF_NO_CALC) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SS_GRID_SCSTR_SE definition
class ZCL_VCXI_P0SS_GRID_SCSTR_SE implementation.
method GET_FIELDCAT.

  data:          LF_LOCKED    type        /VCXI/CKX_LOCKED.
  data:          LS_FCAT      type        LVC_S_FCAT.
  field-symbols: <S_FCAT>     type        LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock Split Status and Nested Flag
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'
        or 'SCSOP' or 'DIVDI' or 'SHTDI' or 'SHTDI_DESCR'.
        move ABAP_TRUE    to <S_FCAT>-TECH.

        if <S_FCAT>-FIELDNAME eq 'SHTDI_DESCR'.
          read table RT_FCAT with key FIELDNAME = 'SHTDI' into LS_FCAT.
          move LS_FCAT-COLTEXT   to <S_FCAT>-COLTEXT.
          move LS_FCAT-SCRTEXT_L to <S_FCAT>-SCRTEXT_L.
          move LS_FCAT-SCRTEXT_M to <S_FCAT>-SCRTEXT_M.
          move LS_FCAT-SCRTEXT_S to <S_FCAT>-SCRTEXT_S.
        endif.

      when 'CSCOR'.
        if LF_LOCKED   eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        else.
          move ABAP_FALSE    to <S_FCAT>-EDIT.
        endif.

      when 'SCSTR'.
        move ABAP_TRUE    to <S_FCAT>-TECH.
      when 'SCSTR_EXT'.
        if LF_LOCKED    eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        else.
          move ABAP_FALSE    to <S_FCAT>-EDIT.
        endif.

      when 'STATU'.
        move ABAP_TRUE to <S_FCAT>-ICON.

      when 'SCSOP_DESCR'.
        read table RT_FCAT with key FIELDNAME = 'SCSOP' into LS_FCAT.
        move LS_FCAT-COLTEXT   to <S_FCAT>-COLTEXT.
        move LS_FCAT-SCRTEXT_L to <S_FCAT>-SCRTEXT_L.
        move LS_FCAT-SCRTEXT_M to <S_FCAT>-SCRTEXT_M.
        move LS_FCAT-SCRTEXT_S to <S_FCAT>-SCRTEXT_S.

      when 'DIVDI_DESCR'.
        read table RT_FCAT with key FIELDNAME = 'DIVDI' into LS_FCAT.
        move LS_FCAT-COLTEXT   to <S_FCAT>-COLTEXT.
        move LS_FCAT-SCRTEXT_L to <S_FCAT>-SCRTEXT_L.
        move LS_FCAT-SCRTEXT_M to <S_FCAT>-SCRTEXT_M.
        move LS_FCAT-SCRTEXT_S to <S_FCAT>-SCRTEXT_S.

    endcase.
  endloop.

endmethod.
method GET_GRID_DATA.

  data: LF_SPLIT     type          ABAP_BOOL,
        LF_NO_CALC   type          ABAP_BOOL,
        LF_OP_NUMBER type          I.
  data: LS_SCSTR_GRID type          ZVCXI_P0SS_S_SCSTR_GRID,
        LS_SCSTR_VIS  type          ZVCXI_P0SS_S_SCSTR_VIS,
        LS_SCSOP      type          ZVCXI_P0SS_S_SCSOP.
  data: LT_GATE  type          /VCXI/VKSR_TT_GATE,
        LT_SCSOP type          ZVCXI_P0SS_TT_SCSOP.
  data: LR_GATE     type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_SCSTR type ref to   ZCL_VCXI_P0SS_PR_SCSTR.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Split Status
  LT_SCSOP = ME->R_PR_SCSTR_MGR->GET_SCSOP( ).

  delete LT_SCSOP where SCSOP eq ZCL_VCXI_P0SS_CUST_SCSTR=>C_SCSOP_NONE.

*** Get Gates of SCORE String
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SS_PR_SCSTR=>C_IPRVT_P0_SCSTR
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    LF_OP_NUMBER = SY-TABIX.
    clear: LS_SCSTR_GRID, LS_SCSTR_VIS, LF_SPLIT, LF_NO_CALC.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_SCSTR.
        check LR_PR_SCSTR is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_SCSTR_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_SCSTR_GRID-GATKY.
        move LR_GATE               to LS_SCSTR_GRID-R_GATE.

        LS_SCSTR_VIS = ME->GET_SCSTR_VIS( IR_PR_SCSTR = LR_PR_SCSTR ).
        move-corresponding LS_SCSTR_VIS to LS_SCSTR_GRID.


***     Check if Split is active
        clear LS_SCSOP.
        read table LT_SCSOP into LS_SCSOP index LF_OP_NUMBER.
        case LS_SCSOP-CSCOR.
          when ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_LENGTH.
            if ME->R_PR_SCSTR_MGR->GET_SOPLE( ) eq ZCL_VCXI_P0SS_CUST_SCSTR=>C_SCSOP_SPLIT.
              move ABAP_TRUE to LF_SPLIT.
            endif.

            if ME->R_PR_SCSTR_MGR->GET_SOPLE( ) eq ZCL_VCXI_P0SS_BL_SCSOP_CUT=>C_SCSOP_CUTTING.
              if LS_SCSTR_VIS-SCSOP eq ZCL_VCXI_P0SS_BL_SCSOP_CUT=>C_SCSOP_CUTTING.
                move ABAP_FALSE to LF_NO_CALC.
              else.
                move ME->GET_NO_CALC( ) to LF_NO_CALC.
              endif.
            else.
              if LS_SCSTR_VIS-SCSOP eq ZCL_VCXI_P0SS_BL_SCSOP_CUT=>C_SCSOP_CUTTING.
                move ABAP_FALSE to LF_NO_CALC.
              else.
                move ABAP_TRUE to LF_NO_CALC.
              endif.
            endif.

          when ZCL_VCXI_P0SS_CUST_PRSTY=>C_CSCOR_CROSS.
            if ME->R_PR_SCSTR_MGR->GET_SOPCR( ) eq ZCL_VCXI_P0SS_CUST_SCSTR=>C_SCSOP_SPLIT.
              move ABAP_TRUE to LF_SPLIT.
            endif.

            if ME->R_PR_SCSTR_MGR->GET_SOPCR( ) eq ZCL_VCXI_P0SS_BL_SCSOP_CUT=>C_SCSOP_CUTTING.
              if LS_SCSTR_VIS-SCSOP eq ZCL_VCXI_P0SS_BL_SCSOP_CUT=>C_SCSOP_CUTTING.
                move ABAP_FALSE to LF_NO_CALC.
              else.
                move ME->GET_NO_CALC( ) to LF_NO_CALC.
              endif.
            else.
              if LS_SCSTR_VIS-SCSOP eq ZCL_VCXI_P0SS_BL_SCSOP_CUT=>C_SCSOP_CUTTING.
                move ABAP_FALSE to LF_NO_CALC.
              else.
                move ABAP_TRUE to LF_NO_CALC.
              endif.
            endif.
        endcase.

*** -----------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_SCSTR( exporting IF_SPLIT       = LF_SPLIT
                                          IF_NO_CALC     = LF_NO_CALC
                                          IF_FOVRR_SCSTR = LS_SCSTR_VIS-FOVRR_SCSTR
                                changing  CT_STYL        = LS_SCSTR_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_SCSTR_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_SCSTR_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_SCSTR.
    endtry.
  endloop.

endmethod.
  method GET_NO_CALC.

    check ME->R_GATE is bound.
    if ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ZCL_VCXI_P0SS_PR_COMP_SE=>C_IPRVT_P0_COMP_SE
                                  IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_SIBLING ) is initial.

***   Component CO -> No Calcualtion is Possible
      RF_NO_CALC = ABAP_TRUE.
    endif.

  endmethod.
endclass. "ZCL_VCXI_P0SS_GRID_SCSTR_SE implementation
