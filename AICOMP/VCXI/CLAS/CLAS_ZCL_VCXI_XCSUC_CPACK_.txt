
class ZCL_VCXI_XCSUC_CPACK definition
  public
  create private .

public section.

  interfaces /VCXI/IF_CKX_OBJECT .
  interfaces /VCXI/IF_CKX_OBJECT_ACTION .
  interfaces /VCXI/IF_CKX_OBJECT_CD .
  interfaces /VCXI/IF_CKX_OBJECT_LOCKING .

  constants C_ACTVT_CREATE type ACTIV_AUTH value '01' ##NO_TEXT.
  constants C_ACTVT_DELETE type ACTIV_AUTH value '06' ##NO_TEXT.
  constants C_ACTVT_DISPLAY type ACTIV_AUTH value '03' ##NO_TEXT.
  constants C_ACTVT_EDIT type ACTIV_AUTH value '02' ##NO_TEXT.
  constants C_CDOCL_CPACK type CDOBJECTCL value 'ZVCXI_XCS_CPACK' ##NO_TEXT.
  constants C_CDOID_CPACK type CDOBJECTV value 'CPACK' ##NO_TEXT.
  constants C_FCODE_CPACK_ADD type UI_FUNC value 'ADD' ##NO_TEXT.
  constants C_FCODE_CPACK_COPY type UI_FUNC value 'COPY' ##NO_TEXT.
  constants C_FCODE_CPACK_DELETE type UI_FUNC value 'DELETE' ##NO_TEXT.
  constants C_FCODE_CPACK_FREE type UI_FUNC value 'FREE' ##NO_TEXT.
  constants C_FCODE_CPACK_REQ_TR type UI_FUNC value 'REQ_TR' ##NO_TEXT.
  constants C_FCODE_CPACK_SAVE type UI_FUNC value 'SAVE' ##NO_TEXT.
  constants C_TOOBJ_CPACK type /VCXI/CKX_TOOBJ value 'CPACK' ##NO_TEXT.
  data F_CCCORACTIV type CCCORACTIV .
  data F_CHANGED type ABAP_BOOL read-only .
  data F_DELETED type ABAP_BOOL value ABAP_FALSE ##NO_TEXT.
  data F_TRANS_REQ type ABAP_BOOL .
  class-data T_CPACK type ZVCXI_XCSUC_TT_CPACK read-only .
  class-data T_CPACK_DESCR type ZVCXI_XCSUC_TT_CPACK_DESCR read-only .
  data T_CPACK_PMATY type ZVCXI_XCSUC_TT_CPACK_PMATY read-only .
  data T_CPACK_SHUTY type ZVCXI_XCSUC_TT_CPACK_SHUTY read-only .
  class-data T_CPACK_WERKS type ZVCXI_XCSUC_TT_CPACK_WERKS read-only .
  class-data T_PAMAI type ZVCXI_XCSUC_TT_PAMAI read-only .
  class-data T_PAMAI_DESCR type ZVCXI_XCSUC_TT_PAMAI_DESCR read-only .
  class-data T_PMATY_CPACK_V type ZVCXI_XCSUC_TT_PMATY_CPACK_V read-only .

  methods DO_SAVE
    importing
      !IF_KORRNR type TRKORR optional
    raising
      /VCXI/CX_CKX .
  methods DO_CHECK
    importing
      !IR_MSG type ref to /VCXI/CL_CKXM_MESSAGE
    raising
      /VCXI/CX_CKX .
  methods IS_PMATY_VALID
    importing
      !IF_WERKS type WERKS_D
      !IF_SHUTY type ZVCXI_XCSU_SHUTY
      !IF_SHUNT type ZVCXI_XCSU_SHUNT
      !IF_PMATY type ZVCXI_XCSU_PMATY
    returning
      value(RF_VALID) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  methods GET_PAMAI
    importing
      !IF_WERKS type WERKS_D
      !IF_SHUTY type ZVCXI_XCSU_SHUTY
      !IF_SHUNT type ZVCXI_XCSU_SHUNT
      !IF_PMATY type ZVCXI_XCSU_PMATY
    returning
      value(RT_PAMAI) type ZVCXI_XCSU_TT_PAMAI
    raising
      /VCXI/CX_CKX .
  methods ASSIGN_TRANSPORT
    importing
      !IF_KORRNR type TRKORR
    raising
      /VCXI/CX_CKX .
  methods COPY
    importing
      !IF_CPACK type ZVCXI_XCSU_CPACK
      !IF_DESCR type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  class-methods CLASS_CONSTRUCTOR .
  class-methods CHECK_AUTH
    importing
      !IF_ACTVT type ACTIV_AUTH
    raising
      /VCXI/CX_CKX .
  methods ADD_CPACK_SHUTY
    importing
      !IS_CPACK_SHUTY type ZVCXI_XCSUC_S_CPACK_SHUTY
    returning
      value(RF_GPSUN) type ZVCXI_XCSU_GPSUN
    raising
      /VCXI/CX_CKX .
  methods ADD_CPACK_PMATY
    importing
      !IS_CPACK_PMATY type ZVCXI_XCSUC_S_CPACK_PMATY
    raising
      /VCXI/CX_CKX .
  methods DELETE_CPACK_SHUTY
    importing
      !IS_CPACK_SHUTY type ZVCXI_XCSUC_S_CPACK_SHUTY
    raising
      /VCXI/CX_CKX .
  methods DELETE_CPACK_PMATY
    importing
      !IS_CPACK_PMATY type ZVCXI_XCSUC_S_CPACK_PMATY
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CPACK_SHUTY
    importing
      !IS_CPACK_SHUTY type ZVCXI_XCSUC_S_CPACK_SHUTY
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CPACK_PMATY
    importing
      !IS_CPACK_PMATY type ZVCXI_XCSUC_S_CPACK_PMATY
    raising
      /VCXI/CX_CKX .
  methods SET_DESCR
    importing
      !IF_DESCR type /VCXI/CKX_DESCR
      !IF_LANGU type LANGU default SY-LANGU
    raising
      /VCXI/CX_CKX .
  class-methods CREATE
    importing
      !IF_CPACK type ZVCXI_XCSU_CPACK
    returning
      value(RR_CPACK) type ref to ZCL_VCXI_XCSUC_CPACK
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    YT_WERKS type standard table of WERKS_D with default key .

  data F_KORRNR type TRKORR .
  data F_WRITE_TR type ABAP_BOOL .
  class-data T_WERKS type YT_WERKS .

  methods GET_CPACK
    returning
      value(RF_CPACK) type ZVCXI_XCSU_CPACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_FREE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_COPY
    importing
      !IF_CPACK type ZVCXI_XCSU_CPACK
      !IF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RR_CPACK) type ref to ZCL_VCXI_XCSUC_CPACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SAVE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_DELETE
    raising
      /VCXI/CX_CKX .
  methods SET_LOCK
    importing
      !IF_LOCKED type /VCXI/CKX_LOCKED
    raising
      /VCXI/CX_CKX .
  methods HANDLE_REQ_TR
    raising
      /VCXI/CX_CKX .
private section.

  data F_CPACK type ZVCXI_XCSU_CPACK .
  data F_LOCKED type /VCXI/CKX_LOCKED .
  data S_LOG type /VCXI/CKX_S_LOG .
  data T_DESCR type /VCXI/CKX_TT_DESCR .
  class-data T_INSTANCE type /VCXI/CKX_TT_OBJECT_INSTANCE .

  methods CONSTRUCTOR
    importing
      !IF_CPACK type ZVCXI_XCSU_CPACK
    raising
      /VCXI/CX_CKX .
  methods HANDLE_CHANGED
    for event /VCXI/IF_CKX_OBJECT~CHANGED of ZCL_VCXI_XCSUC_CPACK .
  methods LOAD_FROM_DB
    raising
      /VCXI/CX_CKX .
  methods INIT_LOG
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_XCSUC_CPACK definition
class ZCL_VCXI_XCSUC_CPACK implementation.
method /VCXI/IF_CKX_OBJECT_ACTION~GET_ACTIONS.

  data:  LF_DISABLED type CUA_ACTIVE.

*** Create Menu Reference
  create object RR_MENU.

*** Create Packaging Code
  LF_DISABLED = ABAP_FALSE.
  RR_MENU->ADD_FUNCTION( FCODE    = ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_ADD
                         TEXT     = 'Create Packaging Code'(001)
                         DISABLED = LF_DISABLED ).

*** Delete Packaging Code
  if ME->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
    LF_DISABLED = ABAP_FALSE.
  else.
    LF_DISABLED = ABAP_TRUE.
  endif.
  RR_MENU->ADD_FUNCTION( FCODE    = ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_DELETE
                         TEXT     = 'Delete Packaging Code'(002)
                         DISABLED = LF_DISABLED ).

*** Copy Packaging Code
  if ME->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
    LF_DISABLED = ABAP_FALSE.
  else.
    LF_DISABLED = ABAP_TRUE.
  endif.
  RR_MENU->ADD_FUNCTION( FCODE    = ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_COPY
                         TEXT     = 'Copy Packaging Code'(003)
                         DISABLED = LF_DISABLED ).

endmethod.
method /VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION.

  case IF_FCODE.
    when ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_SAVE.
      ME->HANDLE_SAVE( ).
    when ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_DELETE.
      ME->HANDLE_DELETE( ).
    when ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_FREE.
      ME->HANDLE_FREE( ).
    when ZCL_VCXI_XCSUC_CPACK=>C_FCODE_CPACK_REQ_TR.
      ME->HANDLE_REQ_TR( ).
  endcase.


endmethod.
method /VCXI/IF_CKX_OBJECT_CD~GET_INFO.

  move ZCL_VCXI_XCSUC_CPACK=>C_CDOCL_CPACK to EF_CDOCL.
  move ZCL_VCXI_XCSUC_CPACK=>C_CDOID_CPACK to EF_CDOID.

endmethod.
method /VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED.

***------------------------------------------------------------------------------------------------
*** Check of the Lock-Status of the Object
  if ME->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) ne ABAP_TRUE.
*** Packaging Code is not locked. No changes possible.
    raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = 'ZVCXI_XCSUC'
            F_MSGNO = '101'.
  endif.

endmethod.
method /VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK .

***--------------------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_XCSUC_CPACK=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCSUC_CPACK=>C_ACTVT_EDIT ).

***--------------------------------------------------------------------------------------
*** Set DB Lock Entrie
  ME->SET_LOCK( IF_LOCKED = ABAP_TRUE ).

  move ABAP_TRUE to ME->F_LOCKED.

***--------------------------------------------------------------------------------------
  try.
***   Load from DB
      ME->LOAD_FROM_DB( ).

    catch /VCXI/CX_CKX.
      ME->HANDLE_FREE( ).
  endtry.

endmethod.
method /VCXI/IF_CKX_OBJECT_LOCKING~DO_UNLOCK .

*** Delete DB Lock Entrie
  ME->SET_LOCK( IF_LOCKED = ABAP_FALSE ).

  move ABAP_FALSE to ME->F_LOCKED.

***--------------------------------------------------------------------------------------
  try.
***   Load from DB
      ME->LOAD_FROM_DB( ).

    catch /VCXI/CX_CKX.
      ME->HANDLE_FREE( ).
  endtry.

endmethod.
method /VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED .

  move ME->F_LOCKED to RF_LOCKED.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_DESCR.

  data:  LT_DESCR type /VCXI/CKX_TT_DESCR.

  try.
      LT_DESCR = ME->/VCXI/IF_CKX_OBJECT~GET_DESCR_ALL( ).
      RF_DESCR = /VCXI/CL_CKX_SERVICE=>GET_DESCR_TRANSLATION( IT_DESCR = LT_DESCR ).
    catch /VCXI/CX_CKX.
      clear RF_DESCR.
  endtry.


endmethod.
method /VCXI/IF_CKX_OBJECT~GET_DESCR_ALL.

  move ME->T_DESCR to RT_DESCR.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_GUID.

  move ME->F_CPACK to RF_GUID.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_ID.

  move ME->F_CPACK to RF_ID.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_INSTANCE.

  data:  LF_CPACK    type        ZVCXI_XCSU_CPACK.
  data:  LS_INSTANCE type        /VCXI/CKX_S_OBJECT_INSTANCE.
  data:  LR_CPACK    type ref to ZCL_VCXI_XCSUC_CPACK.


*** Check Instances
  read table ZCL_VCXI_XCSUC_CPACK=>T_INSTANCE into LS_INSTANCE with key GUID = IF_GUID.
  if SY-SUBRC eq 0.
    move LS_INSTANCE-R_OBJECT to RR_OBJECT.
  else.
    move IF_GUID to LF_CPACK.

*** Get new Instance
    try.
        create object LR_CPACK
          exporting
            IF_CPACK = LF_CPACK.
      catch CX_SY_CREATE_OBJECT_ERROR.
        raise exception type /VCXI/CX_CKX.
    endtry.
    move LR_CPACK ?to RR_OBJECT.
  endif.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_LOG.

  move ME->S_LOG to RS_LOG.

endmethod.
method ADD_CPACK_PMATY.

  field-symbols: <S_CPACK_PMATY> type ZVCXI_XCSUC_S_CPACK_PMATY.

*** Make sure that obejct is locked
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

  read table ME->T_CPACK_PMATY assigning <S_CPACK_PMATY> with key GPSUN = IS_CPACK_PMATY-GPSUN
                                                                  PAMAI = IS_CPACK_PMATY-PAMAI
                                                                  PMATY = IS_CPACK_PMATY-PMATY.

  if SY-SUBRC ne 0.
    append initial line to ME->T_CPACK_PMATY assigning <S_CPACK_PMATY>.
    move-corresponding IS_CPACK_PMATY to <S_CPACK_PMATY>.
  endif.

***----------------------------------------------------------------------------
*** Raise Change Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.
endmethod.
method ADD_CPACK_SHUTY.

  field-symbols: <S_CPACK_SHUTY> type ZVCXI_XCSUC_S_CPACK_SHUTY.

*** Make sure that obejct is locked
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

  read table ME->T_CPACK_SHUTY assigning <S_CPACK_SHUTY> with key GPSUN = IS_CPACK_SHUTY-GPSUN.

  if SY-SUBRC ne 0.
    append initial line to ME->T_CPACK_SHUTY assigning <S_CPACK_SHUTY>.
    move-corresponding IS_CPACK_SHUTY to <S_CPACK_SHUTY>.


*** Get GUID of Data Source
    call function 'GUID_CREATE'
      importing
        EV_GUID_22 = <S_CPACK_SHUTY>-GPSUN.

    move <S_CPACK_SHUTY>-GPSUN to RF_GPSUN.

  endif.

***----------------------------------------------------------------------------
*** Raise Change Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method ASSIGN_TRANSPORT.

  move IF_KORRNR to ME->F_KORRNR.

endmethod.
method CHECK_AUTH.

  data:  LF_MSGV1  type SYMSGV.

***--------------------------------------------------------------------------------------
*** Check Authority for Shipping & Unitization Default Customizing
    authority-check object 'Z_XC_SHP_C'
             id 'ACTVT'     field IF_ACTVT.

***--------------------------------------------------------------------------------------
  if SY-SUBRC ne 0.
*** Get Activity Description
    select single LTEXT
           into LF_MSGV1
           from TACTT
          where SPRAS eq SY-LANGU
           and  ACTVT eq IF_ACTVT.

*** No authorization to & Packaging Code.
    raise exception type /VCXI/CX_CKX
       exporting
         F_MSGTY = 'E'
         F_MSGID = 'ZVCXI_XCSUC'
         F_MSGNO = '150'
         F_MSGV1 = LF_MSGV1.
  endif.

endmethod.
method CLASS_CONSTRUCTOR.

  data: LT_TC380 type table of ZVCXI_XCS_TC380.
  data: LS_TC380 type          ZVCXI_XCS_TC380.

*** Load Packaging Material Information and Description
  select *
         into corresponding fields of table T_PAMAI
         from ZVCXI_XCS_TC360.

  select *
        into corresponding fields of table T_PAMAI_DESCR
        from ZVCXI_XCS_TC360T.


*** Load Packaging Code
  select *
         into corresponding fields of table T_CPACK
         from ZVCXI_XCS_TD370.

  select *
         into corresponding fields of table T_CPACK_DESCR
         from ZVCXI_XCS_TD370T.


*** Load Packaging Code - Plant assigning Data
  select *
         into corresponding fields of table T_CPACK_WERKS
         from ZVCXI_XCS_TD371.

*** Select all Packaging Material Types which are Valid for Packaging Codes
  select *
         into table LT_TC380
         from ZVCXI_XCS_TC380.

  clear: T_PMATY_CPACK_V.
  loop at LT_TC380 into LS_TC380.
    append LS_TC380-PMATY to T_PMATY_CPACK_V.
  endloop.

*** Select Plants
  select WERKS
         into table T_WERKS
         from T001W.

endmethod.
method CONSTRUCTOR.

  field-symbols:  <S_INSTANCE>       type         /VCXI/CKX_S_OBJECT_INSTANCE.

***------------------------------------------------------------------------------------------------
*** Set Import Parameter to Attributes
  move IF_CPACK to ME->F_CPACK.

***------------------------------------------------------------------------------------------------
*** Load DB
  ME->LOAD_FROM_DB( ).

***------------------------------------------------------------------------------------------------
*** Define Type of Object
  move C_TOOBJ_CPACK to ME->/VCXI/IF_CKX_OBJECT~F_TOOBJ.

***------------------------------------------------------------------------------------------------
*** Add instance to instance buffer
  append initial line to ZCL_VCXI_XCSUC_CPACK=>T_INSTANCE assigning <S_INSTANCE>.
  move ME->/VCXI/IF_CKX_OBJECT~GET_GUID( )  to <S_INSTANCE>-GUID.
  move ME                                  ?to <S_INSTANCE>-R_OBJECT.

***------------------------------------------------------------------------------------------------
  set handler ME->HANDLE_CHANGED for ME.

*** Get System/Client Parameters
  call function 'TR_SYS_PARAMS'
    importing
      SYSTEM_CLIENT_EDIT = ME->F_CCCORACTIV
    exceptions
      NO_SYSTEMNAME      = 1
      NO_SYSTEMTYPE      = 2.
  if SY-SUBRC ne 0.
    /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
  endif.

endmethod.
method COPY.

***--------------------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_XCSUC_CPACK=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCSUC_CPACK=>C_ACTVT_CREATE ).

*** Do Copy
  ME->HANDLE_COPY( IF_CPACK = IF_CPACK
                   IF_DESCR = IF_DESCR ).

endmethod.
method CREATE.

  data:  LR_CX_SY_CREATE_OBJECT_ERROR type ref to CX_SY_CREATE_OBJECT_ERROR.

***--------------------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_XCSUC_CPACK=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCSUC_CPACK=>C_ACTVT_CREATE ).

*** Create Packaging Code
  try.
      create object RR_CPACK
        exporting
          IF_CPACK = IF_CPACK.
    catch CX_SY_CREATE_OBJECT_ERROR into LR_CX_SY_CREATE_OBJECT_ERROR.
      /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_CREATE_OBJECT_ERROR ).
  endtry.

  RR_CPACK->/VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK( ).
  RR_CPACK->INIT_LOG( ).
  RR_CPACK->SET_LOCK( IF_LOCKED = ABAP_TRUE ).

endmethod.
method DELETE_CPACK_PMATY.

*** Make sure that obejct is locked
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

  read table ME->T_CPACK_PMATY with key GPSUN = IS_CPACK_PMATY-GPSUN
                                        PAMAI = IS_CPACK_PMATY-PAMAI
                                        PMATY = IS_CPACK_PMATY-PMATY
                               transporting no fields.

  if SY-SUBRC eq 0.
    delete ME->T_CPACK_PMATY where GPSUN = IS_CPACK_PMATY-GPSUN
                               and PAMAI = IS_CPACK_PMATY-PAMAI
                               and PMATY = IS_CPACK_PMATY-PMATY.
  endif.

***----------------------------------------------------------------------------
*** Raise Change Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method DELETE_CPACK_SHUTY.

*** Make sure that obejct is locked
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

  read table ME->T_CPACK_SHUTY with key GPSUN = IS_CPACK_SHUTY-GPSUN
                               transporting no fields.

  if SY-SUBRC eq 0.
    delete ME->T_CPACK_SHUTY where GPSUN = IS_CPACK_SHUTY-GPSUN.
  endif.

***----------------------------------------------------------------------------
*** Raise Change Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method DO_CHECK.

  data: LF_MSGV1       type        SYMSGV,
        LF_MSGV2       type        SYMSGV,
        LF_MSGV3       type        SYMSGV.
  data: LS_CPACK_SHUTY type        ZVCXI_XCSUC_S_CPACK_SHUTY,
        LS_CPACK_PMATY type        ZVCXI_XCSUC_S_CPACK_PMATY.
  data: LT_SHUTY       type        ZVCXI_XCSU_TT_SHUTY,
        LT_SHUNT       type        ZVCXI_XCSU_TT_SHUNT,
        LT_PMATY       type        ZVCXI_XCSU_TT_PMATY,
        LT_CONSC       type        ZVCXI_XCSU_TT_CONSC,
        LT_PMATN       type        ZVCXI_XCSU_TT_PMATN.
  data: LR_CUST_SHIPU  type ref to ZCL_VCXI_XCSU_CUST_SHIPU,
        LR_CUST_MATNR  type ref to ZCL_VCXI_XCS_CUST_MATNR.

  LR_CUST_SHIPU = ZCL_VCXI_XCSU_CUST_SHIPU=>GET_INSTANCE( ).
  LT_SHUTY = LR_CUST_SHIPU->GET_SHUTY_FOR_SHSCH( IF_SHSCH = SPACE ).

***----------------------------------------------------------------------------------------
*** Check Packaging Code - Shipping Unit Type
  loop at ME->T_CPACK_SHUTY into LS_CPACK_SHUTY.

*** Check Plant
    if LS_CPACK_SHUTY-WERKS is not initial.
      read table T_WERKS with key TABLE_LINE = LS_CPACK_SHUTY-WERKS transporting no fields.
      if SY-SUBRC ne 0.
        move LS_CPACK_SHUTY-WERKS to LF_MSGV1.
        condense LF_MSGV1.
***     Check Plant &1. It is not Valid.
        IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '115'
                             IF_MSGV1 = LF_MSGV1 ).
      endif.
    endif.

*** Check Shipping Unit Type for Shipping Scheme (*)
    read table LT_SHUTY with key SHUTY = LS_CPACK_SHUTY-SHUTY transporting no fields.
    if SY-SUBRC ne 0.
      move LS_CPACK_SHUTY-SHUTY to LF_MSGV1.
      condense LF_MSGV1.
***   Check Shipping Unit Type &1. Entered Shipping Unit Type is not Valid.
      IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                           IF_MSGTY = 'E'
                           IF_MSGNO = '116'
                           IF_MSGV1 = LF_MSGV1 ).
    endif.

*** Check Shipping Unit for Shipping Unit Type
    LT_SHUNT = LR_CUST_SHIPU->GET_SHUNT_FOR_SHUTY( IF_SHUTY = LS_CPACK_SHUTY-SHUTY ).
    read table LT_SHUNT with key SHUNT = LS_CPACK_SHUTY-SHUNT transporting no fields.
    if SY-SUBRC ne 0.
      move LS_CPACK_SHUTY-SHUNT to LF_MSGV1.
      move LS_CPACK_SHUTY-SHUTY to LF_MSGV2.
      condense: LF_MSGV1, LF_MSGV2.
***   Shipping Unit &1 is not Valid for Shipping Unit Type &2.
      IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                           IF_MSGTY = 'E'
                           IF_MSGNO = '117'
                           IF_MSGV1 = LF_MSGV1
                           IF_MSGV2 = LF_MSGV2 ).
    endif.

***----------------------------------------------------------------------------------------
*** Check Packaging Code - Corresponding Packaging material Types
    loop at ME->T_CPACK_PMATY into LS_CPACK_PMATY where GPSUN = LS_CPACK_SHUTY-GPSUN.

***   Check Packaging Material Information
      if LS_CPACK_PMATY-PAMAI is not initial.
        read table ZCL_VCXI_XCSUC_CPACK=>T_PAMAI with key PAMAI = LS_CPACK_PMATY-PAMAI transporting no fields.
        if SY-SUBRC ne 0.
***       Check Packaging Material Information. It is not Valid.
          IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '118' ).
        endif.
      endif.

***   Check Packaging Material Type
      LT_PMATY = LR_CUST_SHIPU->GET_PMATY_FOR_SHUNT( IF_SHUNT = LS_CPACK_SHUTY-SHUNT ).
      read table LT_PMATY with key PMATY = LS_CPACK_PMATY-PMATY transporting no fields.
      if SY-SUBRC ne 0.
        move LS_CPACK_PMATY-PMATY to LF_MSGV1.
        move LS_CPACK_SHUTY-SHUNT to LF_MSGV2.
        condense: LF_MSGV1, LF_MSGV2.
***     Packaging Material Type &1 is not Valid for Shipping Unit &1.
        IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '119'
                             IF_MSGV1 = LF_MSGV1
                             IF_MSGV2 = LF_MSGV2 ).
      endif.

***   Check Consumption Scheme
      LT_CONSC = LR_CUST_SHIPU->GET_CONSC_FOR_PMATY( IF_PMATY = LS_CPACK_PMATY-PMATY ).
      read table LT_CONSC with key CONSC = LS_CPACK_PMATY-CONSC transporting no fields.
      if SY-SUBRC ne 0.
        move LS_CPACK_PMATY-CONSC to LF_MSGV1.
        move LS_CPACK_PMATY-PMATY to LF_MSGV2.
        condense: LF_MSGV1, LF_MSGV2.
***     Consumption Scheme &1 is not Valid for Packaging Material Type &2.
        IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '120'
                             IF_MSGV1 = LF_MSGV1
                             IF_MSGV2 = LF_MSGV2 ).
      else.

        LT_CONSC = LR_CUST_SHIPU->GET_CONSC_FOR_PMATY( IF_PMATY = LS_CPACK_PMATY-PMATY
                                                       IF_WERKS = LS_CPACK_SHUTY-WERKS ).
        read table LT_CONSC with key CONSC = LS_CPACK_PMATY-CONSC transporting no fields.
        if SY-SUBRC ne 0.
          move LS_CPACK_PMATY-CONSC to LF_MSGV1.
          move LS_CPACK_PMATY-PMATY to LF_MSGV2.
          move LS_CPACK_SHUTY-WERKS to LF_MSGV3.
          condense: LF_MSGV1, LF_MSGV2, LF_MSGV3.
***       Consumption Scheme &1 is not Valid for Packaging Mat. Type &2 & Plant &3.
          IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '124'
                               IF_MSGV1 = LF_MSGV1
                               IF_MSGV2 = LF_MSGV2
                               IF_MSGV3 = LF_MSGV3 ).
        endif.
      endif.

      if LS_CPACK_PMATY-PMATN is not initial.

***     Check Material
        if LR_CUST_MATNR          is bound                and
           LR_CUST_MATNR->F_MATNR eq LS_CPACK_PMATY-PMATN and
           LR_CUST_MATNR->F_WERKS eq LS_CPACK_SHUTY-WERKS.
***     Everything was loaded already.
        else.

          clear:  LR_CUST_MATNR.
***       Load the Customizing
          LR_CUST_MATNR = ZCL_VCXI_XCS_CUST_MATNR=>GET_INSTANCE( IF_MATNR = LS_CPACK_PMATY-PMATN
                                                                 IF_WERKS = LS_CPACK_SHUTY-WERKS
                                                                 IF_DATE  = SY-DATUM ).
        endif.

***     Check Material Number Exist
        if LR_CUST_MATNR                is not bound or
           LR_CUST_MATNR->F_CHECK_MATNR eq ABAP_FALSE.

          move LS_CPACK_PMATY-PMATN to LF_MSGV1.
          condense: LF_MSGV1.
***       Packaging Material &1 is not Valid.
          IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                               IF_MSGTY = 'E'
                               IF_MSGNO = '121'
                               IF_MSGV1 = LF_MSGV1 ).

        else.
***       Check Material Number Exist at Plant
          if LS_CPACK_SHUTY-WERKS            is not initial and
             LR_CUST_MATNR->F_CHECK_MAT_MARC eq ABAP_FALSE.
            move LS_CPACK_PMATY-PMATN to LF_MSGV1.
            move LS_CPACK_SHUTY-WERKS to LF_MSGV2.
            condense: LF_MSGV1, LF_MSGV2.
***         Packaging Material &1 is not Valid for Plant &2.
            IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '122'
                                 IF_MSGV1 = LF_MSGV1
                                 IF_MSGV2 = LF_MSGV2 ).
          endif.
        endif.
      endif.

***   Check Packaging Material Number
      LT_PMATN = LR_CUST_SHIPU->GET_PMATN_FOR_PMATY( IF_PMATY = LS_CPACK_PMATY-PMATY ).
      read table LT_PMATN with key PMATN = LS_CPACK_PMATY-PMATN transporting no fields.
      if SY-SUBRC ne 0.
        move LS_CPACK_PMATY-PMATN to LF_MSGV1.
        move LS_CPACK_PMATY-PMATY to LF_MSGV2.
        condense: LF_MSGV1, LF_MSGV2.
***     Packaging Material &1 is not Valid for Packaging Material Type &2.
        IR_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCSUC'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '123'
                             IF_MSGV1 = LF_MSGV1
                             IF_MSGV2 = LF_MSGV2 ).
      endif.

    endloop.
  endloop.

endmethod.
  method DO_SAVE.

    data: LT_E071  type table of E071,
          LT_E071K type table of E071K.


    try.
***     Save only if changed or Transport is required
        check ME->F_TRANS_REQ eq ABAP_TRUE or
              ME->F_CHANGED   eq ABAP_TRUE.

        if ME->F_TRANS_REQ eq ABAP_TRUE.
          if IF_KORRNR is initial.
***         Specify a request
            /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                                  IF_MSGID = 'TK'
                                                  IF_MSGNO = '136' ).
          endif.

***       Check Transport
          call function 'TRINT_ORDER_CHOICE'
            exporting
              WI_SIMULATION          = 'X'
              WI_CATEGORY            = 'CUST'
              WI_ORDER               = IF_KORRNR
              WI_SUPPRESS_DIALOG     = 'X'
            tables
              WT_E071                = LT_E071
              WT_E071K               = LT_E071K
            exceptions
              NO_CORRECTION_SELECTED = 1
              DISPLAY_MODE           = 2
              OBJECT_APPEND_ERROR    = 3
              RECURSIVE_CALL         = 4
              WRONG_ORDER_TYPE       = 5
              others                 = 6.
          if SY-SUBRC ne 0.
            /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
          endif.

***       Open Transport
          call function 'ZVCXI_XCSUC_DB_OPEN_TRANSPORT'
            in update task
            exporting
              IF_TRKORR = IF_KORRNR.

***       Reset Transport Requested.
          ME->F_TRANS_REQ = ABAP_FALSE.
        endif.

***----------------------------------------------------------------------------
        sort ME->T_CPACK_SHUTY by WERKS SHUTY SHUNT.
        sort ME->T_CPACK_PMATY by PAMAI PMATY CONSC PMATN.

        if ME->F_DELETED eq ABAP_FALSE.
***       Save Packaging Code
          call function 'ZVCXI_XCSUC_DB_SAVE_CPACK'
            in update task
            exporting
              IF_CPACK    = ME->F_CPACK
              IS_LOG      = ME->S_LOG
              IT_DESCR    = ME->T_DESCR
              IT_TD371    = ME->T_CPACK_SHUTY
              IT_TD372    = ME->T_CPACK_PMATY
              IF_WRITE_TR = ME->F_WRITE_TR.
        else.
***       Delete Packaging Code
          call function 'ZVCXI_XCSUC_DB_DEL_CPACK'
            in update task
            exporting
              IF_CPACK    = ME->F_CPACK
              IF_WRITE_TR = ME->F_WRITE_TR.
        endif.

***------------------------------------------------------------------------------------------------
***     Write Transport
        call function 'ZVCXI_XCSUC_DB_CLOSE_TRANSPORT'
          in update task.

***------------------------------------------------------------------------------------------------
***     All changes are handled
        move ABAP_FALSE to ME->F_CHANGED.
        commit work and wait.

***------------------------------------------------------------------------------------------------
***     Relock
        check ME->/VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED( ) eq ABAP_TRUE.
        ME->/VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        rollback work.
        raise exception LR_CX_CKX.
    endtry.

  endmethod.
method GET_CPACK.

  data:          LF_RETURN    type                   ABAP_BOOL,
                 LF_EXIT      type                   ABAP_BOOL.
  data:          LT_SVAL      type standard table of SVAL.
  field-symbols: <S_FIELD>    type                   SVAL.

***----------------------------------------------------------------------
*** Create PopUp for User-Entry
  append initial line to LT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME   = 'ZVCXI_XCS_TD370'.
  <S_FIELD>-FIELDNAME = 'CPACK'.
  <S_FIELD>-FIELD_OBL = ABAP_TRUE.

  do.

    call function 'POPUP_GET_VALUES'
      exporting
        POPUP_TITLE     = 'Please define new Packaging Code'(A10)
      importing
        RETURNCODE      = LF_RETURN
      tables
        FIELDS          = LT_SVAL
      exceptions
        ERROR_IN_FIELDS = 1
        others          = 2.
    if SY-SUBRC ne 0 or
      LF_RETURN eq 'A'.
      clear LT_SVAL.
      LF_EXIT = ABAP_TRUE.
      exit.
    endif.

    check LT_SVAL is not initial.
    read table LT_SVAL assigning <S_FIELD> index 1.
    move <S_FIELD>-VALUE to RF_CPACK.

*** Check if all needed fields are filled
    check RF_CPACK is not initial.
    exit.

  enddo.

*** Cancled action
  if LF_EXIT = ABAP_TRUE.
    exit.
  endif.

endmethod.
method GET_PAMAI.

  data: LS_CPACK_SHUTY type ZVCXI_XCSUC_S_CPACK_SHUTY,
        LS_CPACK_PMATY type ZVCXI_XCSUC_S_CPACK_PMATY,
        LS_PAMAI       type ZVCXI_XCSU_S_PAMAI,
        LS_DESCR       type ZVCXI_XCS_TC360T.

*** Get Special Packaging Code which is plant depending
  read table ME->T_CPACK_SHUTY into     LS_CPACK_SHUTY
                               with key WERKS = IF_WERKS
                                        SHUTY = IF_SHUTY
                                        SHUNT = IF_SHUNT.

*** Try to get overall Packaging Code
  if SY-SUBRC ne 0.
    read table ME->T_CPACK_SHUTY into     LS_CPACK_SHUTY
                                 with key SHUTY = IF_SHUTY
                                          SHUNT = IF_SHUNT.
  endif.

  check LS_CPACK_SHUTY is not initial.

*** Get all Valid Packaging Material information
  loop at ME->T_CPACK_PMATY into LS_CPACK_PMATY
     where GPSUN = LS_CPACK_SHUTY-GPSUN
       and PMATY = IF_PMATY.

    clear: LS_PAMAI, LS_DESCR.

    move LS_CPACK_PMATY-PAMAI to LS_PAMAI-PAMAI.

*** Get Description
    read table T_PAMAI_DESCR into     LS_DESCR
                             with key PAMAI = LS_PAMAI-PAMAI
                                      LANGU = SY-LANGU.
    if SY-SUBRC = 0.
      move LS_DESCR-DESCR to LS_PAMAI-DESCR.
    endif.

    collect LS_PAMAI into RT_PAMAI.
  endloop.

endmethod.
method HANDLE_CHANGED.

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.

***----------------------------------------------------------------------------
***   Set the Change Indicator
      move ABAP_TRUE to ME->F_CHANGED.

***----------------------------------------------------------------------------
***   Set Changed Info to Log
      move SY-UNAME     to ME->S_LOG-CHABY.
      get time stamp field ME->S_LOG-CHAAT.

***----------------------------------------------------------------------------
***   Transport
      if ME->F_CCCORACTIV eq '1'.
        move ABAP_TRUE to ME->F_WRITE_TR.
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method HANDLE_COPY.

  data:  LF_GPSUN        type     ZVCXI_XCSU_GPSUN,
         LF_GPSUN_OLD    type     ZVCXI_XCSU_GPSUN.
  data:  LS_CPACK_SHUTY  type     ZVCXI_XCSUC_S_CPACK_SHUTY,
         LS_CPACK_PMATY  type     ZVCXI_XCSUC_S_CPACK_PMATY.

  check IF_CPACK is not initial.

*** Create new Packaging Code
  RR_CPACK = ZCL_VCXI_XCSUC_CPACK=>CREATE( IF_CPACK = IF_CPACK ).

*** Set Description
  RR_CPACK->SET_DESCR( IF_DESCR = IF_DESCR
                       IF_LANGU = SY-LANGU ).

*** Set Packaging Code - Shipping Unit Assignment
  loop at ME->T_CPACK_SHUTY into LS_CPACK_SHUTY.
    move LS_CPACK_SHUTY-GPSUN to LF_GPSUN_OLD.
    LF_GPSUN = RR_CPACK->ADD_CPACK_SHUTY( IS_CPACK_SHUTY = LS_CPACK_SHUTY ).

*** Set Packaging Code - Packaging Material Assignment
    loop at ME->T_CPACK_PMATY into LS_CPACK_PMATY
    where GPSUN = LF_GPSUN_OLD.
      move LF_GPSUN to LS_CPACK_PMATY-GPSUN.
      RR_CPACK->ADD_CPACK_PMATY( IS_CPACK_PMATY = LS_CPACK_PMATY ).
    endloop.
  endloop.

*** Save and Free new Packaging Code
  RR_CPACK->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = C_FCODE_CPACK_SAVE ).
  RR_CPACK->/VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION( IF_FCODE = C_FCODE_CPACK_FREE ).

  free: RR_CPACK.

endmethod.
method HANDLE_DELETE.

***--------------------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_XCSUC_CPACK=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCSUC_CPACK=>C_ACTVT_DELETE ).

***------------------------------------------------------------------------------------------------
*** Check of the Lock-Status of the Object
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

***------------------------------------------------------------------------------------------------
*** Mark as deleted
  move ABAP_TRUE to ME->F_DELETED.
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method HANDLE_FREE .

  data:  LF_GUID type /VCXI/CKX_GUID.

  LF_GUID = ME->/VCXI/IF_CKX_OBJECT~GET_GUID( ).
  delete ZCL_VCXI_XCSUC_CPACK=>T_INSTANCE where GUID = LF_GUID.

endmethod.
method HANDLE_REQ_TR.

*** Request Transport
  move ABAP_TRUE to ME->F_TRANS_REQ.
*** Also Write Transport
  move ABAP_TRUE to ME->F_WRITE_TR.

endmethod.
  method HANDLE_SAVE .

    data: LF_KORRNR type TRKORR.


*** Ask for Transport only if it is required
    if ME->F_TRANS_REQ eq ABAP_TRUE.
      if ME->F_KORRNR is initial.
***     Popup to pick Transport
        call function 'G_TRANS_NUMBER'
          exporting
            CATEGORY  = 'CUST'
          importing
            KORRNR    = LF_KORRNR
          exceptions
            NO_NUMBER = 1
            others    = 2.
        if SY-SUBRC ne 0.
          /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
        endif.
      else.
        move ME->F_KORRNR to LF_KORRNR.
        clear: ME->F_KORRNR.
      endif.
    endif.

*** Save
    ME->DO_SAVE( IF_KORRNR = LF_KORRNR ).

  endmethod.
method INIT_LOG.

***----------------------------------------------------------------------------
*** Set Created Info to Log
  move SY-UNAME     to ME->S_LOG-CREBY.
  get time stamp field ME->S_LOG-CREAT.

*** Set Changed Info to Log
  move SY-UNAME     to ME->S_LOG-CHABY.
  get time stamp field ME->S_LOG-CHAAT.

  raise event /VCXI/IF_CKX_OBJECT~CREATED.
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method IS_PMATY_VALID.

  data: LS_CPACK_SHUTY type ZVCXI_XCSUC_S_CPACK_SHUTY,
        LS_CPACK_PMATY type ZVCXI_XCSUC_S_CPACK_PMATY.

*** Get Special Packaging Code which is plant depending
  read table ME->T_CPACK_SHUTY into     LS_CPACK_SHUTY
                               with key WERKS = IF_WERKS
                                        SHUTY = IF_SHUTY
                                        SHUNT = IF_SHUNT.

*** Try to get overall Packaging Code
  if SY-SUBRC ne 0.
    read table ME->T_CPACK_SHUTY into     LS_CPACK_SHUTY
                                 with key SHUTY = IF_SHUTY
                                          SHUNT = IF_SHUNT.
  endif.

  check LS_CPACK_SHUTY is not initial.

*** Check if Packaging Material Type is valid for Packaging Code
  loop at ME->T_CPACK_PMATY into LS_CPACK_PMATY
     where GPSUN = LS_CPACK_SHUTY-GPSUN
       and PMATY = IF_PMATY.
    RF_VALID = ABAP_TRUE.
  endloop.

endmethod.
method LOAD_FROM_DB .

  data:          LS_TD370   type                   ZVCXI_XCS_TD370,
                 LS_TD370T  type                   ZVCXI_XCS_TD370T.
  data:          LT_TD370T  type standard table of ZVCXI_XCS_TD370T.
  field-symbols: <S_DESCR>  type                   /VCXI/CKX_S_DESCR.

  free: ME->F_CHANGED,
        ME->F_TRANS_REQ.

*** Load Header Data of Packaging Code
  select single *
         into LS_TD370
         from ZVCXI_XCS_TD370
         where CPACK = ME->F_CPACK.

  move-corresponding LS_TD370 to ME->S_LOG.

*** Load Description
  clear: ME->T_DESCR.
  select *
         into table LT_TD370T
         from ZVCXI_XCS_TD370T
         where CPACK = ME->F_CPACK.
  loop at LT_TD370T into LS_TD370T.
    append initial line to ME->T_DESCR assigning <S_DESCR>.
    move-corresponding LS_TD370T to <S_DESCR>.
  endloop.

*** Load Packaging Code - Shipping Unit assignment
  select *
         into corresponding fields of table ME->T_CPACK_SHUTY
         from ZVCXI_XCS_TD371
         where CPACK = ME->F_CPACK.

  if ME->T_CPACK_SHUTY is not initial.
*** Load Packaging Code - Packaging Material assignment
    select *
           into corresponding fields of table ME->T_CPACK_PMATY
           from ZVCXI_XCS_TD372
           for all entries in ME->T_CPACK_SHUTY
           where GPSUN = ME->T_CPACK_SHUTY-GPSUN.    "#EC CI_NO_TRANSFORM
  endif.

  sort ME->T_CPACK_SHUTY by WERKS SHUTY SHUNT.
  sort ME->T_CPACK_PMATY by PAMAI PMATY CONSC PMATN.

endmethod.
method SET_DESCR .

  field-symbols:  <S_DESCR> type /VCXI/CKX_S_DESCR.

*** Check of the Lock-Status of the Object
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

*** Set Description
  read table ME->T_DESCR assigning <S_DESCR> with key LANGU = IF_LANGU.
  if SY-SUBRC ne 0.
    append initial line to ME->T_DESCR assigning <S_DESCR>.
    move IF_LANGU to <S_DESCR>-LANGU.
  endif.
  move IF_DESCR   to <S_DESCR>-DESCR.

*** Raise Changed Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method SET_LOCK.

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.
***------------------------------------------------------------------
      if IF_LOCKED eq ABAP_TRUE.
***     Try to Set Write Lock
***     Write Lock Packaging Code
        call function 'ENQUEUE_EZVCXI_XCS_D370E'
          exporting
            CPACK          = ME->F_CPACK
          exceptions
            FOREIGN_LOCK   = 1
            SYSTEM_FAILURE = 2
            others         = 3.
        if SY-SUBRC ne 0.
          /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
        endif.

***------------------------------------------------------------------
      else.
***     Remove Write Lock
***     Write Lock Packaging Code
        call function 'DEQUEUE_EZVCXI_XCS_D370E'
          exporting
            CPACK = ME->F_CPACK.
      endif.

      move IF_LOCKED to ME->F_LOCKED.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->/VCXI/IF_CKX_OBJECT_LOCKING~DO_UNLOCK( ).
      raise exception LR_CX_CKX.
  endtry.

endmethod.
method UPDATE_CPACK_PMATY.

  field-symbols: <S_CPACK_PMATY> type ZVCXI_XCSUC_S_CPACK_PMATY.

*** Make sure that obejct is locked
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

  read table ME->T_CPACK_PMATY assigning <S_CPACK_PMATY> with key GPSUN = IS_CPACK_PMATY-GPSUN
                                                                  PAMAI = IS_CPACK_PMATY-PAMAI
                                                                  PMATY = IS_CPACK_PMATY-PMATY.

  if SY-SUBRC eq 0.
    move-corresponding IS_CPACK_PMATY to <S_CPACK_PMATY>.
  endif.

***----------------------------------------------------------------------------
*** Raise Change Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
method UPDATE_CPACK_SHUTY.

  field-symbols: <S_CPACK_SHUTY> type ZVCXI_XCSUC_S_CPACK_SHUTY.

*** Make sure that obejct is locked
  ME->/VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED( ).

  read table ME->T_CPACK_SHUTY assigning <S_CPACK_SHUTY> with key GPSUN = IS_CPACK_SHUTY-GPSUN.

  if SY-SUBRC eq 0.
    move-corresponding IS_CPACK_SHUTY to <S_CPACK_SHUTY>.
  endif.

***----------------------------------------------------------------------------
*** Raise Change Event
  raise event /VCXI/IF_CKX_OBJECT~CHANGED.

endmethod.
