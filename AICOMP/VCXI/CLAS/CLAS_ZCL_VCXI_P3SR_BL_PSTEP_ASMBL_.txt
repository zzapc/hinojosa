
class ZCL_VCXI_P3SR_BL_PSTEP_ASMBL definition
  public
  inheriting from ZCL_VCXI_P3SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .

  constants C_IPSTP_ASMBL type /VCXI/VSMC_IPSTP value 'P3_PS_ASMBL' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_ASMBL
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_IMFXC
    redefinition .
  methods GET_MFICF_BY_IMFXC
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods GET_SPVRE_MF
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods REPLACE_MFSI_BY_MFMI
    redefinition .
protected section.

  data F_WITH_INP type ABAP_BOOL .
  constants C_IAATY_JOINT type /VCXI/VSMC_IAATY value 'P0_AA_JOINT' ##NO_TEXT.
  data T_PCDIM_IN type ZVCXI_P0SP_TT_PCDIM .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data T_MS_JOINT type ZVCXI_P0SR_TT_MS_JOINT .
  data T_XPART type ZVCXI_P3SR_TT_XPART .
  data T_MFMI_P type ZVCXI_P0SR_TT_MFMI_P .

  methods INIT_BY_CSTEP_ASMBL
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_JOINT
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_XPART
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_JOINT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_JOINT
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_CLOS
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JGLUE
    importing
      !IR_SPVRE_MC_JGLUE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JSTITCH
    importing
      !IR_SPVRE_MC_JSTITCH type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_JTAPE
    importing
      !IR_SPVRE_MC_JTAPE type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT
      !IS_AVGCO type ZVCXI_XCS_S_AVGCO
      !IS_AVGCP type ZVCXI_XCS_S_AVGCP
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MFMI_P
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_MFMGR type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
      !CF_MFI type ABAP_BOOL
    raising
      /VCXI/CX_CKX .

  methods ADD_SPVRE_MFSI_P
    redefinition .
  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_PCDIM_IN
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P3SR_BL_PSTEP_ASMBL definition
class ZCL_VCXI_P3SR_BL_PSTEP_ASMBL implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

    data: LS_RTE_SAVAL type        /VCXI/VSMR_S_RTE_SAVAL,
          LS_MS_JOINT  type        ZVCXI_P0SR_S_MS_JOINT.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - P0_AA_JOINT
    try.
        clear LS_RTE_SAVAL.
        loop at ME->T_MS_JOINT into LS_MS_JOINT.
          append value #( SIGN = 'I' OPTION = 'EQ' LOW = LS_MS_JOINT-JOITY ) to LS_RTE_SAVAL-I_AVVAL.
        endloop.
        delete adjacent duplicates from LS_RTE_SAVAL-I_AVVAL comparing LOW.

        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_JOINT
                                     II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).
      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Joint Type
        when 'P0_LT_VP_JOINTTYPE'.
          loop at ME->T_MS_JOINT into LS_MS_JOINT.
            append initial line to LI_LVVAL assigning <S_LVVAL>.
            move 'I'                        to <S_LVVAL>-SIGN.
            move 'EQ'                       to <S_LVVAL>-OPTION.
            move LS_MS_JOINT-JOITY          to <S_LVVAL>-LOW.
          endloop.

***     Joint Width
        when 'P0_LT_DP_JOINTWIDTH'.
          loop at ME->T_MS_JOINT into LS_MS_JOINT.
            move LS_MS_JOINT-JOIWI     to LF_LDVAL.
            move LS_MS_JOINT-JOIWI_UOM to LF_LDUOM.
          endloop.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_JOINT.

    data: LF_WERKS type WERKS_D,
          LF_ARBPL type ARBPL.
    data: LS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT,
          LS_LEOKY    type /VCXI/VKSR_S_LEOKY,
          LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_JOINT type ref to /VCXI/CL_VKSR_SPVRE.


    move IR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_WERKS.
    move IR_ARBPL->F_ARBPL                                  to LF_ARBPL.

***------------------------------------------------------------------------------------------------
    loop at ME->T_MS_JOINT into LS_MS_JOINT
                          where ISVCE is initial.

***------------------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'JOINT'
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_JOINT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_JOINT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_JOINT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Joint Type
      clear LS_LEOKY.
      move LS_MS_JOINT-JOITY                 to LS_LEOKY-LEOKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_LEOKY-SETBY.
      LR_SPVRE_JOINT->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***------------------------------------------------------------------------------------------------
***   Set Joint Length
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_JOINT=>C_PARID_JOILE       to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
      move LS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_JOINT->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Joint Width
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_JOINT=>C_PARID_JOIWI       to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
      move LS_MS_JOINT-JOIWI                           to LS_PARAM-ATFLV.
      move LS_MS_JOINT-JOIWI_UOM                       to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
      LR_SPVRE_JOINT->SET_PARAM( IS_PARAM = LS_PARAM ).

    endloop.

  endmethod.
  method ADD_SPVRE_MC_JOINT.

    data: LF_WERKS type WERKS_D,
          LF_ARBPL type ARBPL.
    data: LS_MS_JOINT type ZVCXI_P0SR_S_MS_JOINT,
          LS_AVGCO    type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP    type ZVCXI_XCS_S_AVGCP.
    data: LR_SPVCE          type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_JOINT type ref to /VCXI/CL_VKSR_SPVRE.


    move IR_ARBPL->R_WERKS->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_WERKS.
    move IR_ARBPL->F_ARBPL                                  to LF_ARBPL.

***------------------------------------------------------------------------------------------------
    loop at ME->T_MS_JOINT into LS_MS_JOINT
                          where ISVCE is not initial.
      clear: LS_AVGCO, LS_AVGCP.

***   Read Average Consumption
      ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_AVGCO( exporting IF_WERKS = LF_WERKS
                                                           IF_ARBPL = LF_ARBPL
                                                           IF_MATNR = LS_MS_JOINT-MATNR
                                                           IF_DATE  = ME->F_DATE
                                                 importing ES_AVGCO = LS_AVGCO
                                                           ES_AVGCP = LS_AVGCP ).

***------------------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_JOINT-ISVCE
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_JOINT
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_JOINT to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_JOINT->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Material Number
      LR_SPVRE_MC_JOINT->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_JOINT-MATNR
                                                        SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).


***------------------------------------------------------------------------------------------------
***   Set Parameter Value
      case LS_MS_JOINT-ISVCE.
        when 'MC_JGLUE'.
          ME->SET_SPVRE_VALUE_MC_JGLUE(   IR_SPVRE_MC_JGLUE   = LR_SPVRE_MC_JOINT
                                          IS_MS_JOINT         = LS_MS_JOINT
                                          IS_AVGCO            = LS_AVGCO
                                          IS_AVGCP            = LS_AVGCP ).

        when 'MC_JSTITCH'.
          ME->SET_SPVRE_VALUE_MC_JSTITCH( IR_SPVRE_MC_JSTITCH = LR_SPVRE_MC_JOINT
                                          IS_MS_JOINT         = LS_MS_JOINT
                                          IS_AVGCO            = LS_AVGCO
                                          IS_AVGCP            = LS_AVGCP ).
        when 'MC_JTAPE'.
          ME->SET_SPVRE_VALUE_MC_JTAPE(   IR_SPVRE_MC_JTAPE   = LR_SPVRE_MC_JOINT
                                          IS_MS_JOINT         = LS_MS_JOINT
                                          IS_AVGCO            = LS_AVGCO
                                          IS_AVGCP            = LS_AVGCP ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MFMI_P.

    data: LS_MFMI_P type ZVCXI_P0SR_S_MFMI_P,
          LS_PARAM  type /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE      type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFMI type ref to /VCXI/CL_VKSR_SPVRE.


    loop at ME->T_MFMI_P into LS_MFMI_P.

***--------------------------------------------------------------------------------------
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFMI_P'
                                          IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MFMI
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MFMI to CT_SPVRE.
      move   ABAP_TRUE     to CF_MFI.

***   Set In Use
      LR_SPVRE_MFMI->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
***   Set Leading Object
      LR_SPVRE_MFMI->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MFMI_P-MATNR
                                                    SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Component Scrap
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_KAUSF              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-KAUSF                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-KAUSF_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Setup Percentage for Material Flow In
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFISP              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-MFISP                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-MFISP_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Consumption Factor for Material Flow In
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFICF              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-MFICF                                   to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Consumption Factor Per for Material Flow In
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_MFICP              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-MFICP                                   to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Purchase Flag
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PURCH              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PURCH                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Costing Relevant
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_SANKA              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-SANKA                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Text
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_TEXT               to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-TEXT                                    to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Vendor Number
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_LIFNR              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-LIFNR                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Price
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICE              to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PRICE                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PRICE_CURR                              to LS_PARAM-CURKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Price Unit
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MFMI=>C_PARID_PRICP_P            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PRICP                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PRICP_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Set Base Weight
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_BAWGT            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-BAWGT                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-BAWGT_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set Base Weight Per
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_BAWGP_A          to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-BAWGP                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-BAWGP_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).


***--------------------------------------------------------------------------------------
***   Fill MFMI PC

***   Set PC Type
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCTYP            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCTYP                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Length
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCLEN            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCLEN                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PCLEN_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Width
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCWID            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCWID                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PCWID_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Height
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCHEI            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCHEI                                   to LS_PARAM-ATFLV.
      move LS_MFMI_P-PCHEI_UOM                               to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Ups
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCUPS            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCUPS                                   to LS_PARAM-ATFLV.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***   Set PC Direction
      clear LS_PARAM.
      move ZCL_VCXI_P0SP_PR_MFMI_P=>C_PARID_PCDIR            to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR                 to LS_PARAM-PARTY.
      move LS_MFMI_P-PCDIR                                   to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC                  to LS_PARAM-SETBY.
      LR_SPVRE_MFMI->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Add Price Scale Manager
      IR_BL_RTESPV->ADD_PSCALE_MGR( exporting IR_SPVRE_PARENT = LR_SPVRE_MFMI
                                              IT_PSCALE       = LS_MFMI_P-T_PSCALE
                                    changing  CT_SPVRE        = CT_SPVRE ).
    endloop.

  endmethod.
  method ADD_SPVRE_MFSI_P.

    data: LF_TABIX type I,
          LF_IMFXC type ZVCXI_XCSP_IMFXC,
          LF_NEXTL type ZVCXI_XCSP_NEXTL,
          LF_MFICF type  ZVCXI_XCSP_MFICF,
          LF_MFICP type  ZVCXI_XCSP_MFICP.
    data: LS_PCDIM type ZVCXI_P0SP_S_PCDIM.
    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.
    data: LR_SPVCE        type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MFSI_P type ref to /VCXI/CL_VKSR_SPVRE.


***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MFSI_P'
                                        IR_SPVCE_PARENT = IR_SPVRE_MFMGR->R_SPVCE ).

*** Get all PC Dimensions
    LT_PCDIM = ME->ZIF_VCXI_PXSR_PCDIR~GET_PCDIM( ).

    loop at ME->T_IMFXC_IN into LF_IMFXC.
      move SY-TABIX to LF_TABIX.

***   Create Supervisor Runtime Element
      create object LR_SPVRE_MFSI_P
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_MFMGR.
      append LR_SPVRE_MFSI_P to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MFSI_P->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set MF X-Connect
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MF=>C_PARID_IMFXC
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_IMFXC
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set "Next Low-Level Code" Flag
      LF_NEXTL = value #( ME->T_NEXTL[ LF_TABIX ] default ABAP_TRUE ).
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MFSI=>C_PARID_NEXTL
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                      ATWRT = LF_NEXTL
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Set Consumption Factor for Material Flow In
      ME->GET_MFICF_BY_IMFXC( exporting IF_IMFXC = LF_IMFXC
                              importing EF_MFICF = LF_MFICF
                                        EF_MFICP = LF_MFICP ).
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_MFICF
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LF_MFICF
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
      LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_MFICP
                                                      PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                      ATFLV = LF_MFICP
                                                      SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).


***   Supervise Dimensions for "Next Low-Level" SFGs
      if LF_NEXTL eq ABAP_TRUE.
        LS_PCDIM = value #( LT_PCDIM[ LF_TABIX ] optional ).

        LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_P0SP_PR_MFSI_P=>C_PARID_PCDIR
                                                        PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                        ATWRT = LS_PCDIM-PCDIR
                                                        SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

        if LS_PCDIM-PCTYP is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCTYP
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                                          ATWRT = LS_PCDIM-PCTYP
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-S_PCLEN is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCLEN
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCLEN
                                                          UNIT  = LS_PCDIM-PCLEN_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-S_PCWID is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCWID
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCWID
                                                          UNIT  = LS_PCDIM-PCWID_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-S_PCHEI is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCHEI
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCHEI
                                                          UNIT  = LS_PCDIM-PCHEI_UOM
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
        if LS_PCDIM-PCUPS is not initial.
          LR_SPVRE_MFSI_P->SET_PARAM( IS_PARAM = value #( PARID = ZIF_VCXI_P0SP_MFP=>C_PARID_PCUPS
                                                          PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                          ATFLV = LS_PCDIM-PCUPS
                                                          SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ) ).
        endif.
      endif.

    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_ASMBL type ref to ZCL_VCXI_P3SR_BL_PSTEP_ASMBL.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_ASMBL.

*** PC Dimensions
    if ME->T_PCDIM_IN  eq LR_BL_PSTEP_ASMBL->T_PCDIM_IN  and
       ME->S_PCDIM_OUT eq LR_BL_PSTEP_ASMBL->S_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Joints and Parts
    if ME->T_MS_JOINT eq LR_BL_PSTEP_ASMBL->T_MS_JOINT and
       ME->F_WITH_INP eq LR_BL_PSTEP_ASMBL->F_WITH_INP and
       ME->T_XPART    eq LR_BL_PSTEP_ASMBL->T_XPART    and
       ME->T_MFMI_P   eq LR_BL_PSTEP_ASMBL->T_MFMI_P.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_ASMBL type ref to ZCL_VCXI_P3SR_BL_PSTEP_ASMBL.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    LR_BL_PSTEP_ASMBL ?= RR_BL_PSTEP.

*** PC Dimensions
    LR_BL_PSTEP_ASMBL->T_PCDIM_IN  = ME->T_PCDIM_IN.
    LR_BL_PSTEP_ASMBL->S_PCDIM_OUT = ME->S_PCDIM_OUT.

*** Joints and Parts
    LR_BL_PSTEP_ASMBL->T_MS_JOINT = ME->T_MS_JOINT.
    LR_BL_PSTEP_ASMBL->F_WITH_INP = ME->F_WITH_INP.
    LR_BL_PSTEP_ASMBL->T_XPART    = ME->T_XPART.
    LR_BL_PSTEP_ASMBL->T_MFMI_P   = ME->T_MFMI_P.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when 'P0_AT_CLOS'.
        ME->FILL_SPVRE_ADDON_CLOS( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                             IR_ARBPL       = IR_ARBPL
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
method FILL_SPVRE_ADDON_CLOS.

  data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set PC Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCTYP   to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCLEN  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCWID  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_ADDON_CLOS=>C_PARID_PCHEI  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
  move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Joint
  ME->ADD_SPVRE_MC_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                    IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                    IR_ARBPL        = IR_ARBPL
                          changing  CT_SPVRE        = CT_SPVRE ).

***------------------------------------------------------------------------------------------------
*** Add Joint
  ME->ADD_SPVRE_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                 IR_SPVRE_PARENT = IR_SPVRE_ADDON
                                 IR_ARBPL        = IR_ARBPL
                       changing  CT_SPVRE        = CT_SPVRE ).


endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    move 'CONV'     to CF_ID_ARBPL.

*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'MANU'     to CF_ID_ARBPL.
    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_IMFXC.

    RT_IMFXC_IN = value #( for LS_XPART in ME->T_XPART ( LS_XPART-IMFXC ) ).

  endmethod.
  method GET_MFICF_BY_IMFXC.

    EF_MFICF = value #( ME->T_XPART[ IMFXC = IF_IMFXC ]-PARAT default 1 ).
    EF_MFICP = 1.

  endmethod.
  method GET_PCDIM_IN.

    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_XPART type ref to ZCL_VCXI_PXSS_PR_XPART.


***------------------------------------------------------------------------------------------------
*** Inbound Dimensions of existing Assembly
    if ME->F_WITH_INP eq ABAP_TRUE.
      RT_PCDIM = SUPER->GET_PCDIM_IN( IT_PRVDR = IT_PRVDR ).
    endif.

***------------------------------------------------------------------------------------------------
*** Inbound Dimensions of Parts
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_XPART.
      LR_PR_XPART ?= LR_GATE->R_CLSPR.

***   Get Handling Dimensions
      LS_HNDDIM = LR_PR_XPART->GET_HNDDIM( ).

***   Add PC Dimension
      append value #( PCLEN     = LS_HNDDIM-HNDLE
                      PCLEN_UOM = LS_HNDDIM-HNDLE_UOM
                      PCWID     = LS_HNDDIM-HNDWI
                      PCWID_UOM = LS_HNDDIM-HNDWI_UOM
                      PCHEI     = LS_HNDDIM-HNDHE
                      PCHEI_UOM = LS_HNDDIM-HNDHE_UOM

                      PCUPS     = 1
                      NOOUT     = 1
                      PCDIR     = 'A'
                      PCTYP     = 'ZVCXI_P0_PRODUCT'
                    ) to RT_PCDIM.

    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM       type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.

***----------------------------------------------------------------------------
*** Get Customizing Element for Activity Unitizing
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_CLOS'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set PC Type
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCTYP   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCTYP                        to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCLEN  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCLEN                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCLEN_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCWID  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCWID                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCWID_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_P0SP_PR_ACTVY_CLOS=>C_PARID_PCHEI  to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCHEI                       to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCHEI_UOM                   to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Joint
    ME->ADD_SPVRE_MC_JOINT( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                                      IR_ARBPL        = IR_ARBPL
                            changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_SPVRE_MF.

*** Add MFSI for existing Input
    if ME->F_WITH_INP eq ABAP_TRUE.
      append initial line to ME->T_IMFXC_IN.
      append initial line to ME->T_NEXTL.
    endif.

*** Add SFG Parts as MFSI
    append lines of ME->GET_IMFXC( ) to ME->T_IMFXC_IN.

*** Delay MFO
    move ABAP_TRUE to CF_MFO.

    SUPER->GET_SPVRE_MF( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                   IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                         changing  CT_SPVRE       = CT_SPVRE
                                   CF_MFI         = CF_MFI
                                   CF_MFO         = CF_MFO ).

*** Add Procurement Parts as MFMI
    ME->ADD_SPVRE_MFMI_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                    IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                          changing  CT_SPVRE       = CT_SPVRE
                                    CF_MFI         = CF_MFI ).

***------------------------------------------------------------------------------------------------
*** Add MFSO PC (replace if needed)
    ME->ADD_SPVRE_MFSO_P( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                    IR_SPVRE_MFMGR = IR_SPVRE_MFMGR
                          changing  CT_SPVRE       = CT_SPVRE ).
    move ABAP_TRUE to CF_MFO.

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'T_PCDIM_IN'   VALUE = ref #( ME->T_PCDIM_IN  ) ) to RT_DATA.
    append value #( NAME = 'S_PCDIM_OUT'  VALUE = ref #( ME->S_PCDIM_OUT ) ) to RT_DATA.
    append value #( NAME = 'T_MS_JOINT'   VALUE = ref #( ME->T_MS_JOINT  ) ) to RT_DATA.
    append value #( NAME = 'F_WITH_INP'   VALUE = ref #( ME->F_WITH_INP  ) ) to RT_DATA.
    append value #( NAME = 'T_XPART'      VALUE = ref #( ME->T_XPART     ) ) to RT_DATA.
    append value #( NAME = 'T_MFMI_P'     VALUE = ref #( ME->T_MFMI_P    ) ) to RT_DATA.

  endmethod.
  method INIT_BY_CSTEP_ASMBL.

    data: LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_ASMBL type ref to ZCL_VCXI_P3SS_PR_CSTEP_ASMBL,
          LR_BL_ASFPROP     type ref to ZCL_VCXI_P3SS_BL_ASFPROP.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Assembling
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P3SS_PR_CSTEP_ASMBL.
      LR_PR_CSTEP_ASMBL ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_CSTEP_ASMBL is bound.

*** Get Assembly Forward Property XML (Inbound)
    LR_BL_ASFPROP = LR_PR_CSTEP_ASMBL->ZIF_VCXI_P3SS_COMM_PREV~GET_ASFPX( ).
    if LR_BL_ASFPROP->T_APINFO is not initial.
      ME->F_WITH_INP = ABAP_TRUE.
    endif.

  endmethod.
  method INIT_BY_JOINT.

    data: LF_JOITY type ZVCXI_P0S_JOITY,
          LF_NOSTI type ZVCXI_P0SS_NOSTI.
    data: LS_TD342 type ZVCXI_P0S_TD342,
          LS_JOILE type ZVCXI_P0S_S_JOILE,
          LS_JOIWI type ZVCXI_P0S_S_JOIWI,
          LS_STITP type ZVCXI_P0SS_S_STITP.
    data: LT_TD342    type ZCL_VCXI_P0SS_CUST_PRSTY=>YT_TD342.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_JOINT type ref to ZCL_VCXI_PXSS_PR_JOINT.
    field-symbols: <S_MS_JOINT> type ZVCXI_P0SR_S_MS_JOINT.


*** Loop at defined Joints
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_JOINT.
      LR_PR_JOINT ?= LR_GATE->R_CLSPR.

      LF_JOITY = LR_PR_JOINT->GET_JOITY( ).
      LS_JOILE = LR_PR_JOINT->GET_JOILE( ).
      LS_JOIWI = LR_PR_JOINT->GET_JOIWI( ).
      LS_STITP = LR_PR_JOINT->GET_STITP( ).
      LF_NOSTI = LR_PR_JOINT->GET_NOSTI( ).

      clear: LT_TD342.
      ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_MCONSU( exporting IF_JOITY = LF_JOITY
                                                            IF_DATE  = ME->F_DATE
                                                  importing ET_TD342 = LT_TD342 ).

      if LT_TD342 is not initial.
***     Add Entry for each defined Material Consumption
        loop at LT_TD342 into LS_TD342.
          append initial line to ME->T_MS_JOINT assigning <S_MS_JOINT>.
          move LS_TD342-ISVCE            to <S_MS_JOINT>-ISVCE.
          move LF_JOITY                  to <S_MS_JOINT>-JOITY.
          move LS_TD342-MATNR            to <S_MS_JOINT>-MATNR.
          move ABAP_FALSE                to <S_MS_JOINT>-PURCH.
          move-corresponding LS_JOILE    to <S_MS_JOINT>.
          move-corresponding LS_JOIWI    to <S_MS_JOINT>.
          move-corresponding LS_STITP    to <S_MS_JOINT>.
          move LF_NOSTI                  to <S_MS_JOINT>-NOSTI.
        endloop.
      else.
***     Add Dummy Entry if no Material Consumption is neede
        append initial line to ME->T_MS_JOINT assigning <S_MS_JOINT>.
        move LF_JOITY                  to <S_MS_JOINT>-JOITY.
        move ABAP_FALSE                to <S_MS_JOINT>-PURCH.
        move-corresponding LS_JOILE    to <S_MS_JOINT>.
        move-corresponding LS_JOIWI    to <S_MS_JOINT>.
        move-corresponding LS_STITP    to <S_MS_JOINT>.
        move LF_NOSTI                  to <S_MS_JOINT>-NOSTI.
      endif.
    endloop.

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


*** Initialize by CStep Assembling
    ME->INIT_BY_CSTEP_ASMBL( IT_PRVDR = IT_PRVDR ).

*** Get Inbound PC Dimension
    ME->T_PCDIM_IN = ME->GET_PCDIM_IN( IT_PRVDR = IT_PRVDR ).

*** Get Outbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_OUT = value #( LT_PCDIM[ 1 ] optional ).

*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

*** Initialize Joint Information
    ME->INIT_BY_JOINT( IT_PRVDR = IT_PRVDR ).

*** Initialize Part Information
    ME->INIT_BY_XPART( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method INIT_BY_XPART.

    data: LF_GXCON type ZVCXI_PXSS_GXCON,
          LF_MATNR type MATNR,
          LF_TEXT  type TEXT30,
          LF_PURCH type ZVCXI_XCS_PURCH,
          LF_SANKA type SANKA,
          LF_LIFNR type LIFNR.
    data: LS_HNDDIM type ZVCXI_PXS_S_HNDDIM.
    data: LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_XPART        type ref to ZCL_VCXI_PXSS_PR_XPART,
          LR_GATE_PSCALE_MGR type ref to /VCXI/CL_VKSR_GATE.


*** Loop at defined Parts
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_XPART.
      LR_PR_XPART ?= LR_GATE->R_CLSPR.

***   Get Material Flow Information of Part
      LR_PR_XPART->GET_MFINFO( importing EF_GXCON           = LF_GXCON
                                         EF_MATNR           = LF_MATNR
                                         EF_TEXT            = LF_TEXT
                                         EF_PURCH           = LF_PURCH
                                         EF_SANKA           = LF_SANKA
                                         EF_LIFNR           = LF_LIFNR
                                         ER_GATE_PSCALE_MGR = LR_GATE_PSCALE_MGR ).

      if LF_GXCON is not initial.
***     Add Connection
        append value #( IMFXC = LF_GXCON
                        PARAT = LR_PR_XPART->GET_PARAT( ) ) to ME->T_XPART.
      else.
***     Get Handling Dimensions
        LS_HNDDIM = LR_PR_XPART->GET_HNDDIM( ).

***     Define as Material Flow Material In
        append value #( MATNR      = LF_MATNR
                        MFISP      = 100
                        MFISP_UOM  = '%'
                        MFICF      = LR_PR_XPART->GET_PARAT( )
                        MFICP      = 1
                        SANKA      = LF_SANKA
                        TEXT       = LF_TEXT
                        PURCH      = LF_PURCH
                        LIFNR      = LF_LIFNR
                        T_PSCALE   = ME->GET_PSCALE( IR_GATE_PARENT = LR_GATE_PSCALE_MGR )
                        PCTYP      = 'ZVCXI_P0_PRODUCT'
                        PCLEN      = LS_HNDDIM-HNDLE
                        PCLEN_UOM  = LS_HNDDIM-HNDLE_UOM
                        PCWID      = LS_HNDDIM-HNDWI
                        PCWID_UOM  = LS_HNDDIM-HNDWI_UOM
                        PCHEI      = LS_HNDDIM-HNDHE
                        PCHEI_UOM  = LS_HNDDIM-HNDHE_UOM
                        PCUPS      = 1
                        NOOUT      = 1
                        PCDIR      = 'A'
                      ) to ME->T_MFMI_P.
      endif.
    endloop.

  endmethod.
  method REPLACE_MFSI_BY_MFMI.

    field-symbols: <T_MFMI> type standard table,
                   <S_MFMI> type ANY.


    check IR_MFMI is bound and
          LINE_EXISTS( ME->T_XPART[ IMFXC = IF_IMFXC ] ).
    assign IR_MFMI->* to <T_MFMI>.

    loop at <T_MFMI> assigning <S_MFMI>.
      append corresponding #( base ( corresponding #( <S_MFMI> ) )
                              ME->T_XPART[ IMFXC = IF_IMFXC ] mapping MFICF = PARAT
                            ) to ME->T_MFMI_P.
    endloop.
    delete ME->T_XPART where IMFXC eq IF_IMFXC.

  endmethod.
method SET_SPVRE_VALUE_MC_JGLUE.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOITY    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOITY                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Joint Width
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_JOIWI    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOIWI                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOIWI_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_AVGCO_W  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_AVGCO-AVGCO                              to LS_PARAM-ATFLV.
  move IS_AVGCO-AVGCO_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_AVGCP_A  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_AVGCP-AVGCP                              to LS_PARAM-ATFLV.
  move IS_AVGCP-AVGCP_UOM                          to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-LIFNR                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PURCH    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PURCH                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_TEXT     to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-TEXT                            to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PRICE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICE_CURR                      to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JGLUE=>C_PARID_PRICP_W  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICP                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICP_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JGLUE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JGLUE
method SET_SPVRE_VALUE_MC_JSTITCH.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_JOITY    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOITY                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_JOILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOILE                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOILE_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Average Consumption
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_AVGCO_P  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-NOSTI                             to LS_PARAM-ATFLV.
  move IS_AVGCP-AVGCP_UOM                            to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_AVGCP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-STITP                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-STITP_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Stitch Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_STILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_AVGCO-AVGCO                                to LS_PARAM-ATFLV.
  move IS_AVGCO-AVGCO_UOM                            to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-LIFNR                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PURCH    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-PURCH                             to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_TEXT     to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR             to LS_PARAM-PARTY.
  move IS_MS_JOINT-TEXT                              to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PRICE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICE                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICE_CURR                        to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JSTITCH=>C_PARID_PRICP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC             to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICP                             to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICP_UOM                         to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC              to LS_PARAM-SETBY.
  IR_SPVRE_MC_JSTITCH->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JSTITCH
method SET_SPVRE_VALUE_MC_JTAPE.

  data:  LS_PARAM            type        /VCXI/VKSR_S_PARAM.

***------------------------------------------------------------------------------------------------
*** Set Joint Type
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_JOITY    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOITY                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Set Joint Length
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_JOILE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-JOILE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-JOILE_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Vendor Number
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_LIFNR    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-LIFNR                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Purchase Flag
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PURCH    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PURCH                           to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Text
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_TEXT     to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR           to LS_PARAM-PARTY.
  move IS_MS_JOINT-TEXT                            to LS_PARAM-ATWRT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PRICE    to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICE                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICE_CURR                      to LS_PARAM-CURKY.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Price Unit
  clear LS_PARAM.
  move ZCL_VCXI_P0SP_PR_MC_JTAPE=>C_PARID_PRICP_L  to LS_PARAM-PARID.
  move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
  move IS_MS_JOINT-PRICP                           to LS_PARAM-ATFLV.
  move IS_MS_JOINT-PRICP_UOM                       to LS_PARAM-UNIT.
  move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
  IR_SPVRE_MC_JTAPE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.                    "SET_SPVRE_VALUE_MC_JTAPE
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.

*** Set all PC Dimensions of the parts that are assembled
    CT_PCDIM = ME->T_PCDIM_IN.

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    data: LS_PCDIM_OUT type  ZVCXI_P0SP_S_PCDIM.

*** Keep Number of Outs of provided Dimensions
    LS_PCDIM_OUT = ME->S_PCDIM_OUT.
    LS_PCDIM_OUT-NOOUT = reduce #( init LF_NOOUT = 0 for LS_PCDIM in CT_PCDIM next LF_NOOUT = LF_NOOUT + LS_PCDIM-NOOUT ).

    CT_PCDIM = value #( ( LS_PCDIM_OUT ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.

    RT_PCDIM = ME->T_PCDIM_IN.

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    field-symbols: <S_PCDIM_IN>  type ZVCXI_P0SP_S_PCDIM.


    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
    loop at ME->T_PCDIM_IN assigning <S_PCDIM_IN>.
      <S_PCDIM_IN> = ME->TURN_PCDIM( IS_PCDIM = <S_PCDIM_IN>
                                     IF_PCDIR = IF_PCDIR ).
    endloop.

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
