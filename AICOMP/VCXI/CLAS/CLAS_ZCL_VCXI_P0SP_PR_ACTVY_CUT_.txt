
class ZCL_VCXI_P0SP_PR_ACTVY_CUT definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_NOOUT type /VCXI/VKS_PARID value 'ZVCXI_XC_NOOUT'. "#EC NOTEXT

  methods GET_NOOUT
    returning
      value(RF_NOOUT) type ZVCXI_XCS_NOOUT
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU'. "#EC NOTEXT
  constants C_IEVNT_I_RECALC_NOOUT type /VCXI/VKSC_IEVNT value 'RECALC_NOOUT'. "#EC NOTEXT
  constants C_IEVNT_I_RECALC_PCDIM type /VCXI/VKSC_IEVNT value 'RECALC_PCDIM'. "#EC NOTEXT
  constants C_IEVNT_O_NOOUT_CHANGED type /VCXI/VKSC_IEVNT value 'NOOUT_CHANGED'. "#EC NOTEXT
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED'. "#EC NOTEXT

  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_NOOUT
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SP_PR_ACTVY_CUT definition
class ZCL_VCXI_P0SP_PR_ACTVY_CUT implementation.
method GET_NOOUT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).
  move LS_PARAM-ATFLV to RF_NOOUT.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.
*** Recalculate Material Consumption
    when C_IEVNT_I_RECALC_MC_CONSU.
      ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

*** PC Dimensions
    when C_IEVNT_I_RECALC_PCDIM.
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).

*** Recalculate Number of Outs
    when C_IEVNT_I_RECALC_NOOUT.
      ME->HANDLE_RECALC_NOOUT( ).

  endcase.

endmethod.
method HANDLE_RECALC_MC_CONSU.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LS_MQTYI           type        ZVCXI_XCSP_S_MQTYI.
  data:  LF_UPDATE_ALL      type        ABAP_BOOL.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
         LR_GATE_PARENT     type ref to /VCXI/CL_VKSR_GATE,
         LR_OPERATION       type ref to ZIF_VCXI_XCSP_OPERATION,
         LR_PR_MC           type ref to ZCL_VCXI_XCSP_PR_MC.

***------------------------------------------------------------------
*** Should all MC's updated or just the requester
  read table IT_GATE with key TABLE_LINE = ME->R_GATE
                     transporting no fields.
  if SY-SUBRC = 0.
    LF_UPDATE_ALL = ABAP_TRUE.
  else.
    LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
    read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT
                       transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    endif.
  endif.

***------------------------------------------------------------------
*** Get all Machine Quantity
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  if SY-SUBRC = 0.
    try.
        move LR_GATE->R_CLSPR ?to LR_OPERATION.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_OPERATION.
    endtry.
    if LR_OPERATION is bound.
      move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
    endif.
  endif.

***------------------------------------------------------------------
*** Get all Material Consumptions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE = ABAP_TRUE ).

***----------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
  loop at LT_GATE into LR_GATE.
    if LF_UPDATE_ALL eq ABAP_FALSE.
      read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
      if SY-SUBRC ne 0.
        continue.
      endif.
    endif.

    try.
        clear: LR_PR_MC.
        move LR_GATE->R_CLSPR ?to LR_PR_MC.
        check LR_PR_MC is bound.
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method HANDLE_RECALC_NOOUT.

  data:  LF_NOOUT_TOTAL   type        ZVCXI_XCS_NOOUT,
         LF_NOOUT_PCOUT   type        ZVCXI_XCS_NOOUT.
  data:  LT_GATE          type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_PCOUT      type ref to ZCL_VCXI_P0SP_PR_PCOUT.


***------------------------------------------------------------------
*** Get all PC Dimensions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SP_PR_PCOUT=>C_IPRVT_P0_PCOUT
                                   IF_INUSE = ABAP_TRUE ).
  check LT_GATE is not initial.

***------------------------------------------------------------------
*** Collect Number of Outs
  loop at LT_GATE into LR_GATE.
    move LR_GATE->R_CLSPR ?to LR_PR_PCOUT.
    check LR_PR_PCOUT is bound.

    move LR_PR_PCOUT->GET_NOOUT( ) to LF_NOOUT_PCOUT.
    add LF_NOOUT_PCOUT to LF_NOOUT_TOTAL.
  endloop.

*** Set new Number of Outs
  ME->SET_NOOUT( IF_NOOUT = LF_NOOUT_TOTAL ).

endmethod.
method SET_NOOUT.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).

  move IF_NOOUT to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOOUT_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

  data:          LT_GATE       type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_PCOUT   type ref to ZCL_VCXI_P0SP_PR_PCOUT.
  field-symbols: <S_PCDIM>     type        ZVCXI_P0SP_S_PCDIM.


***------------------------------------------------------------------
*** Get all PC Dimensions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_PCOUT=>C_IPRVT_P0_PCOUT
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).
  check LT_GATE is not initial.

***------------------------------------------------------------------
*** Receive defined Dimensions
  free CT_PCDIM.

  loop at LT_GATE into LR_GATE.
    move LR_GATE->R_CLSPR ?to LR_PR_PCOUT.
    check LR_PR_PCOUT is bound.

    append initial line to CT_PCDIM assigning <S_PCDIM>.
    move LR_PR_PCOUT->GET_PCDIM( ) to <S_PCDIM>.
  endloop.

endmethod.
