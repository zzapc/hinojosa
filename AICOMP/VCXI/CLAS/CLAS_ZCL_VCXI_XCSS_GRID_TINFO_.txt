
class ZCL_VCXI_XCSS_GRID_TINFO definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_XCSS_S_TINFO_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_TINFO
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_TINFO_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_TINFO_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods HANDLE_HOTSPOT_CLICK
    for event HOTSPOT_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW_ID
      !E_COLUMN_ID
      !ES_ROW_NO .

  methods GET_DISABLED_ADD
    redefinition .
  methods GET_DISABLED_DEL
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "ZCL_VCXI_XCSS_GRID_TINFO definition
class ZCL_VCXI_XCSS_GRID_TINFO implementation.
  method CHANGE_STYLE_TINFO.

    data: LS_TINFO_VIS type ZVCXI_XCSS_S_TINFO_VIS.
    data: LR_PR_TINFO type ref to ZCL_VCXI_XCSS_PR_TINFO.

    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_TINFO.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_TINFO is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_TINFO_VIS.

***--------------------------------------------------------------------------------------
*** Enable Fields
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TLTIM'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TCEST'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TCEST_CURR'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TCCBC'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set One-Time Usage Tool Flag = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FOTUT'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set External Tool Flag = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'FEXTT'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Overwrite for Tool Price
    if LS_TINFO_VIS-TPRCE_FOVRR ne ABAP_TRUE.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MRKUP'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE_CURR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    else.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MRKUP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE_CURR'
                                  IF_STYLE     = ME->F_STYLE_ENABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

*** Disable Fields in case of One-Time Usage Tool
    if LS_TINFO_VIS-FOTUT eq ABAP_TRUE.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TLTIM'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

*** Disable Fields in case of External Tool
    if LS_TINFO_VIS-FEXTT eq ABAP_TRUE.
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TCEST'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TCEST_CURR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MRKUP'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE_CURR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TPRCE_FOVRR'
                                  IF_STYLE     = conv #( ME->F_STYLE_DISABLED + CL_GUI_ALV_GRID=>MC_STYLE_HOTSPOT_NO )
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TCCBC'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
      ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                  IF_STYLE     = ME->F_STYLE_DISABLED
                        changing  CT_STYL      = CT_STYL ).
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type
    ME->F_IPRVT = ZCL_VCXI_XCSS_PR_TINFO=>C_IPRVT_XCS_TINFO.

  endmethod.
  method GET_DISABLED_ADD.

*** Disable as Tooling Info is controlled by its Parent Element
    RF_DISABLED = ABAP_TRUE.

  endmethod.
  method GET_DISABLED_DEL.

*** Disable as Tooling Info is controlled by its Parent Element
    RF_DISABLED = ABAP_TRUE.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE.
    field-symbols: <S_FCAT> type LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
          move ABAP_TRUE    to <S_FCAT>-TECH.
          move 0            to <S_FCAT>-COL_POS.

        when 'FOTUT'.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
            move ABAP_TRUE    to <S_FCAT>-HOTSPOT.
          endif.

        when 'TLTIM'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

        when 'FEXTT'.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
            move ABAP_TRUE    to <S_FCAT>-HOTSPOT.
          endif.

        when 'TCEST' or 'TCEST_CURR' or
             'MRKUP' or
             'TPRCE' or 'TPRCE_CURR' or
             'TCCBC' or 'LIFNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
          endif.

        when 'TPRCE_FOVRR'.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE    to <S_FCAT>-EDIT.
            move ABAP_TRUE    to <S_FCAT>-HOTSPOT.
          endif.

      endcase.
    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_XCSS_S_TINFO_GRID( POSID  = LR_GATE->GET_POSID( )
                                                        GATKY  = LR_GATE->F_GATKY
                                                        R_GATE = LR_GATE
                                                      ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_TINFO_VIS( exporting IR_GATE = LR_GATE
                         changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_TINFO( exporting IR_GATE = LR_GATE
                                            IS_DATA = <S_DATA>
                                   changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method GET_TINFO_VIS.

    data: LS_TINFO_VIS type ZVCXI_XCSS_S_TINFO_GRID.
    data: LR_PR_TINFO  type ref to ZCL_VCXI_XCSS_PR_TINFO.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_TINFO.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_TINFO is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_TINFO_VIS.

***--------------------------------------------------------------------------------------
*** Desription by Tool User
    LR_PR_TINFO->GET_PRVDR_TUSER( importing EF_DESCR = LS_TINFO_VIS-DESCR ).

*** Tool Lifetime
    LS_TINFO_VIS-S_TLTIM = LR_PR_TINFO->GET_TLTIM( ).

*** One-Time Usage Tool Flag
    LS_TINFO_VIS-FOTUT   = LR_PR_TINFO->GET_FOTUT( ).

*** External Tool Flag
    LS_TINFO_VIS-FEXTT   = LR_PR_TINFO->GET_FEXTT( ).

*** Estimated Tool Costs
    LS_TINFO_VIS-S_TCEST = LR_PR_TINFO->GET_TCEST( importing ES_TCEST_LOCAL = LS_TINFO_VIS-S_TCEST_LOCAL ).

*** Markup
    LS_TINFO_VIS-S_MRKUP = LR_PR_TINFO->GET_MRKUP( ).

*** Tool Price
    LS_TINFO_VIS-S_TPRCE = LR_PR_TINFO->GET_TPRCE( importing EF_FOVRR       = LS_TINFO_VIS-TPRCE_FOVRR
                                                             ES_TPRCE_LOCAL = LS_TINFO_VIS-S_TPRCE_LOCAL ).

*** Tool Costs covered by Customer
    LS_TINFO_VIS-S_TCCBC = LR_PR_TINFO->GET_TCCBC( ).

*** Internal Tool Costs
    LS_TINFO_VIS-S_TCINT = LR_PR_TINFO->GET_TCINT( ).

*** Vendor
    LS_TINFO_VIS-LIFNR   = LR_PR_TINFO->GET_LIFNR( importing EF_DESCR = LS_TINFO_VIS-LIFNR_DESCR ).

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_TINFO_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_TINFO_GRID type ZVCXI_XCSS_S_TINFO_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_TINFO_GRID.

          check LS_TINFO_GRID-R_GATE is bound and
                LS_TINFO_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_TINFO_VIS( IR_GATE = LS_TINFO_GRID-R_GATE
                             IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method HANDLE_HOTSPOT_CLICK.

    data: LS_TINFO_GRID type ZVCXI_XCSS_S_TINFO_GRID.
    field-symbols: <T_DATA>  type standard table,
                   <S_DATA>  type ANY,
                   <F_FIELD> type ANY.

    try.
***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        read table <T_DATA> assigning <S_DATA> index E_ROW_ID.
        check SY-SUBRC eq 0.

        assign component E_COLUMN_ID of structure <S_DATA> to <F_FIELD>.
        check SY-SUBRC eq 0.

***     Adjust Flag
        <F_FIELD> = switch #( <F_FIELD> when ABAP_TRUE  then ABAP_FALSE
                                        when ABAP_FALSE then ABAP_TRUE ).

***     Set Values to PR Class
        move-corresponding <S_DATA> to LS_TINFO_GRID.
        ME->SET_TINFO_VIS( IR_GATE = LS_TINFO_GRID-R_GATE
                           IS_DATA = <S_DATA> ).

***     Process Events
        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

*** If we switch Application Events off -> do manually Refresh Screen
    if ME->F_APPL_EVENTS eq ABAP_FALSE.
      ME->R_UIGATE->REFRESH_SCREEN( ).
    endif.

  endmethod.
  method SET_EVENT.

    SUPER->SET_EVENT( ).

*** Set Hotspot
    set handler ME->HANDLE_HOTSPOT_CLICK       for ME->R_GRID.

  endmethod.
  method SET_TINFO_VIS.

    data: LS_TINFO_VIS_OLD type        ZVCXI_XCSS_S_TINFO_VIS,
          LS_TINFO_VIS_NEW type        ZVCXI_XCSS_S_TINFO_VIS.
    data: LR_PR_TINFO  type ref to ZCL_VCXI_XCSS_PR_TINFO.


***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_XCSS_PR_TINFO.
    LR_PR_TINFO ?= IR_GATE->R_CLSPR.
    check LR_PR_TINFO is bound.

*** Get old Values
    ME->GET_TINFO_VIS( exporting IR_GATE = IR_GATE
                       changing  CS_DATA = LS_TINFO_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_TINFO_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Tool Lifetime
    if LS_TINFO_VIS_NEW-S_TLTIM ne LS_TINFO_VIS_OLD-S_TLTIM.
      LR_PR_TINFO->SET_TLTIM( IS_TLTIM = LS_TINFO_VIS_NEW-S_TLTIM
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** One-Time Usage Tool Flag
    if LS_TINFO_VIS_NEW-FOTUT ne LS_TINFO_VIS_OLD-FOTUT.
      LR_PR_TINFO->SET_FOTUT( IF_FOTUT = LS_TINFO_VIS_NEW-FOTUT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** External Tool Flag
    if LS_TINFO_VIS_NEW-FEXTT ne LS_TINFO_VIS_OLD-FEXTT.
      LR_PR_TINFO->SET_FEXTT( IF_FEXTT = LS_TINFO_VIS_NEW-FEXTT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Estimated Tool Costs
    if LS_TINFO_VIS_NEW-S_TCEST ne LS_TINFO_VIS_OLD-S_TCEST.
      LR_PR_TINFO->SET_TCEST( IS_TCEST = LS_TINFO_VIS_NEW-S_TCEST
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Markup
    if LS_TINFO_VIS_NEW-S_MRKUP ne LS_TINFO_VIS_OLD-S_MRKUP.
      LR_PR_TINFO->SET_MRKUP( IS_MRKUP = LS_TINFO_VIS_NEW-S_MRKUP
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Tool Price if it is "Overriden"
    if LS_TINFO_VIS_OLD-TPRCE_FOVRR eq ABAP_TRUE and
       LS_TINFO_VIS_OLD-S_TPRCE ne LS_TINFO_VIS_NEW-S_TPRCE.
      LR_PR_TINFO->SET_TPRCE( IS_TPRCE = LS_TINFO_VIS_NEW-S_TPRCE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
*** Set Flag Override Tool Price
    if LS_TINFO_VIS_NEW-TPRCE_FOVRR ne LS_TINFO_VIS_OLD-TPRCE_FOVRR.
      LR_PR_TINFO->SET_TPRCE( IF_FOVRR = LS_TINFO_VIS_NEW-TPRCE_FOVRR ).
    endif.

*** Tool Costs covered by Customer
    if LS_TINFO_VIS_NEW-S_TCCBC ne LS_TINFO_VIS_OLD-S_TCCBC.
      LR_PR_TINFO->SET_TCCBC( IS_TCCBC = LS_TINFO_VIS_NEW-S_TCCBC
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if LS_TINFO_VIS_NEW-LIFNR ne LS_TINFO_VIS_OLD-LIFNR.
      LR_PR_TINFO->SET_LIFNR( IF_LIFNR = LS_TINFO_VIS_NEW-LIFNR
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
