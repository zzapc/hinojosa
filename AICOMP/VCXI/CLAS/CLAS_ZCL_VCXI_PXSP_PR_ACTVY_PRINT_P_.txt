
class ZCL_VCXI_PXSP_PR_ACTVY_PRINT_P definition
  public
  inheriting from ZCL_VCXI_PXSP_PR_ACTVY_PRINT
  create public .

public section.

  constants C_PARID_PRARE type /VCXI/VKS_PARID value 'ZVCXI_P0_PRARE' ##NO_TEXT.

  methods GET_PRARE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_PRARE) type ZVCXI_P0S_S_PRARE
    raising
      /VCXI/CX_CKX .
  methods SET_PRARE
    importing
      !IS_PRARE type ZVCXI_P0S_S_PRARE optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_RECALC_MC_CONSU
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSP_PR_ACTVY_PRINT_P definition
class ZCL_VCXI_PXSP_PR_ACTVY_PRINT_P implementation.
  method GET_PRARE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRARE ).
    move LS_PARAM-ATFLV to RS_PRARE-PRARE.
    move LS_PARAM-UNIT  to RS_PRARE-PRARE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LT_GATE       type /VCXI/VKSR_TT_GATE.
    data: LS_MQTYI      type ZVCXI_XCSP_S_MQTYI,
          LS_MQTYI_AREA type ZVCXI_XCSP_S_MQTYI,
          LS_PRARE      type ZVCXI_P0S_S_PRARE.
    data: LF_UPDATE_ALL  type ABAP_BOOL.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_OPERATION type ref to ZIF_VCXI_XCSP_OPERATION,
          LR_PR_MC     type ref to ZCL_VCXI_XCSP_PR_MC.

***------------------------------------------------------------------
*** Should all MC Inks be updated or just the requestered
    if LINE_EXISTS( IT_GATE[ TABLE_LINE = ME->R_GATE ] ).
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      if LINE_EXISTS( IT_GATE[ TABLE_LINE = ME->R_GATE->GET_PARENT( ) ] ).
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

****------------------------------------------------------------------
*** Get Printable Area
    LS_PRARE = ME->GET_PRARE( ).

***------------------------------------------------------------------
*** Get all Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
      try.
          move LR_GATE->R_CLSPR ?to LR_OPERATION.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_OPERATION.
      endtry.
      if LR_OPERATION is bound.
        move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
      endif.
    endif.

*** Calculate total Printable Area
    LS_MQTYI_AREA-MQTYI      = LS_PRARE-PRARE * LS_MQTYI-MQTYI.
    LS_MQTYI_AREA-MQTYI_UOM  = LS_PRARE-PRARE_UOM.

***------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

*** Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        if not LINE_EXISTS( IT_GATE[ TABLE_LINE = LR_GATE ] ).
          continue.
        endif.
      endif.
      LR_PR_MC ?= LR_GATE->R_CLSPR.

***   Calculate Ink Consumption based on Area
      if LR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSP_PR_MC_INK.
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI_AREA ).
      else.
***     Calculate standard Consuption
        LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
      endif.
    endloop.

  endmethod.
  method SET_PRARE.

    data: LF_CHANGED type ABAP_BOOL.
    data: LS_PARAM   type /VCXI/VKSR_S_PARAM.


*** Get current Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRARE ).

    if IS_PRARE is supplied.
      move IS_PRARE-PRARE     to LS_PARAM-ATFLV.
      move IS_PRARE-PRARE_UOM to LS_PARAM-UNIT.
    endif.

    LS_PARAM-SETBY = IF_SETBY.
    if LS_PARAM-SETBY is initial.
      clear LS_PARAM-ATFLV.
    endif.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
*      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PRARE_CHANGED ).
    endif.

  endmethod.
