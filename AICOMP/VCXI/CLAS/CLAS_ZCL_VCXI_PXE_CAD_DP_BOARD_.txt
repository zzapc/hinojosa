
class ZCL_VCXI_PXE_CAD_DP_BOARD definition
  public
  create public .

public section.

  data T_BOARD type ZVCXI_PXE_CAD_TT_BOARD read-only .

  methods LOAD
    importing
      !IF_BOARD type ZVCXI_PCS_BOARD
      !IF_MBOAR type ZVCXI_PCSS_MBOAR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS default SY-DATUM
    returning
      value(RR_BOARD) type ref to ZCL_VCXI_PXE_CAD_DP_BOARD
    raising
      /VCXI/CX_CKX .
protected section.

  methods GET_CALIP
    importing
      !IR_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD
      !IF_ARBPL type ARBPL
      !IF_DATE type DATS
    returning
      value(RS_CALIP) type ZVCXI_P0SS_S_CALIP
    raising
      /VCXI/CX_CKX .
  methods GET_SURWT
    importing
      !IR_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD
      !IF_ARBPL type ARBPL
      !IF_DATE type DATS
    returning
      value(RS_SURWT) type ZVCXI_PXS_S_SURWT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXE_CAD_DP_BOARD definition
class ZCL_VCXI_PXE_CAD_DP_BOARD implementation.
  method GET_CALIP.

***--------------------------------------------------------------------------------------
*** Start with Flute Height
    data(LS_BGWHT) = IR_CUST_BOARD->GET_BGWHT( IF_ARBPL = IF_ARBPL ).
    RS_CALIP = value #( CALIP     = LS_BGWHT-BGWHT
                        CALIP_UOM = LS_BGWHT-BGWHT_UOM ).
    check RS_CALIP is not initial.

***--------------------------------------------------------------------------------------
*** Get all Papers based on Work Center
    loop at IR_CUST_BOARD->GET_BPAP( IF_ARBPL = IF_ARBPL ) into data(LS_BPAP)
                                                          where BPMAT is not initial.

***   Load Customizing of Paper
      data(LR_CUST_PAPER) = ZCL_VCXI_PCSS_CUST_PAPER=>GET_INSTANCE_PAPER( IF_MATNR = LS_BPAP-BPMAT
                                                                          IF_WERKS = IR_CUST_BOARD->F_WERKS
                                                                          IF_DATE  = IF_DATE ).

***   Add Paper Caliper to total Board Caliper
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LR_CUST_PAPER->S_CALIP-CALIP
                                                          IF_CALCV_UOM_1 = LR_CUST_PAPER->S_CALIP-CALIP_UOM
                                                          IF_CALCV_2     = RS_CALIP-CALIP
                                                          IF_CALCV_UOM_2 = RS_CALIP-CALIP_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                          IF_UOM         = RS_CALIP-CALIP_UOM
                                                importing EF_CALCV       = RS_CALIP-CALIP
                                                          EF_CALCV_UOM   = RS_CALIP-CALIP_UOM ).
    endloop.

  endmethod.
  method GET_SURWT.

***--------------------------------------------------------------------------------------
*** Get all Papers based on Work Center
    loop at IR_CUST_BOARD->GET_BPAP( IF_ARBPL = IF_ARBPL ) into data(LS_BPAP)
                                                          where BPMAT is not initial.

***   Load Customizing of Paper
      data(LR_CUST_PAPER) = ZCL_VCXI_PCSS_CUST_PAPER=>GET_INSTANCE_PAPER( IF_MATNR = LS_BPAP-BPMAT
                                                                          IF_WERKS = IR_CUST_BOARD->F_WERKS
                                                                          IF_DATE  = IF_DATE ).

      data(LS_GRAMM) = LR_CUST_PAPER->GET_GRAMM( ).
      if RS_SURWT-SURWT_UOM is initial.
        RS_SURWT-SURWT_UOM = LS_GRAMM-GRAMM_UOM.
      endif.

***   Add Paper Grammage to total Board Grammage
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_GRAMM-GRAMM
                                                          IF_CALCV_UOM_1 = LS_GRAMM-GRAMM_UOM
                                                          IF_CALCV_2     = RS_SURWT-SURWT
                                                          IF_CALCV_UOM_2 = RS_SURWT-SURWT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = RS_SURWT-SURWT
                                                          EF_CALCV_UOM   = RS_SURWT-SURWT_UOM ).
    endloop.

  endmethod.
  method LOAD.

    data: LT_BOARD_DESCR type ZVCXI_PCSS_TT_BOARD_DESCR,
          LT_CLASS_VALUE type ZVCXI_PCSS_TT_CLASS_VALUE.


***--------------------------------------------------------------------------------------
*** Get instance of Board Customizing
    data(LR_CUST_BOARD) = ZCL_VCXI_PCSS_CUST_BOARD=>GET_INSTANCE( IF_BOARD = IF_BOARD
                                                                  IF_MBOAR = IF_MBOAR
                                                                  IF_WERKS = IF_WERKS
                                                                  IF_DATE  = IF_DATE ).
    check LR_CUST_BOARD is bound.

***--------------------------------------------------------------------------------------
*** Basic Information
    append value #( BOARD = LR_CUST_BOARD->F_BOARD
                    FLUTE = LR_CUST_BOARD->F_FLUTE
                  ) to ME->T_BOARD assigning field-symbol(<S_BOARD>).

*** Get Board Grade Description
    try.
        LT_BOARD_DESCR = value #( ( IDEST = 'GLDES' ) ).
        LR_CUST_BOARD->GET_BOARD_DESCR( changing CT_BOARD_DESCR = LT_BOARD_DESCR ).
        <S_BOARD>-DESCR = value #( LT_BOARD_DESCR[ 1 ]-DESCR optional ).
      catch /VCXI/CX_CKX.
        clear <S_BOARD>-DESCR.
    endtry.

*** Caliper and Surface Weight
    <S_BOARD>-S_CALIP = ME->GET_CALIP( IR_CUST_BOARD = LR_CUST_BOARD
                                       IF_ARBPL      = LR_CUST_BOARD->F_ARBPL
                                       IF_DATE       = IF_DATE ).
    <S_BOARD>-S_SURWT = ME->GET_SURWT( IR_CUST_BOARD = LR_CUST_BOARD
                                       IF_ARBPL      = LR_CUST_BOARD->F_ARBPL
                                       IF_DATE       = IF_DATE ).

*** Classification
    try.
        LT_CLASS_VALUE = value #( ( ICLAT = 'BCT' ) ).
        LR_CUST_BOARD->GET_CLASS_VALUE( changing CT_CLASS_VALUE = LT_CLASS_VALUE ).

        loop at LT_CLASS_VALUE into data(LS_CLASS_VALUE).
          case LS_CLASS_VALUE-ICLAT.
            when 'BCT'.
              move-corresponding LS_CLASS_VALUE to <S_BOARD>-S_BCT.
          endcase.
        endloop.
      catch /VCXI/CX_CKX.
        clear <S_BOARD>-S_BCT.
    endtry.

  endmethod.
