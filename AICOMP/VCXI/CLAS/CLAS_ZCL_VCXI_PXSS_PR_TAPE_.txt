
class ZCL_VCXI_PXSS_PR_TAPE definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_IPRVT_PX_TAPE type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_TAPE' ##NO_TEXT.
  constants C_PARID_TAPOS type /VCXI/VKS_PARID value 'ZVCXI_P0_TAPOS' ##NO_TEXT.
  constants C_PARID_TTAPE type /VCXI/VKS_PARID value 'ZVCXI_P0_TTAPE' ##NO_TEXT.

  methods GET_DIMEN
    returning
      value(RF_DIMEN) type ZVCXI_P0S_DIMEN
    raising
      /VCXI/CX_CKX .
  methods GET_TAPOS
    returning
      value(RS_TAPOS) type ZVCXI_P0SS_S_TAPOS
    raising
      /VCXI/CX_CKX .
  methods SET_TAPOS
    importing
      !IS_TAPOS type ZVCXI_P0SS_S_TAPOS
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_TTAPE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_TTAPE) type ZVCXI_P0S_TTAPE
    raising
      /VCXI/CX_CKX .
  methods SET_TTAPE
    importing
      !IF_TTAPE type ZVCXI_P0S_TTAPE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  constants C_IEVNT_O_TAPOS_CHANGED type /VCXI/VKSC_IEVNT value 'TAPOS_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_TTAPE_CHANGED type /VCXI/VKSC_IEVNT value 'TTAPE_CHANGED' ##NO_TEXT.

  methods CHECK_TTAPE
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_PR_TAPE definition
class ZCL_VCXI_PXSS_PR_TAPE implementation.
  method CHECK_TTAPE.

*** Check Tape Type
    if ME->GET_TTAPE( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Tape Type is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '423' ).
      endif.

    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Tape Type is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '424' ).
      endif.
    endif.

  endmethod.
  method GET_DIMEN.

    RF_DIMEN = ZCL_VCXI_PXSS_BL_SCORE=>C_DIMEN_WIDTH.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Tape Type
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_TTAPE( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Tape Type
    ME->CHECK_TTAPE( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_TAPOS.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPOS ).
    move LS_PARAM-ATFLV to RS_TAPOS-TAPOS.
    move LS_PARAM-UNIT  to RS_TAPOS-TAPOS_UOM.

  endmethod.
  method GET_TTAPE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

***----------------------------------------------------------------------------
*** Get Parameter Value
    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TTAPE ).
    RF_TTAPE = LS_PARAM-ATWRT.
    EF_SETBY = LS_PARAM-SETBY.

***----------------------------------------------------------------------------
    if EF_DESCR is requested.
***   Identify Description
      EF_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_TTAPE_DESCR( IF_TTAPE = RF_TTAPE ).
    endif.

  endmethod.
  method SET_TAPOS.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPOS ).

    move IS_TAPOS-TAPOS     to LS_PARAM-ATFLV.
    move IS_TAPOS-TAPOS_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TAPOS_CHANGED ).
    endif.

  endmethod.
  method SET_TTAPE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TTAPE ).

    move IF_TTAPE to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TTAPE_CHANGED ).
    endif.

  endmethod.
