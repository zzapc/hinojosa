
class ZCL_VCXI_P3SS_CUST_ASPROC definition
  public
  inheriting from ZCL_VCXI_PXSS_CUST_XPROC
  create protected .

public section.

  data S_ADDWT type ZVCXI_PXS_S_ADDWT read-only .
  data S_HNDDIM type ZVCXI_PXS_S_HNDDIM read-only .
  data T_APINFO type ZVCXI_P3SS_TT_APINFO read-only .
  data T_JOITY type ZVCXI_PXS_TT_JOITY read-only .

  class-methods GET_INSTANCE_ASPROC
    importing
      !IF_MATNR type MATNR
      !IF_WERKS type WERKS_D
      !IF_DATE type DATS default SY-DATUM
    returning
      value(RR_INSTANCE) type ref to ZCL_VCXI_P3SS_CUST_ASPROC
    raising
      /VCXI/CX_CKX .
protected section.

  methods LOAD_BY_MM
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P3SS_CUST_ASPROC definition
class ZCL_VCXI_P3SS_CUST_ASPROC implementation.
  method GET_INSTANCE_ASPROC.

    data:  LS_INSTANCE type YS_INSTANCE.


***--------------------------------------------------------------------------------------
*** Check for buffered instance and ensure correct Class Type
    read table ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE into LS_INSTANCE
                                                   with key MATNR = IF_MATNR
                                                            WERKS = IF_WERKS
                                                            DATE  = IF_DATE.
    if SY-SUBRC eq 0.
      try.
          move LS_INSTANCE-R_INSTANCE ?to RR_INSTANCE.
        catch CX_SY_MOVE_CAST_ERROR.
          delete ZCL_VCXI_XCS_CUST_MATNR=>T_INSTANCE where R_INSTANCE eq LS_INSTANCE-R_INSTANCE.
          clear RR_INSTANCE.
      endtry.
    endif.

***--------------------------------------------------------------------------------------
    if RR_INSTANCE is initial.
      try.
ENHANCEMENT-SECTION GET_INSTANCE_ASPROC SPOTS ZVCXI_P3SS_ES_CUST_ASPROC .
         create object RR_INSTANCE
           exporting
             IF_MATNR = IF_MATNR
             IF_WERKS = IF_WERKS
             IF_DATE  = IF_DATE.
END-ENHANCEMENT-SECTION.

          RR_INSTANCE->LOAD_BY_MM( ).
        cleanup.
          clear RR_INSTANCE.
      endtry.
    endif.

  endmethod.
  method LOAD_BY_MM.

    data: LR_MMEXT type ref to ZCL_VCXI_P3E_MM_MMEXT.

*** Load MM Extension
    LR_MMEXT ?= ZCL_VCXI_PXE_MM_MMEXT=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = ZCL_VCXI_PXE_MM_MMEXT=>ENCRYPT_GUID( IF_MATNR = ME->F_MATNR
                                                                                                                        IF_WERKS = ME->F_WRK02
                                                                                                                        IF_CNTXT = ZCL_VCXI_P3E_MM_MMEXT=>C_CNTXT_P3 ) ).
    check LR_MMEXT is bound.

    ME->S_HNDDIM = LR_MMEXT->S_MMEXT-S_HNDDIM.
    ME->S_ADDWT  = LR_MMEXT->S_MMEXT-S_ADDWT.
    ME->T_JOITY  = LR_MMEXT->T_JOITY.
    ME->T_APINFO = LR_MMEXT->T_APINFO.

  endmethod.
