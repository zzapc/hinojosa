
class ZCL_VCXI_PXSS_UI_MS_XPROC definition
  public
  inheriting from ZCL_VCXI_XCS_UI_TAB
  create public .

public section.

  data S_MS_XPROC_VIS type ZVCXI_PXSS_S_MS_XPROC_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0101S_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
  methods GET_REGISTERED_UI_INFO
    redefinition .
  methods ACTIVATE
    redefinition .
protected section.

  data R_PR_MS_XPROC type ref to ZCL_VCXI_PXSS_PR_MS_XPROC .
  data R_GRID_PSCALE type ref to ZCL_VCXI_XCS_GRID_PSCALE .
  data R_TEXTEDIT_LTEXT type ref to ZCL_VCXI_PXSS_TEXTEDIT_LTEXT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_TAB_LIST
    redefinition .
  methods OPEN_SUBSCREEN
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_UI_MS_XPROC definition
class ZCL_VCXI_PXSS_UI_MS_XPROC implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT_LTEXT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MS_XPROC.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Update the Long Text before leaving the screen
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
      ME->R_TEXTEDIT_LTEXT->DO_FREE( ).
      clear ME->R_TEXTEDIT_LTEXT.
    endif.

*** Free Price Scale Grid
    if ME->R_GRID_PSCALE is bound.
      ME->R_GRID_PSCALE->DO_FREE( ).
      clear ME->R_GRID_PSCALE.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED        type /VCXI/CKX_LOCKED,
          LF_INUSE         type /VCXI/VKSR_INUSE,
          LF_DUMMY         type ABAP_BOOL,
          LF_KAUSF_ALLOWED type ABAP_BOOL.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).
        LF_DUMMY  = ME->R_PR_MS_XPROC->IS_DUMMY( ).
        ME->R_PR_MS_XPROC->GET_KAUSF( importing EF_ALLOWED = LF_KAUSF_ALLOWED ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Hide Material Description Override Flag if undefined
          if SCREEN-NAME cp '*-FOVRR_MAKTX' and
             ME->S_MS_XPROC_VIS-FOVRR_MAKTX eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.
***       Disable Material Description if generated
          if SCREEN-NAME cp '*-MAKTX' and
             ME->S_MS_XPROC_VIS-FOVRR_MAKTX eq ABAP_FALSE.
            move 0 to SCREEN-INPUT.
          endif.

***       If No Dummy Material, then set to read only
          if LF_DUMMY eq ABAP_FALSE.
            if SCREEN-GROUP1                eq 'DUM'.
              move 0 to SCREEN-INPUT.
              if SCREEN-GROUP3 eq 'HID'.  "Hide by Screen Group
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              endif.
            endif.
          else.
***         If Dummy Material set the Purchased Flag
            if SCREEN-GROUP1                eq 'PUR'.
              move 0 to SCREEN-INPUT.
            endif.
          endif.

***       Hide Component Scrap
          if SCREEN-GROUP2 eq 'KAF' and
             LF_KAUSF_ALLOWED ne ABAP_TRUE.
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Hide Purchasing Infos (e.g Vendor) if not purchased
          if ME->S_MS_XPROC_VIS-PURCH eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK and
             SCREEN-GROUP2            eq 'APU'.  "Acitve Purchasing
            move 1 to SCREEN-INVISIBLE.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Hide Price Scale Override Flag if undefined
          if SCREEN-NAME cp '*-FPSMO' and
             ME->S_MS_XPROC_VIS-FPSMO eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

*** Call Super
    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize Visualization Structure
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Get TextEdit Additional Description Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_LTEXT->F_REFRESH_REQ.
      ME->R_TEXTEDIT_LTEXT->REFRESH_TEXTEDIT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Refresh Price Scale Grid
    if ME->S_MS_XPROC_VIS-PURCH eq ABAP_TRUE.
***   Create Grid for Price Scale
      if ME->R_GRID_PSCALE is not bound.
        create object ME->R_GRID_PSCALE
          exporting
            IR_GATE           = ME->R_GATE
            IR_UIGATE         = ME->R_UIGATE
            IF_CONTAINER_NAME = '0110CC_PSCALE'.
      endif.
***   Refresh Grid
      ME->R_GRID_PSCALE->F_REFRESH_REQ = ABAP_TRUE.
      ME->R_GRID_PSCALE->REFRESH_GRID( ).
    else.
      if ME->R_GRID_PSCALE is bound.
        ME->R_GRID_PSCALE->DO_FREE( ).
        clear ME->R_GRID_PSCALE.
      endif.
    endif.

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_MS_XPROC_VIS type ZVCXI_PXSS_S_MS_XPROC_VIS.


    check ME->R_PR_MS_XPROC is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_MS_XPROC_VIS.

***--------------------------------------------------------------------------------------
*** Set Material Number
    if ME->S_MS_XPROC_VIS-MATNR ne LS_MS_XPROC_VIS-MATNR.
      ME->R_PR_MS_XPROC->SET_MATNR( IF_MATNR = LS_MS_XPROC_VIS-MATNR
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Description
    if ME->S_MS_XPROC_VIS-MAKTX        ne LS_MS_XPROC_VIS-MAKTX or
       ME->S_MS_XPROC_VIS-FOVRR_MAKTX  ne LS_MS_XPROC_VIS-FOVRR_MAKTX.
      if LS_MS_XPROC_VIS-FOVRR_MAKTX ne ABAP_FALSE.
        ME->R_PR_MS_XPROC->SET_MAKTX( IF_MAKTX = LS_MS_XPROC_VIS-MAKTX
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      else.
        ME->R_PR_MS_XPROC->SET_MAKTX( IF_MAKTX = LS_MS_XPROC_VIS-MAKTX
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ).
      endif.
    endif.

*** Set Product Hierarchy
    if ME->S_MS_XPROC_VIS-PRODH ne LS_MS_XPROC_VIS-PRODH.
      ME->R_PR_MS_XPROC->SET_PRODH( IF_PRODH = LS_MS_XPROC_VIS-PRODH
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Component Scrap
    if ME->S_MS_XPROC_VIS-S_KAUSF ne LS_MS_XPROC_VIS-S_KAUSF.
      ME->R_PR_MS_XPROC->SET_KAUSF( IS_KAUSF = LS_MS_XPROC_VIS-S_KAUSF
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Procurement Option
    if ME->S_MS_XPROC_VIS-PURCH ne LS_MS_XPROC_VIS-PURCH.
      ME->R_PR_MS_XPROC->SET_PURCH( IF_PURCH = LS_MS_XPROC_VIS-PURCH
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
    if ME->S_MS_XPROC_VIS-FPTOS ne LS_MS_XPROC_VIS-FPTOS.
      ME->R_PR_MS_XPROC->SET_FPTOS( IF_FPTOS = LS_MS_XPROC_VIS-FPTOS
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Vendor Number
    if ME->S_MS_XPROC_VIS-LIFNR ne LS_MS_XPROC_VIS-LIFNR.
      ME->R_PR_MS_XPROC->SET_LIFNR( IF_LIFNR = LS_MS_XPROC_VIS-LIFNR
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price Scale Modified Flag
    if ME->S_MS_XPROC_VIS-FPSMO ne LS_MS_XPROC_VIS-FPSMO.
      ME->R_PR_MS_XPROC->SET_FPSMO( IF_FPSMO = LS_MS_XPROC_VIS-FPSMO
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_PSCALE is bound.
      ME->R_GRID_PSCALE->CHECK_CHANGED_DATA( ).
    endif.

  endmethod.
  method GET_REGISTERED_UI_INFO.

    if ME->R_OLD_GATE eq ME->R_GATE.
***   Show Price Scale Manager
      RS_DYNP = value #( REPID = ME->S_DYNP-REPID
                         DYNNR = '0110' ).
    else.
      RS_DYNP = SUPER->GET_REGISTERED_UI_INFO( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MS_XPROC.

  endmethod.
  method INIT_TAB_LIST.

    data: LF_TAB   type NUMC3,
          LF_FNAME type STRING.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to  /VCXI/CL_VKSR_GATE.
    field-symbols: <S_TAB_LIST> type ZVCXI_XCS_S_TAB_LIST,
                   <F_DESCR>    type /VCXI/CKX_DESCR.

    free: ME->T_TAB_LIST,
          ME->S_TAB_DESCR,
          LF_TAB.

***----------------------------------------------------------------------------
*** Get Provider displayed as TabStrip
    move ME->GET_PRVDR_TAB( ) to LT_GATE.

*** Sort Provider
    ME->R_GATE->SORT_GATE( changing CT_GATE = LT_GATE ).

***----------------------------------------------------------------------------
    if ME->R_PR_MS_XPROC->GET_PURCH( ) eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***   Add Price List as first Tab
      insert ME->R_GATE into LT_GATE index 1.
    endif.

***----------------------------------------------------------------------------
*** Process Provider
    loop at LT_GATE into LR_GATE.

      check LR_GATE->GET_CLSUI( ) is not initial.

      append initial line to ME->T_TAB_LIST assigning <S_TAB_LIST>.
      add 1 to LF_TAB.
      concatenate ME->F_TABPT LF_TAB into <S_TAB_LIST>-TABNAME.
      move LR_GATE                     to <S_TAB_LIST>-R_GATE.

***   No active Tab is defined, use first Tab as active
      if ME->F_ACTIVE_TAB is initial.
        move <S_TAB_LIST>-TABNAME to ME->F_ACTIVE_TAB.
        move <S_TAB_LIST>-TABNAME to ME->F_ACTIVE_TAB_OLD.
        if LR_GATE ne ME->R_OLD_GATE.
          move ABAP_FALSE to ME->F_ALREADY_OPEN.
        endif.
      endif.

***   Set Activ Tab if it was set by default Gate
      if ME->R_DEFAULT_GATE is bound.
        if LR_GATE eq ME->R_DEFAULT_GATE or
           ME->R_DEFAULT_GATE->IS_IN_LINE( IR_GATE = LR_GATE ) eq ABAP_TRUE.
          move <S_TAB_LIST>-TABNAME to ME->F_ACTIVE_TAB.
          move <S_TAB_LIST>-TABNAME to ME->F_ACTIVE_TAB_OLD.
          if LR_GATE ne ME->R_OLD_GATE.
            move ABAP_FALSE to ME->F_ALREADY_OPEN.
          endif.
        endif.

      else.
***     Default Gate is not bound but Gate of Activ Tab do not match
        if ME->F_ACTIVE_TAB eq <S_TAB_LIST>-TABNAME and
           ME->R_OLD_GATE   ne LR_GATE.
          move ABAP_FALSE to ME->F_ALREADY_OPEN.
        endif.
      endif.

      concatenate C_TAB LF_TAB into LF_FNAME.
      assign component LF_FNAME of structure ME->S_TAB_DESCR to <F_DESCR>.
      if SY-SUBRC eq 0.
***     Price List Tab
        if <S_TAB_LIST>-R_GATE eq ME->R_GATE.
          <F_DESCR> = 'Price List'(D01).
***     Description by PR Class
        elseif <S_TAB_LIST>-R_GATE->R_CLSPR is bound.
          <F_DESCR> = <S_TAB_LIST>-R_GATE->R_CLSPR->GET_DESCR( ).
***     Description by Customizing
        else.
          <F_DESCR> = <S_TAB_LIST>-R_GATE->GET_DESCR( ).
        endif.
      endif.
    endloop.

*** Clear Default Gate
    clear: ME->R_DEFAULT_GATE.

***----------------------------------------------------------------------------
*** Check Active Tab exists
    if ME->F_ACTIVE_TAB cs ME->F_TABPT.
      read table ME->T_TAB_LIST with key TABNAME = ME->F_ACTIVE_TAB
                                transporting no fields.
      if SY-SUBRC ne 0.
        read table ME->T_TAB_LIST assigning <S_TAB_LIST> index 1.
        if SY-SUBRC eq 0.
          move <S_TAB_LIST>-TABNAME to ME->F_ACTIVE_TAB.
        else.
          clear ME->F_ACTIVE_TAB.
        endif.
      endif.
    endif.

  endmethod.
  method INIT_VIS.

    free: ME->S_MS_XPROC_VIS.
    check ME->R_PR_MS_XPROC is bound.

***--------------------------------------------------------------------------------------
*** Plant
    ME->S_MS_XPROC_VIS-WERKS = ME->R_PR_MS_XPROC->GET_WERKS( ).

*** Material
    ME->S_MS_XPROC_VIS-MATNR = ME->R_PR_MS_XPROC->GET_MATNR( ).

*** Material Description
    ME->S_MS_XPROC_VIS-MAKTX = ME->R_PR_MS_XPROC->GET_MAKTX( importing EF_FOVRR = ME->S_MS_XPROC_VIS-FOVRR_MAKTX ).

*** Product Hieararchy
    ME->S_MS_XPROC_VIS-PRODH = ME->R_PR_MS_XPROC->GET_PRODH( importing EF_DESCR = ME->S_MS_XPROC_VIS-PRODH_DESCR ).

*** Component Scrap
    ME->S_MS_XPROC_VIS-S_KAUSF = ME->R_PR_MS_XPROC->GET_KAUSF( ).

***--------------------------------------------------------------------------------------
*** Procurement Option
    ME->S_MS_XPROC_VIS-PURCH = ME->R_PR_MS_XPROC->GET_PURCH( ).
    ME->S_MS_XPROC_VIS-FPTOS = ME->R_PR_MS_XPROC->GET_FPTOS( ).

*** Vendor
    ME->S_MS_XPROC_VIS-LIFNR       = ME->R_PR_MS_XPROC->GET_LIFNR( ).
    ME->S_MS_XPROC_VIS-LIFNR_DESCR = ME->R_PR_MS_XPROC->GET_LIFNR_DESCR( ).

*** Price and Price Unit
    ME->S_MS_XPROC_VIS-S_PRICE = ME->R_PR_MS_XPROC->GET_PRICE( ).
    ME->S_MS_XPROC_VIS-S_PRICP = ME->R_PR_MS_XPROC->GET_PRICP( ).

*** Price Scale Modified Flag
    ME->S_MS_XPROC_VIS-FPSMO = ME->R_PR_MS_XPROC->GET_FPSMO( ).

  endmethod.
  method OPEN_SUBSCREEN.

    if IR_GATE eq ME->R_GATE.
***   Handling of Price Scale in GET_REGISTERED_UI_INFO
    else.
      RR_CLSUI = SUPER->OPEN_SUBSCREEN( IR_GATE  = IR_GATE ).
    endif.

  endmethod.
