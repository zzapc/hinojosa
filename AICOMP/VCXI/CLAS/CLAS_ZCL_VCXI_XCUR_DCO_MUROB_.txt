
class ZCL_VCXI_XCUR_DCO_MUROB definition
  public
  inheriting from /VCXI/CL_CKMR_CLDCO
  create public .

public section.

  data F_SYSOM type /VCXI/VKS_SYSOM read-only .
  data R_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC read-only .
  data R_SMDCNTRL type ref to ZCL_VCXI_XCUR_SMDCNTRL read-only .
  data S_MUROB type ZVCXI_XCUR_S_MUROB read-only .

  methods GET_SVC
    returning
      value(RR_SVC) type ref to /VCXI/CL_VKSRA_SVC
    raising
      /VCXI/CX_CKX .
  methods SET_IDAT_SVC
    importing
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    raising
      /VCXI/CX_CKX .
  methods SET_MUREL
    importing
      !IT_MUREL type ZVCXI_XCUR_TT_MUREL
    raising
      /VCXI/CX_CKX .
  methods SET_MUROB
    importing
      !IS_MUROB type ZVCXI_XCUR_S_MUROB
    raising
      /VCXI/CX_CKX .
  methods SET_SMDCNTRL
    importing
      !IR_SMDCNTRL type ref to ZCL_VCXI_XCUR_SMDCNTRL
    raising
      /VCXI/CX_CKX .
  methods GET_MUREL
    exporting
      !ET_MUREL_XML type ZVCXI_XCUR_TT_MUREL_XML
    returning
      value(RT_MUREL) type ZVCXI_XCUR_TT_MUREL
    raising
      /VCXI/CX_CKX .
  methods SET_SYSOM
    importing
      !IF_SYSOM type /VCXI/VKS_SYSOM
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_IDAT_SVC_CHANGED
    for event /VCXI/IF_CKX_OBJECT~CHANGED of ZCL_VCXI_XCI_IDAT_SVC .
  methods HANDLE_SMDCNTRL_CHANGED
    for event CHANGED of ZCL_VCXI_XCUR_SMDCNTRL .

  methods DESERIALIZE_INFO
    redefinition .
  methods SERIALIZE_INFO
    redefinition .
private section.

  data T_MUREL type ZVCXI_XCUR_TT_MUREL .
  data T_MUREL_XML type ZVCXI_XCUR_TT_MUREL_XML .
endclass. "ZCL_VCXI_XCUR_DCO_MUROB definition
class ZCL_VCXI_XCUR_DCO_MUROB implementation.
  method DESERIALIZE_INFO.

    data: LF_XML_SMDCNTRL type STRING.


    check IF_XMLDC is not initial.

***--------------------------------------------------------------------------------------
*** Open XML
    call transformation ID
         source xml IF_XMLDC
         result F_SYSOM        = ME->F_SYSOM
                S_MUROB        = ME->S_MUROB
                T_MUREL_XML    = ME->T_MUREL_XML
                F_XML_SMDCNTRL = LF_XML_SMDCNTRL.

***--------------------------------------------------------------------------------------
*** Deserialize Integration Data
    ME->R_IDAT_SVC = ZCL_VCXI_XCI_IDAT_SVC=>DESERIALIZE( IF_XML = IF_XMLDC ).
    if ME->R_IDAT_SVC is bound.
      set handler ME->HANDLE_IDAT_SVC_CHANGED for ME->R_IDAT_SVC.
    endif.

*** Deserialize SmartMD Control Settings
    ME->R_SMDCNTRL = ZCL_VCXI_XCUR_SMDCNTRL=>DESERIALIZE( IF_XML = LF_XML_SMDCNTRL ).
    if ME->R_SMDCNTRL is bound.
      set handler ME->HANDLE_SMDCNTRL_CHANGED for ME->R_SMDCNTRL.
    endif.

  endmethod.
  method GET_MUREL.

*** Direct return of XML if only XML is requested
    if ET_MUREL_XML is     requested and
       RT_MUREL     is not requested and
       ME->T_MUREL_XML is not initial.
      ET_MUREL_XML = ME->T_MUREL_XML.
      exit.
    endif.


*** Delayed convertion of XML to Update Element
    if ME->T_MUREL_XML is not initial.
      ME->T_MUREL = ZCL_VCXI_XCUR_MURDE=>CONV_XML_TO_MUREL( IT_MUREL_XML = ME->T_MUREL_XML ).
      clear ME->T_MUREL_XML.
    endif.

*** Return Update Elements
    RT_MUREL = ME->T_MUREL.

    if ET_MUREL_XML is requested.
      ET_MUREL_XML = ZCL_VCXI_XCUR_MURDE=>CONV_MUREL_TO_XML( IT_MUREL = RT_MUREL ).
    endif.

  endmethod.
  method GET_SVC.

    data: LF_CUOBJ type CUOBJ.
    data: LS_MARC type MARC.


***--------------------------------------------------------------------------------------
*** Get Configuration by Material
    if ME->S_MUROB-MATNR is not initial and
       ME->S_MUROB-WERKS is not initial.
***   Get MARC
      call function 'MARC_SINGLE_READ'
        exporting
          MATNR  = ME->S_MUROB-MATNR
          WERKS  = ME->S_MUROB-WERKS
        importing
          WMARC  = LS_MARC
        exceptions
          others = 0.
      LF_CUOBJ = LS_MARC-CUOBJ.
    endif.

***--------------------------------------------------------------------------------------
*** Get Configuration of Sales Document
    if ME->S_MUROB-VBELN is not initial and
       ME->S_MUROB-POSNR is not initial.
      select single CUOBJ
             into LF_CUOBJ
             from VBAP
            where VBELN eq ME->S_MUROB-VBELN
             and  POSNR eq ME->S_MUROB-POSNR.
    endif.

***--------------------------------------------------------------------------------------
    if LF_CUOBJ is initial.
***   Object has no configuration defined.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCUR'
                                            IF_MSGNO = '411' ).
    endif.

*** Get SmartVC Instance
    RR_SVC = /VCXI/CL_VKSRA_SVC=>GET_INSTANCE( IF_GVCIN = /VCXI/CL_VKCR_GATEWAY=>GET_GVCIN_BY_CUOBJ( IF_CUOBJ = LF_CUOBJ ) ).

  endmethod.
  method HANDLE_IDAT_SVC_CHANGED.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method HANDLE_SMDCNTRL_CHANGED.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SERIALIZE_INFO.

    data: LF_XML_SMDCNTRL type STRING.
    data: LT_DATA      type ABAP_TRANS_SRCBIND_TAB.


***--------------------------------------------------------------------------------------
*** Serialize Integration Data
    if ME->R_IDAT_SVC is bound.
      ME->R_IDAT_SVC->SERIALIZE( importing ET_DATA = LT_DATA ).
    endif.

*** Compress Update Elements as XML (and release memory)
    ME->GET_MUREL( importing ET_MUREL_XML = ME->T_MUREL_XML ).
    clear ME->T_MUREL.

*** Serialize SmartMD Control Settings
    if ME->R_SMDCNTRL is bound.
      LF_XML_SMDCNTRL = ME->R_SMDCNTRL->SERIALIZE( ).
    endif.

*** Add other Data References
    append value #( NAME = 'F_SYSOM'         VALUE = ref #( ME->F_SYSOM     ) ) to LT_DATA.
    append value #( NAME = 'S_MUROB'         VALUE = ref #( ME->S_MUROB     ) ) to LT_DATA.
    append value #( NAME = 'T_MUREL_XML'     VALUE = ref #( ME->T_MUREL_XML ) ) to LT_DATA.
    append value #( NAME = 'F_XML_SMDCNTRL'  VALUE = ref #( LF_XML_SMDCNTRL ) ) to LT_DATA.

***--------------------------------------------------------------------------------------
*** Create XML
    call transformation ID
         source (LT_DATA)
         result xml RF_XMLDC.

  endmethod.
  method SET_IDAT_SVC.

    check ME->R_IDAT_SVC ne IR_IDAT_SVC.
    ME->R_IDAT_SVC = IR_IDAT_SVC.

*** Set Change Handler
    set handler ME->HANDLE_IDAT_SVC_CHANGED for ME->R_IDAT_SVC.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SET_MUREL.

    check ME->GET_MUREL( ) ne IT_MUREL.
    ME->T_MUREL = IT_MUREL.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SET_MUROB.

    check ME->S_MUROB ne IS_MUROB.
    ME->S_MUROB = IS_MUROB.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SET_SMDCNTRL.

    free ME->R_SMDCNTRL.
    check IR_SMDCNTRL is bound.

*** Fill new Instance based on provided Instance
    ME->R_SMDCNTRL = ZCL_VCXI_XCUR_SMDCNTRL=>DESERIALIZE( IF_XML = IR_SMDCNTRL->SERIALIZE( ) ).

*** Register Change Event Handler
    set handler HANDLE_SMDCNTRL_CHANGED for ME->R_SMDCNTRL.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
  method SET_SYSOM.

    check ME->F_SYSOM ne IF_SYSOM.
    ME->F_SYSOM = IF_SYSOM.

*** Raise Change Event
    raise event CHANGED.

  endmethod.
