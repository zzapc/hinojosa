
class ZCL_VCXI_P0SP_PR_JOINT definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  constants C_PARID_JOILE type /VCXI/VKS_PARID value 'ZVCXI_P0_JOILE'. "#EC NOTEXT
  constants C_PARID_JOIWI type /VCXI/VKS_PARID value 'ZVCXI_P0_JOIWI'. "#EC NOTEXT
  constants C_IPRVT_P0_JOINT type /VCXI/VKSC_IPRVT value 'ZVCXI_P0SP_JOINT'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_JOILE
    returning
      value(RS_JOILE) type ZVCXI_P0S_S_JOILE
    raising
      /VCXI/CX_CKX .
  methods GET_JOIWI
    returning
      value(RS_JOIWI) type ZVCXI_P0S_S_JOIWI
    raising
      /VCXI/CX_CKX .
  methods GET_JOITY
    returning
      value(RF_JOITY) type ZVCXI_P0S_JOITY
    raising
      /VCXI/CX_CKX .
  methods SET_JOILE
    importing
      !IS_JOILE type ZVCXI_P0S_S_JOILE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_JOIWI
    importing
      !IS_JOIWI type ZVCXI_P0S_S_JOIWI
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_JOITY_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods SET_JOITY
    importing
      !IF_JOITY type ZVCXI_P0S_JOITY
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_P0SP_PR_JOINT definition
class ZCL_VCXI_P0SP_PR_JOINT implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).


endmethod.
method GET_JOILE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_JOILE ).
  move LS_PARAM-ATFLV to RS_JOILE-JOILE.
  move LS_PARAM-UNIT  to RS_JOILE-JOILE_UOM.

endmethod.
method GET_JOITY.

  data:  LS_LEOKY  type  /VCXI/VKSR_S_LEOKY.

  LS_LEOKY = ME->R_GATE->GET_LEOKY( ).

  move LS_LEOKY-LEOKY to  RF_JOITY.

endmethod.
method GET_JOITY_DESCR.

  data:  LF_JOITY type ZVCXI_P0S_JOITY.

  LF_JOITY = ME->GET_JOITY( ).
  RF_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_JOITY_DESCR( IF_JOITY = LF_JOITY ).

endmethod.
method GET_JOIWI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_JOIWI ).
  move LS_PARAM-ATFLV to RS_JOIWI-JOIWI.
  move LS_PARAM-UNIT  to RS_JOIWI-JOIWI_UOM.

endmethod.
method GET_STATUS.

  data: LS_JOILE type ZVCXI_P0S_S_JOILE,
        LS_JOIWI type ZVCXI_P0S_S_JOIWI.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check Joint Details
  LS_JOILE = ME->GET_JOILE( ).
  LS_JOIWI = ME->GET_JOIWI( ).

*** Check Joint Length
  if LS_JOILE-JOILE is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check Joint Width
  if LS_JOIWI-JOIWI is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

*** Check Joint Type
  if ME->GET_JOITY( ) is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_JOILE type ZVCXI_P0S_S_JOILE,
        LS_JOIWI type ZVCXI_P0S_S_JOIWI.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check Joint Details
  LS_JOILE = ME->GET_JOILE( ).
  LS_JOIWI = ME->GET_JOIWI( ).

*** Check Joint Length
  if LS_JOILE-JOILE is not initial.
*** Joint Length is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '171' ).
  else.
*** Joint Length is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '172' ).
  endif.

*** Check Joint Width
  if LS_JOIWI-JOIWI is not initial.
*** Joint Width is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '173' ).
  else.
*** Joint Width is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '174' ).
  endif.

*** Check Joint Type
  if ME->GET_JOITY( ) is not initial.
*** Joint Type is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '175' ).
  else.
*** Joint Type is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '176' ).
  endif.

endmethod.
method SET_JOILE.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_JOILE ).

  move IS_JOILE-JOILE     to LS_PARAM-ATFLV.
  move IS_JOILE-JOILE_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
method SET_JOITY.

  data:  LS_LEOKY    type /VCXI/VKSR_S_LEOKY.

  move IF_JOITY to LS_LEOKY-LEOKY.
  move IF_SETBY to LS_LEOKY-SETBY.

  ME->R_GATE->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

endmethod.
method SET_JOIWI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_JOIWI ).

  move IS_JOIWI-JOIWI     to LS_PARAM-ATFLV.
  move IS_JOIWI-JOIWI_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

endmethod.
