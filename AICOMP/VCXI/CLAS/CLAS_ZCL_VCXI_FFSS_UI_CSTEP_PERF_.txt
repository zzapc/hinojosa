
class ZCL_VCXI_FFSS_UI_CSTEP_PERF definition
  public
  inheriting from ZCL_VCXI_FFSS_UI_CSTEP
  create public .

public section.

  data S_CSTEP_PERF_VIS type ZVCXI_FFSS_S_CSTEP_PERF_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_CSTEP_PERF_VIS
    importing
      !IS_CSTEP_PERF_VIS type ZVCXI_FFSS_S_CSTEP_PERF_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_CSTEP_PERF type ref to ZCL_VCXI_FFSS_PR_CSTEP_PERF .

  methods HANDLE_GATE_FREED
    redefinition .
  methods INIT_VIS
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSS_UI_CSTEP_PERF definition
class ZCL_VCXI_FFSS_UI_CSTEP_PERF implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSS_UI_CSTEP_PERF_BIND'
      exporting
        IR_UI_CSTEP_PERF = ME
      importing
        ES_DYNP          = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CSTEP_PERF.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_FLASR    type        ZVCXI_F0S_FLASR.
    data: LR_CX_CKX   type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

***     Get Perforation Type Flag - Laser
        LF_FLASR = ZCL_VCXI_F0S_CUST_PERF=>GET_FLASR( IF_TPERF = ME->S_CSTEP_PERF_VIS-TPERF ).

        loop at screen.
          case SCREEN-GROUP1.

***         Check Number of Laser Lines
            when 'NLA'.
              if ME->S_CSTEP_PERF_VIS-TPERF is initial .
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              else.
                if LF_FLASR eq ABAP_TRUE.
                  move 2 to SCREEN-REQUIRED.
                else.
                  move 1 to SCREEN-INVISIBLE.
                  move 0 to SCREEN-ACTIVE.
                endif.
              endif.

***         Check Die Cut Tool Number
            when 'DCU'.
              if ME->S_CSTEP_PERF_VIS-TPERF is initial.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
              else.
                if LF_FLASR ne ABAP_FALSE.
                  move 1 to SCREEN-INVISIBLE.
                  move 0 to SCREEN-ACTIVE.
                endif.
              endif.
          endcase.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_CSTEP->F_REFRESH_REQ.
      ME->R_TEXTEDIT_CSTEP->REFRESH_TEXTEDIT( ).
    endif.

  endmethod.
  method DO_UPDATE_CSTEP_PERF_VIS.

    check ME->R_PR_CSTEP_PERF is bound.

*** Perforation Type
    if ME->S_CSTEP_PERF_VIS-TPERF ne IS_CSTEP_PERF_VIS-TPERF.
      ME->R_PR_CSTEP_PERF->SET_TPERF( exporting IF_TPERF = IS_CSTEP_PERF_VIS-TPERF
                                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set values based on the Laser Flag
    case ME->R_PR_CSTEP_PERF->GET_TPERF_FLASR( ).
      when ABAP_TRUE.
***     Number of Laser Lines
        if ME->S_CSTEP_PERF_VIS-NOLAS ne IS_CSTEP_PERF_VIS-NOLAS.
          ME->R_PR_CSTEP_PERF->SET_NOLAS( exporting IF_NOLAS = IS_CSTEP_PERF_VIS-NOLAS
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.

      when ABAP_FALSE.
***     Die Cut Tool Number
        if ME->S_CSTEP_PERF_VIS-DCUTT ne IS_CSTEP_PERF_VIS-DCUTT.
          ME->R_PR_CSTEP_PERF->SET_DCUTT( exporting IF_DCUTT = IS_CSTEP_PERF_VIS-DCUTT
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endif.
    endcase.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_CSTEP is bound.
      ME->R_TEXTEDIT_CSTEP->UPDATE_TEXT( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CSTEP_PERF.

  endmethod.
  method INIT_VIS.

    clear ME->S_CSTEP_PERF_VIS.

    SUPER->INIT_VIS( ).
    move ME->S_CSTEP_VIS to ME->S_CSTEP_PERF_VIS-S_CSTEP_VIS.

    check ME->R_PR_CSTEP_PERF is bound.

*** Perforation Type
    ME->R_PR_CSTEP_PERF->GET_TPERF( importing EF_TPERF = ME->S_CSTEP_PERF_VIS-TPERF ).

*** Number of Laser Lines
    ME->R_PR_CSTEP_PERF->GET_NOLAS( importing EF_NOLAS = ME->S_CSTEP_PERF_VIS-NOLAS ).

*** Die Cut Tool Number
    ME->R_PR_CSTEP_PERF->GET_DCUTT( importing EF_DCUTT = ME->S_CSTEP_PERF_VIS-DCUTT
                                              EF_DESCR = ME->S_CSTEP_PERF_VIS-DCUTT_DESCR ).

  endmethod.
