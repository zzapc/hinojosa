
class ZCL_VCXI_P1SS_UI_CORR definition
  public
  inheriting from ZCL_VCXI_XCS_UI_TAB
  create public .

public section.

  data S_CORR_VIS type ZVCXI_P1SS_S_CORR_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_CRR_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_UC_CPROP type SYUCOMM value 'CORR_CPROP' ##NO_TEXT.
  data R_GRID_SCORE_AP type ref to ZCL_VCXI_PXSS_GRID_SCORE_AP .
  data R_PR_CORR type ref to ZCL_VCXI_P1SS_PR_CORR .
  constants C_UC_CPROP_OUT type SYUCOMM value 'CPROP_OUT' ##NO_TEXT.
  constants C_UC_SCSTR_OUT type SYUCOMM value 'SCSTR_OUT' ##NO_TEXT.
  data R_TEXTEDIT_LTEXT type ref to ZCL_VCXI_PXSS_TEXTEDIT_LTEXT .

  methods HANDLE_UC_CPROP
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_SCSTR
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_CORR definition
class ZCL_VCXI_P1SS_UI_CORR implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_CORR_BIND'
      exporting
        IR_UI_CORR    = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

*** Create Grid for GRID_SCORE
    create object ME->R_GRID_SCORE_AP
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_SCORE_AP'.

*** Create Text Editor for Long Text
    create object ME->R_TEXTEDIT_LTEXT
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_TEXTEDIT_LTEXT'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_CORR.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Free Score Grid
    if ME->R_GRID_SCORE_AP is bound.
      ME->R_GRID_SCORE_AP->DO_FREE( ).
      clear ME->R_GRID_SCORE_AP.
    endif.

***--------------------------------------------------------------------------------------
*** Update the Long Text before leaving the screen
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
      ME->R_TEXTEDIT_LTEXT->DO_FREE( ).
      clear ME->R_TEXTEDIT_LTEXT.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,           "#EC NEEDED
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_PR_LAMI type ref to ZCL_VCXI_P1SS_PR_LAMI.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

        LR_PR_LAMI = ME->R_PR_CORR->GET_PRVDR_LAMI( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Self Deckling Flag is not editable if we have it mandatory for the Board IDs
          if SCREEN-GROUP1 eq 'FSD' and
             ME->R_PR_CORR->IS_SELFD_REQUIRED( ).
            SCREEN-INPUT = 0.
          endif.

***       Reduction only available in case of Lamination
          if SCREEN-GROUP1 eq 'RED' and
             LR_PR_LAMI is not bound.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Preprint supported?
          if SCREEN-GROUP1 eq 'FPP' and
             ME->S_CORR_VIS-FPRPR eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Inline Printing supported?
          if SCREEN-GROUP1 eq 'FIP' and
             ME->S_CORR_VIS-FINPR eq ABAP_UNDEFINED.
            move 0 to SCREEN-ACTIVE.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Initialize GRID
    if ME->R_GRID_SCORE_AP is bound.
      if ME->R_GRID_SCORE_AP->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_SCORE_AP->F_REFRESH_REQ.
      endif.
      ME->R_GRID_SCORE_AP->REFRESH_GRID( ).
    endif.

***--------------------------------------------------------------------------------------
*** Get TextEdit Conversion Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      move ABAP_TRUE to ME->R_TEXTEDIT_LTEXT->F_REFRESH_REQ.
      ME->R_TEXTEDIT_LTEXT->REFRESH_TEXTEDIT( ).
    endif.

  endmethod.
  method DO_UPDATE_VIS.


    data: LS_CORR_VIS  type ZVCXI_P1SS_S_CORR_VIS.


    check ME->R_PR_CORR is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_CORR_VIS.

***--------------------------------------------------------------------------------------
*** Set Work Center
    if ME->S_CORR_VIS-ARBPL ne LS_CORR_VIS-ARBPL.
      ME->R_PR_CORR->SET_ARBPL( IF_ARBPL = LS_CORR_VIS-ARBPL
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Self Deckling
    if ME->S_CORR_VIS-SELFD ne LS_CORR_VIS-SELFD.
      ME->R_PR_CORR->SET_SELFD( IF_SELFD = LS_CORR_VIS-SELFD
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Board Restricted
    if ME->S_CORR_VIS-BOARS ne LS_CORR_VIS-BOARS.
      ME->R_PR_CORR->SET_BOARS( IF_BOARS = LS_CORR_VIS-BOARS
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Preprint Flag
    if ME->S_CORR_VIS-FPRPR ne LS_CORR_VIS-FPRPR.
      ME->R_PR_CORR->SET_FPRPR( IF_FPRPR = LS_CORR_VIS-FPRPR ).
    endif.

*** Set Inline Printing Flag
    if ME->S_CORR_VIS-FINPR ne LS_CORR_VIS-FINPR.
      ME->R_PR_CORR->SET_FINPR( IF_FINPR = LS_CORR_VIS-FINPR ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Reduction on Width (Total)
    if ME->S_CORR_VIS-S_RDWIT ne LS_CORR_VIS-S_RDWIT.
      ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~SET_RDWIT( IS_RDWIT = LS_CORR_VIS-S_RDWIT
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Reduction on Length (Total)
    if ME->S_CORR_VIS-S_RDLET ne LS_CORR_VIS-S_RDLET.
      ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~SET_RDLET( IS_RDLET = LS_CORR_VIS-S_RDLET
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.


*** Set Reduction Left
    if ME->S_CORR_VIS-S_RDLEF ne LS_CORR_VIS-S_RDLEF.
      ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~SET_RDLEF( IS_RDLEF = LS_CORR_VIS-S_RDLEF
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Reduction Right
    if ME->S_CORR_VIS-S_RDRIG ne LS_CORR_VIS-S_RDRIG.
      ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~SET_RDRIG( IS_RDRIG = LS_CORR_VIS-S_RDRIG
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Reduction Top
    if ME->S_CORR_VIS-S_RDTOP ne LS_CORR_VIS-S_RDTOP.
      ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~SET_RDTOP( IS_RDTOP = LS_CORR_VIS-S_RDTOP
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Reduction Bottom
    if ME->S_CORR_VIS-S_RDBOT ne LS_CORR_VIS-S_RDBOT.
      ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~SET_RDBOT( IS_RDBOT = LS_CORR_VIS-S_RDBOT
                                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

***--------------------------------------------------------------------------------------
*** Update TextEdit Long Text
    if ME->R_TEXTEDIT_LTEXT is bound.
      ME->R_TEXTEDIT_LTEXT->UPDATE_TEXT( ).
    endif.

***--------------------------------------------------------------------------------------
*** Call Super
    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_SCORE_AP is bound.
      ME->R_GRID_SCORE_AP->CHECK_CHANGED_DATA( ).
    endif.

    case IF_UCOMM.
***   Corrugation Property Pop Up
      when C_UC_CPROP_OUT.
        ME->HANDLE_UC_CPROP( exporting IF_UCOMM = IF_UCOMM  ).

***   Scores String Pop Up
      when C_UC_SCSTR_OUT.
        ME->HANDLE_UC_SCSTR( exporting IF_UCOMM = IF_UCOMM ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_CORR.

  endmethod.
  method HANDLE_UC_CPROP.

    data: LS_SURWT type ZVCXI_PXS_S_SURWT.
    data: LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP,
          LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.

*** Get Corrugator Property (Outbound)
    LR_BL_CRBPROP = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( ).
    LR_BL_CRFPROP = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( ).
    LS_SURWT = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT( ).

*** Start Popup
    ZCL_VCXI_P1SS_POPUP_CRPROP=>START( IR_BL_CRBPROP = LR_BL_CRBPROP
                                       IR_BL_CRFPROP = LR_BL_CRFPROP
                                       IF_WERKS      = ME->R_PR_CORR->GET_WERKS( )
                                       IS_SURWT      = LS_SURWT ).

  endmethod.
  method HANDLE_UC_SCSTR.

    data: LR_BL_CRBPROP type ref to ZCL_VCXI_P1SS_BL_CRBPROP.


*** Get Score String (Outbound)
    LR_BL_CRBPROP = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRBPX( ).
    check LR_BL_CRBPROP is bound.

*** Start Popup
    ZCL_VCXI_PXSS_POPUP_SCSTR=>START( IT_SCORE_COM = LR_BL_CRBPROP->T_SCORE
                                      IT_TAPE_COM  = LR_BL_CRBPROP->T_TAPE_COM ).

  endmethod.
  method INIT_VIS.

    data: LR_BL_CRFPROP type ref to ZCL_VCXI_P1SS_BL_CRFPROP.


    free: ME->S_CORR_VIS.
    check ME->R_PR_CORR is bound.

***--------------------------------------------------------------------------------------
*** Get Work Center
    ME->S_CORR_VIS-ARBPL = ME->R_PR_CORR->GET_ARBPL( importing EF_DESCR = ME->S_CORR_VIS-ARBPL_DESCR ).

*** Get Self Deckling
    ME->S_CORR_VIS-SELFD = ME->R_PR_CORR->GET_SELFD( ).

*** Board Restricted
    ME->S_CORR_VIS-BOARS = ME->R_PR_CORR->GET_BOARS( ).

*** Get Preprint and Inline Printing Flag
    ME->S_CORR_VIS-FPRPR = ME->R_PR_CORR->GET_FPRPR( ).
    ME->S_CORR_VIS-FINPR = ME->R_PR_CORR->GET_FINPR( ).

***--------------------------------------------------------------------------------------
*** Reduction
    ME->S_CORR_VIS-S_RDWIT = ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~GET_RDWIT( ).
    ME->S_CORR_VIS-S_RDLET = ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~GET_RDLET( ).
    ME->S_CORR_VIS-S_RDLEF = ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~GET_RDLEF( ).
    ME->S_CORR_VIS-S_RDRIG = ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~GET_RDRIG( ).
    ME->S_CORR_VIS-S_RDTOP = ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~GET_RDTOP( ).
    ME->S_CORR_VIS-S_RDBOT = ME->R_PR_CORR->ZIF_VCXI_PXSS_REDUC~GET_RDBOT( ).

***--------------------------------------------------------------------------------------
*** Get Score String Length & Cross (considering Reduction)
    ME->R_PR_CORR->ZIF_VCXI_PXSS_SCORES_AP~GET_SCSTR( importing EF_SSTRL = ME->S_CORR_VIS-SSTRL
                                                                EF_SSTRC = ME->S_CORR_VIS-SSTRC ).

***--------------------------------------------------------------------------------------
*** Get Sheet Dimension (considering Reduction)
    ME->R_PR_CORR->GET_SHTDIM( importing ES_SHTLE = ME->S_CORR_VIS-S_IOSEC_OUT-S_SHTLE
                                         ES_SHTWI = ME->S_CORR_VIS-S_IOSEC_OUT-S_SHTWI ).

*** Number Ups (Outbound)
    ME->S_CORR_VIS-S_IOSEC_OUT-NOUPS = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_NOUPS( ).

*** Surface Weight (Outbound)
    ME->S_CORR_VIS-S_IOSEC_OUT-S_SURWT = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_SURWT( ).

*** Get Caliper and Flute (Outbound)
    LR_BL_CRFPROP = ME->R_PR_CORR->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( ).
    if LR_BL_CRFPROP is bound.
      ME->S_CORR_VIS-S_IOSEC_OUT-FLUTE   = LR_BL_CRFPROP->GET_FLUTE( importing EF_DESCR = ME->S_CORR_VIS-S_IOSEC_OUT-FLUTE_DESCR ).
      ME->S_CORR_VIS-S_IOSEC_OUT-S_CALIP = LR_BL_CRFPROP->S_CALIP.
    endif.

  endmethod.
