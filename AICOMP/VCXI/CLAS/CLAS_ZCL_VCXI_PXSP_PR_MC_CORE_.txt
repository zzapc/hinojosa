
class ZCL_VCXI_PXSP_PR_MC_CORE definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  create public .

public section.

  constants C_IPRVT_PX_MC_CORE type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSP_MC_CORE' ##NO_TEXT.
  constants C_PARID_RLPCR type /VCXI/VKS_PARID value 'ZVCXI_PX_RLPCR' ##NO_TEXT.
  constants C_PARID_RLETA type /VCXI/VKS_PARID value 'ZVCXI_PX_RLETA' ##NO_TEXT.
  constants C_PARID_NOOUT type /VCXI/VKS_PARID value 'ZVCXI_XC_NOOUT' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_RLETA
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_RLETA) type ZVCXI_PXS_S_RLETA
    raising
      /VCXI/CX_CKX .
  methods GET_NOOUT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_NOOUT) type ZVCXI_XCS_NOOUT
    raising
      /VCXI/CX_CKX .
  methods SET_RLETA
    importing
      !IS_RLETA type ZVCXI_PXS_S_RLETA
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_RLPCR
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_RLPCR) type ZVCXI_PXS_RLPCR
    raising
      /VCXI/CX_CKX .
  methods SET_RLPCR
    importing
      !IF_RLPCR type ZVCXI_PXS_RLPCR
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .

  methods CALC_CONSU
    redefinition .
protected section.
private section.
endclass. "ZCL_VCXI_PXSP_PR_MC_CORE definition
class ZCL_VCXI_PXSP_PR_MC_CORE implementation.
  method CALC_CONSU.

    data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
          LS_CALCV type ZVCXI_XCS_S_CALCV.


    check IS_MQTYI is not initial.

***----------------------------------------------------------------------------
*** Get Target Roll Length, Number of Outs and Rolls/Core
    data(LS_RLETA) = ME->GET_RLETA( ).
    data(LF_NOOUT) = ME->GET_NOOUT( ).
    data(LF_RLPCR) = ME->GET_RLPCR( ).

*** Get Unit
    LS_CONSU-CONSU_UOM = ME->GET_CONSU( )-CONSU_UOM.

***----------------------------------------------------------------------------
*** Calculate PCs
    if LS_RLETA-RLETA is not initial and
       LF_RLPCR       is not initial.

***   Get Total Number of Rolls
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IS_MQTYI-MQTYI
                                                          IF_CALCV_UOM_1 = IS_MQTYI-MQTYI_UOM
                                                          IF_CALCV_2     = LS_RLETA-RLETA
                                                          IF_CALCV_UOM_2 = LS_RLETA-RLETA_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
                                                importing EF_CALCV       = LS_CALCV-CALCV
                                                          EF_CALCV_UOM   = LS_CALCV-CALCV_UOM ).
      LS_CALCV-CALCV = CEIL( LS_CALCV-CALCV ) * LF_NOOUT.

***   Calculate Number of Cores
      LS_CONSU-CONSU   = CEIL( LS_CALCV-CALCV / LF_RLPCR ).
    else.
      LS_CONSU-CONSU   = 0.
    endif.

***----------------------------------------------------------------------------
*** Set Consumption
    ME->SET_CONSU( IS_CONSU = LS_CONSU ).

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

    ME->F_PARID_CONSU = C_PARID_CONSU_P.
    ME->F_PARID_PRICP = C_PARID_PRICP_P.
    ME->F_PARID_AVGCO = C_PARID_AVGCO_P.
    ME->F_PARID_AVGCP = C_PARID_AVGCP_L.

  endmethod.
  method GET_NOOUT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).
    move LS_PARAM-ATFLV to RF_NOOUT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_RLETA.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RLETA ).
    move LS_PARAM-ATFLV to RS_RLETA-RLETA.
    move LS_PARAM-UNIT  to RS_RLETA-RLETA_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_RLPCR.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RLPCR ).
    move LS_PARAM-ATFLV to RF_RLPCR.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method SET_NOOUT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).

    LS_PARAM-ATFLV = IF_NOOUT.
    LS_PARAM-SETBY = IF_SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_RLETA.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RLETA ).

    move IS_RLETA-RLETA     to LS_PARAM-ATFLV.
    move IS_RLETA-RLETA_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
  method SET_RLPCR.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_RLPCR ).

    move IF_RLPCR to LS_PARAM-ATFLV.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RECALC_CONSU_REQ ).
    endif.

  endmethod.
