
class ZCL_VCXI_PXSS_PR_MS_CTAPE definition
  public
  inheriting from ZCL_VCXI_XCSS_PR_MS
  create public .

public section.

  constants C_IPRVT_PX_MS_CTAPE type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_MS_CTAPE' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_TAPLE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RS_TAPLE) type ZVCXI_PXS_S_TAPLE
    raising
      /VCXI/CX_CKX .
  methods SET_TAPLE
    importing
      !IS_TAPLE type ZVCXI_PXS_S_TAPLE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods GET_WERKS
    redefinition .
protected section.

  constants C_IEVNT_O_TAPLE_CHANGED type /VCXI/VKSC_IEVNT value 'TAPLE_CHANGED' ##NO_TEXT.
  constants C_PARID_TAPLE type /VCXI/VKS_PARID value 'ZVCXI_PX_TAPLE' ##NO_TEXT.

  methods CHECK_TAPLE
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_PXSS_PR_MS_CTAPE definition
class ZCL_VCXI_PXSS_PR_MS_CTAPE implementation.
  method CHECK_TAPLE.

*** Check Tape Length
    if ME->GET_TAPLE( )-TAPLE is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***     Tape Length is maintained
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '471' ).
      endif.

    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***     Tape Length is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_PXSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '472' ).
      endif.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Pramameter dimensions
    move C_PARID_PRICP_L to ME->F_PARID_PRICP.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Tape Length
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_TAPLE( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Tape Length
    ME->CHECK_TAPLE( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method GET_TAPLE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPLE ).
    move LS_PARAM-ATFLV to RS_TAPLE-TAPLE.
    move LS_PARAM-UNIT  to RS_TAPLE-TAPLE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_WERKS.

    data: LT_GATE    type        /VCXI/VKSR_TT_GATE.


    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SPEC=>C_IPRVT_PX_SPEC ).
    if LT_GATE is not initial.
      RF_WERKS = cast ZCL_VCXI_PXSS_PR_SPEC( LT_GATE[ 1 ]->R_CLSPR )->GET_WERKS( ).
    else.
      RF_WERKS = SUPER->GET_WERKS( ).
    endif.

  endmethod.
  method SET_TAPLE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TAPLE ).

    move IS_TAPLE-TAPLE      to LS_PARAM-ATFLV.
    move IS_TAPLE-TAPLE_UOM  to LS_PARAM-UNIT.
    move IF_SETBY            to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_TAPLE_CHANGED ).
    endif.

  endmethod.
