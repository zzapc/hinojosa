
class ZCL_VCXI_PXSS_UI_SCORE_MGR definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_DYNNR_SUBSC type DYNNR .
  data S_SCORE_MGR_VIS type ZVCXI_PXSS_S_SCORE_MGR_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_SCORE_MGR_VIS
    importing
      !IS_SCORE_MGR_VIS type ZVCXI_PXSS_S_SCORE_MGR_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_DYNNR_INITIAL type DYNNR value '9999' ##NO_TEXT.
  data F_CURSOR type SCRFNAME .
  data R_GRID_SCORE type ref to ZCL_VCXI_PXSS_GRID_SCORE .
  data R_GRID_TAPE type ref to ZCL_VCXI_PXSS_GRID_TAPE .
  data R_PR_SCORE_MGR type ref to ZCL_VCXI_PXSS_PR_SCORE_MGR .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_UI_SCORE_MGR definition
class ZCL_VCXI_PXSS_UI_SCORE_MGR implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_SCORE_MGR_BIND'
      exporting
        IR_UI_SCORE_MGR = ME
      importing
        ES_DYNP         = ME->S_DYNP.

*** Create Grid for Scores
    create object ME->R_GRID_SCORE
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_SCORE'.

*** Create Grid for Tapes
    create object ME->R_GRID_TAPE
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_TAPE'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_SCORE_MGR.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_SCORE is bound.
      ME->R_GRID_SCORE->DO_FREE( ).
      clear ME->R_GRID_SCORE.
    endif.

    if ME->R_GRID_TAPE is bound.
      ME->R_GRID_TAPE->DO_FREE( ).
      clear ME->R_GRID_TAPE.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_CADLS  type ZVCXI_PXS_CADLS.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Get CAD Lock Status
        LF_CADLS = ME->R_PR_SCORE_MGR->GET_CADLS( ).

***----------------------------------------------------------------------------
***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

***     Modify Screen
        loop at screen.
***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.

***       Lock everything
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Adjust based on CAD Lock Status
          if SCREEN-GROUP4 eq 'CAD' and
             ( LF_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_REVISION or
               LF_CADLS eq ZCL_VCXI_PXSS_PR_CADIF_PRJ=>C_CADLS_LOCKED ).
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize Vis
    ME->INIT_VIS( ).

***--------------------------------------------------------------------------------------
*** Refresh Grid for Scores
    if ME->R_GRID_SCORE is bound.
      ME->R_GRID_SCORE->F_REFRESH_REQ = ABAP_TRUE .
      ME->R_GRID_SCORE->REFRESH_GRID( ).
    endif.

*** Refresh Grid for Tapes
    if ME->R_GRID_TAPE is bound.
      ME->R_GRID_TAPE->F_REFRESH_REQ = ABAP_TRUE .
      ME->R_GRID_TAPE->REFRESH_GRID( ).
    endif.

  endmethod.
  method DO_UPDATE_SCORE_MGR_VIS.

    check ME->R_PR_SCORE_MGR is bound.

*** Set Panel Orientation
    if ME->S_SCORE_MGR_VIS-PANOR ne IS_SCORE_MGR_VIS-PANOR.
      ME->R_PR_SCORE_MGR->SET_PANOR( IF_PANOR = IS_SCORE_MGR_VIS-PANOR
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Score Status
    if ME->S_SCORE_MGR_VIS-SSCOR ne IS_SCORE_MGR_VIS-SSCOR.
      ME->R_PR_SCORE_MGR->SET_SSCOR( IF_SSCOR = IS_SCORE_MGR_VIS-SSCOR
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    if ME->R_GRID_SCORE is bound.
      ME->R_GRID_SCORE->CHECK_CHANGED_DATA( ).
    endif.

    if ME->R_GRID_TAPE is bound.
      ME->R_GRID_TAPE->CHECK_CHANGED_DATA( ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_SCORE_MGR.

  endmethod.
  method INIT_VIS.

    data: LS_PRSTY type ZVCXI_P0SSC_S_PRSTY.
    data: LR_CUST_PRSTY type ref to ZCL_VCXI_PXSS_CUST_PRSTY.


    free: ME->S_SCORE_MGR_VIS.

*** Get Panel Orientation
    ME->S_SCORE_MGR_VIS-PANOR = ME->R_PR_SCORE_MGR->GET_PANOR( importing EF_DESCR = ME->S_SCORE_MGR_VIS-PANOR_DESCR ).

*** Get Score Status
    ME->S_SCORE_MGR_VIS-SSCOR = ME->R_PR_SCORE_MGR->GET_SSCOR( importing EF_DESCR = ME->S_SCORE_MGR_VIS-SSCOR_DESCR ).

*** Set Parameter IDs for Product Style Type and Product Style
    ME->R_PR_SCORE_MGR->GET_PRSTY( importing ER_CUST_PRSTY = LR_CUST_PRSTY ).
    check LR_CUST_PRSTY is bound.
    LS_PRSTY = LR_CUST_PRSTY->GET_PRSTY( ).
    set parameter id 'ZVCXI_P0SS_TPRST' field LS_PRSTY-TPRST.
    set parameter id 'ZVCXI_P0SS_PRSTY' field LS_PRSTY-PRSTY.

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
