
class ZCL_VCXI_P0SU_PR_SHIPMGR_MCH definition
  public
  inheriting from ZCL_VCXI_XCSU_PR_SHIPMGR
  create public .

public section.

  constants C_PMATY_PALLET type ZVCXI_XCSU_PMATY value 'ZVCXI_P0_PALLET'. "#EC NOTEXT

  methods GET_BASE_DIMEN
    redefinition .
  methods GET_BASE_PRQTY
    redefinition .
protected section.

  data R_PR_SPEC_MCH type ref to ZCL_VCXI_P0SS_PR_SPEC_MCH .
  data R_PR_AREA_WGT_MCH type ref to ZCL_VCXI_P0SS_PR_AREA_WGT_MCH .

  methods HANDLE_INIT_REFERENCES
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SU_PR_SHIPMGR_MCH definition
class ZCL_VCXI_P0SU_PR_SHIPMGR_MCH implementation.
method GET_BASE_DIMEN.

  data:          LS_HULEN  type ZVCXI_P0S_S_HULEN,
                 LS_HUWID  type ZVCXI_P0S_S_HUWID,
                 LS_HUHEI  type ZVCXI_P0S_S_HUHEI,
                 LS_WGRHU  type ZVCXI_P0S_S_WGRHU.
  field-symbols: <S_DIMEN> type ZVCXI_XCSU_S_DIMEN.

*** First check if all References are there
  if ME->R_PR_SPEC_MCH is not bound.
    ME->HANDLE_INIT_REFERENCES( ).
  endif.

  if ME->R_PR_SPEC_MCH is bound.
    LS_HULEN = ME->R_PR_SPEC_MCH->GET_HULEN( ).
    LS_HUWID = ME->R_PR_SPEC_MCH->GET_HUWID( ).
    LS_HUHEI = ME->R_PR_SPEC_MCH->GET_HUHEI( ).
    LS_WGRHU = ME->R_PR_SPEC_MCH->GET_WGRHU( ).
  endif.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  <S_DIMEN>-DIMEN      = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_LENGTH.
  <S_DIMEN>-DIMVA      = LS_HULEN-HULEN.
  <S_DIMEN>-DIMVA_UOM  = LS_HULEN-HULEN_UOM.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  <S_DIMEN>-DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH.
  <S_DIMEN>-DIMVA     = LS_HUWID-HUWID.
  <S_DIMEN>-DIMVA_UOM = LS_HUWID-HUWID_UOM.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  <S_DIMEN>-DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_HEIGHT.
  <S_DIMEN>-DIMVA     = LS_HUHEI-HUHEI.
  <S_DIMEN>-DIMVA_UOM = LS_HUHEI-HUHEI_UOM.

  append initial line to RT_DIMEN assigning <S_DIMEN>.
  <S_DIMEN>-DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WEIGHT.
  <S_DIMEN>-DIMVA     = LS_WGRHU-WGRHU.
  <S_DIMEN>-DIMVA_UOM = LS_WGRHU-WGRHU_UOM.

endmethod.
method GET_BASE_PRQTY.

  data: LS_PCPHU type ZVCXI_P0S_S_PCPHU.

  if ME->R_PR_SPEC_MCH is bound.
    LS_PCPHU = ME->R_PR_SPEC_MCH->GET_PCPHU( ).
    move LS_PCPHU-PCPHU     to RS_PRQTY-PRQTY.
    move LS_PCPHU-PCPHU_UOM to RS_PRQTY-PRQTY_UOM.
  endif.


endmethod.
method HANDLE_INIT_REFERENCES.

  data:  LT_GATE            type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE            type ref to /VCXI/CL_VKSR_GATE.
  SUPER->HANDLE_INIT_REFERENCES( ).

***------------------------------------------------------------------------------------------------
*** Get Specification Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_SPEC_MCH=>C_IPRVT_P0_SPEC_MCH
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
         LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PR_SPEC_MCH.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PR_SPEC_MCH.
  endtry.

  if ME->R_PR_SPEC_MCH is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_P0SS_PR_SPEC_MCH=>C_IPRVT_P0_SPEC_MCH
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

***------------------------------------------------------------------------------------------------
*** Get Area and Weight Reference
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SS_PR_AREA_WGT_MCH=>C_IPRVT_P0_AREA_WGT_MCH
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  try.
      if LR_GATE          is bound and
         LR_GATE->R_CLSPR is bound.
        move LR_GATE->R_CLSPR ?to ME->R_PR_AREA_WGT_MCH.
      endif.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: ME->R_PR_AREA_WGT_MCH.
  endtry.

  if ME->R_PR_AREA_WGT_MCH is not bound.
*** Provider &1 is not available for &2.
    /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
        IF_MSGTY = 'E'
        IF_MSGID = 'ZVCXI_XCS'
        IF_MSGNO = '010'
        IF_MSGV1 = ZCL_VCXI_P0SS_PR_AREA_WGT_MCH=>C_IPRVT_P0_AREA_WGT_MCH
        IF_MSGV2 = ME->R_GATE->F_ID ).
  endif.

endmethod.
endclass. "ZCL_VCXI_P0SU_PR_SHIPMGR_MCH implementation
