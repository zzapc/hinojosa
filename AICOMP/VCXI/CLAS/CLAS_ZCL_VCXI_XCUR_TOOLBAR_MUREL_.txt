
class ZCL_VCXI_XCUR_TOOLBAR_MUREL definition
  public
  final
  create public .

public section.

  class-methods CLASS_CONSTRUCTOR .
  methods CONSTRUCTOR
    importing
      !IR_POPUP_MURGR type ref to ZCL_VCXI_XCUR_POPUP_MURGR
      !IF_CONTAINER_NAME type SCRFNAME default '0100CC_TOOLBAR'
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
  methods REFRESH_TOOLBAR
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
protected section.

  class-data T_MUCEL type /VCXI/CKX_TT_OBJECT .
  constants C_BTYPE_BUTTON type TB_BTYPE value '0' ##NO_TEXT.
  constants C_BTYPE_CHECKBOX type TB_BTYPE value '5' ##NO_TEXT.
  constants C_BTYPE_MENU type TB_BTYPE value '2' ##NO_TEXT.
  constants C_BTYPE_MENU_BTN type TB_BTYPE value '1' ##NO_TEXT.
  constants C_BTYPE_MENU_ENTRY type TB_BTYPE value '6' ##NO_TEXT.
  constants C_BTYPE_SEPARATOR type TB_BTYPE value '3' ##NO_TEXT.
  data F_CONTAINER_NAME type SCRFNAME .
  data R_TOOLBAR type ref to CL_GUI_TOOLBAR .
  data F_APPL_EVENTS type ABAP_BOOL .
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_POPUP_MURGR type ref to ZCL_VCXI_XCUR_POPUP_MURGR .
  constants C_FCODE_ADD type UI_FUNC value 'ADD' ##NO_TEXT.
  constants C_FCODE_DEL type UI_FUNC value 'DEL' ##NO_TEXT.

  methods GET_MENU_ADD
    returning
      value(RR_MENU) type ref to CL_CTMENU
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_ADD
    importing
      !IF_GMUCE type ZVCXI_XCUC_GMUCE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_DEL
    raising
      /VCXI/CX_CKX .
  methods INIT_TOOLBAR
    raising
      /VCXI/CX_CKX .
  methods HANDLE_MENU_BUTTON
    for event DROPDOWN_CLICKED of CL_GUI_TOOLBAR
    importing
      !FCODE
      !POSX
      !POSY .
  methods INIT_CONTAINER
    raising
      /VCXI/CX_CKX .
  methods HANDLE_TOOLBAR_FCODE
    for event FUNCTION_SELECTED of CL_GUI_TOOLBAR
    importing
      !FCODE .
private section.
endclass. "ZCL_VCXI_XCUR_TOOLBAR_MUREL definition
class ZCL_VCXI_XCUR_TOOLBAR_MUREL implementation.
  method CLASS_CONSTRUCTOR.

    data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


*** Get all Update Customizing Elements
    try.
        T_MUCEL = ZCL_VCXI_XCUC_MUCEL=>GET_ALL_INSTANCES( ).
      catch /VCXI/CX_CKX.
        clear T_MUCEL.
    endtry.

*** Validate Authorization
    loop at T_MUCEL into LR_OBJECT.
      try.
          ZCL_VCXI_XCUC_MUCEL=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_XCUC_MUCEL=>C_ACTVT_EXECUTE
                                           IR_MUCEL = cast #( LR_OBJECT ) ).
        catch /VCXI/CX_CKX.
          delete T_MUCEL.
      endtry.
    endloop.

*** Sort Update Customizing Elements by Description
    try.
        /VCXI/CL_CKX_SERVICE=>SORT_OBJECTS( exporting IF_SORT_BY_DESCR = ABAP_TRUE
                                            changing  CT_OBJECT        = T_MUCEL ).
      catch /VCXI/CX_CKX.
        clear T_MUCEL.
    endtry.

  endmethod.
  method CONSTRUCTOR.

    move IR_POPUP_MURGR    to ME->R_POPUP_MURGR.
    move IF_CONTAINER_NAME to ME->F_CONTAINER_NAME.
    move IF_APPL_EVENTS    to ME->F_APPL_EVENTS.

  endmethod.
  method DO_FREE.

*** Free Toolbar
    if ME->R_TOOLBAR is bound.
      ME->R_TOOLBAR->FREE( exceptions
                             CNTL_ERROR        = 1
                             CNTL_SYSTEM_ERROR = 2
                             others            = 3 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_TOOLBAR.
    endif.

*** Free Container
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( exceptions
                               CNTL_ERROR        = 1
                               CNTL_SYSTEM_ERROR = 2
                               others            = 3 ).
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
      clear ME->R_CONTAINER.
    endif.

  endmethod.
  method GET_MENU_ADD.

    data: LF_FCODE type UI_FUNC,
          LF_TEXT  type GUI_TEXT.
    data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


    check ME->T_MUCEL is not initial.

*** Create DropDown Menu
    create object RR_MENU.

    loop at ME->T_MUCEL into LR_OBJECT.
***   Define Function
      LF_FCODE = C_FCODE_ADD && '@' && LR_OBJECT->GET_GUID( ).
      LF_TEXT  = LR_OBJECT->GET_DESCR( ).
      if LF_TEXT is initial.
        LF_TEXT  = LR_OBJECT->GET_ID( ).
      endif.

***   Add Function
      RR_MENU->ADD_FUNCTION( FCODE = LF_FCODE
                             TEXT  = LF_TEXT ).

    endloop.

  endmethod.
  method HANDLE_MENU_BUTTON.

    data: LR_MENU type ref to CL_CTMENU.


    try.
***--------------------------------------------------------------------------------------
***     Get corresponding DropDown Menu
        case FCODE.
          when C_FCODE_ADD.
***         Get DropDown Menu for Add
            LR_MENU = ME->GET_MENU_ADD( ).

        endcase.

***--------------------------------------------------------------------------------------
***     Show DropDown Menu
        if LR_MENU is bound.
          ME->R_TOOLBAR->TRACK_CONTEXT_MENU( CONTEXT_MENU = LR_MENU
                                             POSX         = POSX
                                             POSY         = POSY ).
        endif.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_TOOLBAR_FCODE.

    data:  LF_GMUCE   type ZVCXI_XCUC_GMUCE.


    try.
***     Trigger specific Add command
        if FCODE cp 'ADD@*'.
          move FCODE+4 to LF_GMUCE.
          ME->HANDLE_UC_ADD( IF_GMUCE = LF_GMUCE ).
        endif.

***     Process other events
        case FCODE.
          when C_FCODE_DEL.
            ME->HANDLE_UC_DEL( ).
        endcase.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method HANDLE_UC_ADD.

    data: LR_MUCEL type ref to ZCL_VCXI_XCUC_MUCEL.

*** Get Update Customizing Element
    LR_MUCEL ?= ZCL_VCXI_XCUC_MUCEL=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = conv /VCXI/CKX_GUID( IF_GMUCE ) ).
    check LR_MUCEL is bound.

*** Create Update Runtime Element on Update Group
    append ZCL_VCXI_XCUR_MURDE=>CREATE_MUREL( IR_MUCEL = LR_MUCEL ) to ME->R_POPUP_MURGR->T_MUREL.

  endmethod.
  method HANDLE_UC_DEL.

*** Delete Active Tab
    check LINES( ME->R_POPUP_MURGR->T_MUREL ) ne 0 and
          ME->R_POPUP_MURGR->F_ACTIVE_TAB is not initial.

    delete ME->R_POPUP_MURGR->T_MUREL
           index ME->R_POPUP_MURGR->F_ACTIVE_TAB+13(3).

  endmethod.
  method INIT_CONTAINER.

    if ME->R_CONTAINER is not bound.
      create object ME->R_CONTAINER
        exporting
          CONTAINER_NAME              = ME->F_CONTAINER_NAME
        exceptions
          CNTL_ERROR                  = 1
          CNTL_SYSTEM_ERROR           = 2
          CREATE_ERROR                = 3
          LIFETIME_ERROR              = 4
          LIFETIME_DYNPRO_DYNPRO_LINK = 5
          others                      = 6.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

  endmethod.
  method INIT_TOOLBAR.

    data: LF_LOCKED   type /VCXI/CKX_LOCKED,
          LF_INUSE    type /VCXI/VKSR_INUSE,
          LF_DISABLED type ABAP_BOOL.
    data: LT_EVENT type CNTL_SIMPLE_EVENTS.
    field-symbols: <S_EVENT> type CNTL_SIMPLE_EVENT.


    check ME->R_TOOLBAR is not bound.

***--------------------------------------------------------------------------------------
*** Create Toolbar
    create object ME->R_TOOLBAR
      exporting
        PARENT             = ME->R_CONTAINER
      exceptions
        CNTL_INSTALL_ERROR = 1
        CNTL_ERROR         = 2
        CNTB_WRONG_VERSION = 3
        others             = 4.
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

***------------------------------------------------------------------------------------------------
*** Set Registered Events
    append initial line to LT_EVENT assigning <S_EVENT>.
    move CL_GUI_TOOLBAR=>M_ID_FUNCTION_SELECTED  to <S_EVENT>-EVENTID.
    move ME->F_APPL_EVENTS                       to <S_EVENT>-APPL_EVENT.

    append initial line to LT_EVENT assigning <S_EVENT>.
    move CL_GUI_TOOLBAR=>M_ID_DROPDOWN_CLICKED   to <S_EVENT>-EVENTID.
    move ME->F_APPL_EVENTS                       to <S_EVENT>-APPL_EVENT.

    ME->R_TOOLBAR->SET_REGISTERED_EVENTS( exporting
                                            EVENTS                    = LT_EVENT
                                          exceptions
                                            CNTL_ERROR                = 1
                                            CNTL_SYSTEM_ERROR         = 2
                                            ILLEGAL_EVENT_COMBINATION = 3
                                            others                    = 4 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Set Event Handler
    set handler ME->HANDLE_TOOLBAR_FCODE for ME->R_TOOLBAR.
    set handler ME->HANDLE_MENU_BUTTON   for ME->R_TOOLBAR.

  endmethod.
  method REFRESH_TOOLBAR.

*** Initialize if needed
    ME->INIT_CONTAINER( ).
    ME->INIT_TOOLBAR( ).

***--------------------------------------------------------------------------------------
*** Delete All Buttons
    ME->R_TOOLBAR->DELETE_ALL_BUTTONS( ).

***--------------------------------------------------------------------------------------
*** Add Button
    ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE            = C_FCODE_ADD
                                          ICON             = ICON_INSERT_ROW
                                          BUTN_TYPE        = C_BTYPE_MENU
                                          TEXT             = 'Add'(F01)
                                          IS_DISABLED      = cond #( when ME->T_MUCEL is initial then ABAP_TRUE )
                               exceptions CNTL_ERROR       = 1
                                          CNTB_BTYPE_ERROR = 2
                                          CNTB_ERROR_FCODE = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

*** Delete Button
    ME->R_TOOLBAR->ADD_BUTTON( exporting  FCODE            = C_FCODE_DEL
                                          ICON             = ICON_DELETE_ROW
                                          BUTN_TYPE        = C_BTYPE_BUTTON
                                          TEXT             = 'Delete'(F02)
                               exceptions CNTL_ERROR       = 1
                                          CNTB_BTYPE_ERROR = 2
                                          CNTB_ERROR_FCODE = 3 ).
    if SY-SUBRC ne 0.
      /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
    endif.

  endmethod.
