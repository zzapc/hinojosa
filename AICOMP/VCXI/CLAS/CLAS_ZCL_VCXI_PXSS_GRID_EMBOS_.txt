
class ZCL_VCXI_PXSS_GRID_EMBOS definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_PXSS_S_EMBOS_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_EMBOS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_EMBOS_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    changing
      !CS_DATA type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_EMBOS_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_DATA type ANY
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_GRID_EMBOS definition
class ZCL_VCXI_PXSS_GRID_EMBOS implementation.
  method CHANGE_STYLE_EMBOS.

    data: LF_STYLE_ENABLED type LVC_STYLE.
    data: LS_EMBOS_VIS type ZVCXI_PXSS_S_EMBOS_VIS.


    free CT_STYL.

***--------------------------------------------------------------------------------------
*** "Cast" generic structure to Vis Structure
    move-corresponding IS_DATA to LS_EMBOS_VIS.

*** Disable Material Fields if Material is not supported
    LF_STYLE_ENABLED = switch #( LS_EMBOS_VIS-FEMBM when ABAP_TRUE then ME->F_STYLE_ENABLED
                                                                   else CL_GUI_ALV_GRID=>MC_STYLE_DISABLED ).

***--------------------------------------------------------------------------------------
*** Set Embossing Type = Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEMBO'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Embossing Type Description = Not Editable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEMBO_DESCR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Embossing Length = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'EMBLE'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Embossing Width = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'EMBWI'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).


***--------------------------------------------------------------------------------------
*** Set Material = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Purchase Option = Enable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = LF_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).

*** Purchase Embossing Material
    case LS_EMBOS_VIS-PURCH.
      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
***     Set Vendor = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = LF_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).

      when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
***     Set Vendor = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
***     Set Price Per = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).
    endcase.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZCL_VCXI_PXSS_PR_EMBOS=>C_IPRVT_PX_EMBOS.

  endmethod.
  method GET_EMBOS_VIS.

    data: LS_EMBOS_VIS type ZVCXI_PXSS_S_EMBOS_VIS.
    data: LR_PR_EMBOS     type ref to ZCL_VCXI_PXSS_PR_EMBOS,
          LR_PR_MS_EMBMAT type ref to ZCL_VCXI_PXSS_PR_MS_EMBMAT.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_EMBOS.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_EMBOS is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_EMBOS_VIS.

***--------------------------------------------------------------------------------------
*** Embossing Type
    LS_EMBOS_VIS-TEMBO = LR_PR_EMBOS->GET_TEMBO( importing EF_DESCR = LS_EMBOS_VIS-TEMBO_DESCR
                                                           EF_FEMBM = LS_EMBOS_VIS-FEMBM ).
*** Embossing Length & Width
    LS_EMBOS_VIS-S_EMBLE = LR_PR_EMBOS->GET_EMBLE( ).
    LS_EMBOS_VIS-S_EMBWI = LR_PR_EMBOS->GET_EMBWI( ).

*** Fill VIS Structure based on Embossing Material
    if LS_EMBOS_VIS-FEMBM eq ABAP_TRUE.
      LR_PR_MS_EMBMAT = LR_PR_EMBOS->GET_PRVDR_MS_EMBMAT( ).
      if LR_PR_MS_EMBMAT is bound.
***     Material
        LS_EMBOS_VIS-MATNR       = LR_PR_MS_EMBMAT->GET_MATNR( ).
        LS_EMBOS_VIS-MATNR_DESCR = LR_PR_MS_EMBMAT->GET_MATNR_DESCR( ).
***     Procurement Option
        LS_EMBOS_VIS-PURCH       = LR_PR_MS_EMBMAT->GET_PURCH( ).
***     Vendor
        LS_EMBOS_VIS-LIFNR       = LR_PR_MS_EMBMAT->GET_LIFNR( ).
        LS_EMBOS_VIS-LIFNR_DESCR = LR_PR_MS_EMBMAT->GET_LIFNR_DESCR( ).
***     Price and Price Per
        LS_EMBOS_VIS-S_PRICE     = LR_PR_MS_EMBMAT->GET_PRICE( ).
        LS_EMBOS_VIS-S_PRICP     = LR_PR_MS_EMBMAT->GET_PRICP( ).
      endif.
    endif.

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_EMBOS_VIS to CS_DATA.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_FEMBM  type ZVCXI_PXS_FEMBM,
          LF_LIFNR  type ABAP_BOOL,
          LF_PRICE  type ABAP_BOOL.
    data: LS_EMBOS_GRID type ZVCXI_PXSS_S_EMBOS_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type ANY,
                   <S_FCAT> type LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_EMBOS_GRID.
***   Find Embossin Material
      if LS_EMBOS_GRID-FEMBM eq ABAP_TRUE.
        LF_FEMBM = ABAP_TRUE.
      endif.
***   Find Purchased Embossing Material
      case LS_EMBOS_GRID-PURCH.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
          LF_LIFNR = ABAP_TRUE.
          LF_PRICE = ABAP_TRUE.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
          LF_LIFNR = ABAP_TRUE.
      endcase.
    endloop.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL' or 'FEMBM'.
          move ABAP_TRUE  to <S_FCAT>-TECH.
          move 0          to <S_FCAT>-COL_POS.

        when 'TEMBO'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'EMBLE' or 'EMBWI'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'PURCH'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'LIFNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'PRICE' or 'PRICP'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

      endcase.

***----------------------------------------------------------------------------
***   Hide Field if not Embossing Material
      if LF_FEMBM ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'MATNR' or <S_FCAT>-FIELDNAME eq 'MATNR_DESCR' or
           <S_FCAT>-FIELDNAME eq 'PURCH'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.
***   Hide Field if not purchase
      if LF_LIFNR ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'LIFNR' or <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.
      if LF_PRICE ne ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'PRICE' or <S_FCAT>-FIELDNAME eq 'PRICE_CURR' or
           <S_FCAT>-FIELDNAME eq 'PRICP' or <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

    endloop.

  endmethod.
  method GET_GRID_DATA.

    data: LS_LAYOUT type LVC_S_LAYO.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <T_STYL> type          LVC_T_STYL.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Layout
    LS_LAYOUT = ME->GET_LAYOUT( ).

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ME->F_IPRVT
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
    loop at LT_GATE into LR_GATE.
***   Add Line with Gate Key Data
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding value ZVCXI_PXSS_S_EMBOS_GRID( POSID  = LR_GATE->GET_POSID( )
                                                        GATKY  = LR_GATE->F_GATKY
                                                        R_GATE = LR_GATE
                                                      ) to <S_DATA>.

***   Get Visualization Data
      ME->GET_EMBOS_VIS( exporting IR_GATE = LR_GATE
                         changing  CS_DATA = <S_DATA> ).

***   Set Style Details
      if LS_LAYOUT-STYLEFNAME is not initial.
        assign component LS_LAYOUT-STYLEFNAME of structure <S_DATA> to <T_STYL>.
        if SY-SUBRC eq 0.
          ME->CHANGE_STYLE_EMBOS( exporting IR_GATE = LR_GATE
                                            IS_DATA = <S_DATA>
                                   changing CT_STYL = <T_STYL> ).
***       Call DVC Servcie - Modify Style
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                               changing  CT_STYL = <T_STYL> ).
        endif.
      endif.
    endloop.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_EMBOS_GRID type ZVCXI_PXSS_S_EMBOS_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_EMBOS_GRID.

          check LS_EMBOS_GRID-R_GATE is bound and
                LS_EMBOS_GRID-R_GATE->F_FREED is initial.

***       Set Values to PR Class
          ME->SET_EMBOS_VIS( IR_GATE = LS_EMBOS_GRID-R_GATE
                             IS_DATA = <S_DATA> ).

        endloop.

        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method SET_EMBOS_VIS.

    data: LS_EMBOS_VIS_OLD type ZVCXI_PXSS_S_EMBOS_VIS,
          LS_EMBOS_VIS_NEW type ZVCXI_PXSS_S_EMBOS_VIS.
    data: LR_PR_EMBOS     type ref to ZCL_VCXI_PXSS_PR_EMBOS,
          LR_PR_MS_EMBMAT type ref to ZCL_VCXI_PXSS_PR_MS_EMBMAT.

***--------------------------------------------------------------------------------------
*** Get PR Class
    check IR_GATE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_EMBOS.
    LR_PR_EMBOS ?= IR_GATE->R_CLSPR.
    check LR_PR_EMBOS is bound.

*** Get old Values
    ME->GET_EMBOS_VIS( exporting IR_GATE = IR_GATE
                       changing  CS_DATA = LS_EMBOS_VIS_OLD ).

*** Get new Values
    move-corresponding IS_DATA to LS_EMBOS_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Embossing Type
    if LS_EMBOS_VIS_NEW-TEMBO ne LS_EMBOS_VIS_OLD-TEMBO.
      LR_PR_EMBOS->SET_TEMBO( IF_TEMBO = LS_EMBOS_VIS_NEW-TEMBO
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Embossing Length
    if LS_EMBOS_VIS_NEW-S_EMBLE ne LS_EMBOS_VIS_OLD-S_EMBLE.
      LR_PR_EMBOS->SET_EMBLE( IS_EMBLE = LS_EMBOS_VIS_NEW-S_EMBLE
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Embossing Width
    if LS_EMBOS_VIS_NEW-S_EMBWI ne LS_EMBOS_VIS_OLD-S_EMBWI.
      LR_PR_EMBOS->SET_EMBWI( IS_EMBWI = LS_EMBOS_VIS_NEW-S_EMBWI
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Update Embossing Material
    LR_PR_MS_EMBMAT = LR_PR_EMBOS->GET_PRVDR_MS_EMBMAT( ).
    if LR_PR_MS_EMBMAT is bound.
***   Material
      if LS_EMBOS_VIS_NEW-MATNR ne LS_EMBOS_VIS_OLD-MATNR.
        LR_PR_MS_EMBMAT->SET_MATNR( IF_MATNR = LS_EMBOS_VIS_NEW-MATNR
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Procurement Option
      if LS_EMBOS_VIS_NEW-PURCH ne LS_EMBOS_VIS_OLD-PURCH.
        LR_PR_MS_EMBMAT->SET_PURCH( IF_PURCH = LS_EMBOS_VIS_NEW-PURCH
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Vendor
      if LS_EMBOS_VIS_NEW-LIFNR ne LS_EMBOS_VIS_OLD-LIFNR.
        LR_PR_MS_EMBMAT->SET_LIFNR( IF_LIFNR = LS_EMBOS_VIS_NEW-LIFNR
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Price
      if LS_EMBOS_VIS_NEW-PRICE ne LS_EMBOS_VIS_OLD-PRICE.
        LR_PR_MS_EMBMAT->SET_PRICE( IS_PRICE = LS_EMBOS_VIS_NEW-S_PRICE
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Price Per
      if LS_EMBOS_VIS_NEW-PRICP ne LS_EMBOS_VIS_OLD-PRICP.
        LR_PR_MS_EMBMAT->SET_PRICP( IS_PRICP = LS_EMBOS_VIS_NEW-S_PRICP
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

  endmethod.
