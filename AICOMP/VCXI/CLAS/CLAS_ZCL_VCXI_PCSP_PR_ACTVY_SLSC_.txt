
class ZCL_VCXI_PCSP_PR_ACTVY_SLSC definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_PCWID type /VCXI/VKS_PARID value 'ZVCXI_P0_PCWID'. "#EC NOTEXT
  constants C_PARID_PCTYP type /VCXI/VKS_PARID value 'ZVCXI_P0_PCTYP'. "#EC NOTEXT

  methods GET_PCTYP_DESCR
    returning
      value(RF_DESCR) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_PCWID
    returning
      value(RS_PCWID) type ZVCXI_P0SP_S_PCWID
    raising
      /VCXI/CX_CKX .
  methods SET_PCWID
    importing
      !IS_PCWID type ZVCXI_P0SP_S_PCWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PCTYP
    returning
      value(RF_PCTYP) type ZVCXI_P0SP_PCTYP
    raising
      /VCXI/CX_CKX .
  methods SET_PCTYP
    importing
      !IF_PCTYP type ZVCXI_P0SP_PCTYP
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
protected section.

  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED'. "#EC NOTEXT
private section.
endclass. "ZCL_VCXI_PCSP_PR_ACTVY_SLSC definition
class ZCL_VCXI_PCSP_PR_ACTVY_SLSC implementation.
method GET_PCTYP.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).
  move LS_PARAM-ATWRT to RF_PCTYP.

endmethod.
method GET_PCTYP_DESCR.

  data: LF_PCTYP type ZVCXI_P0SP_PCTYP.

  LF_PCTYP = ME->GET_PCTYP( ).
  RF_DESCR = ZCL_VCXI_P0SP_CUST_PCTYP=>GET_PCTYP_DESCR( IF_PCTYP = LF_PCTYP ).

endmethod.
method GET_PCWID.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).
  move LS_PARAM-ATFLV to RS_PCWID-PCWID.
  move LS_PARAM-UNIT  to RS_PCWID-PCWID_UOM.

endmethod.
method GET_STATUS.

  data: LS_PCWID type ZVCXI_P0SP_S_PCWID.

  RF_ELMST = SUPER->GET_STATUS( ).

***------------------------------------------------------------------
*** Check PC dimensions
  LS_PCWID = ME->GET_PCWID( ).

*** Check PC Width
  if LS_PCWID-PCWID is not initial.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
  else.
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
  endif.

endmethod.
method GET_STATUS_MSG.

  data: LS_PCWID type ZVCXI_P0SP_S_PCWID.

  SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***------------------------------------------------------------------
*** Check PC dimensions
  LS_PCWID = ME->GET_PCWID( ).

*** Check PC Width
  if LS_PCWID-PCWID is not initial.
***   PC Width is maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'S'
                             IF_MSGNO = '003' ).
  else.
***   PC Width is not maintained.
    IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_P0SP'
                             IF_MSGTY = 'E'
                             IF_MSGNO = '004' ).
  endif.

endmethod.
method SET_PCTYP.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCTYP ).

  move IF_PCTYP to LS_PARAM-ATWRT.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method SET_PCWID.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PCWID ).

  move IS_PCWID-PCWID     to LS_PARAM-ATFLV.
  move IS_PCWID-PCWID_UOM to LS_PARAM-UNIT.
  move IF_SETBY           to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

  data:          LF_PCTYP  type ZVCXI_P0SP_PCTYP.
  data:          LS_PCWID  type ZVCXI_P0SP_S_PCWID.
  field-symbols: <S_PCDIM> type ZVCXI_P0SP_S_PCDIM.

  loop at CT_PCDIM assigning <S_PCDIM>.

    LS_PCWID = ME->GET_PCWID( ).
    LF_PCTYP = ME->GET_PCTYP( ).

    move-corresponding LS_PCWID to <S_PCDIM>.
    move:              LF_PCTYP to <S_PCDIM>-PCTYP.
    move               1        to <S_PCDIM>-NOOUT.

  endloop.

endmethod.
