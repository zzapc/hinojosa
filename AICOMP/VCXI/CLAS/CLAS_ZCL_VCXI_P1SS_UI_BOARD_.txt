
class ZCL_VCXI_P1SS_UI_BOARD definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_BOARD_VIS type ZVCXI_P1SS_S_BOARD_VIS .

  methods SHLP_BOARD
    importing
      !IF_TABNAME type DFIES-TABNAME default 'ZVCXI_P1SS_S_BOARD_VIS'
      !IF_FIELDNAME type DFIES-FIELDNAME default 'BOARD'
      !IF_DISPLAY type ABAP_BOOL
    changing
      !CF_BOARD type ZVCXI_PCS_BOARD
    raising
      /VCXI/CX_CKX .
  methods SHLP_COWID
    importing
      !IF_DISPLAY type ABAP_BOOL
    changing
      !CS_COWID type ZVCXI_PCS_S_COWID
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_BOARD_VIS
    importing
      !IS_BOARD_VIS type ZVCXI_P1SS_S_BOARD_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_BOARD type ref to ZCL_VCXI_P1SS_PR_BOARD .
  data R_GRID_MS_BOARD type ref to ZCL_VCXI_P1SS_GRID_MS_BOARD .
  constants C_UC_BRDCL type SYUCOMM value 'BRDCL' ##NO_TEXT.

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_BRDCL
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P1SS_UI_BOARD definition
class ZCL_VCXI_P1SS_UI_BOARD implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P1SS_UI_BOARD_BIND'
      exporting
        IR_UI_BOARD = ME
      importing
        ES_DYNP     = ME->S_DYNP.

*** Create Grid for MS Board
    create object ME->R_GRID_MS_BOARD
      exporting
        IR_GATE           = ME->R_GATE
        IR_UIGATE         = ME->R_UIGATE
        IF_CONTAINER_NAME = '0100CC_GRID_MS_BOARD'.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_BOARD.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

    if ME->R_GRID_MS_BOARD is bound.
      ME->R_GRID_MS_BOARD->DO_FREE( ).
      clear ME->R_GRID_MS_BOARD.
    endif.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_SELFD  type ZVCXI_PCSS_SELFD,
          LF_MBOAR  type ZVCXI_PCSS_MBOAR.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).
        LF_SELFD  = ME->R_PR_BOARD->GET_SELFD( ).
        LF_MBOAR  = ME->R_PR_BOARD->GET_MBOAR( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Disable Corrugation Width
          if SCREEN-NAME cp '*-COWID' and
             ME->S_BOARD_VIS-FOVRR_COWID ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Hide Self Deckling Information
          if SCREEN-GROUP1 eq 'SDI' and
             LF_SELFD      ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
            move 1 to SCREEN-INVISIBLE.
          endif.

***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.
          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

    if ME->R_GRID_MS_BOARD is bound.
      if ME->R_GRID_MS_BOARD->F_REFRESH_REQ eq ABAP_FALSE.
        move ABAP_TRUE to ME->R_GRID_MS_BOARD->F_REFRESH_REQ.
      endif.
      ME->R_GRID_MS_BOARD->REFRESH_GRID( ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Parameter Date Config
    data(LF_DCONF) = ME->R_GATE->GET_APPDATA( )->F_DCONF.
    set parameter id 'ZVCXI_XCS_DCONF' field LF_DCONF.

*** Set Parameter of Valid Board Types and Mode
    set parameter id 'ZVCXI_PCS_TBOAR' field SPACE.
    set parameter id 'ZVCXI_PCS_MBOAR' field SPACE.

*** Set Plant as Parameter
    set parameter id 'WRK' field SPACE.

*** Set only Released BoardIDs are allowed
    set parameter id 'ZVCXI_PCS_RELEASED' field ABAP_TRUE.

  endmethod.
  method DO_UPDATE_BOARD_VIS.

    check ME->R_PR_BOARD is bound.

***--------------------------------------------------------------------------------------
*** Set Board ID
    if ME->S_BOARD_VIS-BOARD ne IS_BOARD_VIS-BOARD.
      ME->R_PR_BOARD->SET_BOARD( IF_BOARD = IS_BOARD_VIS-BOARD
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Update Corrugation Width if it is "Overriden"
    if ME->S_BOARD_VIS-FOVRR_COWID eq ABAP_TRUE and
       ME->S_BOARD_VIS-S_COWID ne IS_BOARD_VIS-S_COWID.
      ME->R_PR_BOARD->SET_COWID( IS_COWID = IS_BOARD_VIS-S_COWID
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Flag Override Corrugation Width
    if ME->S_BOARD_VIS-FOVRR_COWID ne IS_BOARD_VIS-FOVRR_COWID.
      ME->R_PR_BOARD->SET_COWID( IF_FOVRR = IS_BOARD_VIS-FOVRR_COWID ).
    endif.

  endmethod.
  method DO_USER_COMMAND.

    if ME->R_GRID_MS_BOARD is bound.
      ME->R_GRID_MS_BOARD->CHECK_CHANGED_DATA( ).
    endif.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

    case IF_UCOMM.
      when C_UC_BRDCL.
        ME->HANDLE_UC_BRDCL( ).

    endcase.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_BOARD.

  endmethod.
  method HANDLE_UC_BRDCL.

    data: LR_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD.


    ME->R_PR_BOARD->GET_BOARD( importing ER_CUST_BOARD = LR_CUST_BOARD ).
    check LR_CUST_BOARD is bound.
    ZCL_VCXI_P1SS_POPUP_BRDCL=>START( IR_CUST_BOARD = LR_CUST_BOARD ).

  endmethod.
  method INIT_VIS.

    data: LF_DCONF       type DATS,
          LF_VALID_TBOAR type CHAR100,
          LF_MBOAR       type ZVCXI_PCSS_MBOAR,
          LF_WERKS       type WERKS_D,
          LF_RELEASED    type ABAP_BOOL.


    free: ME->S_BOARD_VIS.
    check ME->R_PR_BOARD is bound.

***--------------------------------------------------------------------------------------
*** Get Board ID
    ME->S_BOARD_VIS-BOARD = ME->R_PR_BOARD->GET_BOARD( ).
    ME->R_PR_BOARD->GET_BOARD_DESCR( importing EF_DESCR = ME->S_BOARD_VIS-BOARD_DESCR ).

*** Get Caliper
    ME->S_BOARD_VIS-S_CALIP = ME->R_PR_BOARD->GET_CALIP( ).

*** Get Flute
    ME->S_BOARD_VIS-FLUTE = ME->R_PR_BOARD->GET_FLUTE( importing EF_DESCR = ME->S_BOARD_VIS-FLUTE_DESCR ).

*** Get Starch Code
    ME->S_BOARD_VIS-STARC = ME->R_PR_BOARD->GET_STARC( importing EF_DESCR = ME->S_BOARD_VIS-STARC_DESCR ).

*** Get Corrugation Width
    ME->S_BOARD_VIS-S_COWID = ME->R_PR_BOARD->GET_COWID( importing EF_FOVRR = ME->S_BOARD_VIS-FOVRR_COWID ).

*** Get Side Run
    ME->S_BOARD_VIS-S_SIDRU = ME->R_PR_BOARD->GET_SIDRU( importing ES_SIDRP = ME->S_BOARD_VIS-S_SIDRP ).

*** Get Side Run
    ME->S_BOARD_VIS-NOUTW         = ME->R_PR_BOARD->GET_NOUTW( ).
    ME->S_BOARD_VIS-S_SIDRU_NOUTW = ME->R_PR_BOARD->GET_SIDRU( exporting IF_NOUTW = ME->S_BOARD_VIS-NOUTW
                                                               importing ES_SIDRP = ME->S_BOARD_VIS-S_SIDRP_NOUTW ).

  endmethod.
method SHLP_BOARD.

  data: LF_DCONF       type DATS,
        LF_VALID_TBOAR type CHAR100,
        LF_MBOAR       type ZVCXI_PCSS_MBOAR,
        LF_WERKS       type WERKS_D,
        LF_RELEASED    type ABAP_BOOL,
        LF_SUBRC       type I.
  data: LS_SHLP type  SHLP_DESCR.
  data: LT_RETURN type table of DDSHRETVAL.


***--------------------------------------------------------------------------------------
*** Set Parameter Date Config
  LF_DCONF = ME->R_PR_BOARD->GET_DCONF( ).
  set parameter id 'ZVCXI_XCS_DCONF' field LF_DCONF.

*** Set only Released BoardIDs are allowed
  move ABAP_TRUE to LF_RELEASED.
  set parameter id 'ZVCXI_PCS_RELEASED' field LF_RELEASED.

***--------------------------------------------------------------------------------------
*** Determine the search help of Board IDs
  call function 'F4IF_DETERMINE_SEARCHHELP'
    exporting
      TABNAME           = IF_TABNAME
      FIELDNAME         = IF_FIELDNAME
    importing
      SHLP              = LS_SHLP
    exceptions
      FIELD_NOT_FOUND   = 1
      NO_HELP_FOR_FIELD = 2
      INCONSISTENT_HELP = 3.

*** Filter fix by Plant
  LS_SHLP-FIELDPROP[ FIELDNAME = 'WERKS' ]-SHLPSELDIS = ABAP_TRUE.
  append value #( SHLPFIELD = 'WERKS'
                  SIGN      = 'I'
                  OPTION    = 'EQ'
                  LOW       = ME->R_PR_BOARD->GET_WERKS( )
                ) to LS_SHLP-SELOPT.
*** Filter fix by Board Mode
  LS_SHLP-FIELDPROP[ FIELDNAME = 'MBOAR' ]-SHLPSELDIS = ABAP_TRUE.
  append value #( SHLPFIELD = 'MBOAR'
                  SIGN      = 'I'
                  OPTION    = 'EQ'
                  LOW       = ME->R_PR_BOARD->GET_MBOAR( )
                ) to LS_SHLP-SELOPT.

*** Filter by Valid Board Types
  LF_VALID_TBOAR = ME->R_PR_BOARD->GET_VALID_TBOAR( ).
  condense LF_VALID_TBOAR no-gaps.
  split LF_VALID_TBOAR at ',' into table data(LT_TBOAR).
  loop at LT_TBOAR into data(LF_TBOAR).
    append value #( SHLPFIELD = 'TBOAR'
                    SIGN      = 'I'
                    OPTION    = 'EQ'
                    LOW       = LF_TBOAR ) to LS_SHLP-SELOPT.
  endloop.

  if ME->R_PR_BOARD->GET_MBOAR( ) ne ZCL_VCXI_P1SS_PR_BOARD=>F_MBOAR_S.
*** Filter by Sales Board
    append value #( SHLPFIELD = 'SABOA'
                    SIGN      = 'I'
                    OPTION    = 'EQ'
                    LOW       = ME->R_PR_BOARD->GET_SIBLING_BOARD_ID( )
                  ) to LS_SHLP-SELOPT.
  endif.

***--------------------------------------------------------------------------------------
*** Show Search Help
  call function 'F4IF_START_VALUE_REQUEST'
    exporting
      SHLP          = LS_SHLP
      DISPONLY      = IF_DISPLAY
    importing
      RC            = LF_SUBRC
    tables
      RETURN_VALUES = LT_RETURN.
  check LF_SUBRC eq 0 and
        IF_DISPLAY ne ABAP_TRUE.

***--------------------------------------------------------------------------------------
*** Return selected Board
  CF_BOARD = value #( LT_RETURN[ 1 ]-FIELDVAL optional ).

endmethod.
method SHLP_COWID.

  data: LS_RETURN type DDSHRETVAL.
  data: LT_COWID  type ZVCXI_PCS_TT_COWID,
        LT_RETURN type table of DDSHRETVAL.

*** Get all allowed Corrugation Width
  LT_COWID = ME->R_PR_BOARD->GET_VALID_COWID( ).

*** Call Search Help
  call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    exporting
      RETFIELD        = 'COWID'
      VALUE_ORG       = 'S'
      DISPLAY         = IF_DISPLAY
    tables
      VALUE_TAB       = LT_COWID
      RETURN_TAB      = LT_RETURN
    exceptions
      PARAMETER_ERROR = 1
      NO_VALUES_FOUND = 2
      others          = 3.

  if SY-SUBRC eq 0 and
     IF_DISPLAY ne ABAP_TRUE.
    read table LT_RETURN index 1 into LS_RETURN.
    if SY-SUBRC eq 0.
      try.
          call function 'RSDS_CONVERT_NUMBER'
            exporting
              INPUT  = LS_RETURN-FIELDVAL
            importing
              OUTPUT = CS_COWID-COWID.
        catch CX_ROOT.
      endtry.
    endif.
  endif.

endmethod.
