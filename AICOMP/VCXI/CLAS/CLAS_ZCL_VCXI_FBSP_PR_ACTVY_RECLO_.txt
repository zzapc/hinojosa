
class ZCL_VCXI_FBSP_PR_ACTVY_RECLO definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_FBSP_ADJ_BGDIM .

  methods GET_COWGT
    exporting
      !ES_COWGT type ZVCXI_FBS_S_COWGT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_COWGT
    importing
      !IS_COWGT type ZVCXI_FBS_S_COWGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_BGDIM type /VCXI/VKSC_IEVNT value 'RECALC_BGDIM' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_MC_CONSU type /VCXI/VKSC_IEVNT value 'RECALC_MC_CONSU' ##NO_TEXT.
  constants C_IEVNT_O_COWGT_CHANGED type /VCXI/VKSC_IEVNT value 'COWGT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RECALC_CONSU_REQ type /VCXI/VKSC_IEVNT value 'RECALC_CONSU_REQ' ##NO_TEXT.
  constants C_PARID_COWGT type /VCXI/VKS_PARID value 'ZVCXI_FB_COWGT' ##NO_TEXT.

  methods RECALC_RCWGT
    importing
      !IS_BGWGT type ZVCXI_FBS_S_BGWGT
    returning
      value(RS_RCWGT) type ZVCXI_FBS_S_RCWGT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_MC_CONSU
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FBSP_PR_ACTVY_RECLO definition
class ZCL_VCXI_FBSP_PR_ACTVY_RECLO implementation.
  method GET_COWGT.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COWGT ).
    move LS_PARAM-ATFLV to ES_COWGT-COWGT.
    move LS_PARAM-UNIT  to ES_COWGT-COWGT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_RECALC_MC_CONSU.
        ME->HANDLE_RECALC_MC_CONSU( IT_GATE = IT_GATE_PROVIDER ).

***   Bag Dimensions
      when C_IEVNT_I_RECALC_BGDIM.
        ME->R_GATE->SET_EVENT( IF_IEVNT = ZIF_VCXI_FBSP_ADJ_BGDIM~C_IEVNT_O_BGDIM_CHANGED ).

    endcase.

  endmethod.
  method HANDLE_RECALC_MC_CONSU.

    data: LF_UPDATE_ALL  type        ABAP_BOOL.
    data: LS_MQTYI       type        ZVCXI_XCSP_S_MQTYI.
    data: LT_GATE        type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_PARENT type ref to /VCXI/CL_VKSR_GATE,
          LR_OPERATION   type ref to ZIF_VCXI_XCSP_OPERATION,
          LR_PR_MC       type ref to ZCL_VCXI_XCSP_PR_MC,
          LR_PR_MC_RPART type ref to ZCL_VCXI_FBSP_PR_MC_RPART.

***--------------------------------------------------------------------------------------
*** Should all MC Reclosing Part's updated or just the requester
    read table IT_GATE with key TABLE_LINE = ME->R_GATE transporting no fields.
    if SY-SUBRC = 0.
      LF_UPDATE_ALL = ABAP_TRUE.
    else.
      LR_GATE_PARENT = ME->R_GATE->GET_PARENT( ).
      read table IT_GATE with key TABLE_LINE = LR_GATE_PARENT transporting no fields.
      if SY-SUBRC = 0.
        LF_UPDATE_ALL = ABAP_TRUE.
      endif.
    endif.

***------------------------------------------------------------------
*** Get Machine Quantity
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCSP_OPERATION=>C_IPRVT_XCS_OPERATION
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.

      clear: LR_OPERATION.
      try.
          move LR_GATE->R_CLSPR ?to LR_OPERATION.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_OPERATION.
      endtry.
      if LR_OPERATION is bound.
        move LR_OPERATION->GET_MQTYI( ) to LS_MQTYI.
      endif.

    endif.

***--------------------------------------------------------------------------------------
*** Get all Material Consumptions
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Start Recalc Consumption of all Material Consumptions or just the requester
    loop at LT_GATE into LR_GATE.
      if LF_UPDATE_ALL eq ABAP_FALSE.
        read table IT_GATE with key TABLE_LINE = LR_GATE transporting no fields.
        if SY-SUBRC ne 0.
          continue.
        endif.
      endif.

***   Try Calculation for Reclosing Part
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MC_RPART.
        catch CX_SY_MOVE_CAST_ERROR.
          clear LR_PR_MC_RPART.
      endtry.
      if LR_PR_MC_RPART is bound.
        LR_PR_MC_RPART->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
      else.
***     Calculate standard Consumption
        try.
            move LR_GATE->R_CLSPR ?to LR_PR_MC.
          catch CX_SY_MOVE_CAST_ERROR.
            clear LR_PR_MC.
        endtry.
        if LR_PR_MC is bound.
          LR_PR_MC->CALC_CONSU( IS_MQTYI = LS_MQTYI ).
        endif.
      endif.
    endloop.

  endmethod.
  method RECALC_RCWGT.

    data: LS_RCWGT type ZVCXI_FBS_S_RCWGT,
          LS_COWGT type ZVCXI_FBS_S_COWGT.
    data: LT_GATE  type /VCXI/VKSR_TT_GATE.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MC_RPART type ref to ZCL_VCXI_FBSP_PR_MC_RPART.


    move IS_BGWGT-BGWGT_UOM to RS_RCWGT-RCWGT_UOM.

***--------------------------------------------------------------------------------------
*** Sum up all Reclosing Parts Weight
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSP_PR_MC_RPART=>C_IPRVT_MC_RPART
                                     IF_INUSE = ABAP_TRUE ).
    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_MC_RPART.
      check LR_PR_MC_RPART is bound.

      LR_PR_MC_RPART->GET_RCWGT( importing ES_RCWGT = LS_RCWGT ).

***   Calculate Reclosing Parts Weight
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_RCWGT-RCWGT
                                                          IF_CALCV_UOM_1 = LS_RCWGT-RCWGT_UOM
                                                          IF_CALCV_2     = RS_RCWGT-RCWGT
                                                          IF_CALCV_UOM_2 = RS_RCWGT-RCWGT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = RS_RCWGT-RCWGT
                                                          EF_CALCV_UOM   = RS_RCWGT-RCWGT_UOM ).
    endloop.

*** Get Cutout Weight
    ME->GET_COWGT( importing ES_COWGT = LS_COWGT ).

*** Calculate Reclosing Total Weight
    ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = RS_RCWGT-RCWGT
                                                        IF_CALCV_UOM_1 = RS_RCWGT-RCWGT_UOM
                                                        IF_CALCV_2     = LS_COWGT-COWGT
                                                        IF_CALCV_UOM_2 = LS_COWGT-COWGT_UOM
                                                        IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                              importing EF_CALCV       = RS_RCWGT-RCWGT
                                                        EF_CALCV_UOM   = RS_RCWGT-RCWGT_UOM ).

  endmethod.
  method SET_COWGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COWGT ).

    move IS_COWGT-COWGT     to LS_PARAM-ATFLV.
    move IS_COWGT-COWGT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_COWGT_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_FBSP_ADJ_BGDIM~CALC_BGDIM_OUT.

    data: LS_RCWGT type ZVCXI_FBS_S_RCWGT.
    field-symbols: <S_BGDIM>  type ZVCXI_FBSP_S_BGDIM.

***--------------------------------------------------------------------------------------
*** Get Bag Weight Uom
    read table CT_BGDIM assigning <S_BGDIM> index 1.
    if SY-SUBRC is initial.
      move <S_BGDIM>-BGWGT_UOM to LS_RCWGT-RCWGT_UOM.

***   Retrieve Reclosing Total Weight - Cutout
      move ME->RECALC_RCWGT( <S_BGDIM>-S_BGWGT ) to LS_RCWGT.
    endif.

    check LS_RCWGT-RCWGT is not initial.

***--------------------------------------------------------------------------------------
*** Adjust Bag Dimensions by Bag Weight
    loop at CT_BGDIM assigning <S_BGDIM>.

***   Calculate Total Bag Weight
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = <S_BGDIM>-BGWGT
                                                          IF_CALCV_UOM_1 = <S_BGDIM>-BGWGT_UOM
                                                          IF_CALCV_2     = LS_RCWGT-RCWGT
                                                          IF_CALCV_UOM_2 = LS_RCWGT-RCWGT_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                importing EF_CALCV       = <S_BGDIM>-BGWGT
                                                          EF_CALCV_UOM   = <S_BGDIM>-BGWGT_UOM ).

      if <S_BGDIM>-BGWGT lt 0.
        move 0 to <S_BGDIM>-BGWGT.
      endif.

    endloop.

  endmethod.
