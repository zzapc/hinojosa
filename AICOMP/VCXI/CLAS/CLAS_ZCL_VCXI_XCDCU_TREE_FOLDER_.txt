
class ZCL_VCXI_XCDCU_TREE_FOLDER definition
  public
  final
  create public .

public section.
  type-pools ICON .

  interfaces /VCXI/IF_CKX_OBJECT .
  interfaces /VCXI/IF_CKX_OBJECT_ACTION .

  constants C_GUID_CONDDEF type /VCXI/CKX_GUID value 'CONDDEF'. "#EC NOTEXT
  constants C_GUID_CONDREC type /VCXI/CKX_GUID value 'CONDREC'. "#EC NOTEXT
  data R_UIFW type ref to ZCL_VCXI_XCDCU_UIFW .
  constants C_TOOBJ_TREE_FOLDER type /VCXI/CKX_TOOBJ value 'TREE_FOLDER'. "#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !IF_GUID type /VCXI/CKX_GUID
    raising
      /VCXI/CX_CKX .
  methods GET_SUBNODE_ICON
    returning
      value(RF_ICON) type TV_IMAGE .
protected section.

  data F_GUID type /VCXI/CKX_GUID .
private section.

  class-data T_INSTANCE type /VCXI/CKX_TT_OBJECT_INSTANCE .
endclass. "ZCL_VCXI_XCDCU_TREE_FOLDER definition
class ZCL_VCXI_XCDCU_TREE_FOLDER implementation.
method /VCXI/IF_CKX_OBJECT_ACTION~GET_ACTIONS.

  data:  LF_DISABLED         type CUA_ACTIVE.

*** Create Menu
  create object RR_MENU.

  if ME->R_UIFW->R_DVCCOND->F_CCCORACTIV ne 2.  "Customizing in this client cannot be changed
    move ABAP_FALSE to LF_DISABLED.
  else.
    move ABAP_TRUE  to LF_DISABLED.
  endif.

  case ME->F_GUID.
    when ZCL_VCXI_XCDCU_TREE_FOLDER=>C_GUID_CONDDEF.
***   Add Condition Definition
      RR_MENU->ADD_FUNCTION( FCODE       = ZCL_VCXI_XCDCU_UIFW=>C_UC_ADD_CONDDEF
                             TEXT        = 'Add Condition Definition'(101)
                             DISABLED    = LF_DISABLED ).

    when ZCL_VCXI_XCDCU_TREE_FOLDER=>C_GUID_CONDREC.
***   Add Condition Record
      RR_MENU->ADD_FUNCTION( FCODE       = ZCL_VCXI_XCDCU_UIFW=>C_UC_ADD_CONDREC
                             TEXT        = 'Add Condition Record'(102) ).

  endcase.

endmethod.
method /VCXI/IF_CKX_OBJECT_ACTION~HANDLE_ACTION.

  data:  LF_UCOMM type SYUCOMM.

  if ME->R_UIFW is bound.
    move IF_FCODE to LF_UCOMM.
    ME->R_UIFW->DO_USER_COMMAND( changing CF_UCOMM = LF_UCOMM ).
  endif.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_DESCR.

  case ME->F_GUID.
    when ZCL_VCXI_XCDCU_TREE_FOLDER=>C_GUID_CONDDEF.
      move 'Condition Definition'(D01) to RF_DESCR.
    when ZCL_VCXI_XCDCU_TREE_FOLDER=>C_GUID_CONDREC.
      move 'Condition Record'(D02)     to RF_DESCR.
  endcase.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_DESCR_ALL.
endmethod.
method /VCXI/IF_CKX_OBJECT~GET_GUID.

  move ME->F_GUID to RF_GUID.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_ID.

  move ME->F_GUID to RF_ID.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_INSTANCE.

  data:  LS_INSTANCE       type        /VCXI/CKX_S_OBJECT_INSTANCE.
  data:  LR_TREE_FOLDER    type ref to ZCL_VCXI_XCDCU_TREE_FOLDER.

  check IF_GUID is not initial.

  read table ZCL_VCXI_XCDCU_TREE_FOLDER=>T_INSTANCE into LS_INSTANCE with key GUID = IF_GUID.
  if SY-SUBRC eq 0.
    move LS_INSTANCE-R_OBJECT to RR_OBJECT.
  else.
*** Get new Instance
    create object LR_TREE_FOLDER
      exporting
        IF_GUID = IF_GUID.
    move LR_TREE_FOLDER ?to RR_OBJECT.
  endif.

endmethod.
method /VCXI/IF_CKX_OBJECT~GET_LOG.
endmethod.
method CONSTRUCTOR.

  field-symbols: <S_INSTANCE> type /VCXI/CKX_S_OBJECT_INSTANCE.

  move IF_GUID to ME->F_GUID.

***------------------------------------------------------------------------------------------------
*** Define Type of Object
  move C_TOOBJ_TREE_FOLDER to ME->/VCXI/IF_CKX_OBJECT~F_TOOBJ.

*** Add instance to instance buffer
  append initial line to ZCL_VCXI_XCDCU_TREE_FOLDER=>T_INSTANCE assigning <S_INSTANCE>.
  move ME->/VCXI/IF_CKX_OBJECT~GET_GUID( )  to <S_INSTANCE>-GUID.
  move ME                                  ?to <S_INSTANCE>-R_OBJECT.

endmethod.
method GET_SUBNODE_ICON.

  case ME->F_GUID.
    when ZCL_VCXI_XCDCU_TREE_FOLDER=>C_GUID_CONDDEF.
      move ICON_COMPONENT_IF_DEF         to RF_ICON.

    when ZCL_VCXI_XCDCU_TREE_FOLDER=>C_GUID_CONDREC.
      move ICON_COMPONENT_IF_DEFS        to RF_ICON.
  endcase.

endmethod.
