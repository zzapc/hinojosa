
class ZCL_VCXI_P0SSC_UIC_PRSTY definition
  public
  final
  create public .

public section.

  data S_TPRST type ZVCXI_P0SSC_S_TPRST read-only .
  data S_DYNP type /VCXI/CKX_S_DYNP_KEY .

  methods COPY_PRSTY
    importing
      !IF_PRSTY type ZVCXI_P0SS_PRSTY
    raising
      /VCXI/CX_CKX .
  methods ADD_PRSTY
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_TPRST type ZVCXI_P0SS_TPRST
    raising
      /VCXI/CX_CKX .
  methods DELETE_PRSTY
    importing
      !IT_PRSTY type ZVCXI_P0SSC_TT_PRSTY
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  methods GET_ALL_PRSTY
    returning
      value(RT_PRSTY) type ZVCXI_P0SSC_TT_PRSTY
    raising
      /VCXI/CX_CKX .
  type-pools ABAP .
  methods OPEN_PRSTY
    importing
      !IF_CHANGE type ABAP_BOOL default 'X'
      !IF_PRSTY type ZVCXI_P0SS_PRSTY
    raising
      /VCXI/CX_CKX .
  class-methods START_UI
    importing
      !IF_TPRST type ZVCXI_P0SS_TPRST
    raising
      /VCXI/CX_CKX .
protected section.

  data R_GRID_PRSTY type ref to ZCL_VCXI_P0SSC_GRID_PRSTY .

  methods CALL_CUST
    importing
      !IF_VCLNAME type VCL_NAME
    raising
      /VCXI/CX_CKX .
  methods CALL_DETAIL_SCREEN
    raising
      /VCXI/CX_CKX .
  methods SET_PFSTATUS
    raising
      /VCXI/CX_CKX .
  methods SET_TITLE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_P0SSC_UIC_PRSTY definition
class ZCL_VCXI_P0SSC_UIC_PRSTY implementation.
method ADD_PRSTY.

  data:          LF_RETURN           type                   ABAP_BOOL,
                 LF_PRSTY            type                   ZVCXI_P0SS_PRSTY,
                 LF_EXIT             type                   ABAP_BOOL,
                 LF_CREATE           type                   ABAP_BOOL.
  data:          LT_PRSTY            type                   ZVCXI_P0SSC_TT_PRSTY,
                 LT_SVAL             type standard table of SVAL.
  data:          LR_PRSTY            type ref to            ZCL_VCXI_P0SSC_PRSTY.
  field-symbols: <S_FIELD>           type                   SVAL.

***----------------------------------------------------------------------------
*** Get Product Style Entries
  LT_PRSTY = ME->GET_ALL_PRSTY( ).

***----------------------------------------------------------------------------
*** Create PopUp for User-Entry
  append initial line to LT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME   = 'ZVCXI_P0S_TC200'.
  <S_FIELD>-FIELDNAME = 'PRSTY'.

  do.

    call function 'POPUP_GET_VALUES'
      exporting
        POPUP_TITLE     = 'Create new Product Style'(100)
      importing
        RETURNCODE      = LF_RETURN
      tables
        FIELDS          = LT_SVAL
      exceptions
        ERROR_IN_FIELDS = 1
        others          = 2.
    if SY-SUBRC ne 0 or
      LF_RETURN eq 'A'.
      clear LT_SVAL.
      LF_EXIT = ABAP_TRUE.
      exit.
    endif.

    check LT_SVAL is not initial.
    read table LT_SVAL assigning <S_FIELD> index 1.

    if <S_FIELD>-VALUE is not initial.
      move <S_FIELD>-VALUE to LF_PRSTY.

      read table LT_PRSTY with key TPRST = ME->S_TPRST-TPRST
                                   PRSTY = LF_PRSTY
                          transporting no fields.
      if SY-SUBRC = 0.
***     Product Style already exist.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
            IF_MSGTY = 'E'
            IF_MSGID = 'ZVCXI_P0SSC'
            IF_MSGNO = '009' ).
      endif.

      LR_PRSTY = ZCL_VCXI_P0SSC_PRSTY=>CREATE( IF_TPRST = ME->S_TPRST-TPRST
                                               IF_PRSTY = LF_PRSTY ).
***   Save Changes -> Delte from DB
      LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_SAVE ).

***   Free Instance
      LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_FREE ).

      LF_CREATE = ABAP_TRUE.
    endif.

    if LF_CREATE eq ABAP_TRUE or
       LF_EXIT   eq ABAP_TRUE.
      exit.
    endif.

  enddo.

  if LF_EXIT = ABAP_TRUE.
    exit.
  endif.

*** Call Detail Screen
  ZCL_VCXI_P0SSC_UI_PRSTY=>START_UI( IF_TPRST  = ME->S_TPRST-TPRST
                                     IF_PRSTY  = LF_PRSTY
                                     IF_CHANGE = ABAP_TRUE ).

endmethod.
method CALL_CUST.

  call function 'VIEWCLUSTER_MAINTENANCE_CALL'
    exporting
      VIEWCLUSTER_NAME             = IF_VCLNAME
      MAINTENANCE_ACTION           = 'S'
      SHOW_SELECTION_POPUP         = SPACE
      NO_WARNING_FOR_CLIENTINDEP   = SPACE
    exceptions
      CLIENT_REFERENCE             = 1
      FOREIGN_LOCK                 = 2
      VIEWCLUSTER_NOT_FOUND        = 3
      VIEWCLUSTER_IS_INCONSISTENT  = 4
      MISSING_GENERATED_FUNCTION   = 5
      NO_UPD_AUTH                  = 6
      NO_SHOW_AUTH                 = 7
      OBJECT_NOT_FOUND             = 8
      NO_TVDIR_ENTRY               = 9
      NO_CLIENTINDEP_AUTH          = 10
      INVALID_ACTION               = 11
      SAVING_CORRECTION_FAILED     = 12
      SYSTEM_FAILURE               = 13
      UNKNOWN_FIELD_IN_DBA_SELLIST = 14
      MISSING_CORR_NUMBER          = 15
      others                       = 16.

  if SY-SUBRC ne 0.
    raise exception type /VCXI/CX_CKX
     exporting
        F_MSGTY = 'I'
        F_MSGID = SY-MSGID
        F_MSGNO = SY-MSGNO
        F_MSGV1 = SY-MSGV1
        F_MSGV2 = SY-MSGV2
        F_MSGV3 = SY-MSGV3
        F_MSGV4 = SY-MSGV4.

  endif.

endmethod.
method CALL_DETAIL_SCREEN.


*** Start UI Customizing Detail


endmethod.
method CONSTRUCTOR.

  data: LS_TPRST_T type ZVCXI_P0S_TC300T.

***--------------------------------------------------------------------------------------
*** Check Authorization
  ZCL_VCXI_P0SSC_PRSTY=>CHECK_AUTH( IF_ACTVT = ZCL_VCXI_P0SSC_PRSTY=>C_ACTVT_DISPLAY
                                    IF_ID    = IF_TPRST ).

***--------------------------------------------------------------------------------------
*** Set Product Style Type
  select single * from ZVCXI_P0S_TC300
  into corresponding fields of ME->S_TPRST
  where TPRST = IF_TPRST.

  select single * from ZVCXI_P0S_TC300T
  into corresponding fields of LS_TPRST_T
  where TPRST = IF_TPRST
    and LANGU = SY-LANGU.

  if SY-SUBRC = 0.
    move LS_TPRST_T-DESCR to ME->S_TPRST-TPRST_DESCR.
  endif.

*** Bind UI Customizing
  call function 'ZVCXI_P0SSC_UIC_PRSTY_BIND'
    exporting
      IR_UIC_PRSTY = ME
    importing
      ES_DYNP      = ME->S_DYNP.

*** Create Product Style Grid
  create object ME->R_GRID_PRSTY
    exporting
      IF_TABNAME        = 'ZVCXI_P0SSC_S_PRSTY_GRID'
      IF_CONTAINER_NAME = '0100CC_PRSTY'
      IR_CUSTOMIZING    = ME.

endmethod.
method COPY_PRSTY.

  data:          LF_RETURN           type                   ABAP_BOOL,
                 LF_PRSTY            type                   ZVCXI_P0SS_PRSTY,
                 LF_EXIT             type                   ABAP_BOOL,
                 LF_CREATE           type                   ABAP_BOOL.
  data:          LT_PRSTY            type                   ZVCXI_P0SSC_TT_PRSTY,
                 LT_SVAL             type standard table of SVAL.
  data:          LR_PRSTY            type ref to            ZCL_VCXI_P0SSC_PRSTY.
  field-symbols: <S_FIELD>           type                   SVAL.

***----------------------------------------------------------------------------
*** Get Product Style Entries
  LT_PRSTY = ME->GET_ALL_PRSTY( ).

***----------------------------------------------------------------------------
*** Create PopUp for User-Entry
  append initial line to LT_SVAL assigning <S_FIELD>.
  <S_FIELD>-TABNAME   = 'ZVCXI_P0S_TC200'.
  <S_FIELD>-FIELDNAME = 'PRSTY'.

  do.

    call function 'POPUP_GET_VALUES'
      exporting
        POPUP_TITLE     = 'Create new Product Style'(100)
      importing
        RETURNCODE      = LF_RETURN
      tables
        FIELDS          = LT_SVAL
      exceptions
        ERROR_IN_FIELDS = 1
        others          = 2.
    if SY-SUBRC ne 0 or
      LF_RETURN eq 'A'.
      clear LT_SVAL.
      LF_EXIT = ABAP_TRUE.
      exit.
    endif.

    check LT_SVAL is not initial.
    read table LT_SVAL assigning <S_FIELD> index 1.

    if <S_FIELD>-VALUE is not initial.
      move <S_FIELD>-VALUE to LF_PRSTY.

      read table LT_PRSTY with key TPRST = ME->S_TPRST-TPRST
                                   PRSTY = LF_PRSTY
                          transporting no fields.
      if SY-SUBRC = 0.
***     Product Style already exist.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
            IF_MSGTY = 'E'
            IF_MSGID = 'ZVCXI_P0SSC'
            IF_MSGNO = '009' ).
      endif.

      LR_PRSTY = ZCL_VCXI_P0SSC_PRSTY=>COPY( IF_TPRST     = ME->S_TPRST-TPRST
                                             IF_PRSTY_NEW = LF_PRSTY
                                             IF_PRSTY_OLD = IF_PRSTY ).
***   Save Changes -> Delte from DB
      LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_SAVE ).

***   Free Instance
      LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_FREE ).
      LF_CREATE = ABAP_TRUE.
    endif.

    if LF_CREATE eq ABAP_TRUE or
       LF_EXIT   eq ABAP_TRUE.
      exit.
    endif.

  enddo.

  if LF_EXIT = ABAP_TRUE.
    exit.
  endif.

*** Call Detail Screen
  check LR_PRSTY is bound.
  ZCL_VCXI_P0SSC_UI_PRSTY=>START_UI( IF_TPRST  = LR_PRSTY->S_PRSTY-TPRST
                                     IF_PRSTY  = LR_PRSTY->S_PRSTY-PRSTY
                                     IF_CHANGE = ABAP_TRUE ).

endmethod.
method DELETE_PRSTY.

  data: LF_GUID   type        /VCXI/CKX_GUID.
  data: LS_PRSTY  type        ZVCXI_P0SSC_S_PRSTY.
  data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
        LR_PRSTY  type ref to ZCL_VCXI_P0SSC_PRSTY.

  loop at IT_PRSTY into LS_PRSTY.

    clear: LF_GUID.
*** Get GUID
    LF_GUID = ZCL_VCXI_P0SSC_PRSTY=>ENCRYPT_GUID( IF_TPRST = ME->S_TPRST-TPRST
                                                  IF_PRSTY = LS_PRSTY-PRSTY ).

    LR_OBJECT = ZCL_VCXI_P0SSC_PRSTY=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
    try.
        move LR_OBJECT ?to LR_PRSTY.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PRSTY.
    endtry.

    check LR_PRSTY is bound.

*** Delete Instance
    LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_DELETE ).

*** Save Changes -> Delte from DB
    LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_SAVE ).

*** Free Instance
    LR_PRSTY->HANDLE_ACTION( IF_FCODE = ZCL_VCXI_P0SSC_PRSTY=>C_FCODE_PRSTY_FREE ).

    free: LR_PRSTY.

  endloop.

endmethod.
method DO_PBO.

*** Set Title and GUI-Status
  ME->SET_PFSTATUS( ).
  ME->SET_TITLE( ).

*** Refresh Grid
  if ME->R_GRID_PRSTY is bound.
    move ABAP_TRUE to ME->R_GRID_PRSTY->F_REFRESH_REQ.
    ME->R_GRID_PRSTY->REFRESH_GRID( ).
  endif.

endmethod.
method DO_USER_COMMAND.

  constants LC_VCLNAME type        VCL_NAME value 'ZVCXI_'.
  data:     LF_VCLNAME type        VCL_NAME.

  case IF_UCOMM.
    when 'BACK' or 'CANCEL'.
      leave to screen 0.

    when 'EXIT'.
      leave program.

    when others.
***       Call Standard View
      if IF_UCOMM cs 'P0SS_'.
        concatenate LC_VCLNAME IF_UCOMM into LF_VCLNAME.

        ME->CALL_CUST( IF_VCLNAME = LF_VCLNAME ).

***       Call Special Folding Degree Customizing
      elseif IF_UCOMM cs 'CUST_FODEG'.
        check ME->S_TPRST-VCNFD is not initial.
        ME->CALL_CUST( IF_VCLNAME = ME->S_TPRST-VCNFD ).
      endif.

  endcase.

endmethod.
method GET_ALL_PRSTY.

  data:          LT_PRSTY_DESCR type table of ZVCXI_P0S_TC200T.
  data:          LS_PRSTY_DESCR type          ZVCXI_P0S_TC200T.
  field-symbols: <S_PRSTY>      type          ZVCXI_P0SSC_S_PRSTY.

*** Select Product Styles
  select * from ZVCXI_P0S_TC200
           into corresponding fields of table RT_PRSTY
          where TPRST eq ME->S_TPRST-TPRST.
  check SY-SUBRC = 0.

*** Select Product Style Description
  select * from ZVCXI_P0S_TC200T
           into corresponding fields of table LT_PRSTY_DESCR
           for all entries in RT_PRSTY
          where TPRST eq RT_PRSTY-TPRST
           and  PRSTY eq RT_PRSTY-PRSTY
           and  LANGU eq SY-LANGU.
  check SY-SUBRC = 0.

*** Add Desription Information
  loop at LT_PRSTY_DESCR into LS_PRSTY_DESCR.
    read table RT_PRSTY assigning <S_PRSTY>
                        with key TPRST = LS_PRSTY_DESCR-TPRST
                                 PRSTY = LS_PRSTY_DESCR-PRSTY.
    check SY-SUBRC = 0.

    move LS_PRSTY_DESCR-DESCR to <S_PRSTY>-PRSTY_DESCR.
  endloop.

endmethod.
method OPEN_PRSTY.

  data: LF_GUID   type        /VCXI/CKX_GUID.
  data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
        LR_PRSTY  type ref to ZCL_VCXI_P0SSC_PRSTY.

  check IF_PRSTY is not initial.
  clear: LF_GUID.
*** Get GUID
  LF_GUID = ZCL_VCXI_P0SSC_PRSTY=>ENCRYPT_GUID( IF_TPRST = ME->S_TPRST-TPRST
                                                IF_PRSTY = IF_PRSTY ).

  LR_OBJECT = ZCL_VCXI_P0SSC_PRSTY=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
  try.
      move LR_OBJECT ?to LR_PRSTY.
    catch CX_SY_MOVE_CAST_ERROR.
      clear: LR_PRSTY.
  endtry.

  check LR_PRSTY is bound.

*** Call Detail Screen
  ZCL_VCXI_P0SSC_UI_PRSTY=>START_UI( IF_TPRST  = ME->S_TPRST-TPRST
                                     IF_PRSTY  = IF_PRSTY
                                     IF_CHANGE = IF_CHANGE ).


endmethod.
method SET_PFSTATUS.

  data:  LT_EXCLUDE type standard table of SYUCOMM.

***----------------------------------------------------------------------------
*** If no TakeUp Customizing is Defined, do not show
  if ME->S_TPRST-VCNFD is initial.
    append 'CUST_FODEG' to LT_EXCLUDE.
  endif.

***----------------------------------------------------------------------------
*** Set PF-Status
  set pf-status '0100' of program ME->S_DYNP-REPID excluding LT_EXCLUDE.

endmethod.
method SET_TITLE.

  set titlebar '0100' of program ME->S_DYNP-REPID.

endmethod.
method START_UI.

  data:  LR_UIC_PRSTY type ref to ZCL_VCXI_P0SSC_UIC_PRSTY.

*** Create Instance of Product Style Customizing
  create object LR_UIC_PRSTY
    exporting
      IF_TPRST = IF_TPRST.

  call function 'ZVCXI_P0SSC_UIC_PRSTY_START'.

endmethod.
