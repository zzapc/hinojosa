
class ZCL_VCXI_PXSP_PR_MC_WPATCH definition
  public
  inheriting from ZCL_VCXI_XCSP_PR_MC
  abstract
  create public .

public section.

  constants C_IPRVT_PX_MC_WPATCH type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSP_MC_WPATCH' ##NO_TEXT.
  constants C_PARID_WPLEN type /VCXI/VKS_PARID value 'ZVCXI_PX_WPLEN' ##NO_TEXT.
  constants C_PARID_WPARE type /VCXI/VKS_PARID value 'ZVCXI_PX_WPARE' ##NO_TEXT.
  constants C_PARID_WPWID type /VCXI/VKS_PARID value 'ZVCXI_PX_WPWID' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_WPLEN
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RS_WPLEN) type ZVCXI_PXS_S_WPLEN
    raising
      /VCXI/CX_CKX .
  methods GET_WPWID
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RS_WPWID) type ZVCXI_PXS_S_WPWID
    raising
      /VCXI/CX_CKX .
  methods GET_WPARE
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_FOVRR type ZVCXI_XCS_FOVRR
    returning
      value(RS_WPARE) type ZVCXI_PXS_S_WPARE
    raising
      /VCXI/CX_CKX .
  methods SET_WPLEN
    importing
      !IS_WPLEN type ZVCXI_PXS_S_WPLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_WPWID
    importing
      !IS_WPWID type ZVCXI_PXS_S_WPWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_WPARE
    importing
      !IS_WPARE type ZVCXI_PXS_S_WPARE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
protected section.

  methods INIT_DIM_PARAM
    raising
      /VCXI/CX_CKX .
private section.

  constants C_IEVNT_O_WPLEN_CHANGED type /VCXI/VKSC_IEVNT value 'WPLEN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_WPWID_CHANGED type /VCXI/VKSC_IEVNT value 'WPWID_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_WPARE_CHANGED type /VCXI/VKSC_IEVNT value 'WPARE_CHANGED' ##NO_TEXT.
endclass. "ZCL_VCXI_PXSP_PR_MC_WPATCH definition
class ZCL_VCXI_PXSP_PR_MC_WPATCH implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Initialize right Pramameter dimensions
    ME->INIT_DIM_PARAM( ).

  endmethod.
  method GET_WPARE.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->C_PARID_WPARE ).
    move LS_PARAM-ATFLV to RS_WPARE-WPARE.
    move LS_PARAM-UNIT  to RS_WPARE-WPARE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

    if EF_SETBY is not initial.
      EF_FOVRR = switch #( EF_SETBY when /VCXI/CL_VKSR_GATE=>C_SETBY_USER then ABAP_TRUE
                                                                          else ABAP_FALSE ).
    endif.

  endmethod.
  method GET_WPLEN.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->C_PARID_WPLEN ).
    move LS_PARAM-ATFLV to RS_WPLEN-WPLEN.
    move LS_PARAM-UNIT  to RS_WPLEN-WPLEN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

    if EF_SETBY is not initial.
      EF_FOVRR = switch #( EF_SETBY when /VCXI/CL_VKSR_GATE=>C_SETBY_USER then ABAP_TRUE
                                                                          else ABAP_FALSE ).
    endif.

  endmethod.
  method GET_WPWID.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->C_PARID_WPWID ).
    move LS_PARAM-ATFLV to RS_WPWID-WPWID.
    move LS_PARAM-UNIT  to RS_WPWID-WPWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

    if EF_SETBY is not initial.
      EF_FOVRR = switch #( EF_SETBY when /VCXI/CL_VKSR_GATE=>C_SETBY_USER then ABAP_TRUE
                                                                          else ABAP_FALSE ).
    endif.

  endmethod.
  method INIT_DIM_PARAM.

    data:  LS_PARAM    type /VCXI/VKSR_S_PARAM.
    data:  LT_PARAM    type /VCXI/VKSR_TT_PARAM.


    LT_PARAM = ME->R_GATE->GET_PARAM_ALL( ).

*** Consumption
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_CONSU_A or
                            PARID eq C_PARID_CONSU_L or
                            PARID eq C_PARID_CONSU_P or
                            PARID eq C_PARID_CONSU_W ).
      move LS_PARAM-PARID to ME->F_PARID_CONSU.
      exit.
    endloop.

*** Price Per
    loop at LT_PARAM into LS_PARAM
                    where PARTY eq /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                     and  ( PARID eq C_PARID_PRICP_A or
                            PARID eq C_PARID_PRICP_L or
                            PARID eq C_PARID_PRICP_P or
                            PARID eq C_PARID_PRICP_W ).
      move LS_PARAM-PARID to ME->F_PARID_PRICP.
      exit.
    endloop.

  endmethod.
  method SET_WPARE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->C_PARID_WPARE ).

    move IS_WPARE-WPARE     to LS_PARAM-ATFLV.
    move IS_WPARE-WPARE_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_WPARE_CHANGED ).
    endif.

  endmethod.
  method SET_WPLEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->C_PARID_WPLEN ).

    move IS_WPLEN-WPLEN     to LS_PARAM-ATFLV.
    move IS_WPLEN-WPLEN_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_WPLEN_CHANGED ).
    endif.

  endmethod.
  method SET_WPWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.


    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = ME->C_PARID_WPWID ).

    move IS_WPWID-WPWID     to LS_PARAM-ATFLV.
    move IS_WPWID-WPWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_WPWID_CHANGED ).
    endif.

  endmethod.
