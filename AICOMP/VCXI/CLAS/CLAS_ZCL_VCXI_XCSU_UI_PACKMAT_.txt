
class ZCL_VCXI_XCSU_UI_PACKMAT definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  interfaces /VCXI/IF_VKSU_UIFW .

  data F_CURSOR type SCRFNAME .
  data F_DYNNR_SUBSC_PSCALE type DYNNR .
  data S_PACKMAT_VIS type ZVCXI_XCSU_S_PACKMAT_VIS .

  methods CALL_SHLP_CONSC
    returning
      value(RF_CONSC) type ZVCXI_XCSU_CONSC
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_PAMAI
    returning
      value(RF_PAMAI) type ZVCXI_XCSU_PAMAI
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_PMATN
    returning
      value(RF_PMATN) type ZVCXI_XCSU_PMATN
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_PMATY
    returning
      value(RF_PMATY) type ZVCXI_XCSU_PMATY
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_PACKMAT_VIS
    importing
      !IS_PACKMAT_VIS type ZVCXI_XCSU_S_PACKMAT_VIS
    raising
      /VCXI/CX_CKX .
  methods GET_REGISTERED_UI_INFO
    returning
      value(RS_DYNP) type /VCXI/CKX_S_DYNP_KEY
    exceptions
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  constants C_DYNNR_INITIAL type DYNNR value '9999'. "#EC NOTEXT
  constants C_DYNNR_PSCALE type DYNNR value '0110'. "#EC NOTEXT
  data R_GRID_EFFCT type ref to ZCL_VCXI_XCSU_GRID_EFFCT .
  data R_PR_PACKMAT type ref to ZCL_VCXI_XCSU_PR_PACKMAT .
  data R_REGISTERED_UI type ref to /VCXI/CL_VKSU_CLSUI .
  data S_DYNP_BLANK type /VCXI/CKX_S_DYNP_KEY .
  type-pools ABAP .
  data F_ALREADY_OPEN type ABAP_BOOL .
  constants C_UCOMM_SCALE type SYUCOMM value 'UC0100_SCALE'. "#EC NOTEXT

  methods DISPLAY_ACTIVE_SCALE
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .
  methods OPEN_SUBSCREEN
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_CLSUI) type ref to /VCXI/CL_VKSRU_CLSUI
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.

  methods INIT_BLANK_UI
    raising
      /VCXI/CX_CKX .
endclass. "ZCL_VCXI_XCSU_UI_PACKMAT definition
class ZCL_VCXI_XCSU_UI_PACKMAT implementation.
method /VCXI/IF_VKSU_UIFW~DO_MODIFY_SCREEN.

  if ME->R_REGISTERED_UI is bound.
    ME->R_REGISTERED_UI->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                           IF_DYNNR = IF_DYNNR ).
  endif.

endmethod.
method /VCXI/IF_VKSU_UIFW~DO_USER_COMMAND.

  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.
      if ME->R_REGISTERED_UI is bound.
        ME->R_REGISTERED_UI->DO_USER_COMMAND( IF_UCOMM = CF_UCOMM ).
      endif.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      LR_CX_CKX->SHOW_MESSAGE( ).
  endtry.

endmethod.
method /VCXI/IF_VKSU_UIFW~REFRESH_SCREEN.

  ME->R_UIFW->REFRESH_SCREEN( ).

endmethod.
method /VCXI/IF_VKSU_UIFW~REGISTER_UI.

  do.
    if ME->R_REGISTERED_UI is not bound.
      exit.
    endif.
    ME->R_REGISTERED_UI->DEACTIVATE( ).
  enddo.

  move IR_UI to ME->R_REGISTERED_UI.

endmethod.
method /VCXI/IF_VKSU_UIFW~UNREGISTER_UI.

  if IR_UI eq ME->R_REGISTERED_UI.
    clear ME->R_REGISTERED_UI.
  endif.

endmethod.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_XCSU_UI_PACKMAT_BIND'
    exporting
      IR_UI_PACKMAT = ME
    importing
      ES_DYNP       = ME->S_DYNP.

*** Create Grid for Effect
  create object ME->R_GRID_EFFCT
    exporting
      IR_GATE           = ME->R_GATE
      IR_UIGATE         = ME->R_UIGATE
      IF_CONTAINER_NAME = '0100CC_GRID_EFFCT'.

endmethod.
method CALL_SHLP_CONSC.

  RF_CONSC = ME->R_PR_PACKMAT->CALL_SHLP_CONSC( ).

endmethod.
method CALL_SHLP_PAMAI.

  RF_PAMAI = ME->R_PR_PACKMAT->CALL_SHLP_PAMAI( ).

endmethod.
method CALL_SHLP_PMATN.

  RF_PMATN = ME->R_PR_PACKMAT->CALL_SHLP_PMATN( ).

endmethod.
method CALL_SHLP_PMATY.

  RF_PMATY = ME->R_PR_PACKMAT->CALL_SHLP_PMATY( ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_PACKMAT.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

*** Initialize Blank UI
  ME->INIT_BLANK_UI( ).

endmethod.
method DEACTIVATE.

  SUPER->DEACTIVATE( ).

  if ME->R_GRID_EFFCT is bound.
    ME->R_GRID_EFFCT->DO_FREE( ).
    clear ME->R_GRID_EFFCT.
  endif.

  if ME->R_REGISTERED_UI is bound.
    ME->R_REGISTERED_UI->DEACTIVATE( ).
  endif.

endmethod.
method DISPLAY_ACTIVE_SCALE.

  data:  LT_GATE        type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE        type ref to /VCXI/CL_VKSR_GATE.

  check ME->F_ALREADY_OPEN eq ABAP_FALSE.

***------------------------------------------------------------------
*** Get Price Scale Manager
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_XCS_PSCALE_MGR=>C_IPRVT_XCS_PSCALE_MGR
                                   IF_INUSE = ABAP_TRUE ).

  read table LT_GATE into LR_GATE index 1.
  check LR_GATE is bound.

  ME->OPEN_SUBSCREEN( IR_GATE = LR_GATE ).

endmethod.
method DO_MODIFY_SCREEN.

  data: LF_LOCKED type /VCXI/CKX_LOCKED,
        LF_INUSE  type /VCXI/VKSR_INUSE.


  SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                           IF_DYNNR = IF_DYNNR ).

  try.

      if IF_REPID eq ME->S_DYNP-REPID and
         IF_DYNNR eq ME->S_DYNP-DYNNR.

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).


***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          case SCREEN-GROUP1.
***         Only changeable if Override Flag is set.
            when 'FOC'.
              if ME->R_PR_PACKMAT->GET_FOVRR_CONSC( ) eq ABAP_FALSE.
                move 0 to SCREEN-INPUT.
              endif.

***         Only changeable if Override Flag is set.
            when 'FOP'.
              if ME->R_PR_PACKMAT->GET_FOVRR_PMQTY( ) eq ABAP_FALSE.
                move 0 to SCREEN-INPUT.
              endif.

***         Only changeable if Purchase Info is set.
            when 'PUR'.
              if ME->R_PR_PACKMAT->GET_PURCH( ) eq ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.
                move 0 to SCREEN-INPUT.
              endif.

***         Only changeable if it is a Dummy Material
            when 'FPU'.
              if ME->R_PR_PACKMAT->IS_DUMMY( ) eq ABAP_TRUE.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.

          case SCREEN-GROUP2.
***         Price is Scaled -> hide Price Fields
            when 'PRI'.
              if ME->R_PR_PACKMAT->GET_PURCH( ) ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE or
                 ME->R_PR_PACKMAT->GET_SCALE( ) eq ABAP_TRUE.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
                move 0 to SCREEN-INPUT.
              endif.

***         Price can't be Scaled -> hide Scale Field
            when 'SCA'.
              if ME->R_PR_PACKMAT->GET_PURCH( )       ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE or
                 ME->R_PR_PACKMAT->IS_SCALE_ACTIVE( ) eq ABAP_FALSE.
                move 1 to SCREEN-INVISIBLE.
                move 0 to SCREEN-ACTIVE.
                move 0 to SCREEN-INPUT.
              endif.
          endcase.

          modify screen.
        endloop.
      endif.

    catch /VCXI/CX_CKX into data(LR_CX_CKX).
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Check if the PR Class is bound
  check ME->R_PR_PACKMAT is bound.

  ME->INIT_VIS( ).
  ME->DISPLAY_ACTIVE_SCALE( ).

*** Set Screen for Price Scale Manager Active
  if ME->GET_REGISTERED_UI_INFO( ) is not initial and
     ME->R_PR_PACKMAT->GET_SCALE( ) eq ABAP_TRUE.
    move C_DYNNR_PSCALE to ME->F_DYNNR_SUBSC_PSCALE.
  else.
    move C_DYNNR_INITIAL to ME->F_DYNNR_SUBSC_PSCALE.
  endif.

*** Set Refresh to Effect Grid
  if ME->R_GRID_EFFCT is bound.
    if ME->R_GRID_EFFCT->F_REFRESH_REQ eq ABAP_FALSE.
      move ABAP_TRUE to ME->R_GRID_EFFCT->F_REFRESH_REQ.
    endif.
    ME->R_GRID_EFFCT->REFRESH_GRID( ).
  endif.

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
method DO_UPDATE_PACKMAT_VIS.

*** Update Packaging Material
  if ME->S_PACKMAT_VIS-PMATN ne IS_PACKMAT_VIS-PMATN.
    ME->R_PR_PACKMAT->SET_PMATN( IF_PMATN = IS_PACKMAT_VIS-PMATN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Update Packaging Material Information
  if ME->S_PACKMAT_VIS-PAMAI ne IS_PACKMAT_VIS-PAMAI.
    ME->R_PR_PACKMAT->SET_PAMAI( IF_PAMAI = IS_PACKMAT_VIS-PAMAI
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Update Text
  if ME->S_PACKMAT_VIS-TEXT ne IS_PACKMAT_VIS-TEXT.
    ME->R_PR_PACKMAT->SET_TEXT( IF_TEXT  = IS_PACKMAT_VIS-TEXT
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Update Consumption Scheme if it is "Overriden"
  if ME->S_PACKMAT_VIS-FOVRR_CONSC eq ABAP_TRUE.
    if ME->S_PACKMAT_VIS-CONSC ne IS_PACKMAT_VIS-CONSC.
      ME->R_PR_PACKMAT->SET_CONSC( IF_CONSC = IS_PACKMAT_VIS-CONSC
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endif.

*** Update Packaging Material Quantity if it is "Overriden"
  if ME->S_PACKMAT_VIS-FOVRR_PMQTY eq ABAP_TRUE.
    if ME->S_PACKMAT_VIS-PMQTY ne IS_PACKMAT_VIS-PMQTY.
      ME->R_PR_PACKMAT->SET_PMQTY( IS_PMQTY = IS_PACKMAT_VIS-S_PMQTY
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endif.

*** Set Flag Override Consumption Scheme
  if ME->S_PACKMAT_VIS-FOVRR_CONSC ne IS_PACKMAT_VIS-FOVRR_CONSC.
    ME->R_PR_PACKMAT->SET_FOVRR_CONSC( IF_FOVRR = IS_PACKMAT_VIS-FOVRR_CONSC ).
  endif.

*** Set Flag Override Packaging Material Quantity
  if ME->S_PACKMAT_VIS-FOVRR_PMQTY ne IS_PACKMAT_VIS-FOVRR_PMQTY.
    ME->R_PR_PACKMAT->SET_FOVRR_PMQTY( IF_FOVRR = IS_PACKMAT_VIS-FOVRR_PMQTY ).
  endif.

*** Set Flag Override Effects
  if ME->S_PACKMAT_VIS-FOVRR_EFFCT ne IS_PACKMAT_VIS-FOVRR_EFFCT.
    ME->R_PR_PACKMAT->SET_FOVRR_EFFCT( IF_FOVRR = IS_PACKMAT_VIS-FOVRR_EFFCT ).
  endif.

*** Update Procurement Option
  if ME->S_PACKMAT_VIS-PURCH ne IS_PACKMAT_VIS-PURCH.
    ME->R_PR_PACKMAT->SET_PURCH( IF_PURCH = IS_PACKMAT_VIS-PURCH
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Procurement Information
  if ME->S_PACKMAT_VIS-SCALE ne IS_PACKMAT_VIS-SCALE.
    ME->R_PR_PACKMAT->SET_SCALE( IF_SCALE = IS_PACKMAT_VIS-SCALE ).
  endif.

  if ME->S_PACKMAT_VIS-PRICE ne IS_PACKMAT_VIS-PRICE.
    ME->R_PR_PACKMAT->SET_PRICE( IS_PRICE = IS_PACKMAT_VIS-S_PRICE
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_PACKMAT_VIS-PRICP ne IS_PACKMAT_VIS-PRICP.
    ME->R_PR_PACKMAT->SET_PRICP( IS_PRICP = IS_PACKMAT_VIS-S_PRICP
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if ME->S_PACKMAT_VIS-LIFNR ne IS_PACKMAT_VIS-LIFNR.
    ME->R_PR_PACKMAT->SET_LIFNR( IF_LIFNR = IS_PACKMAT_VIS-LIFNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
method DO_USER_COMMAND.

  data:  LF_UCOMM      type SYUCOMM.

  SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  if ME->R_GRID_EFFCT is bound.
    ME->R_GRID_EFFCT->CHECK_CHANGED_DATA( ).
  endif.

  move IF_UCOMM to LF_UCOMM.
  ME->/VCXI/IF_VKSU_UIFW~DO_USER_COMMAND( changing CF_UCOMM = LF_UCOMM ).

  case IF_UCOMM.
    when C_UCOMM_SCALE.
      clear: ME->F_ALREADY_OPEN.
  endcase.

endmethod.
method GET_REGISTERED_UI_INFO.

  try.
      if ME->R_REGISTERED_UI is bound.
        move ME->R_REGISTERED_UI->S_DYNP to RS_DYNP.
      else.
        move ME->S_DYNP_BLANK-REPID    to RS_DYNP-REPID.
        move ME->S_DYNP_BLANK-DYNNR    to RS_DYNP-DYNNR.
      endif.

    catch /VCXI/CX_CKX.
      move ME->S_DYNP_BLANK-REPID    to RS_DYNP-REPID.
      move ME->S_DYNP_BLANK-DYNNR    to RS_DYNP-DYNNR.
  endtry.

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_PACKMAT.

endmethod.
method INIT_BLANK_UI.

  data:  LR_CLSUI type ref to /VCXI/CL_VKSU_CLSUI.

  create object LR_CLSUI
    exporting
      IR_UIFW = ME.

  LR_CLSUI->ACTIVATE( ).
  move LR_CLSUI->S_DYNP to ME->S_DYNP_BLANK.

endmethod.
method INIT_VIS.

  free: ME->S_PACKMAT_VIS.

*** Get Packaging Material and Type
  move ME->R_PR_PACKMAT->GET_PMATY( )       to ME->S_PACKMAT_VIS-PMATY.
  move ME->R_PR_PACKMAT->GET_PMATY_DESCR( ) to ME->S_PACKMAT_VIS-PMATY_DESCR.
  move ME->R_PR_PACKMAT->GET_PMATN( )       to ME->S_PACKMAT_VIS-PMATN.
  move ME->R_PR_PACKMAT->GET_PMATN_DESCR( ) to ME->S_PACKMAT_VIS-PMATN_DESCR.

*** Get Consumption Scheme
  ME->R_PR_PACKMAT->GET_CONSC( importing EF_CONSC = ME->S_PACKMAT_VIS-CONSC ).
  move ME->R_PR_PACKMAT->GET_FOVRR_CONSC( ) to ME->S_PACKMAT_VIS-FOVRR_CONSC.

*** Get Packaging Material Quantity
  ME->R_PR_PACKMAT->GET_PMQTY( importing ES_PMQTY = ME->S_PACKMAT_VIS-S_PMQTY ).
  move ME->R_PR_PACKMAT->GET_FOVRR_PMQTY( ) to ME->S_PACKMAT_VIS-FOVRR_PMQTY.

*** Get Packaging Material Information Info
  move ME->R_PR_PACKMAT->GET_PAMAI( )       to ME->S_PACKMAT_VIS-PAMAI.
  move ME->R_PR_PACKMAT->GET_PAMAI_DESCR( ) to ME->S_PACKMAT_VIS-PAMAI_DESCR.

*** Get Purchasing Info
  move ME->R_PR_PACKMAT->GET_PURCH( )       to ME->S_PACKMAT_VIS-PURCH.
  move ME->R_PR_PACKMAT->GET_SCALE( )       to ME->S_PACKMAT_VIS-SCALE.
  move ME->R_PR_PACKMAT->GET_LIFNR( )       to ME->S_PACKMAT_VIS-LIFNR.
  move ME->R_PR_PACKMAT->GET_LIFNR_DESCR( ) to ME->S_PACKMAT_VIS-LIFNR_DESCR.
  move ME->R_PR_PACKMAT->GET_PRICE( )       to ME->S_PACKMAT_VIS-S_PRICE.
  move ME->R_PR_PACKMAT->GET_PRICP( )       to ME->S_PACKMAT_VIS-S_PRICP.

  move ME->R_PR_PACKMAT->GET_TEXT( )  to ME->S_PACKMAT_VIS-TEXT.

*** Get Override Flag for Effects
  move ME->R_PR_PACKMAT->GET_FOVRR_EFFCT( ) to ME->S_PACKMAT_VIS-FOVRR_EFFCT.

endmethod.
method OPEN_SUBSCREEN.

  data:     LF_CLSUI  type        /VCXI/VKSC_CLSUI.

  if IR_GATE is bound.
    LF_CLSUI = IR_GATE->GET_CLSUI( ).
  endif.

  if LF_CLSUI is not initial.
*** Create Subscreen
    create object RR_CLSUI
      type
        (LF_CLSUI)
      exporting
        IR_UIFW    = ME
        IR_UIGATE  = ME->R_UIGATE
        IR_GATE    = IR_GATE.
    RR_CLSUI->ACTIVATE( ).
    ME->F_ALREADY_OPEN = ABAP_TRUE.
  else.
*** Clear Subscreen
    if ME->R_REGISTERED_UI is bound.
      ME->R_REGISTERED_UI->DEACTIVATE( ).
    endif.
  endif.

endmethod.
method SET_CURSOR.

  data:  LF_CURSOR type SCRFNAME.

  get cursor field LF_CURSOR.
  if LF_CURSOR is not initial.
    move LF_CURSOR to ME->F_CURSOR.
  endif.

endmethod.
