
class ZCL_VCXI_XCSP_TI_MACHINE definition
  public
  inheriting from ZCL_VCXI_XCS_TI
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods /VCXI/IF_VKSU_TI_EVENT~HANDLE_CONTEXT_REQ
    redefinition .
  methods /VCXI/IF_VKSU_TI_EVENT~HANDLE_CONTEXT_SEL
    redefinition .
protected section.

  constants C_PATTERN_ADD_ADDON type SYUCOMM value 'ADD_ADDON@*'. "#EC NOTEXT
  constants C_UC_SHOW_MGRPV_LIMIT type UI_FUNC value 'SHOW_MGRPV_LIMIT'. "#EC NOTEXT
  constants C_UC_SHOW_MGRPV_SPEED type UI_FUNC value 'SHOW_MGRPV_SPEED'. "#EC NOTEXT
  data R_PR_MACHINE type ref to ZCL_VCXI_XCSP_PR_MACHINE .

  methods OPEN_UI_AFTER_ADD_ADDON
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SHOW_MGRPV
    importing
      !IR_MGRPV type ref to /VCXI/CL_VSMC_MGRPV
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSP_TI_MACHINE definition
class ZCL_VCXI_XCSP_TI_MACHINE implementation.
method /VCXI/IF_VKSU_TI_EVENT~HANDLE_CONTEXT_REQ.

  data:  LF_FCODE       type        UI_FUNC,
         LF_TEXT        type        GUI_TEXT,
         LF_DISABLED    type        CUA_ACTIVE.
  data:  LS_ADDON_DESCR type        ZVCXI_XCSP_S_ADDON_DESCR.
  data:  LT_ADDON_DESCR type        ZVCXI_XCSP_TT_ADDON_DESCR.
  data:  LR_MENU_ADDON  type ref to CL_CTMENU.

  SUPER->/VCXI/IF_VKSU_TI_EVENT~HANDLE_CONTEXT_REQ( IR_MENU = IR_MENU ).

***------------------------------------------------------------------------------------------------
*** Get possible Addons
  check ME->R_PR_MACHINE is bound.

***------------------------------------------------------------------------------------------------
*** Add the Menu only if we have Addons which we can create
  LT_ADDON_DESCR = ME->R_PR_MACHINE->GET_POSSIBLE_ADDONS( ).
  if LT_ADDON_DESCR is not initial.

*** Create Submenu
    create object LR_MENU_ADDON.
    IR_MENU->ADD_SUBMENU( MENU = LR_MENU_ADDON
                          TEXT = 'Add Add-on'(M01) ).

*** Disable in Display Mode
    if ME->R_GATE->IS_LOCKED( ) ne ABAP_TRUE.
      move ABAP_TRUE to LF_DISABLED.
    endif.

    loop at LT_ADDON_DESCR into LS_ADDON_DESCR.

      clear: LF_FCODE, LF_TEXT.
      move C_PATTERN_ADD_ADDON to LF_FCODE.
      replace '*' in LF_FCODE with LS_ADDON_DESCR-ADDON_ID.
      move LS_ADDON_DESCR-DESCR to LF_TEXT.

      LR_MENU_ADDON->ADD_FUNCTION( FCODE    = LF_FCODE
                                   TEXT     = LF_TEXT
                                   DISABLED = LF_DISABLED ).

    endloop.
  endif.

***------------------------------------------------------------------------------------------------
*** Add Access to Machine Customizing
  if ME->R_PR_MACHINE              is bound and
     ME->R_PR_MACHINE->R_RTE_CMACH is bound.
*** Set Seperator
    IR_MENU->ADD_SEPARATOR( ).

*** Set Menu
    IR_MENU->ADD_FUNCTION( FCODE = C_UC_SHOW_MGRPV_SPEED
                           TEXT  = 'Show Speed Setup'(F01) ).
    IR_MENU->ADD_FUNCTION( FCODE = C_UC_SHOW_MGRPV_LIMIT
                           TEXT  = 'Show Limit Setup'(F02) ).
  endif.

endmethod.
method /VCXI/IF_VKSU_TI_EVENT~HANDLE_CONTEXT_SEL.

  data:  LF_PATTERN type        SYUCOMM,
         LF_ID      type        /VCXI/CKX_ID.
  data:  LR_GATE    type ref to /VCXI/CL_VKSR_GATE.

***------------------------------------------------------------------------------------------------
*** Add Addon was selected -> create Addon
  if IF_FCODE cp C_PATTERN_ADD_ADDON.
    check ME->R_PR_MACHINE is bound.

    split IF_FCODE at '@' into LF_PATTERN LF_ID.

*** Add Addon and get Gate
    LR_GATE = ME->R_PR_MACHINE->ADD_ADDON( IF_ID = LF_ID ).

*** Set UI
    ME->OPEN_UI_AFTER_ADD_ADDON( IR_GATE = LR_GATE ).

*** Raise Events
    ME->R_GATE->RAISE_EVENTS( ).

***------------------------------------------------------------------------------------------------
  else.
    case IF_FCODE.
      when C_UC_SHOW_MGRPV_SPEED.
        ME->SHOW_MGRPV( IR_MGRPV = ME->R_PR_MACHINE->R_RTE_CMACH->R_MGRPV_SPEED ).

      when C_UC_SHOW_MGRPV_LIMIT.
        ME->SHOW_MGRPV( IR_MGRPV = ME->R_PR_MACHINE->R_RTE_CMACH->R_MGRPV_LIMIT ).

      when others.
        SUPER->/VCXI/IF_VKSU_TI_EVENT~HANDLE_CONTEXT_SEL( IF_FCODE = IF_FCODE ).
    endcase.
  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE   ).

  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_MACHINE.
    catch CX_SY_MOVE_CAST_ERROR.
      clear ME->R_PR_MACHINE.
  endtry.

endmethod.
method OPEN_UI_AFTER_ADD_ADDON.

  data:  LR_UI           type ref to /VCXI/CL_VKSRU_CLSUI,
         LR_UI_MACHINE   type ref to ZCL_VCXI_XCSP_UI_MACHINE.

*** Open Machine UI
  LR_UI = ME->R_UIGATE->OPEN_SUBSCREEN( IR_GATE = ME->R_GATE ).

  if IR_GATE is bound.
*** Set Default Gate for Activ Tab
    try.
        move LR_UI ?to LR_UI_MACHINE.
      catch CX_SY_MOVE_CAST_ERROR.
        exit.
    endtry.

    check LR_UI_MACHINE is bound.
    LR_UI_MACHINE->R_DEFAULT_GATE = IR_GATE.

  endif.

endmethod.
method SHOW_MGRPV.

  data:  LF_TOOBJ        type /VCXI/CKX_TOOBJ,
         LF_GUID         type /VCXI/CKX_GUID,
         LF_MESSAGE      type CHAR100.

  check IR_MGRPV is bound.
  move IR_MGRPV->/VCXI/IF_CKX_OBJECT~F_TOOBJ     to LF_TOOBJ.
  move IR_MGRPV->/VCXI/IF_CKX_OBJECT~GET_GUID( ) to LF_GUID.

*** Start Machine Customizing in new Task
  call function '/VCXI/VSMCU_MACHCUST_START'
    starting new task 'NEW'
    exporting
      IF_TOOBJ              = LF_TOOBJ
      IF_GUID               = LF_GUID
    exceptions
      SYSTEM_FAILURE        = 97  message LF_MESSAGE
      COMMUNICATION_FAILURE = 98  message LF_MESSAGE
      others                = 99.
  if SY-SUBRC   ne 0 and
     LF_MESSAGE is not initial.
    message LF_MESSAGE type 'W'.
  endif.

endmethod.
