
class ZCL_VCXI_FFSP_UI_ACTVY_EMBOS definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_CURSOR type SCRFNAME read-only .
  data S_ACTVY_EMBOS_VIS type ZVCXI_FFSP_S_ACTVY_EMBOS_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_ACTVY_EMBOS_VIS
    importing
      !IS_ACTVY_EMBOS_VIS type ZVCXI_FFSP_S_ACTVY_EMBOS_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DEACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_USER_COMMAND
    redefinition .
protected section.

  data R_PR_ACTVY_EMBOS type ref to ZCL_VCXI_FFSP_PR_ACTVY_EMBOS .

  methods GET_PRVDR_MC_TOOL
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
      !ER_PR_MC_TOOL type ref to ZCL_VCXI_XCSP_PR_MC_TOOL
    raising
      /VCXI/CX_CKX .
  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_FFSP_UI_ACTVY_EMBOS definition
class ZCL_VCXI_FFSP_UI_ACTVY_EMBOS implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_FFSP_UI_ACTVY_EMBOS_BIND'
      exporting
        IR_UI_ACTVY_EMBOS = ME
      importing
        ES_DYNP           = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_ACTVY_EMBOS.
      catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DEACTIVATE.

    SUPER->DEACTIVATE( ).

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

    SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                             IF_DYNNR = IF_DYNNR ).

    try.

        if IF_REPID eq ME->S_DYNP-REPID and
           IF_DYNNR eq ME->S_DYNP-DYNNR.

          LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
          LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
          ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

          loop at screen.
            if LF_LOCKED ne ABAP_TRUE or
               LF_INUSE  ne ABAP_TRUE.
              move 0 to SCREEN-INPUT.
            endif.
            modify screen.
          endloop.
        endif.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
method DO_PBO.

  ME->INIT_VIS( ).

  set cursor field ME->F_CURSOR.
  clear ME->F_CURSOR.

endmethod.
  method DO_UPDATE_ACTVY_EMBOS_VIS.

    data: LR_PR_MC_TOOL type ref to ZCL_VCXI_XCSP_PR_MC_TOOL.

***--------------------------------------------------------------------------------------
*** Set Embossing Thickness
    if ME->S_ACTVY_EMBOS_VIS-S_EMTIN ne IS_ACTVY_EMBOS_VIS-S_EMTIN.
      ME->R_PR_ACTVY_EMBOS->SET_EMTIN( IS_EMTIN = IS_ACTVY_EMBOS_VIS-S_EMTIN
                                       IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Get Provider MC Tool
    ME->GET_PRVDR_MC_TOOL( importing ER_PR_MC_TOOL = LR_PR_MC_TOOL ).
    if LR_PR_MC_TOOL is bound.

***   Set Material Number
      if ME->S_ACTVY_EMBOS_VIS-MATNR ne IS_ACTVY_EMBOS_VIS-MATNR.
        LR_PR_MC_TOOL->SET_MATNR( IF_MATNR = IS_ACTVY_EMBOS_VIS-MATNR
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Set Average Consumption
      if ME->S_ACTVY_EMBOS_VIS-S_AVGCO ne IS_ACTVY_EMBOS_VIS-S_AVGCO.
        LR_PR_MC_TOOL->SET_AVGCO( IS_AVGCO = IS_ACTVY_EMBOS_VIS-S_AVGCO
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.

***   Set Average Consumption Per
      if ME->S_ACTVY_EMBOS_VIS-S_AVGCP ne IS_ACTVY_EMBOS_VIS-S_AVGCP.
        LR_PR_MC_TOOL->SET_AVGCP( IS_AVGCP = IS_ACTVY_EMBOS_VIS-S_AVGCP
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

  endmethod.
  method DO_USER_COMMAND.

    SUPER->DO_USER_COMMAND( IF_UCOMM = IF_UCOMM ).

  endmethod.
  method GET_PRVDR_MC_TOOL.

    data: LT_GATE         type          /VCXI/VKSR_TT_GATE.
    data: LR_GATE         type ref to   /VCXI/CL_VKSR_GATE.

*** Get MC Tool Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_F0SP_PR_MC_TOOL=>C_IPRVT_MC_TOOL
                                     IF_INUSE = ABAP_TRUE ).


    read table LT_GATE into LR_GATE index 1.
    check LR_GATE is bound.

    try.
        move LR_GATE->R_CLSPR ?to ER_PR_MC_TOOL.
      catch CX_SY_MOVE_CAST_ERROR.
        exit.
    endtry.

  endmethod.
  method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_ACTVY_EMBOS.

  endmethod.
  method INIT_VIS.

    data: LR_PR_MC_TOOL type ref to ZCL_VCXI_XCSP_PR_MC_TOOL.


***--------------------------------------------------------------------------------------
*** Get Embossing Thickness
    ME->R_PR_ACTVY_EMBOS->GET_EMTIN( importing ES_EMTIN = ME->S_ACTVY_EMBOS_VIS-S_EMTIN ).

***--------------------------------------------------------------------------------------
*** Get Provider MC Tool
    ME->GET_PRVDR_MC_TOOL( importing ER_PR_MC_TOOL = LR_PR_MC_TOOL ).
    if LR_PR_MC_TOOL is bound.

***   Get Material Number
      ME->S_ACTVY_EMBOS_VIS-MATNR       = LR_PR_MC_TOOL->GET_MATNR( ).
      ME->S_ACTVY_EMBOS_VIS-MATNR_DESCR = LR_PR_MC_TOOL->GET_MATNR_DESCR( ).

***   Get Average Consumption
      ME->S_ACTVY_EMBOS_VIS-S_AVGCO = LR_PR_MC_TOOL->GET_AVGCO( ).
      ME->S_ACTVY_EMBOS_VIS-S_AVGCP = LR_PR_MC_TOOL->GET_AVGCP( ).

***   Get Consumption
      ME->S_ACTVY_EMBOS_VIS-S_CONSU = LR_PR_MC_TOOL->GET_CONSU( ).

    endif.

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
