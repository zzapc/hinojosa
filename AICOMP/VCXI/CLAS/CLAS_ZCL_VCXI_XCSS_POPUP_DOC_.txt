
class ZCL_VCXI_XCSS_POPUP_DOC definition
  public
  create public .

public section.

  data S_DOC_VIS type ZVCXI_XCSS_S_POPUP_DOC_VIS .

  class-methods START
    importing
      !IF_DOKAR type DOKAR
      !IF_DKTXT type DKTXT optional
    returning
      value(RR_BL_DOC) type ref to ZCL_VCXI_XCSS_BL_DOC
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IF_DOKAR type DOKAR
      !IF_DKTXT type DKTXT
    raising
      /VCXI/CX_CKX .
  methods DO_MODIFY_SCREEN
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
  class-methods REQUEST_DOC_KEY
    importing
      !IF_DOKAR type DOKAR
    exporting
      !EF_DOKNR type DOKNR
      !EF_DOKTL type DOKTL_D
      !EF_DOKVR type DOKVR
    returning
      value(RR_BL_DOC) type ref to ZCL_VCXI_XCSS_BL_DOC
    raising
      /VCXI/CX_CKX .
protected section.

  data R_BL_DOC type ref to ZCL_VCXI_XCSS_BL_DOC .
  constants C_UC_OKAY type SYUCOMM value 'OKAY' ##NO_TEXT.
  constants C_UC_CANCEL type SYUCOMM value 'CANCEL' ##NO_TEXT.

  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_UC_OKAY
    raising
      /VCXI/CX_CKX .
  methods SET_PF_STATUS
    raising
      /VCXI/CX_CKX .
  methods SET_TITLE
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSS_POPUP_DOC definition
class ZCL_VCXI_XCSS_POPUP_DOC implementation.
  method CONSTRUCTOR.

    ME->S_DOC_VIS-DOKAR = IF_DOKAR.
    ME->S_DOC_VIS-DKTXT = IF_DKTXT.

  endmethod.
  method DO_MODIFY_SCREEN.

    loop at screen.
      case SCREEN-NAME.
        when 'ZVCXI_XCSS_S_POPUP_DOC_VIS-DTTRG'.
***       Data Carrier
          if ME->S_DOC_VIS-FUPLO ne ABAP_TRUE.
            SCREEN-INPUT = 0.
            SCREEN-INVISIBLE = 1.
          endif.

      endcase.
      modify screen.
    endloop.

  endmethod.
  method DO_PBO.

*** Set PF-Status
    ME->SET_PF_STATUS( ).

*** Set Title
    ME->SET_TITLE( ).

*** Modify Screen
    ME->DO_MODIFY_SCREEN( ).

  endmethod.
  method DO_USER_COMMAND.

    case IF_UCOMM.
      when C_UC_OKAY.
        ME->HANDLE_UC_OKAY( ).

      when C_UC_CANCEL.
        ME->HANDLE_UC_CANCEL( ).
    endcase.

  endmethod.
  method HANDLE_UC_CANCEL.

***--------------------------------------------------------------------------------------
*** Leave Popup
    clear: ME->S_DOC_VIS.
    leave to screen 0.

  endmethod.
  method HANDLE_UC_OKAY.

    data: LF_RETURN type ABAP_BOOL,
          LF_RC     type I,
          LF_ACTION type I.
    data: LT_FILE  type FILETABLE.


*** Ensure the Document Number was defined (Late numbering doesn't work in SVC)
    if ME->S_DOC_VIS-DOKNR is initial.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGID = 'ZVCXI_XCSS'
                                            IF_MSGNO = '401'
                                            IF_MSGTY = 'W' ).
    endif.

***----------------------------------------------------------------------------
*** Adding a File was requested
    if ME->S_DOC_VIS-FUPLO is not initial.
***   Open standard Directory Browser
      CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG( exporting  MULTISELECTION          = ABAP_TRUE
                                                  changing   FILE_TABLE              = LT_FILE
                                                             RC                      = LF_RC
                                                             USER_ACTION             = LF_ACTION
                                                  exceptions FILE_OPEN_DIALOG_FAILED = 1
                                                             CNTL_ERROR              = 2
                                                             ERROR_NO_GUI            = 3
                                                             NOT_SUPPORTED_BY_GUI    = 4
                                                             others                  = 5 ).

***   Don't continue if no file was selected
      if SY-SUBRC  is not initial or
         LF_ACTION eq CL_GUI_FRONTEND_SERVICES=>ACTION_CANCEL or
         LT_FILE is initial.
        return.
      endif.
    endif.

***----------------------------------------------------------------------------
*** Create Document
    ME->R_BL_DOC = ZCL_VCXI_XCSS_BL_DOC=>CREATE( IF_DOKAR  = ME->S_DOC_VIS-S_DOC_KEY-DOKAR
                                                 IF_DOKNR  = ME->S_DOC_VIS-S_DOC_KEY-DOKNR
                                                 IF_DOKTL  = ME->S_DOC_VIS-S_DOC_KEY-DOKTL
                                                 IF_DOKVR  = ME->S_DOC_VIS-S_DOC_KEY-DOKVR
                                                 IF_DKTXT  = ME->S_DOC_VIS-DKTXT
                                                 IF_DTTRG  = ME->S_DOC_VIS-DTTRG
                                                 IT_FILE   = value #( for LF_FILE in LT_FILE ( DOKFI = LF_FILE
                                                                                               DKTXT = ME->S_DOC_VIS-DKTXT ) ) ).

*** Leave Popup
    leave to screen 0.

  endmethod.
  method REQUEST_DOC_KEY.

    data: LF_RET                 type          SY-SUBRC ##NEEDED.
    data: LS_SHLP                type          SHLP_DESCR.
    data: LT_RVAL                type table of DDSHRETVAL.
    data: LR_CX_CKX              type ref to   /VCXI/CX_CKX.
    field-symbols: <S_INTERFACE> type          DDSHIFACE,
                   <S_RVAL>      type          DDSHRETVAL.

*** Prepare Searchhelp
    call function 'F4IF_GET_SHLP_DESCR'
      exporting
        SHLPNAME = 'CV01'
        SHLPTYPE = 'SH'
      importing
        SHLP     = LS_SHLP.

    loop at LS_SHLP-INTERFACE assigning <S_INTERFACE>.
      move ABAP_TRUE to <S_INTERFACE>-VALFIELD.
      case <S_INTERFACE>-SHLPFIELD.
        when 'DOKAR'.
          <S_INTERFACE>-VALUE = IF_DOKAR.
      endcase.
    endloop.

*** Call Searchhelp for DOKNR
    call function 'F4IF_START_VALUE_REQUEST'
      exporting
        SHLP          = LS_SHLP
      importing
        RC            = LF_RET
      tables
        RETURN_VALUES = LT_RVAL.

    check LT_RVAL is not initial.
    loop at LT_RVAL assigning <S_RVAL>.
      case <S_RVAL>-FIELDNAME.
        when 'DOKNR'.
          EF_DOKNR = |{ <S_RVAL>-FIELDVAL alpha = in }|.
        when 'DOKTL'.
          EF_DOKTL = <S_RVAL>-FIELDVAL.
        when 'DOKVR'.
          EF_DOKVR = <S_RVAL>-FIELDVAL.
      endcase.
    endloop.

    check EF_DOKNR is not initial and
          EF_DOKTL is not initial and
          EF_DOKVR is not initial.

    try.
***     Get Instance of Document to check if it does exist
        RR_BL_DOC = ZCL_VCXI_XCSS_BL_DOC=>GET_INSTANCE( IF_DOKAR    = IF_DOKAR
                                                        IF_DOKNR    = EF_DOKNR
                                                        IF_DOKTL    = EF_DOKTL
                                                        IF_DOKVR    = EF_DOKVR ).
      catch /VCXI/CX_CKX into LR_CX_CKX.
        LR_CX_CKX->SHOW_MESSAGE( ).
    endtry.

  endmethod.
  method SET_PF_STATUS.

*** Set PF-Status
    set pf-status '0100' of program 'SAPLZVCXI_XCSS_POPUP_DOC'.

  endmethod.
  method SET_TITLE.

*** Set Title
    set titlebar '0100' of program 'SAPLZVCXI_XCSS_POPUP_DOC'.

  endmethod.
  method START.

    data: LR_POPUP_DOC  type ref to ZCL_VCXI_XCSS_POPUP_DOC.

*** Create Popup for User-Entry
    create object LR_POPUP_DOC
      exporting
        IF_DOKAR = IF_DOKAR
        IF_DKTXT = IF_DKTXT.

    call function 'ZVCXI_XCSS_POPUP_DOC_START'
      exporting
        IR_POPUP_DOC = LR_POPUP_DOC.

*** Return created DMS Document
    RR_BL_DOC = LR_POPUP_DOC->R_BL_DOC.

  endmethod.
