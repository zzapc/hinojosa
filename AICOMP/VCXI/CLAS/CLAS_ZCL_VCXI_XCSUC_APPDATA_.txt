
class ZCL_VCXI_XCSUC_APPDATA definition
  public
  create public .

public section.

  types:
    begin of YS_INSTANCE,
               KUNNR_WE   type        KUNNR,
               KUNNR_AG   type        KUNNR,
               VKORG      type        VKORG,
               VTWEG      type        VTWEG,
               SPART      type        SPART,
               DCONF      type        /VCXI/VKCR_DCONF,
               WERKS      type        WERKS_D,
               CMATN      type        /VCXI/VKC_CMATN,
               PRFID      type        /VCXI/VKC_PRFID,
               R_INSTANCE type ref to ZCL_VCXI_XCSUC_APPDATA,
      end   of YS_INSTANCE .
  types:
    YT_INSTANCE type standard table of YS_INSTANCE with default key .

  data F_WERKS type WERKS_D read-only .
  data F_DCONF type /VCXI/VKCR_DCONF read-only .
  data S_KNA1_WE type KNA1 read-only .
  data S_KNA1_AG type KNA1 read-only .
  data S_KNVV_WE type KNVV read-only .
  data S_KNVV_AG type KNVV read-only .
  data S_CMPRK type /VCXI/VKC_S_CMPRK read-only .

  methods CONSTRUCTOR
    importing
      !IF_KUNNR_WE type KUNNR
      !IF_KUNNR_AG type KUNNR
      !IF_VKORG type VKORG
      !IF_VTWEG type VTWEG
      !IF_SPART type SPART
      !IF_WERKS type WERKS_D
      !IF_DCONF type /VCXI/VKCR_DCONF
      !IF_CMATN type /VCXI/VKC_CMATN
      !IF_PRFID type /VCXI/VKC_PRFID
    raising
      /VCXI/CX_CKX .
  class-methods GET_INSTANCE
    importing
      !IF_WERKS type WERKS_D
      !IF_DCONF type /VCXI/VKCR_DCONF
      !IF_KUNNR_WE type KUNNR
      !IF_KUNNR_AG type KUNNR
      !IF_VKORG type VKORG
      !IF_VTWEG type VTWEG
      !IF_SPART type SPART
      !IF_CMATN type /VCXI/VKC_CMATN
      !IF_PRFID type /VCXI/VKC_PRFID
    returning
      value(RR_INSTANCE) type ref to ZCL_VCXI_XCSUC_APPDATA
    raising
      /VCXI/CX_CKX .
protected section.
private section.

  class-data T_INSTANCE type YT_INSTANCE .
endclass. "ZCL_VCXI_XCSUC_APPDATA definition
class ZCL_VCXI_XCSUC_APPDATA implementation.
method CONSTRUCTOR.

  field-symbols: <S_INSTANCE> type YS_INSTANCE.

  move IF_WERKS    to ME->F_WERKS.
  move IF_DCONF    to ME->F_DCONF.
  move IF_CMATN    to ME->S_CMPRK-CMATN.
  move IF_PRFID    to ME->S_CMPRK-PRFID.

***---------------------------------------------------------------------------------
*** Add to Instance Buffer
  append initial line to ZCL_VCXI_XCSUC_APPDATA=>T_INSTANCE assigning <S_INSTANCE>.
  move IF_KUNNR_WE to <S_INSTANCE>-KUNNR_WE.
  move IF_KUNNR_AG to <S_INSTANCE>-KUNNR_AG.
  move IF_VKORG    to <S_INSTANCE>-VKORG.
  move IF_VTWEG    to <S_INSTANCE>-VTWEG.
  move IF_SPART    to <S_INSTANCE>-SPART.
  move IF_DCONF    to <S_INSTANCE>-DCONF.
  move IF_CMATN    to <S_INSTANCE>-CMATN.
  move IF_PRFID    to <S_INSTANCE>-PRFID.
  move IF_WERKS    to <S_INSTANCE>-WERKS.
  move ME          to <S_INSTANCE>-R_INSTANCE.
*** Get KNA1/KNVV for Ship To Customer
  select single * from KNA1 into ME->S_KNA1_WE
  where KUNNR = IF_KUNNR_WE.

  select single * from KNVV into ME->S_KNVV_WE
  where KUNNR = IF_KUNNR_WE
    and VKORG = IF_VKORG
    and VTWEG = IF_VTWEG
    and SPART = IF_SPART.

*** Get KNA1/KNVV for Sold To Customer
  select single * from KNA1 into ME->S_KNA1_AG
  where KUNNR = IF_KUNNR_AG.

  select single * from KNVV into ME->S_KNVV_AG
  where KUNNR = IF_KUNNR_AG
    and VKORG = IF_VKORG
    and VTWEG = IF_VTWEG
    and SPART = IF_SPART.

endmethod.
method GET_INSTANCE.

  data: LS_INSTANCE type YS_INSTANCE.

  read table T_INSTANCE into LS_INSTANCE with key KUNNR_WE = IF_KUNNR_WE
                                                  KUNNR_AG = IF_KUNNR_AG
                                                  VKORG    = IF_VKORG
                                                  VTWEG    = IF_VTWEG
                                                  SPART    = IF_SPART
                                                  WERKS    = IF_WERKS
                                                  DCONF    = IF_DCONF
                                                  CMATN    = IF_CMATN
                                                  PRFID    = IF_PRFID.
  if SY-SUBRC = 0.
    move LS_INSTANCE-R_INSTANCE to RR_INSTANCE.
  else.
    create object RR_INSTANCE
      exporting
        IF_KUNNR_WE = IF_KUNNR_WE
        IF_KUNNR_AG = IF_KUNNR_AG
        IF_VKORG    = IF_VKORG
        IF_VTWEG    = IF_VTWEG
        IF_SPART    = IF_SPART
        IF_WERKS    = IF_WERKS
        IF_DCONF    = IF_DCONF
        IF_CMATN    = IF_CMATN
        IF_PRFID    = IF_PRFID.
  endif.

endmethod.
