
class ZCL_VCXI_XCM_PUI_MSG definition
  public
  inheriting from /VCXI/CL_CKMRU_CLPUI
  create public .

public section.

  methods DO_PBO
    raising
      /VCXI/CX_CKX .

  methods /VCXI/IF_CKMRU_DUI~ACTIVATE
    redefinition .
  methods /VCXI/IF_CKMRU_DUI~DEACTIVATE
    redefinition .
protected section.

  data F_LEVEL type I value -1 ##NO_TEXT.
  data R_CONTAINER type ref to CL_GUI_CUSTOM_CONTAINER .
  data R_SALV type ref to CL_SALV_TABLE .
  data T_MSG type /VCXI/CKXM_TT_MSG .

  methods ADJUST_FUNCTIONS
    importing
      !IR_FUNCTIONS_LIST type ref to CL_SALV_FUNCTIONS_LIST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_ADDED_FUNCTION
    for event ADDED_FUNCTION of CL_SALV_EVENTS_TABLE
    importing
      !E_SALV_FUNCTION .
  methods REFRESH_GRID
    raising
      /VCXI/CX_CKX .
  methods COLLECT_MSG
    importing
      !IF_LEVEL type I
      !IR_RPROC type ref to /VCXI/CL_CKMR_RPROC
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCM_PUI_MSG definition
class ZCL_VCXI_XCM_PUI_MSG implementation.
  method /VCXI/IF_CKMRU_DUI~ACTIVATE.

*** Bind UI
    call function 'ZVCXI_XCM_PUI_MSG_BIND'
      exporting
        IR_PUI_MSG = ME
      importing
        ES_DYNP    = ME->/VCXI/IF_CKMRU_DUI~S_DYNP.

  endmethod.
  method /VCXI/IF_CKMRU_DUI~DEACTIVATE.

    SUPER->/VCXI/IF_CKMRU_DUI~DEACTIVATE( ).

*** Clear references
    if ME->R_CONTAINER is bound.
      ME->R_CONTAINER->FREE( ).
      clear ME->R_CONTAINER.
    endif.

    clear: R_SALV.

  endmethod.
  method ADJUST_FUNCTIONS.
  endmethod.
  method COLLECT_MSG.

    data: LT_CHILDREN type        /VCXI/CKX_TT_OBJECT.
    data: LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT,
          LR_RPSEG  type ref to /VCXI/CL_CKMR_RPSEG.

    clear: ME->T_MSG.

*** Get grid data from child nodes messages tables
    LT_CHILDREN = IR_RPROC->/VCXI/IF_CKX_OBJECT_H~GET_CHILDREN( ).
    loop at LT_CHILDREN into LR_OBJECT.

      move LR_OBJECT ?to LR_RPSEG.
      check LR_RPSEG is bound.
      append lines of LR_RPSEG->R_MSG->T_MSG to ME->T_MSG .

      if IF_LEVEL ne 0.
        loop at LR_RPSEG->T_RPROC into LR_OBJECT.
          ME->COLLECT_MSG( IF_LEVEL = IF_LEVEL - 1
                           IR_RPROC = cast #( LR_OBJECT ) ).

        endloop.
      endif.
    endloop.

  endmethod.
  method DO_PBO.

*** Collect Messages
    ME->COLLECT_MSG( IF_LEVEL = ME->F_LEVEL
                     IR_RPROC = ME->R_RPROC ).

*** Refresh Grid
    ME->REFRESH_GRID( ).

  endmethod.
  method HANDLE_ADDED_FUNCTION.
  endmethod.
  method REFRESH_GRID.

    data: LR_COLS             type ref to CL_SALV_COLUMNS.
    data: LS_COLUMNS_REF      type        SALV_S_COLUMN_REF.
    data: LT_COLUMNS_REF      type        SALV_T_COLUMN_REF.

*** Create Container
    if ME->R_CONTAINER is not bound.
      create object ME->R_CONTAINER
        exporting
          CONTAINER_NAME              = '0100CC_MSG'
        exceptions
          CNTL_ERROR                  = 1
          CNTL_SYSTEM_ERROR           = 2
          CREATE_ERROR                = 3
          LIFETIME_ERROR              = 4
          LIFETIME_DYNPRO_DYNPRO_LINK = 5
          others                      = 6.
      if SY-SUBRC ne 0.
        /VCXI/CX_CKX=>RAISE_CKX_BY_SY( ).
      endif.
    endif.

*** Create Simple ALV
    if ME->R_SALV is not bound.
      try.
          CL_SALV_TABLE=>FACTORY( exporting R_CONTAINER  = ME->R_CONTAINER
                                  importing R_SALV_TABLE = ME->R_SALV
                                  changing  T_TABLE      = ME->T_MSG ).
        catch CX_SALV_MSG.                              "#EC NO_HANDLER
      endtry.

    endif.

*** Get all the Columns
    LR_COLS = ME->R_SALV->GET_COLUMNS( ).

*** Change the properties of the Columns
    try.
        LT_COLUMNS_REF = LR_COLS->GET( ).

        loop at LT_COLUMNS_REF into LS_COLUMNS_REF.
          if LS_COLUMNS_REF-COLUMNNAME eq 'MESSAGE'.
            LS_COLUMNS_REF-R_COLUMN->SET_VISIBLE( ABAP_TRUE ).
            LS_COLUMNS_REF-R_COLUMN->SET_OUTPUT_LENGTH( 80 ).
          elseif LS_COLUMNS_REF-COLUMNNAME eq 'ICON'.
            LS_COLUMNS_REF-R_COLUMN->SET_VISIBLE( ABAP_TRUE ).
            LS_COLUMNS_REF-R_COLUMN->SET_OUTPUT_LENGTH( 5 ).
            LS_COLUMNS_REF-R_COLUMN->SET_ALIGNMENT( VALUE = IF_SALV_C_ALIGNMENT=>CENTERED ).
            LR_COLS->SET_COLUMN_POSITION( exporting COLUMNNAME  = LS_COLUMNS_REF-COLUMNNAME
                                                    POSITION    = 1 ).
          else.
            LS_COLUMNS_REF-R_COLUMN->SET_VISIBLE( ABAP_FALSE ).
          endif.
        endloop.

      catch CX_SALV_NOT_FOUND.                          "#EC NO_HANDLER
    endtry.

*** Adjust Functions of ALV Grid
    ME->ADJUST_FUNCTIONS( IR_FUNCTIONS_LIST = ME->R_SALV->GET_FUNCTIONS( ) ).
    set handler ME->HANDLE_ADDED_FUNCTION for ME->R_SALV->GET_EVENT( ).

*** Refresh Display
    ME->R_SALV->DISPLAY( ).

  endmethod.
