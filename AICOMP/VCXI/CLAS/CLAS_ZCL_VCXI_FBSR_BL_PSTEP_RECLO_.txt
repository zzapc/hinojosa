
class ZCL_VCXI_FBSR_BL_PSTEP_RECLO definition
  public
  inheriting from ZCL_VCXI_FBSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_FBSR_ADJ_BGDIM .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .

  types:
    YT_TC210 type standard table of ZVCXI_FBS_TC210 .

  class-data T_TC210 type YT_TC210 .

  class-methods CLASS_CONSTRUCTOR .
  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  constants C_IATYP_AT_LABEL type /VCXI/VSMC_IATYP value 'FB_AT_LABEL' ##NO_TEXT.
  constants C_IATYP_AT_PATCH type /VCXI/VSMC_IATYP value 'FB_AT_PATCH' ##NO_TEXT.
  constants C_IATYP_AT_SLIDER type /VCXI/VSMC_IATYP value 'FB_AT_SLIDER' ##NO_TEXT.
  constants C_IATYP_AT_SPOUT type /VCXI/VSMC_IATYP value 'FB_AT_SPOUT' ##NO_TEXT.
  constants C_IATYP_AT_VALVE type /VCXI/VSMC_IATYP value 'FB_AT_VALVE' ##NO_TEXT.
  constants C_IATYP_AT_ZIPPER type /VCXI/VSMC_IATYP value 'FB_AT_ZIPPER' ##NO_TEXT.
  data S_BGDIM_IN type ZVCXI_FBSP_S_BGDIM .
  data S_BGDIM_OUT type ZVCXI_FBSP_S_BGDIM .
  data S_COWGT type ZVCXI_FBS_S_COWGT .
  data T_MS_RECLO type ZVCXI_FBSR_TT_MS_RECLO .

  methods GET_PRVDR_RECLO
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_PR_RECLO) type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_RECLO
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_BGDIM
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_RECLO
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_MS_RECLO
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_RECLO
    importing
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL optional
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_RECLO_L
    importing
      !IR_SPVRE_MC_RECLO type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_RECLO type ZVCXI_FBSR_S_MS_RECLO
    raising
      /VCXI/CX_CKX .
  methods SET_SPVRE_VALUE_MC_RECLO_P
    importing
      !IR_SPVRE_MC_RECLO type ref to /VCXI/CL_VKSR_SPVRE
      !IS_MS_RECLO type ZVCXI_FBSR_S_MS_RECLO
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSR_BL_PSTEP_RECLO definition
class ZCL_VCXI_FBSR_BL_PSTEP_RECLO implementation.
  method ADD_SPVRE_MC_RECLO.

    data: LS_MS_RECLO type       ZVCXI_FBSR_S_MS_RECLO,
          LS_LEOKY    type        /VCXI/VKSR_S_LEOKY,
          LS_PARAM    type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE          type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_RECLO type ref to /VCXI/CL_VKSR_SPVRE.

    check ME->T_MS_RECLO is not initial.

***--------------------------------------------------------------------------------------
    loop at ME->T_MS_RECLO into LS_MS_RECLO.
***   Get Customizing Element
      LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_RECLO-ICELM
                                          IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).


***   Create Supervisor Runtime Element
      create object LR_SPVRE_MC_RECLO
        exporting
          IR_SPVCE  = LR_SPVCE
          IR_PARENT = IR_SPVRE_PARENT.
      append LR_SPVRE_MC_RECLO to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_RECLO->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
***   Set Material Number
      clear LS_LEOKY.
      move LS_MS_RECLO-MATNR                            to LS_LEOKY-LEOKY.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_LEOKY-SETBY.
      LR_SPVRE_MC_RECLO->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***--------------------------------------------------------------------------------------
***   Set Dimension related Values
      case LS_MS_RECLO-ICELM.
        when 'MC_RPART_P'.
          ME->SET_SPVRE_VALUE_MC_RECLO_P( IR_SPVRE_MC_RECLO = LR_SPVRE_MC_RECLO
                                          IS_MS_RECLO       = LS_MS_RECLO ).
        when 'MC_RPART_L'.
          ME->SET_SPVRE_VALUE_MC_RECLO_L( IR_SPVRE_MC_RECLO = LR_SPVRE_MC_RECLO
                                          IS_MS_RECLO       = LS_MS_RECLO ).
      endcase.

***--------------------------------------------------------------------------------------
*** Set Reclosing Weight
      clear LS_PARAM.
      move ZCL_VCXI_FBSS_PR_MS_RECLO=>C_PARID_RCWGT  to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC         to LS_PARAM-PARTY.
      move LS_MS_RECLO-RCWGT                         to LS_PARAM-ATFLV.
      move LS_MS_RECLO-RCWGT_UOM                     to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC          to LS_PARAM-SETBY.
      LR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
***   Set Purchase Flag
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MC=>C_PARID_PURCH           to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR            to LS_PARAM-PARTY.
      move LS_MS_RECLO-PURCH                            to LS_PARAM-ATWRT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
      LR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

      if LS_MS_RECLO-PURCH eq ABAP_TRUE.
***     Set Price
        clear LS_PARAM.
        move ZCL_VCXI_XCSP_PR_MC=>C_PARID_PRICE         to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
        move LS_MS_RECLO-PRICE                          to LS_PARAM-ATFLV.
        move LS_MS_RECLO-PRICE_CURR                     to LS_PARAM-CURKY.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
        LR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

***     Set Vendor
        clear LS_PARAM.
        move ZCL_VCXI_XCSP_PR_MC=>C_PARID_LIFNR         to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR          to LS_PARAM-PARTY.
        move LS_MS_RECLO-LIFNR                          to LS_PARAM-ATWRT.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
        LR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).
      endif.

    endloop.

  endmethod.
  method CLASS_CONSTRUCTOR.

*** Get Reclosing Type
    select * from ZVCXI_FBS_TC210
             into table T_TC210.                          "#EC CI_SUBRC

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_RECLO type ref to ZCL_VCXI_FBSR_BL_PSTEP_RECLO.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Bag Dimensions
    if ME->S_BGDIM_IN  eq LR_BL_PSTEP_RECLO->S_BGDIM_IN and
       ME->S_BGDIM_OUT eq LR_BL_PSTEP_RECLO->S_BGDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Reclosing Data
    if ME->S_COWGT eq LR_BL_PSTEP_RECLO->S_COWGT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Reclosing Data
    if ME->T_MS_RECLO eq LR_BL_PSTEP_RECLO->T_MS_RECLO.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_RECLO type ref to ZCL_VCXI_FBSR_BL_PSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Film/Bag Dimensions
    move ME->S_BGDIM_IN    to LR_BL_PSTEP_RECLO->S_BGDIM_IN.
    move ME->S_BGDIM_OUT   to LR_BL_PSTEP_RECLO->S_BGDIM_OUT.

*** Reclosing Data
    move ME->S_COWGT to  LR_BL_PSTEP_RECLO->S_COWGT.

*** Reclosing Data
    move ME->T_MS_RECLO to  LR_BL_PSTEP_RECLO->T_MS_RECLO.

  endmethod.
  method DESERIALIZE.

    data:  LF_XML   type STRING.

    check IF_XML is not initial.

*** Deserialize
    call transformation ID
         source xml IF_XML
         result SUPER_XML    = LF_XML
                S_BGDIM_IN   = ME->S_BGDIM_IN
                S_BGDIM_OUT  = ME->S_BGDIM_OUT
                S_COWGT      = ME->S_COWGT
                T_MS_RECLO   = ME->T_MS_RECLO.

    SUPER->DESERIALIZE( IF_XML = LF_XML ).

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    read table T_TC210 with key IATYP = IR_SPVRE_ADDON->GET_ID( )
                       transporting no fields.
    if SY-SUBRC is initial.
      ME->FILL_SPVRE_ADDON_RECLO( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                            IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                            IR_ARBPL       = IR_ARBPL
                                  changing  CT_SPVRE       = CT_SPVRE ).
    endif.

  endmethod.
  method FILL_SPVRE_ADDON_RECLO.

    data:  LS_PARAM type /VCXI/VKSR_S_PARAM.

*** Set Cutout Weight
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_PERF=>C_PARID_COWGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->S_COWGT-COWGT                          to LS_PARAM-ATFLV.
    move ME->S_COWGT-COWGT_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Reclosing Material
    ME->ADD_SPVRE_MC_RECLO( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = IR_SPVRE_ADDON
                            changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***--------------------------------------------------------------------------------------
*** Standard
    move 'GRP_CONV'   to CF_ID_GRP.
    move 'ARBPL_CONV' to CF_ID_ARBPL.

***--------------------------------------------------------------------------------------
*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'GRP_CONV'       to CF_ID_GRP.
      move 'ARBPL_OUTSO'    to CF_ID_ARBPL.
    endif.

***--------------------------------------------------------------------------------------
*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'GRP_CONV'    to CF_ID_GRP.
      move 'ARBPL_MANU'  to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_PRVDR_RECLO.

    data:  LR_GATE   type ref to /VCXI/CL_VKSR_GATE.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_RECLO.
          if RR_PR_RECLO is bound.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LF_ID    type /VCXI/CKX_ID.
    data: LS_PARAM type /VCXI/VKSR_S_PARAM,
          LS_TC210 type ZVCXI_FBS_TC210.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.


***--------------------------------------------------------------------------------------
*** Get Activity ID
    read table T_TC210 into LS_TC210 with key IPSTP = ME->F_IPSTP.
    if SY-SUBRC is initial.
      move LS_TC210-ACTVY to LF_ID.
    endif.

***--------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LF_ID
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Set Cutout Weight
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_PERF=>C_PARID_COWGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->S_COWGT-COWGT                          to LS_PARAM-ATFLV.
    move ME->S_COWGT-COWGT_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Reclosing Material
    ME->ADD_SPVRE_MC_RECLO( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                      IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                            changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method INIT_BY_SPEC.

    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Reclosing Data
    ME->INIT_BY_SPEC_RECLO( IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Reclosing Material Data
    ME->INIT_BY_SPEC_MS_RECLO( IR_GATE  = IR_GATE
                               IT_PRVDR = IT_PRVDR ).

***------------------------------------------------------------------------------------------------
*** Get Bag Data
    ME->INIT_BY_SPEC_BGDIM( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method INIT_BY_SPEC_BGDIM.

    data:  LR_PR_RECLO type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Get Provider - Perforation
    move ME->GET_PRVDR_RECLO( IT_PRVDR = IT_PRVDR ) to LR_PR_RECLO.
    check LR_PR_RECLO is bound.

***--------------------------------------------------------------------------------------
*** Inbound Dimensions
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_PREV~GET_BGWID( importing ES_BGWID = ME->S_BGDIM_IN-S_BGWID ).
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_PREV~GET_BGHEI( importing ES_BGHEI = ME->S_BGDIM_IN-S_BGHEI ).
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_PREV~GET_BGWGT( importing ES_BGWGT = ME->S_BGDIM_IN-S_BGWGT ).
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_PREV~GET_IBAGT( importing EF_IBAGT = ME->S_BGDIM_IN-IBAGT ).
    move 1 to ME->S_BGDIM_IN-NOOUT.           "Always one on ingoing
    move 1 to ME->S_BGDIM_IN-NOUPS.

***--------------------------------------------------------------------------------------
*** Get Outbound Dimensions
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWID( importing ES_BGWID = ME->S_BGDIM_OUT-S_BGWID ).
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGHEI( importing ES_BGHEI = ME->S_BGDIM_OUT-S_BGHEI ).
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWGT( importing ES_BGWGT = ME->S_BGDIM_OUT-S_BGWGT ).
    LR_PR_RECLO->ZIF_VCXI_FBSS_COMM_NEXT~GET_IBAGT( importing EF_IBAGT = ME->S_BGDIM_OUT-IBAGT ).
    move 1 to ME->S_BGDIM_OUT-NOOUT.
    move 1 to ME->S_BGDIM_OUT-NOUPS.

  endmethod.
  method INIT_BY_SPEC_MS_RECLO.

    data: LF_FRECL type        ZVCXI_FBS_FRECL.
    data: LS_RCLEN type        ZVCXI_FBS_S_RCLEN.
    data: LR_GATE        type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_RECLO type ref to ZCL_VCXI_FBSS_PR_MS_RECLO,
          LR_DATA        type ref to DATA.
    field-symbols: <S_MS_RECLO> type        ZVCXI_FBSR_S_MS_RECLO,
                   <F_DATA>     type        ANY.

***--------------------------------------------------------------------------------------
*** Get Reclosing Material Data
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_RECLO.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
      append initial line to ME->T_MS_RECLO assigning <S_MS_RECLO>.

***   Basic Info
      move LR_PR_MS_RECLO->GET_MATNR( ) to <S_MS_RECLO>-MATNR.

***--------------------------------------------------------------------------------------
***   Dependent on Dimension
      case LR_GATE->F_ID.
***     PC
        when 'MS_RECLO_P'.
          move 'MC_RPART_P' to <S_MS_RECLO>-ICELM.

***       One time per Bag
          move 1    to <S_MS_RECLO>-S_AVGCO-AVGCO.
          move 'ST' to <S_MS_RECLO>-S_AVGCO-AVGCO_UOM.

***     Length
        when 'MS_RECLO_L'.
          move 'MC_RPART_L' to <S_MS_RECLO>-ICELM.

***       Relclosing Length as Average Consumption
          LR_PR_MS_RECLO->GET_RCLEN( importing ES_RCLEN = LS_RCLEN ).
          move LS_RCLEN-RCLEN     to <S_MS_RECLO>-S_AVGCO-AVGCO.
          move LS_RCLEN-RCLEN_UOM to <S_MS_RECLO>-S_AVGCO-AVGCO_UOM.
      endcase.

***   Adjust Average Consumption by Reclosing Factor
      try.
          LR_PR_MS_RECLO->GET_FRECL( importing EF_FRECL = LF_FRECL ).
          <S_MS_RECLO>-S_AVGCO-AVGCO = <S_MS_RECLO>-S_AVGCO-AVGCO * LF_FRECL.
        catch CX_SY_ARITHMETIC_OVERFLOW
              CX_SY_CONVERSION_OVERFLOW.
          LR_DATA = CL_ABAP_EXCEPTIONAL_VALUES=>GET_MAX_VALUE( IN =  <S_MS_RECLO>-S_AVGCO-AVGCO ).
          assign LR_DATA->* to <F_DATA>.
          <S_MS_RECLO>-S_AVGCO-AVGCO = <F_DATA>.
      endtry.

***   Consumption is defined per Bag
      move 1    to <S_MS_RECLO>-S_AVGCP-AVGCP.
      move 'ST' to <S_MS_RECLO>-S_AVGCP-AVGCP_UOM.

***   Reclosing Weight
      try.
          LR_PR_MS_RECLO->GET_RCWGT( importing ES_RCWGT = <S_MS_RECLO>-S_RCWGT ).
          <S_MS_RECLO>-S_RCWGT-RCWGT = <S_MS_RECLO>-S_RCWGT-RCWGT * LF_FRECL.
        catch CX_SY_ARITHMETIC_OVERFLOW
              CX_SY_CONVERSION_OVERFLOW.
          LR_DATA = CL_ABAP_EXCEPTIONAL_VALUES=>GET_MAX_VALUE( IN =  <S_MS_RECLO>-S_RCWGT-RCWGT ).
          assign LR_DATA->* to <F_DATA>.
          <S_MS_RECLO>-S_RCWGT-RCWGT = <F_DATA>.
      endtry.

***--------------------------------------------------------------------------------------
***   Purchasing Info
      move LR_PR_MS_RECLO->GET_PURCH( )   to <S_MS_RECLO>-PURCH.
      move LR_PR_MS_RECLO->GET_LIFNR( )   to <S_MS_RECLO>-LIFNR.
      move LR_PR_MS_RECLO->GET_PRICE( )   to <S_MS_RECLO>-S_PRICE.
      move LR_PR_MS_RECLO->GET_PRICP( )   to <S_MS_RECLO>-S_PRICP.

    endloop.

  endmethod.
  method INIT_BY_SPEC_RECLO.

    data: LR_PR_RECLO type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO.

***--------------------------------------------------------------------------------------
*** Get Provider - Reclosing
    move ME->GET_PRVDR_RECLO( IT_PRVDR = IT_PRVDR ) to LR_PR_RECLO.
    check LR_PR_RECLO is bound.

***--------------------------------------------------------------------------------------
*** Get Cutout Weight
    LR_PR_RECLO->GET_COWGT( importing ES_COWGT = ME->S_COWGT ).

  endmethod.
  method SERIALIZE.

*** Super Serialize
    RF_XML = SUPER->SERIALIZE( ).

*** Serialize
    call transformation ID
         source SUPER_XML    = RF_XML
                S_BGDIM_IN   = ME->S_BGDIM_IN
                S_BGDIM_OUT  = ME->S_BGDIM_OUT
                S_COWGT      = ME->S_COWGT
                T_MS_RECLO   = ME->T_MS_RECLO

    result xml RF_XML.

  endmethod.
  method SET_SPVRE_VALUE_MC_RECLO_L.

    data:  LS_PARAM   type        /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCO_L     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move IS_MS_RECLO-AVGCO                            to LS_PARAM-ATFLV.
    move IS_MS_RECLO-AVGCO_UOM                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCP_P     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move IS_MS_RECLO-AVGCP                            to LS_PARAM-ATFLV.
    move IS_MS_RECLO-AVGCP_UOM                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

    if IS_MS_RECLO-PURCH eq ABAP_TRUE.
*** Set Price Unit
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MC=>C_PARID_PRICP_L   to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
      move IS_MS_RECLO-PRICP                          to LS_PARAM-ATFLV.
      move IS_MS_RECLO-PRICP_UOM                      to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
      IR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).
    endif.

  endmethod.
  method SET_SPVRE_VALUE_MC_RECLO_P.

    data:  LS_PARAM   type        /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCO_P     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move IS_MS_RECLO-AVGCO                            to LS_PARAM-ATFLV.
    move IS_MS_RECLO-AVGCO_UOM                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC=>C_PARID_AVGCP_P     to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move IS_MS_RECLO-AVGCP                            to LS_PARAM-ATFLV.
    move IS_MS_RECLO-AVGCP_UOM                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).

    if IS_MS_RECLO-PURCH eq ABAP_TRUE.
*** Set Price Unit
      clear LS_PARAM.
      move ZCL_VCXI_XCSP_PR_MC=>C_PARID_PRICP_P   to LS_PARAM-PARID.
      move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
      move IS_MS_RECLO-PRICP                          to LS_PARAM-ATFLV.
      move IS_MS_RECLO-PRICP_UOM                      to LS_PARAM-UNIT.
      move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
      IR_SPVRE_MC_RECLO->SET_PARAM( IS_PARAM = LS_PARAM ).
    endif.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_IN.

    refresh CT_BGDIM.
    append ME->S_BGDIM_IN to CT_BGDIM.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_OUT.

    refresh CT_BGDIM.
    append ME->S_BGDIM_OUT to CT_BGDIM.

  endmethod.
