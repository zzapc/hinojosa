
class ZCL_VCXI_PXSS_UI_AREA_WGT definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data F_CURSOR type SCRFNAME read-only .
  data S_AREA_WGT_VIS type ZVCXI_PXSS_S_AREA_WGT_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .
  methods SET_CURSOR
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_AREA_WGT type ref to ZCL_VCXI_PXSS_PR_AREA_WGT .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PXSS_UI_AREA_WGT definition
class ZCL_VCXI_PXSS_UI_AREA_WGT implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_PXSS_UI_AREA_WGT_BIND'
      exporting
        IR_UI_AREA_WGT = ME
      importing
        ES_DYNP        = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_AREA_WGT.
      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_CALC   type ABAP_BOOL.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).
        LF_CALC   = ME->R_PR_AREA_WGT->IS_CALC( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Calculated Value
          if SCREEN-GROUP1 eq 'CAL' and
             LF_CALC       eq ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

***       Reopen Info Buttons
          if SCREEN-GROUP1 eq 'INF'.
            move 1 to SCREEN-INPUT.
          endif.
          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_AREA_WGT_VIS type ZVCXI_PXSS_S_AREA_WGT_VIS.


    check ME->R_PR_AREA_WGT is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_AREA_WGT_VIS.

***--------------------------------------------------------------------------------------
*** Sold Blank Area/Weight per PC
    if ME->S_AREA_WGT_VIS-S_SBLAR_P ne LS_AREA_WGT_VIS-S_SBLAR_P.
      ME->R_PR_AREA_WGT->SET_SBLAR( IS_SBLAR = LS_AREA_WGT_VIS-S_SBLAR_P
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_AREA_WGT_VIS-S_SBLWT_P ne LS_AREA_WGT_VIS-S_SBLWT_P.
      ME->R_PR_AREA_WGT->SET_SBLWT( IS_SBLWT = LS_AREA_WGT_VIS-S_SBLWT_P
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Cut Out Area/Weight per PC
    if ME->S_AREA_WGT_VIS-S_COUAR_P ne LS_AREA_WGT_VIS-S_COUAR_P.
      ME->R_PR_AREA_WGT->SET_COUAR( IS_COUAR = LS_AREA_WGT_VIS-S_COUAR_P
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_AREA_WGT_VIS-S_COUWT_P ne LS_AREA_WGT_VIS-S_COUWT_P.
      ME->R_PR_AREA_WGT->SET_COUWT( IS_COUWT = LS_AREA_WGT_VIS-S_COUWT_P
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Additional Weight per PC
    if ME->S_AREA_WGT_VIS-S_ADDWT_P ne LS_AREA_WGT_VIS-S_ADDWT_P.
      ME->R_PR_AREA_WGT->SET_ADDWT( IS_ADDWT = LS_AREA_WGT_VIS-S_ADDWT_P
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_AREA_WGT.

  endmethod.
  method INIT_VIS.

    data: LS_OPQTY type /VCXI/VSMR_S_OPQTY.

    check ME->R_PR_AREA_WGT is bound.
    free: ME->S_AREA_WGT_VIS.


***--------------------------------------------------------------------------------------
*** Sold Blank Area/Weight per PC
    ME->S_AREA_WGT_VIS-S_SBLAR_P = ME->R_PR_AREA_WGT->GET_SBLAR( ).
    ME->S_AREA_WGT_VIS-S_SBLWT_P = ME->R_PR_AREA_WGT->GET_SBLWT( ).

*** Cut Out Waste Area/Weight per PC
    ME->S_AREA_WGT_VIS-S_COUAR_P = ME->R_PR_AREA_WGT->GET_COUAR( ).
    ME->S_AREA_WGT_VIS-S_COUWT_P = ME->R_PR_AREA_WGT->GET_COUWT( ).

*** Net Blank Area/Weight per PC
    ME->S_AREA_WGT_VIS-S_NBLAR_P = ME->R_PR_AREA_WGT->GET_NBLAR( ).
    ME->S_AREA_WGT_VIS-S_NBLWT_P = ME->R_PR_AREA_WGT->GET_NBLWT( ).

*** Additional Weight per PC
    ME->S_AREA_WGT_VIS-S_ADDWT_P = ME->R_PR_AREA_WGT->GET_ADDWT( ).

*** Product Weight per PC
    ME->S_AREA_WGT_VIS-S_PROWT_P = ME->R_PR_AREA_WGT->GET_PROWT( ).

***--------------------------------------------------------------------------------------
*** Get Operation Quantity
    LS_OPQTY = ME->R_PR_AREA_WGT->GET_OPQTY( ).

*** Sold Blank Area/Weight per Order
    try.
        ME->S_AREA_WGT_VIS-S_SBLAR_O = value #( SBLAR     = ME->S_AREA_WGT_VIS-S_SBLAR_P-SBLAR * LS_OPQTY-OPQTY
                                                SBLAR_UOM = ME->S_AREA_WGT_VIS-S_SBLAR_P-SBLAR_UOM ).
        ME->S_AREA_WGT_VIS-S_SBLWT_O = value #( SBLWT     = ME->S_AREA_WGT_VIS-S_SBLWT_P-SBLWT * LS_OPQTY-OPQTY
                                                SBLWT_UOM = ME->S_AREA_WGT_VIS-S_SBLWT_P-SBLWT_UOM ).
      catch CX_SY_ARITHMETIC_OVERFLOW.
        clear: ME->S_AREA_WGT_VIS-S_SBLAR_O,
               ME->S_AREA_WGT_VIS-S_SBLWT_O.
    endtry.

*** Cut Out Area/Weight per Order
    try.
        ME->S_AREA_WGT_VIS-S_COUAR_O = value #( COUAR     = ME->S_AREA_WGT_VIS-S_COUAR_P-COUAR * LS_OPQTY-OPQTY
                                                COUAR_UOM = ME->S_AREA_WGT_VIS-S_COUAR_P-COUAR_UOM ).
        ME->S_AREA_WGT_VIS-S_COUWT_O = value #( COUWT     = ME->S_AREA_WGT_VIS-S_COUWT_P-COUWT * LS_OPQTY-OPQTY
                                                COUWT_UOM = ME->S_AREA_WGT_VIS-S_COUWT_P-COUWT_UOM ).
      catch CX_SY_ARITHMETIC_OVERFLOW.
        clear: ME->S_AREA_WGT_VIS-S_COUAR_O,
               ME->S_AREA_WGT_VIS-S_COUWT_O.
    endtry.

*** Net Blank Area/Weight per Order
    try.
        ME->S_AREA_WGT_VIS-S_NBLAR_O = value #( NBLAR     = ME->S_AREA_WGT_VIS-S_NBLAR_P-NBLAR * LS_OPQTY-OPQTY
                                                NBLAR_UOM = ME->S_AREA_WGT_VIS-S_NBLAR_P-NBLAR_UOM ).
        ME->S_AREA_WGT_VIS-S_NBLWT_O = value #( NBLWT     = ME->S_AREA_WGT_VIS-S_NBLWT_P-NBLWT * LS_OPQTY-OPQTY
                                                NBLWT_UOM = ME->S_AREA_WGT_VIS-S_NBLWT_P-NBLWT_UOM ).
      catch CX_SY_ARITHMETIC_OVERFLOW.
        clear: ME->S_AREA_WGT_VIS-S_NBLAR_O,
               ME->S_AREA_WGT_VIS-S_NBLWT_O.
    endtry.

*** Additional Weight per Order
    try.
        ME->S_AREA_WGT_VIS-S_ADDWT_O = value #( ADDWT     = ME->S_AREA_WGT_VIS-S_ADDWT_P-ADDWT * LS_OPQTY-OPQTY
                                                ADDWT_UOM = ME->S_AREA_WGT_VIS-S_ADDWT_P-ADDWT_UOM ).
      catch CX_SY_ARITHMETIC_OVERFLOW.
        clear: ME->S_AREA_WGT_VIS-S_ADDWT_O.
    endtry.

*** Product Weight per Order
    try.
        ME->S_AREA_WGT_VIS-S_PROWT_O = value #( PROWT     = ME->S_AREA_WGT_VIS-S_PROWT_P-PROWT * LS_OPQTY-OPQTY
                                                PROWT_UOM = ME->S_AREA_WGT_VIS-S_PROWT_P-PROWT_UOM ).
      catch CX_SY_ARITHMETIC_OVERFLOW.
        clear: ME->S_AREA_WGT_VIS-S_PROWT_O.
    endtry.

  endmethod.
  method SET_CURSOR.

    data:  LF_CURSOR type SCRFNAME.

    get cursor field LF_CURSOR.
    if LF_CURSOR is not initial.
      move LF_CURSOR to ME->F_CURSOR.
    endif.

  endmethod.
