
class ZCL_VCXI_XCE_DMS_TAB definition
  public
  create protected .

public section.

  interfaces /VCXI/IF_CKX_OBJECT .
  interfaces /VCXI/IF_CKX_OBJECT_LOCKING .

  data S_DYNP type /VCXI/CKX_S_DYNP_KEY read-only .
  data F_DESCR type /VCXI/CKX_DESCR read-only .
  data F_DOKAR type DOKAR read-only .

  class-methods GET_INSTANCE
    importing
      !IS_DRAW type DRAW
    returning
      value(RR_TAB) type ref to ZCL_VCXI_XCE_DMS_TAB
    raising
      /VCXI/CX_CKX .
  methods GET_CHANGED
    returning
      value(RF_CHANGED) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  class-methods CHECK_IS_LOCKED
    returning
      value(RF_RESULT) type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
protected section.

  data R_DMSEXT type ref to ZCL_VCXI_XCE_DMS_DMSEXT .

  methods CONSTRUCTOR
    importing
      !IR_DMSEXT type ref to ZCL_VCXI_XCE_DMS_DMSEXT
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCE_DMS_TAB definition
class ZCL_VCXI_XCE_DMS_TAB implementation.
  method /VCXI/IF_CKX_OBJECT_LOCKING~CHECK_IS_LOCKED.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT_LOCKING~DO_LOCK.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT_LOCKING~DO_UNLOCK.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT_LOCKING~IS_LOCKED.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT~GET_DESCR.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT~GET_DESCR_ALL.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT~GET_GUID.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT~GET_ID.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT~GET_INSTANCE.

    return.

  endmethod.
  method /VCXI/IF_CKX_OBJECT~GET_LOG.

    return.

  endmethod.
  method CHECK_IS_LOCKED.

    field-symbols: <S_DOCSTATUS> type ANY.

    move ABAP_TRUE to RF_RESULT.

***--------------------------------------------------------------------------------------
*** Lock screen if document is released and not yet saved
    assign ('(SAPLCV110)GS_TDWS-DOSAR') to <S_DOCSTATUS>.
    if <S_DOCSTATUS> is assigned and
       <S_DOCSTATUS> eq 'S'.
      move ABAP_FALSE to RF_RESULT.
    endif.

  endmethod.
  method CONSTRUCTOR.

*** Set Data Extension
    move IR_DMSEXT to ME->R_DMSEXT.

*** Load Description
    select single DESCR
           into ME->F_DESCR
           from ZVCXI_XCE_TC200T
          where DOKAR eq ME->R_DMSEXT->F_DOKAR
           and  LANGU eq SY-LANGU.
    if SY-SUBRC ne 0.
      ME->F_DESCR = ME->R_DMSEXT->F_DOKAR.
    endif.

  endmethod.
  method GET_CHANGED.

    check ME->R_DMSEXT is bound.
    move ME->R_DMSEXT->F_CHANGED to RF_CHANGED.

  endmethod.
  method GET_INSTANCE.

    data:  LF_CLSTB type ZVCXI_XCE_DMS_CLSTB.
    data:  LR_DMSEXT type ref to ZCL_VCXI_XCE_DMS_DMSEXT.

***--------------------------------------------------------------------------------------
*** Create Instance of Data Extension
    LR_DMSEXT ?= ZCL_VCXI_XCE_DMS_DMSEXT=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = ZCL_VCXI_XCE_DMS_DMSEXT=>ENCRYPT_GUID( IF_DOKAR = IS_DRAW-DOKAR
                                                                                                                             IF_DOKNR = IS_DRAW-DOKNR
                                                                                                                             IF_DOKTL = IS_DRAW-DOKTL
                                                                                                                             IF_DOKVR = IS_DRAW-DOKVR ) ).
    check LR_DMSEXT is bound.

***--------------------------------------------------------------------------------------
*** Get Tab Class
    select single CLSTB
           into LF_CLSTB
           from ZVCXI_XCE_TC200
          where DOKAR eq IS_DRAW-DOKAR.

    check SY-SUBRC eq 0 and
          LF_CLSTB is not initial.

    create object RR_TAB
      type (LF_CLSTB)
      exporting
        IR_DMSEXT = LR_DMSEXT.

  endmethod.
