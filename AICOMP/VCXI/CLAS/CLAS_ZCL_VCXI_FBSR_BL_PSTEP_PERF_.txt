
class ZCL_VCXI_FBSR_BL_PSTEP_PERF definition
  public
  inheriting from ZCL_VCXI_FBSR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_FBSR_ADJ_BGDIM .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .

  constants C_IPSTP_PERF type /VCXI/VSMC_IPSTP value 'FB_PS_PERF' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_PERF
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods DESERIALIZE
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
  methods SERIALIZE
    redefinition .
protected section.

  data S_BGDIM_OUT type ZVCXI_FBSP_S_BGDIM .
  data S_BGDIM_IN type ZVCXI_FBSP_S_BGDIM .
  data S_BGWID type ZVCXI_FBS_S_BGWID .
  data S_BGHEI type ZVCXI_FBS_S_BGHEI .
  data S_BGWGT type ZVCXI_FBS_S_BGWGT .
  data F_IBAGT type ZVCXI_FBS_IBAGT .
  data F_NOUPS type ZVCXI_F0S_NOUPS .
  constants C_IATYP_AT_PERF type /VCXI/VSMC_IATYP value 'FB_AT_PERF' ##NO_TEXT.
  data S_COARE type ZVCXI_FBS_S_COARE .
  data F_DCUTT type ZVCXI_F0S_DCUTT .
  data F_LCOUT type ZVCXI_FBS_LCOUT .
  data F_NOLAS type ZVCXI_F0S_NOLAS .
  data F_TPERF type ZVCXI_F0S_TPERF .
  data S_COWGT type ZVCXI_FBS_S_COWGT .
  constants C_IAATY_TPERF type /VCXI/VSMC_IAATY value 'FB_AA_TPERF' ##NO_TEXT.

  methods GET_PRVDR_PERF
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    returning
      value(RR_PR_PERF) type ref to ZCL_VCXI_FBSS_PR_CSTEP_PERF
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_PERF
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
      !IR_ARBPL type ref to /VCXI/CL_VSMC_ARBPL
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_TOOL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_SPEC_BGDIM
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSR_BL_PSTEP_PERF definition
class ZCL_VCXI_FBSR_BL_PSTEP_PERF implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

    data:          LS_RTE_SAVAL type /VCXI/VSMR_S_RTE_SAVAL.
    field-symbols: <S_AVVAL>    type /VCXI/VSMR_S_RTE_RANGE_AVVAL.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Aspect - Perforation Type
    try.
        append initial line to LS_RTE_SAVAL-I_AVVAL assigning <S_AVVAL>.
        move 'I'            to <S_AVVAL>-SIGN.
        move 'EQ'           to <S_AVVAL>-OPTION.
        move ME->F_TPERF    to <S_AVVAL>-LOW.

        IR_RTE_PSTEP->SET_RTE_SAVAL( IF_IAATY  = C_IAATY_TPERF
                                     II_AVVAL  = LS_RTE_SAVAL-I_AVVAL ).

      catch /VCXI/CX_CKX.                               "#EC NO_HANDLER

    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type        /VCXI/VSMC_LDUOM,
          LF_LDVAL type        /VCXI/VSMR_LDVAL.
    data: LI_LVVAL  type        /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE  type        /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.
    field-symbols: <S_LVVAL> type /VCXI/VSMR_S_RTE_RANGE_LVVAL.

    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***--------------------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***--------------------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Number of Laser Lines
        when 'F0_LT_DP_NOLAS'.
***       Check only for "Laser" Perforation Types
          if ZCL_VCXI_F0S_CUST_PERF=>GET_FLASR( IF_TPERF = ME->F_TPERF ) eq ABAP_TRUE.
            move ME->F_NOLAS           to LF_LDVAL.
            move 'ST'                  to LF_LDUOM.
          else.
            IR_RTE_PSTEP->SET_LIMIT_NA( IR_LTYPE = LR_LTYPE ).
            continue.
          endif.

***     Perforation Type
        when 'F0_LT_VP_TPERF'.
          append initial line to LI_LVVAL assigning <S_LVVAL>.
          move 'I'                        to <S_LVVAL>-SIGN.
          move 'EQ'                       to <S_LVVAL>-OPTION.
          move ME->F_TPERF                to <S_LVVAL>-LOW.

        when others.
          continue.
      endcase.

***--------------------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_TOOL.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM,
          LS_LEOKY type /VCXI/VKSR_S_LEOKY.
    data: LR_SPVCE         type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_TOOL type ref to /VCXI/CL_VKSR_SPVRE.


    check ME->F_DCUTT is not initial.

***--------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_TOOL'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_MC_TOOL
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_PARENT.
    append LR_SPVRE_MC_TOOL to CT_SPVRE.

*** Set In Use
    LR_SPVRE_MC_TOOL->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Set Material Number
    clear LS_LEOKY.
    move ME->F_DCUTT                                 to LS_LEOKY-LEOKY.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_LEOKY-SETBY.
    LR_SPVRE_MC_TOOL->SET_LEOKY( IS_LEOKY = LS_LEOKY ).

***--------------------------------------------------------------------------------------
*** Set Average Consumption
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCO_P   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move 1                                           to LS_PARAM-ATFLV.
    move 'ST'                                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Average Consumption Per
    clear LS_PARAM.
    move ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCP_P   to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC           to LS_PARAM-PARTY.
    move 0                                           to LS_PARAM-ATFLV.
    move 'ST'                                        to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC            to LS_PARAM-SETBY.
    LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_PERF type ref to ZCL_VCXI_FBSR_BL_PSTEP_PERF.

*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_PERF.

***--------------------------------------------------------------------------------------
*** Bag/Film Dimensions
    if ME->S_BGDIM_IN eq LR_BL_PSTEP_PERF->S_BGDIM_IN or
       ME->S_BGDIM_OUT eq LR_BL_PSTEP_PERF->S_BGDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

***--------------------------------------------------------------------------------------
*** Perforation Data
    if ME->F_NOLAS eq LR_BL_PSTEP_PERF->F_NOLAS and
       ME->F_TPERF eq LR_BL_PSTEP_PERF->F_TPERF and
       ME->S_COWGT eq LR_BL_PSTEP_PERF->S_COWGT and
       ME->F_DCUTT eq LR_BL_PSTEP_PERF->F_DCUTT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_PERF type ref to ZCL_VCXI_FBSR_BL_PSTEP_PERF.

***--------------------------------------------------------------------------------------
*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_PERF.

***--------------------------------------------------------------------------------------
*** Bag Dimensions
    move ME->S_BGDIM_IN    to LR_BL_PSTEP_PERF->S_BGDIM_IN.
    move ME->S_BGDIM_OUT   to LR_BL_PSTEP_PERF->S_BGDIM_OUT.

*** Perforation Data
    move ME->F_NOLAS to  LR_BL_PSTEP_PERF->F_NOLAS.
    move ME->F_TPERF to  LR_BL_PSTEP_PERF->F_TPERF.
    move ME->S_COWGT to  LR_BL_PSTEP_PERF->S_COWGT.
    move ME->F_DCUTT to  LR_BL_PSTEP_PERF->F_DCUTT.

  endmethod.
  method DESERIALIZE.

    data:  LF_XML   type STRING.

    check IF_XML is not initial.

*** Deserialize
    call transformation ID
         source xml IF_XML
         result SUPER_XML    = LF_XML
                S_BGDIM_IN   = ME->S_BGDIM_IN
                S_BGDIM_OUT  = ME->S_BGDIM_OUT
                F_NOLAS      = ME->F_NOLAS
                F_TPERF      = ME->F_TPERF
                S_COWGT      = ME->S_COWGT
                F_DCUTT      = ME->F_DCUTT.

    SUPER->DESERIALIZE( IF_XML = LF_XML ).

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when C_IATYP_AT_PERF.
        ME->FILL_SPVRE_ADDON_PERF( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                             IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                             IR_ARBPL       = IR_ARBPL
                                   changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_PERF.

    data: LS_PARAM          type /VCXI/VKSR_S_PARAM.

***--------------------------------------------------------------------------------------
*** Set Cutout Weight
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_PERF=>C_PARID_COWGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->S_COWGT-COWGT                          to LS_PARAM-ATFLV.
    move ME->S_COWGT-COWGT_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Laser Lines
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_PERF=>C_PARID_NOLAS to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->F_NOLAS                                to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Perforation Type
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ADDON_PERF=>C_PARID_TPERF to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR          to LS_PARAM-PARTY.
    move ME->F_TPERF                                to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***--------------------------------------------------------------------------------------
*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = IR_SPVRE_ADDON
                           changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***--------------------------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***--------------------------------------------------------------------------------------
*** Standard
    move 'GRP_CONV'   to CF_ID_GRP.
    move 'ARBPL_CONV' to CF_ID_ARBPL.

***--------------------------------------------------------------------------------------
*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'GRP_CONV'       to CF_ID_GRP.
      move 'ARBPL_OUTSO'    to CF_ID_ARBPL.
    endif.

***--------------------------------------------------------------------------------------
*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'GRP_CONV'    to CF_ID_GRP.
      move 'ARBPL_MANU'  to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_PRVDR_PERF.

    data:  LR_GATE   type ref to /VCXI/CL_VKSR_GATE.

*** Get Reference
    loop at IT_PRVDR into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_PERF.
          if RR_PR_PERF is bound.
            exit.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM type /VCXI/VKSR_S_PARAM,
          LS_LEOKY type /VCXI/VKSR_S_LEOKY.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.


***--------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_PERF'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Set Cutout Weight
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_PERF=>C_PARID_COWGT to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->S_COWGT-COWGT                          to LS_PARAM-ATFLV.
    move ME->S_COWGT-COWGT_UOM                      to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Number of Laser Lines
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_PERF=>C_PARID_NOLAS to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC          to LS_PARAM-PARTY.
    move ME->F_NOLAS                                to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Perforation Type
    clear LS_PARAM.
    move ZCL_VCXI_FBSP_PR_ACTVY_PERF=>C_PARID_TPERF to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR          to LS_PARAM-PARTY.
    move ME->F_TPERF                                to LS_PARAM-ATWRT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC           to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).


***--------------------------------------------------------------------------------------
*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                           changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method INIT_BY_SPEC.

    data:  LR_PR_PERF type ref to ZCL_VCXI_FBSS_PR_CSTEP_PERF.

    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Initialize Bag Dimensions
    ME->INIT_BY_SPEC_BGDIM( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Get Perforation and Shaping Data
    move ME->GET_PRVDR_PERF( IT_PRVDR = IT_PRVDR ) to LR_PR_PERF.
    check LR_PR_PERF is bound.

*** Get Cutout Weight
    LR_PR_PERF->GET_COWGT( importing ES_COWGT = ME->S_COWGT ).

*** Get Number of Laser Lines
    LR_PR_PERF->GET_NOLAS( importing EF_NOLAS = ME->F_NOLAS ).

*** Get Perforation Type
    LR_PR_PERF->GET_TPERF( importing EF_TPERF = ME->F_TPERF ).

*** Get Die Cut Type
    LR_PR_PERF->GET_DCUTT( importing EF_DCUTT = ME->F_DCUTT ).

  endmethod.
  method INIT_BY_SPEC_BGDIM.

    data: LR_PR_PERF type ref to ZCL_VCXI_FBSS_PR_CSTEP_PERF.

***--------------------------------------------------------------------------------------
*** Get Provider - Perforation
    move ME->GET_PRVDR_PERF( IT_PRVDR = IT_PRVDR ) to LR_PR_PERF.
    check LR_PR_PERF is bound.

***--------------------------------------------------------------------------------------
*** Inbound Dimensions
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_PREV~GET_BGWID( importing ES_BGWID = ME->S_BGDIM_IN-S_BGWID ).
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_PREV~GET_BGHEI( importing ES_BGHEI = ME->S_BGDIM_IN-S_BGHEI ).
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_PREV~GET_BGWGT( importing ES_BGWGT = ME->S_BGDIM_IN-S_BGWGT ).
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_PREV~GET_IBAGT( importing EF_IBAGT = ME->S_BGDIM_IN-IBAGT ).
    move 1 to ME->S_BGDIM_IN-NOOUT.           "Always one on ingoing
    move 1 to ME->S_BGDIM_IN-NOUPS.

***--------------------------------------------------------------------------------------
*** Get Outbound Dimensions
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWID( importing ES_BGWID = ME->S_BGDIM_OUT-S_BGWID ).
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGHEI( importing ES_BGHEI = ME->S_BGDIM_OUT-S_BGHEI ).
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_NEXT~GET_BGWGT( importing ES_BGWGT = ME->S_BGDIM_OUT-S_BGWGT ).
    LR_PR_PERF->ZIF_VCXI_FBSS_COMM_NEXT~GET_IBAGT( importing EF_IBAGT = ME->S_BGDIM_OUT-IBAGT ).
    move 1 to ME->S_BGDIM_OUT-NOOUT.
    move 1 to ME->S_BGDIM_OUT-NOUPS.

  endmethod.
  method SERIALIZE.

*** Super Serialize
    RF_XML = SUPER->SERIALIZE( ).

*** Serialize
    call transformation ID
         source SUPER_XML    = RF_XML
                S_BGDIM_IN   = ME->S_BGDIM_IN
                S_BGDIM_OUT  = ME->S_BGDIM_OUT
                F_NOLAS      = ME->F_NOLAS
                F_TPERF      = ME->F_TPERF
                S_COWGT      = ME->S_COWGT
                F_DCUTT      = ME->F_DCUTT

    result xml RF_XML.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_IN.

    refresh CT_BGDIM.
    append ME->S_BGDIM_IN to CT_BGDIM.

  endmethod.
  method ZIF_VCXI_FBSR_ADJ_BGDIM~CALC_BGDIM_OUT.

    refresh CT_BGDIM.
    append ME->S_BGDIM_OUT to CT_BGDIM.

  endmethod.
