
class ZCL_VCXI_FBSS_GRID_MS_RECLO definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'ZVCXI_FBSS_S_MS_RECLO_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .

  methods REFRESH_GRID
    redefinition .
protected section.

  methods GET_MS_RECLO_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RS_MS_RECLO_VIS) type ZVCXI_FBSS_S_MS_RECLO_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MS_RECLO_VIS
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_MS_RECLO_VIS type ZVCXI_FBSS_S_MS_RECLO_VIS
    raising
      /VCXI/CX_CKX .
  methods CHANGE_STYLE_MS_RECLO
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IS_MS_RECLO_VIS type ZVCXI_FBSS_S_MS_RECLO_VIS
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .

  methods ADD_PRVDR
    redefinition .
  methods CHECK_PRVDR_ADD
    redefinition .
  methods CHECK_PRVDR_DEL
    redefinition .
  methods DEL_PRVDR
    redefinition .
  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods INIT_GRID
    redefinition .
  methods INIT_TOOLBAR_DEF
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSS_GRID_MS_RECLO definition
class ZCL_VCXI_FBSS_GRID_MS_RECLO implementation.
  method ADD_PRVDR.

    data: LF_ID     type /VCXI/CKX_ID,
          LF_ID_IMP type /VCXI/CKX_ID,
          LF_TPRCL  type ZVCXI_FBS_TPRCL.
    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF.
    data: LR_PR_MS_RECLO type ref to ZCL_VCXI_FBSS_PR_MS_RECLO.


*** If we have only one Provider
    if IF_ID is initial and
       LINES( ME->T_PRVDR_DEF ) le 1.
      read table ME->T_PRVDR_DEF into LS_PRVDR_DEF index 1.
      if SY-SUBRC = 0.
        move LS_PRVDR_DEF-ID to LF_ID_IMP.
      endif.
    else.
      move IF_ID to LF_ID_IMP.
    endif.

    read table ME->T_PRVDR_DEF into LS_PRVDR_DEF with key ID = LF_ID_IMP.
    check SY-SUBRC = 0.

    move LS_PRVDR_DEF-IPRVT        to LF_ID.
    RR_GATE = SUPER->ADD_PRVDR( IF_ID = LF_ID ).

    try.
        move RR_GATE->R_CLSPR ?to LR_PR_MS_RECLO.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_RECLO.
        RR_GATE->DO_FREE( ).
***     It is not possible to add Provider &1.
        /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
            IF_MSGTY = 'E'
            IF_MSGID = 'ZVCXI_XCS'
            IF_MSGNO = '012'
            IF_MSGV1 = LS_PRVDR_DEF-IPRVT ).
    endtry.

    if LR_PR_MS_RECLO is bound.
      move LS_PRVDR_DEF-ID to LF_TPRCL.
      LR_PR_MS_RECLO->SET_TPRCL( IF_TPRCL = LF_TPRCL ).
    endif.

*** Refresh is required
    ME->F_REFRESH_REQ = ABAP_TRUE.
    ME->R_GATE->RAISE_EVENTS( ).

  endmethod.
  method CHANGE_STYLE_MS_RECLO.

    free CT_STYL.

***--------------------------------------------------------------------------------------
*** Check if Length or PC
    case IR_GATE->F_ID.
      when 'MS_RECLO_L'.
***     Set Reclosing Length = Enable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RCLEN'
                                    IF_STYLE     = ME->F_STYLE_ENABLED
                          changing  CT_STYL      = CT_STYL ).

      when 'MS_RECLO_P'.
***     Set Reclosing Length = Disable
        ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RCLEN'
                                    IF_STYLE     = ME->F_STYLE_DISABLED
                          changing  CT_STYL      = CT_STYL ).

    endcase.

  endmethod.
  method CHECK_PRVDR_ADD.

    data: LF_ACTIV_PRVDR type NUMC3.
    data: LS_PRVDR_DEF     type /VCXI/VKSR_S_PRVDR_DEF,
          LS_MS_RECLO_GRID type ZVCXI_FBSS_S_MS_RECLO_GRID.
    data: LT_GATE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE type ref to /VCXI/CL_VKSR_GATE.


*** Start negative
    move ABAP_TRUE to RF_DISABLED.

    read table ME->T_PRVDR_DEF into LS_PRVDR_DEF with key ID = IF_ID.
    check SY-SUBRC = 0.

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_MS_RECLO=>C_IPRVT_MS_RECLO
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
***   Get all Active Provider with searched ID
      move ME->GET_MS_RECLO_VIS( IR_GATE = LR_GATE ) to LS_MS_RECLO_GRID-S_MS_RECLO_VIS.

      check LS_MS_RECLO_GRID-S_MS_RECLO_VIS-TPRCL eq IF_ID.
      add 1 to LF_ACTIV_PRVDR.

    endloop.

*** Check if there are less then maximal Provider
    check LF_ACTIV_PRVDR < LS_PRVDR_DEF-QTYMA.

    move ABAP_FALSE to RF_DISABLED.

  endmethod.
  method CHECK_PRVDR_DEL.

    data: LF_PRVDR       type        I,
          LF_ACTIV_PRVDR type        I.
    data: LS_PRVDR_DEF     type        /VCXI/VKSR_S_PRVDR_DEF,
          LS_MS_RECLO_GRID type        ZVCXI_FBSS_S_MS_RECLO_GRID..
    data:          LT_GATE              type        /VCXI/VKSR_TT_GATE.
    data:          LR_GATE              type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Start negative
    move ABAP_TRUE to RF_DISABLED.

***--------------------------------------------------------------------------------------
    read table ME->T_PRVDR_DEF into LS_PRVDR_DEF with key ID = IF_ID.
    check SY-SUBRC = 0.

*** Get Gates of Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_MS_RECLO=>C_IPRVT_MS_RECLO
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
*** Get all Provider with searched ID
      move ME->GET_MS_RECLO_VIS( IR_GATE = LR_GATE ) to LS_MS_RECLO_GRID-S_MS_RECLO_VIS.

      check LS_MS_RECLO_GRID-S_MS_RECLO_VIS-TPRCL eq IF_ID.
      add 1 to LF_PRVDR.

*** Check also if Provider is changeable -> can be deleted!!
      if ZCL_VCXI_XCDR_SERVICE=>IS_INUSE_CHANGEABLE( IR_GATE = LR_GATE ) ne ABAP_FALSE.
        add 1 to LF_ACTIV_PRVDR.
      endif.
    endloop.

***--------------------------------------------------------------------------------------
*** Check if there is min. one changeable Provider
    check LF_ACTIV_PRVDR gt 0.

*** Check if there are more than min. number of Provider
    check LF_ACTIV_PRVDR gt LS_PRVDR_DEF-QTYMI.

    move ABAP_FALSE to RF_DISABLED.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type for Button
    ME->F_IPRVT = ZCL_VCXI_FBSS_PR_MS_RECLO=>C_IPRVT_MS_RECLO.

  endmethod.
  method DEL_PRVDR.

    data: LF_PRVDR              type I.
    data: LS_MS_RECLO_GRID      type ZVCXI_FBSS_S_MS_RECLO_GRID,
          LS_MS_RECLO_GRID_CHCK type ZVCXI_FBSS_S_MS_RECLO_GRID,
          LS_PRVDR_DEF          type /VCXI/VKSR_S_PRVDR_DEF.
    data: LT_GATE      type /VCXI/VKSR_TT_GATE,
          LT_GATE_CHCK type /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_GATE_CHKC type ref to /VCXI/CL_VKSR_GATE.


*** Free Selected Gates
    LT_GATE = ME->GET_SELECTED_GATES( ).
    loop at LT_GATE into LR_GATE.
      check LR_GATE is bound.
***--------------------------------------------------------------------------------------
***   Check before deletion
      move ME->GET_MS_RECLO_VIS( IR_GATE = LR_GATE )      to LS_MS_RECLO_GRID-S_MS_RECLO_VIS.

***   Get Gates of Provider
      LT_GATE_CHCK = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_MS_RECLO=>C_IPRVT_MS_RECLO
                                       IF_INUSE = ABAP_TRUE ).

      loop at LT_GATE_CHCK into LR_GATE_CHKC.
        move ME->GET_MS_RECLO_VIS( IR_GATE = LR_GATE_CHKC ) to LS_MS_RECLO_GRID_CHCK-S_MS_RECLO_VIS.
        check LS_MS_RECLO_GRID-S_MS_RECLO_VIS-TPRCL eq LS_MS_RECLO_GRID_CHCK-S_MS_RECLO_VIS-TPRCL.
        add 1 to LF_PRVDR.
      endloop.

***   Check if Gate has a minimum of 1
      read table ME->T_PRVDR_DEF into LS_PRVDR_DEF with key ID = LS_MS_RECLO_GRID-S_MS_RECLO_VIS-TPRCL.
      check SY-SUBRC = 0.
      check LS_PRVDR_DEF-QTYMI < LF_PRVDR.

***--------------------------------------------------------------------------------------
***   Check if Gate is changeable and can be deleted
      if ZCL_VCXI_XCDR_SERVICE=>IS_INUSE_CHANGEABLE( IR_GATE = LR_GATE ) ne ABAP_FALSE.
        LR_GATE->DO_FREE( ).
      endif.
    endloop.

*** Process Events
    ME->R_GATE->RAISE_EVENTS( ).

*** Refresh is required
    ME->F_REFRESH_REQ = ABAP_TRUE.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_COLPOS type I.
    field-symbols: <T_DATA> type standard table,
                   <S_FCAT> type LVC_S_FCAT.


***----------------------------------------------------------------------------
*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.


***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
          move ABAP_TRUE    to <S_FCAT>-TECH.
          move 0            to <S_FCAT>-COL_POS.

        when 'MATNR'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'TEXT'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'LRECL'.
          move ABAP_TRUE    to <S_FCAT>-F4AVAILABL.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'RCLEN'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.

        when 'FRECL'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
      endcase.


***----------------------------------------------------------------------------
*** Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TPRCL'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TPRCL_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RCLEN'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RCLEN_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RCWGT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'RCWGT_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FRECL'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.

    endloop.

    sort RT_FCAT by COL_POS.
  endmethod.
  method GET_GRID_DATA.

    data: LS_MS_RECLO_GRID  type          ZVCXI_FBSS_S_MS_RECLO_GRID.
    data: LT_GATE           type          /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to   /VCXI/CL_VKSR_GATE,
          LR_APPDATA type ref to   /VCXI/CL_VKSR_APPDATA.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

***--------------------------------------------------------------------------------------
*** Dereferencing of Data Reference
    assign IR_DATA->* to <T_DATA>.

*** Get Gates of RECLO
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_FBSS_PR_MS_RECLO=>C_IPRVT_MS_RECLO
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
      clear: LS_MS_RECLO_GRID.

***--------------------------------------------------------------------------------------
*** Get Gate Data
      move LR_GATE->GET_POSID( ) to LS_MS_RECLO_GRID-POSID.
      move LR_GATE->F_GATKY      to LS_MS_RECLO_GRID-GATKY.
      move LR_GATE               to LS_MS_RECLO_GRID-R_GATE.

*** Get Visualization Data
      move ME->GET_MS_RECLO_VIS( IR_GATE = LR_GATE ) to LS_MS_RECLO_GRID-S_MS_RECLO_VIS.

*** Set Style Details
      ME->CHANGE_STYLE_MS_RECLO( exporting IR_GATE          = LR_GATE
                                           IS_MS_RECLO_VIS  = LS_MS_RECLO_GRID-S_MS_RECLO_VIS
                                 changing  CT_STYL          = LS_MS_RECLO_GRID-T_STYL ).

*** Call DVC Servcie - Modify Style
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                           changing  CT_STYL = LS_MS_RECLO_GRID-T_STYL ).

***--------------------------------------------------------------------------------------
*** Add Entry
      append initial line to <T_DATA> assigning <S_DATA>.
      move-corresponding LS_MS_RECLO_GRID to <S_DATA>.

    endloop.

***------------------------------------------------------------------------------------------------
*** Set Plant to Parameter for Search Help
*** Get Application Data
    move ME->R_GATE->GET_APPDATA( ) to LR_APPDATA.
    if LR_APPDATA is bound.
      set parameter id 'WRK' field LR_APPDATA->F_WERKS.
    endif.

  endmethod.
  method GET_MS_RECLO_VIS.

    data: LR_PR_MS_RECLO type ref to ZCL_VCXI_FBSS_PR_MS_RECLO.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MS_RECLO.
      catch CX_SY_MOVE_CAST_ERROR.                      "#EC NO_HANDLER
    endtry.
    check LR_PR_MS_RECLO is bound.

***--------------------------------------------------------------------------------------
*** Material
    move LR_PR_MS_RECLO->GET_MATNR( )       to RS_MS_RECLO_VIS-MATNR.
    move LR_PR_MS_RECLO->GET_MATNR_DESCR( ) to RS_MS_RECLO_VIS-MATNR_DESCR.

***--------------------------------------------------------------------------------------
*** Reclosing Part Type
    LR_PR_MS_RECLO->GET_TPRCL( importing EF_TPRCL = RS_MS_RECLO_VIS-TPRCL
                                         EF_DESCR = RS_MS_RECLO_VIS-TPRCL_DESCR ).

*** Reclosing Length
    LR_PR_MS_RECLO->GET_RCLEN( importing ES_RCLEN = RS_MS_RECLO_VIS-S_RCLEN ).

*** Reclosing Weight
    LR_PR_MS_RECLO->GET_RCWGT( importing ES_RCWGT = RS_MS_RECLO_VIS-S_RCWGT ).

*** Reclosing Factor
    LR_PR_MS_RECLO->GET_FRECL( importing EF_FRECL = RS_MS_RECLO_VIS-FRECL ).

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data:          LS_MS_RECLO_GRID     type          ZVCXI_FBSS_S_MS_RECLO_GRID.
    data:          LR_CX_CKX            type ref to   /VCXI/CX_CKX.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    check E_MODIFIED eq ABAP_TRUE.

    try.
        SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                             ET_GOOD_CELLS = ET_GOOD_CELLS ).

***     Dereferencing of Data Reference
        assign ME->R_DATA->* to <T_DATA>.

        loop at <T_DATA> assigning <S_DATA>.
          move-corresponding <S_DATA> to LS_MS_RECLO_GRID.

***       Set Values to PR Class
          ME->SET_MS_RECLO_VIS( IR_GATE         = LS_MS_RECLO_GRID-R_GATE
                                IS_MS_RECLO_VIS = LS_MS_RECLO_GRID-S_MS_RECLO_VIS ).

        endloop.

***     Raise Events to Trigger Change
        ME->R_GATE->RAISE_EVENTS( ).

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Request Refresh for ALV
    move ABAP_TRUE to ME->F_REFRESH_REQ.

  endmethod.
  method INIT_GRID.

    data: LT_F4 type LVC_T_F4.


    SUPER->INIT_GRID( ).

    ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED ).

*** Set Enter as Event
    ME->R_GRID->REGISTER_EDIT_EVENT( I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

    ME->R_GRID->REGISTER_F4_FOR_FIELDS( IT_F4 = LT_F4[] ).

  endmethod.
  method INIT_TOOLBAR_DEF.

    data: LF_TRECL     type ZVCXI_FBS_TRECL.
    data: LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF,
          LS_TPRCL     type ZVCXI_FBS_TC211,
          LS_TC211T    type ZVCXI_FBS_TC211T.
    data: LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF,
          LT_TPRCL     type table of ZVCXI_FBS_TC211.
    data: LR_CSTEP_RECLO type ref to ZCL_VCXI_FBSS_PR_CSTEP_RECLO.


*** -----------------------------------------------------------------------------
*** Do Standard Definiton -> only Childs
    clear: ME->T_PRVDR_DEF.

*** Get possible child provider definitions
    LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = ME->F_IPRVT
                                              IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).

*** -----------------------------------------------------------------------------
*** Start Special handling
*** Initialize Reference to Conversion Step Reclosing
    try.
        move ME->R_GATE->R_CLSPR ?to LR_CSTEP_RECLO.
      catch CX_SY_MOVE_CAST_ERROR.                      "#EC NO_HANDLER
    endtry.

    check LR_CSTEP_RECLO is bound.

*** Get Reclosing Type
    LR_CSTEP_RECLO->GET_TRECL( importing EF_TRECL = LF_TRECL ).

    LT_TPRCL = ZCL_VCXI_FBSSC_BAGTY=>T_TC211.

    delete LT_TPRCL where TRECL ne LF_TRECL.

    loop at LT_TPRCL into LS_TPRCL.
      read table LT_PRVDR_DEF into LS_PRVDR_DEF
                              with key ID = LS_TPRCL-ICELM.
      check SY-SUBRC eq 0.

      move LS_PRVDR_DEF-ID            to LS_PRVDR_DEF-IPRVT.
      move LS_TPRCL-TPRCL             to LS_PRVDR_DEF-ID.
      move LS_TPRCL-QTYMI             to LS_PRVDR_DEF-QTYMI.
      move LS_TPRCL-QTYMA             to LS_PRVDR_DEF-QTYMA.
      read table ZCL_VCXI_FBSSC_BAGTY=>T_TC211T
            into LS_TC211T
            with key TPRCL = LS_TPRCL-TPRCL
                     LANGU = SY-LANGU.
      if SY-SUBRC is initial.
        move LS_TC211T-DESCR to LS_PRVDR_DEF-DESCR.
      endif.

      append LS_PRVDR_DEF to ME->T_PRVDR_DEF.
    endloop.

*** -----------------------------------------------------------------------------
*** Define Button
    if LINES( ME->T_PRVDR_DEF ) eq 1.
*** Set Type of Add Button
      move C_BTYPE_BUTTON to ME->F_BTYPE_ADD.
      move ABAP_FALSE     to ME->F_MENU_BUTTON_ACTIV.

      read table ME->T_PRVDR_DEF into LS_PRVDR_DEF index 1.

*** Set Button Text
      concatenate 'Add'(001)    LS_PRVDR_DEF-DESCR into ME->F_TEXT_ADD separated by SPACE.
      concatenate 'Delete'(002) LS_PRVDR_DEF-DESCR into ME->F_TEXT_DEL separated by SPACE.

    else.
*** Set Type of Add Button
      move C_BTYPE_MENU to ME->F_BTYPE_ADD.
      move ABAP_TRUE    to ME->F_MENU_BUTTON_ACTIV.

*** Set Button Text
      move 'Add'(001)    to ME->F_TEXT_ADD.
      move 'Delete'(002) to ME->F_TEXT_DEL.

    endif.

  endmethod.
  method REFRESH_GRID.

*** Init Toolbar Definitions if needed
    ME->INIT_TOOLBAR_DEF( ).

*** Call Super Method
    SUPER->REFRESH_GRID( ).

  endmethod.
  method SET_MS_RECLO_VIS.

    data: LS_MS_RECLO_VIS type        ZVCXI_FBSS_S_MS_RECLO_VIS.
    data: LR_PR_MS_RECLO  type ref to ZCL_VCXI_FBSS_PR_MS_RECLO.


***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MS_RECLO.
      catch CX_SY_MOVE_CAST_ERROR.                      "#EC NO_HANDLER
    endtry.
    check LR_PR_MS_RECLO is bound.

*** Get old Values
    move ME->GET_MS_RECLO_VIS( IR_GATE = IR_GATE ) to LS_MS_RECLO_VIS.

***--------------------------------------------------------------------------------------
*** Material
    if IS_MS_RECLO_VIS-MATNR ne LS_MS_RECLO_VIS-MATNR.
      LR_PR_MS_RECLO->SET_MATNR( IF_MATNR = IS_MS_RECLO_VIS-MATNR
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Reclosing Part Type
    if IS_MS_RECLO_VIS-TPRCL ne LS_MS_RECLO_VIS-TPRCL.
      LR_PR_MS_RECLO->SET_TPRCL( IF_TPRCL = IS_MS_RECLO_VIS-TPRCL
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

**** Reclosing Length
    if IS_MS_RECLO_VIS-RCLEN ne LS_MS_RECLO_VIS-RCLEN.
      LR_PR_MS_RECLO->SET_RCLEN( IS_RCLEN = IS_MS_RECLO_VIS-S_RCLEN
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Reclosing Factor
    if IS_MS_RECLO_VIS-FRECL ne LS_MS_RECLO_VIS-FRECL.
      LR_PR_MS_RECLO->SET_FRECL( IF_FRECL = IS_MS_RECLO_VIS-FRECL
                                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
