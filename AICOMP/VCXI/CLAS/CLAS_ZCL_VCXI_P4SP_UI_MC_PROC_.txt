
class ZCL_VCXI_P4SP_UI_MC_PROC definition
  public
  inheriting from ZCL_VCXI_XCS_UI_TAB
  create public .

public section.

  data S_MC_PROC_VIS type ZVCXI_P4SP_S_MC_PROC_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABPT type ZVCXI_XCS_TABPT default '0100S_MC_TAB-TAB'
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS
    importing
      !IS_VIS type ANY
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
  methods DO_PBO
    redefinition .
protected section.

  data R_PR_MC_PROC type ref to ZCL_VCXI_P4SP_PR_MC_PROC .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_P4SP_UI_MC_PROC definition
class ZCL_VCXI_P4SP_UI_MC_PROC implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
    call function 'ZVCXI_P4SP_UI_MC_PROC_BIND'
      exporting
        IR_UI_MC_PROC = ME
      importing
        ES_DYNP       = ME->S_DYNP
        EF_ACTIVE_TAB = ME->F_ACTIVE_TAB.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE
                        IF_TABPT  = IF_TABPT ).

*** Assign th RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_MC_PROC.

      catch CX_SY_MOVE_CAST_ERROR.
***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Scree using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.

***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.

***       Set Cursor
          if SCREEN-NAME eq ME->F_CURSOR.
            set cursor field ME->F_CURSOR.
          endif.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    SUPER->DO_PBO( ).

***--------------------------------------------------------------------------------------
*** Initialize VIS
    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_VIS.

    data: LS_MC_PROC_VIS  type ZVCXI_P4SP_S_MC_PROC_VIS.


    check ME->R_PR_MC_PROC is bound.

*** "Cast" Vis Structure
    move-corresponding IS_VIS to LS_MC_PROC_VIS.

***--------------------------------------------------------------------------------------
*** Set Plant
    if ME->S_MC_PROC_VIS-WERKS ne LS_MC_PROC_VIS-WERKS.
      ME->R_PR_MC_PROC->SET_WERKS( IF_WERKS = LS_MC_PROC_VIS-WERKS
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Material Number
    if ME->S_MC_PROC_VIS-MATNR ne LS_MC_PROC_VIS-MATNR.
      ME->R_PR_MC_PROC->SET_MATNR( IF_MATNR = LS_MC_PROC_VIS-MATNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Set Text
    if ME->S_MC_PROC_VIS-TEXT ne LS_MC_PROC_VIS-TEXT.
      ME->R_PR_MC_PROC->SET_TEXT( IF_TEXT = LS_MC_PROC_VIS-TEXT
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Procurement Option
    if ME->S_MC_PROC_VIS-PURCH ne LS_MC_PROC_VIS-PURCH.
      ME->R_PR_MC_PROC->SET_PURCH( IF_PURCH = LS_MC_PROC_VIS-PURCH
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if ME->S_MC_PROC_VIS-LIFNR ne LS_MC_PROC_VIS-LIFNR.
      ME->R_PR_MC_PROC->SET_LIFNR( IF_LIFNR = LS_MC_PROC_VIS-LIFNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price
    if ME->S_MC_PROC_VIS-S_PRICE ne LS_MC_PROC_VIS-S_PRICE.
      ME->R_PR_MC_PROC->SET_PRICE( IS_PRICE = LS_MC_PROC_VIS-S_PRICE
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Price per
    if ME->S_MC_PROC_VIS-S_PRICP ne LS_MC_PROC_VIS-S_PRICP.
      ME->R_PR_MC_PROC->SET_PRICP( IS_PRICP = LS_MC_PROC_VIS-S_PRICP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

    SUPER->HANDLE_GATE_FREED( ).

    free: ME->R_PR_MC_PROC.

  endmethod.
  method INIT_VIS.

    free: ME->S_MC_PROC_VIS.
    check ME->R_PR_MC_PROC is bound.

***------------------------------------------------------------------------------------------------
*** Get Material Number
    ME->S_MC_PROC_VIS-WERKS = ME->R_PR_MC_PROC->GET_WERKS( ).

*** Get Material Number
    ME->S_MC_PROC_VIS-MATNR = ME->R_PR_MC_PROC->GET_MATNR( ).

*** Get Text
    ME->S_MC_PROC_VIS-TEXT = ME->R_PR_MC_PROC->GET_TEXT( ).

*** Get Procurement Option
    ME->S_MC_PROC_VIS-PURCH = ME->R_PR_MC_PROC->GET_PURCH( ).

***------------------------------------------------------------------------------------------------
*** Get Vendor, Description and Purchase Flag and Text
    ME->S_MC_PROC_VIS-LIFNR       = ME->R_PR_MC_PROC->GET_LIFNR( ).
    ME->S_MC_PROC_VIS-LIFNR_DESCR = ME->R_PR_MC_PROC->GET_LIFNR_DESCR( ).
    ME->S_MC_PROC_VIS-PURCH       = ME->R_PR_MC_PROC->GET_PURCH( ).
    ME->S_MC_PROC_VIS-TEXT        = ME->R_PR_MC_PROC->GET_TEXT( ).

*** Get Price and Price Unit
    ME->S_MC_PROC_VIS-S_PRICE = ME->R_PR_MC_PROC->GET_PRICE( ).
    ME->S_MC_PROC_VIS-S_PRICP = ME->R_PR_MC_PROC->GET_PRICP( ).

  endmethod.
