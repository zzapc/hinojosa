
class ZCL_VCXI_XCSU_POPUP_PALOP_D definition
  public
  create protected .

public section.

  data S_PALOP_RES_VIS type ZVCXI_XCSU_S_PALOP_RES_VIS read-only .

  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  class-methods START
    importing
      !IS_PALOP_RES type ZVCXI_XCSU_S_PALOP_RES
    raising
      /VCXI/CX_CKX .
  methods DO_USER_COMMAND
    importing
      !IF_UCOMM type SYUCOMM
    raising
      /VCXI/CX_CKX .
protected section.

  constants C_UC_CANCEL type SYUCOMM value 'CANCEL'. "#EC NOTEXT
  data R_GRID_PALOP_LIMIT_UNIT type ref to ZCL_VCXI_XCSU_GRID_PALOP_LIMIT .
  data R_GRID_PALOP_DIMEN_UNIT type ref to ZCL_VCXI_XCSU_GRID_PALOP_DIMEN .
  data R_GRID_PALOP_LIMIT_TRUCK type ref to ZCL_VCXI_XCSU_GRID_PALOP_LIMIT .
  data R_GRID_PALOP_DIMEN_TRUCK type ref to ZCL_VCXI_XCSU_GRID_PALOP_DIMEN .
  data S_PALOP_RES type ZVCXI_XCSU_S_PALOP_RES .

  methods HANDLE_UC_CANCEL
    raising
      /VCXI/CX_CKX .
  methods DO_FREE
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    importing
      !IS_PALOP_RES type ZVCXI_XCSU_S_PALOP_RES
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_XCSU_POPUP_PALOP_D definition
class ZCL_VCXI_XCSU_POPUP_PALOP_D implementation.
method CONSTRUCTOR.

  move IS_PALOP_RES to ME->S_PALOP_RES.

endmethod.
method DO_FREE.

*** Free Grid of Unit Dimension
  if ME->R_GRID_PALOP_DIMEN_UNIT is bound.
    ME->R_GRID_PALOP_DIMEN_UNIT->DO_FREE( ).
    clear ME->R_GRID_PALOP_DIMEN_UNIT.
  endif.

*** Free Grid of Unit Limit
  if ME->R_GRID_PALOP_LIMIT_UNIT is bound.
    ME->R_GRID_PALOP_LIMIT_UNIT->DO_FREE( ).
    clear ME->R_GRID_PALOP_LIMIT_UNIT.
  endif.

*** Free Grid of Truck Dimension
  if ME->R_GRID_PALOP_DIMEN_TRUCK is bound.
    ME->R_GRID_PALOP_DIMEN_TRUCK->DO_FREE( ).
    clear ME->R_GRID_PALOP_DIMEN_TRUCK.
  endif.

*** Free Grid of Truck Limit
  if ME->R_GRID_PALOP_LIMIT_TRUCK is bound.
    ME->R_GRID_PALOP_LIMIT_TRUCK->DO_FREE( ).
    clear ME->R_GRID_PALOP_LIMIT_TRUCK.
  endif.

endmethod.
method DO_PBO.

  clear: ME->S_PALOP_RES_VIS.

***------------------------------------------------------------------
*** Set Packaging Code
  move-corresponding ME->S_PALOP_RES to ME->S_PALOP_RES_VIS.

*** Get Status Icon
  if lines( ME->S_PALOP_RES-R_MSG->T_MSG ) is initial.
    ME->S_PALOP_RES_VIS-STATU = ICON_GREEN_LIGHT.
  else.
    read table ME->S_PALOP_RES-R_MSG->T_MSG with key MSGTY = 'E' transporting no fields.
    if SY-SUBRC = 0.
      ME->S_PALOP_RES_VIS-STATU = ICON_RED_LIGHT.
    else.
      read table ME->S_PALOP_RES-R_MSG->T_MSG with key MSGTY = 'W' transporting no fields.
      if SY-SUBRC = 0.
        ME->S_PALOP_RES_VIS-STATU = ICON_YELLOW_LIGHT.
      endif.
    endif.
  endif.

***------------------------------------------------------------------
*** Set PF-Status
  set pf-status '0100' of program 'SAPLZVCXI_XCSU_POPUP_PALOP_D'.

***------------------------------------------------------------------
*** Dimensions of Unit
  if ME->R_GRID_PALOP_DIMEN_UNIT is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_DIMEN_UNIT
      exporting
        IF_CONTAINER_NAME = '0100CC_PALOP_DIMEN_UNIT'
        IT_DIMEN          = ME->S_PALOP_RES-T_DIMEN_UNIT.
  endif.
*** Refresh
  ME->R_GRID_PALOP_DIMEN_UNIT->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Limits of Unit
  if ME->R_GRID_PALOP_LIMIT_UNIT is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_LIMIT_UNIT
      exporting
        IF_CONTAINER_NAME = '0100CC_PALOP_LIMIT_UNIT'
        IT_LIMIT          = ME->S_PALOP_RES-T_LIMIT_UNIT.
  endif.
*** Refresh
  ME->R_GRID_PALOP_LIMIT_UNIT->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Dimensions of Truck
  if ME->R_GRID_PALOP_DIMEN_TRUCK is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_DIMEN_TRUCK
      exporting
        IF_CONTAINER_NAME = '0100CC_PALOP_DIMEN_TRUCK'
        IT_DIMEN          = ME->S_PALOP_RES-T_DIMEN_TRUCK.
  endif.
*** Refresh
  ME->R_GRID_PALOP_DIMEN_TRUCK->REFRESH_GRID( ).

***------------------------------------------------------------------
*** Limits of Truck
  if ME->R_GRID_PALOP_LIMIT_TRUCK is not bound.
*** Create Grid
    create object ME->R_GRID_PALOP_LIMIT_TRUCK
      exporting
        IF_CONTAINER_NAME = '0100CC_PALOP_LIMIT_TRUCK'
        IT_LIMIT          = ME->S_PALOP_RES-T_LIMIT_TRUCK.
  endif.
*** Refresh
  ME->R_GRID_PALOP_LIMIT_TRUCK->REFRESH_GRID( ).

endmethod.
method DO_USER_COMMAND.

  case IF_UCOMM.
    when C_UC_CANCEL.
      ME->HANDLE_UC_CANCEL( ).
  endcase.

endmethod.
method HANDLE_UC_CANCEL.

*** Leave Popup
  leave to screen 0.

endmethod.
method START.

  data:  LR_POPUP_PALOP_D type ref to ZCL_VCXI_XCSU_POPUP_PALOP_D.

*** Create Instance
  create object LR_POPUP_PALOP_D
    exporting
      IS_PALOP_RES = IS_PALOP_RES.

*** Call Popup
  call function 'ZVCXI_XCSU_POPUP_PALOP_D_START'
    exporting
      IR_POPUP_PALOP_D = LR_POPUP_PALOP_D.

*** Free the Popup
  LR_POPUP_PALOP_D->DO_FREE( ).

endmethod.
