
class ZCL_VCXI_PCSS_UI_MS_STARCH definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_MS_STARCH_VIS type ZVCXI_PCSS_S_MS_STARCH_VIS read-only .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods UPDATE_BY_MS_STARCH_VIS
    importing
      !IS_MS_STARCH_VIS type ZVCXI_PCSS_S_MS_STARCH_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_MS_STARCH type ref to ZCL_VCXI_PCSS_PR_MS_STARCH .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "ZCL_VCXI_PCSS_UI_MS_STARCH definition
class ZCL_VCXI_PCSS_UI_MS_STARCH implementation.
method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'ZVCXI_PCSS_UI_MS_STARCH_BIND'
    exporting
      IR_UI_MS_STARCH = ME
    importing
      ES_DYNP         = ME->S_DYNP.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                      IR_UIGATE = IR_UIGATE
                      IR_GATE   = IR_GATE ).

*** Assign th RP Class to the UI Class
  try.
      move IR_GATE->R_CLSPR ?to ME->R_PR_MS_STARCH.
    catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '801'.
  endtry.

endmethod.
method DO_MODIFY_SCREEN.

  data:  LF_LOCKED type        /VCXI/CKX_LOCKED,
         LF_INUSE  type        /VCXI/VKSR_INUSE.
  data:  LR_CX_CKX type ref to /VCXI/CX_CKX.

  try.
      SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                               IF_DYNNR = IF_DYNNR ).

      LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
      LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***   Modify Screen using DynamicVC
      ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

      loop at screen.
        if LF_LOCKED ne ABAP_TRUE or
           LF_INUSE  ne ABAP_TRUE.
          move 0 to SCREEN-INPUT.
        endif.

***     Hide Generall all Purchase Fields if Material is not Purchased
        if ME->R_PR_MS_STARCH->GET_PURCH( ) eq ABAP_FALSE and
           SCREEN-GROUP1                    eq 'PUR'.
          SCREEN-INPUT = 0.
          SCREEN-INVISIBLE = 1.
        endif.

        modify screen.
      endloop.

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

endmethod.
method DO_PBO.

*** Initialize Visualization Structure
  ME->INIT_VIS( ).

endmethod.
method HANDLE_GATE_FREED.

  SUPER->HANDLE_GATE_FREED( ).

  free: ME->R_PR_MS_STARCH.

endmethod.
method INIT_VIS.

  data: LS_AVGCO type ZVCXI_XCS_S_AVGCO,
        LS_AVGCP type ZVCXI_XCS_S_AVGCP.

  free: ME->S_MS_STARCH_VIS.
  check ME->R_PR_MS_STARCH is bound.

  move ME->R_PR_MS_STARCH->GET_MATNR( )       to ME->S_MS_STARCH_VIS-STMAT.
  move ME->R_PR_MS_STARCH->GET_MATNR_DESCR( ) to ME->S_MS_STARCH_VIS-STMAT_DESCR.

  move ME->R_PR_MS_STARCH->GET_STARC( )       to ME->S_MS_STARCH_VIS-STARC.
  move ME->R_PR_MS_STARCH->GET_STARC_DESCR( ) to ME->S_MS_STARCH_VIS-STARC_DESCR.

  move ME->R_PR_MS_STARCH->GET_AVGCO( )       to LS_AVGCO.
  move-corresponding LS_AVGCO                 to ME->S_MS_STARCH_VIS.

  move ME->R_PR_MS_STARCH->GET_AVGCP( )       to LS_AVGCP.
  move-corresponding LS_AVGCP                 to ME->S_MS_STARCH_VIS.

  move ME->R_PR_MS_STARCH->GET_STARF( )       to ME->S_MS_STARCH_VIS-STARF.

*** Get Purchase Informations
  move ME->R_PR_MS_STARCH->GET_PRICE( )       to ME->S_MS_STARCH_VIS-S_PRICE.
  move ME->R_PR_MS_STARCH->GET_PRICP( )       to ME->S_MS_STARCH_VIS-S_PRICP.
  move ME->R_PR_MS_STARCH->GET_PURCH( )       to ME->S_MS_STARCH_VIS-PURCH.

endmethod.
method UPDATE_BY_MS_STARCH_VIS.

  check ME->R_PR_MS_STARCH is bound.

*** Set Procurement Option
  if ME->S_MS_STARCH_VIS-PURCH ne IS_MS_STARCH_VIS-PURCH.
    ME->R_PR_MS_STARCH->SET_PURCH( IF_PURCH = IS_MS_STARCH_VIS-PURCH
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Only update if Purchase Falg is abap_true
  if ME->S_MS_STARCH_VIS-PURCH eq ABAP_TRUE.

    if ME->S_MS_STARCH_VIS-PRICE ne IS_MS_STARCH_VIS-PRICE.
      ME->R_PR_MS_STARCH->SET_PRICE( IS_PRICE = IS_MS_STARCH_VIS-S_PRICE
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

    if ME->S_MS_STARCH_VIS-PRICP ne IS_MS_STARCH_VIS-PRICP.
      ME->R_PR_MS_STARCH->SET_PRICP( IS_PRICP = IS_MS_STARCH_VIS-S_PRICP
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.
  endif.

endmethod.
