
class ZCL_VCXI_FBSS_PR_HPART definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_FBSS_HANDLE_HPART .

  constants C_IPRVT_HPART type /VCXI/VKSC_IPRVT value 'ZVCXI_FBSS_HPART' ##NO_TEXT.
  constants C_PARID_COARE type /VCXI/VKS_PARID value 'ZVCXI_FB_COARE' ##NO_TEXT.
  constants C_PARID_HPARE type /VCXI/VKS_PARID value 'ZVCXI_FB_HPARE' ##NO_TEXT.
  constants C_PARID_HPFCT type /VCXI/VKS_PARID value 'ZVCXI_FB_HPFCT' ##NO_TEXT.
  constants C_PARID_HPLEN type /VCXI/VKS_PARID value 'ZVCXI_FB_HPLEN' ##NO_TEXT.
  constants C_PARID_HPWGT type /VCXI/VKS_PARID value 'ZVCXI_FB_HPWGT' ##NO_TEXT.
  constants C_PARID_HPWID type /VCXI/VKS_PARID value 'ZVCXI_FB_HPWID' ##NO_TEXT.
  constants C_PARID_TPHND type /VCXI/VKS_PARID value 'ZVCXI_FB_TPHND' ##NO_TEXT.

  methods GET_COARE
    exporting
      !ES_COARE type ZVCXI_FBS_S_COARE
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_HPARE
    exporting
      !ES_HPARE type ZVCXI_FBS_S_HPARE
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_HPART_CUSTOMIZING
    returning
      value(RS_TC112) type ZVCXI_FBS_TC112
    raising
      /VCXI/CX_CKX .
  methods GET_HPFCT
    exporting
      !EF_HPFCT type ZVCXI_FBS_HPFCT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_HPLEN
    exporting
      !ES_HPLEN type ZVCXI_FBS_S_HPLEN
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_HPWGT
    exporting
      !ES_HPWGT type ZVCXI_FBS_S_HPWGT
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_HPWID
    exporting
      !ES_HPWID type ZVCXI_FBS_S_HPWID
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods GET_TPHND
    exporting
      !EF_TPHND type ZVCXI_FBS_TPHND
      !EF_SETBY type /VCXI/VKSR_SETBY
    raising
      /VCXI/CX_CKX .
  methods SET_COARE
    importing
      !IS_COARE type ZVCXI_FBS_S_COARE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .
  methods SET_HPFCT
    importing
      !IF_HPFCT type ZVCXI_FBS_HPFCT default '1'
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .
  methods SET_HPLEN
    importing
      !IS_HPLEN type ZVCXI_FBS_S_HPLEN
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .
  methods SET_HPWID
    importing
      !IS_HPWID type ZVCXI_FBS_S_HPWID
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .
  methods SET_TPHND
    importing
      !IF_TPHND type ZVCXI_FBS_TPHND
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_DESCR
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_BFILM type /VCXI/VKSC_IEVNT value 'INIT_BFILM' ##NO_TEXT.
  constants C_IEVNT_I_INIT_HPFCT type /VCXI/VKSC_IEVNT value 'INIT_HPFCT' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_HPARE type /VCXI/VKSC_IEVNT value 'RECALC_HPARE' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_HPWGT type /VCXI/VKSC_IEVNT value 'RECALC_HPWGT' ##NO_TEXT.
  constants C_IEVNT_I_SET_DEFAULT type /VCXI/VKSC_IEVNT value 'SET_DEFAULT' ##NO_TEXT.
  constants C_IEVNT_O_COARE_CHANGED type /VCXI/VKSC_IEVNT value 'COARE_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_HPARE_CHANGED type /VCXI/VKSC_IEVNT value 'HPARE_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_HPFCT_CHANGED type /VCXI/VKSC_IEVNT value 'HPFCT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_HPLEN_CHANGED type /VCXI/VKSC_IEVNT value 'HPLEN_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_HPWGT_CHANGED type /VCXI/VKSC_IEVNT value 'HPWGT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_HPWID_CHANGED type /VCXI/VKSC_IEVNT value 'HPWID_CHANGED' ##NO_TEXT.

  methods CHECK_HPARE
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_COARE
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_HPFCT
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_HPLEN
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_HPWID
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods CHECK_TPHND
    returning
      value(RF_RETURN) type I
    raising
      /VCXI/CX_CKX .
  methods GET_BFILM_SURWT
    exporting
      !ES_SURWT type ZVCXI_F0S_S_SURWT
    raising
      /VCXI/CX_CKX .
  methods GET_THNDL
    exporting
      !EF_THNDL type ZVCXI_FBS_THNDL
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_BFILM
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_HPFCT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_HPARE
    raising
      /VCXI/CX_CKX .
  methods HANDLE_RECALC_HPWGT
    raising
      /VCXI/CX_CKX .
  methods HANDLE_SET_DEFAULT
    raising
      /VCXI/CX_CKX .
  methods SET_HPARE
    importing
      !IS_HPARE type ZVCXI_FBS_S_HPARE
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_HPWGT
    importing
      !IS_HPWGT type ZVCXI_FBS_S_HPWGT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'USER'
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FBSS_PR_HPART definition
class ZCL_VCXI_FBSS_PR_HPART implementation.
method CHECK_COARE.

*** 0 - Handle Part Cutout Area is maintained.
*** 1 - Handle Part Cutout Area is not maintained.
*** 2 - Do not check.

  data: LS_COARE type  ZVCXI_FBS_S_COARE,
        LS_TC112 type  ZVCXI_FBS_TC112.

  move 2 to RF_RETURN.

  ME->GET_COARE( importing ES_COARE = LS_COARE ).
  if LS_COARE-COARE is not initial.
    move 0 to RF_RETURN.
    return.
  endif.

  move ME->GET_HPART_CUSTOMIZING( ) to LS_TC112.

  if LS_TC112-OHNCO eq 'M' and LS_COARE-COARE is initial.
    move 1 to RF_RETURN.
  endif.

endmethod.
method CHECK_HPARE.
*** 0 - Handle Part Area is maintained.
*** 1 - Handle Part Area is not maintained.

  data:  LS_HPARE type ZVCXI_FBS_S_HPARE.

  ME->GET_HPARE( importing ES_HPARE = LS_HPARE ).

  if LS_HPARE-HPARE is initial.
    move 1 to RF_RETURN.
  endif.

endmethod.
method CHECK_HPFCT.

*** 0 - Handle Part Factor is maintained.
*** 1 - Handle Part Factor is not maintained.

  data:  LF_HPFCT type ZVCXI_FBS_HPFCT.

  ME->GET_HPFCT( importing EF_HPFCT = LF_HPFCT ).

  if LF_HPFCT is initial.
    move 1 to RF_RETURN.
  endif.

endmethod.
  method CHECK_HPLEN.

*** 0 - Handle Part Length is maintained.
*** 1 - Handle Part Length is not maintained.
*** 2 - Do not check.

    data: LS_HPLEN type  ZVCXI_FBS_S_HPLEN,
          LS_TC112 type  ZVCXI_FBS_TC112.


    move 2 to RF_RETURN.

    ME->GET_HPLEN( importing ES_HPLEN = LS_HPLEN ).
    if LS_HPLEN-HPLEN is not initial.
      move 0 to RF_RETURN.
      return.
    endif.

    move ME->GET_HPART_CUSTOMIZING( ) to LS_TC112.

    if LS_TC112-OHNIN eq 'M' and LS_HPLEN-HPLEN is initial.
      move 1 to RF_RETURN.
    endif.

  endmethod.
method CHECK_HPWID.

*** 0 - Handle Part Width is maintained.
*** 1 - Handle Part Width is not maintained.
*** 2 - Do not check.

  data: LS_HPWID type  ZVCXI_FBS_S_HPWID,
        LS_TC112 type  ZVCXI_FBS_TC112.

  move 2 to RF_RETURN.

  ME->GET_HPWID( importing ES_HPWID = LS_HPWID ).
  if LS_HPWID-HPWID is not initial.
    move 0 to RF_RETURN.
    return.
  endif.

  move ME->GET_HPART_CUSTOMIZING( ) to LS_TC112.

  if LS_TC112-OHNIN eq 'M' and LS_HPWID-HPWID is initial.
    move 1 to RF_RETURN.
  endif.

endmethod.
method CHECK_TPHND.

*** 0 - Handle Part Type is maintained.
*** 1 - Handle Part Type is not maintained.

  data:  LF_TPHND type ZVCXI_FBS_TPHND.

  ME->GET_TPHND( importing EF_TPHND = LF_TPHND ).

  if LF_TPHND is initial.
    move 1 to RF_RETURN.
  endif.

endmethod.
  method GET_BFILM_SURWT.

    data: LS_SURWT type ZVCXI_F0S_S_SURWT.
    data: LT_GATE  type /VCXI/VKSR_TT_GATE.
    data: LR_GATE     type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_BFILM type ref to ZCL_VCXI_FBSS_PR_BFILM.


*** Get Bag Films
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_FBSS_PR_BFILM=>C_IPRVT_BFILM
                                     IF_INUSE  = ABAP_TRUE
                                     IF_SORTED = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
      move LR_GATE->R_CLSPR ?to LR_PR_BFILM.
      check LR_PR_BFILM is bound.

***   Get Bag Film Surface Weight
      clear LS_SURWT.
      LR_PR_BFILM->GET_SURWT( importing ES_SURWT = LS_SURWT ).

***   Get Sum of Surface Weights
      if ES_SURWT is initial.
        move LS_SURWT-SURWT     to ES_SURWT-SURWT.
        move LS_SURWT-SURWT_UOM to ES_SURWT-SURWT_UOM.
      else.
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_SURWT-SURWT
                                                            IF_CALCV_UOM_1 = LS_SURWT-SURWT_UOM
                                                            IF_CALCV_2     = ES_SURWT-SURWT
                                                            IF_CALCV_UOM_2 = ES_SURWT-SURWT_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                            IF_UOM         = ES_SURWT-SURWT_UOM
                                                  importing EF_CALCV       = ES_SURWT-SURWT
                                                            EF_CALCV_UOM   = ES_SURWT-SURWT_UOM ).
      endif.

    endloop.

  endmethod.
  method GET_COARE.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COARE ).
    move LS_PARAM-ATFLV to ES_COARE-COARE.
    move LS_PARAM-UNIT  to ES_COARE-COARE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_DESCR.

    data: LF_TPHND  type ZVCXI_FBS_TPHND.
    data: LS_TC111T type ZVCXI_FBS_TC111T.

    ME->GET_TPHND( importing EF_TPHND = LF_TPHND ).

    if LF_TPHND is initial.
      SUPER->GET_DESCR( receiving RF_DESCR = RF_DESCR ).
    else.
      read table ZCL_VCXI_FBSSC_BAGTY=>T_TC111T into LS_TC111T
                                                with key TPHND = LF_TPHND.
      check SY-SUBRC is initial.
      move LS_TC111T-DESCR to RF_DESCR.
    endif.

  endmethod.
  method GET_HPARE.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPARE ).
    move LS_PARAM-ATFLV to ES_HPARE-HPARE.
    move LS_PARAM-UNIT  to ES_HPARE-HPARE_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_HPART_CUSTOMIZING.

    data: LF_THNDL type  ZVCXI_FBS_THNDL,
          LF_TPHND type  ZVCXI_FBS_TPHND.

    ME->GET_THNDL( importing EF_THNDL = LF_THNDL ).
    ME->GET_TPHND( importing EF_TPHND = LF_TPHND ).

    read table ZCL_VCXI_FBSSC_BAGTY=>T_TC112 into RS_TC112 with key THNDL = LF_THNDL
                                                                    TPHND = LF_TPHND.

  endmethod.
  method GET_HPFCT.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPFCT ).
    move LS_PARAM-ATFLV to EF_HPFCT.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_HPLEN.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPLEN ).
    move LS_PARAM-ATFLV to ES_HPLEN-HPLEN.
    move LS_PARAM-UNIT  to ES_HPLEN-HPLEN_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_HPWGT.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPWGT ).
    move LS_PARAM-ATFLV to ES_HPWGT-HPWGT.
    move LS_PARAM-UNIT  to ES_HPWGT-HPWGT_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_HPWID.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPWID ).
    move LS_PARAM-ATFLV to ES_HPWID-HPWID.
    move LS_PARAM-UNIT  to ES_HPWID-HPWID_UOM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

    SUPER->GET_STATUS( receiving RF_ELMST = RF_ELMST ).

*** Check Handle Part Type
    if ME->CHECK_TPHND( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

*** Check Handle Part Width
    case ME->CHECK_HPWID( ).
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.

*** Check Handle Part Length
    case ME->CHECK_HPLEN( ) .
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.

*** Check Handle Part Area
    case ME->CHECK_HPARE( ) .
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.


*** Check Handle Part Factor
    if ME->CHECK_HPFCT( ) eq 0.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                     IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endif.

*** Check Handle Part Cutout Area
    case ME->CHECK_COARE( ) .
      when 0.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G ).
      when 1.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                       IF_ELMST2 = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R ).
    endcase.

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

*** Check Handle Part Type
    case ME->CHECK_TPHND( ).
      when 0.
***     Handle Part Type is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '401' ).
      when 1.
***     Handle Part Type is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '402' ).
    endcase.

*** Check Handle Part Width
    case ME->CHECK_HPWID( ).
      when 0.
***     Handle Part Width is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '411' ).
      when 1.
***     Handle Part Width is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '412' ).
    endcase.

*** Check Handle Part Length
    case ME->CHECK_HPLEN( ).
      when 0.
***     Handle Part Length is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '409' ).
      when 1.
***     Handle Part Length is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '410' ).
    endcase.

*** Check Handle Part Area
    case ME->CHECK_HPARE( ).
      when 0.
***     Handle Part Area is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '413' ).
      when 1.
***     Handle Part Area is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '414' ).
    endcase.

*** Check Handle Part Factor
    case ME->CHECK_HPFCT( ).
      when 0.
***     Handle Part Factor is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '403' ).
      when 1.
***     Handle Part Factor is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '404' ).
    endcase.

*** Check Handle Part Cutout Area
    case ME->CHECK_COARE( ).
      when 0.
***     Handle Part Cutout Area is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '407' ).
      when 1.
***     Handle Part Cutout Area is not maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'ZVCXI_FBSS'
                                 IF_MSGTY = 'E'
                                 IF_MSGNO = '408' ).
    endcase.

  endmethod.
  method GET_THNDL.

    data: LF_THNDL type ZVCXI_FBS_THNDL.
    data: LT_GATE  type /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_HANDLE type ref to ZCL_VCXI_FBSS_PR_HANDLE.


*** Get Handle Type Provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_HANDLE=>C_IPRVT_HANDLE
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into LR_GATE index 1.

    move LR_GATE->R_CLSPR ?to LR_PR_HANDLE.
    check LR_PR_HANDLE is bound.

*** Get Handle Type
    LR_PR_HANDLE->GET_THNDL( importing EF_THNDL = LF_THNDL ).

    move LF_THNDL to EF_THNDL.

  endmethod.
  method GET_TPHND.

    data: LS_PARAM  type  /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPHND ).
    move LS_PARAM-ATWRT to EF_TPHND.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.

      when C_IEVNT_I_SET_DEFAULT.
        ME->HANDLE_SET_DEFAULT( ).

      when C_IEVNT_I_INIT_HPFCT.
        ME->HANDLE_INIT_HPFCT( ).

      when C_IEVNT_I_INIT_BFILM.
        ME->HANDLE_INIT_BFILM( ).

      when C_IEVNT_I_RECALC_HPARE.
        ME->HANDLE_RECALC_HPARE( ).

      when C_IEVNT_I_RECALC_HPWGT.
        ME->HANDLE_RECALC_HPWGT( ).

    endcase.

  endmethod.
  method HANDLE_INIT_BFILM.

    data: LS_TC112          type        ZVCXI_FBS_TC112.
    data: LT_GATE           type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE           type ref to /VCXI/CL_VKSR_GATE.

*** Get Handle Part Customizing
    move ME->GET_HPART_CUSTOMIZING( ) to LS_TC112.

*** Check Toolbar Bag Films Not Allowed
    check LS_TC112-OHNIN eq 'N'.

*** Get existing Bag Films
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FBSS_PR_BFILM=>C_IPRVT_BFILM
                                     IF_INUSE = ABAP_TRUE ).

*** Free Bag Films
    loop at LT_GATE into LR_GATE.
      LR_GATE->DO_FREE( ).
    endloop.

  endmethod.
  method HANDLE_INIT_HPFCT.

    data:  LF_HPFCT   type ZVCXI_FBS_HPFCT.

    ME->GET_HPFCT( importing EF_HPFCT = LF_HPFCT ).

*** Set Handle Part Factor initial value
    if LF_HPFCT is initial.
      move 1 to LF_HPFCT.
      ME->SET_HPFCT( exporting IF_HPFCT = LF_HPFCT ).
    endif.

  endmethod.
  method HANDLE_RECALC_HPARE.

    data: LF_HPFCT type        ZVCXI_FBS_HPFCT.
    data: LS_HPWID type        ZVCXI_FBS_S_HPWID,
          LS_HPLEN type        ZVCXI_FBS_S_HPLEN,
          LS_COARE type        ZVCXI_FBS_S_COARE,
          LS_HPARE type        ZVCXI_FBS_S_HPARE.
    data: LR_DATA  type ref to DATA.
    field-symbols: <F_DATA>     type        ANY.

*** Get Handle Part Area (for Unit)
    ME->GET_HPARE( importing ES_HPARE = LS_HPARE ).
    clear LS_HPARE-HPARE.

*** Get Handle Part Length, Width
    ME->GET_HPLEN( importing ES_HPLEN = LS_HPLEN ).
    ME->GET_HPWID( importing ES_HPWID = LS_HPWID ).

    try.
***     Calculate Handle Part Area
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_HPLEN-HPLEN
                                                            IF_CALCV_UOM_1 = LS_HPLEN-HPLEN_UOM
                                                            IF_CALCV_2     = LS_HPWID-HPWID
                                                            IF_CALCV_UOM_2 = LS_HPWID-HPWID_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                            IF_UOM         = LS_HPARE-HPARE_UOM
                                                  importing EF_CALCV       = LS_HPARE-HPARE
                                                            EF_CALCV_UOM   = LS_HPARE-HPARE_UOM ).

***     Reduce Handle Part Cutout Area
        ME->GET_COARE( importing ES_COARE = LS_COARE ).
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_HPARE-HPARE
                                                            IF_CALCV_UOM_1 = LS_HPARE-HPARE_UOM
                                                            IF_CALCV_2     = LS_COARE-COARE
                                                            IF_CALCV_UOM_2 = LS_COARE-COARE_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_SUBTRACT
                                                            IF_UOM         = LS_HPARE-HPARE_UOM
                                                  importing EF_CALCV       = LS_HPARE-HPARE
                                                            EF_CALCV_UOM   = LS_HPARE-HPARE_UOM ).

***     Multiply Area by Handle Part Factor
        ME->GET_HPFCT( importing EF_HPFCT = LF_HPFCT ).
        if LF_HPFCT gt 0.
          LS_HPARE-HPARE = LS_HPARE-HPARE * LF_HPFCT.
        endif.

      catch CX_SY_ARITHMETIC_OVERFLOW.
        LR_DATA = CL_ABAP_EXCEPTIONAL_VALUES=>GET_MAX_VALUE( IN = LS_HPARE-HPARE ).
        assign LR_DATA->* to <F_DATA>.
        LS_HPARE-HPARE = <F_DATA>.
    endtry.

*** No negative Area
    if LS_HPARE-HPARE lt 0.
      move 0 to LS_HPARE-HPARE.
    endif.

*** Set Handle Part Area
    ME->SET_HPARE( IS_HPARE = LS_HPARE ).

  endmethod.
  method HANDLE_RECALC_HPWGT.

    data: LS_HPARE  type  ZVCXI_FBS_S_HPARE,
          LS_SURWT  type  ZVCXI_F0S_S_SURWT,
          LS_HPWGT  type  ZVCXI_FBS_S_HPWGT.

*** Get Handle Part Weight (for Unit)
    ME->GET_HPWGT( importing ES_HPWGT = LS_HPWGT ).
    clear LS_HPWGT-HPWGT.

*** Get Handle Part Area
    ME->GET_HPARE( importing ES_HPARE = LS_HPARE ).
    if LS_HPARE-HPARE is not initial.

***   Get Bag Film Surface Weights Sum
      ME->GET_BFILM_SURWT( importing ES_SURWT = LS_SURWT ).

      if LS_SURWT-SURWT is not initial.

***     Calculate Handle Part Weight
        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_HPARE-HPARE
                                                            IF_CALCV_UOM_1 = LS_HPARE-HPARE_UOM
                                                            IF_CALCV_2     = LS_SURWT-SURWT
                                                            IF_CALCV_UOM_2 = LS_SURWT-SURWT_UOM
                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_MULTIPLY
                                                            IF_UOM         = LS_HPWGT-HPWGT_UOM
                                                  importing EF_CALCV       = LS_HPWGT-HPWGT
                                                            EF_CALCV_UOM   = LS_HPWGT-HPWGT_UOM ).

      endif.
    endif.

*** Set Handle Part Weight
    ME->SET_HPWGT( IS_HPWGT = LS_HPWGT ).

  endmethod.
  method HANDLE_SET_DEFAULT.

    ZCL_VCXI_XCDR_SERVICE=>SET_DEFAULT( IR_GATE = ME->R_GATE ).

  endmethod.
  method SET_COARE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_COARE ).

    move IS_COARE-COARE     to LS_PARAM-ATFLV.
    move IS_COARE-COARE_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_COARE_CHANGED ).

    endif.

  endmethod.
  method SET_HPARE.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPARE ).

    move IS_HPARE-HPARE     to LS_PARAM-ATFLV.
    move IS_HPARE-HPARE_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HPARE_CHANGED ).

    endif.

  endmethod.
  method SET_HPFCT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPFCT ).

    move IF_HPFCT to LS_PARAM-ATFLV.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HPFCT_CHANGED ).

    endif.

  endmethod.
  method SET_HPLEN.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPLEN ).

    move IS_HPLEN-HPLEN     to LS_PARAM-ATFLV.
    move IS_HPLEN-HPLEN_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HPLEN_CHANGED ).

    endif.

  endmethod.
  method SET_HPWGT.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPWGT ).

    move IS_HPWGT-HPWGT     to LS_PARAM-ATFLV.
    move IS_HPWGT-HPWGT_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HPWGT_CHANGED ).

    endif.

  endmethod.
  method SET_HPWID.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_HPWID ).

    move IS_HPWID-HPWID     to LS_PARAM-ATFLV.
    move IS_HPWID-HPWID_UOM to LS_PARAM-UNIT.
    move IF_SETBY           to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.

***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_HPWID_CHANGED ).

    endif.

  endmethod.
  method SET_TPHND.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_TPHND ).

    move IF_TPHND to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  endmethod.
  method ZIF_VCXI_FBSS_HANDLE_HPART~GET_HPWGT.

    ME->GET_HPWGT( importing ES_HPWGT = ES_HPWGT
                             EF_SETBY = EF_SETBY ).

  endmethod.
  method ZIF_VCXI_FBSS_HANDLE_HPART~GET_TPHND.

    ME->GET_TPHND( importing EF_TPHND = EF_TPHND
                             EF_SETBY = EF_SETBY ).

  endmethod.
  method ZIF_VCXI_FBSS_HANDLE_HPART~SET_TPHND.

    ME->SET_TPHND( exporting IF_TPHND = IF_TPHND
                             IF_SETBY = IF_SETBY ).

  endmethod.
