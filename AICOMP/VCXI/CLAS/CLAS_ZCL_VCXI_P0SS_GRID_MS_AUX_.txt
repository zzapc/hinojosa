
class ZCL_VCXI_P0SS_GRID_MS_AUX definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  type-pools ABAP .
  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_TABNAME type TABNAME
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods CHANGE_STYLE_AUX
    importing
      !IF_PURCH type ZVCXI_XCS_PURCH
      !IF_NO_DUMMY type FLAG optional
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_P0SS_GRID_MS_AUX definition
class ZCL_VCXI_P0SS_GRID_MS_AUX implementation.
method CHANGE_STYLE_AUX.

  free CT_STYL.

***------------------------------------------------------------------
*** Purchase Aux
  if IF_PURCH ne ABAP_TRUE.

*** Set Price = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICE'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Price Per = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PRICP'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

*** Set Vendor = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'LIFNR'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endif.

*** If Material Nr. was filled -> disable Quote Mat Flag
  if IF_NO_DUMMY eq ABAP_TRUE.
*** Set Quote Material Flag = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'QUMAT'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_ENABLED
                      changing  CT_STYL      = CT_STYL ).
  else.
*** Set Purchase Flag = Disable
    ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'PURCH'
                                IF_STYLE     = ME->F_STYLE_DISABLED
                      changing  CT_STYL      = CT_STYL ).

  endif.

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = 'ZVCXI_P0SS_S_MS_AUX_GRID'
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

***   Define Provider Type for Button
  ME->F_IPRVT = ZCL_VCXI_P0SS_PR_MS_AUX=>C_IPRVT_XCS_MS.

endmethod.
method GET_FIELDCAT.

  data:          LF_LOCKED       type          /VCXI/CKX_LOCKED,
                 LF_INUSE        type          /VCXI/VKSR_INUSE,
                 LF_PURCH        type          ABAP_BOOL.
  data:          LS_MS_AUX_GRID  type          ZVCXI_P0SS_S_MS_AUX_GRID.
  field-symbols: <T_DATA>        type standard table,
                 <S_DATA>        type          any,
                 <S_FCAT>        type          LVC_S_FCAT.

***----------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
  assign ME->R_DATA->* to <T_DATA>.

  loop at <T_DATA> assigning <S_DATA>.
    move-corresponding <S_DATA> to LS_MS_AUX_GRID.
    if LS_MS_AUX_GRID-PURCH eq ABAP_TRUE.
      move ABAP_TRUE to LF_PURCH.
    endif.
  endloop.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL'.
        move ABAP_TRUE    to <S_FCAT>-TECH.
        move 0            to <S_FCAT>-COL_POS.

      when 'MATNR' or 'TEXT'  or 'LIFNR' or
           'PRICE' or 'PRICP' or 'AVGCO' or 'AVGCP'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'PURCH'.
        move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

      when 'QUMAT'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
          move ABAP_TRUE    to <S_FCAT>-CHECKBOX.
        endif.
    endcase.

***----------------------------------------------------------------------------
*** Hide Field if not purchase
    if LF_PURCH ne ABAP_TRUE.
      if <S_FCAT>-FIELDNAME eq 'LIFNR' or
         <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR' or
         <S_FCAT>-FIELDNAME eq 'PRICE' or
         <S_FCAT>-FIELDNAME eq 'PRICE_CURR' or
         <S_FCAT>-FIELDNAME eq 'PRICP' or
         <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.
        move ABAP_TRUE to <S_FCAT>-NO_OUT.
      endif.
    endif.

*** Sort columns
    case <S_FCAT>-FIELDNAME.
      when 'MATNR'.
        move 1 to <S_FCAT>-COL_POS.
      when 'MATNR_DESCR'.
        move 2 to <S_FCAT>-COL_POS.
      when 'TEXT'.
        move 3 to <S_FCAT>-COL_POS.
      when 'PRICE'.
        move 4 to <S_FCAT>-COL_POS.
      when 'PRICE_CURR'.
        move 5 to <S_FCAT>-COL_POS.
      when 'PRICP'.
        move 6 to <S_FCAT>-COL_POS.
      when 'PRICP_UOM'.
        move 7 to <S_FCAT>-COL_POS.
      when 'AVGCO'.
        move 8 to <S_FCAT>-COL_POS.
      when 'AVGCO_UOM'.
        move 9 to <S_FCAT>-COL_POS.
      when 'AVGCP'.
        move 10 to <S_FCAT>-COL_POS.
      when 'AVGCP_UOM'.
        move 11 to <S_FCAT>-COL_POS.
      when 'QUMAT'.
        move 12 to <S_FCAT>-COL_POS.
      when 'PURCH'.
        move 13 to <S_FCAT>-COL_POS.
      when 'LIFNR'.
        move 14 to <S_FCAT>-COL_POS.
      when 'LIFNR_DESCR'.
        move 14 to <S_FCAT>-COL_POS.
    endcase.
  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data:          LF_NO_DUMMY          type          FLAG.
  data:          LS_MS_AUX_GRID       type          ZVCXI_P0SS_S_MS_AUX_GRID,
                 LS_AVGCO             type          ZVCXI_XCS_S_AVGCO,
                 LS_AVGCP             type          ZVCXI_XCS_S_AVGCP.
  data:          LT_GATE              type          /VCXI/VKSR_TT_GATE.
  data:          LR_GATE              type ref to   /VCXI/CL_VKSR_GATE,
                 LR_PR_MS_AUX         type ref to   ZCL_VCXI_P0SS_PR_MS_AUX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of Aux Materials
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSS_PR_MS=>C_IPRVT_XCS_MS
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    clear LS_MS_AUX_GRID.
    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MS_AUX.
        check LR_PR_MS_AUX is bound.

***------------------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( )            to LS_MS_AUX_GRID-POSID.
        move LR_GATE->F_GATKY                 to LS_MS_AUX_GRID-GATKY.
        move LR_GATE                          to LS_MS_AUX_GRID-R_GATE.

        move LR_PR_MS_AUX->GET_MATNR( )       to LS_MS_AUX_GRID-MATNR.
        move LR_PR_MS_AUX->GET_MATNR_DESCR( ) to LS_MS_AUX_GRID-MATNR_DESCR.

        move LR_PR_MS_AUX->GET_LIFNR( )       to LS_MS_AUX_GRID-LIFNR.
        move LR_PR_MS_AUX->GET_LIFNR_DESCR( ) to LS_MS_AUX_GRID-LIFNR_DESCR.

        move LR_PR_MS_AUX->GET_TEXT( )        to LS_MS_AUX_GRID-TEXT.
        move LR_PR_MS_AUX->GET_PURCH( )       to LS_MS_AUX_GRID-PURCH.
        move LR_PR_MS_AUX->GET_QUMAT( )       to LS_MS_AUX_GRID-QUMAT.

        move LR_PR_MS_AUX->GET_AVGCO( )       to LS_AVGCO.
        move-corresponding LS_AVGCO           to LS_MS_AUX_GRID.

        move LR_PR_MS_AUX->GET_AVGCP( )       to LS_AVGCP.
        move-corresponding LS_AVGCP           to LS_MS_AUX_GRID.

        move LR_PR_MS_AUX->GET_PRICE( )       to LS_MS_AUX_GRID-S_PRICE.
        move LR_PR_MS_AUX->GET_PRICP( )       to LS_MS_AUX_GRID-S_PRICP.

        move LR_PR_MS_AUX->CHECK_MATNR_NO_DUMMY( )
                                              to LF_NO_DUMMY.

*** -----------------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_AUX( exporting IF_PURCH    = LS_MS_AUX_GRID-PURCH
                                        IF_NO_DUMMY = LF_NO_DUMMY
                              changing  CT_STYL     = LS_MS_AUX_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MS_AUX_GRID-T_STYL ).

***------------------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MS_AUX_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data:          LF_ROW_ID            type          I.
  data:          LS_MS_AUX_GRID       type          ZVCXI_P0SS_S_MS_AUX_GRID,
                 LS_MODI              type          LVC_S_MODI,
                 LS_AVGCO             type          ZVCXI_XCS_S_AVGCO,
                 LS_AVGCP             type          ZVCXI_XCS_S_AVGCP,
                 LS_PRICE             type          ZVCXI_XCS_S_PRICE,
                 LS_PRICP             type          ZVCXI_XCS_S_PRICP.
  data:          LR_PR_MS_AUX         type ref to   ZCL_VCXI_P0SS_PR_MS_AUX,
                 LR_CX_CKX            type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA>             type standard table,
                 <S_DATA>             type          any.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move SY-TABIX to LF_ROW_ID.
        read table ET_GOOD_CELLS with key ROW_ID = LF_ROW_ID
                                 transporting no fields.
        check SY-SUBRC eq 0.

        try.
            move-corresponding <S_DATA> to LS_MS_AUX_GRID.
            check LS_MS_AUX_GRID-R_GATE is bound.

            move LS_MS_AUX_GRID-R_GATE->R_CLSPR ?to LR_PR_MS_AUX.
            check LR_PR_MS_AUX is bound.

***         Set Values to PR Class
            loop at ET_GOOD_CELLS into LS_MODI where ROW_ID = LF_ROW_ID.
              case LS_MODI-FIELDNAME.
                when 'MATNR'.
                  LR_PR_MS_AUX->SET_MATNR( IF_MATNR = LS_MS_AUX_GRID-MATNR
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'TEXT'.
                  LR_PR_MS_AUX->SET_TEXT(  IF_TEXT  = LS_MS_AUX_GRID-TEXT
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'AVGCO'.
                  move-corresponding LS_MS_AUX_GRID to LS_AVGCO.
                  LR_PR_MS_AUX->SET_AVGCO( IS_AVGCO = LS_AVGCO
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'AVGCP'.
                  move-corresponding LS_MS_AUX_GRID to LS_AVGCP.
                  LR_PR_MS_AUX->SET_AVGCP( IS_AVGCP = LS_AVGCP
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PRICE'.
                  move-corresponding LS_MS_AUX_GRID to LS_PRICE.
                  LR_PR_MS_AUX->SET_PRICE( IS_PRICE = LS_PRICE
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PRICP'.
                  move-corresponding LS_MS_AUX_GRID to LS_PRICP.
                  LR_PR_MS_AUX->SET_PRICP( IS_PRICP = LS_PRICP
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'PURCH'.
                  LR_PR_MS_AUX->SET_PURCH( IF_PURCH = LS_MS_AUX_GRID-PURCH
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'QUMAT'.
                  LR_PR_MS_AUX->SET_QUMAT( IF_QUMAT = LS_MS_AUX_GRID-QUMAT
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
                when 'LIFNR'.
                  LR_PR_MS_AUX->SET_LIFNR( IF_LIFNR = LS_MS_AUX_GRID-LIFNR
                                           IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
              endcase.
            endloop.

          catch CX_SY_MOVE_CAST_ERROR.
            continue.
        endtry.
      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
