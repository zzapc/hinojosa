
class ZCL_VCXI_FBSP_GRID_MC_RPART definition
  public
  inheriting from ZCL_VCXI_XCS_GRID_PRVDR
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_CONTAINER_NAME type SCRFNAME optional
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
      !IF_TABNAME type TABNAME default 'ZVCXI_FBSP_S_MC_RPART_GRID'
    raising
      /VCXI/CX_CKX .
protected section.

  data F_PURCHASED type ABAP_BOOL .

  methods CHANGE_STYLE_MC_RPART
    changing
      !CT_STYL type LVC_T_STYL
    raising
      /VCXI/CX_CKX .
  methods GET_MC_RPART_VIS
    importing
      !IR_PR_MC_RPART type ref to ZCL_VCXI_FBSP_PR_MC_RPART
    returning
      value(RS_MC_RPART_VIS) type ZVCXI_FBSP_S_MC_RPART_VIS
    raising
      /VCXI/CX_CKX .
  methods SET_MC_RPART_VIS
    importing
      !IR_PR_MC_RPART type ref to ZCL_VCXI_FBSP_PR_MC_RPART
      !IS_MC_RPART_VIS type ZVCXI_FBSP_S_MC_RPART_VIS
    raising
      /VCXI/CX_CKX .

  methods GET_FIELDCAT
    redefinition .
  methods GET_GRID_DATA
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
private section.
endclass. "ZCL_VCXI_FBSP_GRID_MC_RPART definition
class ZCL_VCXI_FBSP_GRID_MC_RPART implementation.
method CHANGE_STYLE_MC_RPART.

  free CT_STYL.

*** Set Ink Matnr = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'MATNR'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Reclosing Weight = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'RCWGT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Text = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'TEXT'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCO'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

*** Set Average Consumption per = Editable
  ME->CHANGE_STYLE( exporting IF_FIELDNAME = 'AVGCP'
                              IF_STYLE     = ME->F_STYLE_ENABLED
                    changing  CT_STYL      = CT_STYL ).

endmethod.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                      IR_UIGATE         = IR_UIGATE
                      IF_TABNAME        = IF_TABNAME
                      IF_CONTAINER_NAME = IF_CONTAINER_NAME
                      IF_APPL_EVENTS    = IF_APPL_EVENTS ).

*** Define Provider Type
  ME->F_IPRVT = ZCL_VCXI_FBSP_PR_MC_RPART=>C_IPRVT_MC_RPART.

endmethod.
method GET_FIELDCAT.

  data: LF_LOCKED type        /VCXI/CKX_LOCKED,
        LF_INUSE  type        /VCXI/VKSR_INUSE,
        LF_COLPOS type        I.
  field-symbols: <S_FCAT>  type        LVC_S_FCAT.

***--------------------------------------------------------------------------------------
*** Get Standard Field Catalog
  RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
  LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
  LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***--------------------------------------------------------------------------------------
*** Adjust Field Catalog
  loop at RT_FCAT assigning <S_FCAT>.
    case <S_FCAT>-FIELDNAME.
      when 'POSID' or 'GATKY' or 'R_GATE' or 'T_STYL' or
           'PURCH' or 'LIFNR' or 'PRICE' or 'PRICP' or
           'LIFNR_DESCR' or 'PRICE_CURR' or 'PRICP_UOM'.

        move ABAP_TRUE    to <S_FCAT>-TECH.
        move 0            to <S_FCAT>-COL_POS.

***   Set Edit for all fields which should Editable at all
      when 'MATNR' or 'AVGCO' or 'AVGCP' or 'TEXT' or 'RCWGT'.
        if LF_LOCKED eq ABAP_TRUE and
           LF_INUSE  eq ABAP_TRUE.
          move ABAP_TRUE    to <S_FCAT>-EDIT.
        endif.

    endcase.

*** Set Position for each Field
    move 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'MATNR'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'. <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'CONSU'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'CONSU_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'RCWGT'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'RCWGT_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'TEXT'.        <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCO'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCO_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCP'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.
    if <S_FCAT>-FIELDNAME eq 'AVGCP_UOM'.   <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    add 1 to LF_COLPOS.

  endloop.

  sort RT_FCAT by COL_POS.

endmethod.
method GET_GRID_DATA.

  data: LS_MC_RPART_GRID  type          ZVCXI_FBSP_S_MC_RPART_GRID.
  data: LT_GATE           type          /VCXI/VKSR_TT_GATE.
  data: LR_GATE        type ref to   /VCXI/CL_VKSR_GATE,
        LR_PR_MC_RPART type ref to   ZCL_VCXI_FBSP_PR_MC_RPART.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

  clear: ME->F_PURCHASED.

*** Dereferencing of Data Reference
  assign IR_DATA->* to <T_DATA>.

*** Get Gates of MC Handle
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_XCSP_PR_MC=>C_IPRVT_XCS_MC
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).

  loop at LT_GATE into LR_GATE.
    check LR_GATE->IS_INUSE( ) eq ABAP_TRUE
    and   LR_GATE->R_CLSPR     is bound.

    clear: LS_MC_RPART_GRID.

    try.
        move LR_GATE->R_CLSPR ?to LR_PR_MC_RPART.
        check LR_PR_MC_RPART is bound.

***--------------------------------------------------------------------------------------
***     Get Data from PR Class
        move LR_GATE->GET_POSID( ) to LS_MC_RPART_GRID-POSID.
        move LR_GATE->F_GATKY      to LS_MC_RPART_GRID-GATKY.
        move LR_GATE               to LS_MC_RPART_GRID-R_GATE.

        LS_MC_RPART_GRID-S_MC_RPART_VIS = ME->GET_MC_RPART_VIS( IR_PR_MC_RPART = LR_PR_MC_RPART ).

***--------------------------------------------------------------------------------------
***     Set Style Details
        ME->CHANGE_STYLE_MC_RPART( changing  CT_STYL  = LS_MC_RPART_GRID-T_STYL ).

***     Call DVC Service - Modify Style
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_STYLE( exporting IR_GATE = LR_GATE
                                             changing  CT_STYL = LS_MC_RPART_GRID-T_STYL ).

***--------------------------------------------------------------------------------------
***     Add Entry
        append initial line to <T_DATA> assigning <S_DATA>.
        move-corresponding LS_MC_RPART_GRID to <S_DATA>.

      catch CX_SY_MOVE_CAST_ERROR.
        continue.
    endtry.
  endloop.

endmethod.
method GET_MC_RPART_VIS.

  data: LS_CONSU type ZVCXI_XCSP_S_CONSU,
        LS_PRICE type ZVCXI_XCS_S_PRICE,
        LS_PRICP type ZVCXI_XCS_S_PRICP.

*** Get MaterialNumber, Description and Varnish Flag
  move IR_PR_MC_RPART->GET_MATNR( )       to RS_MC_RPART_VIS-MATNR.
  move IR_PR_MC_RPART->GET_MATNR_DESCR( ) to RS_MC_RPART_VIS-MATNR_DESCR.

*** Get Consumption
  move IR_PR_MC_RPART->GET_CONSU( )       to LS_CONSU.
  move-corresponding LS_CONSU             to RS_MC_RPART_VIS.

*** Get Average Consumption and Consumption per
  IR_PR_MC_RPART->GET_AVGCO( importing ES_AVGCO = RS_MC_RPART_VIS-S_AVGCO ).
  IR_PR_MC_RPART->GET_AVGCP( importing ES_AVGCP = RS_MC_RPART_VIS-S_AVGCP ).

*** Get Reclosing Weight
  IR_PR_MC_RPART->GET_RCWGT( importing ES_RCWGT = RS_MC_RPART_VIS-S_RCWGT ).

*** Get Text
  move IR_PR_MC_RPART->GET_TEXT( )     to RS_MC_RPART_VIS-TEXT.

*** Get Price
  move IR_PR_MC_RPART->GET_PRICE( )    to LS_PRICE.
  move-corresponding LS_PRICE          to RS_MC_RPART_VIS.

*** Get Price Unit
  move IR_PR_MC_RPART->GET_PRICP( )    to LS_PRICP.
  move-corresponding LS_PRICP          to RS_MC_RPART_VIS.

endmethod.
method HANDLE_DATA_CHANGED_FINISHED.

  data: LS_MC_RPART_VIS  type          ZVCXI_FBSP_S_MC_RPART_VIS,
        LS_MC_RPART_GRID type          ZVCXI_FBSP_S_MC_RPART_GRID.
  data: LR_PR_MC_RPART type ref to   ZCL_VCXI_FBSP_PR_MC_RPART,
        LR_CX_CKX      type ref to   /VCXI/CX_CKX.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

  check E_MODIFIED eq ABAP_TRUE.

  try.

      SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                           ET_GOOD_CELLS = ET_GOOD_CELLS ).

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        move-corresponding <S_DATA> to LS_MC_RPART_GRID.

        move LS_MC_RPART_GRID-R_GATE->R_CLSPR ?to LR_PR_MC_RPART.

***     Set Values to PR Class
        move-corresponding LS_MC_RPART_GRID to LS_MC_RPART_VIS.
        ME->SET_MC_RPART_VIS( IR_PR_MC_RPART  = LR_PR_MC_RPART
                              IS_MC_RPART_VIS = LS_MC_RPART_VIS ).
      endloop.


      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into LR_CX_CKX.
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
method SET_MC_RPART_VIS.

  data: LS_PRICE        type ZVCXI_XCS_S_PRICE,
        LS_PRICP        type ZVCXI_XCS_S_PRICP,
        LS_MC_RPART_VIS type ZVCXI_FBSP_S_MC_RPART_VIS.

***--------------------------------------------------------------------------------------
*** Get Current data to do Update only if Value changed.
  LS_MC_RPART_VIS = ME->GET_MC_RPART_VIS( IR_PR_MC_RPART = IR_PR_MC_RPART ).

***--------------------------------------------------------------------------------------
*** Material
  if LS_MC_RPART_VIS-MATNR ne IS_MC_RPART_VIS-MATNR.
    IR_PR_MC_RPART->SET_MATNR( IF_MATNR = IS_MC_RPART_VIS-MATNR
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Average Consumption  & Consumption per
  if LS_MC_RPART_VIS-AVGCO ne IS_MC_RPART_VIS-AVGCO.
    IR_PR_MC_RPART->SET_AVGCO( IS_AVGCO = IS_MC_RPART_VIS-S_AVGCO
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

  if LS_MC_RPART_VIS-AVGCP ne IS_MC_RPART_VIS-AVGCP.
    IR_PR_MC_RPART->SET_AVGCP( IS_AVGCP = IS_MC_RPART_VIS-S_AVGCP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Text
  if LS_MC_RPART_VIS-TEXT ne IS_MC_RPART_VIS-TEXT.
    IR_PR_MC_RPART->SET_TEXT( IF_TEXT = IS_MC_RPART_VIS-TEXT
                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Reclosing Weight
  if LS_MC_RPART_VIS-RCWGT ne IS_MC_RPART_VIS-RCWGT.
    IR_PR_MC_RPART->SET_RCWGT( IS_RCWGT = IS_MC_RPART_VIS-S_RCWGT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price
  if LS_MC_RPART_VIS-PRICE ne IS_MC_RPART_VIS-PRICE.
    move-corresponding IS_MC_RPART_VIS to LS_PRICE.
    IR_PR_MC_RPART->SET_PRICE( IS_PRICE = LS_PRICE
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

*** Price per
  if LS_MC_RPART_VIS-PRICP ne IS_MC_RPART_VIS-PRICP.
    move-corresponding IS_MC_RPART_VIS to LS_PRICP.
    IR_PR_MC_RPART->SET_PRICP( IS_PRICP = LS_PRICP
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
  endif.

endmethod.
