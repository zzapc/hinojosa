
class ZCL_VCXI_FFSU_PR_SHIPMGR definition
  public
  inheriting from ZCL_VCXI_F0SU_PR_SHIPMGR
  create public .

public section.

  constants C_ATTID_SHUTY_PACKED type /VCXI/VKS_ATTID value 'SHUTY_PACKED' ##NO_TEXT.

  methods GET_PRVDR_RHNDL
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_RHNDL) type ref to ZCL_VCXI_FFSS_PR_RHNDL
    raising
      /VCXI/CX_CKX .

  methods GET_BASE_DIMEN
    redefinition .
  methods GET_BASE_PRQTY
    redefinition .
  methods GET_NOUPS
    redefinition .
  methods GET_OPQTY
    redefinition .
protected section.

  methods GET_PRVDR_COMM_PREV
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_COMM_PREV) type ref to ZIF_VCXI_FFSS_COMM_PREV
    raising
      /VCXI/CX_CKX .
private section.
endclass. "ZCL_VCXI_FFSU_PR_SHIPMGR definition
class ZCL_VCXI_FFSU_PR_SHIPMGR implementation.
  method GET_BASE_DIMEN.

***--------------------------------------------------------------------------------------
*** Get Roll Handling
    data(LR_PR_RHNDL) = ME->GET_PRVDR_RHNDL( ).
    check LR_PR_RHNDL is bound.

    data(LS_WIWID) = LR_PR_RHNDL->GET_WIWID( ).
    LR_PR_RHNDL->GET_RDITA( importing ES_RDITA = data(LS_RDITA) ).
    LR_PR_RHNDL->GET_RWGTA( importing ES_RWGTA = data(LS_RWGTA) ).

*** Get Core
    data(LR_PR_MS_CORE) = LR_PR_RHNDL->GET_PRVDR_MS_CORE( ).
    if LR_PR_MS_CORE is bound.
***   Add Core Margin
      data(LS_COMAR) = LR_PR_MS_CORE->GET_COMAR( ).
      ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = LS_WIWID-WIWID
                                                          IF_CALCV_UOM_1 = LS_WIWID-WIWID_UOM
                                                          IF_CALCV_2     = LS_COMAR-COMAR
                                                          IF_CALCV_UOM_2 = LS_COMAR-COMAR_UOM
                                                          IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_ADD
                                                          IF_UOM         = LS_WIWID-WIWID_UOM
                                                importing EF_CALCV       = LS_WIWID-WIWID
                                                          EF_CALCV_UOM   = LS_WIWID-WIWID_UOM ).
    endif.

***--------------------------------------------------------------------------------------
*** Set Dimensions
    RT_DIMEN = value #( ( DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_DIAMETER
                          DIMVA     = LS_RDITA-RDITA
                          DIMVA_UOM = LS_RDITA-RDITA_UOM )
                        ( DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WIDTH
                          DIMVA     = LS_WIWID-WIWID
                          DIMVA_UOM = LS_WIWID-WIWID_UOM )
                        ( DIMEN     = ZCL_VCXI_XCSU_CUST_SHIPU=>C_DIMEN_WEIGHT
                          DIMVA     = LS_RWGTA-RWGTA
                          DIMVA_UOM = LS_RWGTA-RWGTA_UOM )
                       ).

  endmethod.
  method GET_BASE_PRQTY.

*** Base Qty is one Roll
    RS_PRQTY-PRQTY     = 1.
    RS_PRQTY-PRQTY_UOM = 'ST'.

  endmethod.
  method GET_NOUPS.

     RF_NOUPS = 1.

  endmethod.
  method GET_OPQTY.

*** Get Alternate Unit
    data(LT_GATE) = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_F0SS_PR_ALTUOM=>C_IPRVT_F0_ALTUOM
                                           IF_INUSE = ABAP_TRUE ).
    check LT_GATE is not initial.
    data(LR_PR_ALTUOM) = cast ZCL_VCXI_F0SS_PR_ALTUOM( LT_GATE[ 1 ]->R_CLSPR ).

*** Get alternative Unit information for Rolls
    try.
        RS_OPQTY = corresponding #( LR_PR_ALTUOM->GET_QITEM_AS_ALTUOM( IF_UOM = 'ROL' )
                                    mapping OPQTY     = QITEM
                                            OPQTY_UOM = QITEM_UOM ).
      catch /VCXI/CX_CKX.
        clear RS_OPQTY.
    endtry.

  endmethod.
  method GET_PRVDR_COMM_PREV.

    data: LT_GATE         type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Get Communication with Previous provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_FFSS_COMM_PREV=>C_IPRVT_COMM_PREV
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Get Communication with Previous Reference
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_COMM_PREV.
          check RR_COMM_PREV is bound.
          move LR_GATE to ER_GATE.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: RR_COMM_PREV, ER_GATE.
      endtry.
    endloop.

  endmethod.
  method GET_PRVDR_RHNDL.

    data: LT_GATE         type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE.

***--------------------------------------------------------------------------------------
*** Get Roll Handling provider
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_FFSS_PR_RHNDL=>C_IPRVT_RHNDL
                                     IF_INUSE = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Get Roll Handling Reference
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to RR_PR_RHNDL.
          check RR_PR_RHNDL is bound.
          move LR_GATE to ER_GATE.
          exit.

        catch CX_SY_MOVE_CAST_ERROR.
          clear: RR_PR_RHNDL, ER_GATE.
      endtry.
    endloop.

  endmethod.
