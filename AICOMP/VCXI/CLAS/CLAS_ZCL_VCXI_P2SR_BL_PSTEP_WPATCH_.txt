
class ZCL_VCXI_P2SR_BL_PSTEP_WPATCH definition
  public
  inheriting from ZCL_VCXI_P2SR_BL_PSTEP
  create public .

public section.

  interfaces ZIF_VCXI_PXSR_PCDIR .
  interfaces ZIF_VCXI_PXSR_ADJ_PCDIM .
  interfaces ZIF_VCXI_XCSR_BL_OUTSO .
  interfaces ZIF_VCXI_XCSR_BL_MANU .

  constants C_IPSTP_WPATCH type /VCXI/VSMC_IPSTP value 'PX_PS_WPATCH' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IF_IPSTP type /VCXI/VSMC_IPSTP default C_IPSTP_WPATCH
      !IF_DATE type DATS
      !IR_APPDATA type ref to /VCXI/CL_VKSR_APPDATA
    raising
      /VCXI/CX_CKX .

  methods ADD_ASPECTS_TO_RTE_PSTEP
    redefinition .
  methods ADD_LIMITS_TO_RTE_PSTEP
    redefinition .
  methods COMPARE
    redefinition .
  methods COPY
    redefinition .
  methods GET_ARBPL_INFO
    redefinition .
  methods GET_SPVRE_ACTVY
    redefinition .
  methods INIT_BY_SPEC
    redefinition .
protected section.

  constants C_ATTID_ISVCE type /VCXI/VKS_ATTID value 'ISVCE_MC' ##NO_TEXT.
  data S_PCDIM_IN type ZVCXI_P0SP_S_PCDIM .
  data S_PCDIM_OUT type ZVCXI_P0SP_S_PCDIM .
  data T_MS_WPATCH type ZVCXI_PXSR_TT_MS_WPATCH .
  data F_NOSBA type ZVCXI_PXS_NOSBN .

  methods ADD_SPVRE_MC_WPATCH
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods ADD_SPVRE_MC_TOOL
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_PARENT type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods FILL_SPVRE_ADDON_WPATCH
    importing
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV
      !IR_SPVRE_ADDON type ref to /VCXI/CL_VKSR_SPVRE
    changing
      !CT_SPVRE type /VCXI/VKSR_TT_SPVRE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_CSTEP_WPATCH
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods INIT_BY_MS_WPATCH
    importing
      !IT_PRVDR type /VCXI/VKSR_TT_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_NOSBN
    returning
      value(RF_NOSBA) type ZVCXI_PXS_NOSBN
    raising
      /VCXI/CX_CKX .

  methods FILL_SPVRE_ADDON
    redefinition .
  methods GET_XML_DREF
    redefinition .
private section.
endclass. "ZCL_VCXI_P2SR_BL_PSTEP_WPATCH definition
class ZCL_VCXI_P2SR_BL_PSTEP_WPATCH implementation.
  method ADD_ASPECTS_TO_RTE_PSTEP.

***----------------------------------------------------------------------------
*** Get Super
    SUPER->ADD_ASPECTS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).


***----------------------------------------------------------------------------
*** Aspect - Number of Soft Bend
    try.
        IR_RTE_PSTEP->SET_RTE_SAREC( IF_IAATY  = ZCL_VCXI_PXSP_PR_ADDON_WPATCH=>C_IAATY_NOSBN
                                     II_ARECN  = value #( ( SIGN   = 'I'
                                                            OPTION = 'LE'
                                                            LOW    = ME->GET_NOSBN( ) ) )
                                     IF_MAXSEL = 1
                                     IF_ASORT  = /VCXI/CL_VSMR_RTE_CADDON=>C_ASORT_DESCENDING ).
      catch /VCXI/CX_CKX.
    endtry.

  endmethod.
  method ADD_LIMITS_TO_RTE_PSTEP.

    data: LF_LDUOM type /VCXI/VSMC_LDUOM,
          LF_LDVAL type /VCXI/VSMR_LDVAL.
    data: LI_LVVAL type /VCXI/VSMR_TT_RTE_RANGE_LVVAL.
    data: LT_LTYPE type /VCXI/CKX_TT_OBJECT.
    data: LR_LTYPE  type ref to /VCXI/CL_VSMC_LTYPE,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.


    SUPER->ADD_LIMITS_TO_RTE_PSTEP( IR_RTE_PSTEP = IR_RTE_PSTEP ).

***----------------------------------------------------------------------------
*** Get all linked Limits
    LT_LTYPE = ME->R_PSTEP->/VCXI/IF_VSMC_LINK_LTYPE~GET_LINKED_LTYPE( ).
    loop at LT_LTYPE into LR_OBJECT.
      move LR_OBJECT ?to LR_LTYPE.

      clear: LF_LDVAL,
             LF_LDUOM,
             LI_LVVAL.

***----------------------------------------------------------------------------
      case LR_LTYPE->/VCXI/IF_CKX_OBJECT~GET_ID( ).
***     Sheet Length (Inbound)
        when 'P0_LT_DI_SHTLEN'.
          move ME->S_PCDIM_IN-PCLEN      to LF_LDVAL.
          move ME->S_PCDIM_IN-PCLEN_UOM  to LF_LDUOM.

***     Sheet Width (Inbound)
        when 'P0_LT_DI_SHTWID'.
          move ME->S_PCDIM_IN-PCWID      to LF_LDVAL.
          move ME->S_PCDIM_IN-PCWID_UOM  to LF_LDUOM.

        when others.
          continue.
      endcase.


***----------------------------------------------------------------------------
***   Set
      case LR_LTYPE->F_MLTYP.
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_D.
          IR_RTE_PSTEP->SET_RTE_LDIM( IR_LTYPE = LR_LTYPE
                                      IF_LDVAL = LF_LDVAL
                                      IF_LDUOM = LF_LDUOM ).
        when /VCXI/CL_VSMC_LTYPE=>C_MLTYP_V.
          IR_RTE_PSTEP->SET_RTE_LVAL( IR_LTYPE = LR_LTYPE
                                      II_LVVAL = LI_LVVAL ).
      endcase.
    endloop.

  endmethod.
  method ADD_SPVRE_MC_TOOL.

    data: LS_MS_WPATCH type ZVCXI_PXSR_S_MS_WPATCH.
    data: LR_SPVCE         type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_MC_TOOL type ref to /VCXI/CL_VKSR_SPVRE.


    check ME->T_MS_WPATCH is not initial.

***------------------------------------------------------------------------------------------------
*** Get Customizing Element
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'MC_TOOL'
                                        IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE ).

    loop at ME->T_MS_WPATCH into LS_MS_WPATCH
      where GLUTN is not initial.
***------------------------------------------------------------------------------------------------
***   Create Supervisor Runtime Element
      LR_SPVRE_MC_TOOL = new #( IR_SPVCE  = LR_SPVCE
                                IR_PARENT = IR_SPVRE_PARENT ).
      append LR_SPVRE_MC_TOOL to CT_SPVRE.

***   Set In Use
      LR_SPVRE_MC_TOOL->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Set Material Number
      LR_SPVRE_MC_TOOL->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_WPATCH-GLUTN
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Set Average Consumption
      LR_SPVRE_MC_TOOL->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_XCSP_PR_MC_TOOL=>C_PARID_AVGCO_P
                                                       PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                                       ATFLV = 1
                                                       UNIT  = 'ST'
                                                       SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

    endloop.

  endmethod.
  method ADD_SPVRE_MC_WPATCH.

    data: LS_MS_WPATCH type ZVCXI_PXSR_S_MS_WPATCH,
          LS_AVGCO     type ZVCXI_XCS_S_AVGCO,
          LS_AVGCP     type ZVCXI_XCS_S_AVGCP.
    data: LR_SPVRE type ref to /VCXI/CL_VKSR_SPVRE.


    loop at ME->T_MS_WPATCH into LS_MS_WPATCH.

***------------------------------------------------------------------------------------------------
***   Create Supervisor Runtime Element
      LR_SPVRE = new #( IR_SPVCE  = IR_BL_RTESPV->GET_SPVCE( IF_ID           = LS_MS_WPATCH-ISVCE
                                                             IR_SPVCE_PARENT = IR_SPVRE_PARENT->R_SPVCE )
                        IR_PARENT = IR_SPVRE_PARENT ).
      append LR_SPVRE to CT_SPVRE.

***   Set In Use
      LR_SPVRE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
***   Material Number
      LR_SPVRE->SET_LEOKY( IS_LEOKY = value #( LEOKY = LS_MS_WPATCH-MATNR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Text
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_TEXT
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_WPATCH-TEXT
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Window Patch Dimensions
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_WPLEN
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WPATCH-WPLEN
                                               UNIT  = LS_MS_WPATCH-WPLEN_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_WPWID
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WPATCH-WPWID
                                               UNIT  = LS_MS_WPATCH-WPWID_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Window Patch Area
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_WPARE
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WPATCH-WPARE
                                               UNIT  = LS_MS_WPATCH-WPARE_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***------------------------------------------------------------------------------------------------
***   Purchase Flag
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_PURCH
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_WPATCH-PURCH
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).
***   Purchase Information
      check LS_MS_WPATCH-PURCH ne ZCL_VCXI_XCSS_PR_MS=>C_PURCH_STOCK.

***   Price
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_PRICE
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WPATCH-PRICE
                                               CURKY = LS_MS_WPATCH-PRICE_CURR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Price Unit
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = switch #( LS_MS_WPATCH-ISVCE when 'MC_WPATCH_A' then ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_PRICP_A
                                                                                    when 'MC_WPATCH_L' then ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_PRICP_L
                                                                                    when 'MC_WPATCH_P' then ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_PRICP_P )
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC
                                               ATFLV = LS_MS_WPATCH-PRICP
                                               UNIT  = LS_MS_WPATCH-PRICP_UOM
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

***   Vendor
      LR_SPVRE->SET_PARAM( IS_PARAM = value #( PARID = ZCL_VCXI_PXSP_PR_MC_WPATCH=>C_PARID_LIFNR
                                               PARTY = /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR
                                               ATWRT = LS_MS_WPATCH-LIFNR
                                               SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_CALC ) ).

    endloop.

  endmethod.
  method COMPARE.

    data:  LR_BL_PSTEP_WPATCH type ref to ZCL_VCXI_P2SR_BL_PSTEP_WPATCH.


*** Super Compare
    RF_SIMILAR = SUPER->COMPARE( IR_BL_PSTEP = IR_BL_PSTEP ).
    check RF_SIMILAR eq ABAP_TRUE.

    move IR_BL_PSTEP ?to LR_BL_PSTEP_WPATCH.


***------------------------------------------------------------------------------------------------
*** PC Dimensions
    if ME->S_PCDIM_IN  eq LR_BL_PSTEP_WPATCH->S_PCDIM_IN and
       ME->S_PCDIM_OUT eq LR_BL_PSTEP_WPATCH->S_PCDIM_OUT.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      exit.
    endif.

*** Additional Material
    if ME->T_MS_WPATCH eq LR_BL_PSTEP_WPATCH->T_MS_WPATCH.
      move ABAP_TRUE  to RF_SIMILAR.
    else.
      move ABAP_FALSE to RF_SIMILAR.
      return.
    endif.


  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IF_IPSTP   = IF_IPSTP
                        IF_DATE    = IF_DATE
                        IR_APPDATA = IR_APPDATA ).

*** Initialize Manual Work Center Info
    move ZCL_VCXI_XCSP_PR_MANU=>C_PARID_MSRSR_P to ME->ZIF_VCXI_XCSR_BL_MANU~F_PARID_MSRSR.
    ME->INIT_MANU( ).

*** Initialize Outsourcing Info
    move ZCL_VCXI_XCSP_PR_OUTSO=>C_PARID_PRICP_P to ME->ZIF_VCXI_XCSR_BL_OUTSO~F_PARID_PRICP.
    ME->INIT_OUTSO( ).

  endmethod.
  method COPY.

    data:  LR_BL_PSTEP_WPATCH type ref to ZCL_VCXI_P2SR_BL_PSTEP_WPATCH.


*** Super Copy
    RR_BL_PSTEP = SUPER->COPY( ).
    move RR_BL_PSTEP ?to LR_BL_PSTEP_WPATCH.

***------------------------------------------------------------------------------------------------
*** PC Dimensions
    move ME->S_PCDIM_IN    to LR_BL_PSTEP_WPATCH->S_PCDIM_IN.
    move ME->S_PCDIM_OUT   to LR_BL_PSTEP_WPATCH->S_PCDIM_OUT.

*** Additional Materials
    move ME->T_MS_WPATCH    to LR_BL_PSTEP_WPATCH->T_MS_WPATCH.

  endmethod.
  method FILL_SPVRE_ADDON.

    SUPER->FILL_SPVRE_ADDON( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                       IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                       IR_ARBPL       = IR_ARBPL
                             changing  CT_SPVRE       = CT_SPVRE ).

    case IR_SPVRE_ADDON->GET_ID( ).
      when ZCL_VCXI_PXSP_PR_ADDON_WPATCH=>C_ISVCE.
        ME->FILL_SPVRE_ADDON_WPATCH( exporting IR_BL_RTESPV   = IR_BL_RTESPV
                                               IR_SPVRE_ADDON = IR_SPVRE_ADDON
                                     changing  CT_SPVRE       = CT_SPVRE ).
    endcase.

  endmethod.
  method FILL_SPVRE_ADDON_WPATCH.

    data:  LS_PARAM type /VCXI/VKSR_S_PARAM.


***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ADDON_WPATCH=>C_PARID_PCLEN to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCLEN                        to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCLEN_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ADDON_WPATCH=>C_PARID_PCWID to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCWID                        to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCWID_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ADDON_WPATCH=>C_PARID_PCHEI to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCHEI                        to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCHEI_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).


***------------------------------------------------------------------------------------------------
*** Number of Soft Bends
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ADDON_WPATCH=>C_PARID_NOSBN to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->GET_NOSBN( )                             to LS_PARAM-ATFLV.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    IR_SPVRE_ADDON->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Window Patching
    ME->ADD_SPVRE_MC_WPATCH( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                       IR_SPVRE_PARENT = IR_SPVRE_ADDON
                             changing  CT_SPVRE        = CT_SPVRE ).

*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = IR_SPVRE_ADDON
                           changing  CT_SPVRE        = CT_SPVRE ).

  endmethod.
  method GET_ARBPL_INFO.

***------------------------------------------------------------------
*** Don't overrule existing
    check CF_ID_GRP   is initial and
          CF_ID_ARBPL is initial.

***------------------------------------------------------------------
*** Standard
    move 'CONV'     to CF_ID_ARBPL.

*** If Manual
    if ME->ZIF_VCXI_XCSR_BL_MANU~F_MANWC eq ABAP_TRUE.
      move 'MANU'     to CF_ID_ARBPL.
    endif.

*** If Outsourcing
    if ME->ZIF_VCXI_XCSR_BL_OUTSO~F_OUTSO eq ABAP_TRUE.
      move 'OUTSO'    to CF_ID_ARBPL.
    endif.

  endmethod.
  method GET_NOSBN.

    loop at ME->T_MS_WPATCH into data(LS_MS_WPATCH).
      add LS_MS_WPATCH-NOSBN to RF_NOSBA.
    endloop.

  endmethod.
  method GET_SPVRE_ACTVY.

    data: LS_PARAM       type        /VCXI/VKSR_S_PARAM.
    data: LR_SPVCE       type ref to /VCXI/CL_VKSC_SPVCE,
          LR_SPVRE_ACTVY type ref to /VCXI/CL_VKSR_SPVRE.


***------------------------------------------------------------------------------------------------
*** Get Customizing Element for Activity
    LR_SPVCE = IR_BL_RTESPV->GET_SPVCE( IF_ID           = 'ACTVY_WPATCH'
                                        IR_SPVCE_PARENT = IR_SPVRE_ARBPL->R_SPVCE ).

*** Create Supervisor Runtime Element
    create object LR_SPVRE_ACTVY
      exporting
        IR_SPVCE  = LR_SPVCE
        IR_PARENT = IR_SPVRE_ARBPL.
    append LR_SPVRE_ACTVY to RT_SPVRE.

*** Set In Use
    LR_SPVRE_ACTVY->SET_INUSE( IF_INUSE = ABAP_TRUE ).

***------------------------------------------------------------------------------------------------
*** Set Length
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ACTVY_WPATCH=>C_PARID_PCLEN to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCLEN                        to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCLEN_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Width
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ACTVY_WPATCH=>C_PARID_PCWID to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCWID                        to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCWID_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

*** Set Height
    clear LS_PARAM.
    move ZCL_VCXI_PXSP_PR_ACTVY_WPATCH=>C_PARID_PCHEI to LS_PARAM-PARID.
    move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC            to LS_PARAM-PARTY.
    move ME->S_PCDIM_OUT-PCHEI                        to LS_PARAM-ATFLV.
    move ME->S_PCDIM_OUT-PCHEI_UOM                    to LS_PARAM-UNIT.
    move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC             to LS_PARAM-SETBY.
    LR_SPVRE_ACTVY->SET_PARAM( IS_PARAM = LS_PARAM ).

***------------------------------------------------------------------------------------------------
*** Add Material Consumption for Window Patches
    ME->ADD_SPVRE_MC_WPATCH( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                       IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                             changing  CT_SPVRE        = RT_SPVRE ).

*** Add Material Consumption for Tool
    ME->ADD_SPVRE_MC_TOOL( exporting IR_BL_RTESPV    = IR_BL_RTESPV
                                     IR_SPVRE_PARENT = LR_SPVRE_ACTVY
                           changing  CT_SPVRE        = RT_SPVRE ).

  endmethod.
  method GET_XML_DREF.

*** Super References
    RT_DATA = SUPER->GET_XML_DREF( ).

*** Add additional References
    append value #( NAME = 'S_PCDIM_IN'   VALUE = ref #( ME->S_PCDIM_IN )  ) to RT_DATA.
    append value #( NAME = 'S_PCDIM_OUT'  VALUE = ref #( ME->S_PCDIM_OUT ) ) to RT_DATA.

    append value #( NAME = 'T_MS_WPATCH'  VALUE = ref #( ME->T_MS_WPATCH )  ) to RT_DATA.

  endmethod.
  method INIT_BY_CSTEP_WPATCH.

    data: LF_SHTDI type ZVCXI_P0SS_SHTDI.
    data: LR_GATE            type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_WPATCH type ref to ZCL_VCXI_P2SS_PR_CSTEP_WPATCH.


***--------------------------------------------------------------------------------------
*** Get Reference for CStep Window patching
    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_P2SS_PR_CSTEP_WPATCH.
      LR_PR_CSTEP_WPATCH ?= LR_GATE->R_CLSPR.
      exit.
    endloop.
    check LR_PR_CSTEP_WPATCH is bound.


***--------------------------------------------------------------------------------------
*** Sheet Direction
    move LR_PR_CSTEP_WPATCH->GET_SHTDI( ) to LF_SHTDI.
    if LF_SHTDI is not initial.
      move LF_SHTDI                               to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.
      move ZIF_VCXI_PXSR_PCDIR=>C_PCDOP_MANDATORY to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDOP.
    endif.

  endmethod.
  method INIT_BY_MS_WPATCH.

    data: LR_GATE         type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_WPATCH type ref to ZCL_VCXI_PXSS_PR_MS_WPATCH.


    loop at IT_PRVDR into LR_GATE
                    where TABLE_LINE->R_CLSPR is instance of ZCL_VCXI_PXSS_PR_MS_WPATCH.
      LR_PR_MS_WPATCH ?= LR_GATE->R_CLSPR.

      append value #( ISVCE   = LR_GATE->GET_ATTRI( IF_ATTID = C_ATTID_ISVCE )-ATTVA
                      MATNR   = LR_PR_MS_WPATCH->GET_MATNR( )
                      TEXT    = LR_PR_MS_WPATCH->GET_TEXT( )
                      S_WPLEN = LR_PR_MS_WPATCH->GET_WPLEN( )
                      S_WPWID = LR_PR_MS_WPATCH->GET_WPWID( )
                      S_WPARE = LR_PR_MS_WPATCH->GET_WPARE( )
                      S_SURWT = LR_PR_MS_WPATCH->GET_SURWT( )
                      NOSBN   = LR_PR_MS_WPATCH->GET_NOSBN( )
                      GLUTN   = LR_PR_MS_WPATCH->GET_GLUTN( )
                      PURCH   = LR_PR_MS_WPATCH->GET_PURCH( )
                      LIFNR   = LR_PR_MS_WPATCH->GET_LIFNR( )
                      S_PRICE = LR_PR_MS_WPATCH->GET_PRICE( )
                      S_PRICP = LR_PR_MS_WPATCH->GET_PRICP( )
                    ) to ME->T_MS_WPATCH.
    endloop.

  endmethod.
  method INIT_BY_SPEC.

    data: LT_PCDIM type ZVCXI_P0SP_TT_PCDIM.


***--------------------------------------------------------------------------------------
*** Get Inbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_IN( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_IN = value #( LT_PCDIM[ 1 ] optional ).

*** Get Outbound PC Dimension
    LT_PCDIM = ME->GET_PCDIM_OUT( IT_PRVDR = IT_PRVDR ).
    ME->S_PCDIM_OUT = value #( LT_PCDIM[ 1 ] optional ).

*** Initialize by CStep Window Patching
    ME->INIT_BY_CSTEP_WPATCH( IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Call SUPER
    SUPER->INIT_BY_SPEC( IR_GATE  = IR_GATE
                         IT_PRVDR = IT_PRVDR ).

***--------------------------------------------------------------------------------------
*** Initialize by MS Window Patch
    ME->INIT_BY_MS_WPATCH( IT_PRVDR = IT_PRVDR ).

  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_IN.
  endmethod.
  method ZIF_VCXI_PXSR_ADJ_PCDIM~CALC_PCDIM_OUT.

    data: LS_PCDIM_OUT type  ZVCXI_P0SP_S_PCDIM.

*** Keep Number of Outs of provided Dimensions
    LS_PCDIM_OUT = ME->S_PCDIM_OUT.
    LS_PCDIM_OUT-NOOUT = reduce #( init LF_NOOUT = 0 for LS_PCDIM in CT_PCDIM next LF_NOOUT = LF_NOOUT + LS_PCDIM-NOOUT ).

    CT_PCDIM = value #( ( LS_PCDIM_OUT ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~GET_PCDIM.

    RT_PCDIM = value #( ( ME->S_PCDIM_IN ) ).

  endmethod.
  method ZIF_VCXI_PXSR_PCDIR~SET_PCDIR.

    move IF_PCDIR to ME->ZIF_VCXI_PXSR_PCDIR~F_PCDIR.

*** Turn PC Dimension IN
    ME->S_PCDIM_IN  = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_IN
                                      IF_PCDIR = IF_PCDIR ).

*** Turn PC Dimension OUT
    ME->S_PCDIM_OUT = ME->TURN_PCDIM( IS_PCDIM = ME->S_PCDIM_OUT
                                      IF_PCDIR = IF_PCDIR ).

  endmethod.
