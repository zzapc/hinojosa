
class YCL_HP_SVCS_PR_CADIF_PRINT definition
  public
  inheriting from ZCL_VCXI_P1SS_PR_CADIF_ONEUP
  create public .

public section.

  constants C_IPRVT_HP_CADIF_PRINT type /VCXI/VKSC_IPRVT value 'YHP_SVCS_CADIF_PRINT' ##NO_TEXT.

  methods FILL_PRINTING_LAC
    importing
      !IR_PR_MS_INK type ref to YCL_HP_SVCS_PR_MS_INK
    changing
      !CS_INK type YHP_SVCS_S_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods UPDATE_MS_INK
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
      !IR_GATE_CSTEP type ref to /VCXI/CL_VKSR_GATE
      !IT_INK type YHP_SVCS_TT_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods CREATE_UPDATE_LAC
    importing
      !IR_GATE_CSTEP type ref to /VCXI/CL_VKSR_GATE
      !IT_GATE type /VCXI/VKSR_TT_GATE
      !IS_INK type YHP_SVCS_S_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods UPDATE_MS_DINK
    importing
      !IT_GATE type /VCXI/VKSR_TT_GATE
      !IS_INK type YHP_SVCS_S_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods CREATE_MS_INK
    importing
      !IR_GATE_CSTEP type ref to /VCXI/CL_VKSR_GATE
      !IS_INK type YHP_SVCS_S_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods FILL_PRINTING_DINK
    importing
      !IR_GATE_INK type ref to /VCXI/CL_VKSR_GATE
      !IR_PR_MS_DINK type ref to YCL_HP_SVCS_PR_MS_DINK
    changing
      !CS_INK type YHP_SVCS_S_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods FILL_PRINTING_INK
    importing
      !IR_PR_MS_INK type ref to YCL_HP_SVCS_PR_MS_INK
    changing
      !CS_INK type YHP_SVCS_S_CADIF_MS_INK
    raising
      /VCXI/CX_CKX .
  methods UPDATE_CSTEP_PRINT
    importing
      !IT_PRINT type YHP_SVCS_TT_CADIF_PRINT
    raising
      /VCXI/CX_CKX .
  methods FILL_BY_PRINTING
    returning
      value(RT_PRINT) type YHP_SVCS_TT_CADIF_PRINT
    raising
      /VCXI/CX_CKX .

  methods GET_CADIF_IO
    redefinition .
  methods SET_CADIF_IO
    redefinition .
protected section.
private section.
endclass. "YCL_HP_SVCS_PR_CADIF_PRINT definition
class YCL_HP_SVCS_PR_CADIF_PRINT implementation.
  method CREATE_MS_INK.

    data LS_COVRG type ZVCXI_P0S_S_COVRG.

***--------------------------------------------------------------------------------------
*** Create new INK element
    data(LR_GATE) = IR_GATE_CSTEP->CREATE_ELEMENT( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK ).

    check LR_GATE is bound.
    LR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

    check LR_GATE->R_CLSPR is bound.
    try.
        data(LR_PR_MS_INK) = cast YCL_HP_SVCS_PR_MS_INK( LR_GATE->R_CLSPR ).

***     Set Color Code
        if IS_INK-COLCO is not initial.

          LR_PR_MS_INK->SET_COLCO( IF_COLCO = IS_INK-COLCO
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

        endif.

***     Set Coverage
        if IS_INK-COVRG is not initial.

          LS_COVRG = value #( COVRG     = IS_INK-COVRG
                              COVRG_UOM = LR_PR_MS_INK->GET_COVRG( )-COVRG_UOM ).

          LR_PR_MS_INK->SET_COVRG( IS_COVRG = LS_COVRG
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

        endif.

***     Set Ink Station
        if IS_INK-INKST is not initial.

          LR_PR_MS_INK->SET_INKST( IF_INKST = IS_INK-INKST
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

        endif.

***     Set Anilox Roll Tool Number
        if IS_INK-ANITN is not initial.

          LR_PR_MS_INK->SET_ANITN( IF_ANITN = IS_INK-ANITN
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

        endif.

      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

  endmethod.
  method CREATE_UPDATE_LAC.

    data LS_COVRG type ZVCXI_P0S_S_COVRG.
    data LF_MATNR type MATNR.

***--------------------------------------------------------------------------------------
*** Set field control to check if LAC exist
    data(LF_LAC_EXIST) = ABAP_FALSE.

***--------------------------------------------------------------------------------------
*** Update LAC
    loop at IT_GATE into data(LR_GATE).

      try .
          data(LR_PR_MS_INK) = cast YCL_HP_SVCS_PR_MS_INK( LR_GATE->R_CLSPR ).
          check IS_INK-COLCO eq LR_PR_MS_INK->GET_MATNR( ).

          LF_LAC_EXIST = ABAP_TRUE.

***       Set Coverage
          if IS_INK-COVRG is not initial.

            LS_COVRG = value #( COVRG     = IS_INK-COVRG
                                COVRG_UOM = LR_PR_MS_INK->GET_COVRG( )-COVRG_UOM ).

            LR_PR_MS_INK->SET_COVRG( IS_COVRG = LS_COVRG
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

          endif.

        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

    endloop.

***--------------------------------------------------------------------------------------
*** Check if LAC exist
    check LF_LAC_EXIST eq ABAP_FALSE.

***--------------------------------------------------------------------------------------
*** Add a new INK element for LAC on Digital
    LR_GATE = IR_GATE_CSTEP->CREATE_ELEMENT( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK ).

    check LR_GATE is bound.
    LR_GATE->SET_INUSE( IF_INUSE = ABAP_TRUE ).

    check LR_GATE->R_CLSPR is bound.
    try.
        LR_PR_MS_INK = cast YCL_HP_SVCS_PR_MS_INK( LR_GATE->R_CLSPR ).

***     Set Ink Type
        LR_PR_MS_INK->SET_TINK( IF_TINK = 'LAC'
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).


***     Set Material
        if IS_INK-COLCO is not initial.

          LF_MATNR = conv #( IS_INK-COLCO ).
          LR_PR_MS_INK->SET_MATNR( IF_MATNR = LF_MATNR
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

***       Get customizing Color Code from Material
          select single COLCO from ZVCXI_PXS_TD121
            into @data(LF_COLCO)
            where MATNR eq @LF_MATNR.

***       Set Color Code
          if LF_COLCO is not initial.

            LR_PR_MS_INK->SET_COLCO( IF_COLCO = LF_COLCO
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

          endif.

        endif.

***     Set Coverage
        if IS_INK-COVRG is not initial.

          LS_COVRG = value #( COVRG     = IS_INK-COVRG
                              COVRG_UOM = LR_PR_MS_INK->GET_COVRG( )-COVRG_UOM ).

          LR_PR_MS_INK->SET_COVRG( IS_COVRG = LS_COVRG
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

        endif.

      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

  endmethod.
  method FILL_BY_PRINTING.

    data LS_PRINT type YHP_SVCS_S_CADIF_PRINT.
    data LS_INK   type YHP_SVCS_S_CADIF_MS_INK.
    data LT_INK   type YHP_SVCS_TT_CADIF_MS_INK.

***--------------------------------------------------------------------------------------
*** Get Printing providers
    data(LT_GATE_CSTEP_PRINT) = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_PXSS_PRINT=>C_IPRVT_PX_PRINT
                                                       IF_INUSE  = ABAP_TRUE
                                                       IF_SORTED = ABAP_TRUE ).

    loop at LT_GATE_CSTEP_PRINT into data(LR_GATE_CSTEP_PRINT).

      try .
          data(LR_PR_CSTEP_PRINT) = cast YCL_HP_SVCS_PR_CSTEP_PRINT( LR_GATE_CSTEP_PRINT->R_CLSPR ).

***       Get Print Side
          LS_PRINT-PRSID = LR_PR_CSTEP_PRINT->GET_PRSID( ).

***       Get Print Type
          LS_PRINT-TPRIN = LR_PR_CSTEP_PRINT->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( ).

***       Get Number of Colors
          LS_PRINT-NOCOL = LR_PR_CSTEP_PRINT->ZIF_VCXI_PXSS_PRINT~GET_NOCOL( ).

***       Get Number of samples
          LS_PRINT-NOSAM = LR_PR_CSTEP_PRINT->GET_NOSAM( ).

***       Get Print Technology of Ink Type
          data(LF_PRTEC) = ZCL_VCXI_PXSS_CUST_PRINT=>GET_TPRIN_PRTEC( LS_PRINT-TPRIN ).

***       Get Printing Test
          if LF_PRTEC eq ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_DIGITAL.
            LS_PRINT-PRSAM = LR_PR_CSTEP_PRINT->GET_PRSAM( ).
          endif.

***       Get Analog INKs and Special INK Type LAC on Digital INK
          data(LT_GATE_INK) = LR_GATE_CSTEP_PRINT->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                                              IF_INUSE = ABAP_TRUE ).

***       Get Digital Inks
          LT_GATE_INK = value #( base LT_GATE_INK ( lines of LR_GATE_CSTEP_PRINT->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_DINK=>C_IPRVT_PX_MS_DINK
                                                                                             IF_INUSE = ABAP_TRUE ) ) ).

        catch CX_SY_MOVE_CAST_ERROR.
      endtry.


***--------------------------------------------------------------------------------------
***   Provider Inks (Analog or Digital)
      loop at LT_GATE_INK into data(LR_GATE_INK).

***     Print Technology of Ink Type (Analog or Digital)
        case LF_PRTEC.

***--------------------------------------------------------------------------------------
***       Analog INK
          when ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_ANALOG.

            try .
                data(LR_PR_MS_INK) = cast YCL_HP_SVCS_PR_MS_INK( LR_GATE_INK->R_CLSPR ).

                ME->FILL_PRINTING_INK( exporting IR_PR_MS_INK = LR_PR_MS_INK
                                       changing  CS_INK       = LS_INK ).

              catch CX_SY_MOVE_CAST_ERROR.
            endtry.

***--------------------------------------------------------------------------------------
***       Digital INK
          when ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_DIGITAL.

            try .
                data(LR_PR_MS_DINK) = cast YCL_HP_SVCS_PR_MS_DINK( LR_GATE_INK->R_CLSPR ).

                ME->FILL_PRINTING_DINK( exporting IR_GATE_INK   = LR_GATE_INK
                                                  IR_PR_MS_DINK = LR_PR_MS_DINK
                                        changing  CS_INK        = LS_INK ).

              catch CX_SY_MOVE_CAST_ERROR.

***             Get Type Ink LAC on Digital
                try .
                    LR_PR_MS_INK = cast YCL_HP_SVCS_PR_MS_INK( LR_GATE_INK->R_CLSPR ).

                    ME->FILL_PRINTING_LAC( exporting IR_PR_MS_INK = LR_PR_MS_INK
                                           changing  CS_INK       = LS_INK ).

                  catch CX_SY_MOVE_CAST_ERROR.
                endtry.

            endtry.

        endcase.

        LT_INK = value #( base LT_INK ( LS_INK ) ).
        clear LS_INK.

      endloop.

      LS_PRINT-T_INK = LT_INK.
      clear LT_INK.

      RT_PRINT = value #( base RT_PRINT ( LS_PRINT ) ).
      clear LS_PRINT.

    endloop.

  endmethod.
  method FILL_PRINTING_DINK.

*** Get Material
    CS_INK-COLCO = IR_PR_MS_DINK->GET_MATNR( ).

*** Get Application Volume
    CS_INK-APVOL = IR_PR_MS_DINK->GET_APVOL( )-APVOL.

*** Get Application Volume Unit of Measure
    CS_INK-APVOL_UOM = IR_PR_MS_DINK->GET_APVOL( )-APVOL_UOM.

*** Get Application Volume Per
    CS_INK-APVOP = IR_PR_MS_DINK->GET_APVOP( )-APVOP.

*** Get Application Volume Per Unit of Measure
    CS_INK-APVOP_UOM = IR_PR_MS_DINK->GET_APVOP( )-APVOP_UOM.

*** Get Coverage
    CS_INK-COVRG = IR_PR_MS_DINK->GET_COVRG( )-COVRG.

  endmethod.
  method FILL_PRINTING_INK.

*** Get Color Code
    CS_INK-COLCO = IR_PR_MS_INK->GET_COLCO( ).

*** Get Coverage
    CS_INK-COVRG = IR_PR_MS_INK->GET_COVRG( )-COVRG.

*** Get Ink Station
    CS_INK-INKST = IR_PR_MS_INK->GET_INKST( ).

*** Get Anilox Roll Tool Number
    CS_INK-ANITN = IR_PR_MS_INK->GET_ANITN( ).

  endmethod.
  method FILL_PRINTING_LAC.

*** Get Material
    CS_INK-COLCO = IR_PR_MS_INK->GET_MATNR( ).

*** Get Coverage
    CS_INK-COVRG = IR_PR_MS_INK->GET_COVRG( )-COVRG.

  endmethod.
  method GET_CADIF_IO.

    field-symbols <S_CADIF_IO> type YHP_SVCS_TT_CADIF_PRINT.

*** Create Data Reference
    create data RR_CADIF_IO type YHP_SVCS_TT_CADIF_PRINT.
    assign RR_CADIF_IO->* to <S_CADIF_IO>.

***--------------------------------------------------------------------------------------
*** Fill by Printing
    <S_CADIF_IO> = ME->FILL_BY_PRINTING( ).

  endmethod.
  method SET_CADIF_IO.

    data LT_PRINT type YHP_SVCS_TT_CADIF_PRINT.

*** "Cast" I/O Structure
    move-corresponding IS_CADIF_IO to LT_PRINT.

    ME->UPDATE_CSTEP_PRINT( LT_PRINT ).

  endmethod.
  method UPDATE_CSTEP_PRINT.

***--------------------------------------------------------------------------------------
*** Get Conversion Step Print provider
    data(LT_GATE_CSTEP) = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZIF_VCXI_PXSS_PRINT=>C_IPRVT_PX_PRINT
                                                 IF_INUSE = ABAP_TRUE ).

    check LT_GATE_CSTEP is not initial.
    data(LR_GATE_CSTEP) = LT_GATE_CSTEP[ 1 ].
    check LR_GATE_CSTEP->R_CLSPR is bound.

***--------------------------------------------------------------------------------------
*** Get Digital materials
    select * from ZVCXI_PXS_TD110
      into table @data(LT_TD110)
      where TPRIN eq 'DIGITAL'.

***--------------------------------------------------------------------------------------
*** Cast Conversion Step Print PR Class
    try.
        data(LR_PR_CSTEP_PRINT) = cast YCL_HP_SVCS_PR_CSTEP_PRINT( LR_GATE_CSTEP->R_CLSPR ).

***     Check DMS is already created and linked
        LR_PR_CSTEP_PRINT->ZIF_VCXI_PXSS_PRINT~GET_DESDO( importing EF_RELEA = data(LF_RELEA)
                                                          receiving RF_DESDO = data(LF_DESDO)  ).

        check LF_DESDO is initial or
            ( LF_DESDO is not initial and
              LF_RELEA eq ABAP_FALSE ).

***     Get Print Type
        data(LF_TPRIN) = LR_PR_CSTEP_PRINT->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( ).

***     Get Print Side
        data(LF_PRSID) = LR_PR_CSTEP_PRINT->GET_PRSID( ).

***     Get Print Technology of Ink Type
        data(LF_PRTEC) = ZCL_VCXI_PXSS_CUST_PRINT=>GET_TPRIN_PRTEC( LF_TPRIN ).

***       Get Analog INKs and Special INK Type LAC on Digital INK
        data(LT_GATE) = LR_GATE_CSTEP->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                                  IF_INUSE = ABAP_TRUE ).

***       Get Digital Inks
        LT_GATE = value #( base LT_GATE ( lines of LR_GATE_CSTEP->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_DINK=>C_IPRVT_PX_MS_DINK
                                                                             IF_INUSE = ABAP_TRUE ) ) ).

      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

***--------------------------------------------------------------------------------------
*** Update Printing information using ESKO XML
    read table IT_PRINT  into data(LS_PRINT) with key TPRIN = LF_TPRIN
                                                      PRSID = LF_PRSID.
    check SY-SUBRC is initial.

*** Set Print Side
    LR_PR_CSTEP_PRINT->SET_PRSID( IF_PRSID = LS_PRINT-PRSID
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Number of samples
    LR_PR_CSTEP_PRINT->SET_NOSAM( IF_NOSAM = LS_PRINT-NOSAM
                                  IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

*** Set Printing Test
    if LF_PRTEC eq ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_DIGITAL.
      LR_PR_CSTEP_PRINT->SET_PRSAM( IF_PRSAM = LS_PRINT-PRSAM
                                    IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Print Technology of Ink Type (Analog or Digital)
    case LF_PRTEC.

***--------------------------------------------------------------------------------------
***   Analog INK
      when ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_ANALOG.

***     Update Analog INKs
        ME->UPDATE_MS_INK( IT_GATE       = LT_GATE
                           IR_GATE_CSTEP = LR_GATE_CSTEP
                           IT_INK        = LS_PRINT-T_INK ).

***--------------------------------------------------------------------------------------
***   Digital INKs
      when ZCL_VCXI_PXSS_CUST_PRINT=>C_PRTEC_DIGITAL.

        loop at LS_PRINT-T_INK into data(LS_INK)
            where COLCO is not initial.

          read table LT_TD110 into data(LS_TD110) with key MATNR = LS_INK-COLCO.
          if LS_TD110-TINK(2) eq 'D_'.

***         Update Digital INKs
            ME->UPDATE_MS_DINK( IT_GATE = LT_GATE
                                IS_INK  = LS_INK ).

          elseif LS_TD110-TINK eq 'LAC'.

***         Create/Update Digital LAC
            ME->CREATE_UPDATE_LAC( IR_GATE_CSTEP = LR_GATE_CSTEP
                                   IT_GATE       = LT_GATE
                                   IS_INK        = LS_INK ).

          endif.

        endloop.

    endcase.

  endmethod.
  method UPDATE_MS_DINK.

    data LS_APVOL type ZVCXI_PXS_S_APVOL.
    data LS_APVOP type ZVCXI_PXS_S_APVOP.
    data LS_COVRG type ZVCXI_P0S_S_COVRG.

***--------------------------------------------------------------------------------------
*** Update Digital INKs
    loop at IT_GATE into data(LR_GATE).

      try .
          data(LR_PR_MS_DINK) = cast YCL_HP_SVCS_PR_MS_DINK( LR_GATE->R_CLSPR ).
          check IS_INK-COLCO eq LR_PR_MS_DINK->GET_MATNR( ).

***       Set Application Volume
          if IS_INK-APVOL is not initial.

            LS_APVOL = value #( APVOL     = IS_INK-APVOL
                                APVOL_UOM = IS_INK-APVOL_UOM ).

            LR_PR_MS_DINK->SET_APVOL( IS_APVOL = LS_APVOL
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

          endif.

***       Set Application Volume Per
          if IS_INK-APVOP is not initial.

            LS_APVOP = value #( APVOP     = IS_INK-APVOP
                                APVOP_UOM = IS_INK-APVOP_UOM ).

            LR_PR_MS_DINK->SET_APVOP_EXT( IS_APVOP = LS_APVOP
                                          IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

          endif.

***       Set Coverage
          if IS_INK-COVRG is not initial.

            LS_COVRG = value #( COVRG     = IS_INK-COVRG
                                COVRG_UOM = LR_PR_MS_DINK->GET_COVRG( )-COVRG_UOM ).

            LR_PR_MS_DINK->SET_COVRG( IS_COVRG = LS_COVRG
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

          endif.

        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

    endloop.

  endmethod.
  method UPDATE_MS_INK.

    loop at IT_INK into data(LS_INK)
        where COLCO is not initial.

***   Create Analog INKs
      ME->CREATE_MS_INK( IR_GATE_CSTEP = IR_GATE_CSTEP
                         IS_INK        = LS_INK ).

    endloop.

*** Remove Analog INKs that are no longer needed
    loop at IT_GATE into data(LR_GATE).
      LR_GATE->DO_FREE( ).
    endloop.

  endmethod.
