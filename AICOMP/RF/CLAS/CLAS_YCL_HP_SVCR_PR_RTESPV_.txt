
class YCL_HP_SVCR_PR_RTESPV definition
  public
  inheriting from ZCL_VCXI_P1SR_PR_RTESPV
  create public .

public section.

  interfaces YIF_HP_SVCR_PR_RTESPV_SELRTE .

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV optional
    raising
      /VCXI/CX_CKX .

  methods CREATE_BL_PRTE
    redefinition .
protected section.

  constants C_IEVNT_I_HFLAG_REFRESH type /VCXI/VKSC_IEVNT value 'HFLAG_REFRESH' ##NO_TEXT.

  methods UPDATE_RTE_HFLAG
    raising
      /VCXI/CX_CKX .
  methods UPDATE_RTE_AREA_WGT
    raising
      /VCXI/CX_CKX .
  methods GET_PRVDR_PRODI
    exporting
      !ER_GATE type ref to /VCXI/CL_VKSR_GATE
    returning
      value(RR_PR_PRODI) type ref to YCL_HP_SVCS_PR_PRODI
    raising
      /VCXI/CX_CKX .
  methods GET_GATE_AREA_WGT
    returning
      value(ER_GATE) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods SET_RTE_SBLARO
    importing
      !IR_BL_PRTE type ref to ZCL_VCXI_XCSR_BL_PRTE
    raising
      /VCXI/CX_CKX .
  methods CALC_RTE_SBLARO
    exporting
      !ES_SBLARO type ZVCXI_PXS_S_SBLAR
      !ES_OPQTY type /VCXI/VSMR_S_OPQTY
    raising
      /VCXI/CX_CKX .
  methods CALC_RTE_SBLAR
    returning
      value(RS_SBLAR) type ZVCXI_PXS_S_SBLAR
    raising
      /VCXI/CX_CKX .
  methods SET_RTE_SBLAR
    importing
      !IR_BL_PRTE type ref to ZCL_VCXI_XCSR_BL_PRTE
    raising
      /VCXI/CX_CKX .

  methods CREATE_BL_PSTEP
    redefinition .
  methods HANDLE_REBUILD_BL_PSTEP
    redefinition .
private section.
endclass. "YCL_HP_SVCR_PR_RTESPV definition
class YCL_HP_SVCR_PR_RTESPV implementation.
  method CALC_RTE_SBLAR.

    data: LR_GATE_AREA_WGT    type ref to /VCXI/CL_VKSR_GATE,
          LR_P1SS_PR_AREA_WGT type ref to ZCL_VCXI_P1SS_PR_AREA_WGT,
          LR_P2SS_PR_AREA_WGT type ref to ZCL_VCXI_P2SS_PR_AREA_WGT,
          LR_P3SS_PR_AREA_WGT type ref to ZCL_VCXI_P3SS_PR_AREA_WGT,
          LR_P4SS_PR_AREA_WGT type ref to ZCL_VCXI_P4SS_PR_AREA_WGT.

***-------------------------------------------------------------------*
*** Get Gate of Area/Weight
    LR_GATE_AREA_WGT = ME->GET_GATE_AREA_WGT( ).
    check LR_GATE_AREA_WGT is bound.

***-------------------------------------------------------------------*
*** Set Sold Blank Area per Order based on component type
    do 1 times.

***   P1: Corrugated
      try.
          LR_P1SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P1SS_PR_AREA_WGT is bound.
            try.
                RS_SBLAR = LR_P1SS_PR_AREA_WGT->GET_SBLAR( ).
                exit.
              catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

***   P2: Folding Carton
      try.
          LR_P2SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P2SS_PR_AREA_WGT is bound.
            try.
                RS_SBLAR = LR_P2SS_PR_AREA_WGT->GET_SBLAR( ).
                exit.
              catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

***   P3: Assembled Set
      try.
          LR_P3SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P1SS_PR_AREA_WGT is bound.
            try.
                RS_SBLAR = LR_P3SS_PR_AREA_WGT->GET_SBLAR( ).
                exit.
              catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

***   P4: Merchandise
      try.
          LR_P4SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P4SS_PR_AREA_WGT is bound.
            try.
                RS_SBLAR = LR_P4SS_PR_AREA_WGT->GET_SBLAR( ).
                exit.
              catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

    enddo.

  endmethod.
  method CALC_RTE_SBLARO.

    data: LR_GATE_AREA_WGT    type ref to /VCXI/CL_VKSR_GATE,
          LR_P1SS_PR_AREA_WGT type ref to ZCL_VCXI_P1SS_PR_AREA_WGT,
          LR_P2SS_PR_AREA_WGT type ref to ZCL_VCXI_P2SS_PR_AREA_WGT,
          LR_P3SS_PR_AREA_WGT type ref to ZCL_VCXI_P3SS_PR_AREA_WGT,
          LR_P4SS_PR_AREA_WGT type ref to ZCL_VCXI_P4SS_PR_AREA_WGT.


*** Get Gate of Area/Weight
    LR_GATE_AREA_WGT = ME->GET_GATE_AREA_WGT( ).
    check LR_GATE_AREA_WGT is bound.

***-------------------------------------------------------------------*
*** Set Sold Blank Area per Order based on component type
    do 1 times.

*** P1: Corrugated
      try.
          LR_P1SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P1SS_PR_AREA_WGT is bound.
            try.
                ES_SBLARO = LR_P1SS_PR_AREA_WGT->GET_SBLAR( ).
                ES_OPQTY  = LR_P1SS_PR_AREA_WGT->GET_OPQTY( ).
                ES_SBLARO-SBLAR = ES_SBLARO-SBLAR * ES_OPQTY-OPQTY.
                exit.
*              catch CX_SY_ARITHMETIC_OVERFLOW.
               catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

      try.
*** P2: Folding Carton
          LR_P2SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P2SS_PR_AREA_WGT is bound.
            try.
                ES_SBLARO = LR_P2SS_PR_AREA_WGT->GET_SBLAR( ).
                ES_OPQTY  = LR_P2SS_PR_AREA_WGT->GET_OPQTY( ).
                ES_SBLARO-SBLAR = ES_SBLARO-SBLAR * ES_OPQTY-OPQTY.
                exit.
*              catch CX_SY_ARITHMETIC_OVERFLOW.
               catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

*** P3: Assembled Set
      try.
          LR_P3SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P1SS_PR_AREA_WGT is bound.
            try.
                ES_SBLARO = LR_P3SS_PR_AREA_WGT->GET_SBLAR( ).
                ES_OPQTY  = LR_P3SS_PR_AREA_WGT->GET_OPQTY( ).
                ES_SBLARO-SBLAR = ES_SBLARO-SBLAR * ES_OPQTY-OPQTY.
                exit.
*              catch CX_SY_ARITHMETIC_OVERFLOW.
               catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

*** P4: Merchandise
      try.
          LR_P4SS_PR_AREA_WGT = cast #( LR_GATE_AREA_WGT->R_CLSPR ).
          if LR_P4SS_PR_AREA_WGT is bound.
            try.
                ES_SBLARO = LR_P4SS_PR_AREA_WGT->GET_SBLAR( ).
                ES_OPQTY  = LR_P4SS_PR_AREA_WGT->GET_OPQTY( ).
                ES_SBLARO-SBLAR = ES_SBLARO-SBLAR * ES_OPQTY-OPQTY.
                exit.
*              catch CX_SY_ARITHMETIC_OVERFLOW.
               catch CX_SY_MOVE_CAST_ERROR.
            endtry.
          endif.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

    enddo.

  endmethod.
  method CONSTRUCTOR.

    data: LR_BL_RTESPV type ref to ZCL_VCXI_XCSR_BL_RTESPV.

*** Create BL Supervisor Instance
    if IR_BL_RTESPV is bound.
      move IR_BL_RTESPV to LR_BL_RTESPV.
    else.
      create object LR_BL_RTESPV
        type
        YCL_HP_SVCR_BL_RTESPV
        exporting
          IR_GATE = IR_GATE.
    endif.

    SUPER->CONSTRUCTOR( IR_GATE      = IR_GATE
                        IR_BL_RTESPV = LR_BL_RTESPV ).

  endmethod.
  method CREATE_BL_PRTE.

    data: LR_RTE_PRTE         type ref to /VCXI/CL_VSMR_RTE_PRTE,
          LR_PR_PRODI         type ref to YCL_HP_SVCS_PR_PRODI,
          LR_IF_HFLAG         type ref to YIF_HP_SVCR_HFLAG.

***-------------------------------------------------------------------*
    if IR_RTE_PRTE is bound.
      move IR_RTE_PRTE to LR_RTE_PRTE.
    else.
      create object LR_RTE_PRTE.
    endif.

*** Create Route BL
    create object RR_BL_PRTE
      type
      YCL_HP_SVCR_BL_PRTE
      exporting
        IR_RTE_PRTE  = LR_RTE_PRTE
        IR_MFMI      = ME->R_MFMI
        IR_MFSI      = ME->R_MFSI
        IT_CSPLIT    = ME->T_CSPLIT
        IF_DATE      = ME->F_DATE
        IF_LIFNR_REQ = ABAP_TRUE.

*** Set Route Attribute: Homologation Flag
    LR_PR_PRODI = ME->GET_PRVDR_PRODI( ).
    if LR_PR_PRODI is bound.
      try.
          LR_IF_HFLAG ?= RR_BL_PRTE.
          LR_IF_HFLAG->SET_HFLAG( IF_HFLAG = LR_PR_PRODI->GET_HFLAG( ) ).
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.
    endif.

*** Set Route Attribute: Sold Blank Area per Order & per Piece
    ME->SET_RTE_SBLARO( IR_BL_PRTE = RR_BL_PRTE ).
    ME->SET_RTE_SBLAR( IR_BL_PRTE = RR_BL_PRTE ).

  endmethod.
  method CREATE_BL_PSTEP.

*** Create Instance based on ID
    case IF_IPSTP.
***   Printing
      when ZCL_VCXI_P1SR_BL_PSTEP_PRINT=>C_IPSTP_PRINT.
        create object RR_BL_PSTEP
          type YCL_HP_SVCR_BL_PSTEP_PRINT
          exporting
            IF_DATE    = ME->F_DATE
            IR_APPDATA = ME->R_GATE->GET_APPDATA( ).

***   Slot/Slit/Score
      when ZCL_VCXI_P1SR_BL_PSTEP_SSS=>C_IPSTP_SSS.
        create object RR_BL_PSTEP
          type YCL_HP_SVCR_BL_PSTEP_SSS
          exporting
            IF_DATE    = ME->F_DATE
            IR_APPDATA = ME->R_GATE->GET_APPDATA( ).

***   Unitizing (own implementation, to influence Packaging Material Explosion)
      when ZCL_VCXI_PXSR_BL_PSTEP_UNIT=>C_IPSTP_UNIT.
        create object RR_BL_PSTEP
          type YCL_HP_SVCR_BL_PSTEP_UNIT
          exporting
            IF_IPSTP   = IF_IPSTP
            IF_DATE    = ME->F_DATE
            IR_APPDATA = ME->R_GATE->GET_APPDATA( ).

    endcase.

    if RR_BL_PSTEP is bound.
***   Initialize Production Step
      RR_BL_PSTEP->I_WERKS = ME->I_WERKS.
      RR_BL_PSTEP->SET_COMBW( IF_COMBW = IF_COMBW ).
      RR_BL_PSTEP->INIT_BY_SPEC( IR_GATE  = ME->R_GATE
                                 IT_PRVDR = IT_PRVDR ).
    else.
***   Create via SUPER
      RR_BL_PSTEP = SUPER->CREATE_BL_PSTEP( IF_IPSTP = IF_IPSTP
                                            IT_PRVDR = IT_PRVDR
                                            IF_COMBW = IF_COMBW ).
    endif.

  endmethod.
  method GET_GATE_AREA_WGT.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

***------------------------------------------------------------------------------------------------
*** Find Provider for Area/Weight

*** P1 - Corrugated
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P1SS_PR_AREA_WGT=>C_IPRVT_P1_AREA_WGT
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check ER_GATE is not bound.

*** P2 - Assembled Set
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P2SS_PR_AREA_WGT=>C_IPRVT_P2_AREA_WGT
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check ER_GATE is not bound.

*** P3 - Folding Carton
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P3SS_PR_AREA_WGT=>C_IPRVT_P3_AREA_WGT
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check ER_GATE is not bound.

*** P4 - Merchandise
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P4SS_PR_AREA_WGT=>C_IPRVT_P4_AREA_WGT
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.


  endmethod.
  method GET_PRVDR_PRODI.

    data:  LT_GATE  type /VCXI/VKSR_TT_GATE.

    clear: ER_GATE,
           RR_PR_PRODI.

***------------------------------------------------------------------------------------------------
*** Find Provider for Production Information
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = YCL_HP_SVCS_PR_PRODI=>C_IPRVT_HP_PRODI
                                     IF_INUSE = ABAP_TRUE ).
    read table LT_GATE into ER_GATE index 1.
    check SY-SUBRC is initial.

    move ER_GATE->R_CLSPR ?to RR_PR_PRODI.

  endmethod.
  method HANDLE_REBUILD_BL_PSTEP.


    ME->UPDATE_RTE_HFLAG( ).
    ME->UPDATE_RTE_AREA_WGT( ).

    SUPER->HANDLE_REBUILD_BL_PSTEP( IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  endmethod.
  method SET_RTE_SBLAR.

    data: LR_IF_AREA_WGT      type ref to YIF_HP_SVCR_AREA_WGT.

***-------------------------------------------------------------------*
    check IR_BL_PRTE is bound.

*** Set Sold Blank Area per Piece
    try.
        LR_IF_AREA_WGT = cast #( IR_BL_PRTE ).
        LR_IF_AREA_WGT->SET_SBLAR( ME->CALC_RTE_SBLAR( ) ).
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

  endmethod.
  method SET_RTE_SBLARO.

    data: LF_NOUTT       type ZVCXI_PXS_NOUTT,
          LF_NOUTT_MULTI type ZVCXI_PXS_NOUTT.
    data: LS_SBLARO           type ZVCXI_PXS_S_SBLAR,
          LS_OPQTY            type /VCXI/VSMR_S_OPQTY.
    data: LR_IF_AREA_WGT      type ref to YIF_HP_SVCR_AREA_WGT.

***-------------------------------------------------------------------*
    check IR_BL_PRTE is bound.

*** Set Sold Blank Area per Order
    try.
        LR_IF_AREA_WGT = cast #( IR_BL_PRTE ).
        ME->CALC_RTE_SBLARO( importing ES_SBLARO = LS_SBLARO
                                       ES_OPQTY  = LS_OPQTY ).

     LR_IF_AREA_WGT->SET_SBLARO( exporting IS_SBLARO = LS_SBLARO ).

 LR_IF_AREA_WGT->SET_OPQTY( LS_OPQTY ).

      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

  endmethod.
  method UPDATE_RTE_AREA_WGT.

    data: LS_SBLARO type ZVCXI_PXS_S_SBLAR,
          LS_SBLAR  type ZVCXI_PXS_S_SBLAR,
          LS_OPQTY  type /VCXI/VSMR_S_OPQTY.
    data: LR_BL_PRTE     type ref to ZCL_VCXI_XCSR_BL_PRTE,
          LR_IF_AREA_WGT type ref to YIF_HP_SVCR_AREA_WGT.


*** Get Sold Blank Area per Order
    ME->CALC_RTE_SBLARO( importing ES_SBLARO = LS_SBLARO
                                   ES_OPQTY  = LS_OPQTY  ).
    LS_SBLAR  = ME->CALC_RTE_SBLAR( ).

*** Update all routes.
    loop at T_RTEALT into LR_BL_PRTE.
      check LR_BL_PRTE is bound.
      try.
          LR_IF_AREA_WGT ?= LR_BL_PRTE.
          LR_IF_AREA_WGT->SET_SBLARO( LS_SBLARO ).
          LR_IF_AREA_WGT->SET_OPQTY( LS_OPQTY ).
          LR_IF_AREA_WGT->SET_SBLAR( LS_SBLAR ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.
    loop at T_RTEINV into LR_BL_PRTE.
      check LR_BL_PRTE is bound.
      try.
          LR_IF_AREA_WGT ?= LR_BL_PRTE.
          LR_IF_AREA_WGT->SET_SBLARO( LS_SBLARO ).
          LR_IF_AREA_WGT->SET_OPQTY( LS_OPQTY ).
          LR_IF_AREA_WGT->SET_SBLAR( LS_SBLAR ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.
  endmethod.
  method UPDATE_RTE_HFLAG.
    data: LR_BL_PRTE type ref to ZCL_VCXI_XCSR_BL_PRTE,
          LR_HFLAG   type ref to YIF_HP_SVCR_HFLAG.

    data(LR_PR_PRODI) = ME->GET_PRVDR_PRODI( ).

    check LR_PR_PRODI is BOUND.

*** Update all routes.
    loop at T_RTEALT into LR_BL_PRTE.
      check LR_BL_PRTE is bound.
      try.
          LR_HFLAG ?= LR_BL_PRTE.
          LR_HFLAG->SET_HFLAG( IF_HFLAG = LR_PR_PRODI->GET_HFLAG( ) ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.
    loop at T_RTEINV into LR_BL_PRTE.
      check LR_BL_PRTE is bound.
      try.
          LR_HFLAG ?= LR_BL_PRTE.
          LR_HFLAG->SET_HFLAG( IF_HFLAG = LR_PR_PRODI->GET_HFLAG( ) ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
    endloop.

  endmethod.
  method YIF_HP_SVCR_PR_RTESPV_SELRTE~SET_SELRTE_WO_LOCK.
data:  LF_CHANGED   type        ABAP_BOOL.
  data:  LT_BL_PRTE   type        ZVCXI_XCSR_TT_BL_PRTE.


*** commented to allow simulation for alternative routes in OMP interface
**** Is BL Production Route changeable
*  check ME->IS_BL_PRTE_CHANGEABLE( ) eq ABAP_TRUE.

***----------------------------------------------------------------------------
  if IR_BL_PRTE is bound. "and
     "IR_BL_PRTE->R_RTE_PRTE->F_RSRCE ne ZCL_VCXI_XCSR_BL_PRTE=>C_RSRCE_USER.
    move IR_BL_PRTE->COPY( )                 to ME->R_RTESEL.
    move ZCL_VCXI_XCSR_BL_PRTE=>C_RSRCE_USER to ME->R_RTESEL->R_RTE_PRTE->F_RSRCE.

*** Initialize Relevancy Points
    ME->R_RTESEL->INIT_RELPO( ).

*** Check Production Route
    ME->R_RTESEL->CHECK( ).

*** Evaluate
    append ME->R_RTESEL to LT_BL_PRTE.
    ME->EVALUATE_BL_PRTE( IT_BL_PRTE = LT_BL_PRTE ).

*** Mark change
    move ABAP_TRUE  to LF_CHANGED.

****----------------------------------------------------------------------------
  else.
    if IR_BL_PRTE ne ME->R_RTESEL.
      move IR_BL_PRTE to ME->R_RTESEL.
      move ABAP_TRUE  to LF_CHANGED.
    endif.
  endif.

***----------------------------------------------------------------------------
*** Set Routing Option to chosen
  ME->SET_RTEOP( IF_RTEOP = C_RTEOP_CHOSEN
                 IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_RTESEL_CHANGED ).
  endif.

  endmethod.
