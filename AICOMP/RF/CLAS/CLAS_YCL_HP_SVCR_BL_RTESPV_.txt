
class YCL_HP_SVCR_BL_RTESPV definition
  public
  inheriting from ZCL_VCXI_P1SR_BL_RTESPV
  create public .

public section.
protected section.

  methods PROCESS_RTE_ARBPL
    redefinition .
private section.
endclass. "YCL_HP_SVCR_BL_RTESPV definition
class YCL_HP_SVCR_BL_RTESPV implementation.
  method PROCESS_RTE_ARBPL.

    data: LF_SPVRE_ID   type /VCXI/CKX_ID.
    data: LS_PARAM      type /VCXI/VKSR_S_PARAM.
    data: LR_HFLAG    type ref to YIF_HP_SVCR_HFLAG,
          LR_AREA_WGT type ref to YIF_HP_SVCR_AREA_WGT,
          LR_VCXI_CX  type ref to /VCXI/CX_CKX.

    SUPER->PROCESS_RTE_ARBPL( exporting IR_SPVRE_ROOT  = IR_SPVRE_ROOT
                                        IR_RTE_ARBPL   = IR_RTE_ARBPL
                                        IR_BL_PRTE     = IR_BL_PRTE
                              importing ER_SPVRE_ARBPL = ER_SPVRE_ARBPL
                              changing  CT_SPVRE       = CT_SPVRE ).

*** Get HFLAG-Interface of the routing class
    try.
        move IR_BL_PRTE ?to LR_HFLAG.
        check LR_HFLAG is bound.
      catch CX_SY_MOVE_CAST_ERROR.
        exit.
    endtry.


***----------------------------------------------------------------------------
    check ER_SPVRE_ARBPL is bound.
    LF_SPVRE_ID = ER_SPVRE_ARBPL->GET_ID( ).
    case LF_SPVRE_ID.
      when 'OUTSO' or 'MANU'.
        return.

      when others.
***----------------------------------------------------------------------------
***     Set HFlag
        clear LS_PARAM.
        move LR_HFLAG->C_PARID_HFLAG           to LS_PARAM-PARID.
        move /VCXI/CL_VKSC_PARAM=>C_PARTY_CHAR to LS_PARAM-PARTY.
        move LR_HFLAG->F_HFLAG                 to LS_PARAM-ATWRT.
        move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_PARAM-SETBY.
        ER_SPVRE_ARBPL->SET_PARAM( IS_PARAM = LS_PARAM ).

        if LF_SPVRE_ID eq 'CONV'.
***       Set Area/Weight parameters
          try.
              move IR_BL_PRTE ?to LR_AREA_WGT.
              if LR_AREA_WGT is bound.
***             Set Sold Blank Area per Order
                clear LS_PARAM.
                move LR_AREA_WGT->C_PARID_SBLARO       to LS_PARAM-PARID.
                move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC to LS_PARAM-PARTY.
                move LR_AREA_WGT->S_SBLARO-SBLAR       to LS_PARAM-ATFLV.
                move LR_AREA_WGT->S_SBLARO-SBLAR_UOM   to LS_PARAM-UNIT.
                move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_PARAM-SETBY.
                try.
                    ER_SPVRE_ARBPL->SET_PARAM( IS_PARAM = LS_PARAM ).
                  catch /VCXI/CX_CKX into LR_VCXI_CX.
                    move 'W' to LR_VCXI_CX->F_MSGTY.
                    ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( LR_VCXI_CX ).
                endtry.

***             Set Operation Qty from Area/Weight node for MQ calculation
                clear LS_PARAM.
                move LR_AREA_WGT->C_PARID_AWOPQ        to LS_PARAM-PARID.
                move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC to LS_PARAM-PARTY.
                move LR_AREA_WGT->S_OPQTY-OPQTY        to LS_PARAM-ATFLV.
                move LR_AREA_WGT->S_OPQTY-OPQTY_UOM    to LS_PARAM-UNIT.
                move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_PARAM-SETBY.
                try.
                    ER_SPVRE_ARBPL->SET_PARAM( IS_PARAM = LS_PARAM ).
                  catch /VCXI/CX_CKX into LR_VCXI_CX.
                    move 'W' to LR_VCXI_CX->F_MSGTY.
                    ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( LR_VCXI_CX ).
                endtry.

***             Set Sold Blank Area per Piece
                clear LS_PARAM.
                move LR_AREA_WGT->C_PARID_SBLAR        to LS_PARAM-PARID.
                move /VCXI/CL_VKSC_PARAM=>C_PARTY_NUMC to LS_PARAM-PARTY.
                move LR_AREA_WGT->S_SBLAR-SBLAR        to LS_PARAM-ATFLV.
                move LR_AREA_WGT->S_SBLAR-SBLAR_UOM    to LS_PARAM-UNIT.
                move /VCXI/CL_VKSR_GATE=>C_SETBY_CALC  to LS_PARAM-SETBY.
                try.
                    ER_SPVRE_ARBPL->SET_PARAM( IS_PARAM = LS_PARAM ).
                  catch /VCXI/CX_CKX into LR_VCXI_CX.
                    move 'W' to LR_VCXI_CX->F_MSGTY.
                    ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( LR_VCXI_CX ).
                endtry.

              endif.

            catch CX_SY_MOVE_CAST_ERROR.
              clear LR_AREA_WGT.
          endtry.
        endif.

    endcase.

  endmethod.
endclass. "YCL_HP_SVCR_BL_RTESPV definition
endclass. "YCL_HP_SVCR_BL_RTESPV implementation
