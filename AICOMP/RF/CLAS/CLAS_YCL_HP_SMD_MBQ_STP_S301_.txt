
class YCL_HP_SMD_MBQ_STP_S301 definition
  public
  inheriting from ZCL_VCXI_PXM_MBQ_STP_S301
  final
  create public .

public section.

  data C_REFMA_SINGLE type MATNR value 'SINGLE' ##NO_TEXT.
protected section.

  methods ADD_OTHER_DOC
    importing
      !IR_SVC type ref to /VCXI/CL_VKSRA_SVC
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    exporting
      !ER_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT
      !EF_CSELF type /VCXI/VKSR_REPNR
      !EF_ISELF type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .
  methods ADD_MQ_MGR
    importing
      !IR_SVC type ref to /VCXI/CL_VKSRA_SVC
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    exporting
      !ER_CUELMNT type ref to /VCXI/CL_VKSC_CUELMNT
      !EF_CSELF type /VCXI/VKSR_REPNR
      !EF_ISELF type /VCXI/CKX_ID
    raising
      /VCXI/CX_CKX .

  methods FILL_IDAT
    redefinition .
private section.
endclass. "YCL_HP_SMD_MBQ_STP_S301 definition
class YCL_HP_SMD_MBQ_STP_S301 implementation.
  method ADD_MQ_MGR.

    data: LF_PARID      type /VCXI/VKS_PARID.
    data: LS_SVCEL_MGR  type ZVCXI_XCI_S_SVCEL,
          LS_SVCEL_MQTY type ZVCXI_XCI_S_SVCEL.
    data: LT_PARAM      type /VCXI/VKSR_TT_PARAM.
    data: LR_SVCEL      type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_CUELMNT_MQ type ref to /VCXI/CL_VKSC_CUELMNT.

***-------------------------------------------------------------------*
*** ADD MULTI-QUANTITY MANAGER
***-------------------------------------------------------------------*
*** Get Customizing Element of MQ Manager
    ER_CUELMNT = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUPRFL = IR_IDAT_SVC->R_CUPRFL
                                                      IF_ID     = 'MULTIQTY_MGR' ).

*** Get SVC Element
    check ER_CUELMNT is bound.
    LR_SVCEL = ZCL_VCXI_XCI_IDAT_SVC=>FIND_SVCEL( IR_SVC = IR_SVC
                                                  IF_ID  = ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ) ).

*** Check if MQ is active and if we are processing a SINGLE variant material
    check LR_SVCEL is bound and LR_SVCEL->IS_INUSE( ).
*    check ME->R_DCO_INPUT->R_BOB_SDOC->T_VBAP[ POSNR = ME->R_DCO_INPUT->F_POSNR ]-MATNR eq C_REFMA_SINGLE. From ticket: https://aicomp.atlassian.net/browse/OPHJVC-444

*** Check that we are processing the FG
    data(LS_MATLI) = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].
    check LS_MATLI-SOKEY eq ZCL_VCXI_P1M_MBQ_BL_CRCOMP=>C_SOKEY_CFG  or
          LS_MATLI-SOKEY eq ZCL_VCXI_P2M_MBQ_BL_FCCOMP=>C_SOKEY_FCFG or
          LS_MATLI-SOKEY eq ZCL_VCXI_P3M_MBQ_BL_ASCOMP=>C_SOKEY_AFG  or
          LS_MATLI-SOKEY eq ZCL_VCXI_P4M_MBQ_BL_PRCOMP=>C_SOKEY_PRFG.

*** Get all MQs
    data(LT_CHILDREN) = LR_SVCEL->/VCXI/IF_CKX_OBJECT_H~GET_CHILDREN( ).
    check LT_CHILDREN is not initial.

***------------------------------------------------------------------*
*** Get Element ID
    move ER_CUELMNT->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LS_SVCEL_MGR-ISELF.

*** Add Element and receive own Counter
    LS_SVCEL_MGR-CSELF = IR_IDAT_SVC->ADD_SVCEL( IF_IPARE = LS_SVCEL_MGR-IPARE
                                                 IF_CPARE = LS_SVCEL_MGR-CPARE
                                                 IF_ISELF = LS_SVCEL_MGR-ISELF ).

*** Add Events
    ME->ADD_SVCEV( changing CS_SVCEL = LS_SVCEL_MGR ).

*** Set Information to Integration Data Service
    IR_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL_MGR ).

*** Return ID and Counter of MQ MGR
    EF_ISELF = LS_SVCEL_MGR-ISELF.
    EF_CSELF = LS_SVCEL_MGR-CSELF.

***-------------------------------------------------------------------*
*** ADD ALL MULTI-QUANTITIES
***-------------------------------------------------------------------*
*** Get Customizing Element of MQ
    LR_CUELMNT_MQ = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUPRFL = IR_IDAT_SVC->R_CUPRFL
                                                         IF_ID     = 'MULTIQTY'
                                                         IR_CUELMNT_PARENT = ER_CUELMNT ).
*** Add all MQs
    loop at LT_CHILDREN into data(LR_OBJECT).
      try.
          free LR_SVCEL.
          LR_SVCEL = cast #( LR_OBJECT ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

***   Get SVC ID
      clear LS_SVCEL_MQTY.
      move LR_SVCEL->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LS_SVCEL_MQTY-ISELF.

***   Add Element and receive own Counter
      LS_SVCEL_MQTY-IPARE = EF_ISELF.
      LS_SVCEL_MQTY-CPARE = EF_CSELF.
      LS_SVCEL_MQTY-CSELF = IR_IDAT_SVC->ADD_SVCEL( IF_IPARE   = LS_SVCEL_MQTY-IPARE
                                                    IF_CPARE   = LS_SVCEL_MQTY-CPARE
                                                    IF_ISELF   = LS_SVCEL_MQTY-ISELF ).

***   Copy Position
      move LR_SVCEL->GET_POSID( )  to LS_SVCEL_MQTY-POSID.

      if LR_CUELMNT_MQ             is bound and
         LR_CUELMNT_MQ->R_REGELMNT is bound.

***     Copy Leading Object Key
        move-corresponding LR_SVCEL->GET_LEOKY( )  to LS_SVCEL_MQTY-S_LEOKY.

***     Copy supervised Parameter
        clear LT_PARAM.
        move LR_SVCEL->GET_PARAM_ALL( ) to LT_PARAM.

        loop at LR_CUELMNT_MQ->R_REGELMNT->/VCXI/IF_VKSC_REGELMNT_PARAM~T_REGELMNT_PARAM
             into data(LS_REGELMNT_PARAM) where PARSP eq ABAP_TRUE.

***     Get Parameter Value
          move LS_REGELMNT_PARAM-R_PARAM->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LF_PARID.
          clear LS_REGELMNT_PARAM.
          check LINE_EXISTS( LT_PARAM[ PARID = LF_PARID ] ).

***     Add Parameter
          append corresponding #( LT_PARAM[ PARID = LF_PARID ] ) to LS_SVCEL_MQTY-T_SVCPA.
        endloop.
      endif.

***   Add Events
      ME->ADD_SVCEV( changing CS_SVCEL = LS_SVCEL_MQTY ).

***   Set Information to Integration Data Service
      IR_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL_MQTY ).

    endloop.

  endmethod.
  method ADD_OTHER_DOC.

******
    data: LF_PARID  type /VCXI/VKS_PARID,
          LF_LINKED type ABAP_BOOL,
          LF_LEOKY  type /VCXI/VKS_LEOKY.
    data: LS_SVCEL_MGR type ZVCXI_XCI_S_SVCEL,
          LS_SVCEL_DOC type ZVCXI_XCI_S_SVCEL.
    data: LS_DMSLI type ZVCXI_XCM_MBQ_S_DMSLI,
          LS_LEOKY type /VCXI/VKSR_S_LEOKY.
    data: LT_PARAM      type /VCXI/VKSR_TT_PARAM.
    data: LR_SVCEL_DM   type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_SVCEL_DOC  type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_CUELMNT_DM type ref to /VCXI/CL_VKSC_CUELMNT.

***-------------------------------------------------------------------*
*** READ DOC MANAGER
***-------------------------------------------------------------------*
*** Get Customizing Element of DOC MGR
    LR_CUELMNT_DM = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUPRFL = IR_IDAT_SVC->R_CUPRFL
                                                      IF_ID     = 'DOC_MGR' ).

*** Get SVC Element
    check LR_CUELMNT_DM is bound.
    LR_SVCEL_DM = ZCL_VCXI_XCI_IDAT_SVC=>FIND_SVCEL( IR_SVC = IR_SVC
                                                  IF_ID  = LR_CUELMNT_DM->/VCXI/IF_CKX_OBJECT~GET_ID( ) ).

*** Check if DOC_MGR is active
    check LR_SVCEL_DM is bound and LR_SVCEL_DM->IS_INUSE( ).

** Check that we are processing the FG
    data(LS_MATLI) = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].
    check LS_MATLI-MLCNT eq 1.
    check LS_MATLI-SOKEY eq ZCL_VCXI_P1M_MBQ_BL_CRCOMP=>C_SOKEY_CFG or
          LS_MATLI-SOKEY eq ZCL_VCXI_P4M_MBQ_BL_PRCOMP=>C_SOKEY_PRFG.

*** Get all Documents
    data(LT_CHILDREN) = LR_SVCEL_DM->/VCXI/IF_CKX_OBJECT_H~GET_CHILDREN( ).
    check LT_CHILDREN is not initial.

***-------------------------------------------------------------------*
*** ADD ALL Unlinked Documents

    loop at LT_CHILDREN into data(LR_OBJECT).
      try.
          free LR_SVCEL_DOC.
          LR_SVCEL_DOC = cast #( LR_OBJECT ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
***   Check this doc is not in DMSLI
      clear LF_LINKED.
      loop at ME->R_DCO_INPUT->T_DMSLI into LS_DMSLI.
        concatenate LS_DMSLI-DOKNR LS_DMSLI-DOKTL LS_DMSLI-DOKVR into LF_LEOKY.
        LS_LEOKY = LR_SVCEL_DOC->GET_LEOKY( ).
        if LF_LEOKY eq LS_LEOKY-LEOKY.
          LF_LINKED = ABAP_TRUE.
          exit.
        endif.
      endloop.
      check LF_LINKED eq ABAP_FALSE.
***-------------------------------------------------------------------*
*** Get Customizing Element of DOC
***------------------------------------------------------------------------------------------------
      ER_CUELMNT = ZCL_VCXI_XCI_IDAT_SVC=>FIND_CUELMNT( IR_CUELMNT_PARENT = LR_CUELMNT_DM
                                                        IF_ID             = LR_SVCEL_DOC->/VCXI/IF_CKX_OBJECT~GET_ID( ) ).
***   Get SVC ID
      clear LS_SVCEL_DOC.
      move LR_SVCEL_DOC->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LS_SVCEL_DOC-ISELF.

***   Add Element and receive own Counter
      LS_SVCEL_DOC-IPARE = LR_CUELMNT_DM->/VCXI/IF_CKX_OBJECT~GET_ID( ).
      LS_SVCEL_DOC-CPARE = '0001'. "Only 1 DOC MGR
      LS_SVCEL_DOC-CSELF = IR_IDAT_SVC->ADD_SVCEL( IF_IPARE   = LS_SVCEL_DOC-IPARE
                                                    IF_CPARE   = LS_SVCEL_DOC-CPARE
                                                    IF_ISELF   = LS_SVCEL_DOC-ISELF ).

***   Copy Position
      move LR_SVCEL_DOC->GET_POSID( )  to LS_SVCEL_DOC-POSID.

      if ER_CUELMNT        is bound and
         ER_CUELMNT->R_REGELMNT is bound.

***     Copy Leading Object Key
        move-corresponding LR_SVCEL_DOC->GET_LEOKY( )  to LS_SVCEL_DOC-S_LEOKY.

***     Copy supervised Parameter
        clear LT_PARAM.
        move LR_SVCEL_DOC->GET_PARAM_ALL( ) to LT_PARAM.

        loop at ER_CUELMNT->R_REGELMNT->/VCXI/IF_VKSC_REGELMNT_PARAM~T_REGELMNT_PARAM
             into data(LS_REGELMNT_PARAM) where PARSP eq ABAP_TRUE.

***     Get Parameter Value
          move LS_REGELMNT_PARAM-R_PARAM->/VCXI/IF_CKX_OBJECT~GET_ID( ) to LF_PARID.
          clear LS_REGELMNT_PARAM.
          check LINE_EXISTS( LT_PARAM[ PARID = LF_PARID ] ).

***     Add Parameter
          append corresponding #( LT_PARAM[ PARID = LF_PARID ] ) to LS_SVCEL_DOC-T_SVCPA.
        endloop.
      endif.

***   Add Events
      ME->ADD_SVCEV( changing CS_SVCEL = LS_SVCEL_DOC ).

***   Set Information to Integration Data Service
      IR_IDAT_SVC->UPDATE_SVCEL( IS_SVCEL = LS_SVCEL_DOC ).

    endloop.

  endmethod.
  method FILL_IDAT.

*** Call Super
    SUPER->FILL_IDAT( IR_IDAT_SVC   = IR_IDAT_SVC
                      IR_SVC        = IR_SVC
                      IS_ACTDAT_CNF = IS_ACTDAT_CNF ).


*** Add Multi-Quantities
    ME->ADD_MQ_MGR( IR_SVC       = IR_SVC
                    IR_IDAT_SVC  = IR_IDAT_SVC ).

******Add other Documents (unassigned to components operation)
***    ME->ADD_OTHER_DOC( IR_SVC       = IR_SVC
***                       IR_IDAT_SVC  = IR_IDAT_SVC ).

  endmethod.
