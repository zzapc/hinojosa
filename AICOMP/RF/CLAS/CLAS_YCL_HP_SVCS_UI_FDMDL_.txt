
class YCL_HP_SVCS_UI_FDMDL definition
  public
  inheriting from ZCL_VCXI_P1SS_UI_FDMDL
  create public .

public section.

  data R_BL_FDMDL_HP type ref to YCL_HP_SVCS_BL_FDMDL .
  data S_FDMDL_VIS_HP type YHP_SVCS_S_FDMDL_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IR_BL_FDMDL type ref to ZCL_VCXI_PXSS_BL_FDMDL
      !IF_APPL_EVENTS type ABAP_BOOL
      !IR_GATE_OUT type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods CALL_SHLP_MRP
    returning
      value(RF_MRP) type YHP_SVCS_MRP
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_UPDATE_FDMDL_VIS
    redefinition .
protected section.

  methods INIT_VIS
    redefinition .
private section.
endclass. "YCL_HP_SVCS_UI_FDMDL definition
class YCL_HP_SVCS_UI_FDMDL implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'YHP_SVCS_UI_FDMDL_BIND'
      exporting
        IR_UI_FDMDL = ME
      importing
        ES_DYNP     = ME->S_DYNP.

  endmethod.
  method CALL_SHLP_MRP.

    data(LF_DISPLAY) = switch #( ME->R_GATE->IS_LOCKED( ) when ABAP_TRUE then ABAP_FALSE
                                                                         else ABAP_TRUE ).

    try.
        data(LS_GATE_OUT) = ME->R_BL_FDMDL->T_GATE_OUT[ 1 ].
        if LS_GATE_OUT->R_CLSPR is bound.
          data(LF_WERKS) = cast ZCL_VCXI_PXSS_PR_XFG( LS_GATE_OUT->R_CLSPR )->GET_WERKS( ).
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

    RF_MRP = YCL_HP_SVCS_SHLP_MRP=>CALL_SHLP( IF_DISPLAY = LF_DISPLAY
                                              IF_WERKS   = LF_WERKS ).

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR(  IR_UIFW        =  IR_UIFW
                         IR_UIGATE      = IR_UIGATE
                         IR_GATE        =  IR_GATE
                         IR_BL_FDMDL    = IR_BL_FDMDL
                         IF_APPL_EVENTS = IF_APPL_EVENTS
                         IR_GATE_OUT    = R_GATE_OUT ).

    try.
        move ME->R_BL_FDMDL ?to ME->R_BL_FDMDL_HP.
      catch CX_SY_MOVE_CAST_ERROR.

***     UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_UPDATE_FDMDL_VIS.

    data: LF_EXIST type ABAP_BOOL.
    data  LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.
    data: LS_FDMDL_VIS      type YHP_SVCS_S_FDMDL_VIS,
          LS_FDI_CSTEP_CLOS type ZVCXI_P1SS_S_FDI_CSTEP_CLOS.
    data: LT_FASTD_XCOMP type ZVCXI_PXSS_TT_FASTD_XCOMP,
          LT_XCONG       type ZVCXI_PXSS_TT_XCONG.
    data: LR_CUST_PRSTY type ref to ZCL_VCXI_P0SS_CUST_PRSTY.
    field-symbols: <S_DATA>             type ANY,
                   <S_FASTD_XCOMP>      type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_FASTD_XCOMP_DATA> type ZVCXI_PXSS_S_FASTD_XCOMP_DATA,
                   <T_FDMEX>            type ZVCXI_PXSS_TT_FDMEX.

*super->DO_UPDATE_FDMDL_VIS( EXPORTING IS_FDMDL_VIS = is_fdmdl_vis ). "JBL 29.01.2024
    check ME->R_PR_FASTD is bound.

*** "Cast" Vis Structure
    move-corresponding IS_FDMDL_VIS to LS_FDMDL_VIS.

***--------------------------------------------------------------------------------------
*** Validate Joint Types for Position
    try.
        LR_CUST_PRSTY = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_INSTANCE( IF_TPRST = 'FEFCO'
                                                                IF_PRSTY = LS_FDMDL_VIS-FEFCO ).
      catch /VCXI/CX_CKX.
        clear: LR_CUST_PRSTY.
    endtry.
    if LR_CUST_PRSTY is bound.
      LR_CUST_PRSTY->GET_JOITY_JOIPO( exporting IF_JOIPO = LS_FDMDL_VIS-JOIPO
                                                IF_JOITY = LS_FDMDL_VIS-JOITY
                                      importing EF_EXIST = LF_EXIST ).
      if LF_EXIST ne ABAP_TRUE.
        clear LS_FDMDL_VIS-JOITY.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( exporting IR_BL_FDMDL = ME->R_BL_FDMDL
                                                           importing ET_XCONG    = LT_XCONG ).

*** Find Component of Gate and its linked Components
    LT_GATE_EXCLUDE =  ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                         IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Update Fast Data Integration Information based on VIS Structure
    loop at LT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP>-R_GATE ] ).
      loop at <S_FASTD_XCOMP>-T_DATA assigning <S_FASTD_XCOMP_DATA> where R_DATA is bound.
        assign <S_FASTD_XCOMP_DATA>-R_DATA->* to <S_DATA>.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP_DATA>-R_GATE ] ).
        assign <S_FASTD_XCOMP_DATA>-R_DATA->* to <S_DATA>.
*        <S_DATA> = corresponding #( base ( <S_DATA> ) IS_FDMDL_VIS ).
        move-corresponding IS_FDMDL_VIS to <S_DATA>.
*        YCL_HP_X_SRV_DATA=>MOVE_CORRESPONDING_KEEP_VALUES( exporting IS_STRUC_ADD = IS_FDMDL_VIS
*                                                           changing  CS_STRUC_ALL = <S_DATA> ).

***     Plant of Corrugation
        if LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CORR' ] ).
          <S_FASTD_XCOMP>-WERKS = LS_FDMDL_VIS-WERKS_CORR.
        endif.

        if <S_FASTD_XCOMP_DATA>-ISELF = 'CFG'.
***       If Joint Type is changed, ignore Shipping Scheme during same update (needed for DVC Defaulting)
          if LS_FDMDL_VIS-JOITY ne ME->S_FDMDL_VIS_HP-JOITY.
***         Add entry for ignoring the value
            append 'SHSCH' to <S_FASTD_XCOMP_DATA>-T_FDMEX.
          endif.

***       If Input Source is changed, ignore MRP field due to DVC defaulting based on Input Source
          if LS_FDMDL_VIS-SRCIN ne ME->S_FDMDL_VIS_HP-SRCIN.
***         Add entry for ignoring the value
            append 'MRP' to <S_FASTD_XCOMP_DATA>-T_FDMEX.
          endif.
        endif.

      endloop.
    endloop.

*** Add/Remove Closing Step
    cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->ADJ_CSTEP_CLOS( exporting IR_GATE_OUT       = R_GATE_OUT
                                                                             IS_FDI_CSTEP_CLOS = corresponding #( base ( IS_FDMDL_VIS ) LS_FDMDL_VIS )
                                                                   changing  CT_FASTD_XCOMP    = LT_FASTD_XCOMP ).

*** Adjust by Input Source
    cast YCL_HP_SVCS_BL_FDMDL( ME->R_BL_FDMDL )->ADJ_SRCIN( exporting IR_GATE_OUT    = R_GATE_OUT
                                                                      IF_SRCIN       = LS_FDMDL_VIS-SRCIN
                                                            changing  CT_FASTD_XCOMP = LT_FASTD_XCOMP
                                                                      CT_XCONG       = LT_XCONG ).

***------------------------------------------------------------------------------------------------
*** Set Configuration Structure
    ME->R_BL_FDMDL_HP->R_BL_FASTD->SET_STRC( IR_BL_FDMDL    = ME->R_BL_FDMDL
                                             IT_FASTD_XCOMP = LT_FASTD_XCOMP
                                             IT_XCONG       = LT_XCONG ).

  endmethod.
  method INIT_VIS.

    data: LS_FASTD_XCOMP      type ZVCXI_PXSS_S_FASTD_XCOMP,
          LS_FASTD_XCOMP_DATA type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.
    data: LT_FASTD_XCOMP  type ZVCXI_PXSS_TT_FASTD_XCOMP,
          LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.
    data: LR_GATE_XCOMP_OUT type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_DATA> type ANY.


    free: ME->S_FDMDL_VIS_HP.
    check ME->R_PR_FASTD is bound.

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    LT_FASTD_XCOMP = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

*** Find Component of Gate and its linked Components
    LT_GATE_EXCLUDE = ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                        IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Get Source for Input
    ME->S_FDMDL_VIS_HP-SRCIN = cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( IR_GATE_OUT     = ME->R_GATE_OUT
                                                                                         IT_FASTD_XCOMP  = LT_FASTD_XCOMP
                                                                                         IT_GATE_EXCLUDE = LT_GATE_EXCLUDE ).

*** Fill VIS Structure based on Fast Data Integration Information
    loop at LT_FASTD_XCOMP into LS_FASTD_XCOMP.
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP-R_GATE ] ).

      loop at LS_FASTD_XCOMP-T_DATA into LS_FASTD_XCOMP_DATA where R_DATA is bound.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP_DATA-R_GATE ] ).
        assign LS_FASTD_XCOMP_DATA-R_DATA->* to <S_DATA>.


        YCL_HP_X_SRV_DATA=>MOVE_CORRESPONDING_EXCEPT( exporting IS_SOURCE  = <S_DATA>
                                                                IT_EXCLUDE = LS_FASTD_XCOMP_DATA-T_FDMEX
                                                      changing  CS_TARGET  = ME->S_FDMDL_VIS_HP ).

      endloop.

***   Plant of Corrugation
      if LINE_EXISTS( LS_FASTD_XCOMP-T_DATA[ ISELF = 'CORR' ] ).
        ME->S_FDMDL_VIS_HP-WERKS_CORR = LS_FASTD_XCOMP-WERKS.
      endif.
    endloop.

***------------------------------------------------------------------------------------------------
*** FEFCO Description
    if ME->S_FDMDL_VIS_HP-FEFCO is not initial.
      ME->S_FDMDL_VIS_HP-FEFCO_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_PRSTY_DESCR( IF_TPRST = ZCL_VCXI_P1SS_PR_CFG=>C_TPRST_FEFCO
                                                                                  IF_PRSTY = ME->S_FDMDL_VIS_HP-FEFCO ).
    endif.

    move ME->S_FDMDL_VIS_HP-S_FDMDL_VIS to ME->S_FDMDL_VIS.

  endmethod.
