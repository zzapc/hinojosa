
class YCL_HP_SVCS_UI_FDMDL_CRPART definition
  public
  inheriting from ZCL_VCXI_P1SS_UI_FDMDL
  final
  create public .

public section.

  data S_HP_FDMDL_VIS type YHP_SVCS_S_FDMDL_CRPART_VIS .

  methods CALL_SHLP_MRP
    returning
      value(RF_MRP) type YHP_SVCS_MRP
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
protected section.

  methods INIT_VIS
    redefinition .
private section.
endclass. "YCL_HP_SVCS_UI_FDMDL_CRPART definition
class YCL_HP_SVCS_UI_FDMDL_CRPART implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

***--------------------------------------------------------------------------------------
*** Bind UI to Dynpro
    call function 'YHP_SVCS_UI_FDMDL_CRPART_BIND'
      exporting
        IR_UI_FDMDL = ME
      importing
        ES_DYNP     = ME->S_DYNP.

  endmethod.
  method CALL_SHLP_MRP.

    data(LF_DISPLAY) = switch #( ME->R_GATE->IS_LOCKED( ) when ABAP_TRUE then ABAP_FALSE
                                                                         else ABAP_TRUE ).

    try.
        if ME->R_BL_FDMDL->T_GATE_OUT is not initial.
          data(LS_GATE_OUT) = ME->R_BL_FDMDL->T_GATE_OUT[ 1 ].
          if LS_GATE_OUT->R_CLSPR is bound.
            data(LF_WERKS) = cast ZCL_VCXI_PXSS_PR_XPART( LS_GATE_OUT->R_CLSPR )->GET_WERKS( ).
          endif.
        endif.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.

    RF_MRP = YCL_HP_SVCS_SHLP_MRP=>CALL_SHLP( IF_DISPLAY = LF_DISPLAY
                                              IF_WERKS   = LF_WERKS ).

  endmethod.
  method INIT_VIS.

    field-symbols <S_DATA> type ANY.


    free: ME->S_HP_FDMDL_VIS.
    check ME->R_PR_FASTD is bound.

***------------------------------------------------------------------------------------------------
*** Get Configuration Structure
    data(LT_FASTD_XCOMP) = ME->R_BL_FDMDL->R_BL_FASTD->GET_STRC( IR_BL_FDMDL = ME->R_BL_FDMDL ).

*** Find Component of Gate and its linked Components
    data(LT_GATE_EXCLUDE) = ME->R_BL_FDMDL->GET_GATE_EXCLUDE( IR_GATE_OUT    = ME->R_GATE_OUT
                                                              IT_FASTD_XCOMP = LT_FASTD_XCOMP ).

*** Get Source for Input
    ME->S_HP_FDMDL_VIS-SRCIN = cast ZCL_VCXI_P1SS_BL_FDMDL( ME->R_BL_FDMDL )->GET_SRCIN( IR_GATE_OUT     = ME->R_GATE_OUT
                                                                                         IT_FASTD_XCOMP  = LT_FASTD_XCOMP
                                                                                         IT_GATE_EXCLUDE = LT_GATE_EXCLUDE ).

*** Fill VIS Structure based on Fast Data Integration Information
    loop at LT_FASTD_XCOMP into data(LS_FASTD_XCOMP).
      check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP-R_GATE ] ).

      loop at LS_FASTD_XCOMP-T_DATA into data(LS_FASTD_XCOMP_DATA) where R_DATA is bound.
        check not LINE_EXISTS( LT_GATE_EXCLUDE[ TABLE_LINE = LS_FASTD_XCOMP_DATA-R_GATE ] ).
        assign LS_FASTD_XCOMP_DATA-R_DATA->* to <S_DATA>.

***     Move corresponding fields, but except fields defined by Component Data
        YCL_HP_X_SRV_DATA=>MOVE_CORRESPONDING_EXCEPT( exporting IS_SOURCE  = <S_DATA>
                                                                IT_EXCLUDE = LS_FASTD_XCOMP_DATA-T_FDMEX
                                                      changing  CS_TARGET  = ME->S_HP_FDMDL_VIS ).
      endloop.

***   Plant of Corrugation
      if LINE_EXISTS( LS_FASTD_XCOMP-T_DATA[ ISELF = 'CORR' ] ).
        ME->S_HP_FDMDL_VIS-WERKS_CORR = LS_FASTD_XCOMP-WERKS.
      endif.
    endloop.

***------------------------------------------------------------------------------------------------
*** FEFCO Description
    if ME->S_FDMDL_VIS-FEFCO is not initial.
      ME->S_FDMDL_VIS-FEFCO_DESCR = ZCL_VCXI_P0SS_CUST_PRSTY=>GET_PRSTY_DESCR( IF_TPRST = ZCL_VCXI_P1SS_PR_CFG=>C_TPRST_FEFCO
                                                                               IF_PRSTY = ME->S_FDMDL_VIS-FEFCO ).
    endif.

    move ME->S_HP_FDMDL_VIS-S_FDMDL_VIS to ME->S_FDMDL_VIS.

  endmethod.
