
class YCL_HP_SVCP_EA_MC definition
  public
  inheriting from ZCL_VCXI_XCSP_EA_MC
  final
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_MC_HP type ref to YCL_HP_SVCP_PR_MC_PACKMAT .

  methods GET_BOM_CONSU
    redefinition .
private section.
endclass. "YCL_HP_SVCP_EA_MC definition
class YCL_HP_SVCP_EA_MC implementation.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_MC_HP.
      catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

  endmethod.
  method GET_BOM_CONSU.

*    data:  LF_CALCV   type        F.
*    data:  LS_CONSU   type        ZVCXI_XCSP_S_CONSU.
*
**** Check if call is made from Unitizing Add-on, then use consumption without rounding
*    try.
*        data(LR_GATE_PARENT) = ME->R_GATE->GET_PARENT( ).
*      catch /VCXI/CX_CKX.
*        clear LR_GATE_PARENT.
*    endtry.
*
*    if LR_GATE_PARENT is bound and
*       LR_GATE_PARENT->F_ID eq 'P0_AT_UNIT'.
*
*      move ME->R_PR_MC_HP->GET_CONSU_NORND( )  to LS_CONSU.
*
*      if IS_EXQTY-EXQTY is not initial.
*        ZCL_VCXI_XCS_SERVICE_CALC=>CALC_WITH_ANY( exporting IF_CALCV_1     = IF_BMENG
*                                                            IF_CALCV_UOM_1 = IF_BMEIN
*                                                            IF_CALCV_2     = IS_EXQTY-EXQTY
*                                                            IF_CALCV_UOM_2 = IS_EXQTY-EXQTY_UOM
*                                                            IF_OPERA       = ZCL_VCXI_XCS_SERVICE_CALC=>C_OPERA_DIVIDE
*                                                  importing EF_CALCV       = LF_CALCV ).
*
*        RS_CONSU-CONSU = CEIL( LS_CONSU-CONSU * LF_CALCV ).
*      endif.
*      RS_CONSU-CONSU_UOM = LS_CONSU-CONSU_UOM.
*
*    else.
*
*** Call super for all other cases
      RS_CONSU = SUPER->GET_BOM_CONSU( exporting IS_EXQTY  = IS_EXQTY
                                                 IF_BMENG  = IF_BMENG
                                                 IF_BMEIN  = IF_BMEIN ).
*
*    endif.

  endmethod.
endclass. "YCL_HP_SVCP_EA_MC implementation
