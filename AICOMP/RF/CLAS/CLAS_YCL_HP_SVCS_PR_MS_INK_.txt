
class YCL_HP_SVCS_PR_MS_INK definition
  public
  inheriting from ZCL_VCXI_PXSS_PR_MS_INK
  create public .

public section.

  constants C_PARID_RINKT type /VCXI/VKS_PARID value 'YHP_SVC_RINKT' ##NO_TEXT.
  constants C_PARID_PAINK type /VCXI/VKS_PARID value 'YHP_SVC_PAINK' ##NO_TEXT.
  constants C_IPRVT_PX_PRINT type /VCXI/VKSC_IPRVT value 'ZVCXI_PXSS_PRINT' ##NO_TEXT.

  methods GET_INKST
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_INKST) type YHP_SVCS_INKST
    raising
      /VCXI/CX_CKX .
  methods SET_INKST
    importing
      !IF_INKST type YHP_SVCS_INKST
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_RINKT
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_RINKT) type YHP_SVCS_RINKT
    raising
      /VCXI/CX_CKX .
  methods SET_RINKT
    importing
      !IF_RINKT type YHP_SVCS_RINKT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_PAINK
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_PAINK) type YHP_SVCS_PAINK
    raising
      /VCXI/CX_CKX .
  methods SET_PAINK
    importing
      !IF_PAINK type YHP_SVCS_PAINK optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .

  methods GET_PDINK
    redefinition .
  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods SET_PDINK
    redefinition .
protected section.

  constants C_PARID_INKST type /VCXI/VKS_PARID value 'YHP_SVC_INKST' ##NO_TEXT.
  constants C_IEVNT_O_INKST_CHANGED type /VCXI/VKS_PARID value 'INKST_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_RINKT_CHANGED type /VCXI/VKS_PARID value 'RINKT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PAINK_CHANGED type /VCXI/VKS_PARID value 'PAINK_CHANGED' ##NO_TEXT.

  methods CHECK_MATNR_DUMMY_INK
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
private section.
endclass. "YCL_HP_SVCS_PR_MS_INK definition
class YCL_HP_SVCS_PR_MS_INK implementation.
  method CHECK_MATNR_DUMMY_INK.

    data: LF_DESCR    type /VCXI/CKX_DESCR,
          LF_MATNR    type MATNR,
          LF_INKTYPE  type ZVCXI_PXS_TINK,
          LF_WERKS    type WERKS_D,
          LF_MATNRDEF type MATNR,
          LF_TPRIN    type ZVCXI_PXS_TPRIN.
    data: LT_GATE           type /VCXI/VKSR_TT_GATE,
          LR_GATE           type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_CSTEP_PRINT type ref to YCL_HP_SVCS_PR_CSTEP_PRINT.

    if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( exporting IR_GATE  = ME->R_GATE
                                                            IF_IFUNC = 'CHECK_DUMMY_INK_ICONT_P' ) eq ABAP_TRUE.


      LF_MATNR = ME->GET_MATNR( ).
      LF_INKTYPE = ME->GET_TINK( ).
      LF_WERKS = ME->GET_WERKS( ).

*** Get  provider
      LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = C_IPRVT_PX_PRINT
                                       IF_INUSE = ABAP_TRUE ).

      read table LT_GATE into LR_GATE index 1.
      check SY-SUBRC is initial.

      move LR_GATE->R_CLSPR ?to LR_PR_CSTEP_PRINT.

      LF_TPRIN = LR_PR_CSTEP_PRINT->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( ).

***   Check TINTADUMMY in Printing Default
      select single MATNR
        from ZVCXI_PXS_TD110
          into LF_MATNRDEF where WERKS = LF_WERKS and
                                 TPRIN = LF_TPRIN and
                                 TINK  = LF_INKTYPE.

      if LF_MATNR = LF_MATNRDEF and LF_TPRIN ne 'DIGITAL'.

        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
        if IR_MESSAGE is bound.
***      DUMMY INK NEED REPLACE.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'YHP_SVC'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '026' ).

          RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.

        endif.
      else.

        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.

      endif.

    else.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
    endif.

  endmethod.
  METHOD get_inkst.
    DATA:  ls_param   TYPE /vcxi/vksr_s_param.

    ls_param = me->r_gate->get_param( if_parid = c_parid_inkst ).
    MOVE ls_param-atwrt TO rf_inkst.
    MOVE ls_param-setby TO ef_setby.
  ENDMETHOD.
  METHOD get_paink.
    DATA:  ls_param   TYPE /vcxi/vksr_s_param.

    ls_param = me->r_gate->get_param( if_parid = c_parid_paink  ).
    MOVE ls_param-atwrt TO rf_paink.
    MOVE ls_param-setby TO ef_setby.
  ENDMETHOD.
  method GET_PDINK.
*CALL METHOD SUPER->GET_PDINK
*  RECEIVING
*    RS_PDINK =
*    .

    RS_PDINK = value #( MATNR   = ME->GET_MATNR( )
                        TINK    = ME->GET_TINK( )
                        COLCO   = ME->GET_COLCO( )
                        INKTN   = ME->GET_INKTN( )
                        S_COVRG = ME->GET_COVRG( )
                        FSLVE   = ME->GET_FSLVE( )
                        APCTN   = ME->GET_APCTN( )
                        MSLTN   = ME->GET_MSLTN( )
                        ANITN   = ME->GET_ANITN( )
                        S_APWGT = ME->GET_APWGT( )
                        INKST   = ME->GET_INKST( )
                        RINKT   = ME->GET_RINKT( )
                        PAINK   = ME->GET_PAINK( ) ).

  endmethod.
  METHOD get_rinkt.

    DATA:  ls_param   TYPE /vcxi/vksr_s_param.

    ls_param = me->r_gate->get_param( if_parid = c_parid_rinkt  ).
    MOVE ls_param-atwrt TO rf_rinkt.
    MOVE ls_param-setby TO ef_setby.

  ENDMETHOD.
  method GET_STATUS.

*** Super Status
    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Material Dummy Ink is modify

    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_MATNR_DUMMY_INK( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------

*** Check Dummy INK
    ME->CHECK_MATNR_DUMMY_INK( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  METHOD set_inkst.
    DATA:  lf_changed TYPE abap_bool.
    DATA:  ls_param   TYPE /vcxi/vksr_s_param.

    ls_param = me->r_gate->get_param( if_parid = c_parid_inkst ).

    MOVE if_inkst TO ls_param-atwrt.
    MOVE if_setby TO ls_param-setby.

    lf_changed = me->r_gate->set_param( is_param = ls_param ).

    IF lf_changed EQ abap_true.
***   Send Event
      me->r_gate->set_event( if_ievnt = c_ievnt_o_inkst_changed ).
    ENDIF.
  ENDMETHOD.
  METHOD set_paink.

    DATA:  lf_changed TYPE abap_bool.
    DATA:  ls_param   TYPE /vcxi/vksr_s_param.

    ls_param = me->r_gate->get_param( if_parid = c_parid_paink ).

    MOVE if_paink TO ls_param-atwrt.
    MOVE if_setby TO ls_param-setby.

    lf_changed = me->r_gate->set_param( is_param = ls_param ).

    IF lf_changed EQ abap_true.
***   Send Event
      me->r_gate->set_event( if_ievnt = c_ievnt_o_paink_changed ).
    ENDIF.
  ENDMETHOD.
  method SET_PDINK.
*CALL METHOD SUPER->SET_PDINK
*  EXPORTING
*    IS_PDINK =
*    .
*** Are Adapter/Print Cylinder allowed
    ME->GET_PRVDR_PRINT( )->GET_TPRIN( importing EF_FAPCA = data(LF_FAPCA) ).

    ME->SET_MATNR( IF_MATNR = IS_PDINK-MATNR
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_TINK(  IF_TINK  = IS_PDINK-TINK
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_COLCO( IF_COLCO = IS_PDINK-COLCO
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_INKTN( IF_INKTN = IS_PDINK-INKTN
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_COVRG( IS_COVRG = IS_PDINK-S_COVRG
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_FSLVE( IF_FSLVE = IS_PDINK-FSLVE
                   IF_SETBY = switch #( LF_FAPCA when ABAP_TRUE then /VCXI/CL_VKSR_GATE=>C_SETBY_USER else SPACE ) ).

    ME->SET_APCTN( IF_APCTN = IS_PDINK-APCTN
                   IF_SETBY = switch #( LF_FAPCA when ABAP_TRUE then /VCXI/CL_VKSR_GATE=>C_SETBY_USER else SPACE ) ).

    ME->SET_MSLTN( IF_MSLTN = IS_PDINK-MSLTN
                   IF_SETBY = switch #( LF_FAPCA when ABAP_TRUE then /VCXI/CL_VKSR_GATE=>C_SETBY_USER else SPACE ) ).

    ME->SET_ANITN( IF_ANITN = IS_PDINK-ANITN
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_APWGT( IS_APWGT = IS_PDINK-S_APWGT
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_INKST( IF_INKST = IS_PDINK-INKST
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_RINKT( IF_RINKT = IS_PDINK-RINKT
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

    ME->SET_PAINK( IF_PAINK = IS_PDINK-PAINK
                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).

  endmethod.
  METHOD set_rinkt.

    DATA:  lf_changed TYPE abap_bool.
    DATA:  ls_param   TYPE /vcxi/vksr_s_param.

    ls_param = me->r_gate->get_param( if_parid = c_parid_rinkt ).

    MOVE if_rinkt TO ls_param-atwrt.
    MOVE if_setby TO ls_param-setby.

    lf_changed = me->r_gate->set_param( is_param = ls_param ).

    IF lf_changed EQ abap_true.
***   Send Event
      me->r_gate->set_event( if_ievnt = c_ievnt_o_rinkt_changed ).
    ENDIF.

  ENDMETHOD.
