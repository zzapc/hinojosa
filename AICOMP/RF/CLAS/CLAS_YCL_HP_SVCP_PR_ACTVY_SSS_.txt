
class YCL_HP_SVCP_PR_ACTVY_SSS definition
  public
  inheriting from /VCXI/CL_VKSR_CLSPR
  create public .

public section.

  interfaces ZIF_VCXI_P0SP_ADJ_PCDIM .

  constants C_PARID_NOOUT type /VCXI/VKS_PARID value 'ZVCXI_XC_NOOUT' ##NO_TEXT.
  constants C_PARID_FASCO type /VCXI/VKS_PARID value 'ZVCXI_PX_FASCO' ##NO_TEXT.
  constants C_PARID_FASLO type /VCXI/VKS_PARID value 'ZVCXI_PX_FASLO' ##NO_TEXT.
  constants C_PARID_FASLI type /VCXI/VKS_PARID value 'ZVCXI_PX_FASLI' ##NO_TEXT.

  methods GET_FASCO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FASCO) type ZVCXI_PXS_FASCO
    raising
      /VCXI/CX_CKX .
  methods GET_FASLI
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FASLI) type ZVCXI_PXS_FASLI
    raising
      /VCXI/CX_CKX .
  methods GET_FASLO
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
    returning
      value(RF_FASLO) type ZVCXI_PXS_FASLO
    raising
      /VCXI/CX_CKX .
  methods GET_NOOUT
    returning
      value(RF_NOOUT) type ZVCXI_XCS_NOOUT
    raising
      /VCXI/CX_CKX .

  methods HANDLE_EVENT
    redefinition .
protected section.

  constants C_IEVNT_I_RECALC_NOOUT type /VCXI/VKSC_IEVNT value 'RECALC_NOOUT' ##NO_TEXT.
  constants C_IEVNT_I_RECALC_PCDIM type /VCXI/VKSC_IEVNT value 'RECALC_PCDIM' ##NO_TEXT.
  constants C_IEVNT_O_NOOUT_CHANGED type /VCXI/VKSC_IEVNT value 'NOOUT_CHANGED' ##NO_TEXT.
  constants C_IEVNT_O_PCDIM_CHANGED type /VCXI/VKSC_IEVNT value 'PCDIM_CHANGED' ##NO_TEXT.

  methods HANDLE_RECALC_NOOUT
    raising
      /VCXI/CX_CKX .
  methods SET_NOOUT
    importing
      !IF_NOOUT type ZVCXI_XCS_NOOUT
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
private section.
endclass. "YCL_HP_SVCP_PR_ACTVY_SSS definition
class YCL_HP_SVCP_PR_ACTVY_SSS implementation.
method GET_FASCO.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASCO ).
  move LS_PARAM-ATWRT to RF_FASCO.
  move LS_PARAM-SETBY to EF_SETBY.

endmethod.
method GET_FASLI.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASLI ).
  move LS_PARAM-ATWRT to RF_FASLI.
  move LS_PARAM-SETBY to EF_SETBY.

endmethod.
method GET_FASLO.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_FASLO ).
  move LS_PARAM-ATWRT to RF_FASLO.
  move LS_PARAM-SETBY to EF_SETBY.

endmethod.
method GET_NOOUT.

  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).
  move LS_PARAM-ATFLV to RF_NOOUT.

endmethod.
method HANDLE_EVENT.

  SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                       IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

  case IF_IEVNT.

*** PC Dimensions
    when C_IEVNT_I_RECALC_PCDIM.
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PCDIM_CHANGED ).

*** Recalculate Number of Outs
    when C_IEVNT_I_RECALC_NOOUT.
      ME->HANDLE_RECALC_NOOUT( ).

  endcase.

endmethod.
method HANDLE_RECALC_NOOUT.

  data:  LF_NOOUT_TOTAL   type        ZVCXI_XCS_NOOUT,
         LF_NOOUT_PCOUT   type        ZVCXI_XCS_NOOUT.
  data:  LT_GATE          type        /VCXI/VKSR_TT_GATE.
  data:  LR_GATE          type ref to /VCXI/CL_VKSR_GATE,
         LR_PR_PCOUT      type ref to ZCL_VCXI_P0SP_PR_PCOUT.


***------------------------------------------------------------------
*** Get all PC Dimensions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_P0SP_PR_PCOUT=>C_IPRVT_P0_PCOUT
                                   IF_INUSE = ABAP_TRUE ).
  check LT_GATE is not initial.

***------------------------------------------------------------------
*** Collect Number of Outs
  loop at LT_GATE into LR_GATE.
    move LR_GATE->R_CLSPR ?to LR_PR_PCOUT.
    check LR_PR_PCOUT is bound.

    move LR_PR_PCOUT->GET_NOOUT( ) to LF_NOOUT_PCOUT.
    add LF_NOOUT_PCOUT to LF_NOOUT_TOTAL.
  endloop.

*** Set new Number of Outs
  ME->SET_NOOUT( IF_NOOUT = LF_NOOUT_TOTAL ).

endmethod.
method SET_NOOUT.

  data:  LF_CHANGED type ABAP_BOOL.
  data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

  LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOOUT ).

  move IF_NOOUT to LS_PARAM-ATFLV.
  move IF_SETBY to LS_PARAM-SETBY.

  LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

  if LF_CHANGED eq ABAP_TRUE.
*** Send Event
    ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_NOOUT_CHANGED ).
  endif.

endmethod.
method ZIF_VCXI_P0SP_ADJ_PCDIM~CALC_PCDIM_OUT.

  data:          LT_GATE       type        /VCXI/VKSR_TT_GATE.
  data:          LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
                 LR_PR_PCOUT   type ref to ZCL_VCXI_P0SP_PR_PCOUT.
  field-symbols: <S_PCDIM>     type        ZVCXI_P0SP_S_PCDIM.


***------------------------------------------------------------------
*** Get all PC Dimensions
  LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_P0SP_PR_PCOUT=>C_IPRVT_P0_PCOUT
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ).
  check LT_GATE is not initial.

***------------------------------------------------------------------
*** Receive defined Dimensions
  free CT_PCDIM.

  loop at LT_GATE into LR_GATE.
    move LR_GATE->R_CLSPR ?to LR_PR_PCOUT.
    check LR_PR_PCOUT is bound.

    append initial line to CT_PCDIM assigning <S_PCDIM>.
    move LR_PR_PCOUT->GET_PCDIM( ) to <S_PCDIM>.
  endloop.

endmethod.
