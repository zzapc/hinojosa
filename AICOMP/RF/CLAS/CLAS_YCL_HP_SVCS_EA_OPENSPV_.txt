
class YCL_HP_SVCS_EA_OPENSPV definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  final
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_XCONG
    returning
      value(RT_XCONG) type ZVCXI_PXSS_TT_XCONG
    raising
      /VCXI/CX_CKX .
  methods GET_SPVE
    exporting
      !ET_SPVRE type /VCXI/VKSR_TT_SPVRE
      !ET_SPVCE type /VCXI/CKX_TT_OBJECT
    raising
      /VCXI/CX_CKX .
  methods GET_SPVRT
    exporting
      !ET_SPVRT type /VCXI/CKX_TT_ID
      !ET_SVCEL type /VCXI/CKX_TT_OBJECT
    raising
      /VCXI/CX_CKX .
protected section.

  class-data R_PR_OPENSPV type ref to YCL_HP_SVCS_PR_OPENSPV .
private section.
endclass. "YCL_HP_SVCS_EA_OPENSPV definition
class YCL_HP_SVCS_EA_OPENSPV implementation.
  method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_OPENSPV.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

  endmethod.
  method GET_SPVE.

*** Get Supervised Runtime Element
    move ME->R_GATE->GET_SPVRE( ) to ET_SPVRE.
    move ME->R_GATE->GET_SPVCE( ) to ET_SPVCE.

  endmethod.
  method GET_SPVRT.

    data: LF_GUID   type        /VCXI/CKX_GUID.
    data: LT_SPVCE type        /VCXI/CKX_TT_OBJECT,
          LT_SPVRE type        /VCXI/VKSR_TT_SPVRE.
    data: LR_SPVRE  type ref to /VCXI/CL_VKSR_SPVRE,
          LR_SVCEL  type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_OBJECT type ref to /VCXI/IF_CKX_OBJECT.

***--------------------------------------------------------------------------------------
*** Get IDs of Supervised Root Elements
    move ME->R_GATE->GET_SPVCE( ) to LT_SPVCE.
    loop at LT_SPVCE into LR_OBJECT.
      append LR_OBJECT->GET_ID( ) to ET_SPVRT.
    endloop.

***--------------------------------------------------------------------------------------
*** Get Supervised Runtime Element
    move ME->R_GATE->GET_SPVRE( ) to LT_SPVRE.
    loop at LT_SPVRE into LR_SPVRE.
      check LR_SPVRE->R_PARENT is not bound.
      move LR_SPVRE->F_GATKY to LF_GUID.
      LR_SVCEL ?= /VCXI/CL_VKSRA_SVC_ELEMENT=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = LF_GUID ).
      append LR_SVCEL to ET_SVCEL.
    endloop.

  endmethod.
  method GET_XCONG.

    data: LS_XCONR type        ZVCXI_PXSS_S_XCONR.
    data: LT_GATE  type        /VCXI/VKSR_TT_GATE,
          LT_XCONR type        ZVCXI_PXSS_TT_XCONR.
    data: LR_GATE   type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_SOV type ref to ZCL_VCXI_PXSS_PR_SOV.
    field-symbols: <S_XCONG> type ZVCXI_PXSS_S_XCONG.

***--------------------------------------------------------------------------------------
*** Get Specification Overview
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_SOV=>C_IPRVT_PX_SOV
                                     IF_INUSE = ABAP_TRUE ).

    read table LT_GATE into LR_GATE index 1.
    if SY-SUBRC = 0.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_SOV.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_SOV.
      endtry.

    endif.

    if LR_PR_SOV is not bound.

***   Provider &1 is not available for &2.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE( IF_MSGTY = 'E'
                                            IF_MSGID = 'ZVCXI_XCS'
                                            IF_MSGNO = '010'
                                            IF_MSGV1 = ZCL_VCXI_PXSS_PR_SOV=>C_IPRVT_PX_SOV
                                            IF_MSGV2 = ME->R_GATE->F_ID ).

    endif.

    check LR_PR_SOV is bound.

***--------------------------------------------------------------------------------------
*** Get current Connections
    move LR_PR_SOV->GET_XCONR( ) to LT_XCONR.

    loop at LT_XCONR into LS_XCONR.

***   Get GUID's from gates LEOKY
      append initial line to RT_XCONG assigning <S_XCONG>.
      move LS_XCONR-R_GATE_IN->GET_LEOKY( )-LEOKY   to <S_XCONG>-GXCON_IN.
      move LS_XCONR-R_GATE_OUT->GET_LEOKY( )-LEOKY  to <S_XCONG>-GXCON_OUT.

    endloop.

  endmethod.
