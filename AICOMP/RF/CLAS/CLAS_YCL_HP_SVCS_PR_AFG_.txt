
class YCL_HP_SVCS_PR_AFG definition
  public
  inheriting from ZCL_VCXI_P3SS_PR_AFG
  final
  create public .

public section.

  constants C_PARID_PACKU type /VCXI/VKS_PARID value 'YHP_SVC_PACKU' ##NO_TEXT.

  methods ZIF_VCXI_PXSS_FDI~GET_DATA
    redefinition .
  methods ZIF_VCXI_PXSS_FDI~SET_DATA
    redefinition .
protected section.

  methods GET_PRODI
    returning
      value(RR_PR_PRODI) type ref to YCL_HP_SVCS_PR_PRODI
    raising
      /VCXI/CX_CKX .
private section.
endclass. "YCL_HP_SVCS_PR_AFG definition
class YCL_HP_SVCS_PR_AFG implementation.
  method GET_PRODI.

*** Get all Children
    data(LT_GATE) = ME->R_GATE->GET_PRVDR( exporting IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD
                                                     IF_INUSE = ABAP_TRUE   ).

    loop at LT_GATE into data(LR_GATE).
      try.
          check LR_GATE->R_CLSPR is bound.
          RR_PR_PRODI = cast #( LR_GATE->R_CLSPR ).
          exit.
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.
    endloop.

  endmethod.
  method ZIF_VCXI_PXSS_FDI~GET_DATA.

    field-symbols <S_FDI_AFG>   type YHP_SVCS_S_FDI_AFG.
    field-symbols <S_FDI_SUPER> type ANY.

***--------------------------------------------------------------------------------------
*** Create Data Reference
    create data RR_DATA type YHP_SVCS_S_FDI_AFG.
    assign RR_DATA->* to <S_FDI_AFG>.

*** Get SUPER Data
    data(LR_DATA_SUPER) = SUPER->ZIF_VCXI_PXSS_FDI~GET_DATA( importing ET_FDMEX = ET_FDMEX ).
    if LR_DATA_SUPER is bound.
      assign LR_DATA_SUPER->* to <S_FDI_SUPER>.
      <S_FDI_AFG> = corresponding #( <S_FDI_SUPER> ).
    endif.

*** Get Packaging Usage via Product Information
    if ME->GET_PRODI( ) is bound.
      <S_FDI_AFG>-PACKU = ME->GET_PRODI( )->GET_PACKU( ).
    endif.

*** Get MRP via Product Information
    if ME->GET_PRODI( ) is bound.
      <S_FDI_AFG>-MRP = ME->GET_PRODI( )->GET_MRP( ).
    endif.

  endmethod.
  method ZIF_VCXI_PXSS_FDI~SET_DATA.

    data LS_FDI_AFG_OLD type YHP_SVCS_S_FDI_AFG.
    data LS_FDI_AFG_NEW type YHP_SVCS_S_FDI_AFG.

    field-symbols <S_DATA> type ANY.

***--------------------------------------------------------------------------------------
*** Dereference Data
    data(LR_DATA_OLD) = cond #( when IR_DATA_OLD is supplied then IR_DATA_OLD
                                                             else ME->ZIF_VCXI_PXSS_FDI~GET_DATA( ) ).
    if LR_DATA_OLD is bound.
      assign LR_DATA_OLD->* to <S_DATA>.
      LS_FDI_AFG_OLD = corresponding #( <S_DATA> ).
    endif.

    if IR_DATA is bound.
      assign IR_DATA->* to <S_DATA>.
      LS_FDI_AFG_NEW = corresponding #( <S_DATA> ).
    endif.

***-------------------------------------------------------------------*
*** Set Packaging Usage via Product Information
    if LS_FDI_AFG_OLD-PACKU ne LS_FDI_AFG_NEW-PACKU.
      if ME->GET_PRODI( ) is bound.
        ME->GET_PRODI( )->SET_PACKU( IF_PACKU = LS_FDI_AFG_NEW-PACKU
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

***-------------------------------------------------------------------*
*** Set MRP via Product Information
    if LS_FDI_AFG_OLD-MRP ne LS_FDI_AFG_NEW-MRP.
      if ME->GET_PRODI( ) is bound.
        ME->GET_PRODI( )->SET_MRP( IF_MRP   = LS_FDI_AFG_NEW-MRP
                                   IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
      endif.
    endif.

    SUPER->ZIF_VCXI_PXSS_FDI~SET_DATA( IR_DATA     = IR_DATA
                                       IR_DATA_OLD = LR_DATA_OLD
                                       IT_FDMEX    = IT_FDMEX ).

  endmethod.
