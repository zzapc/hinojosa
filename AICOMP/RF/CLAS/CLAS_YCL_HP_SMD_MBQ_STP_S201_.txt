
class YCL_HP_SMD_MBQ_STP_S201 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S201
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.

  methods CREATE_MRP_AREA
    importing
      !IF_MATNR type MATNR
      !IS_ACTDAT_MAT type ZVCXI_XCM_MBQ_S_ACTDAT_MAT .
  methods TRANS_MRP_AREA
    importing
      !IS_SOURCE_MDMA type YCMD_BS_MAT_S_MDMA
      !IF_MATNR type MATNR
      !IS_MATDAT_MDMA type YVCXI_XCM_MBQ_S_MATDAT_MDMA
    exporting
      !ES_TARGET_MDMA type YCMD_BS_MAT_S_MDMA
      !ES_TARGET_MDMA_X type YCMD_BS_MAT_S_MDMA_X .

  methods TRANS_BASIC
    redefinition .
  methods TRANS_PLANTDATA
    redefinition .
  methods TRANS_SALESDATA
    redefinition .
  methods TRANS_WAREHOUSENUMBERDATA
    redefinition .
private section.
endclass. "YCL_HP_SMD_MBQ_STP_S201 definition
class YCL_HP_SMD_MBQ_STP_S201 implementation.
  method CREATE_MRP_AREA.

    data: LS_MATDAT_MDMA   type YVCXI_XCM_MBQ_S_MATDAT_MDMA,
          LS_TARGET_MDMA   type YCMD_BS_MAT_S_MDMA,
          LS_TARGET_MDMA_X type YCMD_BS_MAT_S_MDMA_X.
    data: LT_BAPIRET2      type table of BAPIRET2,
          LT_TARGET_MDMA   type YCMD_BS_MAT_T_MDMA,
          LT_TARGET_MDMA_X type YCMD_BS_MAT_T_MDMA_X.
    data: LR_BOB_MAT_SOURCE type ref to ZCL_VCXI_XCI_BOB_MAT,
          LR_BOB_MAT_TARGET type ref to ZCL_VCXI_XCI_BOB_MAT.


"JBL 08/05/2024 Test Select to MDMA
      data lt_mdma1 type table of mdma.
      data ls_mdma1 type mdma.
      data ls_mdlg type mdlg.
      data lt_mdlg type table of mdlg.
   if IS_ACTDAT_MAT-T_MATDAT_MARD is not initial.
    data lv_checkCM type flag.
    loop at IS_ACTDAT_MAT-T_MATDAT_MARD into data(ls_matdat_mard).
      if ls_matdat_mard-STGE_LOC CS 'CM'.
        lv_checkCM = 'X'.
        EXIT.
      endif.
    endloop.
    check sy-subrc = 0 and lv_checkCM is not initial.
    select single * from mdlg into CORRESPONDING FIELDS OF ls_mdlg
      where lgort = ls_matdat_mard-STGE_LOC.
     check sy-subrc = 0.
      select  * from mdma into CORRESPONDING FIELDS OF table lt_mdma1 where werks = ls_matdat_mard-PLANT and matnr = 'T_FG_CM'.
        clear ls_mdma1.
              loop at lt_mdma1 into LS_Mdma1.
        MOVE-CORRESPONDING ls_mdma1 to ls_target_mdma.
        ls_target_mdma-matnr = if_matnr.
        ls_target_mdma_x-BERID = 'X'.
        append LS_TARGET_MDMA   to LT_TARGET_MDMA.
        append LS_TARGET_MDMA_X to LT_TARGET_MDMA_X.
      endloop.
      if lt_target_mdma is not initial.
      create object LR_BOB_MAT_TARGET.
      LR_BOB_MAT_TARGET->INIT_FROM_DB( exporting IF_MATNR    = IF_MATNR
                                                 IF_WERKS    = LS_MATDAT_MARD-PLANT
                                       importing ET_BAPIRET2 = LT_BAPIRET2 ).
        LR_BOB_MAT_TARGET->SAVE_MRP_AREA( exporting IT_MDMA     = LT_TARGET_MDMA
                                                    IT_MDMA_X   = LT_TARGET_MDMA_X
                                        importing   ET_BAPIRET2 = LT_BAPIRET2 ).
        data ls_marc type marc.
       select single * from marc into CORRESPONDING FIELDS OF ls_marc where werks = LS_MATDAT_MARD-PLANT
          and matnr = if_matnr.
          if sy-subrc = 0.
            ls_marc-diber = 'X'.
            modify marc from ls_marc.
          endif.
       endif.
     endif.
  endmethod.
  method EXECUTE.

    data: LF_WERKS type WERKS_D.
    data: LS_MATLI type ZVCXI_XCM_MBQ_S_MATLI,
          LS_T320  type T320.
    data: LT_BAPIRET2   type table of BAPIRET2.
    data: LR_ACTDAT     type ref to DATA,
          LR_ACTDAT_CNF type ref to DATA.
    field-symbols: <S_ACTDAT_MAT> type ZVCXI_XCM_MBQ_S_ACTDAT_MAT,
                   <S_ACTDAT_CNF> type ZVCXI_XCM_MBQ_S_ACTDAT_CNF.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Material Creation
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_MAT ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_MAT ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_MAT>.

***     Get LO-VC configuration values in case for tools material numbering
        try.
            LR_ACTDAT_CNF = LS_MATLI-T_ACTCON[ ACTID = ZCL_VCXI_XCM_MBQ_CUST=>C_ACTID_CNF ]-R_ACTDAT.
            assign LR_ACTDAT_CNF->* to <S_ACTDAT_CNF>.

            clear YCL_HP_SMD_MBQ_BOB_MAT_ENH=>S_ACTDAT_CNF.
            YCL_HP_SMD_MBQ_BOB_MAT_ENH=>S_ACTDAT_CNF = <S_ACTDAT_CNF>.

          catch CX_SY_ITAB_LINE_NOT_FOUND.
            clear YCL_HP_SMD_MBQ_BOB_MAT_ENH=>S_ACTDAT_CNF.
        endtry.


***--------------------------------------------------------------------------------------
***     Create Basic Data of Material
        YCL_HP_SMD_MBQ_BOB_MAT_ENH=>S_ACTDAT_MAT = <S_ACTDAT_MAT>.
        LS_MATLI-MATNR = ME->CREATE_BASIC( IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***     Update MATLI in DCO
        ME->R_DCO_OUTPUT->UPDATE_MATLI( IS_MATLI = LS_MATLI ).
        ME->R_RPSEG->SAVE_AND_COMMIT( ).

***     Create Sales Data of Material
        ME->CREATE_SALESDATA( IF_MATNR      = LS_MATLI-MATNR
                              IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***     Create Plant Data of Material
        ME->CREATE_PLANTDATA( IF_MATNR      = LS_MATLI-MATNR
                              IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***     Create PRT Data of Material
        ME->CREATE_PRTDATA( IF_MATNR      = LS_MATLI-MATNR
                            IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).



***     Create Storage Location Data of Material
        ME->CREATE_STORAGELOCATIONDATA( IF_MATNR      = LS_MATLI-MATNR
                                        IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***     Create Warehouse Number Data of Material
        ME->CREATE_WAREHOUSENUMBERDATA( IF_MATNR      = LS_MATLI-MATNR
                                        IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***     Create Storage Type Data of Material (needs to be created after Whse data)
        ME->CREATE_STORAGETYPEDATA( IF_MATNR      = LS_MATLI-MATNR
                                    IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***     Create MRP Area Data of Material
ME->CREATE_MRP_AREA( IF_MATNR      = LS_MATLI-MATNR
                             IS_ACTDAT_MAT = <S_ACTDAT_MAT> ).

***--------------------------------------------------------------------------------------
***     Update MATLI in DCO
        ME->R_DCO_OUTPUT->UPDATE_MATLI( IS_MATLI = LS_MATLI ).

***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***     Material &1 was successfully created based on template &2.
        ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'ZVCXI_XCM_MBQ'
                                         IF_MSGTY = 'S'
                                         IF_MSGNO = '201'
                                         IF_MSGV1 = LS_MATLI-MATNR
                                         IF_MSGV2 = <S_ACTDAT_MAT>-TMATN ).

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

*** Perform Save and Commit
    ME->R_RPSEG->SAVE_AND_COMMIT( ).

  endmethod.
  method TRANS_BASIC.

    field-symbols: <S_UNITSOFMEASURE> type BAPI_MARM_GA.

    SUPER->TRANS_BASIC( exporting IS_ACTDAT_MAT     = IS_ACTDAT_MAT
                                  IR_BOB_MAT_SOURCE = IR_BOB_MAT_SOURCE
                                  IR_BOB_MAT_TARGET = IR_BOB_MAT_TARGET ).

*** Cross-Plant Material Status
    if IS_ACTDAT_MAT-S_MATDAT_MARA-MSTAE is not initial.
      IR_BOB_MAT_TARGET->S_CLIENTDATA-PUR_STATUS = IS_ACTDAT_MAT-S_MATDAT_MARA-MSTAE.
    endif.

*** Add Spart Field to MARA
    if IS_ACTDAT_MAT-S_MATDAT_MARA-SPART is not initial.
      IR_BOB_MAT_TARGET->S_CLIENTDATA-DIVISION = IS_ACTDAT_MAT-S_MATDAT_MARA-SPART.
    endif.

*** Product Hierarchy
    if IS_ACTDAT_MAT-S_MATDAT_MARA-PRDHA is not initial.
      IR_BOB_MAT_TARGET->S_CLIENTDATA-PROD_HIER = IS_ACTDAT_MAT-S_MATDAT_MARA-PRDHA.
    endif.

*** Old Material Number
    if IS_ACTDAT_MAT-S_MATDAT_MARA-BISMT is not initial.
      IR_BOB_MAT_TARGET->S_CLIENTDATA-OLD_MAT_NO = IS_ACTDAT_MAT-S_MATDAT_MARA-BISMT.
    endif.

*** No Weight for Kits
    if IR_BOB_MAT_SOURCE->S_CLIENTDATA-MATERIAL ne YCL_HP_SMD_MBQ_BL_CRCOMP=>C_TMAT_KIT.

***   Gross Weight
      if IS_ACTDAT_MAT-S_MATDAT_MARA-BRGEW is not initial.
        read table IR_BOB_MAT_TARGET->T_UNITSOFMEASURE assigning <S_UNITSOFMEASURE>
                                                       with key ALT_UNIT = IR_BOB_MAT_TARGET->S_CLIENTDATA-BASE_UOM.
        if SY-SUBRC eq 0.
          <S_UNITSOFMEASURE>-GROSS_WT   = IS_ACTDAT_MAT-S_MATDAT_MARA-BRGEW.
          <S_UNITSOFMEASURE>-UNIT_OF_WT = IS_ACTDAT_MAT-S_MATDAT_MARA-GEWEI.
          clear <S_UNITSOFMEASURE>-UNIT_OF_WT_ISO.
        endif.
        unassign <S_UNITSOFMEASURE>.
      endif.

***   Net Weight
      if IS_ACTDAT_MAT-S_MATDAT_MARA-NTGEW is not initial.
        IR_BOB_MAT_TARGET->S_CLIENTDATA-NET_WEIGHT = IS_ACTDAT_MAT-S_MATDAT_MARA-NTGEW.
      endif.

***   Weight Unit
      if IS_ACTDAT_MAT-S_MATDAT_MARA-GEWEI is not initial.
        IR_BOB_MAT_TARGET->S_CLIENTDATA-UNIT_OF_WT = IS_ACTDAT_MAT-S_MATDAT_MARA-GEWEI.
      endif.

    endif.

*** Material Group
    if IS_ACTDAT_MAT-S_MATDAT_MARA-MATKL is not initial.
      IR_BOB_MAT_TARGET->S_CLIENTDATA-MATL_GROUP = IS_ACTDAT_MAT-S_MATDAT_MARA-MATKL.
    endif.

*** Production/inspection memo
    if IS_ACTDAT_MAT-S_MATDAT_MARA-FERTH is not initial.
      IR_BOB_MAT_TARGET->S_CLIENTDATA-PROD_MEMO = IS_ACTDAT_MAT-S_MATDAT_MARA-FERTH.
    endif.


  endmethod.
  method TRANS_MRP_AREA.

***--------------------------------------------------------------------------------------
*** Copy MRP Area Data from Source to Target (incl. adjustments)
    ES_TARGET_MDMA = corresponding #( base ( IS_SOURCE_MDMA ) IS_MATDAT_MDMA ).

***--------------------------------------------------------------------------------------
*** Adjust Material
    ES_TARGET_MDMA-MATNR = IF_MATNR.

*** Build X-Structure
    /VCXI/CL_CKX_SERVICE=>FILL_X_STRUCT( exporting IS_DATA    = ES_TARGET_MDMA
                                         changing  CS_X_STRUC = ES_TARGET_MDMA_X ).
    ES_TARGET_MDMA_X-MATNR = ES_TARGET_MDMA-MATNR.
    ES_TARGET_MDMA_X-BERID = ES_TARGET_MDMA-BERID.
    ES_TARGET_MDMA_X-WERKS = ES_TARGET_MDMA-WERKS.

  endmethod.
  method TRANS_PLANTDATA.

    SUPER->TRANS_PLANTDATA( IR_BOB_MAT_SOURCE = IR_BOB_MAT_SOURCE
                            IR_BOB_MAT_TARGET = IR_BOB_MAT_TARGET
                            IS_MATDAT_MARC    = IS_MATDAT_MARC
                            IS_MATDAT_MBEW    = IS_MATDAT_MBEW ).

*** Plant Specific Material Status
    if IS_MATDAT_MARC-MMSTA is not initial.
      IR_BOB_MAT_TARGET->S_PLANTDATA-PUR_STATUS = IS_MATDAT_MARC-MMSTA.
    endif.
*** Variance Key
    if IS_MATDAT_MARC-AWSLS is not initial.
      IR_BOB_MAT_TARGET->S_PLANTDATA-VARIANCE_KEY = IS_MATDAT_MARC-AWSLS.
    endif.
*** Production Supervisor
    if IS_MATDAT_MARC-FEVOR is not initial.
      IR_BOB_MAT_TARGET->S_PLANTDATA-PRODUCTION_SCHEDULER = IS_MATDAT_MARC-FEVOR.
    endif.



*** Change Valuation Class
    case IR_BOB_MAT_TARGET->S_CLIENTDATA-MATL_TYPE.
      when 'ZTRO'.
        IR_BOB_MAT_TARGET->S_VALUATIONDATA-VAL_CLASS = '9901'.
        IR_BOB_MAT_TARGET->S_VALUATIONDATA-VCLASS_PP = '9901'.
        IR_BOB_MAT_TARGET->S_VALUATIONDATA-VCLASS_PY = '9901'.

      when 'ZCLI'.
        IR_BOB_MAT_TARGET->S_VALUATIONDATA-VAL_CLASS = '9902'.
        IR_BOB_MAT_TARGET->S_VALUATIONDATA-VCLASS_PP = '9902'.
        IR_BOB_MAT_TARGET->S_VALUATIONDATA-VCLASS_PY = '9902'.
    endcase.

  endmethod.
  method TRANS_SALESDATA.
***
    SUPER->TRANS_SALESDATA( IR_BOB_MAT_SOURCE = IR_BOB_MAT_SOURCE
                            IR_BOB_MAT_TARGET = IR_BOB_MAT_TARGET
                            IS_MATDAT_MVKE    = IS_MATDAT_MVKE ).
*** Sales Data Extension
    if IR_BOB_MAT_SOURCE->S_CLIENTDATA-MATERIAL ne YCL_HP_SMD_MBQ_BL_CRCOMP=>C_TMAT_KIT.
      IR_BOB_MAT_TARGET->S_SALESDATA-MATL_GRP_1 = IS_MATDAT_MVKE-MVGR1.
    endif.
    IR_BOB_MAT_TARGET->S_SALESDATA-PROD_ATT_1 = IS_MATDAT_MVKE-PRAT1.


  endmethod.
  method TRANS_WAREHOUSENUMBERDATA.
    SUPER->TRANS_WAREHOUSENUMBERDATA( IR_BOB_MAT_SOURCE = IR_BOB_MAT_SOURCE
                                      IR_BOB_MAT_TARGET = IR_BOB_MAT_TARGET
                                      IS_MATDAT_MLGN    =  IS_MATDAT_MLGN  ).
*** Warehouse Data Extension
    if IR_BOB_MAT_SOURCE->S_CLIENTDATA-MATERIAL ne YCL_HP_SMD_MBQ_BL_CRCOMP=>C_TMAT_KIT.
      IR_BOB_MAT_TARGET->S_WAREHOUSENUMBERDATA-L_EQUIP_1 = IS_MATDAT_MLGN-LHMG1.
      IR_BOB_MAT_TARGET->S_WAREHOUSENUMBERDATA-LEQ_UNIT_1 = IS_MATDAT_MLGN-LHME1.
      IR_BOB_MAT_TARGET->S_WAREHOUSENUMBERDATA-UNITTYPE_1 = IS_MATDAT_MLGN-LETY1.
    endif.
  endmethod.
