
class YCL_HP_SMD_MBQ_BL_ASCOMP definition
  public
  inheriting from ZCL_VCXI_P3M_MBQ_BL_ASCOMP
  final
  create public .

public section.
protected section.

  methods ADJUST_ACTDAT_MAT_MARA
    importing
      !IR_ACTDAT type ref to DATA
      !IR_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
      !IF_SOKEY type ZVCXI_XCM_MBQ_SOKEY
    raising
      /VCXI/CX_CKX .
  methods GET_ACTDAT_MLI
    importing
      !IR_SVCEL_SOURCE type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
      !IF_SOKEY type ZVCXI_XCM_MBQ_SOKEY
      !IF_WERKS type WERKS_D
      !IF_DISST type /VCXI/VKC_DISST
    exporting
      !EF_SKIP type ABAP_BOOL
    returning
      value(RR_ACTDAT) type ref to DATA
    raising
      /VCXI/CX_CKX .
  methods ADJUST_ACTDAT_MAT_MLGN
    importing
      !IR_ACTDAT type ref to DATA
      !IR_SVCEL type ref to /VCXI/CL_VKSRA_SVC_ELEMENT
      !IF_SOKEY type ZVCXI_XCM_MBQ_SOKEY optional
    raising
      /VCXI/CX_CKX .

  methods GET_ACTDAT
    redefinition .
  methods GET_ACTDAT_MAT
    redefinition .
  methods GET_ACTDAT_PURIR
    redefinition .
private section.
endclass. "YCL_HP_SMD_MBQ_BL_ASCOMP definition
class YCL_HP_SMD_MBQ_BL_ASCOMP implementation.
method ADJUST_ACTDAT_MAT_MARA.

  data: LF_CSPEC type YHP_SVCS_CSPEC.
  data: LS_PARAM type /VCXI/VKSR_S_PARAM.
  field-symbols: <S_ACTDAT_MAT> type ZVCXI_XCM_MBQ_S_ACTDAT_MAT.

  check IR_ACTDAT is bound.
  assign IR_ACTDAT->* to <S_ACTDAT_MAT>.

*** Sales Division
  <S_ACTDAT_MAT>-S_MATDAT_MARA-SPART = ME->R_BOB_SDOC->S_VBAK-SPART.

*** Product Hierarchy (Do for all except tools)
  if IF_SOKEY ne ME->C_SOKEY_TOOL_DCT and
     IF_SOKEY ne ME->C_SOKEY_TOOL_SET_PRINT.
    <S_ACTDAT_MAT>-S_MATDAT_MARA-PRDHA = YCL_HP_X_SRV_PRODH=>GET_PRODH( IR_SVCEL_XCOMP = ME->R_SVCEL_XCOMP
                                                                        IF_MTART       = <S_ACTDAT_MAT>-S_MATDAT_MARA-MATL_TYPE
                                                                        IR_SVC         = ME->R_BOB_SDOC->GET_SVC( IF_POSNR = ME->F_POSNR ) ).
  endif.

*** Material Group
  <S_ACTDAT_MAT>-S_MATDAT_MARA-MATKL = <S_ACTDAT_MAT>-S_MATDAT_MARA-PRDHA.

endmethod.
  method ADJUST_ACTDAT_MAT_MLGN.
        data: LF_SHUTY  type ZVCXI_XCSU_SHUTY.

    data: LS_TBQTY  type ZVCXI_XCSU_S_TBQTY.


    data: LR_SVCEL    type ref to /VCXI/CL_VKSRA_SVC_ELEMENT,
          LR_OBJECT   type ref to /VCXI/IF_CKX_OBJECT,
          LR_EA_SHIPU type ref to ZCL_VCXI_XCSU_EA_SHIPUNIT.

    data: LT_SVCEL        type        /VCXI/CKX_TT_OBJECT.

    field-symbols: <S_ACTDAT_MAT>  type ZVCXI_XCM_MBQ_S_ACTDAT_MAT,
                   <S_MATDAT_MLGN> type ZVCXI_XCM_MBQ_S_MATDAT_MLGN.

    check IR_ACTDAT is bound.
    assign IR_ACTDAT->* to <S_ACTDAT_MAT>.


    if IF_SOKEY  = C_SOKEY_ASFG.
*** Get Shipping & Unitization
      LR_SVCEL  = YCL_HP_SVC_SRV_VE=>GET_SVCEL_RELATED( IF_SVCEL_ID = 'SHIPMGR_CRCONO'
                                                        IR_SVCEL    = IR_SVCEL ).
    else.
*** Get Shipping Manager
      LR_SVCEL  = YCL_HP_SVC_SRV_VE=>GET_SVCEL_RELATED( IF_SVCEL_ID = 'SHIPMGR'
                                                        IR_SVCEL    = IR_SVCEL ).
    endif.
    check LR_SVCEL is not initial.

*** Get All Children of SmartVC Element
    LT_SVCEL = LR_SVCEL->/VCXI/IF_CKX_OBJECT_H~GET_CHILDREN( ).
*** Loop through all Children of SmartVC Element
    loop at LT_SVCEL into LR_OBJECT.
      move LR_OBJECT ?to LR_SVCEL.

*** Get Element API Reference
      try.
          LR_EA_SHIPU ?= LR_SVCEL->GET_CLSEA( ).
          check LR_EA_SHIPU is bound.
          LR_EA_SHIPU->GET_SHUTY( importing EF_SHUTY = LF_SHUTY ).
          if LF_SHUTY eq YCL_HP_SVCU_PR_SHIPINFO=>C_SHUTY_UNIT.
            exit.
          else.
            clear: LR_EA_SHIPU, LF_SHUTY.
          endif.
        catch CX_SY_MOVE_CAST_ERROR into data(LR_CX_SY_MOVE_CAST_ERROR).
          continue.
      endtry.
    endloop.

    check LR_EA_SHIPU is bound.

    LR_EA_SHIPU->GET_TBQTY( importing ES_TBQTY = LS_TBQTY ).
    case IF_SOKEY.
      when 'PX_SB' or C_SOKEY_DMS_PRINT or C_SOKEY_TOOL_DCT or C_SOKEY_TOOL_SET_PRINT
           or 'P1_CRPROC'.
      when others.
        loop at <S_ACTDAT_MAT>-T_MATDAT_MLGN assigning <S_MATDAT_MLGN>.
          try.
              move LS_TBQTY-TBQTY to <S_MATDAT_MLGN>-LHMG1.
              move LS_TBQTY-TBQTY_UOM to <S_MATDAT_MLGN>-LHME1.
              move 'PL' to <S_MATDAT_MLGN>-LETY1.
            catch CX_SY_ARITHMETIC_OVERFLOW.
              continue.
          endtry.
        endloop.
    endcase.
  endmethod.
  method GET_ACTDAT.

***-------------------------------------------------------------------
*** Call super
    RR_ACTDAT = SUPER->GET_ACTDAT( exporting IF_ACTID        = IF_ACTID
                                             IR_SVCEL_SOURCE = IR_SVCEL_SOURCE
                                             IF_SOKEY        = IF_SOKEY
                                             IF_WERKS        = IF_WERKS
                                             IF_DISST        = IF_DISST
                                   importing EF_SKIP         = EF_SKIP ).

    case IF_ACTID.
***   Material List (Inclusion/Exclusion)
      when YCL_HP_SMD_MBQ_CUST=>C_ACTID_MLI.
        RR_ACTDAT = ME->GET_ACTDAT_MLI( exporting IR_SVCEL_SOURCE = IR_SVCEL_SOURCE
                                                  IF_SOKEY        = IF_SOKEY
                                                  IF_WERKS        = IF_WERKS
                                                  IF_DISST        = IF_DISST
                                        importing EF_SKIP         = EF_SKIP ).

    endcase.

  endmethod.
  method GET_ACTDAT_MAT.

    RR_ACTDAT = SUPER->GET_ACTDAT_MAT( exporting IR_SVCEL_SOURCE = IR_SVCEL_SOURCE
                                                 IF_SOKEY        = IF_SOKEY
                                                 IF_WERKS        = IF_WERKS
                                                 IF_DISST        = IF_DISST ).

*** Adjust Material Data
    ME->ADJUST_ACTDAT_MAT_MARA( IR_ACTDAT = RR_ACTDAT
                                IR_SVCEL  = IR_SVCEL_SOURCE
                                IF_SOKEY  = IF_SOKEY ).

*** Adjust Warehouse Data
    ME->ADJUST_ACTDAT_MAT_MLGN( IR_ACTDAT = RR_ACTDAT
                                IR_SVCEL  = IR_SVCEL_SOURCE
                                IF_SOKEY  = IF_SOKEY ).

  endmethod.
  method GET_ACTDAT_MLI.

    RR_ACTDAT = YCL_HP_SMD_MBQ_SRV_BL_XCOMP=>GET_ACTDAT_MLI( exporting IR_SVCEL_SOURCE = IR_SVCEL_SOURCE
                                                                       IF_SOKEY        = IF_SOKEY
                                                                       IF_WERKS        = IF_WERKS
                                                                       IF_DISST        = IF_DISST
                                                             importing EF_SKIP         = EF_SKIP ).

  endmethod.
  method GET_ACTDAT_PURIR.

    field-symbols: <S_ACTDAT_PURIR> type ZVCXI_XCM_MBQ_S_ACTDAT_PURIR.

*** Call SUPER to create Data Reference
    RR_ACTDAT = SUPER->GET_ACTDAT_PURIR( exporting IR_SVCEL_SOURCE = IR_SVCEL_SOURCE
                                                   IF_SOKEY        = IF_SOKEY
                                                   IF_WERKS        = IF_WERKS
                                                   IF_DISST        = IF_DISST
                                         importing EF_SKIP         = EF_SKIP ).
    check RR_ACTDAT is bound.
    assign RR_ACTDAT->* to <S_ACTDAT_PURIR>.

***    Add Purchase Organization Vendor
    if <S_ACTDAT_PURIR>-LIFNR is not initial.
      select single EKORG into <S_ACTDAT_PURIR>-EKORG
        from LFM1
        where LIFNR = <S_ACTDAT_PURIR>-LIFNR.
    endif.

*** Begin of modification by Adriano Darrosa on 20231017

***------------------------------------------------------------------------------------------------
*** Set Tax code (MWSKZ) for purchasing

    check <S_ACTDAT_PURIR>-LIFNR is not initial.

    select single LAND1, STCD1 from LFA1 into @data(LS_LFA1)
      where LIFNR eq @<S_ACTDAT_PURIR>-LIFNR.

    select single T001~LAND1 into @data(LF_LAND1)
      from T001W
      inner join T001K
        on T001K~BWKEY = T001W~BWKEY
      inner join T001
        on T001~BUKRS = T001K~BUKRS
      where T001W~WERKS eq @IF_WERKS.

***------------------------------------------------------------------------------------------------
*** Check for National/International Provider
    if LS_LFA1-LAND1 eq LF_LAND1.

      if LS_LFA1-STCD1(1) eq SY-ABCDE+13(1).
        <S_ACTDAT_PURIR>-MWSKZ = 'B2'.
      else.
        <S_ACTDAT_PURIR>-MWSKZ = 'S3'.
      endif.

    else.

      select single XEGLD from T005 into @data(LF_XEGLD)
        where LAND1 eq @LS_LFA1-LAND1.

***------------------------------------------------------------------------------------------------
***     Check for European/Non European Union Member
      if LF_XEGLD eq ABAP_TRUE.
        <S_ACTDAT_PURIR>-MWSKZ = 'A3'.
      else.
        <S_ACTDAT_PURIR>-MWSKZ = 'I3'.
      endif.

    endif.

*** End of modification by Adriano Darrosa on 20231017

  endmethod.
