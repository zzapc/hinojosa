
class YCL_HP_SVCS_GRID_MS_INK definition
  public
  inheriting from ZCL_VCXI_PXSS_GRID_MS_INK
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
      !IF_TABNAME type TABNAME default 'YHP_SVCS_S_MS_INK_GRID'
      !IF_CONTAINER_NAME type SCRFNAME
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IF_APPL_EVENTS type ABAP_BOOL default ABAP_TRUE
    raising
      /VCXI/CX_CKX .
protected section.

  methods HANDLE_HOTSPOT_CLICK
    for event HOTSPOT_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW_ID
      !E_COLUMN_ID
      !ES_ROW_NO .

  methods GET_FIELDCAT
    redefinition .
  methods GET_MS_INK_VIS
    redefinition .
  methods HANDLE_DATA_CHANGED_FINISHED
    redefinition .
  methods SET_MS_INK_VIS
    redefinition .
  methods SET_EVENT
    redefinition .
private section.
endclass. "YCL_HP_SVCS_GRID_MS_INK definition
class YCL_HP_SVCS_GRID_MS_INK implementation.
  method CONSTRUCTOR.


    SUPER->CONSTRUCTOR( IR_GATE           = IR_GATE
                        IR_UIGATE         = IR_UIGATE
                        IF_TABNAME        = IF_TABNAME
                        IF_CONTAINER_NAME = IF_CONTAINER_NAME
                        IF_APPL_EVENTS    = IF_APPL_EVENTS ).


*** Define Provider Type for Button
    ME->F_IPRVT = YCL_HP_SVCS_PR_MS_INK=>C_IPRVT_PX_MS_INK.

  endmethod.
  method GET_FIELDCAT.

    data: LF_LOCKED type /VCXI/CKX_LOCKED,
          LF_INUSE  type /VCXI/VKSR_INUSE,
          LF_COLPOS type I,
          LF_LIFNR  type ABAP_BOOL,
          LF_PRICE  type ABAP_BOOL.
    data: LS_MS_INK_GRID type ZVCXI_PXSS_S_MS_INK_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY,
                   <S_FCAT> type          LVC_S_FCAT.

*** Get Standard Field Catalog
    RT_FCAT = SUPER->GET_FIELDCAT( ).

*** Get Lock and In-Use Status
    LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
    LF_INUSE  = ME->R_GATE->IS_INUSE( ).

*** Dereferencing of Data Reference
    assign ME->R_DATA->* to <T_DATA>.

*** Find Purchased
    loop at <T_DATA> assigning <S_DATA>.
      move-corresponding <S_DATA> to LS_MS_INK_GRID.
      case LS_MS_INK_GRID-PURCH.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT_PRICE.
          LF_LIFNR = ABAP_TRUE.
          LF_PRICE = ABAP_TRUE.
        when ZCL_VCXI_XCSS_PR_MS=>C_PURCH_DIRECT.
          LF_LIFNR = ABAP_TRUE.
      endcase.

***   Find Analog/Digital Ink
      try.
          data(LF_MS_INK) = cond #( when cast ZCL_VCXI_PXSS_PR_MS_INK( LS_MS_INK_GRID-R_GATE->R_CLSPR ) is bound
                                      then ABAP_TRUE else ABAP_FALSE ).
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

      try.
          data(LF_MS_DINK) = cond #( when cast ZCL_VCXI_PXSS_PR_MS_DINK( LS_MS_INK_GRID-R_GATE->R_CLSPR ) is bound
                                      then ABAP_TRUE else ABAP_FALSE ).
        catch CX_SY_MOVE_CAST_ERROR.
      endtry.

    endloop.

***----------------------------------------------------------------------------
*** Adjust Field Catalog
    loop at RT_FCAT assigning <S_FCAT>.
      case <S_FCAT>-FIELDNAME.
        when 'INKST'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
            move ABAP_FALSE to <S_FCAT>-F4AVAILABL.
          endif.
        when 'RINKT'.
          <S_FCAT>-CHECKBOX = ABAP_TRUE.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
            move ABAP_TRUE  to <S_FCAT>-HOTSPOT.
          endif..
        when 'PAINK'.
          if LF_LOCKED eq ABAP_TRUE and
             LF_INUSE  eq ABAP_TRUE.
            move ABAP_TRUE  to <S_FCAT>-EDIT.
          endif.
      endcase.

***----------------------------------------------------------------------------
***   Hide Field for Digital Ink
      if LF_MS_DINK eq ABAP_TRUE.
        if <S_FCAT>-FIELDNAME eq 'INKST' or
           <S_FCAT>-FIELDNAME eq 'RINKT' or
           <S_FCAT>-FIELDNAME eq 'PAINK'.
          move ABAP_TRUE to <S_FCAT>-NO_OUT.
        endif.
      endif.

***----------------------------------------------------------------------------
***   Set Position for each Field
      move 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'MATNR_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'TINK'.            <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKST'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOL'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOL_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOP'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APVOP_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COVRG'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COVRG_UOM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APWGT'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'APWGT_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COLCO'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'COLCO_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRPTH'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTN_ICON'.      <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTN'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTN_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'INKTD'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'FOVRR_INKTD'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'ANITN'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SLDCO'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SLDCO_UOM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'SURWT_UOMC6'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PURCH'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'LIFNR_DESCR'.     <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICE_CURR'.      <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP'.           <S_FCAT>-COL_POS = LF_COLPOS.  endif.
      add 1 to LF_COLPOS.
      if <S_FCAT>-FIELDNAME eq 'PRICP_UOM'.       <S_FCAT>-COL_POS = LF_COLPOS.  endif.
    endloop.

    sort RT_FCAT by COL_POS.

  endmethod.
  method GET_MS_INK_VIS.
    data: LS_MS_INK_VIS type YHP_SVCS_S_MS_INK_GRID,
          LS_PRICE      type ZVCXI_XCS_S_PRICE,
          LS_PRICP      type ZVCXI_XCS_S_PRICP.
    data: LR_PR_MS_INK     type ref to YCL_HP_SVCS_PR_MS_INK,
          LR_CUST_TOOL_INK type ref to ZCL_VCXI_PXSS_CUST_TOOL_INK.

    SUPER->GET_MS_INK_VIS( exporting IR_GATE = IR_GATE
                           changing  CS_DATA = CS_DATA ).

***--------------------------------------------------------------------------------------
*** Get PR Class
    try.
        move IR_GATE->R_CLSPR ?to LR_PR_MS_INK.
      catch CX_SY_MOVE_CAST_ERROR.
    endtry.
    check LR_PR_MS_INK is bound.

*** "Cast" generic structure to Vis Structure
    move-corresponding CS_DATA to LS_MS_INK_VIS.

***Ink Station
    LS_MS_INK_VIS-INKST = LR_PR_MS_INK->GET_INKST( ).

*** Reserve Ink Tool
    LS_MS_INK_VIS-RINKT = LR_PR_MS_INK->GET_RINKT( ).

*** Pre-assembly Ink Tool
    LS_MS_INK_VIS-PAINK = LR_PR_MS_INK->GET_PAINK( ).

***--------------------------------------------------------------------------------------
*** "Cast" Vis Structure back to generic structure
    move-corresponding LS_MS_INK_VIS to CS_DATA.

  endmethod.
  method HANDLE_DATA_CHANGED_FINISHED.

    data: LS_HP_MS_INK_GRID type YHP_SVCS_S_MS_INK_GRID.
    data: LS_MS_INK_GRID type ZVCXI_PXSS_S_MS_INK_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

    SUPER->HANDLE_DATA_CHANGED_FINISHED( E_MODIFIED    = E_MODIFIED
                                          ET_GOOD_CELLS = ET_GOOD_CELLS ).

"JBL 27/05/2024 OPHJVC-602 Calling again SET_MS_INK_VIS was overwriting correct values
*    check E_MODIFIED eq ABAP_TRUE.
*
*    try.
*
*
****     Dereferencing of Data Reference
*        assign ME->R_DATA->* to <T_DATA>.
*
*        loop at <T_DATA> assigning <S_DATA>.
*          move-corresponding <S_DATA> to LS_MS_INK_GRID.
*
*          check LS_MS_INK_GRID-R_GATE is bound and
*                LS_MS_INK_GRID-R_GATE->F_FREED is initial.
*
****       Set Values to PR Class
*          ME->SET_MS_INK_VIS( IR_GATE = LS_MS_INK_GRID-R_GATE
*                              IS_DATA = <S_DATA> ).
*
*        endloop.
*
*        ME->R_GATE->RAISE_EVENTS( ).
*
*      catch /VCXI/CX_CKX into data(LR_CX_CKX).
*        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
*    endtry.
*
**** Request Refresh for ALV
*    move ABAP_TRUE to ME->F_REFRESH_REQ.
  endmethod.
method HANDLE_HOTSPOT_CLICK.

  data: LS_MS_INK_GRID     type        YHP_SVCS_S_MS_INK_GRID.
  data: LR_PR_MS_INK       type ref to YCL_HP_SVCS_PR_MS_INK.
  field-symbols: <T_DATA> type standard table,
                 <S_DATA> type          ANY.

  try.

***   Dereferencing of Data Reference
      assign ME->R_DATA->* to <T_DATA>.

      loop at <T_DATA> assigning <S_DATA>.
        check SY-TABIX  eq E_ROW_ID.

        move-corresponding <S_DATA> to LS_MS_INK_GRID.

        try.
            LR_PR_MS_INK = cast YCL_HP_SVCS_PR_MS_INK( LS_MS_INK_GRID-R_GATE->R_CLSPR ).
          catch CX_SY_MOVE_CAST_ERROR.
        endtry.
        check LR_PR_MS_INK is bound.

***     Set Values to MS Paper PR Class
        case E_COLUMN_ID-FIELDNAME.

          when 'RINKT'.
            case LS_MS_INK_GRID-RINKT.
              when ABAP_TRUE.  move ABAP_FALSE to LS_MS_INK_GRID-RINKT.
              when ABAP_FALSE. move ABAP_TRUE  to LS_MS_INK_GRID-RINKT.
            endcase.
***--------------------------------------------------------------------------------------
***         Reserved Ink Tool
            LR_PR_MS_INK->SET_RINKT( IF_RINKT = LS_MS_INK_GRID-RINKT
                                     IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
        endcase.

      endloop.

      ME->R_GATE->RAISE_EVENTS( ).

    catch /VCXI/CX_CKX into data(LR_CX_CKX).
      ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
  endtry.

*** Request Refresh for ALV
  move ABAP_TRUE to ME->F_REFRESH_REQ.

endmethod.
  method SET_EVENT.
    SUPER->SET_EVENT( ).

*** Set Hotspot
    set handler ME->HANDLE_HOTSPOT_CLICK       for ME->R_GRID.

  endmethod.
  method SET_MS_INK_VIS.

    data: LS_MS_INK_VIS_OLD type        YHP_SVCS_S_MS_INK_VIS,
          LS_MS_INK_VIS_NEW type        YHP_SVCS_S_MS_INK_VIS.
    data: LR_PR_MS_INK  type ref to YCL_HP_SVCS_PR_MS_INK.

    data: LS_MS_INK_GRID type YHP_SVCS_S_MS_INK_GRID.
    field-symbols: <T_DATA> type standard table,
                   <S_DATA> type          ANY.

*** Set Values to PR Class
    SUPER->SET_MS_INK_VIS( IR_GATE = IR_GATE
                           IS_DATA = IS_DATA ).

    try.
        LR_PR_MS_INK ?= IR_GATE->R_CLSPR.
      catch CX_SY_MOVE_CAST_ERROR.
        clear: LR_PR_MS_INK.
    endtry.

    check LR_PR_MS_INK is bound.

*** Get old Values
    ME->GET_MS_INK_VIS( exporting IR_GATE = IR_GATE
                        changing  CS_DATA = LS_MS_INK_VIS_OLD ).
*** Get new Values
    move-corresponding IS_DATA to LS_MS_INK_VIS_NEW.

***--------------------------------------------------------------------------------------
*** Ink Station
    if LS_MS_INK_VIS_NEW-INKST ne LS_MS_INK_VIS_OLD-INKST.
      LR_PR_MS_INK->SET_INKST( IF_INKST = LS_MS_INK_VIS_NEW-INKST
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Reserved Ink Tool
    if LS_MS_INK_VIS_NEW-RINKT ne LS_MS_INK_VIS_OLD-RINKT.
      LR_PR_MS_INK->SET_RINKT( IF_RINKT = LS_MS_INK_VIS_NEW-RINKT
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

***--------------------------------------------------------------------------------------
*** Pre-Assembly Ink Tool
    if LS_MS_INK_VIS_NEW-PAINK ne LS_MS_INK_VIS_OLD-PAINK.
      LR_PR_MS_INK->SET_PAINK( IF_PAINK = LS_MS_INK_VIS_NEW-PAINK
                               IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
