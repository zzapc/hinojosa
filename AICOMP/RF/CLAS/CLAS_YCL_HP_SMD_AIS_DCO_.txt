
class YCL_HP_SMD_AIS_DCO definition
  public
  inheriting from /VCXI/CL_CKMR_CLDCO
  final
  create public .

public section.

  data F_DELIM type YHP_SMD_AIS_DELIM .
  data F_FPATH type YHP_SMD_AIS_FPATH .
  data F_FGUID type SYSUUID_C22 .
  data F_FSIDA type ZVCXI_XCI_FSIDA .
  data F_FCALC type YHP_SMD_FCALC .
  constants C_DELIM type YHP_SMD_AIS_DELIM value ';' ##NO_TEXT.
  data T_WRKLI type YHP_SMD_AIS_TT_QUOT_WRKLI .

  methods SET_DELIM
    importing
      !IF_DELIM type YHP_SMD_AIS_DELIM .
  methods SET_FSIDA
    importing
      !IF_FSIDA type ZVCXI_XCI_FSIDA
    raising
      /VCXI/CX_CKX .
  methods SET_FCALC
    importing
      !IF_FCALC type YHP_SMD_FCALC
    raising
      /VCXI/CX_CKX .
  methods SET_FGUID
    importing
      !IF_FGUID type SYSUUID_C22
    raising
      /VCXI/CX_CKX .
  methods SET_FPATH
    importing
      !IF_FPATH type YHP_SMD_AIS_FPATH
    raising
      /VCXI/CX_CKX .
  methods SET_WRKLI
    importing
      !IT_WRKLI type YHP_SMD_AIS_TT_QUOT_WRKLI
    raising
      /VCXI/CX_CKX .
  methods CONSTRUCTOR
    raising
      /VCXI/CX_CKX .
protected section.

  methods DESERIALIZE_IDAT_SVC
    importing
      !IF_XML type /VCXI/CKX_STRING
    returning
      value(RR_IDAT_SVC) type ref to ZCL_VCXI_XCI_IDAT_SVC
    raising
      /VCXI/CX_CKX .
  methods SERIALIZE_IDAT_SVC
    importing
      !IR_IDAT_SVC type ref to ZCL_VCXI_XCI_IDAT_SVC
    returning
      value(RF_XML) type /VCXI/CKX_STRING
    raising
      /VCXI/CX_CKX .

  methods DESERIALIZE_INFO
    redefinition .
  methods SERIALIZE_INFO
    redefinition .
private section.
endclass. "YCL_HP_SMD_AIS_DCO definition
class YCL_HP_SMD_AIS_DCO implementation.
method CONSTRUCTOR.

*** Super Constructor
  SUPER->CONSTRUCTOR( ).

endmethod.
method DESERIALIZE_IDAT_SVC.

  data: LF_IEALI type /VCXI/VKSC_IEALI.

  data: LS_CMPRK type /VCXI/VKC_S_CMPRK,
        LS_SVCAD type ZVCXI_XCI_S_SVCAD,
        LS_SVCRT type ZVCXI_XCI_S_SVCRT.

  data: LT_SVCEL type ZVCXI_XCI_TT_SVCEL,
        LT_SVCRT type ZVCXI_XCI_TT_SVCRT.

*** Check that XML is not initial
  check IF_XML is not initial.

*** Open XML
  call transformation ID
       source xml IF_XML
       result IEALI   = LF_IEALI
              S_CMPRK = LS_CMPRK
              S_SVCAD = LS_SVCAD
              T_SVCEL = LT_SVCEL
              T_SVCRT = LT_SVCRT.

*** Create Integration Data
  RR_IDAT_SVC = ZCL_VCXI_XCI_IDAT_SVC=>CREATE( IS_CMPRK = LS_CMPRK
                                               IF_IEALI = LF_IEALI ).

*** Set Application Data
  RR_IDAT_SVC->SET_SVCAD( IS_SVCAD = LS_SVCAD ).

*** Set SVC Elements
  RR_IDAT_SVC->SET_SVCEL( IT_SVCEL = LT_SVCEL ).

*** Set Routing
  loop at LT_SVCRT into LS_SVCRT.
    RR_IDAT_SVC->SET_SVCRT( IF_IEALI       = LS_SVCRT-IEALI
                            IF_RTERD       = LS_SVCRT-RTERD
                            IF_RTEOP       = LS_SVCRT-RTEOP
                            IF_RELCO       = LS_SVCRT-RELCO
                            IT_ARBPL       = LS_SVCRT-T_ARBPL
                            IF_GUID_RTESEL = LS_SVCRT-GUID_RTESEL
                            IT_XML_BL_PRTE = LS_SVCRT-T_XML_BL_PRTE ).
  endloop.

endmethod.
method DESERIALIZE_INFO.

  data: LT_WRKLI_XML type YHP_SMD_AIS_TT_QUOT_WRKLI_XML.

  field-symbols: <S_WRKLI>     type YHP_SMD_AIS_S_QUOT_WRKLI,
                 <S_WRKLI_XML> type YHP_SMD_AIS_S_QUOT_WRKLI_XML.

  check IF_XMLDC is not initial.

*** Open XML
  call transformation ID
       source xml IF_XMLDC
       result F_FGUID     = ME->F_FGUID
              F_FPATH     = ME->F_FPATH
              F_DELIM     = ME->F_DELIM
              F_FSIDA     = ME->F_FSIDA
              F_FCALC     = ME->F_FCALC
              T_WRKLI_XML = LT_WRKLI_XML.

  loop at LT_WRKLI_XML assigning <S_WRKLI_XML>.

    append initial line to ME->T_WRKLI assigning <S_WRKLI>.
    move-corresponding <S_WRKLI_XML> to <S_WRKLI>.

*** Deserialize Integration Data
    <S_WRKLI>-R_IDAT_SVC = ME->DESERIALIZE_IDAT_SVC( IF_XML = <S_WRKLI_XML>-F_IDAT_SVC_XML ).

  endloop.

endmethod.
method SERIALIZE_IDAT_SVC.

  check IR_IDAT_SVC is bound.

*** Create XML
  call transformation ID
       source IEALI   = IR_IDAT_SVC->F_IEALI
              S_CMPRK = IR_IDAT_SVC->R_CUPRFL->R_CVC_CUPRFL->S_CMPRK
              S_SVCAD = IR_IDAT_SVC->S_SVCAD
              T_SVCEL = IR_IDAT_SVC->T_SVCEL
              T_SVCRT = IR_IDAT_SVC->T_SVCRT
       result xml RF_XML.

endmethod.
method SERIALIZE_INFO.

  data: LT_WRKLI_XML type YHP_SMD_AIS_TT_QUOT_WRKLI_XML.

  field-symbols: <S_WRKLI>     type YHP_SMD_AIS_S_QUOT_WRKLI,
                 <S_WRKLI_XML> type YHP_SMD_AIS_S_QUOT_WRKLI_XML.

  loop at ME->T_WRKLI assigning <S_WRKLI>.
    append initial line to LT_WRKLI_XML assigning <S_WRKLI_XML>.
    move-corresponding <S_WRKLI> to <S_WRKLI_XML>.
    <S_WRKLI_XML>-F_IDAT_SVC_XML = ME->SERIALIZE_IDAT_SVC( IR_IDAT_SVC = <S_WRKLI>-R_IDAT_SVC ).
  endloop.

*** Create XML
  call transformation ID
       source F_FGUID     = ME->F_FGUID
              F_FPATH     = ME->F_FPATH
              F_DELIM     = ME->F_DELIM
              F_FSIDA     = ME->F_FSIDA
              F_FCALC     = ME->F_FCALC
              T_WRKLI_XML = LT_WRKLI_XML
       result xml RF_XMLDC.

endmethod.
method SET_DELIM.

  check IF_DELIM ne ME->F_DELIM.
  move  IF_DELIM to ME->F_DELIM.

  raise event CHANGED.

endmethod.
method SET_FCALC.

  check IF_FCALC ne ME->F_FCALC.
  move  IF_FCALC to ME->F_FCALC.

  raise event CHANGED.

endmethod.
method SET_FGUID.

  check IF_FGUID ne ME->F_FGUID.
  move  IF_FGUID to ME->F_FGUID.

  raise event CHANGED.

endmethod.
method SET_FPATH.

  check IF_FPATH ne ME->F_FPATH.
  move  IF_FPATH to ME->F_FPATH.

  raise event CHANGED.

endmethod.
method SET_FSIDA.

  check IF_FSIDA ne ME->F_FSIDA.
  move  IF_FSIDA to ME->F_FSIDA.

  raise event CHANGED.

endmethod.
method SET_WRKLI.

  check IT_WRKLI ne ME->T_WRKLI.
  move  IT_WRKLI to ME->T_WRKLI.

  raise event CHANGED.

endmethod.
