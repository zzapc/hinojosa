
class YCL_HP_SVCS_BL_FDMDL_CRPART definition
  public
  inheriting from ZCL_VCXI_P1SS_BL_FDMDL
  final
  create public .

public section.

  methods ADJ_SRCIN
    redefinition .
  methods GET_CLSUI
    redefinition .
protected section.

  methods ADJ_SRCIN_CORR_TO_SFG
    redefinition .
  methods GET_INIT_DCT
    redefinition .
  methods GET_INIT_INL
    redefinition .
  methods MERGE_FASTD_XCOMP
    redefinition .
  methods GET_INIT_SHT
    redefinition .
private section.
endclass. "YCL_HP_SVCS_BL_FDMDL_CRPART definition
class YCL_HP_SVCS_BL_FDMDL_CRPART implementation.
  method ADJ_SRCIN.

    data: LT_GATE_EXCLUDE type /VCXI/VKSR_TT_GATE.


*** Ignore Fast Data Model "Procurement Detail"
    check ME->F_FDMDL ne C_FDMDL_CRPRDTL.

*** Get excluded Gates
    LT_GATE_EXCLUDE = cond #( when IT_GATE_EXCLUDE is supplied then IT_GATE_EXCLUDE
                              else ME->GET_GATE_EXCLUDE( IR_GATE_OUT    = IR_GATE_OUT
                                                         IT_FASTD_XCOMP = CT_FASTD_XCOMP ) ).

*** Start based on current Source
    case ME->GET_SRCIN( IR_GATE_OUT     = IR_GATE_OUT
                        IT_FASTD_XCOMP  = CT_FASTD_XCOMP
                        IT_GATE_EXCLUDE = LT_GATE_EXCLUDE ).
***--------------------------------------------------------------------------------------
      when C_SRCIN_CORR.    " Input Source - Corrugation
        case IF_SRCIN.
          when C_SRCIN_PROC.    " Input Source - Procurement
            ME->REPLACE_XCOMP_DATA( exporting IF_ISELF_OLD    = 'CORR'
                                              IF_ISELF_NEW    = 'MS_CRPROC'
                                              IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                    changing  CT_FASTD_XCOMP  = CT_FASTD_XCOMP
                                              CT_XCONG        = CT_XCONG ).
          when C_SRCIN_SFG.     " Input Source - Semi-finished good
            ME->ADJ_SRCIN_CORR_TO_SFG( exporting IF_SRCIN        = IF_SRCIN
                                                 IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                       changing  CT_FASTD_XCOMP  = CT_FASTD_XCOMP
                                                 CT_XCONG        = CT_XCONG ).
        endcase.

***--------------------------------------------------------------------------------------
      when C_SRCIN_PROC.    " Input Source - Procurement
        case IF_SRCIN.
          when C_SRCIN_CORR.    " Input Source - Corrugation
            ME->REPLACE_XCOMP_DATA( exporting IF_ISELF_OLD    = 'MS_CRPROC'
                                              IF_ISELF_NEW    = 'CORR'
                                              IR_DATA         = new ZVCXI_P1SS_S_FDI_CORR( SCORE_FAALL = ABAP_TRUE )
                                              IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                    changing  CT_FASTD_XCOMP  = CT_FASTD_XCOMP
                                              CT_XCONG        = CT_XCONG ).
          when C_SRCIN_SFG.     " Input Source - Semi-finished good
            ME->REPLACE_XCOMP_DATA( exporting IF_ISELF_OLD    = 'MS_CRPROC'
                                              IF_ISELF_NEW    = 'CORR'
                                              IR_DATA         = new ZVCXI_P1SS_S_FDI_CORR( SCORE_FAALL = ABAP_TRUE )
                                              IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                    changing  CT_FASTD_XCOMP  = CT_FASTD_XCOMP
                                              CT_XCONG        = CT_XCONG ).
            ME->ADJ_SRCIN_CORR_TO_SFG( exporting IF_SRCIN        = IF_SRCIN
                                                 IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                       changing  CT_FASTD_XCOMP  = CT_FASTD_XCOMP
                                                 CT_XCONG        = CT_XCONG ).
        endcase.

***--------------------------------------------------------------------------------------
      when C_SRCIN_SFG.     " Input Source - Semi-finished good
        case IF_SRCIN.
          when C_SRCIN_CORR.    " Input Source - Corrugation
            ME->MERGE_FASTD_XCOMP( exporting IF_ISELF       = 'CORR'
                                   changing  CT_FASTD_XCOMP = CT_FASTD_XCOMP
                                             CT_XCONG       = CT_XCONG ).
          when C_SRCIN_PROC.    " Input Source - Procurement
            ME->MERGE_FASTD_XCOMP( exporting IF_ISELF       = 'CORR'
                                   changing  CT_FASTD_XCOMP = CT_FASTD_XCOMP
                                             CT_XCONG       = CT_XCONG ).
            ME->REPLACE_XCOMP_DATA( exporting IF_ISELF_OLD    = 'CORR'
                                              IF_ISELF_NEW    = 'MS_CRPROC'
                                              IT_GATE_EXCLUDE = LT_GATE_EXCLUDE
                                    changing  CT_FASTD_XCOMP  = CT_FASTD_XCOMP
                                              CT_XCONG        = CT_XCONG ).
        endcase.
    endcase.

  endmethod.
  method ADJ_SRCIN_CORR_TO_SFG.

    data: LS_FASTD_XCOMP_DATA type ZVCXI_PXSS_S_FASTD_XCOMP_DATA.
    data: LT_FASTD_XCOMP  type ZVCXI_PXSS_TT_FASTD_XCOMP.
    field-symbols: <S_FASTD_XCOMP> type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_XCONG>       type ZVCXI_PXSS_S_XCONG.


*** Search for Corrugation
    loop at CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
      check not LINE_EXISTS( IT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP>-R_GATE ] ).

      if LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CORR' ] ).
***     Buffer Corrugation Data and remove from original Component
        LS_FASTD_XCOMP_DATA =  <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CORR' ].

***     Create new Connection
        try.
            append value #( GXCON_OUT = CL_SYSTEM_UUID=>CREATE_UUID_C22_STATIC( )
                            GXCON_IN  = CL_SYSTEM_UUID=>CREATE_UUID_C22_STATIC( )
                          ) to CT_XCONG assigning <S_XCONG>.
          catch CX_UUID_ERROR into data(LR_CX_UUID_ERROR).
            /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( LR_CX_UUID_ERROR ).
        endtry.

***     Replace Corrugation though Connection In
        delete <S_FASTD_XCOMP>-T_DATA where ISELF = 'CORR'.
        append value #( IPARE = 'INPUT'
                        ISELF = 'CRCONI'
                        R_DATA = new ZVCXI_PXSS_S_FDI_XCONI( GXCON = <S_XCONG>-GXCON_IN )
                      ) to <S_FASTD_XCOMP>-T_DATA.

***     Create new Component
        append value #( ID     = <S_FASTD_XCOMP>-ID
                        POSID  = <S_FASTD_XCOMP>-POSID - 5        "before current
                        XCSTY  = <S_FASTD_XCOMP>-XCSTY
                        T_DATA = value #( ( IPARE  = LS_FASTD_XCOMP_DATA-IPARE
                                            ISELF  = LS_FASTD_XCOMP_DATA-ISELF
                                            R_DATA = LS_FASTD_XCOMP_DATA-R_DATA )
                                          ( IPARE = 'OUTPUT'
                                            ISELF = 'CRCONO'
                                            R_DATA = new ZVCXI_PXSS_S_FDI_XCONO( GXCON = <S_XCONG>-GXCON_OUT )
*** Add MRP field to Exclude list for initial call from Fast Data
                                            T_FDMEX = value #( ( conv #( 'NOUTT' ) ) ( conv #( 'MRP' ) ) ) )
                                        )
                      ) to LT_FASTD_XCOMP.
      endif.
    endloop.

*** Add added components to overall component list
    append lines of LT_FASTD_XCOMP to CT_FASTD_XCOMP.

  endmethod.
  method GET_CLSUI.

    RF_CLSUI = 'YCL_HP_SVCS_UI_FDMDL_CRPART'.

  endmethod.
  method GET_INIT_DCT.

    field-symbols: <S_FASTD_XCOMP> type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_XCONG>       type ZVCXI_PXSS_S_XCONG.


***--------------------------------------------------------------------------------------
*** Define Structure
    append value #( ID     = 'COMP_P1'
                    XCSTY  = ZCL_VCXI_PXSS_BL_FASTD=>C_XCSTY_SPEC  "Specification-based Component
                    T_DATA = value #( ( IPARE = 'INPUT'   ISELF = 'CORR'        R_DATA = new ZVCXI_P1SS_S_FDI_CORR(       SCORE_FAALL = ABAP_TRUE ) )
                                      ( IPARE = 'CONV'    ISELF = 'CSTEP_DCUT'  R_DATA = new ZVCXI_P1SS_S_FDI_CSTEP_DCUT( SCORE_FAALL = ABAP_TRUE )
                                                                                T_FDMEX = value #( ( conv #( 'TDCUT' ) )
                                                                                                   ( conv #( 'NOUTW' ) )
                                                                                                   ( conv #( 'NOUTL' ) ) ) )
                                    )
                  ) to CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.


***--------------------------------------------------------------------------------------
    case ME->F_FDMDL.
      when 'CFG'.
***     Add Finished Good
        append value #( IPARE = 'OUTPUT'  ISELF = 'CFG' ) to <S_FASTD_XCOMP>-T_DATA.

      when 'CRPART'.
***     Create new Connection
        append ME->GET_NEW_XCONG( ) to CT_XCONG assigning <S_XCONG>.
        append value #( IPARE = 'OUTPUT'  ISELF = 'CRCONO'      R_DATA  = new ZVCXI_PXSS_S_FDI_XCONO( GXCON = <S_XCONG>-GXCON_OUT )
*** Add MRP field to Exclude List for initial Fast Data Call
                                                                T_FDMEX = value #( ( conv #( 'NOUTT' ) ) ( conv #( 'MRP' ) ) )
                      ) to <S_FASTD_XCOMP>-T_DATA.

***     Add Part
        assign CT_FASTD_XCOMP[ ID = 'COMP_P3' ] to <S_FASTD_XCOMP>.
        append value #( IPARE = 'CSTEP_ASMBL'  ISELF = 'CRPART'
                      ) to <S_FASTD_XCOMP>-T_DATA.
        append value #( IPARE = 'CRPART'       ISELF = 'CRCONI'   R_DATA  = new ZVCXI_PXSS_S_FDI_XCONI( GXCON = <S_XCONG>-GXCON_IN )
                      ) to <S_FASTD_XCOMP>-T_DATA.

    endcase.

  endmethod.
  method GET_INIT_INL.

    field-symbols: <S_FASTD_XCOMP> type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_XCONG>       type ZVCXI_PXSS_S_XCONG.


***--------------------------------------------------------------------------------------
*** Define Structure
    append value #( ID     = 'COMP_P1'
                    XCSTY  = ZCL_VCXI_PXSS_BL_FASTD=>C_XCSTY_SPEC  "Specification-based Component
                    T_DATA = value #( ( IPARE = 'INPUT'   ISELF = 'CORR'       R_DATA = new ZVCXI_P1SS_S_FDI_CORR(      SCORE_FAALL = ABAP_TRUE ) )
                                      ( IPARE = 'CONV'    ISELF = 'CSTEP_SSS'  R_DATA = new ZVCXI_P1SS_S_FDI_CSTEP_SSS( DIMEN       = ZCL_VCXI_P1SS_PR_CSTEP_SSS=>C_DIMEN_LENGTH
                                                                                                                        NOUTT       = 1
                                                                                                                        SCORE_FAALL = ABAP_TRUE ) )
                                    )
                  ) to CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.


***--------------------------------------------------------------------------------------
    case ME->F_FDMDL.
      when 'CFG'.
***     Add Finished Good
        append value #( IPARE = 'OUTPUT'  ISELF = 'CFG' ) to <S_FASTD_XCOMP>-T_DATA.

      when 'CRPART'.
***     Create new Connection
        append ME->GET_NEW_XCONG( ) to CT_XCONG assigning <S_XCONG>.
        append value #( IPARE = 'OUTPUT'  ISELF = 'CRCONO'      R_DATA  = new ZVCXI_PXSS_S_FDI_XCONO( GXCON = <S_XCONG>-GXCON_OUT )
                                                                T_FDMEX = value #( ( conv #( 'NOUTT' ) ) ( conv #( 'MRP' ) ) )
                      ) to <S_FASTD_XCOMP>-T_DATA.

***     Add Part
        assign CT_FASTD_XCOMP[ ID = 'COMP_P3' ] to <S_FASTD_XCOMP>.
        append value #( IPARE = 'CSTEP_ASMBL'  ISELF = 'CRPART'
                      ) to <S_FASTD_XCOMP>-T_DATA.
        append value #( IPARE = 'CRPART'       ISELF = 'CRCONI'   R_DATA  = new ZVCXI_PXSS_S_FDI_XCONI( GXCON = <S_XCONG>-GXCON_IN )
                      ) to <S_FASTD_XCOMP>-T_DATA.

    endcase.

  endmethod.
  method GET_INIT_SHT.

    data: LF_INDEX type I.
    field-symbols: <S_FASTD_XCOMP>      type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_FASTD_XCOMP_DATA> type ZVCXI_PXSS_S_FASTD_XCOMP_DATA,
                   <S_XCONG>            type ZVCXI_PXSS_S_XCONG.


***--------------------------------------------------------------------------------------
*** Define Structure
    append value #( ID     = 'COMP_P1'
                    XCSTY  = ZCL_VCXI_PXSS_BL_FASTD=>C_XCSTY_SPEC  "Specification-based Component
                    T_DATA = value #( ( IPARE = 'INPUT'   ISELF = 'CORR'  R_DATA = new ZVCXI_P1SS_S_FDI_CORR( SCORE_FAALL = ABAP_TRUE ) )
                                    )
                  ) to CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.


***--------------------------------------------------------------------------------------
    case ME->F_FDMDL.
      when C_FDMDL_CFG.
***     Add Finished Good
        append value #( IPARE = 'OUTPUT'  ISELF = 'CFG'  R_DATA = new ZVCXI_P1SS_S_FDI_CFG( FEFCO = '0110'
                                                                                            FLUTO = 'V'
                                                                                            JOIPO = ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_JOIPO_NONE )
                                                         T_FDMEX = value #( ( conv #( 'NOUTT' ) )
                                                                            ( conv #( 'COMPR' ) ) )
                      ) to <S_FASTD_XCOMP>-T_DATA.

      when C_FDMDL_CRPART.
***     Create new Connection
        append ME->GET_NEW_XCONG( ) to CT_XCONG assigning <S_XCONG>.
        append value #( IPARE = 'OUTPUT'  ISELF = 'CRCONO'      R_DATA  = new ZVCXI_PXSS_S_FDI_XCONO( GXCON = <S_XCONG>-GXCON_OUT )
*** Add MRP field to Exclude List for initial Fast Data Call
                                                                T_FDMEX = value #( ( conv #( 'NOUTT' ) ) ( conv #( 'MRP' ) ) )
                      ) to <S_FASTD_XCOMP>-T_DATA.

***     Add Part
        assign CT_FASTD_XCOMP[ ID = 'COMP_P3' ] to <S_FASTD_XCOMP>.
        append value #( IPARE = 'CSTEP_ASMBL'  ISELF = 'CRPART'   R_DATA = new ZVCXI_P1SS_S_FDI_CRPART( FEFCO = '0110'
                                                                                                        FLUTO = 'V'
                                                                                                        JOIPO = ZCL_VCXI_PXSS_PR_SCORE_MGR=>C_JOIPO_NONE )
                                                                  T_FDMEX = value #( ( conv #( 'PARAT' ) ) )
                      ) to <S_FASTD_XCOMP>-T_DATA.
        append value #( IPARE = 'CRPART'       ISELF = 'CRCONI'   R_DATA  = new ZVCXI_PXSS_S_FDI_XCONI( GXCON = <S_XCONG>-GXCON_IN )
                      ) to <S_FASTD_XCOMP>-T_DATA.

      when C_FDMDL_CRSHT.
***     Create new Connection
        append ME->GET_NEW_XCONG( ) to CT_XCONG assigning <S_XCONG>.
        append value #( IPARE = 'OUTPUT'  ISELF = 'CRCONO'      R_DATA  = new ZVCXI_PXSS_S_FDI_XCONO( GXCON = <S_XCONG>-GXCON_OUT )
*** Add MRP field to Exclude List for initial Fast Data Call
                                                                T_FDMEX = value #( ( conv #( 'NOUTT' ) ) ( conv #( 'MRP' ) ) )
                      ) to <S_FASTD_XCOMP>-T_DATA.

***     Find Sheet Placeholder in Lamination Step
        loop at CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
          check LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = C_XSHT_PLACEHOLDER ] ).
          LF_INDEX = LINE_INDEX( <S_FASTD_XCOMP>-T_DATA[ ISELF = C_XSHT_PLACEHOLDER ] ).

***       Replace Placeholder
          assign <S_FASTD_XCOMP>-T_DATA[ ISELF = C_XSHT_PLACEHOLDER ] to <S_FASTD_XCOMP_DATA>.
          <S_FASTD_XCOMP_DATA>-ISELF = 'CRSHT'.

***       Add Connection In
          insert value #( IPARE = 'CRSHT'       ISELF = 'CRCONI'   R_DATA  = new ZVCXI_PXSS_S_FDI_XCONI( GXCON = <S_XCONG>-GXCON_IN )
                        ) into <S_FASTD_XCOMP>-T_DATA index LF_INDEX + 1.
        endloop.

    endcase.

  endmethod.
  method MERGE_FASTD_XCOMP.

    data: LS_FASTD_XCOMP_DATA type ZVCXI_PXSS_S_FASTD_XCOMP_DATA,
          LS_FASTD_XCOMP      type ZVCXI_PXSS_S_FASTD_XCOMP.
    data: LR_GATE_XCOMP type ref to /VCXI/CL_VKSR_GATE.
    field-symbols: <S_FASTD_XCOMP> type ZVCXI_PXSS_S_FASTD_XCOMP,
                   <S_FDI_XCONO>   type ANY,
                   <S_FDI_XCONI>   type ANY.


***--------------------------------------------------------------------------------------
*** Search for Component with requested Element
    loop at CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
      check not LINE_EXISTS( IT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP>-R_GATE ] ).

      check LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = IF_ISELF ] ) and
            LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CRCONO' ] ).

***   Identify Connection Out and then remove it
      LS_FASTD_XCOMP_DATA = <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CRCONO' ].
      assign LS_FASTD_XCOMP_DATA-R_DATA->* to <S_FDI_XCONO>.
      delete <S_FASTD_XCOMP>-T_DATA where ISELF = LS_FASTD_XCOMP_DATA-ISELF.

***   Keep Gate of Component
      LR_GATE_XCOMP = <S_FASTD_XCOMP>-R_GATE.
    endloop.
    check <S_FDI_XCONO> is assigned.

***--------------------------------------------------------------------------------------
*** Search for Connection In
    loop at CT_FASTD_XCOMP assigning <S_FASTD_XCOMP>.
      check not LINE_EXISTS( IT_GATE_EXCLUDE[ TABLE_LINE = <S_FASTD_XCOMP>-R_GATE ] ).

      check LINE_EXISTS( <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CRCONI' ] ).

***   Identify Connection In
      LS_FASTD_XCOMP_DATA =  <S_FASTD_XCOMP>-T_DATA[ ISELF = 'CRCONI' ].
      assign LS_FASTD_XCOMP_DATA-R_DATA->* to  <S_FDI_XCONI>.

***   Check if components are connected
      assign component 'GXCON' of structure <S_FDI_XCONO> to field-symbol(<F_GXCON_OUT>).
      assign component 'GXCON' of structure <S_FDI_XCONI> to field-symbol(<F_GXCON_IN>).
      check LINE_EXISTS( CT_XCONG[ GXCON_OUT = <F_GXCON_OUT>
                                   GXCON_IN  = <F_GXCON_IN> ] ).

***   Remove Connection In and the Connection itself
      delete <S_FASTD_XCOMP>-T_DATA where ISELF = LS_FASTD_XCOMP_DATA-ISELF.
      delete CT_XCONG where GXCON_OUT = <F_GXCON_OUT>
                       and  GXCON_IN  = <F_GXCON_IN>.

***   Combine Components
      append lines of corresponding ZVCXI_PXSS_TT_FASTD_XCOMP_DATA( CT_FASTD_XCOMP[ R_GATE = LR_GATE_XCOMP ]-T_DATA
                                                                    except R_GATE GATKY  )
                   to <S_FASTD_XCOMP>-T_DATA.
      delete CT_FASTD_XCOMP where R_GATE = LR_GATE_XCOMP.
    endloop.

  endmethod.
