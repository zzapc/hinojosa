
class YCL_HP_SVCS_UI_CSTEP_DCUT definition
  public
  inheriting from ZCL_VCXI_P1SS_UI_CSTEP_DCUT
  create public .

public section.

  data S_HP_CSTEP_DCUT_VIS type YHP_SVCS_S_CSTEP_DCUT_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_VIS_HP
    importing
      !IS_CSTEP_VIS type YHP_SVCS_S_CSTEP_DCUT_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_SVCS_CSTEP_DCUT type ref to YCL_HP_SVCS_PR_CSTEP_DCUT .

  methods INIT_VIS
    redefinition .
private section.
endclass. "YCL_HP_SVCS_UI_CSTEP_DCUT definition
class YCL_HP_SVCS_UI_CSTEP_DCUT implementation.
  method ACTIVATE.

  SUPER->ACTIVATE( ).

*** Bind UI to Dynpro
  call function 'YHP_SVCS_UI_CSTEP_DCUT_BIND'
    exporting
      IR_UI_CSTEP_DCUT = ME
    importing
      ES_DYNP        = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.
    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).

*** Assign the RP Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_SVCS_CSTEP_DCUT.
      catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.
  endmethod.
  method DO_MODIFY_SCREEN.


    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).
***----------------------------------------------------------------------------
***     Modify Screen
        loop at screen.
***       Disable Alternative Tool Desciption for existing Tools
          if ME->S_CSTEP_DCUT_VIS-DCTTN is initial.
            if SCREEN-NAME cp '*LTTO1D'.
              SCREEN-INPUT      = 0.
            endif.
            if SCREEN-NAME cp '*LTTO2D'.
              SCREEN-INPUT      = 0.
            endif.
          endif.

          if ME->S_CSTEP_DCUT_VIS-DCTTN is not initial.
            if SCREEN-NAME cp '*LTTO1D'.
              SCREEN-INPUT      = 0.
              SCREEN-DISPLAY_3D = 0.
            endif.
            if SCREEN-NAME cp '*LTTO2D'.
              SCREEN-INPUT      = 0.
              SCREEN-DISPLAY_3D = 0.
            endif.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into data(LR_CX_CKX).
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_UPDATE_VIS_HP.

    data: LS_CSTEP_DCUT_VIS type ZVCXI_P1SS_S_CSTEP_DCUT_VIS.

    LS_CSTEP_DCUT_VIS = corresponding #( IS_CSTEP_VIS ).

    ME->DO_UPDATE_VIS( IS_CSTEP_VIS = LS_CSTEP_DCUT_VIS ).

*** Channel
    if ME->S_HP_CSTEP_DCUT_VIS-CHANEL ne IS_CSTEP_VIS-CHANEL.
      ME->R_PR_SVCS_CSTEP_DCUT->SET_CHANEL( IF_CHANEL = IS_CSTEP_VIS-CHANEL
                                      IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Alternative tool 1
    if ME->S_HP_CSTEP_DCUT_VIS-ALTTO1 ne IS_CSTEP_VIS-ALTTO1.
       ME->R_PR_SVCS_CSTEP_DCUT->SET_ALTTO1( IF_ALTTO1 = IS_CSTEP_VIS-ALTTO1
                                            IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Description Alternative tool 1
    if ME->S_HP_CSTEP_DCUT_VIS-ALTTO1D ne IS_CSTEP_VIS-ALTTO1D.
       ME->R_PR_SVCS_CSTEP_DCUT->SET_ALTTO1D( IF_ALTTO1D = IS_CSTEP_VIS-ALTTO1D
                                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Alternative tool 2
    if ME->S_HP_CSTEP_DCUT_VIS-ALTTO2 ne IS_CSTEP_VIS-ALTTO2.
       ME->R_PR_SVCS_CSTEP_DCUT->SET_ALTTO2( IF_ALTTO2 = IS_CSTEP_VIS-ALTTO2
                                             IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Description Alternative tool 2
    if ME->S_HP_CSTEP_DCUT_VIS-ALTTO2D ne IS_CSTEP_VIS-ALTTO2D.
       ME->R_PR_SVCS_CSTEP_DCUT->SET_ALTTO2D( IF_ALTTO2D = IS_CSTEP_VIS-ALTTO2D
                                              IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method INIT_VIS.

    SUPER->INIT_VIS( ).

    S_HP_CSTEP_DCUT_VIS = corresponding #( ME->S_CSTEP_DCUT_VIS ).

***   Channel
    move ME->R_PR_SVCS_CSTEP_DCUT->GET_CHANEL( )  to ME->S_HP_CSTEP_DCUT_VIS-CHANEL.

***   Alternative Tool 1
    move ME->R_PR_SVCS_CSTEP_DCUT->GET_ALTTO1( )  to ME->S_HP_CSTEP_DCUT_VIS-ALTTO1.

***   Alternative Tool 2
    move ME->R_PR_SVCS_CSTEP_DCUT->GET_ALTTO2( )  to ME->S_HP_CSTEP_DCUT_VIS-ALTTO2.

***  Descrption Alternative Tool 1
    move ME->R_PR_SVCS_CSTEP_DCUT->GET_ALTTO1D( )  to ME->S_HP_CSTEP_DCUT_VIS-ALTTO1D.

*** Description  Alternative Tool 2
    move ME->R_PR_SVCS_CSTEP_DCUT->GET_ALTTO2D( )  to ME->S_HP_CSTEP_DCUT_VIS-ALTTO2D.

  endmethod.
