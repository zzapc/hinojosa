
class YCL_HP_SMD_MBQ_SRV_STATUS definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_L100
  create public .

public section.

  class-methods CHECK_STATUS
    importing
      !IR_RPSEG type ref to /VCXI/CL_CKMR_RPSEG
      !IT_DCO type /VCXI/CKMR_TT_CLDCO
    returning
      value(RT_DCO) type /VCXI/CKMR_TT_CLDCO .
protected section.
private section.
endclass. "YCL_HP_SMD_MBQ_SRV_STATUS definition
class YCL_HP_SMD_MBQ_SRV_STATUS implementation.
  method CHECK_STATUS.
    data: LT_DCO type /VCXI/CKMR_TT_CLDCO.
    data: LR_DCO type ref to /VCXI/CL_CKMR_CLDCO.
    data: LR_DCO_SDOC type ref to ZCL_VCXI_XCM_MBQ_DCO_SDOC.
    data : LR_STP_L100 type ref to ZCL_VCXI_XCM_MBQ_STP_L100.
    field-symbols: <LS_VBAP> type VBAP.
    move IT_DCO to LT_DCO.
    refresh RT_DCO.
    loop at LT_DCO into LR_DCO.
      try.
          LR_DCO_SDOC =  cast #( LR_DCO ).
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.
      try.
          create OBJECT LR_STP_L100
            exporting
              IR_RPSEG     =   IR_RPSEG  " VCXI: Runtime Process Segment
            .
*            catch /VCXI/CX_CKX.    "
        catch CX_SY_MOVE_CAST_ERROR.
          continue.
      endtry.

      read table LR_STP_L100->R_DCO_INPUT->R_BOB_SDOC->T_VBAP assigning <LS_VBAP> with key POSNR = LR_DCO_SDOC->F_POSNR.
      if SY-SUBRC = 0.
        if <LS_VBAP>-ZSTATP eq YCL_HP_SMD_MBQ_BL_CRCOMP=>C_ZSTATP_SMD.
          append LR_DCO to RT_DCO.
        else.
          LR_STP_L100->R_RPSEG->R_MSG->ADD_MESSAGE( exporting IF_MSGID = 'YHP_SMD_MBQ'
                                        IF_MSGTY = 'E'
                                        IF_MSGNO = '012'
                                        IF_MSGV1 = LR_DCO_SDOC->F_POSNR ).
        endif.
      endif.
    endloop.
  endmethod.
endclass. "YCL_HP_SMD_MBQ_SRV_STATUS implementation
