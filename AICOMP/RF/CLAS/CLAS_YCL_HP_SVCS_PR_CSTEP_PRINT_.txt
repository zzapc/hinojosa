
class YCL_HP_SVCS_PR_CSTEP_PRINT definition
  public
  inheriting from ZCL_VCXI_P1SS_PR_CSTEP_PRINT
  create public .

public section.

  constants C_PARID_BCCQM type /VCXI/VKS_PARID value 'YHP_SVC_BCCQM' ##NO_TEXT.
  constants C_PARID_NOSAM type /VCXI/VKS_PARID value 'YHP_SVC_NOSAM' ##NO_TEXT.
  constants C_PARID_PRSAM type /VCXI/VKS_PARID value 'YHP_SVC_PRSAM' ##NO_TEXT.

  methods GET_NOSAM
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_NOSAM) type YHP_SVCS_NOSAM
    raising
      /VCXI/CX_CKX .
  methods GET_BCCQM
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_BCCQM) type YHP_SVCS_BCCQM
    raising
      /VCXI/CX_CKX .
  methods GET_PRSAM
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !EF_DESCR type /VCXI/CKX_DESCR
    returning
      value(RF_PRSAM) type YHP_SVCS_PRSAM
    raising
      /VCXI/CX_CKX .
  methods SET_NOSAM
    importing
      !IF_NOSAM type YHP_SVCS_NOSAM optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_BCCQM
    importing
      !IF_BCCQM type YHP_SVCS_BCCQM optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods SET_PRSAM
    importing
      !IF_PRSAM type YHP_SVCS_PRSAM optional
      !IF_SETBY type /VCXI/VKSR_SETBY default 'CALC'
    raising
      /VCXI/CX_CKX .
  methods GET_NOCOL_EXCL_GEINK
    returning
      value(RF_NOCOL) type ZVCXI_P0S_NOCOL
    raising
      /VCXI/CX_CKX .

  methods GET_STATUS
    redefinition .
  methods GET_STATUS_MSG
    redefinition .
  methods HANDLE_EVENT
    redefinition .
  methods ZIF_VCXI_PXSS_PRINT~CREATE_DESDO
    redefinition .
  methods ZIF_VCXI_PXSS_PRINT~GET_TPRIN
    redefinition .
protected section.

  constants C_IEVNT_I_INIT_TOOL type /VCXI/VKSC_IEVNT value 'INIT_TOOL' ##NO_TEXT.
  constants C_IEVNT_O_BCCQM_CHANGED type /VCXI/VKSC_IEVNT value 'BCCQM_CHANGED' ##NO_TEXT.
  constants C_PARID_MSGID type SYMSGID value 'YHP_SVC' ##NO_TEXT.
  constants C_IEVNT_O_PRSAM_CHANGED type /VCXI/VKSC_IEVNT value 'PRSAM_CHANGED' ##NO_TEXT.

  methods CHECK_BCCQM
    importing
      !IR_MESSAGE type ref to /VCXI/CL_CKXM_MESSAGE optional
    returning
      value(RF_ELMST) type /VCXI/VKSR_ELMST
    raising
      /VCXI/CX_CKX .
  methods HANDLE_INIT_TOOL
    raising
      /VCXI/CX_CKX .
  methods CREATE_TOOL
    returning
      value(RR_GATE_TOOL) type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .

  methods CHECK_TPRIN
    redefinition .
private section.
endclass. "YCL_HP_SVCS_PR_CSTEP_PRINT definition
class YCL_HP_SVCS_PR_CSTEP_PRINT implementation.
  method CHECK_BCCQM.
*** Check Bar Code Control Quality on Machine
    if ME->GET_BCCQM( ) is not initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
      if IR_MESSAGE is bound.
***    Bar Code Control Quality on Machine is maintained.
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'YHP_SVC'
                                 IF_MSGTY = 'S'
                                 IF_MSGNO = '004' ).
      endif.
    else.
      if ZCL_VCXI_XCDR_SERVICE=>IS_FUNCTION_ACTIVE( IR_GATE      = ME->R_GATE
                                                     IF_IFUNC     = 'CHECK_BCCQM' ).

        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
        if IR_MESSAGE is bound.
***     Bar Code Control Quality on Machine is not maintained.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'YHP_SVC'
                                   IF_MSGTY = 'E'
                                   IF_MSGNO = '005' ).
        endif.
      else.
        RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_G.
        if IR_MESSAGE is bound.
***    Bar Code Control Quality on Machine check was ignored.
          IR_MESSAGE->ADD_MESSAGE( IF_MSGID = 'YHP_SVC'
                                   IF_MSGTY = 'S'
                                   IF_MSGNO = '017' ).
        endif.
      endif.

    endif.
  endmethod.
  method CHECK_TPRIN.

    RF_ELMST = SUPER->CHECK_TPRIN( ).

***------------------------------------------------------------------------------------------------
*** Check Print Type
    check  ME->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( ) is not initial.

***------------------------------------------------------------------------------------------------
*** Check Print Type not allowed
    read table YCL_HP_SVCS_CUST_PRINT=>T_TD037 with key CENTRO = ME->ZIF_VCXI_XCSS_TUSER~GET_WERKS( )
                                                        CALIDAD = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( )->F_SABOA
                                                        PARAMETRO = ZIF_VCXI_PXSS_PRINT=>C_PARID_TPRIN
                                                        VALOR = ME->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( )
                                                        transporting no fields.
    if SY-SUBRC is initial.
      RF_ELMST = /VCXI/CL_VKSR_SERVICE=>C_ELMST_R.
      if IR_MESSAGE is bound.
***------------------------------------------------------------------------------------------------
***     Print Type is not allowed
        IR_MESSAGE->ADD_MESSAGE( IF_MSGID = C_PARID_MSGID
                                 IF_MSGTY = SY-ABCDE+4(1)
                                 IF_MSGNO = 19
                                 IF_MSGV1 = ME->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( )
                                 IF_MSGV2 = ME->ZIF_VCXI_P1SS_COMM_NEXT~GET_CRFPX( )->F_SABOA ).
      endif.
    endif.

  endmethod.
  method CREATE_TOOL.

    data:  LS_PRVDR_DEF type /VCXI/VKSR_S_PRVDR_DEF.
    data:  LT_PRVDR_DEF type /VCXI/VKSR_TT_PRVDR_DEF.

*** Get Tool Handling Provider
    LT_PRVDR_DEF = ME->R_GATE->GET_PRVDR_DEF( IF_IPRVT = YCL_HP_SVCS_PR_TOOL=>C_IPRVT_HP_TOOL
                                              IF_TPRVR = /VCXI/IF_VKSC_REGELMNT_PRVTY=>C_TPRVR_CHILD ).
    if LINES( LT_PRVDR_DEF ) ne 1.
*** Provider &1 is not available for &2.
      /VCXI/CX_CKX=>RAISE_CKX_WITH_MESSAGE(
          IF_MSGTY = 'E'
          IF_MSGID = 'ZVCXI_XCS'
          IF_MSGNO = '010'
          IF_MSGV1 = YCL_HP_SVCS_PR_TOOL=>C_IPRVT_HP_TOOL
          IF_MSGV2 = ME->R_GATE->F_ID ).
    endif.

    read table LT_PRVDR_DEF into LS_PRVDR_DEF index 1.

*** Create Tool Handling
    RR_GATE_TOOL = ME->R_GATE->CREATE_ELEMENT( IF_ID = LS_PRVDR_DEF-ID ).

    if RR_GATE_TOOL              is bound     and
       RR_GATE_TOOL->IS_INUSE( ) ne ABAP_TRUE.
      RR_GATE_TOOL->SET_INUSE( IF_INUSE = ABAP_TRUE ).
    endif.

  endmethod.
  method GET_BCCQM.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BCCQM  ).
    move LS_PARAM-ATWRT to RF_BCCQM.
    move LS_PARAM-SETBY to EF_SETBY.
  endmethod.
  method GET_NOCOL_EXCL_GEINK.

    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_INK type ref to YCL_HP_SVCS_PR_MS_INK.

*** Get all Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.

      "filter1 - ignore generic inks
      move LR_GATE->R_CLSPR ?to LR_PR_MS_INK.
      if LR_PR_MS_INK->GET_INKTN( ) is not initial.
        continue.
      endif.

      add 1 to RF_NOCOL.
    endloop.

  endmethod.
  method GET_NOSAM.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOSAM  ).
    move LS_PARAM-ATFLV to RF_NOSAM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_PRSAM.

    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRSAM ).
    move LS_PARAM-ATFLV to RF_PRSAM.
    move LS_PARAM-SETBY to EF_SETBY.

  endmethod.
  method GET_STATUS.

    RF_ELMST = SUPER->GET_STATUS( ).

***----------------------------------------------------------------------------
*** Check Bar Code Control Quality on Machine
    RF_ELMST = /VCXI/CL_VKSR_SERVICE=>MERGE_ELMST( IF_ELMST1 = RF_ELMST
                                                   IF_ELMST2 = ME->CHECK_BCCQM( ) ).

  endmethod.
  method GET_STATUS_MSG.

    SUPER->GET_STATUS_MSG( IR_MESSAGE = IR_MESSAGE ).

***----------------------------------------------------------------------------
*** Check Bar Code Control Quality on Machine
    ME->CHECK_BCCQM( IR_MESSAGE = IR_MESSAGE ).

  endmethod.
  method HANDLE_EVENT.

    SUPER->HANDLE_EVENT( IF_IEVNT         = IF_IEVNT
                         IT_GATE_PROVIDER = IT_GATE_PROVIDER ).

    case IF_IEVNT.
      when C_IEVNT_I_INIT_TOOL.
        ME->HANDLE_INIT_TOOL( ).

    endcase.

  endmethod.
  method HANDLE_INIT_TOOL.

    data: LF_POST_MBQ    type         ABAP_BOOL.
    data: LT_GATE        type         /VCXI/VKSR_TT_GATE.
    data: LR_GATE    type ref to  /VCXI/CL_VKSR_GATE,
          LR_PR_TOOL type ref to  YCL_HP_SVCS_PR_TOOL,
          LR_APPDATA type ref to  ZCL_VCXI_XCS_APPDATA.
    field-symbols: <F_MATNR>  type    MATNR.

*** Check Application Context for Post-MBQ
    LR_APPDATA ?= ME->R_GATE->GET_APPDATA( ).
    read table LR_APPDATA->T_APPE with key IAPPE = 'MATERIAL' transporting no fields. " do not check for ne QUOTATION since in MBQ we have no Environments
    if SY-SUBRC eq 0.
      LF_POST_MBQ = ABAP_TRUE.
    endif.
*** Check Material number for Post-MBQ
    if LF_POST_MBQ eq ABAP_FALSE.
*      LR_APPDATA->GET_LOVC_APPDATA( exporting IF_TNAME = 'VBAP'       " this is not filled in all cases
*                                    changing  CS_DATA  = LS_VBAP ).
      assign ('(SAPMV45A)VBAP-MATNR') to <F_MATNR>.
      if SY-SUBRC eq 0.
        find regex '[0-9]{5}( )*$' in <F_MATNR>.  " Material number ends with at least 5 digits
        if SY-SUBRC eq 0. " Check for Finished Good material number
          LF_POST_MBQ = ABAP_TRUE.
        endif.
      endif.
    endif.

***------------------------------------------------------------------------------------------------
*** Set Tool Handling if Die Cut Tool Number is blank
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = YCL_HP_SVCS_PR_TOOL=>C_IPRVT_HP_TOOL
                                     IF_INUSE = ABAP_TRUE ).

    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_TOOL.
        catch CX_SY_MOVE_CAST_ERROR.
          clear: LR_PR_TOOL.
      endtry.
    endloop.


    "get number design ADD IRC 03/07/2023
    data ER_BL_DOC type ZVCXI_PXS_DESDO.
    ER_BL_DOC = ME->ZIF_VCXI_PXSS_PRINT~GET_DESDO( ).
    """"ADD IRC

*** Free Tool Handling
    if ME->ZIF_VCXI_PXSS_PRINT~GET_DESDO( ) or
       LF_POST_MBQ eq ABAP_TRUE. " remove tool handling for non PRE-MBQ SVC (Defect 3)
      if LR_PR_TOOL is bound.
        LR_PR_TOOL->DO_FREE( ).
        free: LR_PR_TOOL.
        "ADD IRC 03/07/23
      elseif ER_BL_DOC is initial and LR_PR_TOOL is not bound.
*** Set Tool Handling
***   Create Tool Hanlding
        ME->CREATE_TOOL( ).
        "Add IRC 03/07/23
      endif.

    else.
*** Set Tool Handling
      if LR_PR_TOOL is not bound.
***   Create Tool Hanlding
        ME->CREATE_TOOL( ).

      endif.
    endif.

  endmethod.
  method SET_BCCQM.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_BCCQM ).

    move IF_BCCQM to LS_PARAM-ATWRT.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BCCQM_CHANGED ).
    endif.
  endmethod.
  method SET_NOSAM.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_NOSAM ).

    move IF_NOSAM to LS_PARAM-ATFLV.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

*    if LF_CHANGED eq ABAP_TRUE.
****   Send Event
*      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_BCCQM_CHANGED ).
*    endif.

  endmethod.
  method SET_PRSAM.

    data:  LF_CHANGED type ABAP_BOOL.
    data:  LS_PARAM   type /VCXI/VKSR_S_PARAM.

    LS_PARAM = ME->R_GATE->GET_PARAM( IF_PARID = C_PARID_PRSAM ).

    move IF_PRSAM to LS_PARAM-ATFLV.
    move IF_SETBY to LS_PARAM-SETBY.

    LF_CHANGED = ME->R_GATE->SET_PARAM( IS_PARAM = LS_PARAM ).

    if LF_CHANGED eq ABAP_TRUE.
***   Send Event
      ME->R_GATE->SET_EVENT( IF_IEVNT = C_IEVNT_O_PRSAM_CHANGED ).
    endif.

  endmethod.
  method ZIF_VCXI_PXSS_PRINT~CREATE_DESDO.

    data: LT_PDINK type ZVCXI_PXE_DMS_TT_PDINK.
    data: LR_PR_DOC_MGR type ref to ZCL_VCXI_XCSS_PR_DOC_MGR,
          LR_DMSEXT_PD  type ref to ZCL_VCXI_PXE_DMS_DMSEXT_PD,
          LR_GATE       type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_INK  type ref to ZCL_VCXI_PXSS_PR_MS_INK.


***--------------------------------------------------------------------------------------
*** Get Document Manager Provider
    LR_PR_DOC_MGR = ME->GET_PRVDR_DOC_MGR( ).
    check LR_PR_DOC_MGR is bound.

*** Add Document Instance
    LR_PR_DOC_MGR->ADD_DOCS( IT_DOC_KEY = value #( ( IR_BL_DOC->GET_DOC_KEY( ) ) ) ).

***--------------------------------------------------------------------------------------
*** Get instance of DMS Data Extension for Print Design
    try.
        LR_DMSEXT_PD ?= ZCL_VCXI_PXE_DMS_DMSEXT_PD=>/VCXI/IF_CKX_OBJECT~GET_INSTANCE( IF_GUID = ZCL_VCXI_XCSS_BL_DOC=>ENCRYPT_GUID( IF_DOKAR = IR_BL_DOC->F_DOKAR
                                                                                                                                    IF_DOKNR = IR_BL_DOC->F_DOKNR
                                                                                                                                    IF_DOKTL = IR_BL_DOC->F_DOKTL
                                                                                                                                    IF_DOKVR = IR_BL_DOC->F_DOKVR ) ).
      catch CX_SY_MOVE_CAST_ERROR into data(LR_CX_SY_MOVE_CAST_ERROR).
        /VCXI/CX_CKX=>RAISE_CKX_BY_PREVIOUS( IR_PREVIOUS = LR_CX_SY_MOVE_CAST_ERROR ).
    endtry.

*** Collect Inks Information
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_MS_DINK=>C_IPRVT_PX_MS_DINK
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ) into LR_GATE.
      append cast ZCL_VCXI_PXSS_PR_MS_DINK( LR_GATE->R_CLSPR )->GET_PDINK( ) to LT_PDINK.
    endloop.
    loop at ME->R_GATE->GET_PRVDR( IF_IPRVT  = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                   IF_INUSE  = ABAP_TRUE
                                   IF_SORTED = ABAP_TRUE ) into LR_GATE.
      append cast YCL_HP_SVCS_PR_MS_INK( LR_GATE->R_CLSPR )->GET_PDINK( ) to LT_PDINK.
    endloop.

*** Update Values
    LR_DMSEXT_PD->SET_PD( IS_PD = ME->GET_PD( ) ).
    LR_DMSEXT_PD->SET_PDINK( IT_PDINK = LT_PDINK ).

*** Call Save in order to set the values during saving
    LR_DMSEXT_PD->SAVE( IF_UPDATE_TASK = ABAP_TRUE ).

***--------------------------------------------------------------------------------------
*** Set Design Document
    ME->SET_DESDO( IF_DESDO = conv #( ZCL_VCXI_XCSS_BL_DOC=>ENCRYPT_GUID( IF_DOKAR = IR_BL_DOC->F_DOKAR
                                                                          IF_DOKNR = IR_BL_DOC->F_DOKNR
                                                                          IF_DOKTL = IR_BL_DOC->F_DOKTL
                                                                          IF_DOKVR = IR_BL_DOC->F_DOKVR ) ) ).

  endmethod.
  method ZIF_VCXI_PXSS_PRINT~GET_TPRIN.
    try.
        call method SUPER->ZIF_VCXI_PXSS_PRINT~GET_TPRIN
          importing
            EF_PRTEC = EF_PRTEC
            EF_SETBY = EF_SETBY
            EF_DESCR = EF_DESCR
          receiving
            RF_TPRIN = RF_TPRIN.
      catch /VCXI/CX_CKX .
    endtry.
  endmethod.
