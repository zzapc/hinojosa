
class YCL_HP_SMD_MBQ_STP_S901 definition
  public
  inheriting from ZCL_VCXI_XCM_MBQ_STP_S000
  final
  create public .

public section.

  methods EXECUTE
    redefinition .
protected section.
private section.
endclass. "YCL_HP_SMD_MBQ_STP_S901 definition
class YCL_HP_SMD_MBQ_STP_S901 implementation.
  method EXECUTE.

    data: LS_MATLI      type ZVCXI_XCM_MBQ_S_MATLI,
          LS_MATLI_HEAD type ZVCXI_XCM_MBQ_S_MATLI.
    data: LS_TD100 type YRF_SMD_TD100.
    data: LR_ACTDAT  type ref to DATA.
    field-symbols: <S_ACTDAT_TLR> type YHP_SMD_MBQ_S_ACTDAT_TLR.


    try.
***     Get Material List Entry of active Material List Entry
        LS_MATLI = ME->R_DCO_INPUT->T_MATLI[ MLCNT = ME->R_DCO_INPUT->F_MLCNT ].

***     Check Activity - Create Tool Record
        if not LINE_EXISTS( LS_MATLI-T_ACTCON[ ACTID = YCL_HP_SMD_MBQ_CUST=>C_ACTID_TLR ] ).
***       Set Status to CANCELED
          ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_CANCELED ).
          return.
        endif.

***     Load Activity Control Data for Configuration
        LR_ACTDAT = LS_MATLI-T_ACTCON[ ACTID = YCL_HP_SMD_MBQ_CUST=>C_ACTID_TLR ]-R_ACTDAT.
        assign LR_ACTDAT->* to <S_ACTDAT_TLR>.

***     Get Header Material List
        " From the FG level source first (in case of a MULTI configurable)
        if <S_ACTDAT_TLR>-FG_LEVEL_SOURCE is not initial.
          LS_MATLI_HEAD = ME->R_DCO_INPUT->T_MATLI[ LEVEL_SOURCE = <S_ACTDAT_TLR>-FG_LEVEL_SOURCE ].
        endif.

        "If not take it from the main FG (SINGLE)
        if LS_MATLI_HEAD is initial.
          LS_MATLI_HEAD = ME->R_DCO_INPUT->T_MATLI[ MLCNT = 1 ].
        endif.

***     Create Tool Record in database table
        LS_TD100-MATNR = LS_MATLI_HEAD-MATNR.
        LS_TD100-WERKS = <S_ACTDAT_TLR>-WERKS.
        case <S_ACTDAT_TLR>-SOKEY.
          when YCL_HP_SMD_MBQ_BL_CRCOMP=>C_SOKEY_TOOL_DCT.
            LS_TD100-DCUTT = ABAP_TRUE.
          when YCL_HP_SMD_MBQ_BL_CRCOMP=>C_SOKEY_TOOL_SET_PRINT.
            LS_TD100-PRTON = ABAP_TRUE.
        endcase.
        LS_TD100-KUNAG = <S_ACTDAT_TLR>-KUNAG.
        LS_TD100-KUNWE = <S_ACTDAT_TLR>-KUNWE .
        LS_TD100-TOLNR = LS_MATLI-MATNR.
        LS_TD100-VKORG = <S_ACTDAT_TLR>-VKORG.
        LS_TD100-VTWEG = <S_ACTDAT_TLR>-VTWEG.
        LS_TD100-SPART = <S_ACTDAT_TLR>-SPART.
        LS_TD100-TLORD = <S_ACTDAT_TLR>-TLORD.
        LS_TD100-SEPAR = <S_ACTDAT_TLR>-SOCTR.
*        LS_TD100-IEALI = LS_MATLI-TOOL_IEALI.

        insert YRF_SMD_TD100 from LS_TD100.
        commit work and wait.

***     Status message successful update
        ME->R_RPSEG->R_MSG->ADD_MESSAGE( IF_MSGID = 'YHP_SMD_MBQ'
                                         IF_MSGTY = 'S'
                                         IF_MSGNO = '007'
                                         IF_MSGV1 = LS_MATLI-MATNR ).

***     Set Status to Complete
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_COMPLETED ).

***--------------------------------------------------------------------------------------
      catch /VCXI/CX_CKX into data(LR_CX_CKX).
***     Set Status to Error
        ME->R_RPSEG->SET_SRPSG( IF_SRPSG = /VCXI/CL_CKMR_RPSEG=>C_SRPSG_ERROR ).

***     Add Message to Message Log
        ME->R_RPSEG->R_MSG->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).

    endtry.

  endmethod.
endclass. "YCL_HP_SMD_MBQ_STP_S901 implementation
