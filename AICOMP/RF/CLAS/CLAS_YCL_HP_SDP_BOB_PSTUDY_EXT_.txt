
class YCL_HP_SDP_BOB_PSTUDY_EXT definition
  public
  final
  create public .

public section.

  types:
    begin of YS_COND,
        COND_TYPE  type BAPICOND-COND_TYPE,
        COND_VALUE type BAPICOND-COND_VALUE,
        CURRENCY   type BAPICOND-CURRENCY,
        COND_UNIT  type BAPICOND-COND_UNIT,
        COND_P_UNT type BAPICOND-COND_P_UNT,
      end of YS_COND .
  types:
    YT_COND type standard table of YS_COND .

  constants C_PRFID type YRF_RQPT_PRFID value 'PC_DEMO' ##NO_TEXT.
  constants C_CMATN type /VCXI/VKC_CMATN value 'VCXI_PC_BOX_CNF' ##NO_TEXT.
  data F_PRSTD type YRF_RQPT_PRSTD .
  data S_TD100 type YRF_RQPTS_TD100 .
  data S_TD100T type YRF_RQPTS_TD100T .
  data T_TD110 type YRF_RQPTS_TT_TD110 .
  data R_ALV_DATA type ref to DATA .
  data T_FCAT type LVC_T_FCAT .

  class-methods SET_PRSTD_GLOBAL
    importing
      !IF_PRSTD type YRF_RQPT_PRSTD
    raising
      /VCXI/CX_CKX .
  class-methods SET_PRSTD_NOLOCK_GLOBAL
    importing
      !IF_NOLOCK type ABAP_BOOL
    raising
      /VCXI/CX_CKX .
  class-methods INIT_PRSTD_GLOBAL
    raising
      /VCXI/CX_CKX .
  class-methods INIT_PRSTD_NOLOCK_GLOBAL
    raising
      /VCXI/CX_CKX .
  class-methods GET_INSTANCE
    importing
      !IF_GUID type /VCXI/CKX_GUID optional
    returning
      value(R_INSTANCE) type ref to YCL_HP_SDP_BOB_PSTUDY_EXT
    raising
      /VCXI/CX_CKX .
protected section.

  types:
    begin of YS_INSTANCE,
      GUID     type /VCXI/CKX_GUID,
      R_OBJECT type ref to YCL_HP_SDP_BOB_PSTUDY_EXT,
    end of YS_INSTANCE .
  types:
    YT_INSTANCE type standard table of YS_INSTANCE .

  class-data T_INSTANCE type YT_INSTANCE .

  methods CREATE_PRSTD
    returning
      value(RF_PRSTD) type YRF_RQPT_PRSTD
    raising
      /VCXI/CX_CKX .
  methods UPDATE_PRSTD
    importing
      !IF_PRSTD type YRF_RQPT_PRSTD
      !IF_RQPT_STATC type YRF_RQPT_STATC optional
      value(IR_RQPTR_PR_MAIN) type ref to YCL_RF_RQPTR_PR_MAIN optional .
  methods LOAD_PRSTD
    importing
      !IF_PRSTD type YRF_RQPT_PRSTD
      !IF_NOLOCK type ABAP_BOOL optional
      !IT_VBAP_KEY type YRF_RQPT_TT_VBAPKEY optional
    returning
      value(RR_RQPTR_PR_MAIN) type ref to YCL_RF_RQPTR_PR_MAIN
    raising
      /VCXI/CX_CKX .
private section.

  class-data F_PRSTD_GLOBAL type YRF_RQPT_PRSTD .
  class-data F_CREATE_QUOTE_GLOBAL type ABAP_BOOL .
  class-data F_PRSTD_NOLOCK_GLOBAL type ABAP_BOOL .
endclass. "YCL_HP_SDP_BOB_PSTUDY_EXT definition
class YCL_HP_SDP_BOB_PSTUDY_EXT implementation.
  method CREATE_PRSTD.

    data: LT_VBAPKEY type YRF_RQPT_TT_VBAPKEY,
          LT_PRFID   type YRF_RQPTR_TT_PRFID.
    data: LR_RQPTR_PR_MAIN   type ref to YCL_RF_RQPTR_PR_MAIN,
          LR_RQPTR_GRID_MAIN type ref to YCL_RF_RQPTR_GRID_MAIN.
    field-symbols: <S_VBAPKEY> like line of LT_VBAPKEY,
                   <S_PRFID>   like line of LT_PRFID.

* Instance creation of YCL_RF_RQPTR_PR_MAIN without selection
* Create object LR_RQPTR_PR_MAIN exporting IF_REPID = 'CREATE_PRSDT'.
    append initial line to LT_VBAPKEY assigning <S_VBAPKEY>.
    <S_VBAPKEY>-CMATN = C_CMATN.

    append initial line to LT_PRFID assigning <S_PRFID>.
    <S_PRFID>-PRFID = C_PRFID.
    <S_PRFID>-CMATN = C_CMATN.

    create object LR_RQPTR_PR_MAIN
      exporting
        IT_VBAPKEY = LT_VBAPKEY
        IT_PRFID   = LT_PRFID.

    check LR_RQPTR_PR_MAIN is bound.
    clear LR_RQPTR_PR_MAIN->T_VBAPKEY.

* Create table in background
    create object LR_RQPTR_GRID_MAIN exporting IR_PTR_PR_MAIN = LR_RQPTR_PR_MAIN.
    check LR_RQPTR_GRID_MAIN is bound.
    LR_RQPTR_GRID_MAIN->REFRESH_GRID( ).

*** save new pricing study without popup und synchronous commit
    YCL_RF_RQPTS_BOB_PSTUDY=>F_NOUI = ABAP_TRUE.
    YCL_RF_RQPTS_BOB_PSTUDY=>CREATE( exporting IR_PTR_PR_MAIN = LR_RQPTR_PR_MAIN
                                     importing ER_PSTUDY      = LR_RQPTR_PR_MAIN->R_PTS_BOB_PSTUDY ).
    YCL_RF_RQPTS_BOB_PSTUDY=>F_NOUI = ABAP_FALSE.
    commit work and wait.

    check LR_RQPTR_PR_MAIN->R_PTS_BOB_PSTUDY is bound.
    RF_PRSTD = LR_RQPTR_PR_MAIN->R_PTS_BOB_PSTUDY->F_PRSTD.
    LR_RQPTR_PR_MAIN->F_SAVE_REQ = ABAP_FALSE.

  endmethod.
  method GET_INSTANCE.

  if IF_GUID is supplied and IF_GUID is not initial.


  else.

  endif.

  endmethod.
  method INIT_PRSTD_GLOBAL.

    clear F_PRSTD_GLOBAL.

  endmethod.
  method INIT_PRSTD_NOLOCK_GLOBAL.

    clear F_PRSTD_NOLOCK_GLOBAL.

  endmethod.
  method LOAD_PRSTD.

    data: LS_VBAPKEY type YRF_RQPT_S_VBAPKEY,
          LS_PRFID   type YRF_RQPTR_S_PRFID.
    data: LT_VBAPKEY type YRF_RQPT_TT_VBAPKEY,
          LT_PRFID   type YRF_RQPTR_TT_PRFID.

    LS_PRFID-PRFID = 'SINGLE'.
    LS_PRFID-CMATN = 'VCXI_PC_BOX_CNF'.
    append LS_PRFID to LT_PRFID.

    if IT_VBAP_KEY is not initial.
      LT_VBAPKEY[] = IT_VBAP_KEY[].
    endif.

*   Do not lock pricing study
    YCL_HP_SDP_BOB_PSTUDY_EXT=>SET_PRSTD_NOLOCK_GLOBAL( IF_NOLOCK ).

*   Set PRSTD to global memory
    YCL_HP_SDP_BOB_PSTUDY_EXT=>SET_PRSTD_GLOBAL( IF_PRSTD ).

*   Instance creation of YCL_RF_RQPTR_PR_MAIN with load
    create object RR_RQPTR_PR_MAIN
      exporting
        IF_REPID   = 'YRF_RQPTR_SEL'
        IT_VBAPKEY = LT_VBAPKEY
        IT_PRFID   = LT_PRFID.

*   Remove PRSTD from global memory
    YCL_HP_SDP_BOB_PSTUDY_EXT=>INIT_PRSTD_GLOBAL( ).

*   Remove NOLOCK from global memory
    YCL_HP_SDP_BOB_PSTUDY_EXT=>INIT_PRSTD_NOLOCK_GLOBAL( ).

  endmethod.
  method SET_PRSTD_GLOBAL.
  endmethod.
  method SET_PRSTD_NOLOCK_GLOBAL.
  endmethod.
  method UPDATE_PRSTD.

*   Load pricing study
    if IR_RQPTR_PR_MAIN is initial.
      IR_RQPTR_PR_MAIN = LOAD_PRSTD( IF_PRSTD ).
    endif.
    check IR_RQPTR_PR_MAIN is bound.

*   Pricing Study Status
    if IF_RQPT_STATC is supplied.
      IR_RQPTR_PR_MAIN->R_PTS_BOB_PSTUDY->SET_STATC( IF_RQPT_STATC ).
    endif.

*  Save Pricing Study
    YCL_RF_RQPTS_BOB_PSTUDY=>F_NOUI = ABAP_TRUE.
    IR_RQPTR_PR_MAIN->R_PTS_BOB_PSTUDY->UPDATE( exporting IR_PTR_PR_MAIN = IR_RQPTR_PR_MAIN  ).
    YCL_RF_RQPTS_BOB_PSTUDY=>F_NOUI = ABAP_FALSE.

  endmethod.
