
class YCL_HP_SVCS_UI_TOOL definition
  public
  inheriting from /VCXI/CL_VKSRU_CLSUI
  create public .

public section.

  data S_TOOL_VIS type YHP_SVCS_S_TOOL_VIS .

  methods CONSTRUCTOR
    importing
      !IR_UIFW type ref to /VCXI/IF_VKSU_UIFW
      !IR_UIGATE type ref to /VCXI/CL_VKSRU_UIGATE
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods DO_PBO
    raising
      /VCXI/CX_CKX .
  methods DO_UPDATE_TOOL_VIS
    importing
      !IS_TOOL_VIS type YHP_SVCS_S_TOOL_VIS
    raising
      /VCXI/CX_CKX .

  methods ACTIVATE
    redefinition .
  methods DO_MODIFY_SCREEN
    redefinition .
protected section.

  data R_PR_TOOL type ref to YCL_HP_SVCS_PR_TOOL .

  methods INIT_VIS
    raising
      /VCXI/CX_CKX .

  methods HANDLE_GATE_FREED
    redefinition .
private section.
endclass. "YCL_HP_SVCS_UI_TOOL definition
class YCL_HP_SVCS_UI_TOOL implementation.
  method ACTIVATE.

    SUPER->ACTIVATE( ).

    call function 'YHP_SVCS_UI_TOOL_BIND'
      exporting
        IR_UI_TOOL = ME
      importing
        ES_DYNP    = ME->S_DYNP.

  endmethod.
  method CONSTRUCTOR.

    SUPER->CONSTRUCTOR( IR_UIFW   = IR_UIFW
                        IR_UIGATE = IR_UIGATE
                        IR_GATE   = IR_GATE ).
*** Assign the PR Class to the UI Class
    try.
        move IR_GATE->R_CLSPR ?to ME->R_PR_TOOL.
      catch CX_SY_MOVE_CAST_ERROR.
***   UI ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '801'.
    endtry.

  endmethod.
  method DO_MODIFY_SCREEN.

    data: LF_LOCKED type        /VCXI/CKX_LOCKED,
          LF_INUSE  type        /VCXI/VKSR_INUSE.
    data: LR_CX_CKX type ref to /VCXI/CX_CKX.

    try.
        SUPER->DO_MODIFY_SCREEN( IF_REPID = IF_REPID
                                 IF_DYNNR = IF_DYNNR ).

        LF_LOCKED = ME->R_GATE->IS_LOCKED( ).
        LF_INUSE  = ME->R_GATE->IS_INUSE( ).

***     Modify Screen using DynamicVC
        ZCL_VCXI_XCDR_SERVICE=>MODIFY_SCREEN( IR_GATE = ME->R_GATE ).

        loop at screen.
***       Lock everything if not in change mode
          if LF_LOCKED ne ABAP_TRUE or
             LF_INUSE  ne ABAP_TRUE.
            move 0 to SCREEN-INPUT.
          endif.

          modify screen.
        endloop.

      catch /VCXI/CX_CKX into LR_CX_CKX.
        ME->R_GATE->ADD_MESSAGE_BY_CX_CKX( IR_CX_CKX = LR_CX_CKX ).
    endtry.

  endmethod.
  method DO_PBO.

    ME->INIT_VIS( ).

  endmethod.
  method DO_UPDATE_TOOL_VIS.

*** Estimated Tool Cost
    if ME->S_TOOL_VIS-S_ETCST ne IS_TOOL_VIS-S_ETCST.
      ME->R_PR_TOOL->SET_ETCST( IS_ETCST = IS_TOOL_VIS-S_ETCST
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Vendor
    if ME->S_TOOL_VIS-LIFNR ne IS_TOOL_VIS-LIFNR.
      ME->R_PR_TOOL->SET_LIFNR( IF_LIFNR = IS_TOOL_VIS-LIFNR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Total Procurement Cost
    if ME->S_TOOL_VIS-S_TPCST ne IS_TOOL_VIS-S_TPCST.
      ME->R_PR_TOOL->SET_TPCST( IS_TPCST = IS_TOOL_VIS-S_TPCST
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Tool Life Time
    if ME->S_TOOL_VIS-S_TLLTI ne IS_TOOL_VIS-S_TLLTI.
      ME->R_PR_TOOL->SET_TLLTI( IS_TLLTI = IS_TOOL_VIS-S_TLLTI
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** External Tool
    if ME->S_TOOL_VIS-TLEXT ne IS_TOOL_VIS-TLEXT.
      ME->R_PR_TOOL->SET_TLEXT( IF_TLEXT = IS_TOOL_VIS-TLEXT
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Mark Up
    if ME->S_TOOL_VIS-S_MRKUP ne IS_TOOL_VIS-S_MRKUP.
      ME->R_PR_TOOL->SET_MRKUP( IS_MRKUP = IS_TOOL_VIS-S_MRKUP
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Sales Order Control
    if ME->S_TOOL_VIS-SOCTR ne IS_TOOL_VIS-SOCTR.
      ME->R_PR_TOOL->SET_SOCTR( IF_SOCTR = IS_TOOL_VIS-SOCTR
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Tool Order
    if ME->S_TOOL_VIS-TLORD ne IS_TOOL_VIS-TLORD.
      ME->R_PR_TOOL->SET_TLORD( IF_TLORD = IS_TOOL_VIS-TLORD
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Tool Coverage by Customer
    if ME->S_TOOL_VIS-S_TLCCU ne IS_TOOL_VIS-S_TLCCU.
      ME->R_PR_TOOL->SET_TLCCU( IS_TLCCU = IS_TOOL_VIS-S_TLCCU
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Amortization
    if ME->S_TOOL_VIS-S_AMORT ne IS_TOOL_VIS-S_AMORT.
      ME->R_PR_TOOL->SET_AMORT( IS_AMORT = IS_TOOL_VIS-S_AMORT
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

*** Legacy material
    if ME->S_TOOL_VIS-LEGMA ne IS_TOOL_VIS-LEGMA.
     data lv_legma type YHP_SVCS_LEGMA.
    lv_legma = IS_TOOL_VIS-LEGMA.
      call function 'CONVERSION_EXIT_ALPHA_OUTPUT'
        exporting
          INPUT         = lv_legma
       IMPORTING
         OUTPUT        = lv_legma
                .

      ME->R_PR_TOOL->SET_LEGMA( IF_LEGMA = lv_legma
                                IF_SETBY = /VCXI/CL_VKSR_GATE=>C_SETBY_USER ).
    endif.

  endmethod.
  method HANDLE_GATE_FREED.

*** Super
    SUPER->HANDLE_GATE_FREED( ).

*** Clear PR Reference
    free: ME->R_PR_TOOL.

  endmethod.
  method INIT_VIS.

    free: ME->S_TOOL_VIS.

    check ME->R_PR_TOOL is bound.

*** Estimated Tool Cost
    move ME->R_PR_TOOL->GET_ETCST( ) to ME->S_TOOL_VIS-S_ETCST.

*** Vendor
    move ME->R_PR_TOOL->GET_LIFNR( ) to ME->S_TOOL_VIS-LIFNR.
    if ME->S_TOOL_VIS-LIFNR is not initial.
      select single NAME1
        into ME->S_TOOL_VIS-NAME1
        from LFA1
        where LIFNR eq ME->S_TOOL_VIS-LIFNR.
    else.
      clear ME->S_TOOL_VIS-NAME1.
    endif.

*** Total Procurement Cost
    move ME->R_PR_TOOL->GET_TPCST( ) to ME->S_TOOL_VIS-S_TPCST.

*** Tool Life Time
    move ME->R_PR_TOOL->GET_TLLTI( ) to ME->S_TOOL_VIS-S_TLLTI.

*** External Tool
    move ME->R_PR_TOOL->GET_TLEXT( ) to ME->S_TOOL_VIS-TLEXT.

*** Mark Up
    move ME->R_PR_TOOL->GET_MRKUP( ) to ME->S_TOOL_VIS-S_MRKUP.

*** Tool Price
    move ME->R_PR_TOOL->GET_TLPRC( ) to ME->S_TOOL_VIS-S_TLPRC.

*** Sales Order Control
    move ME->R_PR_TOOL->GET_SOCTR( ) to ME->S_TOOL_VIS-SOCTR.

*** Tool Order
    move ME->R_PR_TOOL->GET_TLORD( ) to ME->S_TOOL_VIS-TLORD.

*** Tool Coverage by Customer
    move ME->R_PR_TOOL->GET_TLCCU( ) to ME->S_TOOL_VIS-S_TLCCU.

*** Internal Tool Cost
    move ME->R_PR_TOOL->GET_ITCST( ) to ME->S_TOOL_VIS-S_ITCST.

*** Amortization
    move ME->R_PR_TOOL->GET_AMORT( ) to ME->S_TOOL_VIS-S_AMORT.

*** Internal Tool Cost
    move ME->R_PR_TOOL->GET_TLCPT( ) to ME->S_TOOL_VIS-S_TLCPT.

*** Legacy material
    move ME->R_PR_TOOL->GET_LEGMA( ) to ME->S_TOOL_VIS-LEGMA.

  endmethod.
