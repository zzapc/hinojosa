
class YCL_HP_X_SRV_VCDIM definition
  public
  final
  create public .

public section.

  class-methods CONVERT_DIMENSION_TO_DISPLAY
    importing
      !IF_PR_CFG type ref to YCL_HP_SVCS_PR_CFG
      !IF_FLUTE type ZVCXI_PCS_FLUTE
      !IF_FEFCO type ZVCXI_PCS_FEFCO
      !IS_CALIP type ZVCXI_P0SS_S_CALIP
    changing
      !CF_PROPT type YHP_SVCS_PROPT
      value(CS_PRODIM) type ZVCXI_PXS_S_PRODIM
    raising
      /VCXI/CX_CKX .
  class-methods CONVERT_DIMENSION_TO_INTERNAL
    importing
      !IR_CFG type ref to YCL_HP_SVCS_PR_CFG
      !IF_PROPT type YHP_SVCS_PROPT
    changing
      value(CS_PRODIM) type ZVCXI_PXS_S_PRODIM
    raising
      /VCXI/CX_CKX .
protected section.
private section.
endclass. "YCL_HP_X_SRV_VCDIM definition
class YCL_HP_X_SRV_VCDIM implementation.
  method CONVERT_DIMENSION_TO_DISPLAY.
    data: LF_VALUE(5)  type N.
    data: LS_TC001 type YHP_SVC_TC001.

*** Read Customizing
    select single * from YHP_SVC_TC001 into LS_TC001
    where FLUTE = IF_FLUTE and
          FEFCO = IF_FEFCO and
          PROPT = CF_PROPT.
    if SY-SUBRC eq 0 and CF_PROPT ne 'I'.
      LF_VALUE = IS_CALIP-CALIP * LS_TC001-CPDLE.
      CS_PRODIM-PROLE = CS_PRODIM-PROLE + LF_VALUE.

      LF_VALUE = IS_CALIP-CALIP * LS_TC001-CPDHE.
      CS_PRODIM-PROHE = CS_PRODIM-PROHE + LF_VALUE.

      LF_VALUE = IS_CALIP-CALIP * LS_TC001-CPDWI.
      CS_PRODIM-PROWI = CS_PRODIM-PROWI + LF_VALUE.

    else.
      check IF_PR_CFG is bound.

      IF_PR_CFG->SET_PROPT( IF_PROPT = 'I' ).

** Get product dimension Based on display option
      CS_PRODIM-S_PROLE = IF_PR_CFG->GET_PROLE( ).
      CS_PRODIM-S_PROWI = IF_PR_CFG->GET_PROWI( ).
      CS_PRODIM-S_PROHE = IF_PR_CFG->GET_PROHE( ).
      move 'I' to CF_PROPT.
    endif.
  endmethod.
  method CONVERT_DIMENSION_TO_INTERNAL.
    data: LF_VALUE(5)  type N,
          LF_FLUTE  TYPE ZVCXI_PCS_FLUTE,
          LF_FEFCO  TYPE ZVCXI_PCS_FEFCO.



    data: LS_TC001  type YHP_SVC_TC001,
          LS_PRODIM type ZVCXI_PXS_S_PRODIM,
          LS_CALIP  TYPE ZVCXI_P0SS_S_CALIP.

    check IR_CFG is BOUND.

    LF_FLUTE = IR_CFG->GET_FLUTE( ).
    LF_FEFCO = IR_CFG->GET_FEFCO( ).
    LS_CALIP = IR_CFG->GET_CALIP( ).

*** Read Customizing
    select single * from YHP_SVC_TC001 into LS_TC001
    where FLUTE = LF_FLUTE and
          FEFCO = LF_FEFCO and
          PROPT = IF_PROPT.

*** Convert to internal
    if SY-SUBRC eq 0.
      LF_VALUE = LS_CALIP-CALIP * LS_TC001-CPDLE.
      CS_PRODIM-PROLE = CS_PRODIM-PROLE - LF_VALUE.

      LF_VALUE = LS_CALIP-CALIP * LS_TC001-CPDHE.
      CS_PRODIM-PROHE = CS_PRODIM-PROHE - LF_VALUE.

      LF_VALUE = LS_CALIP-CALIP * LS_TC001-CPDWI.
      CS_PRODIM-PROWI = CS_PRODIM-PROWI - LF_VALUE.
    endif.

  endmethod.
