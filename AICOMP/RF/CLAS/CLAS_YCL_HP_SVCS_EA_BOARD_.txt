
class YCL_HP_SVCS_EA_BOARD definition
  public
  inheriting from /VCXI/CL_VKSR_CLSEA
  create public .

public section.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_TBOAR
    returning
      value(RF_TBOAR) type ZVCXI_PCSS_TBOAR
    raising
      /VCXI/CX_CKX .
  methods GET_GBDES
    returning
      value(RF_GBDES) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_PBDES
    returning
      value(RF_PBDES) type /VCXI/CKX_DESCR
    raising
      /VCXI/CX_CKX .
  methods GET_ICLAT
    importing
      !IF_ICLAT type ZVCXI_PCSS_ICLAT
      !IF_TYPE type YHP_SVCS_TICLA
    exporting
      !EF_CLVALN type ZVCXI_PCSS_S_CLASS_VALUE
      !EF_CLVALC type ZVCXI_PCSS_S_CLASS_VALUE_C
    raising
      /VCXI/CX_CKX .
  methods GET_SIDRU
    importing
      !IF_NOUTW type ZVCXI_PXS_NOUTW optional
    exporting
      !EF_SETBY type /VCXI/VKSR_SETBY
      !ES_SIDRP type ZVCXI_P0SS_S_SIDRP
    returning
      value(RS_SIDRU) type ZVCXI_P0SS_S_SIDRU
    raising
      /VCXI/CX_CKX .
protected section.

  data R_PR_BOARD type ref to ZCL_VCXI_P1SS_PR_BOARD .
  data R_PR_BOARD_HP type ref to YCL_HP_SVCS_PR_BOARD .
private section.

  data R_CUST_BOARD type ref to ZCL_VCXI_PCSS_CUST_BOARD .
endclass. "YCL_HP_SVCS_EA_BOARD definition
class YCL_HP_SVCS_EA_BOARD implementation.
  method CONSTRUCTOR.

    data: LF_BOARD type        ZVCXI_PCS_BOARD,
          LF_WERKS type        WERKS_D,
          LF_MBOAR type        ZVCXI_PCSS_MBOAR,
          LF_DCONF type        DATS.

    SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_BOARD.
      catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.

    check ME->R_PR_BOARD is bound.

    LF_BOARD = ME->R_PR_BOARD->GET_BOARD( ).
    LF_WERKS = ME->R_PR_BOARD->GET_WERKS( ).
    LF_MBOAR = ME->R_PR_BOARD->GET_MBOAR( ).
    LF_DCONF = ME->R_PR_BOARD->GET_DCONF( ).

*** Initialize Board Customizing.
    try.
        clear R_CUST_BOARD.
        R_CUST_BOARD = ZCL_VCXI_PCSS_CUST_BOARD=>GET_INSTANCE( IF_BOARD = LF_BOARD
                                                                IF_MBOAR = LF_MBOAR
                                                                IF_WERKS = LF_WERKS
                                                                IF_DATE  = LF_DCONF ).
      catch /VCXI/CX_CKX.

    endtry.
*** Assign the PR Class to the Element API Class HP
    try.
        move ME->R_GATE->R_CLSPR ?to ME->R_PR_BOARD_HP.
      catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
        raise exception type /VCXI/CX_CKX
          exporting
            F_MSGTY = 'E'
            F_MSGID = '/VCXI/VKSR'
            F_MSGNO = '804'.
    endtry.


  endmethod.
  method GET_GBDES.

    data:  LS_BOARD_DESCR   type ZVCXI_PCSS_S_BOARD_DESCR.
    data:  LT_BOARD_DESCR   type ZVCXI_PCSS_TT_BOARD_DESCR.

    check ME->R_CUST_BOARD is bound.

    R_CUST_BOARD->GET_BOARD_DESCR( changing CT_BOARD_DESCR = LT_BOARD_DESCR ).

    read table LT_BOARD_DESCR with key IDEST = 'GLDES' into LS_BOARD_DESCR.
    check SY-SUBRC eq 0.
    move LS_BOARD_DESCR-DESCR to RF_GBDES.


  endmethod.
  method GET_ICLAT.


    check ME->R_PR_BOARD_HP is bound.

    ME->R_PR_BOARD_HP->GET_ICLAT_VALUE( exporting IF_ICLAT = IF_ICLAT
                                                  IF_TYPE = IF_TYPE
                                        importing  EF_CLVALN = EF_CLVALN
                                                   EF_CLVALC = EF_CLVALC ) .

  endmethod.
  method GET_PBDES.

    data:  LS_BOARD_DESCR   type ZVCXI_PCSS_S_BOARD_DESCR.
    data:  LT_BOARD_DESCR   type ZVCXI_PCSS_TT_BOARD_DESCR.

    check ME->R_CUST_BOARD is bound.

    R_CUST_BOARD->GET_BOARD_DESCR( changing CT_BOARD_DESCR = LT_BOARD_DESCR ).

    read table LT_BOARD_DESCR with key IDEST = 'PLDES' into LS_BOARD_DESCR.
    check SY-SUBRC eq 0.
    move LS_BOARD_DESCR-DESCR to RF_PBDES.


  endmethod.
method GET_SIDRU.

  check ME->R_PR_BOARD is bound.


  ME->R_PR_BOARD->GET_SIDRU( exporting IF_NOUTW = IF_NOUTW   " VCXI-PX: Number of Outs on Width
                             importing EF_SETBY = EF_SETBY   " VCXI: Set By
                                       ES_SIDRP = ES_SIDRP   " VCXI-P0: Side Run Percentage
                             receiving RS_SIDRU = RS_SIDRU )." VCXI-P0: Side Run

  if RS_SIDRU-SIDRU is initial.
    check ME->R_PR_BOARD_HP is bound.

    ME->R_PR_BOARD_HP->GET_SIDRU_SIM(  exporting IF_NOUTW = IF_NOUTW   " VCXI-PX: Number of Outs on Width
                                       importing EF_SETBY = EF_SETBY   " VCXI: Set By
                                                 ES_SIDRP = ES_SIDRP   " VCXI-P0: Side Run Percentage
                                       receiving RS_SIDRU = RS_SIDRU )." VCXI-P0: Side Run
  endif.



  endmethod.
method GET_TBOAR.

  CHECK ME->R_CUST_BOARD is BOUND.

  move R_CUST_BOARD->F_TBOAR to RF_TBOAR.

endmethod.
