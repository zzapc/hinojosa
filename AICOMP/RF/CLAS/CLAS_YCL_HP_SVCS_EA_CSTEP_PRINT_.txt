
class YCL_HP_SVCS_EA_CSTEP_PRINT definition
  public
  inheriting from ZCL_VCXI_P1SS_EA_CSTEP_PRINT
  create public .

public section.

  interfaces YIF_HP_SVCS_EA_CSTEP_KUNNR .

  constants C_SEPARATOR_PAINK type CHAR1 value '|' ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !IR_GATE type ref to /VCXI/CL_VKSR_GATE
    raising
      /VCXI/CX_CKX .
  methods GET_NOCOL_EXCL_GEINK
    returning
      value(RF_NOCOL) type ZVCXI_P0S_NOCOL
    raising
      /VCXI/CX_CKX .
  methods GET_NOCOL_HP
    importing
      !IF_TINK type ZVCXI_PXS_TINK optional
    returning
      value(RF_NOCOL) type ZVCXI_P0S_NOCOL
    raising
      /VCXI/CX_CKX .
  methods IS_RINKT_ACTIVE
    returning
      value(RF_ACTIVE) type FLAG
    raising
      /VCXI/CX_CKX .
  methods GET_PAINK_ATWRT
    returning
      value(RF_PAINK_ATWRT) type YHP_SVCS_PAINK_ATWRT
    raising
      /VCXI/CX_CKX .
  methods GET_PRSAM
    returning
      value(RF_PRSAM) type YHP_SVCS_PRSAM
    raising
      /VCXI/CX_CKX .
  methods SET_PRSAM
    importing
      value(IF_PRSAM) type YHP_SVCS_PRSAM
    raising
      /VCXI/CX_CKX .

  methods GET_TPRIN
    redefinition .
protected section.

  data R_PR_CSTEP_PRINT_HP type ref to YCL_HP_SVCS_PR_CSTEP_PRINT .
private section.
endclass. "YCL_HP_SVCS_EA_CSTEP_PRINT definition
class YCL_HP_SVCS_EA_CSTEP_PRINT implementation.
method CONSTRUCTOR.

  SUPER->CONSTRUCTOR( IR_GATE = IR_GATE ).

*** Assign the PR Class to the Element API Class
  try.
      move ME->R_GATE->R_CLSPR ?to ME->R_PR_CSTEP_PRINT_HP.
    catch CX_SY_MOVE_CAST_ERROR.
***   Element API ABAP Class is not compatible with PR ABAP Class.
      raise exception type /VCXI/CX_CKX
        exporting
          F_MSGTY = 'E'
          F_MSGID = '/VCXI/VKSR'
          F_MSGNO = '804'.
  endtry.

endmethod.
  method GET_NOCOL_EXCL_GEINK.

    check ME->R_PR_CSTEP_PRINT_HP is bound.

    RF_NOCOL = ME->R_PR_CSTEP_PRINT_HP->GET_NOCOL_EXCL_GEINK( ).

  endmethod.
  method GET_NOCOL_HP.

    check ME->R_PR_CSTEP_PRINT_HP is bound.

    if IF_TINK is supplied.
      RF_NOCOL = ME->R_PR_CSTEP_PRINT_HP->ZIF_VCXI_PXSS_PRINT~GET_NOCOL( IF_TINK = IF_TINK ).
    else.
      RF_NOCOL = ME->R_PR_CSTEP_PRINT_HP->ZIF_VCXI_PXSS_PRINT~GET_NOCOL( ).
    endif.

  endmethod.
  method GET_PAINK_ATWRT.

    data: LF_PAINK     type        YHP_SVCS_PAINK.
    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_INK type ref to YCL_HP_SVCS_PR_MS_INK.

    check ME->R_GATE is bound.

*** Get all Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                     IF_INUSE = ABAP_TRUE ).

*** Concatenate all ink values into string
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_INK.
          clear LF_PAINK.
          LF_PAINK = LR_PR_MS_INK->GET_PAINK( ).
          check LF_PAINK is not initial.

          if RF_PAINK_ATWRT is initial.
            RF_PAINK_ATWRT = LF_PAINK.
          else.
            concatenate RF_PAINK_ATWRT LF_PAINK into RF_PAINK_ATWRT separated by C_SEPARATOR_PAINK.
          endif.

        catch /VCXI/CX_CKX.
          continue.
      endtry.
    endloop.

  endmethod.
  method GET_PRSAM.

    check ME->R_PR_CSTEP_PRINT_HP is bound.

    RF_PRSAM = ME->R_PR_CSTEP_PRINT_HP->GET_PRSAM( ).

  endmethod.
  method GET_TPRIN.

    call method SUPER->GET_TPRIN( ).


    check ME->R_PR_CSTEP_PRINT_HP is bound.
    RF_TPRIN = ME->R_PR_CSTEP_PRINT_HP->ZIF_VCXI_PXSS_PRINT~GET_TPRIN( IMPORTING EF_PRTEC = EF_PRTEC ).

  endmethod.
  method IS_RINKT_ACTIVE.

    data: LT_GATE      type        /VCXI/VKSR_TT_GATE.
    data: LR_GATE      type ref to /VCXI/CL_VKSR_GATE,
          LR_PR_MS_INK type ref to YCL_HP_SVCS_PR_MS_INK.
***-------------------------------------------------------------------*

    check ME->R_GATE is bound.

*** Get all Inks
    LT_GATE = ME->R_GATE->GET_PRVDR( IF_IPRVT = ZCL_VCXI_PXSS_PR_MS_INK=>C_IPRVT_PX_MS_INK
                                     IF_INUSE = ABAP_TRUE ).

*** Check if "Reserve Ink Tool" is active for at least one ink
    loop at LT_GATE into LR_GATE.
      try.
          move LR_GATE->R_CLSPR ?to LR_PR_MS_INK.
          check LR_PR_MS_INK->GET_RINKT( ) is not initial.
          RF_ACTIVE = ABAP_TRUE.
          exit.

        catch /VCXI/CX_CKX.
          continue.
      endtry.
    endloop.

  endmethod.
  method SET_PRSAM.

    check ME->R_PR_CSTEP_PRINT_HP is bound.

    ME->R_PR_CSTEP_PRINT_HP->SET_PRSAM( IF_PRSAM = IF_PRSAM ).

  endmethod.
  method YIF_HP_SVCS_EA_CSTEP_KUNNR~GET_KUNNR.

    data: LR_APPDATA type ref to ZCL_VCXI_XCS_APPDATA.


    LR_APPDATA ?= ME->R_GATE->GET_APPDATA( ).
    check LR_APPDATA is bound.

    RF_KUNNR = LR_APPDATA->S_KNA1_AG-KUNNR.

  endmethod.
