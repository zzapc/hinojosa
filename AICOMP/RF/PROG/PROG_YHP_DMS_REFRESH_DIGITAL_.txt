report YHP_DMS_REFRESH_DIGITAL.

data GS_LOG type BAL_S_LOG.
data GF_LOG_HANDLE type BALLOGHNDL.

tables DRAW.
tables ZVCXI_PXS_TD110.

selection-screen begin of block B1 with frame.
parameters PA_WERKS type ZVCXI_PXS_TD110-WERKS default '2000' obligatory.
parameters PA_TPRIN type ZVCXI_PXS_TD110-TPRIN default 'DIGITAL' obligatory.
select-options SO_TINK for ZVCXI_PXS_TD110-TINK.
selection-screen end of block B1.

selection-screen begin of block B2 with frame.
parameters PA_DOKAR type DRAW-DOKAR default 'Y01' obligatory.
select-options SO_DOKNR for DRAW-DOKNR.
select-options SO_DOKVR for DRAW-DOKVR.
select-options SO_DOKTL for DRAW-DOKTL.
selection-screen end of block B2.


start-of-selection.
  check SY-DATUM le '20241031'.

***--------------------------------------------------------------------------------------
*** Create log instance
  perform F_LOG_CREATE_INSTANCE.

***--------------------------------------------------------------------------------------
*** DMS Extension for Print Design - Header
  select * from ZVCXI_PXE_TD200
    into table @data(LT_TD200)
    where DOKAR eq @PA_DOKAR
      and DOKNR in @SO_DOKNR
      and DOKVR in @SO_DOKVR
      and DOKTL in @SO_DOKTL
      and WERKS eq @PA_WERKS
      and TPRIN eq @PA_TPRIN.
  if SY-SUBRC is not initial.
*** Add log message
    perform F_LOG_ADD_MESSAGE using SY-MSGTY
                                    SY-MSGID
                                    SY-MSGNO
                                    SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

  check LT_TD200 is not initial.

***--------------------------------------------------------------------------------------
*** DMS Extension for Print Design - Ink
  select * from ZVCXI_PXE_TD210
    into table @data(LT_TD210)
    for all entries in @LT_TD200
    where DOKAR eq @LT_TD200-DOKAR
      and DOKNR eq @LT_TD200-DOKNR
      and DOKVR eq @LT_TD200-DOKVR
      and DOKTL eq @LT_TD200-DOKTL
      and TINK  in @SO_TINK.
  if SY-SUBRC is not initial.
*** Add log message
    perform F_LOG_ADD_MESSAGE using SY-MSGTY
                                    SY-MSGID
                                    SY-MSGNO
                                    SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

  check LT_TD210 is not initial.

***--------------------------------------------------------------------------------------
*** Printing Default
  select * from ZVCXI_PXS_TD110
    into table @data(LT_TD110)
    where WERKS eq @PA_WERKS
      and TPRIN eq @PA_TPRIN
      and TINK  in @SO_TINK.
  if SY-SUBRC is not initial.
*** Add log message
    perform F_LOG_ADD_MESSAGE using SY-MSGTY
                                    SY-MSGID
                                    SY-MSGNO
                                    SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

  check LT_TD110 is not initial.
  sort LT_TD110 by TINK ascending.

***--------------------------------------------------------------------------------------
*** DMS Extension for Print Design - Ink
  data LT_TD210_NEW type standard table of ZVCXI_PXE_TD210.

  loop at LT_TD210 into data(LS_TD210).

    read table LT_TD110 into data(LS_TD110) with key TINK = LS_TD210-TINK
                                                     binary search.
    check SY-SUBRC is initial.

    check LS_TD210-MATNR ne LS_TD110-MATNR.

    data(LS_TD210_NEW) = LS_TD210.
    LS_TD210_NEW-MATNR := LS_TD110-MATNR.

    LT_TD210_NEW = value #( base LT_TD210_NEW ( LS_TD210_NEW ) ).

    data(LF_DOCUMENT) = |{ LS_TD210-DOKNR }/{ LS_TD210-DOKTL }/{ LS_TD210-DOKVR }|.
*** Add log message
    perform F_LOG_ADD_MESSAGE using 'S'
                                    'YHP_X'
                                    '006'
                                    LF_DOCUMENT LS_TD210-TINK LS_TD210-MATNR LS_TD210_NEW-MATNR.

  endloop.

***--------------------------------------------------------------------------------------
*** UPDATE TABLE DMS Extension for Print Design - Ink
  modify ZVCXI_PXE_TD210 from table LT_TD210_NEW.
  if SY-SUBRC is initial.
    commit work and wait.
  else.
    rollback work.
  endif.

***--------------------------------------------------------------------------------------
*** Log Display
  perform F_LOG_DISPLAY.


form F_LOG_CREATE_INSTANCE .

  call function 'BAL_LOG_CREATE'
    exporting
      I_S_LOG                 = GS_LOG
    importing
      E_LOG_HANDLE            = GF_LOG_HANDLE
    exceptions
      LOG_HEADER_INCONSISTENT = 1
      ERROR_MESSAGE           = 2
      others                  = 3.
  if SY-SUBRC is not initial.
    message id SY-MSGID type SY-MSGTY number SY-MSGNO
             with SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

endform.


form F_LOG_ADD_MESSAGE  using P_MSGTY
                              P_MSGID
                              P_MSGNO
                              P_MSGV1 P_MSGV2 P_MSGV3 P_MSGV4.

  data LS_MESSAGE type BAL_S_MSG.
  LS_MESSAGE = value #( MSGTY    = P_MSGTY
                        MSGID    = P_MSGID
                        MSGNO    = P_MSGNO
                        MSGV1    = P_MSGV1
                        MSGV2    = P_MSGV2
                        MSGV3    = P_MSGV3
                        MSGV4    = P_MSGV4
                        DETLEVEL = '1' ).

  call function 'BAL_LOG_MSG_ADD'
    exporting
      I_LOG_HANDLE     = GF_LOG_HANDLE
      I_S_MSG          = LS_MESSAGE
    exceptions
      LOG_NOT_FOUND    = 1
      MSG_INCONSISTENT = 2
      LOG_IS_FULL      = 3
      ERROR_MESSAGE    = 4
      others           = 5.
  if SY-SUBRC is not initial.
    message id SY-MSGID type SY-MSGTY number SY-MSGNO
             with SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

endform.


form F_LOG_DISPLAY .

  data LT_LOG_HANDLE type BAL_T_LOGH.
  LT_LOG_HANDLE = value #( ( GF_LOG_HANDLE ) ).

***--------------------------------------------------------------------------------------
*** Get Profile to Display Log
  data LS_PROFILE type BAL_S_PROF.

  call function 'BAL_DSP_PROFILE_NO_TREE_GET'
    importing
      E_S_DISPLAY_PROFILE = LS_PROFILE
    exceptions
      ERROR_MESSAGE       = 1
      others              = 2.
  if SY-SUBRC is not initial.
    message id SY-MSGID type SY-MSGTY number SY-MSGNO
             with SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

  LS_PROFILE-CWIDTH_OPT = ABAP_TRUE.
  LS_PROFILE-USE_GRID   = ABAP_TRUE.
  LS_PROFILE-TREE_NOMSG = ABAP_TRUE.
  clear LS_PROFILE-LEV2_FCAT.
  clear LS_PROFILE-LEV2_SORT.

***--------------------------------------------------------------------------------------
*** Display Log
  call function 'BAL_DSP_LOG_DISPLAY'
    exporting
      I_S_DISPLAY_PROFILE  = LS_PROFILE
      I_T_LOG_HANDLE       = LT_LOG_HANDLE
    exceptions
      PROFILE_INCONSISTENT = 1
      INTERNAL_ERROR       = 2
      NO_DATA_AVAILABLE    = 3
      NO_AUTHORITY         = 4
      ERROR_MESSAGE        = 5
      others               = 6.
  if SY-SUBRC is not initial.
    message id SY-MSGID type SY-MSGTY number SY-MSGNO
             with SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

  if GF_LOG_HANDLE is not initial.
    call function 'BAL_LOG_REFRESH'
      exporting
        I_LOG_HANDLE  = GF_LOG_HANDLE
      exceptions
        LOG_NOT_FOUND = 1
        ERROR_MESSAGE = 2
        others        = 3.
    if SY-SUBRC is not initial.
      message id SY-MSGID type SY-MSGTY number SY-MSGNO
               with SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    endif.
  endif.

endform.
