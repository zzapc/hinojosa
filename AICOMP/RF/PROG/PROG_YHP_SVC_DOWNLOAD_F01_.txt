*&---------------------------------------------------------------------*
*&  Include           YHP_SVC_DOWNLOAD_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form DETERMINE_CCNT
*&---------------------------------------------------------------------*
***Determine serial number
*     -->IF_POSID  Acutal POSID
*      <--CF_COUNTER Counter
*      <--CF_CCNT  Identifier of POSID with all Parents
*&---------------------------------------------------------------------*
form DETERMINE_CCNT  using   IF_POSID
                             IR_SVC_ELEMENT type ref to  /VCXI/CL_VKSRA_SVC_ELEMENT
                     changing CF_COUNTER type /VCXI/VKSR_POSID
                              EF_CCNT type /VCXI/VKSR_POSID.

  data: LF_PARENT_POSID type        /VCXI/VKSR_POSID,
        LF_LONG_ID      type STRING.
  field-symbols: <S_LONG_ID> type Y_LONG_ID.

*** Determine all the parents
  perform GET_PARENTS using IF_POSID
                             IR_SVC_ELEMENT
                      changing LF_PARENT_POSID
                               LF_LONG_ID.
***

  read table LT_LONG_ID assigning <S_LONG_ID> with key LONG_ID = LF_LONG_ID.
  if SY-SUBRC =  0.
    EF_CCNT =   <S_LONG_ID>-CCNT.
  else.
    add 1 to CF_COUNTER.
    append initial line to    LT_LONG_ID assigning <S_LONG_ID>.
    <S_LONG_ID>-LONG_ID = LF_LONG_ID.
    <S_LONG_ID>-CCNT =  CF_COUNTER.
    EF_CCNT =   <S_LONG_ID>-CCNT.

  endif.

endform.
*&---------------------------------------------------------------------*
*& Form GET_PARENT
*&---------------------------------------------------------------------*
***Get All the parents
*      -->IF_POSID  text
*      <--CF_PARENT_POSID  text
*      <--CF_LONG_ID  text
*&---------------------------------------------------------------------*
form GET_PARENTS  using    IF_POSID
                            IR_SVC_ELEMENT type ref to  /VCXI/CL_VKSRA_SVC_ELEMENT
                  changing CF_PARENT_POSID
                           CF_LONG_ID.
  data: LF_POSID              type /VCXI/VKSR_POSID,
        LR_PARENT_SVC_ELEMENT type ref to  /VCXI/CL_VKSRA_SVC_ELEMENT.
***     POSID of the parents is the long ID
***     Get parent
  concatenate CF_LONG_ID IF_POSID into CF_LONG_ID.

  move IR_SVC_ELEMENT->/VCXI/IF_CKX_OBJECT_H~GET_PARENT( ) ?to LR_PARENT_SVC_ELEMENT.
  if LR_PARENT_SVC_ELEMENT is bound.
    move LR_PARENT_SVC_ELEMENT->GET_POSID( )                  to LF_POSID.
    perform GET_PARENTS using LF_POSID
                              LR_PARENT_SVC_ELEMENT
                        changing CF_PARENT_POSID
                                 CF_LONG_ID.
  endif.
endform.
*&---------------------------------------------------------------------*
*& Form SAVE_TO_SERVER
*&---------------------------------------------------------------------*
***@TECHNICALDOCUMENTATION
*        text
***END
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
form SAVE_TO_SERVER using    IF_FILE  type STRING
                    changing CF_SUBRC type SUBRC.



* if LT_SFILE_TABLE[] is not initial.
  clear : LF_LINES_WRITTEN.
  call method CL_RSAN_UT_APPSERV_FILE_WRITER=>APPSERVER_FILE_WRITE
    exporting
      I_FILENAME      = IF_FILE
      I_OVERWRITE     = ABAP_TRUE
      I_DATA_TAB      = LT_SFILE_TABLE
    importing
      E_LINES_WRITTEN = LF_LINES_WRITTEN
    exceptions
      OPEN_FAILED     = 1
      WRITE_FAILED    = 2
      CLOSE_FAILED    = 3
      others          = 4.
  CF_SUBRC = SY-SUBRC.
  if SY-SUBRC <> 0.
    message id SY-MSGID type SY-MSGTY number SY-MSGNO
               with SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  else.
    write :/ text-T09, ':' , LF_LINES_WRITTEN left-justified.
  endif.
*  endif.
endform.

*-------------------------------------------------------------------------------------------------*
*** USER COMMAND
*-------------------------------------------------------------------------------------------------*
form USER_COMMAND.

  data(lf_ucomm) = sy-UCOMM.

*** Handle User Command
  case LF_UCOMM.

***  File location radio button group selected
    when 'SEL'.
      case ABAP_TRUE.
        when P_RAD1.    " Presentation Server
          clear P_FILE.
          move LC_PATHP to P_FILE.
          if SO_VBELN is not initial.
            if SO_VBELN-HIGH is initial.
              concatenate LC_PATHP SO_VBELN-LOW '.csv' into P_FILE.
            else.
              concatenate LC_PATHP SO_VBELN-LOW '_' SO_VBELN-HIGH '.csv' into P_FILE.
            endif.
          endif.

        when P_RAD2.    " Application Server
          clear P_FILE.
          move LC_PATHS to P_FILE.
          if SO_VBELN is not initial.
            if SO_VBELN-HIGH is initial.
              concatenate LC_PATHS SO_VBELN-LOW '.csv' into P_FILE.
            else.
              concatenate LC_PATHS SO_VBELN-LOW '_' SO_VBELN-HIGH '.csv' into P_FILE.
            endif.
          endif.

        when others.
          " handle additional entries
      endcase.

*** When Background Job (check File Authorization and that option 'Presentation server' is not selected)
    when 'SJOB' or 'PRIN'.
      case ABAP_TRUE.
        when P_RAD2.
          LF_FILE = P_FILE.
          perform SAVE_TO_SERVER using LF_FILE
                                 changing LF_SUBRC.
          check LF_SUBRC eq 0.
          clear LF_FILE.

        when P_RAD1.
          message E106(ZUS01_MIG).
      endcase.

*** When execute in foreground (check File Authorization)
    when 'ONLI'.
      if P_RAD2 eq ABAP_TRUE.
        LF_FILE = P_FILE.
        perform SAVE_TO_SERVER using LF_FILE
                               changing LF_SUBRC.
        check LF_SUBRC eq 0.
        clear LF_FILE.
      endif.

*** Enter/Return
    when SPACE.

      if P_RAD1 eq 'X'.   " Presentation Server
        if SO_VBELN is not initial and P_FILE eq LC_PATHP.
          if SO_VBELN-HIGH is initial.
            concatenate LC_PATHP SO_VBELN-LOW '.csv' into P_FILE.
          else.
            concatenate LC_PATHP SO_VBELN-LOW '_' SO_VBELN-HIGH '.csv' into P_FILE.
          endif.
        endif.

      elseif P_RAD2 eq 'X'.   " Application Server
        if SO_VBELN is not initial and P_FILE eq LC_PATHS.
          if SO_VBELN-HIGH is initial.
            concatenate LC_PATHS SO_VBELN-LOW '.csv' into P_FILE.
          else.
            concatenate LC_PATHS SO_VBELN-LOW '_' SO_VBELN-HIGH '.csv' into P_FILE.
          endif.
        endif.
      endif.

    when others.
      " handle additional entries
  endcase.

endform.

form CALCULATE_CNT_OF_RECS.

***Get SD Header data
  select VBELN
    into table @data(LT_VBAK)
    from VBAK
    where VBELN in @SO_VBELN.

  if SY-SUBRC eq 0.

*** Get SD Items data
    select VBELN, POSNR, MATNR
      into table @data(LT_VBAP)
      from VBAP
      for all entries in @LT_VBAK
      where VBELN eq @LT_VBAK-VBELN and
            POSNR in @SO_POSNR      and
            MATNR in @SO_MATNR.

***     Delete all Multi-Quantity line items for reference materials
    if P_EXCLMQ is not initial.
      delete LT_VBAP where MATNR cp '*MQ*'.
    endif.

*** Set total recs to process
    LF_PROLIN = LINES( LT_VBAP ).
    check LF_PROLIN eq 0.
    LF_PROLIN = 1.
  endif.

endform.
