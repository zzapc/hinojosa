FUNCTION z_seitr_fbusqpa.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_IMPORTE) TYPE  DIFFB_F05A
*"     REFERENCE(I_KUNNR) TYPE  KUNNR OPTIONAL
*"     REFERENCE(I_LIFNR) TYPE  LIFNR OPTIONAL
*"     REFERENCE(I_SAKNR) TYPE  SAKNR OPTIONAL
*"     REFERENCE(I_BUKRS) TYPE  BUKRS OPTIONAL
*"  EXPORTING
*"     REFERENCE(ZFI_DOCS_T) TYPE  ZSEITRTY_003
*"     REFERENCE(E_MENSAJE) TYPE  MSGTY
*"----------------------------------------------------------------------

  GET TIME.
  fecha_ini = sy-datum.
  tiempo_ini = sy-uzeit.

  PERFORM inicializar.

  PERFORM busq_bsid USING i_kunnr i_bukrs.

  PERFORM busq_bsik USING i_lifnr i_bukrs.

  gv_import_e = i_importe. "importe entrado.
  gv_rc        = 4.
  gv_refe      = 0.
  gv_indice = 0.
  gv_mincant = 0.
  gv_maxcant = 0.
  gv_importb  = i_importe.    "importe entrado como (7p)
  gv_nexts = i_importe / 10.  "importe entre 10.

  IF gv_nexts < 0.            "si el importe entrado es negativo,
    gv_nexts = - gv_nexts.    "el importe superior máximo será negativo también.
  ENDIF.

  gv_nexti = - gv_nexts.      "y el importe inferior lo contrario al importe superior
  gv_next  = space.
  REFRESH bettab.
  CLEAR bettab.

* Tratamos las partidas
  LOOP AT lt_bsid INTO ls_bsid.

    "ASC >>> 13.09.2019. hay que incluír todas las partidas, no sólo las que sean únicas en importe y fecha
    MOVE-CORRESPONDING ls_bsid TO ls_partidas.
    MOVE ls_bsid-dmbtr TO ls_partidas-netfw.
    ls_partidas-venci = ls_partidas-zfbdt + ls_partidas-zbd1t. "cálculo de vencimiento de la partida
    APPEND ls_partidas TO lt_partidas.

*    CLEAR lv_count.
*    SELECT COUNT(*) INTO lv_count FROM bsid "buscamos si existe más de una partida abierta con mismo importe y fecha vencimiento.
*      WHERE kunnr EQ ls_bsid-kunnr AND
*            bukrs EQ ls_bsid-bukrs AND
*            zfbdt EQ ls_bsid-zfbdt AND
*            zbd1t EQ ls_bsid-zbd1t AND
*            wrbtr EQ ls_bsid-wrbtr AND
*            shkzg EQ ls_bsid-shkzg.
*
*    IF lv_count EQ '1'. "Solo si no existe más de una partida abierta con mismo importe y fecha vencimiento, la tendremos en cuenta.
*
*      MOVE-CORRESPONDING ls_bsid TO ls_partidas.
*
*      MOVE ls_bsid-dmbtr TO ls_partidas-netfw.
*
*      ls_partidas-venci = ls_partidas-zfbdt + ls_partidas-zbd1t. "cálculo de vencimiento de la partida
*
*      APPEND ls_partidas TO lt_partidas.
*
*    ENDIF.
    "ASC <<< 13.09.2019. hay que incluír todas las partidas, no sólo las que sean únicas en importe y fecha

  ENDLOOP.


  LOOP AT lt_bsik INTO ls_bsik.

    "ASC >>> 13.09.2019. hay que incluír todas las partidas, no sólo las que sean únicas en importe y fecha
    MOVE-CORRESPONDING ls_bsik TO ls_partidas.
    MOVE ls_bsik-dmbtr TO ls_partidas-netfw.
    ls_partidas-venci = ls_partidas-zfbdt + ls_partidas-zbd1t. "cálculo de vencimiento de la partida
    APPEND ls_partidas TO lt_partidas.

*    CLEAR lv_count.
*    SELECT COUNT(*) INTO lv_count FROM bsik "buscamos si existe más de una partida abierta con mismo importe y fecha vencimiento.
*      WHERE lifnr EQ ls_bsik-lifnr AND
*            bukrs EQ ls_bsik-bukrs AND
*            zfbdt EQ ls_bsik-zfbdt AND
*            zbd1t EQ ls_bsik-zbd1t AND
*            wrbtr EQ ls_bsik-wrbtr AND
*            shkzg EQ ls_bsik-shkzg.
*
*    IF lv_count EQ '1'. "Solo si no existe más de una partida abierta con mismo importe y fecha vencimiento, la tendremos en cuenta.
*
*      MOVE-CORRESPONDING ls_bsik TO ls_partidas.
*
*      MOVE ls_bsik-dmbtr TO ls_partidas-netfw.
*
*      ls_partidas-venci = ls_partidas-zfbdt + ls_partidas-zbd1t. "cálculo de vencimiento de la partida
*
*      APPEND ls_partidas TO lt_partidas.
*
*    ENDIF.

  ENDLOOP.


*------- Candidatos en tabla BSID/BSIK/BSIS, búsqueda individual--------
  gv_refe1 = 0 - i_importe.

  SORT lt_partidas BY venci ASCENDING. "Criterio Hinojosa: ordenamos por fecha de vencimiento más antigua

  "ASC >>> 13.09.2019. Por problemas de rendimiento, acotamos la tabla a los 50 registros más antigüos.
  DATA: lv_i            TYPE i,
        lt_partidas_aux LIKE lt_partidas.
  REFRESH: lt_partidas_aux. CLEAR lv_i.

  DESCRIBE TABLE lt_partidas LINES DATA(lv_num_part).
  IF lv_num_part > 50.
    lv_num_part = 50.
  ENDIF.

  ADD 1 TO lv_i.

  WHILE ( lv_i <= lv_num_part ).
    APPEND lt_partidas[ lv_i ] TO lt_partidas_aux.
    ADD 1 TO lv_i.
  ENDWHILE.

  lt_partidas = lt_partidas_aux.
  "ASC <<< 13.09.2019. Por problemas de rendimiento, acotamos la tabla a los 50 registros más antigüos.

  LOOP AT lt_partidas INTO ls_partidas.

    CHECK gv_marca NE 'X'.

*------- Vamos a ver cuáles son las que coinciden..----------------------------------
    IF  ls_partidas-netfw = gv_refe1
    AND ls_partidas-shkzg = 'H'.
      gv_marca = 'X'.
      gv_rc = 0.
      bettab-posnr = sy-tabix.

* Pasamos los valores encontrados a la tabla de salida
      gs_zfi_docs_t-bukrs = i_bukrs.
      gs_zfi_docs_t-belnr = ls_partidas-belnr(10).
      gs_zfi_docs_t-umskz = ls_partidas-umskz.
      gs_zfi_docs_t-gjahr = ls_partidas-gjahr.
      APPEND gs_zfi_docs_t TO zfi_docs_t.
* Fin traspaso

      PERFORM postab_xkomb_reset.

      EXIT.
    ENDIF.

    IF  ls_partidas-netfw = i_importe
    AND ls_partidas-shkzg = 'S'.
      gv_marca = 'X'.
      gv_rc = 0.
      bettab-posnr = sy-tabix.

* Pasamos los valores encontrados a la tabla de salida
      gs_zfi_docs_t-bukrs = i_bukrs.
      gs_zfi_docs_t-belnr = ls_partidas-belnr(10).
      gs_zfi_docs_t-umskz = ls_partidas-umskz.
      gs_zfi_docs_t-gjahr = ls_partidas-gjahr.
      APPEND gs_zfi_docs_t TO zfi_docs_t.

* Fin traspaso
      PERFORM postab_xkomb_reset.
      EXIT.
    ENDIF.

*------- Actualizamos el contador-----------------------------------------
    gv_refe = gv_refe + 1.

*------- Frühere Akontozahlungen ganz nach vorne -----------------------
    IF ls_partidas-xkomb = space.
      IF  ls_partidas-bschl = t041a-bsdha
      AND ( ls_partidas-rebzg = space OR
            ls_partidas-rebzg = ls_partidas-belnr ).
        ls_partidas-xkomb = '2'.
      ELSE.
        ls_partidas-xkomb = '1'.
      ENDIF.
    ENDIF.
    ls_partidas-oriso = sy-tabix.  "´número de índice en la clasificación original
    MODIFY lt_partidas FROM ls_partidas.
  ENDLOOP.

*------- Alguna partida encontrada? -----------------------------------------
  IF gv_rc NE 0.

*------- SORT nach XKOMB / VERZG / ... ---------------------------------
    SORT lt_partidas BY xkomb DESCENDING
                        verzg DESCENDING
                        venci ASCENDING  "Criterio Hinojosa. JME - 15.05.2019 Error contabilizaciones automáticas Caixabank. Cambiamos el orden de los
                                          "criterios de ordenacion para que el vencimiento este antes que el indicador debe/haber
                        shkzg ASCENDING.
    "   bldat ASCENDING
    "   netfw DESCENDING
*                        venci ASCENDING. "Criterio Hinojosa. JME - 15.05.2019 Error contabilizaciones automáticas Caixabank


    IF gv_refe LE 50. "límite por rendimiento.

      gv_comb = gv_refe.

      LOOP AT lt_partidas INTO ls_partidas.

        IF ls_partidas-xkomb = space.
          EXIT.
        ENDIF.
        IF ls_partidas-shkzg = 'S'.
          bettab-netfw = ls_partidas-netfw.
          gv_maxcant    = gv_maxcant + ls_partidas-netfw.
        ELSE.
          bettab-netfw = 0 - ls_partidas-netfw.
          gv_mincant    = gv_mincant - ls_partidas-netfw.
        ENDIF.
        bettab-posnr = sy-tabix.
        bettab-belnr = ls_partidas-belnr.
        APPEND bettab.
      ENDLOOP.

*------- Una oportunidad más ? ----------------------------------
      gv_refe = i_importe * 9 / 10.

      IF gv_refe < gv_mincant
      OR gv_refe > gv_maxcant.
        gv_rc = 4.
      ELSE.
        gv_maxcant = i_importe - gv_maxcant.
        gv_mincant = i_importe - gv_mincant.
        gv_nexts = i_importe + gv_nexts.
        gv_nexti = i_importe + gv_nexti.
        gv_refe  = 0.
        gv_i     = 1.
        gv_refe1 = 0.
        PERFORM kombinieren.
      ENDIF.

    ELSE. "no lo podemos tratar por temas de rendimiento.

      PERFORM exclude_open_items. "Criterio Hinojosa

      IF lv_number GT 50. "no lo podemos tratar por temas de rendimiento.

        e_mensaje   = 'E'.

      ELSE.

        gv_comb = gv_refe.

        LOOP AT lt_partidas INTO ls_partidas.

          IF ls_partidas-xkomb = space.
            EXIT.
          ENDIF.
          IF ls_partidas-shkzg = 'S'.
            bettab-netfw = ls_partidas-netfw.
            gv_maxcant    = gv_maxcant + ls_partidas-netfw.
          ELSE.
            bettab-netfw = 0 - ls_partidas-netfw.
            gv_mincant    = gv_mincant - ls_partidas-netfw.
          ENDIF.
          bettab-posnr = sy-tabix.
          bettab-belnr = ls_partidas-belnr.
          APPEND bettab.
        ENDLOOP.

*------- Una oportunidad más ? ----------------------------------
        gv_refe = i_importe * 9 / 10.

        IF gv_refe < gv_mincant
        OR gv_refe > gv_maxcant.
          gv_rc = 4.
        ELSE.
          gv_maxcant = i_importe - gv_maxcant.
          gv_mincant = i_importe - gv_mincant.
          gv_nexts = i_importe + gv_nexts.
          gv_nexti = i_importe + gv_nexti.
          gv_refe  = 0.
          gv_i     = 1.
          gv_refe1 = 0.
          PERFORM kombinieren.
        ENDIF.

      ENDIF.

    ENDIF.

  ENDIF.


  IF bettab IS NOT INITIAL.

    LOOP AT bettab WHERE xflag IS NOT INITIAL.
      gs_zfi_docs_t-bukrs = i_bukrs.
      gs_zfi_docs_t-belnr = bettab-belnr(10).

* Aquí también es necesario pasar el CME
      LOOP AT lt_partidas INTO ls_partidas WHERE belnr EQ bettab-belnr(10).
        gs_zfi_docs_t-umskz = ls_partidas-umskz.
        gs_zfi_docs_t-gjahr = ls_partidas-gjahr.
      ENDLOOP.

* Aquí también es necesario pasar el CME
      APPEND gs_zfi_docs_t TO zfi_docs_t.
    ENDLOOP.

  ENDIF.

  IF zfi_docs_t IS INITIAL.
    e_mensaje = 'E'.
  ENDIF.

ENDFUNCTION.
