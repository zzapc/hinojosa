*&---------------------------------------------------------------------*
*& Report  ZSMM_IDOC_EMCIAS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT zsmm_idoc_emcias.
DATA: t_zsmm_idoc_emcia LIKE zsmm_idoc_emcias_str OCCURS 0 WITH HEADER LINE,
      t_dd03n           LIKE dd03n OCCURS 0 WITH HEADER LINE,
      t_comm_idoc       LIKE edidc OCCURS 0 WITH HEADER LINE,
      t_edidd           LIKE edidd OCCURS 0 WITH HEADER LINE.
*   refresh T_EDIDD.
*
TABLES: mkpf, mseg, zsmm_idoc_emcias.
DATA: edidc TYPE edidc.

SELECT-OPTIONS: s_mblnr FOR mkpf-mblnr ,
                s_mjahr FOR mkpf-mjahr OBLIGATORY DEFAULT sy-datum+0(4),
                s_budat FOR mkpf-budat,
                s_bwart FOR mseg-bwart,
                s_matnr FOR mseg-matnr.

SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK rec WITH FRAME TITLE text-rec.
PARAMETERS: rcvpor LIKE edidc-rcvpor OBLIGATORY DEFAULT 'HPD_001',
            rcvprn LIKE edidc-rcvprn OBLIGATORY DEFAULT 'HPDCLNT001',
            rcvprt LIKE edidc-rcvprt OBLIGATORY DEFAULT  'LS',
            rcvpfc LIKE edidc-rcvpfc.
SELECTION-SCREEN END OF BLOCK rec.
SELECTION-SCREEN BEGIN OF BLOCK rem WITH FRAME TITLE text-rem.
PARAMETERS: sndpor LIKE edidc-sndpor OBLIGATORY DEFAULT 'SAPHED',
            sndprn LIKE edidc-sndprn OBLIGATORY DEFAULT 'HEDCLNT100',
            sndprt LIKE edidc-sndprt OBLIGATORY DEFAULT  'LS',
            sndpfc LIKE edidc-sndpfc.
SELECTION-SCREEN END OF BLOCK rem.
SELECTION-SCREEN BEGIN OF BLOCK tml WITH FRAME TITLE text-tml.
PARAMETERS: mestyp LIKE edidc-mestyp OBLIGATORY DEFAULT 'WMMBXY',
            idoctp LIKE edidc-idoctp OBLIGATORY DEFAULT 'WMMBID02',
            mescod LIKE edidc-mescod ,
            mesfct LIKE edidc-mesfct.
SELECTION-SCREEN END OF BLOCK tml.

*            p_MEST LIKE edmsg-msgtyp OBLIGATORY DEFAULT 'ZGAVISTM',
*            p_logi like tbdlst-logsys OBLIGATORY.

START-OF-SELECTION.

  SELECT * APPENDING  CORRESPONDING FIELDS OF TABLE t_zsmm_idoc_emcia
       FROM zsmm_idoc_emcias WHERE mblnr   IN s_mblnr
                              AND mjahr   IN s_mjahr
                              AND budat   IN s_budat
                              AND bwart   IN s_bwart
                              AND matnr   IN s_matnr.
  IF t_zsmm_idoc_emcia[] IS INITIAL.
  ELSE.
    SORT t_zsmm_idoc_emcia.
    LOOP AT t_zsmm_idoc_emcia.
      AT FIRST.
        DATA: campo_a(100),
              campo_b(100).
        FIELD-SYMBOLS: <campo_a>, <campo_b>.
        SELECT * INTO CORRESPONDING FIELDS OF TABLE t_dd03n FROM dd03n WHERE tabname EQ 'EDIDC'.
        LOOP AT t_dd03n.
          campo_a = t_dd03n-fieldname.
          ASSIGN (campo_a) TO <campo_a>.
          CHECK sy-subrc EQ 0.
          CONCATENATE 'EDIDC-' t_dd03n-fieldname INTO campo_b.
          ASSIGN (campo_b) TO <campo_b>.
          CHECK sy-subrc EQ 0.
          MOVE <campo_a> TO <campo_b>.
        ENDLOOP.

      ENDAT.
      AT NEW mjahr.
        TABLES: e1mbxyh ,
                e1mbxyi ,
                e1mbxyj .


        REFRESH : t_comm_idoc, t_edidd.
        SELECT SINGLE * FROM mkpf WHERE mblnr EQ t_zsmm_idoc_emcia-mblnr
                                                                          AND mjahr EQ t_zsmm_idoc_emcia-mjahr.
        MOVE-CORRESPONDING mkpf TO e1mbxyh.
        CLEAR t_edidd.
        t_edidd-segnam = 'E1MBXYH'.
        t_edidd-sdata  = e1mbxyh.
        APPEND t_edidd.
      ENDAT.
      CLEAR e1mbxyi.
      SELECT SINGLE *  FROM mseg WHERE mblnr EQ t_zsmm_idoc_emcia-mblnr
                                                                       AND mjahr EQ t_zsmm_idoc_emcia-mjahr
                                                                       AND zeile EQ t_zsmm_idoc_emcia-zeile.
      MOVE-CORRESPONDING mseg TO e1mbxyi.
      CLEAR t_edidd.
      t_edidd-segnam = 'E1MBXYI'.
      t_edidd-sdata  = e1mbxyi..
      APPEND t_edidd.
      CLEAR e1mbxyj.
      MOVE-CORRESPONDING mseg TO e1mbxyj.
      CLEAR t_edidd.
      t_edidd-segnam = 'E1MBXYJ'.
      t_edidd-sdata  = e1mbxyj.
      APPEND t_edidd.
      AT END OF mjahr.
        CALL FUNCTION 'MASTER_IDOC_DISTRIBUTE'
          EXPORTING
            master_idoc_control            = edidc
*           OBJ_TYPE                       = ''
*           CHNUM                          = ''
          TABLES
            communication_idoc_control     = t_comm_idoc
            master_idoc_data               = t_edidd
          EXCEPTIONS
            error_in_idoc_control          = 1
            error_writing_idoc_status      = 2
            error_in_idoc_data             = 3
            sending_logical_system_unknown = 4
            OTHERS                         = 5.
      ENDAT.
      AT LAST.
        COMMIT WORK AND WAIT.
      ENDAT.
    ENDLOOP.
  ENDIF.
*  select * into CORRESPONDING FIELDS OF TABLE t_avisos from ZGBC_AVISOS
*       where clave  in s_CLAVE
*         and erdat  in s_ERDAT
*         and ernam  in s_ERnam
*         and ERZEIt in s_ERZEI.
*   delete t_avisos where send eq 'X'.
*   check t_avisos[] is not INITIAL.
*   clear S_CTRL_REC.
**   S_CTRL_REC-RCVPOR = C_RCVPOR. "Receiver Port
*   S_CTRL_REC-MESTYP = p_MEST. "Message type
*   S_CTRL_REC-IDOCTP = 'ZGAVISEI'. "Basic IDOC type
*   S_CTRL_REC-RCVPRT = 'LS'. "Partner type of receiver
*   S_CTRL_REC-RCVPRN = p_logi. "Partner number of receiver
*
*  S_CTRL_REC-SNDPRT = C_SNDPRT. "Sender Partner type
*  S_CTRL_REC-SNDPRN = C_SNDPRN. "Sender Partner Number
*
*   DATA : T_COMM_IDOC LIKE EDIDC OCCURS 0 WITH HEADER LINE.
*   DATA : T_EDIDD LIKE EDIDD OCCURS 0 WITH HEADER LINE.
*   refresh T_EDIDD.
*   datA: ZGAVISE type ZGAVISE.
*   loop at t_avisos.
*        clear ZGAVISE.
*        move-CORRESPONDING t_avisos to ZGAVISE.
*        clear T_EDIDD.
*        T_EDIDD-segnam = 'ZGAVISE'.
*        T_EDIDD-sdata  = ZGAVISE.
*        append T_EDIDD.
*   ENDLOOP.
*


*
**  IF SY-SUBRC <> 0.
*** Implement suitable error handling here
