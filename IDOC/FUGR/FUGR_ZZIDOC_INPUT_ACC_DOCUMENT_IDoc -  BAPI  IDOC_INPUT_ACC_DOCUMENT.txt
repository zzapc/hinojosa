FUNCTION zzidoc_input_acc_document.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(INPUT_METHOD) LIKE  BDWFAP_PAR-INPUTMETHD
*"     VALUE(MASS_PROCESSING) LIKE  BDWFAP_PAR-MASS_PROC
*"  EXPORTING
*"     VALUE(WORKFLOW_RESULT) LIKE  BDWF_PARAM-RESULT
*"     VALUE(APPLICATION_VARIABLE) LIKE  BDWF_PARAM-APPL_VAR
*"     VALUE(IN_UPDATE_TASK) LIKE  BDWFAP_PAR-UPDATETASK
*"     VALUE(CALL_TRANSACTION_DONE) LIKE  BDWFAP_PAR-CALLTRANS
*"  TABLES
*"      IDOC_CONTRL STRUCTURE  EDIDC
*"      IDOC_DATA STRUCTURE  EDIDD
*"      IDOC_STATUS STRUCTURE  BDIDOCSTAT
*"      RETURN_VARIABLES STRUCTURE  BDWFRETVAR
*"      SERIALIZATION_INFO STRUCTURE  BDI_SER
*"  EXCEPTIONS
*"      WRONG_FUNCTION_CALLED
*"----------------------------------------------------------------------
*----------------------------------------------------------------------*
*  this function module is generated                                   *
*          never change it manually, please!        19.06.2013         *
*----------------------------------------------------------------------*

  DATA:
      e1bpache09 LIKE e1bpache09,
      e1bpacpa09 LIKE e1bpacpa09,
      e1bpaccahd LIKE e1bpaccahd,
      e1bpacgl09 LIKE e1bpacgl09,
      e1bpacgl091 LIKE e1bpacgl091,
      e1bpacar09 LIKE e1bpacar09,
      e1bpacap09 LIKE e1bpacap09,
      e1bpactx09 LIKE e1bpactx09,
      e1bpaccr09 LIKE e1bpaccr09,
      e1bpackec9 LIKE e1bpackec9,
      e1bpackev9 LIKE e1bpackev9,
      e1bpacextc LIKE e1bpacextc,
      e1bpacpc09 LIKE e1bpacpc09,
      e1bpaccait LIKE e1bpaccait,
      e1bpparex LIKE e1bpparex,
      e1bpacre09 LIKE e1bpacre09,
      e1bpacwt09 LIKE e1bpacwt09,

      obj_type LIKE
        bapiache09-obj_type,
      obj_key LIKE
        bapiache09-obj_key,
      obj_sys LIKE
        bapiache09-obj_sys,
      documentheader LIKE
        bapiache09,
      customercpd LIKE
        bapiacpa09,
      contractheader LIKE
        bapiaccahd,

      accountgl LIKE bapiacgl09
                  OCCURS 0 WITH HEADER LINE,
      accountreceivable LIKE bapiacar09
                  OCCURS 0 WITH HEADER LINE,
      accountpayable LIKE bapiacap09
                  OCCURS 0 WITH HEADER LINE,
      accounttax LIKE bapiactx09
                  OCCURS 0 WITH HEADER LINE,
      currencyamount LIKE bapiaccr09
                  OCCURS 0 WITH HEADER LINE,
      criteria LIKE bapiackec9
                  OCCURS 0 WITH HEADER LINE,
      valuefield LIKE bapiackev9
                  OCCURS 0 WITH HEADER LINE,
      extension1 LIKE bapiacextc
                  OCCURS 0 WITH HEADER LINE,
      return LIKE bapiret2
                  OCCURS 0 WITH HEADER LINE,
      paymentcard LIKE bapiacpc09
                  OCCURS 0 WITH HEADER LINE,
      contractitem LIKE bapiaccait
                  OCCURS 0 WITH HEADER LINE,
      extension2 LIKE bapiparex
                  OCCURS 0 WITH HEADER LINE,
      realestate LIKE bapiacre09
                  OCCURS 0 WITH HEADER LINE,
      accountwt LIKE bapiacwt09
                  OCCURS 0 WITH HEADER LINE,

      t_edidd  LIKE edidd OCCURS 0 WITH HEADER LINE,
      bapi_retn_info  LIKE bapiret2 OCCURS 0 WITH HEADER LINE.

  DATA: error_flag,
        bapi_idoc_status LIKE bdidocstat-status.

  DATA: lv_bankn TYPE bankn.

  in_update_task = 'X'.
  CLEAR call_transaction_done.
* check if the function is called correctly                            *
  READ TABLE idoc_contrl INDEX 1.
  IF sy-subrc <> 0.
    EXIT.
  ELSEIF idoc_contrl-mestyp <> 'ACC_DOCUMENT'.
    RAISE wrong_function_called.
  ENDIF.

* go through all IDocs                                                 *
  LOOP AT idoc_contrl.
*   select segments belonging to one IDoc                              *
    REFRESH t_edidd.
    LOOP AT idoc_data WHERE docnum = idoc_contrl-docnum.
      APPEND idoc_data TO t_edidd.
    ENDLOOP.

*   through all segments of this IDoc                                  *
    CLEAR error_flag.
    REFRESH bapi_retn_info.
    CATCH SYSTEM-EXCEPTIONS conversion_errors = 1.
      LOOP AT t_edidd INTO idoc_data.

        CASE idoc_data-segnam.

          WHEN 'E1BPACHE09'.

            e1bpache09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpache09
               TO documentheader.                           "#EC ENHOK

            IF e1bpache09-doc_date
               IS INITIAL.
              CLEAR documentheader-doc_date.
            ENDIF.
            IF e1bpache09-pstng_date
               IS INITIAL.
              CLEAR documentheader-pstng_date.
            ENDIF.
            IF e1bpache09-trans_date
               IS INITIAL.
              CLEAR documentheader-trans_date.
            ENDIF.
            IF e1bpache09-vatdate
               IS INITIAL.
              CLEAR documentheader-vatdate.
            ENDIF.
            IF e1bpache09-invoice_rec_date
               IS INITIAL.
              CLEAR documentheader-invoice_rec_date.
            ENDIF.

          WHEN 'E1BPACPA09'.

            e1bpacpa09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacpa09
               TO customercpd.                              "#EC ENHOK


          WHEN 'E1BPACCAHD'.

            e1bpaccahd = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpaccahd
               TO contractheader.                           "#EC ENHOK


          WHEN 'E1BPACGL09'.

            e1bpacgl09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacgl09
               TO accountgl.                                "#EC ENHOK

            IF e1bpacgl09-pstng_date
               IS INITIAL.
              CLEAR accountgl-pstng_date.
            ENDIF.
            IF e1bpacgl09-value_date
               IS INITIAL.
              CLEAR accountgl-value_date.
            ENDIF.
            IF e1bpacgl09-asval_date
               IS INITIAL.
              CLEAR accountgl-asval_date.
            ENDIF.
            IF e1bpacgl09-billing_period_start_date
               IS INITIAL.
              CLEAR accountgl-billing_period_start_date.
            ENDIF.
            IF e1bpacgl09-billing_period_end_date
               IS INITIAL.
              CLEAR accountgl-billing_period_end_date.
            ENDIF.
            READ TABLE t_edidd TRANSPORTING NO FIELDS WITH KEY
                         segnam = 'E1BPACGL091'.
            IF sy-subrc <> 0.
              APPEND accountgl.
            ENDIF.

          WHEN 'E1BPACGL091'.

            e1bpacgl091 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacgl091
               TO accountgl.                                "#EC ENHOK

            APPEND accountgl.

          WHEN 'E1BPACAR09'.

            e1bpacar09 = idoc_data-sdata.

* SOTHIS - SACAMOS EL BANCO PROPIO A TRAVES DEL CODIGO DE CUENTA
            IF NOT e1bpacar09-bank_id IS INITIAL.
              CLEAR lv_bankn.
              CONCATENATE '%' e1bpacar09-bank_id INTO lv_bankn.
              SELECT SINGLE hbkid INTO e1bpacar09-bank_id
              FROM t012k
              WHERE bankn LIKE lv_bankn
              AND bukrs = e1bpache09-comp_code.
            ENDIF.

            MOVE-CORRESPONDING e1bpacar09
               TO accountreceivable.                        "#EC ENHOK

            IF e1bpacar09-bline_date
               IS INITIAL.
              CLEAR accountreceivable-bline_date.
            ENDIF.
            IF e1bpacar09-tax_date
               IS INITIAL.
              CLEAR accountreceivable-tax_date.
            ENDIF.
            APPEND accountreceivable.

          WHEN 'E1BPACAP09'.

            e1bpacap09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacap09
               TO accountpayable.                           "#EC ENHOK

            IF e1bpacap09-bline_date
               IS INITIAL.
              CLEAR accountpayable-bline_date.
            ENDIF.
            IF e1bpacap09-tax_date
               IS INITIAL.
              CLEAR accountpayable-tax_date.
            ENDIF.
            APPEND accountpayable.

          WHEN 'E1BPACTX09'.

            e1bpactx09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpactx09
               TO accounttax.                               "#EC ENHOK

            IF e1bpactx09-tax_date
               IS INITIAL.
              CLEAR accounttax-tax_date.
            ENDIF.
            APPEND accounttax.

          WHEN 'E1BPACCR09'.

            e1bpaccr09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpaccr09
               TO currencyamount.                           "#EC ENHOK

            APPEND currencyamount.

          WHEN 'E1BPACKEC9'.

            e1bpackec9 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpackec9
               TO criteria.                                 "#EC ENHOK

            APPEND criteria.

          WHEN 'E1BPACKEV9'.

            e1bpackev9 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpackev9
               TO valuefield.                               "#EC ENHOK

            APPEND valuefield.

          WHEN 'E1BPACEXTC'.

            e1bpacextc = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacextc
               TO extension1.                               "#EC ENHOK

            APPEND extension1.

          WHEN 'E1BPACPC09'.

            e1bpacpc09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacpc09
               TO paymentcard.                              "#EC ENHOK

            IF e1bpacpc09-cc_valid_f
               IS INITIAL.
              CLEAR paymentcard-cc_valid_f.
            ENDIF.
            IF e1bpacpc09-cc_valid_t
               IS INITIAL.
              CLEAR paymentcard-cc_valid_t.
            ENDIF.
            IF e1bpacpc09-auth_date
               IS INITIAL.
              CLEAR paymentcard-auth_date.
            ENDIF.
            APPEND paymentcard.

          WHEN 'E1BPACCAIT'.

            e1bpaccait = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpaccait
               TO contractitem.                             "#EC ENHOK

            APPEND contractitem.

          WHEN 'E1BPPAREX'.

            e1bpparex = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpparex
               TO extension2.                               "#EC ENHOK

            APPEND extension2.

          WHEN 'E1BPACRE09'.

            e1bpacre09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacre09
               TO realestate.                               "#EC ENHOK

            IF e1bpacre09-ref_date
               IS INITIAL.
              CLEAR realestate-ref_date.
            ENDIF.
            APPEND realestate.

          WHEN 'E1BPACWT09'.

            e1bpacwt09 = idoc_data-sdata.
            MOVE-CORRESPONDING e1bpacwt09
               TO accountwt.                                "#EC ENHOK

            APPEND accountwt.

        ENDCASE.

      ENDLOOP.
    ENDCATCH.
    IF sy-subrc = 1.
*     write IDoc status-record as error and continue                   *
      CLEAR bapi_retn_info.
      bapi_retn_info-type   = 'E'.
      bapi_retn_info-id     = 'B1'.
      bapi_retn_info-number = '527'.
      bapi_retn_info-message_v1 = idoc_data-segnam.
      bapi_idoc_status      = '51'.
      PERFORM idoc_status_acc_document
              TABLES t_edidd
                     idoc_status
                     return_variables
               USING idoc_contrl
                     bapi_retn_info
                     bapi_idoc_status
                     workflow_result.
      CONTINUE.
    ENDIF.
*   call BAPI-function in this system                                  *
    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader    = documentheader
        customercpd       = customercpd
        contractheader    = contractheader
      IMPORTING
        obj_type          = obj_type
        obj_key           = obj_key
        obj_sys           = obj_sys
      TABLES
        accountgl         = accountgl
        accountreceivable = accountreceivable
        accountpayable    = accountpayable
        accounttax        = accounttax
        currencyamount    = currencyamount
        criteria          = criteria
        valuefield        = valuefield
        extension1        = extension1
        return            = return
        paymentcard       = paymentcard
        contractitem      = contractitem
        extension2        = extension2
        realestate        = realestate
        accountwt         = accountwt
      EXCEPTIONS
        OTHERS            = 1.
    IF sy-subrc <> 0.
*     write IDoc status-record as error                                *
      CLEAR bapi_retn_info.
      bapi_retn_info-type       = 'E'.
      bapi_retn_info-id         = sy-msgid.
      bapi_retn_info-number     = sy-msgno.
      bapi_retn_info-message_v1 = sy-msgv1.
      bapi_retn_info-message_v2 = sy-msgv2.
      bapi_retn_info-message_v3 = sy-msgv3.
      bapi_retn_info-message_v4 = sy-msgv4.
      bapi_idoc_status          = '51'.
      PERFORM idoc_status_acc_document
              TABLES t_edidd
                     idoc_status
                     return_variables
               USING idoc_contrl
                     bapi_retn_info
                     bapi_idoc_status
                     workflow_result.
    ELSE.
      LOOP AT return.
        IF NOT return IS INITIAL.
          CLEAR bapi_retn_info.
          MOVE-CORRESPONDING return TO bapi_retn_info.      "#EC ENHOK
          IF return-type = 'A' OR return-type = 'E'.
            error_flag = 'X'.
          ENDIF.
          APPEND bapi_retn_info.
        ENDIF.
      ENDLOOP.
      LOOP AT bapi_retn_info.
*       write IDoc status-record                                       *
        IF error_flag IS INITIAL.
          bapi_idoc_status = '53'.
        ELSE.
          bapi_idoc_status = '51'.
          IF bapi_retn_info-type = 'S'.
            CONTINUE.
          ENDIF.
        ENDIF.
        PERFORM idoc_status_acc_document
                TABLES t_edidd
                       idoc_status
                       return_variables
                 USING idoc_contrl
                       bapi_retn_info
                       bapi_idoc_status
                       workflow_result.
      ENDLOOP.
      IF sy-subrc <> 0.
*      'RETURN' is empty write idoc status-record as successful        *
        CLEAR bapi_retn_info.
        bapi_retn_info-type       = 'S'.
        bapi_retn_info-id         = 'B1'.
        bapi_retn_info-number     = '501'.
        bapi_retn_info-message_v1 = 'POST'.
        bapi_idoc_status          = '53'.
        PERFORM idoc_status_acc_document
                TABLES t_edidd
                       idoc_status
                       return_variables
                 USING idoc_contrl
                       bapi_retn_info
                       bapi_idoc_status
                       workflow_result.
      ENDIF.
      IF error_flag IS INITIAL.
*       write linked object keys                                       *
        CLEAR return_variables.
        return_variables-wf_param = 'Appl_Objects'.
        READ TABLE return_variables WITH KEY wf_param = 'Appl_Objects'.
        MOVE obj_type
          TO return_variables-doc_number+00.
        IF sy-subrc <> 0.
          APPEND return_variables.
        ELSE.
          MODIFY return_variables INDEX sy-tabix.
        ENDIF.
        READ TABLE return_variables WITH KEY wf_param = 'Appl_Objects'.
        MOVE obj_key
          TO return_variables-doc_number+05.
        IF sy-subrc <> 0.
          APPEND return_variables.
        ELSE.
          MODIFY return_variables INDEX sy-tabix.
        ENDIF.
        READ TABLE return_variables WITH KEY wf_param = 'Appl_Objects'.
        MOVE obj_sys
          TO return_variables-doc_number+25.
        IF sy-subrc <> 0.
          APPEND return_variables.
        ELSE.
          MODIFY return_variables INDEX sy-tabix.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDLOOP.                             " idoc_contrl






ENDFUNCTION.


* subroutine writing IDoc status-record                                *
FORM idoc_status_acc_document
     TABLES idoc_data    STRUCTURE  edidd
            idoc_status  STRUCTURE  bdidocstat
            r_variables  STRUCTURE  bdwfretvar
      USING idoc_contrl  LIKE  edidc
            VALUE(retn_info) LIKE   bapiret2
            status       LIKE  bdidocstat-status
            wf_result    LIKE  bdwf_param-result.

  CLEAR idoc_status.
  idoc_status-docnum   = idoc_contrl-docnum.
  idoc_status-msgty    = retn_info-type.
  idoc_status-msgid    = retn_info-id.
  idoc_status-msgno    = retn_info-number.
  idoc_status-appl_log = retn_info-log_no.
  idoc_status-msgv1    = retn_info-message_v1.
  idoc_status-msgv2    = retn_info-message_v2.
  idoc_status-msgv3    = retn_info-message_v3.
  idoc_status-msgv4    = retn_info-message_v4.
  idoc_status-repid    = sy-repid.
  idoc_status-status   = status.

  CASE retn_info-parameter.
    WHEN 'ACCOUNTPAYABLE'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACAP09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'ACCOUNTRECEIVABLE'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACAR09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'CONTRACTHEADER'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACCAHD'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'CONTRACTITEM'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACCAIT'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'CURRENCYAMOUNT'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACCR09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'EXTENSION1'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACEXTC'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'ACCOUNTGL'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACGL09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'DOCUMENTHEADER'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACHE09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'CRITERIA'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACKEC9'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'VALUEFIELD'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACKEV9'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'CUSTOMERCPD'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACPA09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'PAYMENTCARD'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACPC09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'REALESTATE'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACRE09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'ACCOUNTTAX'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACTX09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'WITHHOLDINGTAX'
      OR 'ACCOUNTWT'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPACWT09'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN 'EXTENSION2'
         .
      LOOP AT idoc_data WHERE
                        segnam = 'E1BPPAREX'.
        retn_info-row = retn_info-row - 1.
        IF retn_info-row <= 0.
          idoc_status-segnum = idoc_data-segnum.
          idoc_status-segfld = retn_info-field.
          EXIT.
        ENDIF.
      ENDLOOP.
    WHEN OTHERS.

  ENDCASE.

  INSERT idoc_status INDEX 1.

  IF idoc_status-status = '51'.
    wf_result = '99999'.
    r_variables-wf_param   = 'Error_IDOCs'.
    r_variables-doc_number = idoc_contrl-docnum.
    READ TABLE r_variables FROM r_variables.
    IF sy-subrc <> 0.
      APPEND r_variables.
    ENDIF.
  ELSEIF idoc_status-status = '53'.
    CLEAR wf_result.
    r_variables-wf_param = 'Processed_IDOCs'.
    r_variables-doc_number = idoc_contrl-docnum.
    READ TABLE r_variables FROM r_variables.
    IF sy-subrc <> 0.
      APPEND r_variables.
    ENDIF.
    r_variables-wf_param = 'Appl_Object_Type'.
    r_variables-doc_number = 'ACCTGDOCMT'.
    READ TABLE r_variables FROM r_variables.
    IF sy-subrc <> 0.
      APPEND r_variables.
    ENDIF.
  ENDIF.

ENDFORM.                               " IDOC_STATUS_ACC_DOCUMENT
