FUNCTION zssd_masteridoc_matmas_p01.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(MESSAGE_TYPE) LIKE  TBDME-MESTYP
*"     VALUE(SUPPRESS_PROGRESS_INDICATOR) TYPE  FLAG DEFAULT SY-DATAR
*"  EXPORTING
*"     REFERENCE(CREATED_COMM_IDOCS) TYPE  SY-TABIX
*"     REFERENCE(CREATED_MASTER_IDOCS) TYPE  SY-TABIX
*"  TABLES
*"      MARAKEY STRUCTURE  BDIMARAKEY
*"----------------------------------------------------------------------


  CONSTANTS: c_edi_extern      TYPE edi_rcvpor VALUE 'SALESFORCE', "ZHPP_01',
             c_rcvprn          TYPE edi_rcvprn VALUE 'SALESFORCE', "'ZHPPCLNT100',
             c_ls_d            TYPE edi_rcvprt VALUE 'LS',
             c_ls_r            TYPE edi_sndprt VALUE 'LS',
             c_zmsg            TYPE edi_mestyp VALUE 'ZMATMAS_P01',
             c_zstpm_orders    TYPE edi_idoctp VALUE 'ZMATMAS_P01',
             c_material        TYPE segname VALUE 'ZMATERIALES_SALESFORCE',
             c_tintas_material TYPE segname VALUE 'ZTINTAS_SALESFORCE'.

  DATA: ls_idoc_header       TYPE edidc,
        lt_idoc_comm_control TYPE TABLE OF edidc,
        ls_idoc_comm_control TYPE edidc,
        lt_return            TYPE bapiret2_t,
        ls_return            TYPE bapiret2,
        ls_return1           TYPE bapiret1,
        t_edidd              TYPE edidd_tt,
        t_edidd_aux          TYPE edidd_tt.


  DATA: l_zstpm_orders TYPE edi_idoctp,
        l_zmsg         TYPE edi_mestyp.

  DATA: l_edidd          TYPE edidd,
        seg_matnr        TYPE zmateriales_salesforce,
        seg_tintas_matnr TYPE ztintas_salesforce.

  DATA lv_auxlevel TYPE edi_segnum.

  DATA: t_matnr_data TYPE zssdtt_matnr,
        t_return     TYPE bapiret2_t,
        l_matnr      TYPE matnr.


  DATA: output_text(80).
  DATA: output_counter(6).
  DATA: output_total(6).

  l_zstpm_orders = message_type.
  l_zmsg = message_type.

  CLEAR: output_counter.
  DESCRIBE TABLE marakey LINES output_total.        "

  LOOP AT marakey INTO DATA(l_cha).

    output_counter = output_counter + 1.

    IF suppress_progress_indicator = space.
      output_text = 'IDOC p. material & (& de &) se está creando'.
      REPLACE '&' WITH marakey-matnr INTO output_text.
      REPLACE '&' WITH output_counter INTO output_text.
      REPLACE '&' WITH output_total   INTO output_text.

      CONDENSE output_text.
      CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
        EXPORTING
          text = output_text.
    ENDIF.
*    t_marakey INTO DATA(l_mara).
    CLEAR: l_matnr.
*    DATA(l_matnr) = l_cha-tabkey+3(18).
    l_matnr = l_cha-matnr.

    REFRESH: t_matnr_data.

    CALL FUNCTION 'ZSSD_GET_MATNR_DETAIL'
      EXPORTING
        i_matnr       = l_matnr    " Número de material
      IMPORTING
        et_matnr_data = t_matnr_data    " ZSSDTT_MATNR
        et_return     = t_return.    " Tabla retorno

    " BG Inicio 05/10/2023 - URL SF
    SELECT * INTO TABLE @DATA(lt_zurl)
      FROM zssd_url_sf.
    " BG Fin 05/10/2023 - URL SF

    REFRESH: t_edidd.

    CLEAR: l_edidd,lv_auxlevel.

    LOOP AT t_matnr_data INTO DATA(l_data).
      CLEAR: l_edidd.
      l_edidd-segnam = c_material.
      lv_auxlevel = lv_auxlevel + 1.



      seg_matnr = CORRESPONDING #( l_data ).

      seg_matnr-altocaj = trunc( l_data-altocaj ).
      seg_matnr-altopalr = trunc( l_data-altopalr ).
      seg_matnr-anchocaj = trunc( l_data-anchocaj ).
      seg_matnr-ancpal = trunc( l_data-ancpal ).
      seg_matnr-cajpaque = trunc( l_data-cajpaque ).
      seg_matnr-largoplab = trunc( l_data-largoplab ).
      seg_matnr-stomax = trunc( l_data-stomax ).
      seg_matnr-stomin = trunc( l_data-stomin ).
      seg_matnr-paquealt = trunc( l_data-paquealt ).
      seg_matnr-paquebas = trunc( l_data-paquebas ).
      seg_matnr-pegadic = trunc( l_data-pegadic ).
      seg_matnr-largocaj = trunc( l_data-largocaj ).
      seg_matnr-larpal = trunc( l_data-larpal ).
      seg_matnr-anchoplab = trunc( l_data-anchoplab ).

      seg_matnr-altocaj = condense( seg_matnr-altocaj ).
      seg_matnr-altopalr = condense( seg_matnr-altopalr ).
      seg_matnr-anchocaj = condense( seg_matnr-anchocaj ).
      seg_matnr-anchoplab = condense( seg_matnr-anchoplab ).
      seg_matnr-ancpal = condense( seg_matnr-ancpal ).
      seg_matnr-cajpaque = condense( seg_matnr-cajpaque ).
      seg_matnr-largocaj = condense( seg_matnr-largocaj ).
      seg_matnr-largoplab = condense( seg_matnr-largoplab ).
      seg_matnr-larpal = condense( seg_matnr-larpal ).
      seg_matnr-m2caja = condense( seg_matnr-m2caja ).
      seg_matnr-m2cajanet = condense( seg_matnr-m2cajanet ).
      seg_matnr-paquealt = condense( seg_matnr-paquealt ).
      seg_matnr-paquebas = condense( seg_matnr-paquebas ).
      seg_matnr-pegadic = condense( seg_matnr-pegadic ).
      seg_matnr-stomax = condense( seg_matnr-stomax ).
      seg_matnr-stomin = condense( seg_matnr-stomin ).

      l_edidd-sdata = seg_matnr.

      l_edidd-segnum = lv_auxlevel.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.

      l_edidd-segnam = c_tintas_material.
      lv_auxlevel = lv_auxlevel + 1.
      seg_tintas_matnr = CORRESPONDING #( l_data ).

      " BG Inicio 05/10/2023 - URL SF
      READ TABLE lt_zurl INTO DATA(s_zurl) WITH KEY vkorg = l_data-orgvensap.
      IF s_zurl-url IS NOT INITIAL.
*        CONCATENATE s_zurl-url l_data-orgvensap '_'  l_data-codproerp '.pdf' INTO seg_tintas_matnr-zurl.
        CONCATENATE s_zurl-url l_data-codproerp '.pdf' INTO seg_tintas_matnr-zurl.
        CONDENSE seg_tintas_matnr-zurl.
      ENDIF.
      " BG Fin 05/10/2023 - URL SF

      l_edidd-sdata = seg_tintas_matnr.

      l_edidd-segnum = lv_auxlevel.
      APPEND l_edidd TO t_edidd.

    ENDLOOP.

    ls_idoc_header-mandt  = sy-mandt.
    ls_idoc_header-direct = '1'.
    ls_idoc_header-rcvpor = c_edi_extern.
    ls_idoc_header-rcvprt = c_ls_d.
    ls_idoc_header-rcvprn = c_rcvprn.
    ls_idoc_header-sndprt = c_ls_r.
    ls_idoc_header-sndprn = sy-uname.
    ls_idoc_header-mestyp = l_zmsg.
    ls_idoc_header-idoctp = 'ZMATERIALES_SALESFORCE'.

    SORT t_edidd BY segnum ASCENDING.

    CALL FUNCTION 'MASTER_IDOC_DISTRIBUTE' "IN UPDATE TASK
      EXPORTING
        master_idoc_control            = ls_idoc_header
      TABLES
        communication_idoc_control     = lt_idoc_comm_control
        master_idoc_data               = t_edidd
      EXCEPTIONS
        error_in_idoc_control          = 1
        error_writing_idoc_status      = 2
        error_in_idoc_data             = 3
        sending_logical_system_unknown = 4
        OTHERS                         = 5.
    IF sy-subrc <> 0.
      "KO
      ls_return-type        = sy-msgty.
      ls_return-number      = sy-msgno.
      ls_return-id          = sy-msgid.
      ls_return-message_v1  = sy-msgv1.
      ls_return-message_v2  = sy-msgv2.
      ls_return-message_v3  = sy-msgv3.
      ls_return-message_v4  = sy-msgv4.
      APPEND ls_return TO lt_return.
    ELSE.
      "OK
      READ TABLE lt_idoc_comm_control INTO DATA(ls_control_record_out) INDEX 1.
      CHECK sy-subrc = 0.
      DATA(docnum) = ls_control_record_out-docnum.
      ls_return-type        = 'S'.
      ls_return-number      = '398'.
      ls_return-id          = '00'.
      ls_return-message_v1  = docnum.
      APPEND ls_return TO lt_return.


    ENDIF.

    REFRESH: t_edidd.

    created_master_idocs = created_master_idocs + 1.
    done_since_commit = done_since_commit + 1.





* IDOCs before commit
    DATA: c_idocs_before_commit LIKE sy-tabix           VALUE 50.
* commit if necassary
    IF done_since_commit >= c_idocs_before_commit.
      done_since_commit = 0.

*   note 1319389
      CALL FUNCTION 'DB_COMMIT'.
      CALL FUNCTION 'DEQUEUE_ALL'.
      COMMIT WORK.


    ENDIF.

  ENDLOOP.                             "at t_marakey

* note 1319389
  CALL FUNCTION 'DB_COMMIT'.
  CALL FUNCTION 'DEQUEUE_ALL'.
  COMMIT WORK.
*
*  MESSAGE ID 'B1' TYPE 'I' NUMBER '038'
*          WITH created_m_idocs message_type.

ENDFUNCTION.
