FUNCTION zspp_idoc_create.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_ORDERID) TYPE  AUFNR
*"----------------------------------------------------------------------



  DATA: ls_idoc_header       TYPE edidc,
        lt_idoc_comm_control TYPE TABLE OF edidc,
        ls_idoc_comm_control TYPE edidc,
        lt_return            TYPE bapiret2_t,
        ls_return            TYPE bapiret2,
        ls_return1           TYPE bapiret1,
        t_edidd              TYPE edidd_tt.

  l_aufnr = i_orderid.

  SELECT SINGLE  a~aufnr, b~matnr, b~psmng,b~kdauf, b~kdpos, c~gltrp, c~gstrp
  INTO @DATA(l_header)
  FROM aufk AS a
  INNER JOIN afpo AS b ON a~aufnr = b~aufnr
  INNER JOIN caufv AS c ON a~aufnr = c~aufnr.

  SELECT SINGLE *  INTO @DATA(l_mara)
    FROM mara AS a
    LEFT OUTER JOIN makt AS b ON a~matnr = b~matnr AND spras = @sy-langu
    WHERE a~matnr = @l_header-matnr.

  SELECT SINGLE a~kunnr, b~name1, stras, pstlz,regio,ort01,land1
    INTO @DATA(l_customer)
    FROM vbak AS a
    INNER JOIN kna1 AS b ON a~kunnr = b~kunnr
    WHERE a~vbeln = @l_header-kdauf.
*
*
  SELECT aufnr, vornr, t1~steus, t1~werks, ltxa1, t1~arbid, arbpl, ktext, prvbe
    INTO TABLE @DATA(t_operaciones)
    FROM afvc AS t1 INNER JOIN afko AS t2 ON t1~aufpl EQ t2~aufpl
    LEFT OUTER JOIN crhd AS t4 ON t1~arbid EQ t4~objid AND t4~objty EQ 'A'
    LEFT OUTER JOIN crtx AS t3 ON t1~arbid EQ t3~objid AND spras EQ 'S' AND t3~objty EQ 'A'
    WHERE t2~aufnr EQ @i_orderid.


  SELECT * INTO TABLE @DATA(t_resb) FROM resb WHERE aufnr = @i_orderid.

* //Order
  CLEAR: l_edidd.
  seg_ccorder-operation = 'Replace'.
  l_edidd-sdata = seg_ccorder.

  l_edidd-segnam = c_zccorder.
  APPEND l_edidd TO t_edidd.


  CLEAR: l_edidd.
  seg_order-orderid = l_header-aufnr.
  seg_order-productid = l_header-matnr.
  seg_order-customerid = l_customer-kunnr.
  seg_order-orderedqty = l_header-psmng.
  seg_order-earliestpromiseddispdate = l_header-gltrp.
  seg_order-latestpromiseddispdate = l_header-gltrp.

  l_edidd-sdata = seg_order.
  l_edidd-segnam = c_zccorderdata.
  APPEND l_edidd TO t_edidd.

*  PERFORM add_order.

* //Customer
  CLEAR: l_edidd.
  seg_ccustomer-operation = 'Replace'.
  l_edidd-sdata = seg_ccustomer.
  l_edidd-segnam = c_zcccustomer.
  APPEND l_edidd TO t_edidd.

  CLEAR: l_edidd.
  seg_customer-customerid = l_customer-kunnr.
  seg_customer-name = l_customer-name1.
  seg_customer-address = l_customer-stras.
  seg_customer-postzip = l_customer-pstlz.
  seg_customer-town = l_customer-ort01.
  seg_customer-contactname = ''.
  seg_customer-comments = ''.
  seg_customer-tel = ''.
  seg_customer-country = l_customer-land1.

  l_edidd-sdata = seg_customer.
  l_edidd-segnam = c_zcccustomerdata.
  APPEND l_edidd TO t_edidd.

* //Delivery
  CLEAR: l_edidd.
  seg_ccdeliv-operation = 'Replace'.
  l_edidd-sdata = seg_ccdeliv.
  l_edidd-segnam = c_zccdelivery.
  APPEND l_edidd TO t_edidd.

  CLEAR: l_edidd.
  seg_deliv-deliveryid = l_header-kdauf.
  seg_deliv-name = l_customer-name1.
  seg_deliv-address = l_customer-stras.
  seg_deliv-postzip = l_customer-pstlz.
  seg_deliv-town = l_customer-ort01.
  seg_deliv-contactname = ''.
  seg_deliv-sender = ''.
  seg_deliv-country = l_customer-land1.

  l_edidd-sdata = seg_deliv.
  l_edidd-segnam = c_zccdeliverydata.
  APPEND l_edidd TO t_edidd.

*  //Producto
  CLEAR: l_edidd.
  seg_ccproduct-operation = 'Replace'.
  l_edidd-sdata = seg_ccproduct.
  l_edidd-segnam = c_zccproduct.
  APPEND l_edidd TO t_edidd.

  CLEAR: l_edidd.

  seg_product2-productid = l_header-matnr.
  seg_product1-articleref = l_header-matnr.
  seg_product1-materialtype = l_mara-a-mtart.
  seg_product2-unitid = ''.
  seg_product1-materialmanagement = ''.
  seg_product2-productname = l_mara-b-maktx.
  seg_product1-drawingref = ''.
  seg_product1-comments = ''.
  seg_product1-fibredirection = ''.
  seg_product2-productgroup = ''.
  seg_product1-internaldimensions = ''.
  seg_product1-erpmaterialid = ''.
  seg_product2-premium = ''.

  l_edidd-sdata = seg_product1.
  l_edidd-segnam = c_zccproductdata1.
  APPEND l_edidd TO t_edidd.

  CLEAR:l_edidd.
  l_edidd-sdata = seg_product2.
  l_edidd-segnam = c_zccproductdata2.
  APPEND l_edidd TO t_edidd.

* //Process
  CLEAR: l_edidd.
  seg_ccprocess-operation = 'Replace'.
  l_edidd-sdata = seg_ccprocess.
  l_edidd-segnam = c_zccprocess.
  APPEND l_edidd TO t_edidd.

  CLEAR: l_edidd.
  seg_process-processid = l_header-aufnr && '_1'.
  seg_process-productid = l_header-matnr.
  seg_process-orderid = l_header-aufnr.
  seg_process-overallloss = ''.
  l_edidd-sdata = seg_process.
  l_edidd-segnam = c_zccprocessdata.
  APPEND l_edidd TO t_edidd.

  LOOP AT t_operaciones INTO DATA(l_oper).

*  //Operación
    CLEAR: l_edidd.
    seg_ccoper-operation = 'Replace'.
    l_edidd-sdata = seg_ccoper.
    l_edidd-segnam = c_zccoperation.
    APPEND l_edidd TO t_edidd.

    seg_ccoperationdata2-processid = ''.
    seg_ccoperationdata2-operationnr = ''.
    seg_ccoperationdata1-erpoperationid = ''.
    seg_ccoperationdata1-complexity = ''.
    seg_ccoperationdata2-prefmachineid = ''.
    seg_ccoperationdata2-setuptime = ''.
    seg_ccoperationdata2-mfgtime = ''.
    seg_ccoperationdata2-ratiooutin = ''.
    seg_ccoperationdata1-localloss = ''.
    seg_ccoperationdata1-boardlength = ''. "unit="mm"
    seg_ccoperationdata1-boardwidth = ''. " unit="mm"
    seg_ccoperationdata1-comments = ''.
    seg_ccoperationdata1-glueing = ''.
    seg_ccoperationdata1-labelnofperpallet = ''.

    CLEAR: l_edidd.
    l_edidd-sdata = seg_ccoperationdata1.
    l_edidd-segnam = c_zccoperationdata1.
    APPEND l_edidd TO t_edidd.

    CLEAR: l_edidd.
    l_edidd-sdata = seg_ccoperationdata2.
    l_edidd-segnam = c_zccoperationdata2.
    APPEND l_edidd TO t_edidd.

    LOOP AT t_resb INTO DATA(l_resb) WHERE vornr = l_oper-vornr.

      CLEAR: l_edidd.
      seg_ccproduct2-operation = 'Replace'.
      l_edidd-sdata = seg_ccproduct2.
      l_edidd-segnam = c_zccproduct2.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.
      seg_product1-color = ''.
      seg_product2-productid = ''.
      seg_product1-materialtype = ''.
      seg_product2-unitid = ''.
      seg_product2-productname = ''.


      l_edidd-sdata = seg_product1.
      l_edidd-segnam = c_zccproductdata1.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.
      l_edidd-sdata = seg_product2.
      l_edidd-segnam = c_zccproductdata2.
      APPEND l_edidd TO t_edidd.

*     //COPERMAT
      CLEAR: l_edidd.
      seg_copermat-operation = ''.
      l_edidd-sdata = seg_copermat.
      l_edidd-segnam = c_zccopermat.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.
      seg_copermatdata-processid = ''.
      seg_copermatdata-productid = ''.
      seg_copermatdata-operationnr = ''.
      seg_copermatdata-operationnr = ''.
      seg_copermatdata-quantity = ''.

      l_edidd-sdata = seg_copermatdata.
      l_edidd-segnam = c_zccopermatdata.
      APPEND l_edidd TO t_edidd.


*      //CRESOURCE
      CLEAR: l_edidd.
      seg_ccresource-operation = ''.
      l_edidd-sdata = seg_ccresource.
      l_edidd-segnam = c_zccresource.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.
      seg_ccresourcedata-color = ''.
      seg_ccresourcedata-resourceid = ''.
      seg_ccresourcedata-resourcetype = ''.
      seg_ccresourcedata-resourcename = ''.
      seg_ccresourcedata-storageposition = ''.
      l_edidd-sdata = seg_ccresourcedata.
      l_edidd-segnam = c_zccresourcedata.
      APPEND l_edidd TO t_edidd.


*      //Ccoperres
      CLEAR: l_edidd.
      seg_ccoperres-operation = ''.
      l_edidd-sdata = seg_ccoperres.
      l_edidd-segnam = c_zccoperres.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.
      seg_ccoperresdata-processid = ''.
      seg_ccoperresdata-resourceid = ''.
      seg_ccoperresdata-operationnr = ''.
      seg_ccoperresdata-operresnr = ''.
      seg_ccoperresdata-quantity = ''.
      l_edidd-sdata = seg_ccoperresdata.
      l_edidd-segnam = c_zccoperresdata.
      APPEND l_edidd TO t_edidd.

*      //ccoperaltmach
      CLEAR: l_edidd.
      seg_ccoperaltmach-operation = ''.
      l_edidd-sdata = seg_ccoperaltmach.
      l_edidd-segnam  = c_zccoperaltmach.
      APPEND l_edidd TO t_edidd.

      CLEAR: l_edidd.
      seg_ccoperaltmachdata-processid = ''.
      seg_ccoperaltmachdata-operationnr = ''.
      seg_ccoperaltmachdata-machineid = ''.
      seg_ccoperaltmachdata-setupduration = ''.
      seg_ccoperaltmachdata-runduration = ''.
      l_edidd-sdata = seg_ccoperaltmachdata.
      l_edidd-segnam  = c_zccoperaltmachdata.
      APPEND l_edidd TO t_edidd.

    ENDLOOP.

  ENDLOOP.

  ls_idoc_header-mandt  = sy-mandt.
  ls_idoc_header-direct = '1'.
  ls_idoc_header-rcvpor = c_edi_extern.
  ls_idoc_header-rcvprt = c_ls_d.
  ls_idoc_header-rcvprn = c_rcvprn.
  ls_idoc_header-sndprt = c_ls_r.
  ls_idoc_header-sndprn = sy-uname.
  ls_idoc_header-mestyp = c_zmsg.
  ls_idoc_header-idoctp = c_zstpm_orders.


  CALL FUNCTION 'MASTER_IDOC_DISTRIBUTE' "IN UPDATE TASK
    EXPORTING
      master_idoc_control            = ls_idoc_header
    TABLES
      communication_idoc_control     = lt_idoc_comm_control
      master_idoc_data               = t_edidd
    EXCEPTIONS
      error_in_idoc_control          = 1
      error_writing_idoc_status      = 2
      error_in_idoc_data             = 3
      sending_logical_system_unknown = 4
      OTHERS                         = 5.
  IF sy-subrc <> 0.
    "KO
    ls_return-type        = sy-msgty.
    ls_return-number      = sy-msgno.
    ls_return-id          = sy-msgid.
    ls_return-message_v1  = sy-msgv1.
    ls_return-message_v2  = sy-msgv2.
    ls_return-message_v3  = sy-msgv3.
    ls_return-message_v4  = sy-msgv4.
    APPEND ls_return TO lt_return.
  ELSE.
    "OK
    READ TABLE lt_idoc_comm_control INTO DATA(ls_control_record_out) INDEX 1.
    CHECK sy-subrc = 0.
    DATA(docnum) = ls_control_record_out-docnum.
    ls_return-type        = 'S'.
    ls_return-number      = '398'.
    ls_return-id          = '00'.
    ls_return-message_v1  = docnum.
    APPEND ls_return TO lt_return.
  ENDIF.

* Hacemos un COMMIT para el Idoc
*  CALL FUNCTION 'DEQUEUE_ALL'.
*  COMMIT WORK AND WAIT.
  CALL FUNCTION 'DB_COMMIT'.
  CALL FUNCTION 'DEQUEUE_ALL'.
  COMMIT WORK.

ENDFUNCTION.
