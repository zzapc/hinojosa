<?xml version="1.0" encoding="utf-8"?> <ENHO enhancement_id="ZZ_AMPL_CONDUCTOR" shorttext="ampliacion de conductores" tooltype_id="HOOK_IMPL" orig_object="R3TR-SAPMV56A-PROG-SAPMV56A">  <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">   <as
x:values>    <IMPLS>     <ENH_HOOK_IMPL>      <SPOTNAME/>      <PROGRAMNAME>SAPMV56A</PROGRAMNAME>      <EXTID>1</EXTID>      <ID>1</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>S</ENHMODE>      <FULL_NAME>\PR:SAPMV56A\IC:MV56AIZZ\SE:END\EI</FULL_NA
ME>      <SOURCE>       <item>MODULE zzshlp_conductores INPUT.</item>       <item/>       <item>TYPES: BEGIN OF ty_shlp_cond,</item>       <item>lifn2 TYPE wyt3-lifn2,</item>       <item>name1 TYPE lfa1-name1,</item>       <item>END OF ty_shlp_cond,</item
>       <item>*  Select al campo LIFN2 de la tabla WYT3 con:</item>       <item>*                LIFNR = Código transportista (VTTK-TDLNR)</item>       <item>*                EKORG = Valor fijo 1000</item>       <item>*                PARVW = Valor fijo Z
C</item>       <item/>       <item>lry_lifnr TYPE RANGE OF wyt3-lifnr.</item>       <item/>       <item>DATA: lt_shlp TYPE TABLE OF ty_shlp_cond,</item>       <item>lt_return TYPE TABLE OF ddshretval.</item>       <item/>       <item>DATA: l_range_lifnr T
YPE lry_lifnr,</item>       <item>ls_range_lifnr TYPE LINE OF lry_lifnr,</item>       <item>lt_dynfields TYPE TABLE OF dynpread,</item>       <item>ls_dynfields TYPE dynpread.</item>       <item/>       <item>IF NOT vttk-tdlnr IS INITIAL.</item>       <it
em>CLEAR: l_range_lifnr, ls_range_lifnr.</item>       <item>ls_range_lifnr-SIGN = &apos;I&apos;.</item>       <item>ls_range_lifnr-option = &apos;EQ&apos;.</item>       <item>ls_range_lifnr-low    = vttk-tdlnr.</item>       <item>APPEND ls_range_lifnr TO
l_range_lifnr.</item>       <item>ENDIF.</item>       <item/>       <item>SELECT DISTINCT a~lifn2, b~name1</item>       <item>FROM wyt3 AS a</item>       <item>LEFT OUTER JOIN lfa1 AS b ON b~lifnr = a~lifn2</item>       <item>INTO TABLE @lt_shlp</item>
    <item>WHERE a~lifnr IN @l_range_lifnr</item>       <item>AND a~ekorg = &apos;1000&apos;</item>       <item>AND a~parvw = &apos;ZC&apos;.</item>       <item/>       <item>CALL FUNCTION &apos;F4IF_INT_TABLE_VALUE_REQUEST&apos;</item>       <item>EXPORTI
NG</item>       <item>retfield        = &apos;LIFN2&apos;</item>       <item>value_org       = &apos;S&apos;</item>       <item>dynpprog        = sy-repid</item>       <item>dynpnr          = sy-dynnr</item>       <item>dynprofield     = &apos;VTTK-ZZCOND
UCTOR&apos;</item>       <item>TABLES</item>       <item>value_tab       = lt_shlp</item>       <item>return_tab      = lt_return</item>       <item>EXCEPTIONS</item>       <item>parameter_error = 1</item>       <item>no_values_found = 2</item>       <ite
m>OTHERS          = 3.</item>       <item>IF lt_return IS NOT INITIAL.</item>       <item/>       <item>READ TABLE lt_return ASSIGNING FIELD-SYMBOL(&lt;fs_return&gt;) INDEX 1.</item>       <item>IF sy-subrc EQ 0.</item>       <item>vttk-zzconductor = &lt;
fs_return&gt;-fieldval.</item>       <item>ENDIF.</item>       <item/>       <item>IF vttk-zzconductor IS NOT INITIAL.</item>       <item/>       <item>&quot;ASC 13.02.24 Al cambiar la longitud del elemento de datos de 10 a 50, hay que cambiar este select
.</item>       <item>*        DATA(lv_conductor) = |{ vttk-zzconductor ALPHA = IN }|.</item>       <item>DATA: lv_lifnr type lifnr.</item>       <item>lv_lifnr = vttk-zzconductor.</item>       <item>DATA(lv_conductor) = |{ lv_lifnr ALPHA = IN }|.</item>
     <item/>       <item/>       <item>SELECT SINGLE a~lifnr, a~stcd1, a~adrnr,a~name1, b~sort1, b~sort2, zzadd_info AS add04</item>       <item>FROM lfa1 AS a</item>       <item>LEFT OUTER JOIN adrc AS b ON b~addrnumber = a~adrnr</item>       <item>WHERE
 a~lifnr = @lv_conductor</item>       <item>INTO @DATA(ls_datos).</item>       <item/>       <item>CLEAR ls_dynfields.</item>       <item>MOVE &apos;VTTK-ZZDNI&apos; TO ls_dynfields-fieldname.</item>       <item>MOVE ls_datos-stcd1 TO ls_dynfields-fieldva
lue.</item>       <item>APPEND ls_dynfields TO lt_dynfields.</item>       <item>CLEAR ls_dynfields.</item>       <item>MOVE &apos;VTTK-SIGNI&apos; TO ls_dynfields-fieldname.</item>       <item>MOVE ls_datos-sort1 TO ls_dynfields-fieldvalue.</item>       <
item>APPEND ls_dynfields TO lt_dynfields.</item>       <item>CLEAR ls_dynfields.</item>       <item>MOVE &apos;VTTK-TPBEZ&apos; TO ls_dynfields-fieldname.</item>       <item>MOVE ls_datos-sort2 TO ls_dynfields-fieldvalue.</item>       <item>APPEND ls_dynf
ields TO lt_dynfields.</item>       <item>CLEAR ls_dynfields.</item>       <item>MOVE &apos;GV_COND_NAME&apos; TO ls_dynfields-fieldname.</item>       <item>MOVE ls_datos-name1 TO ls_dynfields-fieldvalue.</item>       <item>APPEND ls_dynfields TO lt_dynfi
elds.</item>       <item>MOVE &apos;VTTK-ZZADD_INFO&apos; TO ls_dynfields-fieldname.</item>       <item>MOVE ls_datos-add04 TO ls_dynfields-fieldvalue.</item>       <item>APPEND ls_dynfields TO lt_dynfields.</item>       <item/>       <item>CALL FUNCTION
&apos;DYNP_VALUES_UPDATE&apos;</item>       <item>EXPORTING</item>       <item>dyname                     = sy-repid</item>       <item>dynumb                     = sy-dynnr</item>       <item>TABLES</item>       <item>dynpfields                 = lt_dynf
ields</item>       <item>EXCEPTIONS</item>       <item>invalid_abapworkarea       = 1</item>       <item>invalid_dynprofield        = 2</item>       <item>invalid_dynproname         = 3</item>       <item>invalid_dynpronummer       = 4</item>       <item>
invalid_request            = 5</item>       <item>no_fielddescription        = 6</item>       <item>undefind_error             = 7</item>       <item>OTHERS                     = 8</item>       <item>.</item>       <item>IF sy-subrc &lt;&gt; 0.</item>
   <item>*   Implement suitable error handling here</item>       <item>ENDIF.</item>       <item/>       <item>ENDIF.</item>       <item/>       <item>ENDIF.</item>       <item>ENDMODULE.</item>       <item>MODULE zzoi_conductores INPUT.</item>       <ite
m/>       <item>IF vttk-zzconductor IS INITIAL.</item>       <item>CLEAR gv_cond_name.</item>       <item>ELSE.</item>       <item/>       <item>&quot;ASC 13.02.24 Al cambiar la longitud del elemento de datos de 10 a 50, hay que cambiar este select.</item
>       <item>*        DATA(lv_conductor) = |{ vttk-zzconductor ALPHA = IN }|.</item>       <item>clear: lv_lifnr, lv_conductor.</item>       <item>lv_lifnr = vttk-zzconductor.</item>       <item>lv_conductor = |{ lv_lifnr ALPHA = IN }|.</item>       <ite
m/>       <item>SELECT SINGLE a~lifnr, a~stcd1, a~adrnr,a~name1, b~sort1, b~sort2, zzadd_info</item>       <item>FROM lfa1 AS a</item>       <item>LEFT OUTER JOIN adrc AS b ON b~addrnumber = a~adrnr</item>       <item>WHERE a~lifnr = @lv_conductor</item>
      <item>INTO @ls_datos.</item>       <item/>       <item>vttk-zzdni = ls_datos-stcd1.</item>       <item>*        vttk-zzmatricula = ls_datos-sort1.</item>       <item>vttk-signi = ls_datos-sort1.</item>       <item>vttk-tpbez = ls_datos-sort2.</item>
       <item>*        vttk-zzremolque = ls_datos-sort2.</item>       <item>vttk-add04 = ls_datos-add04.</item>       <item>gv_cond_name = ls_datos-name1.</item>       <item/>       <item>*        CLEAR ls_dynfields.</item>       <item>*        MOVE &apos;
VTTK-ZZDNI&apos; TO ls_dynfields-fieldname.</item>       <item>*        MOVE ls_datos-stcd1 TO ls_dynfields-fieldvalue.</item>       <item>*        APPEND ls_dynfields TO lt_dynfields.</item>       <item>*        CLEAR ls_dynfields.</item>       <item>*
      MOVE &apos;VTTK-ZZMATRICULA&apos; TO ls_dynfields-fieldname.</item>       <item>*        MOVE ls_datos-sort1 TO ls_dynfields-fieldvalue.</item>       <item>*        APPEND ls_dynfields TO lt_dynfields.</item>       <item>*        CLEAR ls_dynfields.
</item>       <item>*        MOVE &apos;VTTK-ZZREMOLQUE&apos; TO ls_dynfields-fieldname.</item>       <item>*        MOVE ls_datos-sort2 TO ls_dynfields-fieldvalue.</item>       <item>*        APPEND ls_dynfields TO lt_dynfields.</item>       <item>*
   CLEAR ls_dynfields.</item>       <item>*        MOVE &apos;GV_COND_NAME&apos; TO ls_dynfields-fieldname.</item>       <item>*        MOVE ls_datos-name1 TO ls_dynfields-fieldvalue.</item>       <item>*        APPEND ls_dynfields TO lt_dynfields.</item>
       <item>*</item>       <item>*        CALL FUNCTION &apos;DYNP_VALUES_UPDATE&apos;</item>       <item>*          EXPORTING</item>       <item>*            dyname                     = sy-repid</item>       <item>*            dynumb
  = sy-dynnr</item>       <item>*          TABLES</item>       <item>*            dynpfields                 = lt_dynfields</item>       <item>*         EXCEPTIONS</item>       <item>*           invalid_abapworkarea       = 1</item>       <item>*
  invalid_dynprofield        = 2</item>       <item>*           invalid_dynproname         = 3</item>       <item>*           invalid_dynpronummer       = 4</item>       <item>*           invalid_request            = 5</item>       <item>*           no_fi
elddescription        = 6</item>       <item>*           undefind_error             = 7</item>       <item>*           OTHERS                     = 8</item>       <item>*                  .</item>       <item>*        IF sy-subrc &lt;&gt; 0.</item>
<item>**   Implement suitable error handling here</item>       <item>*        ENDIF.</item>       <item/>       <item>ENDIF.</item>       <item/>       <item>ENDMODULE.</item>      </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>     <ENH_HOOK_IMPL
>      <SPOTNAME/>      <PROGRAMNAME>SAPMV56A</PROGRAMNAME>      <EXTID>2</EXTID>      <ID>2</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>S</ENHMODE>      <FULL_NAME>\PR:SAPMV56A\IC:MV56AOZZ\SE:END\EI</FULL_NAME>      <SOURCE>       <item>MODULE zz
_carga_conductores_base OUTPUT.</item>       <item/>       <item>SELECT SINGLE shtyp</item>       <item>FROM zssdt026_cam_pac</item>       <item>WHERE shtyp = @vttk-shtyp</item>       <item>INTO @DATA(lv_shtyp).</item>       <item/>       <item>IF sy-subr
c EQ 0.</item>       <item/>       <item>LOOP AT SCREEN.</item>       <item>IF screen-group1 = &apos;Z01&apos;.</item>       <item>screen-active = &apos;1&apos;.</item>       <item>MODIFY SCREEN.</item>       <item>ENDIF.</item>       <item>ENDLOOP.</item
>       <item/>       <item>ELSE.</item>       <item>LOOP AT SCREEN.</item>       <item>IF screen-group1 = &apos;Z01&apos;.</item>       <item>screen-active = &apos;0&apos;.</item>       <item>MODIFY SCREEN.</item>       <item>ENDIF.</item>       <item>EN
DLOOP.</item>       <item>ENDIF.</item>       <item/>       <item/>       <item/>       <item/>       <item>ENDMODULE.</item>      </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>    </IMPLS>   </asx:values>  </asx:abap> </ENHO>
