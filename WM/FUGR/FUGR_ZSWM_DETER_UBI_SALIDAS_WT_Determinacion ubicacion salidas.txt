FUNCTION zswm_deter_ubi_salidas_wt.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_LTAK) LIKE  LTAK STRUCTURE  LTAK
*"     VALUE(I_LTAP) LIKE  LTAP STRUCTURE  LTAP
*"     VALUE(I_MLVS) LIKE  MLVS STRUCTURE  MLVS
*"     VALUE(I_MGEF) LIKE  MGEF STRUCTURE  MGEF
*"     VALUE(I_T333) LIKE  T333 STRUCTURE  T333
*"     VALUE(I_T340D) LIKE  T340D STRUCTURE  T340D
*"     VALUE(I_VORGA) LIKE  LTAP-VORGA
*"     VALUE(I_AUSML) LIKE  RL03T-AUSML
*"     VALUE(I_AUSME) LIKE  RL03T-AUSME
*"  TABLES
*"      T_LTAPA STRUCTURE  LTAPA
*"  CHANGING
*"     VALUE(C_LGTY0) LIKE  T334T-LGTY0
*"     VALUE(C_LGTY1) LIKE  RL03T-LGTY1
*"     VALUE(C_LGTY2) LIKE  RL03T-LGTY2
*"     VALUE(C_LGTY3) LIKE  T334T-LGTY3
*"     VALUE(C_LGTY4) LIKE  T334T-LGTY4
*"     VALUE(C_LGTY5) LIKE  T334T-LGTY5
*"     VALUE(C_LGTY6) LIKE  T334T-LGTY6
*"     VALUE(C_LGTY7) LIKE  T334T-LGTY7
*"     VALUE(C_LGTY8) LIKE  T334T-LGTY8
*"     VALUE(C_LGTY9) LIKE  T334T-LGTY9
*"     VALUE(C_LGT10) LIKE  T334T-LGT10
*"     VALUE(C_LGT11) LIKE  T334T-LGT11
*"     VALUE(C_LGT12) LIKE  T334T-LGT12
*"     VALUE(C_LGT13) LIKE  T334T-LGT13
*"     VALUE(C_LGT14) LIKE  T334T-LGT14
*"     VALUE(C_LGT15) LIKE  T334T-LGT15
*"     VALUE(C_LGT16) LIKE  T334T-LGT16
*"     VALUE(C_LGT17) LIKE  T334T-LGT17
*"     VALUE(C_LGT18) LIKE  T334T-LGT18
*"     VALUE(C_LGT19) LIKE  T334T-LGT19
*"     VALUE(C_LGT20) LIKE  T334T-LGT20
*"     VALUE(C_LGT21) LIKE  T334T-LGT21
*"     VALUE(C_LGT22) LIKE  T334T-LGT22
*"     VALUE(C_LGT23) LIKE  T334T-LGT23
*"     VALUE(C_LGT24) LIKE  T334T-LGT24
*"     VALUE(C_LGT25) LIKE  T334T-LGT25
*"     VALUE(C_LGT26) LIKE  T334T-LGT26
*"     VALUE(C_LGT27) LIKE  T334T-LGT27
*"     VALUE(C_LGT28) LIKE  T334T-LGT28
*"     VALUE(C_LGT29) LIKE  T334T-LGT29
*"     VALUE(C_CONTI) LIKE  LTAP1-KREUZ
*"----------------------------------------------------------------------

*--> INI FCARDONA - 23.03.2024 - Consumos BHS HPX

  DATA: tt_lqua TYPE TABLE OF lqua.

*<-- FIN FCARDONA- 23.03.2024 - Consumos BHS HPX

*  do.enddo.

  CALL FUNCTION 'ZSWM_BREAK_USER_EXIT'.
  DATA: rr_lgnum TYPE shp_lgnum_range_t.
  CALL FUNCTION 'ZSWM_SET_GET_VALUES'
    EXPORTING
      shortname = 'ZSWM_PLANCHA_HER_UAS_EE'
*     TT_SHORTNAME             =
*     NO_AUTHORITY_CHECK       = 'X'
*     LANGU     = SYST-LANGU
*     TT_FIELDNAME             =
    IMPORTING
      rr_lgnum  = rr_lgnum.

  CHECK i_ltak-lgnum IN rr_lgnum.
  CASE i_ltak-bwlvs.
*   add jtm 19.11.2022
    WHEN '919'
      OR '319'.
*      El proceso de REAPRO no incluye creación de tareas de almacén.
      MESSAGE e007(zswm_util).
*   fin de add jtm 19.11.2022
    WHEN '104'. " anulación de OB
      SELECT SINGLE * INTO @DATA(rt_mseg) FROM mseg WHERE mblnr EQ @i_ltak-mblnr
                                                      AND mjahr EQ @i_ltak-mjahr
                                                      AND zeile EQ @i_ltap-mbpos.

      IF  sy-subrc         EQ 0
      AND rt_mseg-aufnr    IS NOT INITIAL
      AND rt_mseg-ablad    IS NOT INITIAL.
        DATA lenum TYPE lein-lenum.
        CALL FUNCTION 'CONVERSION_EXIT_LENUM_INPUT'
          EXPORTING
            input           = rt_mseg-ablad
          IMPORTING
            output          = lenum
          EXCEPTIONS
            check_failed    = 1
            not_numeric     = 2
            t344_get_failed = 3
            wrong_length    = 4
            OTHERS          = 5.
        IF sy-subrc EQ 0.
          SELECT SINGLE * INTO @DATA(rt_lqua) FROM lqua WHERE lgnum EQ @rt_mseg-lgnum
                                                          AND lenum EQ @lenum.
          IF sy-subrc EQ 0.
            IF  rt_mseg-matnr EQ rt_lqua-matnr
            AND rt_mseg-charg EQ rt_lqua-charg
            AND rt_mseg-werks EQ rt_lqua-werks
            AND rt_mseg-lgort EQ rt_lqua-lgort
            AND rt_mseg-menge EQ rt_lqua-verme
            AND rt_mseg-bestq EQ rt_lqua-bestq
            AND rt_mseg-sobkz EQ rt_lqua-sobkz.
              CLEAR: t_ltapa.
              t_ltapa-xpnum = '001'.
              t_ltapa-anfml = i_ausml.
              t_ltapa-anfme = i_ausml.
              t_ltapa-vlenr = rt_lqua-lenum.
              t_ltapa-vltyp = rt_lqua-lgtyp.
              t_ltapa-vlpla = rt_lqua-lgpla.
              APPEND t_ltapa.
              IF t_ltapa[] IS NOT INITIAL.
                CLEAR: c_lgty0,
*      c_lgty1,
      c_lgty2,
      c_lgty3,
      c_lgty4,
      c_lgty5,
      c_lgty6,
      c_lgty7,
      c_lgty8,
      c_lgty9,
      c_lgt10,
      c_lgt11,
      c_lgt12,
      c_lgt13,
      c_lgt14,
      c_lgt15,
      c_lgt16,
      c_lgt17,
      c_lgt18,
      c_lgt19,
      c_lgt20,
      c_lgt21,
      c_lgt22,
      c_lgt23,
      c_lgt24,
      c_lgt25,
      c_lgt26,
      c_lgt27,
      c_lgt28,
      c_lgt29,
      c_conti.
              ENDIF.

            ENDIF.
          ENDIF.

        ENDIF.
      ENDIF.
    WHEN '951'. " desguace
      RANGES: r_lgnum FOR lagp-lgnum,
              r_lgtyp_desguace FOR lagp-lgtyp,
              r_lgpla_desguace FOR lagp-lgpla.
      PERFORM rangos_desguace TABLES r_lgnum r_lgtyp_desguace r_lgpla_desguace.
      IF  r_lgnum[]          IS NOT INITIAL
      AND r_lgtyp_desguace[] IS NOT INITIAL.

        SELECT SINGLE * INTO rt_mseg FROM mseg WHERE mblnr EQ i_ltak-mblnr
                                                 AND mjahr EQ i_ltak-mjahr
                                                 AND zeile EQ i_ltap-mbpos.

        IF sy-subrc       EQ 0
        AND rt_mseg-bwart EQ '553'.
*         add jtm 15.09.2022
          RANGES: r_lenum FOR lein-lenum. CLEAR r_lenum[]. CLEAR r_lenum.
*         Busco lote de inspeccion del movimiento
          SELECT SINGLE prueflos INTO @DATA(prueflos) FROM qamb WHERE mblnr EQ @i_ltak-mblnr
                                                                  AND mjahr EQ @i_ltak-mjahr
                                                                  AND zeile EQ @i_ltap-mbpos.
          IF sy-subrc EQ 0.
*            Busco UA del lote de inspección
            SELECT SINGLE lenum INTO @DATA(lenum_aux) FROM zswm_uas_accione WHERE prueflos EQ @prueflos.
            IF sy-subrc EQ 0 AND lenum_aux IS NOT INITIAL.
              r_lenum+0(3) = 'IEQ'. r_lenum-low = lenum_aux. APPEND r_lenum.
            ENDIF.
          ENDIF.
*         fin de add jtm 15.09.2022
*          SELECT SINGLE prueflos INTO @DATA(inspid) FROM qamb WHERE mblnr EQ @i_ltak-mblnr
*                                                                AND mjahr EQ @i_ltak-mjahr
*                                                                AND zeile EQ @rt_mseg-zeile.
*          IF sy-subrc EQ 0
*          AND inspid IS NOT INITIAL.
          SELECT * INTO TABLE @DATA(tt_lqua_desguace) FROM lqua  WHERE lgnum  EQ @rt_mseg-lgnum
                                                                   AND lgtyp  IN @r_lgtyp_desguace
                                                                   AND lgpla  IN @r_lgpla_desguace
                                                                   AND werks  EQ @rt_mseg-werks
                                                                   AND lgort  EQ @rt_mseg-lgort
                                                                   AND matnr  EQ @rt_mseg-matnr
                                                                   AND charg  EQ @rt_mseg-charg
                                                                   AND bestq  EQ @rt_mseg-bestq
                                                                   AND sobkz  EQ @rt_mseg-sobkz
                                                                   AND lenum  IN @r_lenum          " add jtm 15.09.2022
*                                                                    AND qplos  EQ @inspid
                                                                   AND verme  >  0.
*                    sort tt_lqua by WDATU WENUM WEPOS.
          SORT tt_lqua_desguace BY wdatu lqnum lgpla.
          DATA pos(3) TYPE n.
          pos = 0.
*            SORT tt_lqua BY verme DESCENDING.
          DATA(t_ausml) = i_ausml.
          CLEAR pos.
          LOOP AT tt_lqua_desguace INTO DATA(rt_lqua_desguace).
            ADD 1 TO pos.
            t_ltapa-xpnum = pos.
            t_ltapa-vlenr = rt_lqua_desguace-lenum.
            IF rt_lqua_desguace-verme >= t_ausml.
              t_ltapa-anfml = t_ausml.
              t_ausml = 0.
            ELSE.
              t_ltapa-anfml = rt_lqua_desguace-verme.
              t_ausml = t_ausml - rt_lqua_desguace-verme.
            ENDIF.
            PERFORM convertir USING rt_lqua_desguace-matnr  t_ltapa-anfml i_ltap-meins i_ltap-altme CHANGING t_ltapa-anfme.
            t_ltapa-vltyp = rt_lqua_desguace-lgtyp.
            t_ltapa-vlpla = rt_lqua_desguace-lgpla.
            APPEND t_ltapa.
            IF t_ausml <= 0.
              EXIT.
            ENDIF.
          ENDLOOP.
          c_lgty0 = rt_lqua_desguace-lgtyp.
*          loop at tt_lqua_desguace into data(rT_lqua_desguace)
*          ENDIF.
        ENDIF.
      ENDIF.
      IF t_ltapa[] IS NOT INITIAL.
        CLEAR:
*         c_lgty0,
        c_lgty1,
        c_lgty2,
        c_lgty3,
        c_lgty4,
        c_lgty5,
        c_lgty6,
        c_lgty7,
        c_lgty8,
        c_lgty9,
        c_lgt10,
        c_lgt11,
        c_lgt12,
        c_lgt13,
        c_lgt14,
        c_lgt15,
        c_lgt16,
        c_lgt17,
        c_lgt18,
        c_lgt19,
        c_lgt20,
        c_lgt21,
        c_lgt22,
        c_lgt23,
        c_lgt24,
        c_lgt25,
        c_lgt26,
        c_lgt27,
        c_lgt28,
        c_lgt29,
        c_conti.
      ENDIF.

    WHEN '961'.   "Consumos

      "INI MODIF ADD JVM - Añadir funcionalidad consumo de bobinas Xátiva
      SELECT SINGLE mtart INTO @DATA(lv_mtart) FROM mara WHERE matnr EQ @i_ltap-matnr.

      SELECT SINGLE * INTO rt_mseg FROM mseg WHERE mblnr EQ i_ltak-mblnr
                                               AND mjahr EQ i_ltak-mjahr
                                               AND zeile EQ i_ltap-mbpos.
      DATA lv_lenum TYPE lenum.

*--> INI FCARDONA 23.03.2024 - Consumos BHS HPX

*      lv_lenum = rt_mseg-ablad."GAPPP002 "FCARDONA 23.03.2024 - Comento porque en el SELECT siguiente tenemos que asegurar que se busca con número interno.

      IF ( rt_mseg-ablad IS NOT INITIAL ).

        CALL FUNCTION 'CONVERSION_EXIT_LENUM_INPUT'
          EXPORTING
            input           = rt_mseg-ablad
          IMPORTING
            output          = lv_lenum
          EXCEPTIONS
            check_failed    = 1
            not_numeric     = 2
            t344_get_failed = 3
            wrong_length    = 4
            OTHERS          = 5.

      ENDIF.

*--> FIN FCARDONA 23.03.2024 - Consumos BHS HPX

**** Comento por cambio de lógica
*
**      IF rt_mseg-aufnr EQ '000060000274' AND rt_mseg-matnr EQ 'SEPLNI00000738'.
**        DO.ENDDO.
**      ENDIF.
*      IF sy-subrc = 0
*        AND i_ltak-lgnum  EQ '200'
*        AND rt_mseg-bwart EQ '261'
*        AND ( lv_mtart EQ 'ZPAP' OR lv_mtart EQ 'ZCAB' OR lv_mtart EQ 'ZCAH' ).
*
*
*
*
**  Buscaremos el stock de bobina
*        SELECT * INTO TABLE @DATA(tt_lqua) FROM lqua
*                                         WHERE lgnum EQ @rt_mseg-lgnum
*                                           AND werks EQ @rt_mseg-werks
*                                           AND lgort EQ @rt_mseg-lgort
*                                           AND matnr EQ @rt_mseg-matnr
*                                           AND charg EQ @rt_mseg-charg
*                                           AND bestq EQ @rt_mseg-bestq.
*        IF lv_lenum <> 'LLEVAR A COGI' AND lv_lenum IS NOT INITIAL. "GAPPP002
*          DELETE tt_lqua WHERE lenum <> lv_lenum."GAPPP002
*        ENDIF."GAPPP002
*        pos = 0.
**            SORT tt_lqua BY verme DESCENDING.
*        t_ausml = i_ausml.
*        CLEAR pos.
*        LOOP AT tt_lqua INTO rt_lqua.
*          ADD 1 TO pos.
*          t_ltapa-xpnum = pos.
*          t_ltapa-vlenr = rt_lqua-lenum.
*          IF rt_lqua-verme >= t_ausml.
*            t_ltapa-anfml = t_ausml.
*            t_ausml = 0.
*          ELSE.
*            t_ltapa-anfml = rt_lqua-verme.
*            t_ausml = t_ausml - rt_lqua-verme.
*          ENDIF.
*          PERFORM convertir USING rt_lqua-matnr  t_ltapa-anfml i_ltap-meins i_ltap-altme CHANGING t_ltapa-anfme.
*          t_ltapa-vltyp = rt_lqua-lgtyp.
*          t_ltapa-vlpla = rt_lqua-lgpla.
*          CHECK t_ltapa-anfme GE 0. "FCARDONA 23.03.2024 - DUMP con cuantos negativos
*          APPEND t_ltapa.
*          IF t_ausml <= 0.
*            EXIT.
*          ENDIF.
*        ENDLOOP.
*        c_lgty0 = rt_lqua-lgtyp.
**      ENDIF.
**        ENDIF.
*        IF t_ltapa[] IS NOT INITIAL.
*          CLEAR:
**         c_lgty0,
*          c_lgty1,
*          c_lgty2,
*          c_lgty3,
*          c_lgty4,
*          c_lgty5,
*          c_lgty6,
*          c_lgty7,
*          c_lgty8,
*          c_lgty9,
*          c_lgt10,
*          c_lgt11,
*          c_lgt12,
*          c_lgt13,
*          c_lgt14,
*          c_lgt15,
*          c_lgt16,
*          c_lgt17,
*          c_lgt18,
*          c_lgt19,
*          c_lgt20,
*          c_lgt21,
*          c_lgt22,
*          c_lgt23,
*          c_lgt24,
*          c_lgt25,
*          c_lgt26,
*          c_lgt27,
*          c_lgt28,
*          c_lgt29,
*          c_conti.
*        ENDIF.
        "FIN MODIF ADD JVM - Añadir funcionalidad consumo de bobinas Xátiva
*      IF   sy-subrc EQ 0 "Modif JVM - añadir funcionalidad consumo bobinas xátiva

      IF sy-subrc = 0
        AND i_ltak-lgnum  EQ '200'
        AND rt_mseg-bwart EQ '261'
        AND ( lv_mtart EQ 'ZPAP' OR lv_mtart EQ 'ZCAB' OR lv_mtart EQ 'ZCAH' ).

        "Para el caso, no queremos que haga propuesta ya que creamos la OT desde la PROXY de consumo de BHS
        "SI_BHS_CONSUM_BOB_MAT_PRIMA_IN_BHS_TO_SAP

        EXIT.

      ELSEIF   sy-subrc EQ 0 "Modif JVM - añadir funcionalidad consumo bobinas xátiva
      AND  rt_mseg-bwart EQ '261'
      AND  rt_mseg-sgtxt IS NOT INITIAL.
        DATA: lgtyp TYPE lagp-lgtyp,
              lgpla TYPE lagp-lgpla.
        lgtyp = rt_mseg-sgtxt+4(3).
        lgpla = rt_mseg-sgtxt+8(10).
        SELECT SINGLE * INTO @DATA(rt_lagp) FROM lagp WHERE lgnum EQ @rt_mseg-lgnum
                                                        AND lgtyp EQ @lgtyp
                                                        AND lgpla EQ @lgpla.
        IF  sy-subrc EQ 0
        AND ( lgtyp    EQ '100' ).
*         add jtm 01.12.2022
          RANGES: r_sonum FOR lips-sonum.
          CLEAR r_sonum[]. CLEAR r_sonum.
          IF rt_mseg-sobkz EQ 'E'.
            r_sonum+0(3) = 'IEQ'.
            r_sonum-low+0(10) =  rt_mseg-mat_kdauf.
            r_sonum-low+10(6) =  rt_mseg-mat_kdpos.
            APPEND r_sonum.
          ENDIF.
*         fin de add 01.12.2022
          SELECT * INTO TABLE @tt_lqua FROM lqua WHERE lgnum EQ @rt_mseg-lgnum
                                                         AND lgtyp EQ @lgtyp
                                                         AND lgpla EQ @lgpla
                                                         AND werks EQ @rt_mseg-werks
                                                         AND lgort EQ @rt_mseg-lgort
                                                         AND matnr EQ @rt_mseg-matnr
                                                         AND charg EQ @rt_mseg-charg
                                                         AND bestq EQ @rt_mseg-bestq
                                                         AND sobkz EQ @rt_mseg-sobkz
                                                         AND sonum IN @r_sonum        " add jtm 01.12.2022
                                                         AND verme >  0.

*--> INI FCARDONA 17.11.2022 - Consumos sobre TA 010 y 020.
          "Si no hemos encontrado el stock en el LGTYP = 100

          IF ( sy-subrc NE 0 ).
*           cambiar jtm 23.11.2022
*            SELECT SINGLE mtart INTO @DATA(mtart) FROM mara WHERE matnr EQ @rt_mseg-matnr. "MODIF JVM - Se ha subido arriba la instrucción línea 261
            CASE lv_mtart.
              WHEN 'ZPAP' OR 'ZCAB' OR 'ZCAH'.
*            SELECT COUNT(*) UP TO 1 ROWS
*              FROM mara
*             WHERE matnr EQ @rt_mseg-matnr
*               AND ( mtart EQ 'ZPAP' OR mtart EQ 'ZCAB' OR mtart EQ 'ZCAH' ).
*
*            IF ( sy-subrc EQ 0 ).
*           fin de cambiar jtm 23.11.2022
                SELECT *
                  INTO TABLE @tt_lqua
                  FROM lqua
                 WHERE lgnum EQ @rt_mseg-lgnum
                   AND ( lgtyp EQ '010' OR lgtyp EQ '020' )
                   AND werks EQ @rt_mseg-werks
                   AND lgort EQ @rt_mseg-lgort
                   AND matnr EQ @rt_mseg-matnr
                   AND charg EQ @rt_mseg-charg
                   AND bestq EQ @rt_mseg-bestq
                   AND sobkz EQ @rt_mseg-sobkz
                   AND verme >  0.
*           cambiar jtm 23.11.2022
              WHEN 'ZPSE'.
                SELECT *
                  INTO TABLE @tt_lqua
                  FROM lqua
                 WHERE lgnum EQ @rt_mseg-lgnum
                   AND lgtyp EQ '100'
                   AND lgpla EQ 'MAQUINA'
                   AND werks EQ @rt_mseg-werks
                   AND lgort EQ @rt_mseg-lgort
                   AND matnr EQ @rt_mseg-matnr
                   AND charg EQ @rt_mseg-charg
                   AND bestq EQ @rt_mseg-bestq
                   AND sobkz EQ @rt_mseg-sobkz
                   AND sonum IN @r_sonum       " add jtm 01.12.2022
                   AND verme >  0.
            ENDCASE.
*           fin de add jtm 23.11.2022
*            ENDIF.

          ENDIF.

*<-- FIN FCARDONA 17.11.2022 - Consumos sobre TA 010 y 020.

*          sort tt_lqua by WDATU WENUM WEPOS.
          SORT tt_lqua BY wdatu lqnum lgpla. "

*--> INI FCARDONA 23.03.2024 - Consumos BHS HPX

**** Comento por que ya no tiene sentido
*
*          IF lv_lenum <> 'LLEVAR A COGI' AND lv_lenum IS NOT INITIAL."GAPPP002
*            DELETE tt_lqua WHERE lenum <> lv_lenum."GAPPP002
*          ENDIF."GAPPP002

*--> FIN FCARDONA 23.03.2024 - Consumos BHS HPX

*          LOOP AT tt_lqua INTO rt_lqua.
*            CHECK  ( rt_lqua-verme >= i_ausml AND rt_lqua-meins EQ i_ltap-meins )
*               OR  ( rt_lqua-verme >= i_ausme AND rt_lqua-meins EQ i_ltap-altme ).
*            CLEAR: t_ltapa.
*            t_ltapa-xpnum = '001'.
*            t_ltapa-anfml = i_ausml.
*            t_ltapa-anfme = i_ausml.
*            t_ltapa-vlenr = rt_lqua-lenum.
*            t_ltapa-vltyp = rt_lqua-lgtyp.
*            t_ltapa-vlpla = rt_lqua-lgpla.
*            APPEND t_ltapa.
*            EXIT.
*          ENDLOOP.
*          IF sy-subrc NE 0.
*          DATA pos(3) TYPE n.
          pos = 0.
*            SORT tt_lqua BY verme DESCENDING.
          t_ausml = i_ausml.
          CLEAR pos.
          LOOP AT tt_lqua INTO rt_lqua.
            ADD 1 TO pos.
            t_ltapa-xpnum = pos.
            t_ltapa-vlenr = rt_lqua-lenum.
            IF rt_lqua-verme >= t_ausml.
              t_ltapa-anfml = t_ausml.
              t_ausml = 0.
            ELSE.
              t_ltapa-anfml = rt_lqua-verme.
              t_ausml = t_ausml - rt_lqua-verme.
            ENDIF.
            PERFORM convertir USING rt_lqua-matnr  t_ltapa-anfml i_ltap-meins i_ltap-altme CHANGING t_ltapa-anfme.
            t_ltapa-vltyp = rt_lqua-lgtyp.
            t_ltapa-vlpla = rt_lqua-lgpla.
            APPEND t_ltapa.
            IF t_ausml <= 0.
              EXIT.
            ENDIF.
          ENDLOOP.
          c_lgty0 = '100'.
        ENDIF.
*        ENDIF.
        IF t_ltapa[] IS NOT INITIAL.
          CLEAR:
*         c_lgty0,
          c_lgty1,
          c_lgty2,
          c_lgty3,
          c_lgty4,
          c_lgty5,
          c_lgty6,
          c_lgty7,
          c_lgty8,
          c_lgty9,
          c_lgt10,
          c_lgt11,
          c_lgt12,
          c_lgt13,
          c_lgt14,
          c_lgt15,
          c_lgt16,
          c_lgt17,
          c_lgt18,
          c_lgt19,
          c_lgt20,
          c_lgt21,
          c_lgt22,
          c_lgt23,
          c_lgt24,
          c_lgt25,
          c_lgt26,
          c_lgt27,
          c_lgt28,
          c_lgt29,
          c_conti.
        ENDIF.
      ENDIF.
*     add jtm 31.08.2022 Anulación entrada pedido devolución
    WHEN '255'.

      SELECT SINGLE * INTO rt_mseg FROM mseg WHERE mblnr EQ i_ltak-mblnr
                                               AND mjahr EQ i_ltak-mjahr
                                               AND zeile EQ i_ltap-mbpos.
      IF   sy-subrc        EQ 0
      AND  rt_mseg-bwart   EQ '658'
      AND rt_mseg-vbeln_im IS NOT INITIAL.
*          Solo para PT y SEMI
        CLEAR pos.
        SELECT SINGLE bsskz INTO @DATA(bsskz) FROM mlgn WHERE matnr EQ @rt_mseg-matnr
                                                          AND lgnum EQ @i_ltak-lgnum.
        IF sy-subrc EQ 0
        AND bsskz   CO 'TS'.
          SELECT * INTO TABLE @DATA(tt_vekp) FROM vekp WHERE vpobj    EQ '03'
                                                         AND vpobjkey EQ @rt_mseg-vbeln_im.
          LOOP AT tt_vekp INTO DATA(rt_vekp).
            SELECT * INTO TABLE @DATA(tt_vepo) FROM vepo WHERE venum EQ @rt_vekp-venum
                                                           AND vbeln EQ @rt_mseg-vbeln_im
                                                           AND posnr EQ @rt_mseg-vbelp_im.
            CHECK sy-subrc EQ 0.
            LOOP AT tt_vepo INTO DATA(rt_vepo).

              SELECT * INTO @DATA(r_lqua)    FROM lqua UP TO 1 ROWS WHERE lgnum EQ @i_ltak-lgnum
                                                                      AND lenum EQ @rt_vekp-exidv
                                                                      AND verme > 0.
              ENDSELECT.
              CHECK sy-subrc EQ 0.
              CLEAR t_ltapa.
              ADD 1 TO pos.
              t_ltapa-xpnum = pos.
              t_ltapa-vlenr = rt_vekp-exidv..
              t_ltapa-anfml = r_lqua-verme.
              PERFORM convertir USING rt_mseg-matnr  t_ltapa-anfml i_ltap-meins i_ltap-altme CHANGING t_ltapa-anfme.
              t_ltapa-vltyp = r_lqua-lgtyp.
              t_ltapa-vlpla = r_lqua-lgpla.
              APPEND t_ltapa.
            ENDLOOP.
          ENDLOOP.
        ENDIF.
      ENDIF.
      IF t_ltapa[] IS NOT INITIAL.
        CLEAR:
*         c_lgty0,
        c_lgty1,
        c_lgty2,
        c_lgty3,
        c_lgty4,
        c_lgty5,
        c_lgty6,
        c_lgty7,
        c_lgty8,
        c_lgty9,
        c_lgt10,
        c_lgt11,
        c_lgt12,
        c_lgt13,
        c_lgt14,
        c_lgt15,
        c_lgt16,
        c_lgt17,
        c_lgt18,
        c_lgt19,
        c_lgt20,
        c_lgt21,
        c_lgt22,
        c_lgt23,
        c_lgt24,
        c_lgt25,
        c_lgt26,
        c_lgt27,
        c_lgt28,
        c_lgt29,
        c_conti.
      ENDIF.
*     fin de add jtm 31.08.2022
  ENDCASE.



ENDFUNCTION.
