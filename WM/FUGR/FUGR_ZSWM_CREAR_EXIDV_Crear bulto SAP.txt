FUNCTION zswm_crear_exidv.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TCODE) TYPE  TCODE OPTIONAL
*"     VALUE(UNAME) TYPE  SY-UNAME DEFAULT SY-UNAME
*"     VALUE(OPERARIO) TYPE  ZLNUM_OPER OPTIONAL
*"     VALUE(DATOS_UA) TYPE  ZSWM_RECUPERAR_EXIDV_STR OPTIONAL
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------

  DATA: data_u            TYPE zswm_data_ui5_eeeoo_str,
        r_param           TYPE zswm_data_ui5_param_str,
        r_funcionalidades TYPE zswm_data_ui5_func_str.

  DATA: t_ltap_c LIKE ltap_creat OCCURS 0 WITH HEADER LINE,
        t_ltak   LIKE ltak_vb OCCURS 0 WITH HEADER LINE,
        t_ltap   LIKE ltap_vb OCCURS 0 WITH HEADER LINE.

  CALL FUNCTION 'ZSWM_GET_DATA_USER_UI5'
    EXPORTING
      uname      = uname
      statu      = 'X'
      no_gen_log = abap_true
      tcode      = tcode
    IMPORTING
      data_user  = data_u
*     ERROR      =
*     TT_LOG     =
    .
  data_u-operario = operario.

  IF    tcode EQ 'ZWM_RF_UI5_PIN_001'.

    CLEAR: t_ltap_c[], t_ltak[], t_ltap[].
    CLEAR t_ltap_c.

* eeoo DATOS MAESTROS
    t_ltap_c-matnr = datos_ua-matnr.
    t_ltap_c-werks = data_u-werks.
    t_ltap_c-lgort = datos_ua-lgort.
    t_ltap_c-charg = datos_ua-charg.
    t_ltap_c-bestq = datos_ua-bestq.
    t_ltap_c-sobkz = datos_ua-sobkz.
    t_ltap_c-sonum = datos_ua-sonum.

* CANTIDADES
    t_ltap_c-anfme = datos_ua-verme.
    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
      EXPORTING
        input          = datos_ua-meins
*       LANGUAGE       = SY-LANGU
      IMPORTING
        output         = t_ltap_c-altme
      EXCEPTIONS
        unit_not_found = 1
        OTHERS         = 2.
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.

* AUTO-CONFIRMACION
    t_ltap_c-squit = abap_true.

* ORIGEN
    t_ltap_c-vltyp = '998'.
    t_ltap_c-vlpla = 'COMPENSAR'.
* t_ltap_c-vlenr = .

* DESTINO

    IF datos_ua-letyp IS INITIAL.
      "Recuperamos el LETYP a partir del material/almacen
      SELECT SINGLE lety1
        FROM mlgn
        INTO t_ltap_c-letyp
        WHERE matnr = t_ltap_c-matnr
        AND lgnum = data_u-lgnum.

    ELSE.
      t_ltap_c-letyp = datos_ua-letyp.
    ENDIF.

    t_ltap_c-nlenr = datos_ua-nlenr.
    t_ltap_c-nltyp = datos_ua-nltyp.
    t_ltap_c-nlpla = datos_ua-nlpla.

    APPEND t_ltap_c.

    CALL FUNCTION 'L_TO_CREATE_MULTIPLE' DESTINATION 'NONE'
      EXPORTING
        i_lgnum                = data_u-lgnum
        i_bwlvs                = '999'
      TABLES
        t_ltap_creat           = t_ltap_c
        t_ltak                 = t_ltak
        t_ltap_vb              = t_ltap
      EXCEPTIONS
        no_to_created          = 1
        bwlvs_wrong            = 2
        betyp_wrong            = 3
        benum_missing          = 4
        betyp_missing          = 5
        foreign_lock           = 6
        vltyp_wrong            = 7
        vlpla_wrong            = 8
        vltyp_missing          = 9
        nltyp_wrong            = 10
        nlpla_wrong            = 11
        nltyp_missing          = 12
        rltyp_wrong            = 13
        rlpla_wrong            = 14
        rltyp_missing          = 15
        squit_forbidden        = 16
        manual_to_forbidden    = 17
        letyp_wrong            = 18
        vlpla_missing          = 19
        nlpla_missing          = 20
        sobkz_wrong            = 21
        sobkz_missing          = 22
        sonum_missing          = 23
        bestq_wrong            = 24
        lgber_wrong            = 25
        xfeld_wrong            = 26
        date_wrong             = 27
        drukz_wrong            = 28
        ldest_wrong            = 29
        update_without_commit  = 30
        no_authority           = 31
        material_not_found     = 32
        lenum_wrong            = 33
        matnr_missing          = 34
        werks_missing          = 35
        anfme_missing          = 36
        altme_missing          = 37
        lgort_wrong_or_missing = 38
        OTHERS                 = 39.
    IF sy-subrc NE 0.
      error = abap_true.

      APPEND INITIAL LINE TO tt_log ASSIGNING FIELD-SYMBOL(<ls_log>).
      <ls_log>-id = sy-msgid.
      <ls_log>-type = sy-msgty.
      <ls_log>-number = sy-msgno.
      <ls_log>-message_v1 = sy-msgv1.
      <ls_log>-message_v2 = sy-msgv2.
      <ls_log>-message_v3 = sy-msgv3.
      <ls_log>-message_v4 = sy-msgv4.
    ENDIF.

  ENDIF.

ENDFUNCTION.
