FUNCTION zswm_proponer_ubicacion.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(UNAME) TYPE  UNAME DEFAULT SY-UNAME
*"     VALUE(TCODE) TYPE  TCODE OPTIONAL
*"     VALUE(LENUM) TYPE  LENUM
*"     VALUE(AUFNR) TYPE  AUFNR OPTIONAL
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"     VALUE(REGISTRO) TYPE  ZSWM_READ_EXIDV_STR
*"     VALUE(TT_PROPUESTA) TYPE  ZSWM_LGPLA_PROPUESTA_STR_TT
*"     VALUE(RT_PROPUESTA) TYPE  ZSWM_LGPLA_PROPUESTA_STR
*"----------------------------------------------------------------------

  PERFORM break USING 'ZSWM_PROPONER_UBICACION'.

  DATA: data_u            TYPE zswm_data_ui5_eeeoo_str,
        r_param           TYPE zswm_data_ui5_param_str,
        r_funcionalidades TYPE zswm_data_ui5_func_str.

  CALL FUNCTION 'ZSWM_GET_DATA_USER_UI5'
    EXPORTING
      uname      = uname
      statu      = 'X'
      no_gen_log = abap_true
      tcode      = tcode
    IMPORTING
      data_user  = data_u
*     ERROR      =
*     TT_LOG     =
    .
  DATA: BEGIN OF reg,
          matnr TYPE matnr,
          werks TYPE werks_d,
          lgort TYPE lgort_d,
          charg TYPE charg_d,
        END OF reg.

*    PERFORM read_lenum USING lenum tcode data_u '' '' CHANGING registro error tt_log.
*    check error ne abap_true.
  SELECT * INTO CORRESPONDING FIELDS OF reg UP TO 1 ROWS FROM lqua WHERE lgnum EQ data_u-lgnum
                                             AND lenum EQ lenum.
  ENDSELECT.
  SELECT lgtyp AS nltyp lgpla AS nlpla INTO CORRESPONDING FIELDS OF TABLE tt_propuesta
      FROM zwm_rf_ubic_prop WHERE lgnum EQ data_u-lgnum
                              AND matnr EQ reg-matnr.
  SELECT SINGLE mtart INTO @DATA(mtart) FROM mara WHERE matnr EQ @reg-matnr.
  DATA(n_reg) = sy-dbcnt.
  IF  mtart EQ 'ZPSE'
  AND data_u-lgnum EQ '203'.
    DATA nlpla TYPE ltap-nlpla VALUE 'SEMI'.
    CALL FUNCTION 'ZSWM_CREATE_BIN'
      EXPORTING
        lgnum = data_u-lgnum
        lgtyp = '200'
        lgpla = nlpla
        lgber = '001'
        lptyp = 'GN'.
    DATA r_propuesta TYPE zswm_lgpla_propuesta_str.
    r_propuesta-sequence = n_reg + 1.
    r_propuesta-nltyp = '200'.
    r_propuesta-nlpla = 'SEMI'.
    APPEND r_propuesta TO tt_propuesta.
  ENDIF.
  DESCRIBE TABLE tt_propuesta LINES n_reg.
  IF n_reg EQ 1.
    READ TABLE tt_propuesta INTO r_propuesta INDEX 1.
    rt_propuesta-nltyp = registro-nltyp = r_propuesta-nltyp.
    rt_propuesta-nlpla = registro-nlpla = r_propuesta-nlpla.
  ENDIF.
*   add jtm 03.11.2022
  IF  rt_propuesta-nltyp IS INITIAL
  AND rt_propuesta-nlpla IS INITIAL.
    IF aufnr IS INITIAL.
      SELECT * INTO @DATA(reg_ltap) UP TO 1 ROWS FROM ltap WHERE lgnum EQ @data_u-lgnum
                                                     AND matnr EQ @reg-matnr
                                                     AND werks EQ @reg-werks
                                                     AND lgort EQ @reg-lgort
                                                     AND charg EQ @reg-charg
                                                     AND vltyp EQ '120'
                                                     AND ( nltyp EQ '200' OR nltyp EQ '201' ) ORDER BY tanum DESCENDING.
      ENDSELECT.
      IF sy-subrc EQ 0.
*            rt_propuesta-nltyp = reg_ltap-nltyp.
        rt_propuesta-nlpla = reg_ltap-nlpla.
      ENDIF.
    ELSE.
      SELECT b~lgtyp, b~lgpla
        FROM mseg AS a
        INNER JOIN lqua AS b ON b~matnr = a~matnr AND b~charg = a~charg AND b~werks = a~werks AND b~lgort = a~lgort
        INTO TABLE @DATA(lt_lqua_ua)
        WHERE a~bwart = '101'
        AND a~aufnr = @aufnr
        ORDER BY b~bdatu DESCENDING.
      IF sy-subrc = 0.
        rt_propuesta-nltyp = lt_lqua_ua[ 1 ]-lgtyp.
        rt_propuesta-nlpla = lt_lqua_ua[ 1 ]-lgpla.
      ENDIF.
    ENDIF.
  ENDIF.
*   fin de add jtm 03.11.2022

ENDFUNCTION.
