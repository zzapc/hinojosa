FUNCTION ZSWM_EJECUTAR_NECESIDAD.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(LGNUM) TYPE  LGNUM OPTIONAL
*"     VALUE(TBNUM) TYPE  TBNUM OPTIONAL
*"     VALUE(MBLNR) TYPE  MBLNR OPTIONAL
*"     VALUE(MJAHR) TYPE  MJAHR OPTIONAL
*"     REFERENCE(WAIT) TYPE  FLAG OPTIONAL
*"     REFERENCE(MODE_BI) DEFAULT 'N'
*"  EXPORTING
*"     REFERENCE(ERROR) TYPE  FLAG
*"     REFERENCE(TT_RETURN) TYPE  BAPIRET2_TT
*"     REFERENCE(TANUM) TYPE  TANUM
*"----------------------------------------------------------------------
   clear_bi.
   if tbnum is not INITIAL.
     dynpro 'SAPML03T'    '0131'.
     campo  'LTAK-LGNUM'  lgnum.
     campo  'LTBK-TBNUM'  tbnum.
     campo  'RL03T-ALAKT' 'X'.
     campo  'RL03T-DUNKL' 'D'.
     boton  '/00'.
     call_bi 'LT04' mode_bi.
   else.
     if wait eq abap_true.
        do 5 TIMES.
           WAIT up to 2 SECONDS.
           PERFORM get_tbnum USING mblnr mjahr CHANGING tbnum lgnum.
           check tbnum is not INITIAL.
           exit.
        ENDDO.
     endif.
     dynpro 'SAPML02B' '0203'.
     campo  'RL02B-MBLNR' mblnr.
     campo  'RL02B-MJAHR' mjahr.
     campo  'RL02B-DUNKL' 'D'.
*    cambiar jtm 24.04.2024
     call_bi 'LT06' mode_bi.
     call TRANSACTION 'LT06' USING t_bdc mode mode_bi MESSAGES INTO t_BDCMSGCOLL.
  if t_BDCMSGCOLL[] is not INITIAL.
     CALL FUNCTION 'CONVERT_BDCMSGCOLL_TO_BAPIRET2'
      TABLES
        IMT_BDCMSGCOLL       = t_BDCMSGCOLL
        EXT_RETURN           = t_bapiret2
               .

  endif.
*    fin de cambiar jtm 24.04.2024
   endif.

   append lines of t_bapiret2 to tt_return.
   delete t_bapiret2 where type   = 'E'
                       and id     = 'L3'
                       and number = '047'. " La necesidad-transp 0001911094 ya ha sido satisfecha en su totalidad

   loop at t_bapiret2 where type eq 'E'
                         or type eq 'A'.
        move abap_true to error.
   endloop.

   if tbnum is not INITIAL.
      PERFORM selecc_ot_from_necesi USING lgnum tbnum CHANGING tanum.
   else.
      PERFORM get_tbnum USING mblnr mjahr CHANGING tbnum lgnum.
*      select tbnum lgnum into (tbnum, lgnum) up to 1 ROWS BYPASSING BUFFER
*                 from mseg where mblnr eq mblnr
*                             and mjahr eq mjahr.
*          check tbnum is not INITIAL.
*          exit.
*      ENDSELECT.
      check tbnum is not INITIAL.
      PERFORM selecc_ot_from_necesi USING lgnum tbnum CHANGING tanum.

   endif.

ENDFUNCTION.
