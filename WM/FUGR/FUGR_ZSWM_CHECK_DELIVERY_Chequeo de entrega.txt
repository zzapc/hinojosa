FUNCTION ZSWM_CHECK_DELIVERY.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(VBELN) TYPE  VBELN
*"     VALUE(EBELN) TYPE  EBELN
*"     VALUE(DATA_USER) TYPE  ZSWM_DATA_UI5_EEEOO_STR
*"     VALUE(TCODE) TYPE  TCODE
*"  EXPORTING
*"     VALUE(ERROR) TYPE  FLAG
*"     VALUE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
    PERFORM break USING 'ZSWM_CHECK_DELIVERY'.

   data r_LIKP type LIKP.
   data vbeln_id type vbeln_vl.
   clear vbeln_id.
   select single * into r_likp from likp where vbeln eq vbeln..
   if sy-subrc ne 0.
      move abap_true to error.
*     No existe entrega con número &
      PERFORM mensaje USING 'E' 'ZSWM_UI5' '010' vbeln space space space CHANGING tT_log[].
   else.
      case r_likp-vbtyp.
      when 'J'. " OD
        select COUNT( * ) into @data(N_reg) from ekbe where ebeln eq @ebeln
                                                        and belnr eq @vbeln
                                                        and vgabe eq '8'.
        if sy-subrc ne 0.
          move abap_true to error.
*         El albarán & no corresponde al pedido &
          PERFORM mensaje USING 'E' 'ZSWM_UI5' '011' vbeln ebeln space space CHANGING tT_log[].
        else.
          select vbeln into vbeln_id up to 1 ROWS from vbfa where vbeln eq vbeln
                                                              and vbtyp_n eq '7'
                                                              and vbtyp_v eq 'J'.
          ENDSELECT.
          if sy-subrc ne 0.
            move abap_true to error.
*           El albarán & no tiene entrega entrante asociada
            PERFORM mensaje USING 'E' 'ZSWM_UI5' '012' vbeln space space space CHANGING tT_log[].
          endif.
        endif.
      when '7'. " ID
        select COUNT( * ) into N_reg from ekes where ebeln eq ebeln
                                                 and vbeln eq vbeln.
        if sy-subrc ne 0.
*         El albarán & no corresponde al pedido &
          PERFORM mensaje USING 'E' 'ZSWM_UI5' '011' vbeln ebeln space space CHANGING tT_log[].
        else.
          move vbeln to vbeln_id.
        endif.
      when OTHERS.
        move abap_true to error.
*       No existe entrega con número &
        PERFORM mensaje USING 'E' 'ZSWM_UI5' '010' vbeln space space space CHANGING tT_log[].
      ENDCASE.
   endif.
   check error ne abap_true
     and vbeln_id is not INITIAL.
   select SINGLE wbstk into @data(wbstk) from vbuk where vbeln eq @vbeln_id.
   if wbstk eq 'C'.
        move abap_true to error.
*       El albarán & ya ha sido contabilizado.
        PERFORM mensaje USING 'E' 'ZSWM_UI5' '013' vbeln space space space CHANGING tT_log[].
   endif.
   check error ne abap_true.
   data r_param type ZSWM_DATA_UI5_PARAM_STR.
   CALL FUNCTION 'ZSWM_GET_PARAM_UI5'
     EXPORTING
       data_user       = data_user
       tcode           = tcode
                     no_gen_log        = abap_true
     IMPORTING
       R_PARAM         = r_param
*       ERROR           =
*       TT_LOG          =
             .
   if r_param-rr_mtart[] is not INITIAL.
      select COUNT( * ) into N_reg from lips where vbeln eq vbeln
                                               and mtart in r_param-RR_MTART.
      if sy-subrc ne 0.
         move abap_true to error.
*        La entrega & no contiene la tipologia de producto para la que fue defini.
         PERFORM mensaje USING 'E' 'ZSWM_UI5' '019' vbeln space space space CHANGING tT_log[].
      endif.
   endif.
   if r_param-rr_bstart[] is not INITIAL
   and ebeln              is not INITIAL.
      select SINGLE bsart into @data(bsart) from ekko where ebeln eq @ebeln.
      if bsart not in r_param-rr_bstart.
         move abap_true to error.
*        Clase de pedido & de pedido & no permitida.
         PERFORM mensaje USING 'E' 'ZSWM_UI5' '020' bsart ebeln space space CHANGING tT_log[].
      endif.

   endif.



ENDFUNCTION.
