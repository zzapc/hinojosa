FUNCTION zswm_tolerancias.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(RT_HEAD) TYPE  ZSWM_GET_ENTREGAS_HEAD_UI5_STR
*"     REFERENCE(CHECK_POS_PEDIDO) TYPE  FLAG OPTIONAL
*"  CHANGING
*"     REFERENCE(RT_ENTRE) TYPE  ZSWM_GET_ENTREGAS_UI5_STR
*"----------------------------------------------------------------------
  data pstyv type lips-pstyv.
  data uebpr type tvlp-UEBPR. " Control de verificación de exceso de suministro
* UEBTO -->  Límite de tolerancia para el exceso de suministro
* UNTTO -->  Límite de tolerancia p.entrega incompleta
* UEBTK -->  Indicador: Exceso de suministro ilimitado
  DATA sw_tolerancias_pedido TYPE zswm_ui5_tolerancias.
  SELECT SINGLE uebto untto uebtk INTO CORRESPONDING FIELDS OF sw_tolerancias_pedido FROM lips WHERE vbeln EQ rt_entre-vbeln
                                                                                                 AND posnr EQ rt_entre-posnr.

  IF sy-subrc EQ 0.
    MOVE-CORRESPONDING sw_tolerancias_pedido TO rt_entre.
  ENDIF.
  rt_entre-menge_desde = rt_entre-lfimg - ( rt_entre-lfimg * rt_entre-untto ) / 100.
  rt_entre-menge_hasta = rt_entre-lfimg + ( rt_entre-lfimg * rt_entre-uebto ) / 100.

* El calculo de tolerancias depende de las tolerancias de la entrega y de las cantidades de pedido.
* Ejemplo Tengo un pedido de 2500 unidades con un exceso de suministro del 10%  => podemos expedir hasta 2750
* Si tengo una entrega de 1100 ==> podemos expedir hasta 1650


* add jtm 21.12.2022
  if  rt_entre-uebto   > 0            " Solo para el caso de que el % de exceso de suministro sea distinto a cero
  and rt_entre-uebtk   ne abap_true  " no hay suministro ilimitado.
  and check_pos_pedido eq abap_true.
     PERFORM get_pstyv_uebpr USING rt_entre-vbeln rt_entre-posnr CHANGING pstyv uebpr.
*    Nuestro objetivo es que el cerrar entrega no de error.
     if uebpr eq 'B'.  " Rechazo de la situación con mensaje de error
*       Cantidad de pedido acumulada (en unidades de venta)
        select SINGLE kwmeng into @data(kwmeng) from vbap where vbeln eq @rt_entre-vgbel
                                                            and posnr eq @rt_entre-vgpos.
        if sy-subrc eq 0 and kwmeng > 0.
          data t_lips_cal like lips occurs 0 WITH HEADER LINE.
*         Miramos que entregas apuntan a nuestro pedido
          select * into CORRESPONDING FIELDS OF TABLE t_lips_cal from lips where vgbel eq rt_entre-vgbel
                                                                             and vgpos eq rt_entre-vgpos.
          if sy-subrc eq 0.
*            quito la entrega que estamos tratando
             delete t_lips_cal where vbeln eq rt_entre-vbeln.
*            quito la partición de lotes
             delete t_lips_cal where posnr+0(1) eq '9'.

             data ctD_en_o_entrega type lipsd-ofmng. " cantidad en otras entregas
             data ctd_en_n_entrega type lipsd-ofmng. " Cantidad posible en nuestra entrega
             data ctd_maxima       type lipsd-ofmng.
             ctd_en_o_entrega =
             ctd_en_n_entrega =
             ctd_maxima       = 0.
*            Cakculo la cantidad de pedido en entregas
             loop at t_lips_cal into datA(rT_lips_calc).
                  ctd_en_o_entrega = ctd_en_o_entrega
                              + rt_lips_calc-lfimg + rt_lips_calc-kcmeng. " En KCMENG está la cantidad de picking de las posiciones 9*
             endloop.
             ctd_en_n_entrega = kwmeng - ctD_en_o_entrega.  " esta es la cantidad que SAP propone de entrega para la nuestra =
*                                                           " Cantidad de pedido - ctd de resto de entregas

*
             ctd_maxima = ctd_en_n_entrega + ( kwmeng * rt_entre-uebto ) / 100.
             rt_entre-menge_hasta = ctd_maxima.
*             if ctd_maxima >= rt_entre-lfimg.
*                rt_entre-menge_hasta = ctd_maxima.
*             endif.
*             ofmng = kwmeng - ofmng.  " cantidad abierta
*             rt_entre-menge_hasta =  ofmng + ( ofmng * rt_entre-uebto ) / 100.
          endif.

        endif.
     endif.
  endif.
* fin de add jtm 21.12.2022
*  rt_entre-menge_desde = rt_entre-lfimg - ( rt_entre-lfimg * rt_entre-untto ) / 100.
*  rt_entre-menge_hasta = rt_entre-lfimg + ( rt_entre-lfimg * rt_entre-uebto ) / 100.





ENDFUNCTION.
