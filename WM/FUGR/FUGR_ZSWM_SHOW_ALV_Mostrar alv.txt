FUNCTION zswm_show_alv.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(REPORT) TYPE  REPID DEFAULT SY-REPID
*"     REFERENCE(HANDLE) TYPE  SLIS_HANDL DEFAULT '0001'
*"     REFERENCE(VARIAN) TYPE  SLIS_VARI DEFAULT '/INITIAL'
*"     REFERENCE(TABLA) TYPE  DD03N-TABNAME OPTIONAL
*"     REFERENCE(TITLE) TYPE  SY-TITLE OPTIONAL
*"  TABLES
*"      TT_ALV
*"----------------------------------------------------------------------

  variant-report  = report.
  variant-handle  = handle.
  variant-variant = varian.

  tabname = tabla.
  titulo  = title.
  DATA:       dref TYPE REF TO data.

  DATA: dyn_table     TYPE REF TO data,
        dyn_line      TYPE REF TO data,
        ltb_field_cat TYPE lvc_t_fcat.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active    = 'X'
      i_structure_name   = tabla
      i_bypassing_buffer = 'X'
    CHANGING
      ct_fieldcat        = ltb_field_cat[].
*
  SORT ltb_field_cat BY no_out.
  DELETE ltb_field_cat WHERE no_out = abap_true.

  SORT ltb_field_cat BY col_pos.

  CALL METHOD cl_alv_table_create=>create_dynamic_table
    EXPORTING
      it_fieldcatalog           = ltb_field_cat
    IMPORTING
      ep_table                  = dyn_table
    EXCEPTIONS
      generate_subpool_dir_full = 1
      OTHERS                    = 2.

     ASSIGN dyn_table->* TO <fs_table>.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
 CREATE DATA dyn_line LIKE LINE OF <fs_table>.

* CREATE DATA dyn_line LIKE LINE OF <fs_table>.
 ASSIGN dyn_line->* TO <fs_wa>.
 append lines of tt_alv to:  <fs_table>.

*  select * into TABLE @data(tt_dd03n) from dd03n where tabname eq @tabla.
*  loop at tt_dd03n into data(rt_dd03n).
*    assign COMPONENT rt_dd03n-fieldname of STRUCTURE <struct> to field-SYMBOL(<struc>)
*  endloop.

  CALL SCREEN 0300.



ENDFUNCTION.
