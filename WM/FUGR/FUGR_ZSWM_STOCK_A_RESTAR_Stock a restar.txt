FUNCTION zswm_stock_a_restar.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(LGNUM) TYPE  LGNUM OPTIONAL
*"     VALUE(MATNR) TYPE  MATNR OPTIONAL
*"     REFERENCE(WERKS) TYPE  WERKS_D OPTIONAL
*"     REFERENCE(LGORT) TYPE  LGORT_D OPTIONAL
*"     REFERENCE(CHARG) TYPE  CHARG_D OPTIONAL
*"     REFERENCE(VBELN) TYPE  VBELN_VA OPTIONAL
*"     REFERENCE(POSNR) TYPE  POSNR_VA OPTIONAL
*"     REFERENCE(NO_ASIGNADO) TYPE  FLAG OPTIONAL
*"     REFERENCE(ASIGNADO) TYPE  FLAG OPTIONAL
*"  EXPORTING
*"     REFERENCE(CANTIDAD) TYPE  MENGE_D
*"----------------------------------------------------------------------
  RANGES: r_matnr FOR mard-matnr,
          r_charg FOR mch1-charg,
          r_sobkz FOR lqua-sobkz,
          r_lgort FOR lqua-lgort,
          r_sonum FOR lqua-sonum.
*  check 1 eq 2.
  CLEAR: r_matnr, r_matnr[], r_charg, r_charg[], r_sobkz, r_sobkz[], r_lgort, r_lgort[], r_sonum[], r_sonum.
  CLEAR: cantidad.

  IF lgnum IS INITIAL
  AND werks IS NOT INITIAL
  AND lgort IS NOT INITIAL.
    SELECT SINGLE lgnum INTO lgnum FROM t320 WHERE werks EQ werks
                                               AND lgort EQ lgort.
  ELSEIF lgnum IS INITIAL
     AND werks IS NOT INITIAL
     AND lgort IS INITIAL.
    SELECT SINGLE lgnum INTO lgnum FROM t320 WHERE werks EQ werks.
  ENDIF.
  IF lgort IS NOT INITIAL.
    r_lgort+0(3) = 'IEQ'. r_lgort-low = lgort. APPEND r_lgort.
  ENDIF.
  IF matnr IS NOT INITIAL.
    r_matnr+0(3) = 'IEQ'. r_matnr-low = matnr. APPEND r_matnr.
  ENDIF.
  IF charg IS NOT INITIAL.
    r_charg+0(3) = 'IEQ'. r_charg-low = charg. APPEND r_charg.
  ENDIF.
  IF no_asignado EQ abap_true. " ahora quitamos en stock libre tanto el asignado como el no
*    r_sobkz+0(3) = 'IEQ'. r_sobkz-low = space. APPEND r_sobkz.
*    r_sobkz+0(3) = 'IEQ'. r_sobkz-low = 'E'  . APPEND r_sobkz.
  ENDIF.
  IF asignado EQ abap_true.
    r_sobkz+0(3) = 'IEQ'. r_sobkz-low = 'E'. APPEND r_sobkz.

*    r_bestq+0(3) = 'IEQ'. r_bestq-low = 'E'. APPEND r_bestq.
    IF vbeln IS NOT INITIAL
    AND posnr IS NOT INITIAL.
      r_sonum+0(3) = 'IEQ'.
      r_sonum-low+0(10) = vbeln.
      r_sonum-low+10(6) = posnr.
      APPEND r_sonum.
    ENDIF.
  ENDIF.

  SELECT * INTO TABLE @DATA(tt_lqua) FROM lqua
      WHERE lgnum    EQ @lgnum
        AND (   lgtyp EQ '998' OR lgtyp EQ '999' )
        AND werks    EQ @werks
        AND lgort    IN @r_lgort
        AND matnr    IN @r_matnr
        AND charg    IN @r_charg
*        AND lgpla    NE 'RECORTE'
        AND bestq    EQ @space     " en libre
        AND sobkz    IN @r_sobkz
        AND sonum    IN @r_sonum
        AND verme    > 0.

  LOOP AT tt_lqua INTO DATA(rt_lqua).
    ADD rt_lqua-verme TO cantidad.
  ENDLOOP.





ENDFUNCTION.
