FUNCTION zswm_mod_fecha_lote_insp_repro.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_VM07M) TYPE  VM07M
*"     REFERENCE(I_MSEG) TYPE  MSEG
*"----------------------------------------------------------------------
  DATA: evento TYPE btceventid VALUE 'ZSWM_UAS_ACCIONE'.
* hay un proceso que se llama REPROCESOS. Desde pistola UI5 se mueve PT o SEMI a 230 REPROCESOS y esto hace una LQ02 por código
* que pasa el stock a Q y crea un lote de inspección.
* En esta user-exit lo que hacemos es que cuando tomamos decisión de emplo dejamos constancia en la tabla ZSWM_UAS...
* de la fecha de la decisión para poder filtrar + comodamente tanto en el programa zswm_uas_accione

  CHECK i_vm07m-qploa IS NOT INITIAL
  AND ( i_mseg-bwart  EQ '321'       " Q -->L
     OR i_mseg-bwart  EQ '350'       " Q -->S
     OR i_mseg-bwart  EQ '331'       " Q --> Muestras
     OR i_mseg-bwart  EQ '553' ).    " Q --> Desguace
  SELECT * INTO TABLE @DATA(tt_acciones) FROM zswm_uas_accione WHERE prueflos  EQ @i_vm07m-qploa.
  CHECK sy-subrc EQ 0.
  SELECT SINGLE * INTO @DATA(uas_accione) FROM zswm_uas_accione WHERE prueflos EQ @i_vm07m-qploa .
  CHECK sy-subrc EQ 0.
  CASE i_mseg-bwart.
    WHEN '321'. MOVE abap_true TO uas_accione-mov_321.
    WHEN '331'. MOVE abap_true TO uas_accione-mov_331.
    WHEN '350'. MOVE abap_true TO uas_accione-mov_350.
    WHEN '553'. MOVE abap_true TO uas_accione-mov_553.
  ENDCASE.

  UPDATE zswm_uas_accione SET fecha_mod_lote = sy-datum
                              hora_mod_lote  = sy-uzeit
                              aedat          = sy-datum
                              aezeit         = sy-uzeit
                              aenam          = sy-uname
                              mov_321        = uas_accione-mov_321
                              mov_331        = uas_accione-mov_331
                              mov_350        = uas_accione-mov_350
                              mov_553        = uas_accione-mov_553
                         WHERE prueflos EQ i_vm07m-qploa.
  CHECK sy-subrc EQ 0.
  CALL FUNCTION 'BP_EVENT_RAISE'
    EXPORTING
      eventid                = evento
*     EVENTPARM              = ' '
*     TARGET_INSTANCE        = ' '
*     TARGET_MODE            = ' '
    EXCEPTIONS
      bad_eventid            = 1
      eventid_does_not_exist = 2
      eventid_missing        = 3
      raise_failed           = 4
      OTHERS                 = 5.
*      endif.
*    ENDIF.
*  ENDIF.





ENDFUNCTION.
