FUNCTION ZSWMPPMONSTO_CREATE_STO_OD.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(EBELN) TYPE  EBELN
*"  EXPORTING
*"     REFERENCE(LT_RETURN) TYPE  BAPIRET2_T
*"     REFERENCE(ERROR) TYPE  FLAG
*"     REFERENCE(VBELN) TYPE  VBELN
*"----------------------------------------------------------------------
    DATA: t_bapidlv       TYPE TABLE OF bapidlvreftosto,
          l_bapidlv       TYPE bapidlvreftosto,
          t_deliveries    TYPE TABLE OF  bapishpdelivnumb,
          t_created_items TYPE TABLE OF  bapidlvitemcreated.
    daTA: l_entrega       TYPE vbeln.



    CLEAR: t_bapidlv[], t_deliveries[], t_created_items[],lt_return[], l_entrega, l_bapidlv.
    select * into table @data(tt_ekpo) from ekpo where ebeln eq @ebeln
                                                   and loekz ne 'S'.
    loop at tt_ekpo into data(rt_ekpo).
    l_bapidlv-ref_doc  = ebeln.
    l_bapidlv-REF_ITEM = rt_ekpo-ebelp.

    APPEND l_bapidlv TO t_bapidlv.
    endloop.
      CALL FUNCTION 'BAPI_OUTB_DELIVERY_CREATE_STO'
      IMPORTING
        delivery          = l_entrega
      TABLES
        stock_trans_items = t_bapidlv
        deliveries        = t_deliveries
        created_items     = t_created_items
        return            = lt_return.


  LOOP AT lt_return INTO DATA(Rt_return) WHERE type EQ 'E'
                                            OR type EQ 'A'.
  ENDLOOP.
  IF sy-subrc EQ 0.
    MOVE abap_true TO error.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*        IMPORTING
*          RETURN        =
      .

  ELSE.
*    DATA vbeln TYPE vbeln.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = l_entrega
      IMPORTING
        output = vbeln.
    data ZSWMSTOCP type ZSWMSTOCP.
    select SINGLE * into ZSWMSTOCP from ZSWMSTOCP BYPASSING BUFFER
      where ebeln eq ebeln.
    update ZSWMSTOCP set vbeln = VBELN
          where ebeln eq ebeln.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'
*       IMPORTING
*       RETURN        =
      .

*    ENDIF.
     wait up to 2 SECONDS.
     CALL FUNCTION 'ZSWMPPMONSTO_VL02N'
       EXPORTING
         vbeln         = vbeln
*        MODO_BI       = 'N'
*      IMPORTING
*        ERROR         =
*        TT_LOG        =
               .

  ENDIF.


ENDFUNCTION.
