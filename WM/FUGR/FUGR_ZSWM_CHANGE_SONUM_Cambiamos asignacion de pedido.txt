FUNCTION zswm_change_sonum.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TT_LENUM) TYPE  ZSWM_CHANGE_LENUM_SONUM_TT OPTIONAL
*"  EXPORTING
*"     REFERENCE(GM_HEADRET) TYPE  BAPI2017_GM_HEAD_RET
*"     REFERENCE(ERROR) TYPE  FLAG
*"     REFERENCE(TT_LOG) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  DATA  rt_lqua    TYPE lqua.
  DATA: gm_item    TYPE TABLE OF
        bapi2017_gm_item_create WITH HEADER LINE.
  DATA: gm_header  TYPE bapi2017_gm_head_01.
  DATA: gm_code    TYPE bapi2017_gm_code.
*  DATA: gm_headret TYPE bapi2017_gm_head_ret.
  DATA: gm_return  TYPE bapiret2 OCCURS 0 WITH HEADER LINE.
  DATA: gm_retmtd  TYPE bapi2017_gm_head_ret-mat_doc.

  CLEAR: gm_return, gm_retmtd.
  REFRESH: gm_return, gm_item.
  CLEAR: gm_header, gm_code, gm_headret, tt_log[], error.
  gm_header-pstng_date = sy-datum.
  gm_header-doc_date   = sy-datum.
  gm_code-gm_code      = '04'.

  LOOP AT tt_lenum INTO DATA(rt_lenum).
    SELECT SINGLE * INTO @DATA(r_lein) FROM lein WHERE lenum EQ @rt_lenum-lenum.
    SELECT * INTO rt_lqua UP TO 1 ROWS FROM lqua BYPASSING BUFFER
                                           WHERE lgnum EQ r_lein-lgnum
                                             AND lenum EQ r_lein-lenum
                                             AND lgtyp EQ r_lein-lgtyp
                                             AND lgpla EQ r_lein-lgpla.
    ENDSELECT.
    CHECK sy-subrc EQ 0 AND rt_lqua-sonum NE rt_lenum-new_sonum.
    CLEAR gm_item.
    gm_item-material   =
    gm_item-move_mat   = rt_lqua-matnr.
    gm_item-batch      =
    gm_item-move_batch = rt_lqua-charg.
*    gm_item-STCK_TYPE  = rt_lqua-bestq.
    gm_item-plant      =
    gm_item-move_plant = rt_lqua-werks.
    gm_item-stge_loc   =
    gm_item-move_stloc = rt_lqua-lgort.
    gm_item-unload_pt  = |{ rt_lenum-lenum ALPHA = OUT }|.
    CONCATENATE '411_' gm_item-unload_pt INTO gm_item-unload_pt SEPARATED BY '/'.
    CONDENSE gm_item-unload_pt NO-GAPS.
    gm_item-entry_qnt  = rt_lqua-verme.
    gm_item-entry_uom  = rt_lqua-meins.
    IF  rt_lqua-sonum      IS NOT INITIAL
    AND rt_lenum-new_sonum IS NOT INITIAL.
      gm_item-move_type      = '413'.
*     Origen
      gm_item-spec_stock     = rt_lqua-sobkz.
      gm_item-val_sales_ord  = rt_lqua-sonum+0(10).
      gm_item-val_s_ord_item = rt_lqua-sonum+10(6).
*     Destino
      gm_item-sales_ord      = rt_lenum-new_sonum+0(10).
      gm_item-s_ord_item     = rt_lenum-new_sonum+10(6).
      APPEND gm_item.

    ELSEIF rt_lqua-sonum IS NOT INITIAL.
      gm_item-move_type      = '411'.
      gm_item-spec_stock     = rt_lqua-sobkz.
      gm_item-spec_stock     = rt_lqua-sobkz.
      gm_item-val_sales_ord  = rt_lqua-sonum+0(10).
      gm_item-val_s_ord_item = rt_lqua-sonum+10(6).

*      gm_item-sales_ord      = rt_lqua-sonum+0(10).
*      gm_item-s_ord_item     = rt_lqua-sonum+10(6).

*      gm_item-val_sales_ord  = rt_lenum-sonum+0(10).
*      gm_item-val_s_ord_item = rt_lenum-sonum+10(6).
      APPEND gm_item.

    ELSEIF rt_lenum-new_sonum IS NOT INITIAL.
      gm_item-move_type      = '412'.
      gm_item-spec_stock     = 'E'. "rt_lqua-sobkz'.
*      gm_item-sales_ord  = rt_lenum-new_sonum+0(10).
*      gm_item-s_ord_item = rt_lenum-new_sonum+10(6).

*      gm_item-sales_ord      = rt_lqua-sonum+0(10).
*      gm_item-s_ord_item     = rt_lqua-sonum+10(6).

      gm_item-val_sales_ord  = rt_lenum-new_sonum+0(10).
      gm_item-val_s_ord_item = rt_lenum-new_sonum+10(6).
      APPEND gm_item.

    ENDIF.
  ENDLOOP.
  CHECK gm_item[] IS NOT INITIAL.
  CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
    EXPORTING
      goodsmvt_header  = gm_header
      goodsmvt_code    = gm_code
    IMPORTING
      goodsmvt_headret = gm_headret
      materialdocument = gm_retmtd
    TABLES
      goodsmvt_item    = gm_item
      return           = tt_log[].
  READ TABLE tt_log WITH KEY type = 'E' TRANSPORTING NO FIELDS.
  IF sy-subrc EQ 0.
    error = abap_true.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = abap_true.
*     IMPORTING
*       RETURN        =

  ENDIF.


ENDFUNCTION.
