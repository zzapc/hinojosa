FUNCTION zswm_close_delivery.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(TKNUM) TYPE  TKNUM OPTIONAL
*"     REFERENCE(VBELN) TYPE  VBELN OPTIONAL
*"     VALUE(PERMITIR_EXCESO) TYPE  FLAG OPTIONAL
*"  EXPORTING
*"     REFERENCE(ERROR) TYPE  FLAG
*"     REFERENCE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------
  data: ZSWM_UI5_ESTADIS type ZSWM_UI5_ESTADIS.
  PERFORM break USING 'ZSWM_CLOSE_DELIVERY'.
  data tT_log_global type bapiret2_tt.
  clear tT_log_global[].
  DATA tt_vttp TYPE TABLE OF vttp.
  IF vbeln IS NOT INITIAL.
    DATA rt_vttp TYPE vttp.
    rt_vttp-vbeln = vbeln.
    append rt_vttp to tt_vttp.
  ELSE.
    SELECT * INTO TABLE tt_vttp FROM vttp WHERE tknum EQ tknum.
  ENDIF.
  DATA: error_aux  TYPE flag,
        tt_log_aux TYPE bapiret2_tt.

  LOOP AT tt_vttp INTO rt_vttp.
    CLEAR: error_aux, tt_log_aux[].
    PERFORM mensaje USING 'I' 'ZSWM_UI5' '149' rt_vttp-vbeln rt_vttp-tknum space space CHANGING tT_log_global[].

    select SINGLE lgnum into @DATA(lgnum) from likp where vbeln eq @rt_vttp-vbeln.
    PERFORM closE_delivery USING    rt_vttp-vbeln permitir_exceso
                           CHANGING error_aux
                                    tT_log_aux
                                    tT_log_global.
    check error_aux eq abap_true.
    move abap_true to error.
    append lines of tT_log_aux to tt_log.
  ENDLOOP.
  check tT_log_global[] is not INITIAL.
  CALL METHOD zcl_ui5_log=>save_log
    EXPORTING
      mf       = 'ZSWM_CLOSE_DELIVERY'
      uname    = sy-uname
*      statu    = STATU
*      tcode    = TCODE
      error    = error
      lgnum    = LGNUM
*      operario =
      tt_log   = tT_log_global
      commit   = abap_true
      .
ENDFUNCTION.
