FUNCTION zswm_lt0g_del_partition.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(VBELN) TYPE  VBELN
*"     REFERENCE(MODO_BI) DEFAULT 'N'
*"     REFERENCE(WAIT) TYPE  FLAG DEFAULT 'X'
*"  EXPORTING
*"     REFERENCE(ERROR) TYPE  FLAG
*"     REFERENCE(TT_LOG) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------

  SELECT * INTO TABLE @DATA(tt_lips) FROM lips WHERE vbeln EQ @vbeln.
  DELETE tt_lips WHERE posnr+0(1) NE '9'.
  LOOP AT tt_lips INTO DATA(rt_lips).
    DATA(sw_tabix) = sy-tabix.
    rt_lips-posnr  = rt_lips-uecha.
    MODIFY tt_lips FROM rt_lips INDEX sw_tabix.
  ENDLOOP.
  SORT tt_lips BY vbeln posnr.
  DELETE ADJACENT DUPLICATES FROM tt_lips COMPARING vbeln posnr.
  CHECK tt_lips[] IS NOT INITIAL.
  clear_bi.
  dynpro 'SAPMV50A'  '4004'.
  campo  'LIKP-VBELN' vbeln.
  boton  '/00'.
  LOOP AT tt_lips INTO rt_lips.
    dynpro 'SAPMV50A' '1000'.
    boton  '=POPO_T'.

    dynpro 'SAPMV50A' '0111'.
    campo  'RV50A-POSNR' rt_lips-posnr.
    boton  '=WEIT'.

    dynpro 'SAPMV50A' '1000'.
    campo  'RV50A-LIPS_SELKZ(01)' abap_true.
    boton  '=CHSP_T'.

    dynpro 'SAPMV50A' '3000'.
    boton  '=MKAL_T'.

    dynpro 'SAPMV50A' '3000'.
    boton  '=POLO_T'.

    dynpro 'SAPMV50A' '3000'.
    boton  '=BACK_T'.
  ENDLOOP.
  dynpro 'SAPMV50A' '1000'.
  boton '=SICH_T'.


  call_bi 'VL02N' modo_bi.
  LOOP AT t_bapiret2 WHERE type EQ 'E' OR type EQ 'A'.
    MOVE abap_true TO error.
    EXIT.
  ENDLOOP.
  IF error EQ abap_true.
    APPEND LINES OF t_bapiret2 TO tt_log.
  ELSEIF wait EQ abap_true.
    DO 5 TIMES.
      DATA sw_bloqueo TYPE flag.
      WAIT UP TO 1 SECONDS.
*            DATA sw_bloqueo TYPE flag.
      CALL FUNCTION 'ZSWM_BLOQUEOS'
        EXPORTING
*         GNAME   =
*         GUNAME  =
          vbeln   = vbeln
*         LGNUM   =
*         TANUM   =
*         EXIDV   =
        IMPORTING
          bloqueo = sw_bloqueo
*               TABLES
*         T_BLOQUEOS       =
        .
      CHECK sw_bloqueo NE abap_true.
      EXIT.
    ENDDO.

  ENDIF.
ENDFUNCTION.
