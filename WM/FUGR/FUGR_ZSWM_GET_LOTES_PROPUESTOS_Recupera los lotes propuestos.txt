FUNCTION zswm_get_lotes_propuestos.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IT_POSICIONES) TYPE  ZSWM_GET_ENTREGAS_UI5_STR_TT OPTIONAL
*"  EXPORTING
*"     VALUE(ET_LOTES) TYPE  ZSWMTT_UI5_LOTES_PROPUESTOS
*"     VALUE(ET_RETURN) TYPE  BAPIRET2_T
*"----------------------------------------------------------------------
  DATA: r_vbeln         TYPE RANGE OF vbeln_vl,
        r_pedidos       TYPE RANGE OF ebeln,
        r_matnr         TYPE RANGE OF matnr,
        r_lotes         TYPE RANGE OF charg_d,
        lotes_propuesto TYPE string.

  CHECK it_posiciones IS NOT INITIAL.

  r_vbeln = VALUE #( FOR pos IN it_posiciones ( sign = 'I' option = 'EQ' low = pos-vbeln ) ).

  r_matnr = VALUE #( FOR pos IN it_posiciones ( sign = 'I' option = 'EQ' low = pos-matnr ) ).

*Pedidos de traslado:
  SELECT 'I' AS sign, 'EQ' AS option, ebeln AS low
    FROM ekbe
    INTO TABLE @r_pedidos
    WHERE belnr IN @r_vbeln.
  IF sy-subrc = 0.
    SELECT a~zzsubco_ebeln, a~aufnr, b~matnr
      FROM aufk AS a
      INNER JOIN afpo AS b ON b~aufnr = a~aufnr
      INTO TABLE @DATA(lt_lote_traslado1)
      WHERE a~zzsubco_ebeln IN @r_pedidos
      AND b~matnr IN @r_matnr.
*      AND l~verme > 0.
    IF sy-subrc = 0.
      LOOP AT lt_lote_traslado1 ASSIGNING FIELD-SYMBOL(<ls_lote_tras>).
        <ls_lote_tras>-aufnr = '00' && |{ <ls_lote_tras>-aufnr ALPHA = OUT }|.
      ENDLOOP.
      SELECT  matnr, werks, charg
        FROM lqua
        INTO TABLE @DATA(lt_lote_traslado)
        FOR ALL ENTRIES IN @lt_lote_traslado1
        WHERE matnr = @lt_lote_traslado1-matnr
        AND charg = @lt_lote_traslado1-aufnr+2
        AND verme > 0.
      IF sy-subrc = 0.
        LOOP AT it_posiciones INTO DATA(ls_pos).
          CLEAR: r_lotes, lotes_propuesto.
          LOOP AT lt_lote_traslado INTO DATA(lt_lote) WHERE matnr = ls_pos-matnr.
            IF sy-tabix = 1.
              lotes_propuesto = lt_lote-charg.
            ELSEIF sy-tabix < 3.
              CONCATENATE lotes_propuesto ', ' lt_lote-charg INTO lotes_propuesto RESPECTING BLANKS.
            ELSEIF sy-tabix = 3.
              CONCATENATE lotes_propuesto ', +' INTO lotes_propuesto RESPECTING BLANKS.
            ENDIF.

            APPEND INITIAL LINE TO r_lotes ASSIGNING FIELD-SYMBOL(<ls_lotes>).
            <ls_lotes>-sign = 'I'.
            <ls_lotes>-option = 'EQ'.
            <ls_lotes>-low = lt_lote-charg.
          ENDLOOP.

          IF r_lotes IS NOT INITIAL.
            APPEND INITIAL LINE TO et_lotes ASSIGNING FIELD-SYMBOL(<ls_data>).
            <ls_data>-vbeln = ls_pos-vbeln.
            <ls_data>-posnr = ls_pos-posnr.
            <ls_data>-matnr = ls_pos-matnr.
            <ls_data>-lotes_propuesto = lotes_propuesto.
            APPEND LINES OF r_lotes TO <ls_data>-r_lotes.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ELSE.
*Pedidos de ventas:
*    SELECT a~matnr, b~aufnr
*      FROM vbfa AS a
*      INNER JOIN afpo AS b ON b~kdauf = a~vbelv
*      INTO TABLE @DATA(lt_lote_venta1)
*      WHERE a~vbeln IN @r_vbeln
*      AND a~matnr IN @r_matnr.
*   PMP 05.09.2024 Ajuste
    SELECT b~matnr, b~aufnr
      FROM vbfa AS a
      INNER JOIN afpo AS b ON b~kdauf = a~vbelv
      INTO TABLE @DATA(lt_lote_venta1)
      WHERE a~vbeln IN @r_vbeln
      AND b~matnr IN @r_matnr.

    IF sy-subrc = 0.
      LOOP AT lt_lote_venta1 ASSIGNING FIELD-SYMBOL(<ls_lote_venta>).
        <ls_lote_venta>-aufnr = '00' && |{ <ls_lote_venta>-aufnr ALPHA = OUT }|.
      ENDLOOP.
      SELECT  matnr, werks, charg
        FROM lqua
        INTO TABLE @DATA(lt_lote_venta)
        FOR ALL ENTRIES IN @lt_lote_venta1
        WHERE matnr = @lt_lote_venta1-matnr
        AND charg = @lt_lote_venta1-aufnr+2
        AND verme > 0.
      IF sy-subrc = 0.
        LOOP AT it_posiciones INTO ls_pos.
          CLEAR: r_lotes, lotes_propuesto.
          LOOP AT lt_lote_venta INTO DATA(lt_lote_v) WHERE matnr = ls_pos-matnr.
            IF sy-tabix = 1.
              lotes_propuesto = lt_lote_v-charg.
            ELSEIF sy-tabix < 3 .
              CONCATENATE lotes_propuesto ', ' lt_lote_v-charg INTO lotes_propuesto RESPECTING BLANKS.
            ELSEIF sy-tabix = 3 .
              CONCATENATE lotes_propuesto ', +' INTO lotes_propuesto RESPECTING BLANKS.
            ENDIF.

            APPEND INITIAL LINE TO r_lotes ASSIGNING <ls_lotes>.
            <ls_lotes>-sign = 'I'.
            <ls_lotes>-option = 'EQ'.
            <ls_lotes>-low = lt_lote_v-charg.

          ENDLOOP.

          IF r_lotes IS NOT INITIAL.
            APPEND INITIAL LINE TO et_lotes ASSIGNING <ls_data>.
            <ls_data>-vbeln = ls_pos-vbeln.
            <ls_data>-posnr = ls_pos-posnr.
            <ls_data>-matnr = ls_pos-matnr.
            <ls_data>-lotes_propuesto = lotes_propuesto.
            APPEND LINES OF r_lotes TO <ls_data>-r_lotes.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFUNCTION.
