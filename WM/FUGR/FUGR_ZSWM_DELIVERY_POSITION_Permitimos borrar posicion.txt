FUNCTION zswm_delivery_position.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(IS_XLIPS) TYPE  LIPSVB
*"  EXPORTING
*"     REFERENCE(CF_ITEM_NOT_DELETABLE) TYPE  FLAG
*"     REFERENCE(CT_LOG) TYPE  SHP_BADI_ERROR_LOG_T
*"----------------------------------------------------------------------
  DATA n_error TYPE i.
  n_error = 0.
*   A) No se puede borrar posición de entrega con Z-PICKING
  SELECT SINGLE * INTO @DATA(l_tvarvc) FROM tvarvc WHERE name = @c_check_del_pick.
  IF sy-subrc EQ 0
  AND l_tvarvc-low EQ 'X'.

    SELECT SINGLE COUNT( * ) FROM zswm_ui5_pick WHERE vbeln EQ is_xlips-vbeln
                                                  AND posnr EQ is_xlips-posnr
                                                  AND lvorm NE abap_true.
    if sy-subrc EQ 0.

    DATA rt_log TYPE shp_badi_error_log.
    MOVE abap_true TO cf_item_not_deletable.
    MOVE-CORRESPONDING is_xlips TO rt_log.
*     La entrega &/& tiene picking desde pistola. Imposible borrar posición
    rt_log-msgty    = 'E'.
    rt_log-msgid    = 'ZSWM_UI5'.
    rt_log-msgno    = '192'.
    rt_log-msgv1    = |{ is_xlips-vbeln ALPHA = OUT }|.
    rt_log-msgv2    = |{ is_xlips-posnr ALPHA = OUT }|.
*      rT_log-MSGV3
*      rT_log-MSGV4
    APPEND rt_log TO ct_log.
    ADD 1 TO n_error.
    endif.
  ENDIF.
* add jtm 26.11.2022
  CHECK n_error EQ 0.
*   B) No se puede borrar posición de entrega si viene de pedido de traslado
  SELECT SINGLE * INTO l_tvarvc FROM tvarvc WHERE name = c_check_del_sto.
  IF sy-subrc EQ 0
  AND l_tvarvc-low EQ 'X'
  and is_xlips-posnr+0(1) ne '9'.
    DATA zswmstocp TYPE zswmstocp.
    CLEAR zswmstocp.
    SELECT * INTO zswmstocp UP TO 1 ROWS FROM zswmstocp WHERE  ebeln EQ is_xlips-vgbel
                                                          AND  vbeln EQ is_xlips-vbeln.
    ENDSELECT.
    IF sy-subrc EQ 0 AND zswmstocp-ebeln IS NOT INITIAL.
      data: menge type ekpo-menge,
            EGLKZ type ekpo-EGLKZ,
            loekz type ekpo-loekz.
      SELECT SINGLE loekz EGLKZ menge INTO (loekz, EGLKZ, menge)
                                            FROM ekpo WHERE ebeln EQ is_xlips-vgbel
                                                        AND ebelp EQ is_xlips-vgpos+1.
*      if sy-subrc ne 0 or loekz eq 'L' or menge <= 0 or EGLKZ eq abap_true.
      IF sy-subrc EQ 0 AND loekz NE 'L' and menge > 0 and EGLKZ ne abap_true.
*       Se requiere bloquear posición de pedido &/& para poder borrar pos. entreg
*       DATA rt_log TYPE shp_badi_error_log.
        MOVE abap_true TO cf_item_not_deletable.
        MOVE-CORRESPONDING is_xlips TO rt_log.
*       Para borrar pos. entrega. Se tiene que borrar posición de pedido &/&
        rt_log-msgty    = 'E'.
        rt_log-msgid    = 'ZSWM_UTIL'.
        rt_log-msgno    = '008'.
        rt_log-msgv1    = |{ is_xlips-vgbel ALPHA = OUT }|.
        rt_log-msgv2    = |{ is_xlips-vgpos ALPHA = OUT }|.
*       rT_log-MSGV3
*       rT_log-MSGV4
        APPEND rt_log TO ct_log.

        ADD 1 TO n_error.
      ENDIF.
    ENDIF.
  ENDIF.
* fin de add jtm 26.11.2022


ENDFUNCTION.
