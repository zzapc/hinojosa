FUNCTION zswm_get_ubicaciones_material.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(VP_LGNUM) TYPE  LGNUM OPTIONAL
*"     VALUE(VP_LGTYP) TYPE  LAGP-LGTYP OPTIONAL
*"     VALUE(VP_MATNR) TYPE  MATNR
*"  EXPORTING
*"     VALUE(TP_UBICACIONES) TYPE  ZSWM_UBICACIONES_MATERIAL_T
*"----------------------------------------------------------------------


  DATA: data_u TYPE zswm_data_ui5_eeeoo_str.
  CALL FUNCTION 'ZSWM_GET_DATA_USER_UI5'
    EXPORTING
      statu      = 'X'
      no_gen_log = abap_true
    IMPORTING
      data_user  = data_u.

  IF vp_lgnum IS INITIAL.
    vp_lgnum = data_u-lgnum.
  ENDIF.

  DATA tl_lgtyp_rg TYPE RANGE OF lagp-lgtyp.
  DATA: rr_lgtyp TYPE bapi1172_lgtyp_range_tab.
  IF vp_lgtyp IS INITIAL.
    IF vp_lgnum EQ '203'.
      tl_lgtyp_rg = VALUE #( ( sign = 'I' option = 'EQ' low = '100' ) ).
    ENDIF.

    CALL FUNCTION 'ZSWM_SET_GET_VALUES'
      EXPORTING
        shortname = 'ZSWM_UBIC_RECEPCIONES_DO'
        lgnum     = vp_lgnum
      IMPORTING
        rr_nltyp  = rr_lgtyp.


    LOOP AT rr_lgtyp ASSIGNING FIELD-SYMBOL(<fs_lgtyp>) WHERE stge_type_low NE 'MUE'.
      APPEND INITIAL LINE TO tl_lgtyp_rg ASSIGNING FIELD-SYMBOL(<fs_lgtyp_rg>).
      <fs_lgtyp_rg>-sign      = <fs_lgtyp>-sign.
      <fs_lgtyp_rg>-option    = <fs_lgtyp>-option.
      <fs_lgtyp_rg>-low       = <fs_lgtyp>-stge_type_low.
      <fs_lgtyp_rg>-high      = <fs_lgtyp>-stge_type_high.
    ENDLOOP.

  ELSE.
    tl_lgtyp_rg = VALUE #( ( sign = 'I' option = 'EQ' low = vp_lgtyp ) ).
  ENDIF.



  SELECT SINGLE mara~matnr, mara~mtart, makt~maktx
    INTO @DATA(wl_mara)
    FROM mara INNER JOIN makt ON makt~matnr = mara~matnr AND
                                 makt~spras = @sy-langu
    WHERE mara~matnr = @vp_matnr.
  CHECK sy-subrc = 0.


  SELECT lgnum, lgtyp, lgpla
    INTO TABLE @DATA(tl_lqua)
    FROM lqua
    WHERE lgnum =  @vp_lgnum    AND
          lgtyp IN @tl_lgtyp_rg AND
          matnr =  @vp_matnr.
  IF sy-subrc <> 0.

    DATA: tl_tipos_almacen_aprov TYPE  zswm_t_tipos_almacen_aprov.
    CALL FUNCTION 'ZSWM_GET_TIPOS_ALMACEN_APROV'
      EXPORTING
        vp_lgnum               = vp_lgnum
        vp_lgtyp               = vp_lgtyp
        vp_mtart               = wl_mara-mtart
      IMPORTING
        tp_tipos_almacen_aprov = tl_tipos_almacen_aprov.
    READ TABLE tl_tipos_almacen_aprov ASSIGNING FIELD-SYMBOL(<fs_tipos_almacen_aprov>) WITH KEY cla_buscar = 'X'.
    CHECK sy-subrc = 0.


    SELECT lgnum, nltyp AS lgtyp, nlpla AS lgpla
      INTO TABLE @tl_lqua
      FROM ltap
      UP TO 1 ROWS
      WHERE lgnum = @vp_lgnum                       AND
            nltyp = @<fs_tipos_almacen_aprov>-lgtyp AND
            matnr = @vp_matnr
      ORDER BY tanum DESCENDING.
  ENDIF.


  IF tl_lqua IS NOT INITIAL.
    SELECT lagp~lgnum, lagp~lgtyp, t301t~ltypt, lagp~lgpla
      INTO CORRESPONDING FIELDS OF TABLE @tp_ubicaciones
      FROM lagp LEFT OUTER JOIN t301t  ON t301t~lgnum = lagp~lgnum AND
                                          t301t~lgtyp = lagp~lgtyp AND
                                          t301t~spras = @sy-langu
      FOR ALL ENTRIES IN @tl_lqua
      WHERE lagp~lgnum = @tl_lqua-lgnum AND
            lagp~lgtyp = @tl_lqua-lgtyp AND
            lagp~lgpla = @tl_lqua-lgpla.
  ENDIF.

  LOOP AT tp_ubicaciones ASSIGNING FIELD-SYMBOL(<fs_ubicaciones>).
    <fs_ubicaciones>-matnr = wl_mara-matnr.
    <fs_ubicaciones>-maktx = wl_mara-maktx.
  ENDLOOP.



  SORT tp_ubicaciones BY lgpla.


ENDFUNCTION.
