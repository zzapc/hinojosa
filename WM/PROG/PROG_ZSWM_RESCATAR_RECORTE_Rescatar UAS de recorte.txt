*&---------------------------------------------------------------------*
*& Report  ZSWM_RESCATAR_RECORTE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZSWM_RESCATAR_RECORTE.
PARAMETERS: p_lgnum like lein-lgnum OBLIGATORY,
            p_lenum like lein-lenum.
PARAMETERS: p_tanum like ltap-tanum,
            p_tapos like ltap-tapos.
SELECTION-SCREEN SKIP 1.
PARAMETERS:
            p_matnr like lqua-matnr,
            p_maktx like makt-maktx,
            p_charg like lqua-charg,
            p_verme like lqua-verme,
            p_meins like lqua-meins,
            p_bestq like lqua-bestq,
            p_sobkz like lqua-sobkz,
            p_sonum like lqua-sonum,
            p_nltyp like ltap-nltyp,
            p_nlpla like ltap-nlpla.
at SELECTION-SCREEN on p_lenum.
   select SINGLE * into @data(lein) from lein where LENum eq @p_lenum.
     if sy-subrc eq 0.
     MESSAGE e398(00) with text-e01.
     else.

       select * into @data(ltap)
*         lgnum matnr charg VISTM meins bestq sobkz sonum
*      into (p_lgnum, p_matnr, p_charg, p_verme, p_meins, p_bestq, p_sobkz, p_sonum)
         up to  1 rows   from ltap where lgnum eq @p_lgnum and vlenr eq @p_lenum
*                         vlenr eq @lein-lenum
                     and nltyp eq '998'
               order by tanum DESCENDING.
*         descending.
*         select SINGLE maktx into p_maktx from makt where matnr eq p_matnr
*                                                      and spras eq sy-langu.
           p_lgnum = ltap-lgnum.
           p_tanum = ltap-tanum.
           p_tapos = ltap-tapos.
           p_matnr = ltap-matnr.
           p_charg = ltap-charg.
           p_verme = ltap-vistm.
           p_meins = ltap-meins.
           p_bestq = ltap-bestq.
           p_sobkz = ltap-sobkz.
           p_sonum = ltap-sonum.
           p_nltyp = ltap-vltyp.
           p_nlpla = ltap-vlpla.
                    select SINGLE maktx into p_maktx from makt where matnr eq p_matnr
                                                      and spras eq sy-langu.

       ENDSELECT.
     endif.

at SELECTION-SCREEN OUTPUT.
  loop AT SCREEN.
    if screen-name eq 'P_LENUM'.
      if p_lenum is NOT INITIAL.
        screen-input = 0.
      endif.
    elseif screen-name eq 'P_MATNR'
        or screen-name eq 'P_MAKTX'
        or screen-name eq 'P_CHARG'
        or screen-name eq 'P_MEINS'
        or screen-name eq 'P_BESTQ'
        or screen-name eq 'P_SOBKZ'
        or screen-name eq 'P_SONUM'
*        or screen-name eq 'P_LGNUM'
        or screen-name eq 'P_TANUM'
        or screen-name eq 'P_TAPOS'.

      screen-input = 0.
    elseif screen-name eq 'P_VERME'
        or screen-name eq 'P_NLTYP'
        or screen-name eq 'P_NLPLA'.
      if p_lenum is INITIAL.
        screen-input = 0.
      endif.
    endif.
    MODIFY SCREEN.
  ENDLOOP.

  START-OF-SELECTION.
  data ltap type ltap.
  select SINGLE * into ltap from ltap where lgnum eq p_lgnum
                                        and tanum eq p_tanum
                                        and tapos eq p_tapos.
    data ctd like rl03t-anfme.
    data nlenr like ltap-nlenr.
    nlenr = p_lenum.
    ctd = p_verme.
    data tanum like ltap-tanum.
          CALL FUNCTION 'L_TO_CREATE_SINGLE' DESTINATION 'NONE'
          EXPORTING
            i_lgnum               = ltap-lgnum   " Número de almacén
            i_bwlvs               = '999'
*           i_betyp               = 'O'    " Tipo de necesidades
*           i_benum               = is_ltbk-benum    " Número de necesidades
            i_matnr               = ltap-matnr    " Número de material
            i_werks               = ltap-werks    " Centro
            i_lgort               = ltap-lgort
            i_charg               = ltap-charg
            i_bestq               = ltap-bestq    " Diferenciación de stock
            i_sobkz               = ltap-sobkz    " Indicador de stock especial
            i_sonum               = ltap-sonum    " Número de stock especial
            i_letyp               = ltap-letyp    " Tipo de unidad de almacén
            i_anfme               = ctd    " Ctd. solicitada
            i_altme               = p_meins    " Unidad de medida
*           i_wdatu               = INIT_DATUM    " Fecha de entrada mcías.
*           i_vfdat               = INIT_DATUM
*           i_zeugn               = SPACE    " Número de certificado
*           i_lznum               = is_ltbk-lznum    " Número adicional de ref.
            i_squit               = abap_true    " Confirm. inmed.
*           i_nidru               = SPACE    " No imprimir
*           i_drukz               = SPACE    " Ind. de impresión
*           i_ldest               = SPACE    " Impresora
*           i_wempf               = SPACE    " Receptor mercancías
*           i_ablad               = SPACE    " Lugar de descarga
            i_vltyp               = ltap-vltyp    " Tipo de almacén 'desde'       """JCB: Al pasarle la UA no hará falta pasar ubicación origen
            "i_vlber               = ls_lqua-l    " Area de almacenamiento 'desde'
            i_vlpla               = ltap-vlpla    " Ubic. 'desde'                 """JCB: Al pasarle la UA no hará falta pasar ubicación origen
*           i_vppos               = SPACE    " Posición en la ubicación 'desde'
*            i_vlenr               =     " Uni-alm procedencia
*           i_vlqnr               = SPACE    " Cuanto 'desde'
***      i_nltyp               = ls_lqua-lgtyp    " Tipo de almacén 'hacia'
            i_nltyp               = p_nltyp    " Tipo de almacén 'hacia'    JCB: Cambiado por ubicacion destino
*           i_nlber               = SPACE    " Area de almacenamiento 'hacia'
***      i_nlpla               = ls_lqua-lgpla    " Ubic. 'hacia'
            i_nlpla               = p_nlpla   " Ubic. 'hacia'    JCB: Cambiado por ubicacion destino
*           i_nppos               = SPACE    " Posición en la ubicación 'hacia'
            i_nlenr               = nlenr    " Uni.almacén destino
*           i_nlqnr               = SPACE    " Cuanto 'hacia'
*           i_rltyp               = SPACE    " Tipo de almacén de retorno
*           i_rlber               = SPACE    " Area de almacenamiento de retorno
*           i_rlpla               = SPACE    " Ubicación de retorno
*           i_rlqnr               = SPACE    " Cuanto retorno
*           i_update_task         = SPACE
*           i_commit_work         = 'X'
*           i_bname               = SY-UNAME    " Usuario que crea la OT
            i_kompl               = space    " Crear OT aun si no se cubre la cantidad total -> cvivo - Es necesario desmarcarlo porque si se lanza para UMA, si la conversión
            " no cuadra 100%, falla. Es decir, si se pide la OT para 10,012 metros, esa ctd en KG es p.e. 4,5645; como no hay 4 decimales en SAP,
            " hace la OT para la cantidad que sí cuadra, es decir 10,011m p.e.; si no está este parámetro desactivado, no deja descuadrar cantidades
*           i_solex               = 0
*           i_pernr               = 0
*           i_ausfb               = SPACE
*           i_sgt_scat            = SPACE
          IMPORTING
            e_tanum               = tanum   " Número de orden de transporte
*           e_ltap                =     " Posición de orden de transporte
*      TABLES
*           t_ltak                =
*           t_ltap_vb             =
          EXCEPTIONS
            no_to_created         = 1
            bwlvs_wrong           = 2
            betyp_wrong           = 3
            benum_missing         = 4
            betyp_missing         = 5
            foreign_lock          = 6
            vltyp_wrong           = 7
            vlpla_wrong           = 8
            vltyp_missing         = 9
            nltyp_wrong           = 10
            nlpla_wrong           = 11
            nltyp_missing         = 12
            rltyp_wrong           = 13
            rlpla_wrong           = 14
            rltyp_missing         = 15
            squit_forbidden       = 16
            manual_to_forbidden   = 17
            letyp_wrong           = 18
            vlpla_missing         = 19
            nlpla_missing         = 20
            sobkz_wrong           = 21
            sobkz_missing         = 22
            sonum_missing         = 23
            bestq_wrong           = 24
            lgber_wrong           = 25
            xfeld_wrong           = 26
            date_wrong            = 27
            drukz_wrong           = 28
            ldest_wrong           = 29
            update_without_commit = 30
            no_authority          = 31
            material_not_found    = 32
            lenum_wrong           = 33
            error_message         = 34
            OTHERS                = 35.

          if sy-msgid is not INITIAL.
             MESSAGE id sy-msgid TYPE 'I' NUMBER sy-msgno with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          endif.
