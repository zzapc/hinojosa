*&---------------------------------------------------------------------*
*& Report  ZSWM_CREAR_NECESIDAD_PP_WM_PAP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zswm_lista_necesidad_pp_wm_pap.
*TABLES: zsppt_cinumbers.
TABLES :
  zswm_lista_necesidad_pp_wm_pap.
TABLES: caufv.
TABLES: ltbk.
DATA: g_custom_container  TYPE REF TO cl_gui_custom_container.
DATA: or_doc              TYPE REF TO cl_gui_docking_container       .
DATA: gt_fieldcatalog     TYPE lvc_t_fcat.
DATA: gs_layout           TYPE lvc_s_layo.
DATA: alv                 TYPE REF TO cl_gui_alv_grid.
DATA: funciones           TYPE ui_functions.
DATA: variant             LIKE disvariant.
DATA
      t_alv LIKE zswm_lista_necesidad_pp_wm_pap OCCURS 0 WITH HEADER LINE.

INCLUDE zswm_lista_necesidad_pp_wm_cls.
*INCLUDE zswm_crear_necesidad_pp_wm_cls.
DATA: BEGIN OF ls_stable,
        row TYPE c,
        col TYPE c,
      END OF ls_stable.
DATA: l_eventos TYPE REF TO lcl_report.
SELECTION-SCREEN BEGIN OF BLOCK bl1 WITH FRAME TITLE text-bl1.
SELECT-OPTIONS: s_aufnr FOR caufv-aufnr,
                s_werks FOR caufv-werks,
                s_lgnum FOR ltbk-lgnum,
                s_tbnum FOR ltbk-tbnum,
*                s_bwlvs for ltbk-bwlvs,
                s_lgort FOR zswm_lista_necesidad_pp_wm_pap-lgort,
                s_benum FOR zswm_lista_necesidad_pp_wm_pap-benum,
                s_lznum FOR zswm_lista_necesidad_pp_wm_pap-lznum,
                s_statu for zswm_lista_necesidad_pp_wm_pap-statu,
                s_elikz for zswm_lista_necesidad_pp_wm_pap-elikz.
SELECTION-SCREEN END OF BLOCK bl1.
SELECTION-SCREEN BEGIN OF BLOCK bl2 WITH FRAME TITLE text-bl2.
SELECT-OPTIONS: s_bdatu FOR zswm_lista_necesidad_pp_wm_pap-bdatu OBLIGATORY DEFAULT sy-datum,
                s_bzeit FOR zswm_lista_necesidad_pp_wm_pap-bzeit,
                s_pdatu FOR zswm_lista_necesidad_pp_wm_pap-pdatu,
                s_pzeit FOR zswm_lista_necesidad_pp_wm_pap-pzeit.
SELECTION-SCREEN END OF BLOCK bl2.
*PARAMETERS: p_test TYPE flag DEFAULT 'X'.

PARAMETERS:     p_varian TYPE rsvar-variant DEFAULT '/INITIAL'.
INITIALIZATION.
 s_elikz+0(3) = 'INE'.s_elikz-low = 'X'. append s_elikz.

START-OF-SELECTION.
  RANGES: r_rsnum FOR caufv-rsnum,
          r_benum FOR ltbk-benum.
  IF s_aufnr IS NOT INITIAL.
    SELECT rsnum INTO @DATA(rsnum) FROM caufv WHERE aufnr IN @s_aufnr
                                                AND werks IN @s_werks.
      r_rsnum+0(3) = 'IEQ'.
      r_rsnum-low  = rsnum.
      APPEND r_rsnum.
    ENDSELECT.
    IF sy-subrc EQ 0.
      SELECT * INTO TABLE @DATA(tt_alv) FROM zswm_ltbk_bp
                                                    WHERE lgnum IN @s_lgnum
                                                      AND tbnum IN @s_tbnum
                                                      AND rsnum IN @r_rsnum
                                                      AND bwlvs EQ '319'
                                                      AND werks IN @s_werks
                                                      AND lgort IN @s_lgort
                                                      AND benum IN @s_benum
                                                      AND lznum IN @s_lznum
                                                      AND bdatu IN @s_bdatu
                                                      AND bzeit IN @s_bzeit
                                                      AND pdatu IN @s_pdatu
                                                      AND pzeit IN @s_pzeit
                                                      and statu in @s_statu
                                                      and elikz in @s_elikz.

    ENDIF.
    SELECT * INTO TABLE @DATA(tt_ci) FROM zsppt_cinumbers WHERE aufnr IN @s_aufnr
*                                                                and werks in @s_werks
                                                            AND ci_number IN @s_benum.
    SORT tt_ci BY ci_number.
    DELETE ADJACENT DUPLICATES FROM tt_ci COMPARING ci_number.
    LOOP AT tt_ci INTO DATA(rt_ci).
      SELECT * APPENDING CORRESPONDING FIELDS OF TABLE tt_alv FROM zswm_ltbk_bp
                                                    WHERE lgnum IN s_lgnum
                                                      AND tbnum IN s_tbnum
                                                      AND bwlvs EQ '919'
                                                      AND werks IN s_werks
                                                      AND lgort IN s_lgort
                                                      AND benum EQ rt_ci-ci_number
                                                      AND lznum IN s_lznum
                                                      AND bdatu IN s_bdatu
                                                      AND bzeit IN s_bzeit
                                                      AND pdatu IN s_pdatu
                                                      AND pzeit IN s_pzeit
                                                      and statu in s_statu
                                                      and elikz in s_elikz.


    ENDLOOP.
  else.
          SELECT * INTO TABLE tt_alv FROM zswm_ltbk_bp
                                                    WHERE lgnum IN s_lgnum
                                                      AND tbnum IN s_tbnum
*                                                      AND rsnum IN @r_rsnum
                                                      AND ( bwlvs EQ '319' or bwlvs eq '919' )
                                                      AND werks IN s_werks
                                                      AND lgort IN s_lgort
                                                      AND benum IN s_benum
                                                      AND lznum IN s_lznum
                                                      AND bdatu IN s_bdatu
                                                      AND bzeit IN s_bzeit
                                                      AND pdatu IN s_pdatu
                                                      AND pzeit IN s_pzeit
                                                      and statu in s_statu
                                                      and elikz in s_elikz.


  ENDIF.
  loop at tT_alv into data(rT_alv).
      clear t_alv.
      move-CORRESPONDING rt_alv to t_alv.
      select SINGLE maktx into t_alv-maktx from makt where matnr eq t_alv-matnr
                                                       and spras eq sy-langu.
      append t_Alv.
  endloop.
*    select * into TABLE @data(tT_alv) from ZSWM_LTBK_BP
*                                                  where lgnum in @s_lgnum
*                                                    and tbnum in @s_tbnum
**                                                    and bwlvs in @s_bwlvs
*                                                    and werks in @s_werks
*                                                    and lgort in @s_lgort
*                                                    and benum in @s_benum
*                                                    and lznum in @s_lznum
*                                                    and bdatu in @s_bdatu
*                                                    and bzeit in @s_bzeit
*                                                    and pdatu in @s_pdatu
*                                                    and pzeit in @s_pzeit.

  CALL SCREEN 0300.
  INCLUDE zswm_lista_necesidad_pp_wm_prd.
*  INCLUDE zswm_crear_necesidad_pp_wm_prd.

  INCLUDE zswm_lista_necesidad_pp_wm_mod.
*  INCLUDE zswm_crear_necesidad_pp_wm_mod.
