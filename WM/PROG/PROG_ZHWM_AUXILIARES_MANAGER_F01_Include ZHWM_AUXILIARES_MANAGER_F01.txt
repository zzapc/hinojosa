*&---------------------------------------------------------------------*
*&      Form  INITIAL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM initial_data .

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE

  CLEAR: p_lgnum.

****** GET LGTYP

  "TODO: Get from table ZPARAMETROS
  p_lgortc = '1010'.

****** GET LGNUM

  zcl_utils_wm=>s_get_lgnum_4_werks_and_lgort(
    EXPORTING
      i_werks                  = p_werks    " Centro
      i_lgort                  = p_lgortg   " Almacén
    RECEIVING
      e_lgnum                  = p_lgnum    " Núm.almacén/Complejo alm.
    EXCEPTIONS
      no_value                 = 1
      no_lgnum_for_werks_lgort = 2
      others                   = 3
  ).
  IF sy-subrc <> 0.
    MESSAGE text-007 TYPE 'W' DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.

****** GET LGTYP

  "TODO: Get from table ZPARAMETROS
  p_lgtyp = '500'.

ENDFORM.
*&---------------------------------------------------------------------*
*&  Include           ZHWM_AUXILIARES_MANAGER_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  INITIALIZE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM initialize.

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** GET MTART 4 AUX

*  TODO: s_mtart = zcl_mm_material_master=>s_get_mtarts_ramo( setnr =  )

****** SET EDITABLE OFF

  LOOP AT SCREEN.

***** LGORT CONSUMO

    IF ( screen-name EQ 'P_LGORTC' ).
      screen-input = 0.
      MODIFY SCREEN.
    ENDIF.

***** LGNUM

    IF ( screen-name EQ 'P_LGNUM' ).
      screen-input = 0.
      MODIFY SCREEN.
    ENDIF.

***** LGTYP

    IF ( screen-name EQ 'P_LGTYP' ).
      screen-input = 0.
      MODIFY SCREEN.
    ENDIF.

***** MTART

    IF ( screen-name EQ 'S_MTART-LOW' OR screen-name EQ 'S_MTART-HIGH' ).
      screen-input = 0.
      MODIFY SCREEN.
    ENDIF.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  AUTHORITY_CHECKS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM authority_checks .

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

  IF ( zcl_utils_wm=>s_check_auth_lgnum( i_lgnum = p_lgnum i_user = sy-uname ) EQ abap_false ).
    MESSAGE text-003 TYPE 'E'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_SELDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_seldata .

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** CHECKS

***** CHECK 1 --> LGNUM IS FILLED

  IF ( p_lgnum IS INITIAL ).
    MESSAGE text-007 TYPE 'E'.
    LEAVE TO SCREEN 0.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_data .

**********************************************************************
* Parámetros locales
**********************************************************************

  DATA: lo_exception TYPE REF TO zcx_exception.

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** INIT OBJECTS

***** OO AUX MNGR

  IF ( go_aux_mngr IS NOT BOUND ).

    TRY.

      go_aux_mngr = NEW zlcl_auxiliares_mngr( i_werks = p_werks i_lgort_gr = p_lgortg i_lgort_co = p_lgortc ).

    CATCH zcx_exception INTO lo_exception.

      MESSAGE lo_exception->if_t100_message~t100key-attr1 TYPE 'E'.

    ENDTRY.

  ENDIF.

***** RANGES

  MOVE-CORRESPONDING s_matnr[] TO gt_r_matnr[].

  LOOP AT s_charg INTO DATA(ls_r_charg).
    APPEND VALUE #( sign = ls_r_charg-sign option = ls_r_charg-option batch_low = ls_r_charg-low batch_high = ls_r_charg-high ) TO gt_r_charg.
  ENDLOOP.

ENDFORM.
