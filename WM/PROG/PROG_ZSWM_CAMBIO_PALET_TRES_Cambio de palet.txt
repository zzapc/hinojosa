*&---------------------------------------------------------------------*
*& Report  ZSWM_CAMBIO_PALET_DOS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zswm_cambio_palet_tres.

TABLES: zswm_vekp_likp.
DATA t_alv LIKE zswm_cambio_palet_dos OCCURS 0 WITH HEADER LINE.
SELECT-OPTIONS: s_exidv FOR zswm_vekp_likp-exidv,
*                s_lgnum for ZSWM_VEKP_LIKP-lgnum,
                s_vbeln FOR zswm_vekp_likp-vbeln_gen NO INTERVALS,
                s_vbtyp FOR zswm_vekp_likp-vbtyp DEFAULT 'J',
                s_lgnum FOR zswm_vekp_likp-lgnum OBLIGATORY,
                s_wadat FOR zswm_vekp_likp-wadat_ist,
                s_statu FOR zswm_vekp_likp-status,
                s_wbstk FOR zswm_vekp_likp-wbstk.
SELECT-OPTIONS s_vhilm FOR zswm_vekp_likp-vhilm OBLIGATORY NO INTERVALS NO-EXTENSION.
PARAMETERS     p_vhilm like vekp-vhilm OBLIGATORY.
PARAMETERS: p_test TYPE flag DEFAULT 'X'.
at SELECTION-SCREEN.
    check p_vhilm in s_vhilm.
    MESSAGE e398(00) with text-e03.
at SELECTION-SCREEN OUTPUT.
  loop at SCREEN.
    if
*       screen-name cs 'S_STATU' or
       screen-name cs 'S_WBSTK'.
      screen-input = 0.
    endif.
    modify SCREEN.
  endloop.
INITIALIZATION.
  s_wbstk+0(3) = 'IEQ'. s_wbstk-low = 'C'. APPEND s_wbstk.
  s_statu+0(3) = 'INE'. s_statu-low = '0060'. APPEND s_statu.

  CALL FUNCTION 'POPUP_TO_INFORM'
    EXPORTING
      titel         = text-tit
      txt1          = text-tx1
      txt2          = text-tx2
      TXT3          = text-tx3
      TXT4          = text-tx4
            .

START-OF-SELECTION.
  select SINGLE maktx into @data(makt_vhilm) from makt where matnr eq @p_vhilm
                                                         and spras eq @sy-langu.

  SELECT * INTO TABLE @DATA(tt_data) FROM zswm_vekp_likp WHERE exidv   IN @s_exidv
                                                         AND lgnum     IN @s_lgnum
                                                         AND wadat_ist IN @s_wadat
                                                         AND vbeln_gen IN @s_vbeln
                                                         AND status    IN @s_statu
                                                         AND wbstk     IN @s_wbstk
                                                         AND vhilm     IN @s_vhilm.
   if sy-subrc ne 0.
  SELECT * INTO TABLE tt_data FROM zswm_vekp_likp WHERE exidv          IN s_exidv
                                                         AND lgnum     IN s_lgnum
                                                         AND wadat_ist IN s_wadat
                                                         AND vbeln     IN s_vbeln
                                                         AND status    IN s_statu
                                                         AND wbstk     IN s_wbstk
                                                         AND vhilm     IN s_vhilm.
  endif.
  LOOP AT tt_data INTO DATA(rt_data).
    read TABLE t_alv with key venum = rt_data-venum.
    check sy-subrc ne 0.
    SELECT * INTO TABLE @DATA(tt_vepo) FROM vepo WHERE venum EQ @rt_data-venum.
    check sy-subrc eq 0.
    LOOP AT tt_vepo INTO DATA(rt_vepo).
      CLEAR t_alv.

*      CALL FUNCTION 'ZSWM_UI5_GET_VHILM'
*        EXPORTING
*          matnr       = rt_vepo-matnr
*          werks       = rt_vepo-werks
*          charg       = rt_vepo-charg
*          vbtyp       = rt_data-vbtyp
*          txtget      = abap_true
*        IMPORTING
**         ERROR       =
**         TT_LOG      =
*          vhilm       = t_alv-vhilm_new
*          vhilm_maktx = t_alv-vhilm_mak.
      t_alv-vhilm_new = p_vhilm.
      t_alv-vhilm_mak = makt_vhilm.

      CHECK t_alv-vhilm_new NE rt_data-vhilm.
      t_alv-venum = rt_data-venum.
      t_alv-vbeln = rt_data-vbeln_gen.
      t_alv-posnr = rt_data-posnr_gen.
      t_alv-exidv = rt_data-exidv.
      t_alv-vhilm = rt_data-vhilm.
      SELECT SINGLE maktx INTO t_alv-maktx FROM makt WHERE matnr EQ rt_data-vhilm
      AND spras EQ sy-langu.
      t_alv-matnr = rt_vepo-matnr.

      t_alv-charg = rt_vepo-charg.
      t_alv-werks = rt_vepo-werks.
      t_alv-lgort = rt_vepo-lgort.
      APPEND t_alv.


    ENDLOOP.
  ENDLOOP.
  IF p_test NE abap_true.
    LOOP AT t_alv.
      UPDATE lips SET matnr = t_alv-vhilm_new
                      arktx = t_alv-vhilm_mak
                                      WHERE vbeln EQ t_alv-vbeln
                                        AND matnr EQ t_alv-vhilm
                                        AND posnr EQ t_alv-posnr.
      UPDATE vekp SET vhilm = t_alv-vhilm_new
                                      WHERE venum     EQ t_alv-venum
*                                     and vbeln_gen eq t_alv-vbeln
                                        AND vhilm         EQ t_alv-vhilm
                                        AND posnr_gen     EQ t_alv-posnr.

    ENDLOOP.
  ENDIF.
  PERFORM alv TABLES t_alv USING 'ZSWM_CAMBIO_PALET_DOS'.
FORM alv  TABLES   t_alv
    USING    VALUE(p_tabname) LIKE dd03n-tabname.
  IF t_alv IS INITIAL.
    APPEND t_alv.
  ENDIF.
  CALL FUNCTION 'DISPLAY_BASIC_LIST'
    EXPORTING
*     BASIC_LIST_TITLE    =
      file_name           = 'PP'
*     HEAD_LINE1          = ' '
*     HEAD_LINE2          = ' '
*     HEAD_LINE3          = ' '
*     HEAD_LINE4          = ' '
*     FOOT_NOTE1          = ' '
*     FOOT_NOTE2          = ' '
*     FOOT_NOTE3          = ' '
*     LAY_OUT             = 0
*     DYN_PUSHBUTTON_TEXT1       =
*     DYN_PUSHBUTTON_TEXT2       =
*     DYN_PUSHBUTTON_TEXT3       =
*     DYN_PUSHBUTTON_TEXT4       =
*     DYN_PUSHBUTTON_TEXT5       =
*     DYN_PUSHBUTTON_TEXT6       =
      data_structure      = p_tabname
*     CURRENT_REPORT      =
*     LIST_LEVEL          = ' '
*     ADDITIONAL_OPTIONS  = ' '
*     WORD_DOCUMENT       =
*     APPLICATION         =
*     OLDVALUES           = ' '
*     NO_ALV_GRID         =
*     ALV_MARKER          =
*     IMPORTING
*     RETURN_CODE         =
    TABLES
      data_tab            = t_alv
*     FIELDNAME_TAB       =
*     SELECT_TAB          =
*     ERROR_TAB           =
*     RECEIVERS           =
    EXCEPTIONS
      download_problem    = 1
      no_data_tab_entries = 2
      table_mismatch      = 3
      print_problems      = 4
      OTHERS              = 5.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
