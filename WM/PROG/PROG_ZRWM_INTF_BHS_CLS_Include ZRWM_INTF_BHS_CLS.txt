*&---------------------------------------------------------------------*
*&  Include           ZRWM_INTF_BHS_CLS
*&---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*       CLASS lcl_handle_events DEFINITION
*---------------------------------------------------------------------*
* §5.1 define a local class for handling events of cl_salv_table
*---------------------------------------------------------------------*
CLASS lcl_handle_events DEFINITION.
  PUBLIC SECTION.
    METHODS:
      on_link_click FOR EVENT link_click OF cl_salv_events_table
        IMPORTING row column,
      on_user_command FOR EVENT added_function OF cl_salv_events
        IMPORTING e_salv_function.

ENDCLASS.                    "lcl_handle_events DEFINITION

*---------------------------------------------------------------------*
*       CLASS lcl_handle_events IMPLEMENTATION
*---------------------------------------------------------------------*
* §5.2 implement the events for handling the events of cl_salv_table
*---------------------------------------------------------------------*
CLASS lcl_handle_events IMPLEMENTATION.

  METHOD on_link_click.
    DATA: wa LIKE LINE OF gt_data.
    READ TABLE gt_data INTO wa INDEX row.
    IF sy-subrc EQ 0.
      CASE column.
        WHEN 'MATNR'.
          SET PARAMETER ID 'MAT' FIELD wa-matnr.
          CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.
        WHEN 'COD_ETIQUETA'.
          DATA: lv_lenum TYPE lenum.
          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = wa-cod_etiqueta
            IMPORTING
              output = lv_lenum.
          SET PARAMETER ID 'LGN' FIELD p_lgnum. " wa-lgnum.
          SET PARAMETER ID 'LEN' FIELD lv_lenum.
*          CALL TRANSACTION 'LS33' AND SKIP FIRST SCREEN.
          CALL TRANSACTION 'LT27' AND SKIP FIRST SCREEN.
        WHEN 'TANUM'.
          SET PARAMETER ID 'LGN' FIELD p_lgnum. " wa-lgnum.
          SET PARAMETER ID 'TAN' FIELD wa-tanum.
          CALL TRANSACTION 'LT21' AND SKIP FIRST SCREEN.
        WHEN 'TBNUM'.
          SET PARAMETER ID 'LGN' FIELD p_lgnum. " wa-lgnum.
          SET PARAMETER ID 'TBN' FIELD wa-tbnum.
          CALL TRANSACTION 'LB03' AND SKIP FIRST SCREEN.
        WHEN 'MBLNR'.
          SET PARAMETER ID 'MBN' FIELD wa-mblnr.
          SET PARAMETER ID 'MJA' FIELD wa-mjahr.
          CALL TRANSACTION 'MB03' AND SKIP FIRST SCREEN.
        WHEN 'CHARG'.
          SET PARAMETER ID 'MAT' FIELD wa-matnr.
          SET PARAMETER ID 'WRK' FIELD g_werks.
          SET PARAMETER ID 'LAG' FIELD space.
          SET PARAMETER ID 'CHA' FIELD wa-charg.

          SELECT SINGLE @abap_true FROM tvarvc
            WHERE low EQ @sy-uname
              AND name EQ 'ZWM_BHS_LOTE_MMBE'
            INTO @DATA(result).

          IF sy-subrc EQ 0.
            CALL TRANSACTION 'MMBE' AND SKIP FIRST SCREEN.
          ELSE.
            CALL TRANSACTION 'MSC3N' AND SKIP FIRST SCREEN.
          ENDIF.
        WHEN 'UA_PRODUCIDA'.
          SET PARAMETER ID 'LEN' FIELD wa-ua_producida.
          CALL TRANSACTION 'LS27' AND SKIP FIRST SCREEN.

        WHEN OTHERS.

      ENDCASE.

    ENDIF.
  ENDMETHOD.                    "on_single_click


  METHOD on_user_command.
    DATA: lo_selections TYPE REF TO cl_salv_selections,
          lt_rows       TYPE salv_t_row,
          ls_rows       LIKE LINE OF lt_rows,
          ls_alv        TYPE zwm_intf_bhs,
          lv_answer(1),
          lv_error      TYPE abap_bool,
          lv_lenum      TYPE lenum.
    DATA l_text TYPE char20.

    lo_selections = go_table->get_selections( ).
    lt_rows = lo_selections->get_selected_rows( ).
    CASE e_salv_function.
      WHEN 'ACTUALIZAR'.
        PERFORM f_get_data.

        go_table->refresh( refresh_mode = if_salv_c_refresh=>full ).

      WHEN 'PROCESADO'.
        IF lt_rows[] IS NOT INITIAL.
*          CALL FUNCTION 'POPUP_TO_CONFIRM'
*            EXPORTING
*              titlebar              = text-s05
*              text_question         = text-s07
*              text_button_1         = 'Yes'
*              text_button_2         = 'No'
*              display_cancel_button = 'X'
*            IMPORTING
*              answer                = lv_answer.

*          IF lv_answer EQ '1' .

          LOOP AT lt_rows INTO ls_rows.
            READ TABLE gt_data INTO ls_alv INDEX ls_rows.
            IF sy-subrc EQ 0.
              IF ls_alv-procesado IS INITIAL.
*                Marcar como procesado
                ls_alv-procesado = abap_true.
*                Informar modificación en monitor - cvivo 57939
                CONCATENATE 'Marcado como procesado a las' sy-uzeit 'día' sy-datum 'por' sy-uname INTO ls_alv-message SEPARATED BY space.
                MODIFY gt_data FROM ls_alv INDEX ls_rows.
                UPDATE zwm_intf_bhs SET procesado = ls_alv-procesado
                                        message = ls_alv-message WHERE id = ls_alv-id AND
                                                                       fecha = ls_alv-fecha AND
                                                                       hora = ls_alv-hora AND
                                                                       pos_fich = ls_alv-pos_fich.
              ELSE.
*                 Marcar como no procesado
                IF ls_alv-mblnr IS INITIAL AND ls_alv-mjahr IS INITIAL.
                  CLEAR ls_alv-procesado .
*                Informar modificación en monitor - cvivo 57939
                  CONCATENATE 'Marcado como no procesado a las' sy-uzeit 'día' sy-datum 'por' sy-uname INTO ls_alv-message SEPARATED BY space.
                  MODIFY gt_data FROM ls_alv INDEX ls_rows.
                  UPDATE zwm_intf_bhs SET procesado = ls_alv-procesado
                                          message = ls_alv-message WHERE id = ls_alv-id AND
                                                                         fecha = ls_alv-fecha AND
                                                                         hora = ls_alv-hora AND
                                                                         pos_fich = ls_alv-pos_fich.
                ELSE.
*                   error marcar como no procesado cuando hay documentos de material
                  MESSAGE text-e02 TYPE 'S' DISPLAY LIKE 'E'.
                ENDIF.
              ENDIF.
            ENDIF.
          ENDLOOP.

          go_table->refresh( ).
          CALL METHOD cl_gui_cfw=>set_new_ok_code "raise PAI for
            EXPORTING
              new_code = 'OK'.

          CALL METHOD cl_gui_cfw=>flush.
*          ENDIF.
        ENDIF.
      WHEN 'REPROC'.

        IF lt_rows[] IS NOT INITIAL.

*          CALL FUNCTION 'POPUP_TO_CONFIRM'
*            EXPORTING
*              titlebar              = text-s05
*              text_question         = text-s06
*              text_button_1         = 'Yes'
*              text_button_2         = 'No'
*              display_cancel_button = 'X'
*            IMPORTING
*              answer                = lv_answer.

*          IF lv_answer EQ '1' .

          LOOP AT lt_rows INTO ls_rows.
            READ TABLE gt_data INTO ls_alv INDEX ls_rows.

            IF sy-subrc EQ 0.
              IF ls_alv-procesado IS INITIAL.
                " ini - cvivo - 57924 Reprocesar recalcula diámetro si lo hay
                PERFORM f_dame_valores CHANGING ls_alv.

                MODIFY gt_data FROM ls_alv INDEX ls_rows.

                UPDATE zwm_intf_bhs SET cod_etiqueta = ls_alv-cod_etiqueta
                                        matnr = ls_alv-matnr
                                        charg = ls_alv-charg
                                        stock_sap = ls_alv-stock_sap
                                        stock_sap_kg = ls_alv-stock_sap_kg
                                        cant_dif = ls_alv-cant_dif
                                        cant_dif_kg = ls_alv-cant_dif_kg
                                        cant_consumo = ls_alv-cant_consumo
                                        cant_consumo_kg = ls_alv-cant_consumo_kg
                                        metros_restantes = ls_alv-metros_restantes
                                        message = ls_alv-message
                                        WHERE id = ls_alv-id AND
                                              fecha = ls_alv-fecha AND
                                              hora = ls_alv-hora AND
                                              pos_fich = ls_alv-pos_fich.

                COMMIT WORK AND WAIT.
                " fin - cvivo - 57924 Reprocesar recalcula diámetro si lo hay

*APC20240918 Los movientos 261 se tratan de otra forma
                IF ls_alv-bwart = '261'.
                  PERFORM f_reprocesa_linea_261 CHANGING ls_alv.
                ELSE.
                  PERFORM f_reprocesa_linea CHANGING ls_alv.
                ENDIF.
                MODIFY gt_data FROM ls_alv INDEX ls_rows.

                IF ls_alv-mblnr IS INITIAL.
                  IF ls_alv-message IS INITIAL. " cvivo - 57939 Si no hay doc.mat. ni mensaje, informamos nuestro mensaje
                    ls_alv-message = 'No se ha podido contabilizar doc.material de consumo, el registro permanece pendiente de procesar'.
                  ENDIF.

                  UPDATE zwm_intf_bhs SET message = ls_alv-message
                                          procesado = space " cvivo - 57939 Si no hay doc.mat. no marcamos nunca procesado
                                          cod_etiqueta = ls_alv-cod_etiqueta
                                          matnr = ls_alv-matnr
                                          charg = ls_alv-charg
                                          tolerancia = ls_alv-tolerancia
                                          WHERE id = ls_alv-id AND
                                                fecha = ls_alv-fecha AND
                                                hora = ls_alv-hora AND
                                                pos_fich = ls_alv-pos_fich.
                ELSE.
                  UPDATE zwm_intf_bhs SET message = ls_alv-message
                                          procesado = ls_alv-procesado
                                          contabilizado = ls_alv-contabilizado
                                          mblnr = ls_alv-mblnr
                                          mjahr = ls_alv-mjahr
                                          tbnum = ls_alv-tbnum
                                          tanum = ls_alv-tanum
                                          cod_etiqueta = ls_alv-cod_etiqueta
                                          matnr = ls_alv-matnr
                                          charg = ls_alv-charg
                                          tolerancia = ls_alv-tolerancia
                                          WHERE id = ls_alv-id AND
                                                fecha = ls_alv-fecha AND
                                                hora = ls_alv-hora AND
                                                pos_fich = ls_alv-pos_fich.
                ENDIF.
              ELSE.
                MESSAGE text-e03 TYPE 'S' DISPLAY LIKE 'E'.
              ENDIF.
            ENDIF.
          ENDLOOP.

          go_table->refresh( ).
          CALL METHOD cl_gui_cfw=>set_new_ok_code "raise PAI for
            EXPORTING
              new_code = 'OK'.

          CALL METHOD cl_gui_cfw=>flush.
*          ENDIF.

        ENDIF.

      WHEN 'CAMBIO_UA'.

        CLEAR: lv_lenum, lv_error.
        LOOP AT lt_rows INTO ls_rows.

          READ TABLE gt_data INTO ls_alv INDEX ls_rows.
          IF sy-subrc EQ 0.

            IF ls_alv-procesado IS INITIAL.
              PERFORM f_popup_get_lenum CHANGING lv_lenum lv_error.

              IF lv_error IS INITIAL.
                ls_alv-cod_etiqueta = lv_lenum.
                PERFORM f_dame_valores CHANGING ls_alv.

                MODIFY gt_data FROM ls_alv INDEX ls_rows.
                UPDATE zwm_intf_bhs SET cod_etiqueta = ls_alv-cod_etiqueta
                                        matnr = ls_alv-matnr
                                        charg = ls_alv-charg
                                        stock_sap = ls_alv-stock_sap
                                        stock_sap_kg = ls_alv-stock_sap_kg
                                        cant_dif = ls_alv-cant_dif
                                        cant_dif_kg = ls_alv-cant_dif_kg
                                        cant_consumo = ls_alv-cant_consumo
                                        cant_consumo_kg = ls_alv-cant_consumo_kg
                                        metros_restantes = ls_alv-metros_restantes
                                        message = ls_alv-message
*                                        procesado = ls_alv-procesado " cvivo - 57939 No marcamos procesado en cambio de UA
                                                                WHERE id = ls_alv-id AND
                                                                       fecha = ls_alv-fecha AND
                                                                       hora = ls_alv-hora AND
                                                                       pos_fich = ls_alv-pos_fich.
                go_table->refresh( ).
                CALL METHOD cl_gui_cfw=>set_new_ok_code "raise PAI for
                  EXPORTING
                    new_code = 'OK'.
                CALL METHOD cl_gui_cfw=>flush.
              ELSE.
                MESSAGE text-e04 TYPE 'S' DISPLAY LIKE 'E'.
              ENDIF.
            ELSE.
              MESSAGE text-e03 TYPE 'S' DISPLAY LIKE 'E'.
            ENDIF.
          ENDIF.
        ENDLOOP.
      WHEN 'MANUAL'. " cvivo - 58678

        SELECT DISTINCT werks FROM t320 JOIN zparametros ON zparametros~valor = t320~werks
                                                        AND zparametros~clave = 'BHS'
                                                        AND zparametros~campo = 'CENTRO'
          INTO TABLE @DATA(i_werks)
         WHERE lgnum = @p_lgnum.
        IF sy-subrc = 0.
          CALL TRANSACTION 'ZWMCONS0001'.
        ELSE.
          CALL TRANSACTION 'ZWM2047'.
        ENDIF.

        "actualizamos
        PERFORM f_get_data.
        go_table->refresh( refresh_mode = if_salv_c_refresh=>full ).

      WHEN OTHERS.

    ENDCASE.
  ENDMETHOD.                    "on_user_command
ENDCLASS.
