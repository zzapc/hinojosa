*&---------------------------------------------------------------------*
*& Report  ZSWM_UTILIDADES1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zswm_utilidades1.
TABLES: ltbk.
INCLUDE zswm_macro.
DATA t_alv LIKE ltbk OCCURS 0 WITH HEADER LINE.
PARAMETERS: p_lgnum LIKE ltak-lgnum OBLIGATORY.
SELECT-OPTIONS: s_tbnum FOR ltbk-tbnum OBLIGATORY,
                s_statu FOR ltbk-statu,
                s_benum FOR ltbk-benum,
                s_bdatu FOR ltbk-bdatu,
                s_bwlvs FOR ltbk-bwlvs.
PARAMETERS: r_del RADIOBUTTON GROUP rd1,
            r_fin RADIOBUTTON GROUP rd1.
PARAMETERS: p_test TYPE flag DEFAULT 'X'.
PARAMETERS: p_modo TYPE c OBLIGATORY DEFAULT 'N'.

INITIALIZATION.
  s_statu+0(3) = 'INE'. s_statu-low = 'E'. APPEND s_statu.

START-OF-SELECTION.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE t_alv FROM ltbk WHERE lgnum EQ p_lgnum
  AND tbnum IN s_tbnum
  AND statu IN s_statu
  AND benum IN s_benum
  AND bdatu IN s_bdatu
  AND bwlvs IN s_bwlvs.
  IF p_test NE abap_true.
    LOOP AT t_alv.
      CLEAR t_bdc[].
      dynpro 'SAPML02B' '0100'.
      campo  'LTBK-LGNUM' t_alv-lgnum.
      campo  'LTBK-TBNUM' t_alv-tbnum.
      boton  '/00'
      .
      dynpro 'SAPML02B' '1103'.
          boton  '=AK'.

      CASE abap_true.
        WHEN r_fin.
          dynpro 'SAPML02B' '0104'.
          boton  '=ELI'.
          dynpro 'SAPML02B' '0104'.
          boton  '=BU'.
        WHEN r_del.
          dynpro 'SAPML02B' '0104'.
          boton  '=DLK'.
          dynpro 'SAPLSPO1' '0400'.
          boton  '=YES'.
      ENDCASE.
*      dynpro 'SAPML02B' '1103'.
*      boton  '=BU'.
      DATA t_coll LIKE bdcmsgcoll OCCURS 0 WITH HEADER LINE.
      DATA t_mens LIKE bapiret2   OCCURS 0 WITH HEADER LINE.
      CLEAR t_coll[].
      CLEAR t_mens[].
      CALL TRANSACTION 'LB02' USING t_bdc MODE p_modo MESSAGES INTO t_coll.
      CHECK t_coll[] IS NOT INITIAL.
      CALL FUNCTION 'CONVERT_BDCMSGCOLL_TO_BAPIRET2'
        TABLES
          imt_bdcmsgcoll = t_coll
          ext_return     = t_mens.

    ENDLOOP.
  ENDIF.
  PERFORM alv TABLES t_alv USING 'LTBK'.
*&---------------------------------------------------------------------*
*&      Form  ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_ALV  text
*      -->P_0071   text
*----------------------------------------------------------------------*
FORM alv  TABLES   t_alv
          USING    VALUE(p_tabname) LIKE dd03n-tabname.
  IF t_alv IS INITIAL.
    APPEND t_alv.
  ENDIF.
  CALL FUNCTION 'DISPLAY_BASIC_LIST'
    EXPORTING
*     BASIC_LIST_TITLE    =
      file_name           = 'PP'
*     HEAD_LINE1          = ' '
*     HEAD_LINE2          = ' '
*     HEAD_LINE3          = ' '
*     HEAD_LINE4          = ' '
*     FOOT_NOTE1          = ' '
*     FOOT_NOTE2          = ' '
*     FOOT_NOTE3          = ' '
*     LAY_OUT             = 0
*     DYN_PUSHBUTTON_TEXT1       =
*     DYN_PUSHBUTTON_TEXT2       =
*     DYN_PUSHBUTTON_TEXT3       =
*     DYN_PUSHBUTTON_TEXT4       =
*     DYN_PUSHBUTTON_TEXT5       =
*     DYN_PUSHBUTTON_TEXT6       =
      data_structure      = p_tabname
*     CURRENT_REPORT      =
*     LIST_LEVEL          = ' '
*     ADDITIONAL_OPTIONS  = ' '
*     WORD_DOCUMENT       =
*     APPLICATION         =
*     OLDVALUES           = ' '
*     NO_ALV_GRID         =
*     ALV_MARKER          =
*     IMPORTING
*     RETURN_CODE         =
    TABLES
      data_tab            = t_alv
*     FIELDNAME_TAB       =
*     SELECT_TAB          =
*     ERROR_TAB           =
*     RECEIVERS           =
    EXCEPTIONS
      download_problem    = 1
      no_data_tab_entries = 2
      table_mismatch      = 3
      print_problems      = 4
      OTHERS              = 5.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
