*----------------------------------------------------------------------*
***INCLUDE ZWM_RESUMEN_STOCKS_F01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_data .

  AUTHORITY-CHECK OBJECT 'M_MATE_LGN'
    FOR USER sy-uname ID 'LGNUM' FIELD p_lgnum.

    IF ( sy-subrc <> 0 ).
      MESSAGE text-003 TYPE 'E'.
    ENDIF.


   SELECT a~matnr, a~matkl, a~zzgramaje, a~zzancho, COUNT(*), SUM( b~verme ), b~meins
    FROM mara AS a INNER JOIN lqua AS b
      ON a~matnr EQ b~matnr
    INTO ( @gs_data-matnr, @gs_data-matkl, @gs_data-zzgramaje, @gs_data-zzancho, @gs_data-contador, @gs_data-verme, @gs_data-meins )
   WHERE a~matnr IN @s_matnr
     AND a~mtart EQ 'ZPAP'
     AND a~matkl IN @s_matkl
     AND a~zzgramaje IN @s_grama
     AND a~zzancho IN @s_ancho
     AND b~lgnum EQ @p_lgnum
     AND b~lgtyp BETWEEN '020' AND '029'
   GROUP BY a~matkl, a~zzgramaje, a~zzancho, a~matnr, b~meins
   ORDER BY a~matkl, a~zzgramaje, a~zzancho.

     SELECT SINGLE wgbez
       FROM t023t
       INTO gs_data-wgbez
      WHERE spras EQ 'S'
        AND matkl EQ gs_data-matkl.

     COLLECT gs_data INTO gt_data.

   ENDSELECT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_COLUMNS_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_columns_alv .


  DATA lr_columns       TYPE REF TO cl_salv_columns_table.
  DATA lr_column        TYPE REF TO cl_salv_column_table.

* Set columns options
  lr_columns = gr_table->get_columns( ).
  lr_columns->set_optimize( abap_true ).

*  TRY.
*      lr_column ?= lr_columns->get_column( 'MATKL' ).
*      lr_column->set_long_text( CONV #( text-c01 ) ).
*      lr_column->set_medium_text( CONV #( text-c01 ) ).
*      lr_column->set_short_text( CONV #( text-c01 ) ).
*      lr_column->set_tooltip( CONV #( text-c01 ) ).
*      lr_column->set_edit_mask( space ).
*      lr_column->set_optimized( ).
*  CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
*  ENDTRY.
*
*  TRY.
*      lr_column ?= lr_columns->get_column( 'WGBEZ' ).
*      lr_column->set_long_text( CONV #( text-c02 ) ).
*      lr_column->set_medium_text( CONV #( text-c02 ) ).
*      lr_column->set_short_text( CONV #( text-c02 ) ).
*      lr_column->set_tooltip( CONV #( text-c02 ) ).
*      lr_column->set_edit_mask( space ).
*      lr_column->set_optimized( ).
*  CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
*  ENDTRY.

  TRY.
      lr_column ?= lr_columns->get_column( 'CONTADOR' ).
      lr_column->set_long_text( CONV #( text-c03 ) ).
      lr_column->set_medium_text( CONV #( text-c03 ) ).
      lr_column->set_short_text( CONV #( text-c03 ) ).
      lr_column->set_tooltip( CONV #( text-c03 ) ).
      lr_column->set_edit_mask( space ).
      lr_column->set_optimized( ).
  CATCH cx_salv_not_found cx_salv_data_error.         "#EC NO_HANDLER
  ENDTRY.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SHOW_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM show_alv .

  DATA lr_functions     TYPE REF TO cl_salv_functions_list.
  DATA lr_display       TYPE REF TO cl_salv_display_settings.
  DATA lr_layout        TYPE REF TO cl_salv_layout.
  DATA ls_key           TYPE salv_s_layout_key.
  DATA lr_selections    TYPE REF TO cl_salv_selections.
  DATA lr_events        TYPE REF TO cl_salv_events_table.
  DATA lr_event_handler TYPE REF TO lcl_event_handler.

  TRY.

    cl_salv_table=>factory(
      IMPORTING
        r_salv_table = gr_table
      CHANGING
        t_table      = gt_data ).

  CATCH cx_salv_msg.                                  "#EC NO_HANDLER

  ENDTRY.

  gr_table->set_screen_status(
    report        = sy-repid
    pfstatus      = space
    set_functions = gr_table->c_functions_all ).

* Functions
  lr_functions = gr_table->get_functions( ).

* Activate ALV generic Functions
  lr_functions->set_all( abap_true ).

* Display settings
  lr_display = gr_table->get_display_settings( ).
  lr_display->set_striped_pattern( cl_salv_display_settings=>true ).

* Layout settings
  lr_layout = gr_table->get_layout( ).
  ls_key-report = sy-repid.
  lr_layout->set_key( ls_key ).
  lr_layout->set_default( abap_true ).
  lr_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).

* Selections
  lr_selections = gr_table->get_selections( ).
  lr_selections->set_selection_mode( if_salv_c_selection_mode=>none ).

  PERFORM set_columns_alv.

*  Events
  lr_events = gr_table->get_event( ).

  CREATE OBJECT lr_event_handler.
  SET HANDLER lr_event_handler->on_link_click   FOR lr_events.

  gr_table->display( ).

ENDFORM.
