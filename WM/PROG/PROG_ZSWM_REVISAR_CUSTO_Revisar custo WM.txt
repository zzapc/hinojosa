*&---------------------------------------------------------------------*
*& Report  ZSWM_REVISAR_CUSTO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zswm_revisar_custo.
CONSTANTS: c_comillas VALUE ''''.
TABLES: dd02l,
        dd03n,
        t331,
        RFCDES.

*FIELD-SYMBOLS : <lt_outtab> TYPE ANY TABLE,
**                <ls_outtab> TYPE ANY,
*                <l_fld>     TYPE any.
*DATA: lt_where    TYPE TABLE OF edpline,
*      lt_sel_list TYPE TABLE OF edpline,
*      l_wa_name   TYPE string,
*      ls_where    TYPE edpline,
*      l_having    TYPE string,
*      dref        TYPE REF TO data,
*      itab_type   TYPE REF TO cl_abap_tabledescr,
*      struct_type TYPE REF TO cl_abap_structdescr,
*      elem_type   TYPE REF TO cl_abap_elemdescr,
*      comp_tab    TYPE cl_abap_structdescr=>component_table,
*      comp_fld    TYPE cl_abap_structdescr=>component.
*DATA: rr_lgnum TYPE shp_lgnum_range_t,
*      rt_lgnum TYPE shp_lgnum_range.

SELECT-OPTIONS: s_tabnam FOR dd02l-tabname,
                s_tabcla FOR dd02l-tabclass OBLIGATORY DEFAULT 'TRANSP' NO INTERVALS NO-EXTENSION.
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS: s_fieldn FOR dd03n-fieldname OBLIGATORY DEFAULT 'LGNUM' NO INTERVALS NO-EXTENSION,
                s_keyfla FOR dd03n-keyflag   OBLIGATORY DEFAULT abap_true NO INTERVALS NO-EXTENSION.
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS: s_lgnum FOR t331-lgnum OBLIGATORY.
PARAMETERS: p_rfc like RFCDES-RFCDEST OBLIGATORY.
INITIALIZATION.
  s_lgnum+0(3) = 'IEQ'.
  s_lgnum-low  = '201'.
  APPEND s_lgnum.
  s_lgnum-low  = '203'.
  APPEND s_lgnum.

START-OF-SELECTION.
*  rt_lgnum = s_lgnum.
*  APPEND rt_lgnum TO rr_lgnum.
  SELECT * INTO TABLE @DATA(tt_tabname) FROM dd02l WHERE tabname  IN @s_tabnam
                                                     AND tabclass IN @s_tabcla.
  SORT tt_tabname BY tabname.
  DELETE ADJACENT DUPLICATES FROM tt_tabname COMPARING tabname.
  LOOP AT tt_tabname INTO DATA(rt_tabname).
    DATA(sw_tabix) = sy-tabix.
    SELECT SINGLE COUNT( * ) FROM dd03n WHERE tabname   EQ rt_tabname-tabname
                                          AND fieldname IN s_fieldn
    AND keyflag   IN s_keyfla.
    CHECK sy-subrc NE 0.
    DELETE tt_tabname INDEX sw_tabix.
  ENDLOOP.
  DATA: options LIKE  rfc_db_opt OCCURS 0 WITH HEADER LINE.
  CLEAR: options[]. ", FIELDS[], DATA[], OPTIONS.
  LOOP AT s_lgnum.
    IF sy-tabix EQ 1.
      CONCATENATE 'LGNUM EQ@' c_comillas s_lgnum-low c_comillas INTO options.
    ELSE.
      CONCATENATE options '@OR LGNUM EQ@' c_comillas  s_lgnum-low c_comillas INTO options.

    ENDIF.
  ENDLOOP.
  WHILE sy-subrc EQ 0.
    REPLACE '@' WITH space INTO options.
  ENDWHILE.
  APPEND options.

  LOOP AT tt_tabname INTO rt_tabname.
    DATA: "OPTIONS LIKE  RFC_DB_OPT OCCURS 0 WITH HEADER LINE,
      fields LIKE  rfc_db_fld OCCURS 0 WITH HEADER LINE,
      data1  LIKE  tab512     OCCURS 0 WITH HEADER LINE,
      data2  like  tab512     occurs 0 WITH HEADER LINE.
    CLEAR: fields[], data1[], data2[], options.
    select * into TABLE @datA(tT_dd03n) from dd03n where tabname eq @rt_tabname-tabname
                              ORDER BY position.
    data: offset like fields-OFFSET,
          separa like fields-offset.
    OFFSET =
    separa = 0.

    loop at tT_dd03n into data(rt_dd03n).
      clear fields.
      fields-FIELDNAME  = rt_dd03n-fieldname.
      fields-OFFSET     = OFFSET.
      fields-LENGTH     = rt_dd03n-LENG.
      fields-TYPE       = rt_dd03n-inttype.
      if ( OFFSET + rt_dd03n-OUTPUTLEN + separa ) >= 510.
         exit.
      endif.
*      fields-FIELDTEXT
      append fields.
      add rt_dd03n-OUTPUTLEN to OFFSET.
      add 1 to separa.
    endloop.
    CALL FUNCTION 'RFC_READ_TABLE'
      EXPORTING
        query_table          = rt_tabname-tabname
        delimiter            = '|'
*       NO_DATA              = ' '
        ROWSKIPS             = 10
*       ROWCOUNT             = 0
      TABLES
        options              = options
        fields               = fields
        data                 = data1
      EXCEPTIONS
        table_not_available  = 1
        table_without_data   = 2
        option_not_valid     = 3
        field_not_valid      = 4
        not_authorized       = 5
        data_buffer_exceeded = 6
        OTHERS               = 7.

    CALL FUNCTION 'RFC_READ_TABLE' DESTINATION p_rfc
      EXPORTING
        query_table          = rt_tabname-tabname
        delimiter            = '|'
*       NO_DATA              = ' '
       ROWSKIPS             = 10
*       ROWCOUNT             = 0
      TABLES
        options              = options
        fields               = fields
        data                 = data2
      EXCEPTIONS
        table_not_available  = 1
        table_without_data   = 2
        option_not_valid     = 3
        field_not_valid      = 4
        not_authorized       = 5
        data_buffer_exceeded = 6
        OTHERS               = 7.
      if data1[] ne data2[].
         describe TABLE data1 lines data(n_reg1).
         describe TABLE data2 lines data(n_reg2).

         write:/ 'Tabla: ', rt_tabname-tabname, 'NO OK', n_reg1, n_reg2.
         loop at data1.
           data(sw_tabix_1) = sy-tabix.
            read TABLE data2 with key wa = data1-wa.
            check sy-subrc eq 0.
            data(sw_tabix_2) = sy-tabix.
            delete data1 index sw_tabix_1.
            delete data2 index sw_tabix_2.
         endloop.
         loop at data1.
           write:/ 'ORIGEN :', data1-wa.
         endloop.
         loop at data2.
           write:/ 'DESTINO:', data2-wa.
         endloop.

      endif.

  ENDLOOP.
