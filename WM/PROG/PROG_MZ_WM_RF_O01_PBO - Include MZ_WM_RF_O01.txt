*&---------------------------------------------------------------------*
*&  Include           MZ_WM_RF_O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0010  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0010 OUTPUT.
  SET PF-STATUS '0010'.
  g_process = text-001.
*  SET TITLEBAR 'xxx'.
  CLEAR gs_vttk.
* listamos los transportes pendientes
  PERFORM listar_pendientes.
  g_local_previous_screen = sy-dynnr.
** KYVOR(AG) - 28.07.2019 - INI
  IF g_no_transporte IS NOT INITIAL.
    PERFORM next_process_from_list.
  ELSE.
** KYVOR(AG) - 28.07.2019 - FIM

    CALL SCREEN 9997.

** KYVOR(AG) - 28.07.2019 - INI
  ENDIF.
** KYVOR(AG) - 28.07.2019 - FIM

  LEAVE TO SCREEN 0.
ENDMODULE.
MODULE status_0050 OUTPUT.
  SET PF-STATUS '0010'.
  g_process = text-007.
*  SET TITLEBAR 'xxx'.
* listamos los transportes pendientes
  PERFORM listar_necesidades_pendientes.

  g_local_previous_screen = sy-dynnr.

  CALL SCREEN 9997.

  LEAVE TO SCREEN 0.
ENDMODULE.

MODULE status_0042 OUTPUT.
  SET PF-STATUS '0010'.
  g_process = text-006.
  PERFORM listar_inv_pendientes.
ENDMODULE.
MODULE status_0011 OUTPUT.
  REFRESH: gr_dlv_inb, gt_dlv_multi. " cvivo - 56911
  CLEAR gs_likp-vbeln. " cvivo - 56911
  oo_descarga->refresh( ).

  SET PF-STATUS '0020'.
  CLEAR gs_ekko-ebeln.
  g_previous_screen = sy-dynnr.

  g_process = 'Descarga de papeleras grupo'.
  SET TITLEBAR 'DIN' WITH g_process.
*  g_process = text-001.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
MODULE status_0012 OUTPUT.
  SET PF-STATUS '0012'.
  CLEAR g_bobina.
  g_previous_screen = sy-dynnr.

  g_process = 'Descarga de papeleras grupo'.
  SET TITLEBAR 'DIN' WITH g_process.
*  SET TITLEBAR 'xxx'.
  gs_dlv-lgmng = trunc( gs_dlv-lgmng ).

** KYVOR(AG) - INI - 28.07.2019 - Quitar la funcionalidad del botón Grabar,
** al leer la ubicación destino ya debe de hacerse la OT.
** Ahora lo hace cuando se da a a grabar.
  oo_descarga->check_funcionalidad( EXPORTING func = 'NO_TRANSPORTE' EXCEPTIONS inactive = 1 ).
  IF sy-subrc = 0.
    LOOP AT SCREEN.
      IF screen-name CS 'SAVE' OR screen-name CS 'B_ALBARAN'.
        screen-input = 0.
        screen-invisible = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ENDIF.
** KYVOR(AG) - FIM - 28.07.2019

  oo_descarga->check_funcionalidad( EXPORTING func = 'NO_BOTON_FIN_ALBARAN' EXCEPTIONS inactive = 1 ).
  IF sy-subrc = 0.
    LOOP AT SCREEN.
      IF screen-name CS 'B_ALBARAN'.
        screen-input = 0.
        screen-invisible = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ENDIF.


ENDMODULE.
MODULE status_0013 OUTPUT.
  SET PF-STATUS '0020'.
  CLEAR gs_ekko-ebeln.
  g_previous_screen = sy-dynnr.

  IF sy-tcode EQ 'ZWM_RF_009'.
    g_process = 'Descarga con reetiquetaje'.
  ELSE.
    g_process = 'Descarga sin reetiquetaje'.
  ENDIF.
  SET TITLEBAR 'DIN' WITH g_process.
*  g_process = text-001.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
MODULE status_0014 OUTPUT.
  SET PF-STATUS '0016'.

  g_previous_screen = sy-dynnr.
  IF sy-tcode = 'ZWM_RF_009'. " descarga SAICA.
    g_process = text-008.
  ELSE.
    g_process = text-002.
  ENDIF.
  SET TITLEBAR 'DIN' WITH g_process.
ENDMODULE.
MODULE status_0015 OUTPUT.
  SET PF-STATUS '0020'.
  CLEAR gs_ekko-ebeln.
  g_previous_screen = sy-dynnr.

  g_process = 'Descarga de puerto/exterior'.
  SET TITLEBAR 'DIN' WITH g_process.
*  g_process = text-001.
*  SET TITLEBAR 'xxx'.

ENDMODULE.
MODULE status_0073 OUTPUT.
  SET PF-STATUS '0020'.
  CLEAR gs_likp-verur.
*  g_previous_screen = sy-dynnr.

*  g_process = text-001.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
MODULE status_0074 OUTPUT.
  SET PF-STATUS '0020'.
  CLEAR gs_oper.
*  g_previous_screen = sy-dynnr.

*  g_process = text-001.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
MODULE status_0075 OUTPUT.
  SET PF-STATUS '0020'.
  CLEAR: gs_prl_log-respuesta, g_texto1, g_texto2, g_texto3, gs_prl.

  IMPORT p1 = g_texto1 FROM MEMORY ID 'TEXTO1_PRL'.
  IMPORT p1 = g_texto2 FROM MEMORY ID 'TEXTO2_PRL'.
  IMPORT p1 = g_texto3 FROM MEMORY ID 'TEXTO3_PRL'.
  IMPORT p1 = gs_prl FROM MEMORY ID 'ZWM_RF_PRL'.

  LOOP AT SCREEN.
    CASE gs_prl-tipo.
      WHEN '1'. " Sí/no
        IF screen-name EQ 'GS_PRL_LOG-RESPUESTA' OR screen-name EQ 'GS_PRL_LOG-OBSERVACION'.
          screen-active = 0.
        ELSEIF screen-name EQ 'NOK'.
          screen-active = 1.
        ENDIF.
      WHEN '2'. " Texto a rellenar
        IF screen-name EQ 'GS_PRL_LOG-RESPUESTA'.
          screen-active = 1.
        ELSEIF screen-name EQ 'NOK' OR screen-name EQ 'GS_PRL_LOG-OBSERVACION'.
          screen-active = 0.
        ENDIF.
      WHEN '3'. " Observación
        IF screen-name EQ 'GS_PRL_LOG-RESPUESTA' OR screen-name EQ 'NOK'.
          screen-active = 0.
        ELSEIF screen-name EQ 'GS_PRL_LOG-OBSERVACION'.
          screen-active = 1.
        ENDIF.
    ENDCASE.
*    IF screen-name EQ 'G_TEXTO1'.
*    ELSEIF screen-name EQ 'G_TEXTO2'.
*    ELSEIF screen-name EQ 'G_TEXTO3'.
*    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.


*  g_previous_screen = sy-dynnr.

*  g_process = text-001.
*  SET TITLEBAR 'xxx'.
ENDMODULE.


MODULE status_0090 OUTPUT.
  SET PF-STATUS '0090'.
  CLEAR: gs_rlab_log-respuesta, g_texto1, g_texto2, g_texto3, gs_rlab.
  TRY.
      gs_rlab =  zcl_wm_rlab_dao=>get_instance( iv_lgnum = g_lgnum )->get_next_query( ).
      DATA(lv_txt) = gs_rlab-texto.
      DO 3 TIMES.
        IF lv_txt IS INITIAL.
          EXIT.
        ENDIF.
        DATA(lv_fnam) = 'G_TEXTO' && sy-index.
        ASSIGN (lv_fnam) TO FIELD-SYMBOL(<fs_fval>).
        CHECK: sy-subrc = 0.
        <fs_fval> = lv_txt.
        DATA(lv_strlen) = strlen( <fs_fval> ).
        lv_txt = lv_txt+lv_strlen.
      ENDDO.

    CATCH zcx_wm_exception.    "
      LEAVE TO SCREEN 0.
  ENDTRY.

  LOOP AT SCREEN.
    CASE gs_rlab-tipo.
      WHEN '1'. " Sí/no
        IF screen-name EQ 'GS_RLAB_LOG-RESPUESTA' OR screen-name EQ 'GS_RLAB_LOG-OBSERVACION'.
          screen-active = 0.
        ELSEIF screen-name EQ 'NOK'.
          screen-active = 1.
        ENDIF.
      WHEN '2'. " Texto a rellenar
        IF screen-name EQ 'GS_RLAB_LOG-RESPUESTA'.
          screen-active = 1.
        ELSEIF screen-name EQ 'NOK' OR screen-name EQ 'GS_RLAB_LOG-OBSERVACION'.
          screen-active = 0.
        ENDIF.
      WHEN '3'. " Observación
        IF screen-name EQ 'GS_RLAB_LOG-RESPUESTA' OR screen-name EQ 'NOK'.
          screen-active = 0.
        ELSEIF screen-name EQ 'GS_RLAB_LOG-OBSERVACION'.
          screen-active = 1.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.

ENDMODULE.




*&---------------------------------------------------------------------*
*&      Module  BACK_LM01  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE back_lm01 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      PERFORM listar_pendientes. " cvivo - WM CB
      IF sy-calld = abap_true. "redireccionar a la transaccion que llamo
        LEAVE TO SCREEN 0.
      ELSE.
        LEAVE TO TRANSACTION 'LM01'.
      ENDIF.
  ENDCASE.
ENDMODULE.                 " BACK_LM01  INPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_9997  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9997 OUTPUT.
  SET PF-STATUS '9997'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_9997  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_9997 OUTPUT.

  DATA: logo_button(6),
        len TYPE i.


  CLEAR: g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8.

* ini - cvivo - 58684 Bloquear transporte
  IF gs_vttk-tknum IS NOT INITIAL. " 60587 - cvivo
    CALL FUNCTION 'DEQUEUE_EVVTTKE'
      EXPORTING
        tknum = gs_vttk-tknum.
  ENDIF.
* fin - cvivo - 58684 Bloquear transporte


*** KYVOR(AG) - INI - 01.09.2019 ---> cvivo - se elimina de aquí pues ocasiona error
*  IF g_nuevas_func_segunda IS NOT INITIAL.
*    SORT gt_select_list BY zeugn DESCENDING.
*  ENDIF.
*** KYVOR(AG) - FIM - 01.09.2019

  DESCRIBE TABLE gt_select_list LINES g_lines_list.

  g_index_bottom1 = ( 8 * g_partial_list ) + 1.
  g_index_bottom2 = ( 8 * g_partial_list ) + 2.
  g_index_bottom3 = ( 8 * g_partial_list ) + 3.
  g_index_bottom4 = ( 8 * g_partial_list ) + 4.
  g_index_bottom5 = ( 8 * g_partial_list ) + 5.
  g_index_bottom6 = ( 8 * g_partial_list ) + 6.
  g_index_bottom7 = ( 8 * g_partial_list ) + 7.
  g_index_bottom8 = ( 8 * g_partial_list ) + 8.

  READ TABLE gt_select_list INDEX g_index_bottom1.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom1.
*    g_number2 = '1'.
*    CLEAR: logo_button.
*    logo_button(3) = select_list-id(3).
*    logo_button+3(3) = '\Q@'.
*    CONCATENATE: logo_button number2 '.' sin logo
    CONCATENATE: g_number2 '.' gt_select_list-obj_numberc INTO g_bottom_list1.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "CONCATENATE gt_select_list-zeugn '-' g_bottom_list1 INTO g_bottom_list1 SEPARATED BY space. "Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list1 '-' gt_select_list-zeugn  INTO g_bottom_list1 SEPARATED BY space. "Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019

    g_text_list1 = gt_select_list-obj_number_alt.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST1'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom2.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom2.
*    g_number2 = '2'.
    CONCATENATE: g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list2.
    g_text_list2 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "CONCATENATE gt_select_list-zeugn '-' g_bottom_list2 INTO g_bottom_list2 SEPARATED BY space."Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list2 '-' gt_select_list-zeugn  INTO g_bottom_list2 SEPARATED BY space."Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST2'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom3.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom3.
*    g_number2 = '3'.
    CONCATENATE:  g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list3.
    g_text_list3 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "      CONCATENATE gt_select_list-zeugn '-' g_bottom_list3 INTO g_bottom_list3 SEPARATED BY space. "Kyvor(RDM) - 20190916
      CONCATENATE g_bottom_list3  '-'  gt_select_list-zeugn  INTO g_bottom_list3 SEPARATED BY space. "Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST3'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom4.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom4.
*    g_number2 = '4'.
    CONCATENATE: g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list4.
    g_text_list4 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "  CONCATENATE gt_select_list-zeugn '-' g_bottom_list4 INTO g_bottom_list4 SEPARATED BY space."Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list4 '-' gt_select_list-zeugn  INTO g_bottom_list4 SEPARATED BY space."Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST4'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom5.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom5.
*    g_number2 = '5'.
    CONCATENATE:  g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list5.
    g_text_list5 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "CONCATENATE gt_select_list-zeugn '-' g_bottom_list5 INTO g_bottom_list5 SEPARATED BY space. "Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list5 '-' gt_select_list-zeugn  INTO g_bottom_list5 SEPARATED BY space. "Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019

  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST5'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom6.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom6.
*    g_number2 = '6'.
    CONCATENATE:  g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list6.
    g_text_list6 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "CONCATENATE gt_select_list-zeugn '-' g_bottom_list6 INTO g_bottom_list6 SEPARATED BY space. "Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list6 '-' gt_select_list-zeugn  INTO g_bottom_list6 SEPARATED BY space. "Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019

  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST6'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom7.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom7.
*    g_number2 = '6'.
    CONCATENATE:  g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list7.
    g_text_list7 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "CONCATENATE gt_select_list-zeugn '-' g_bottom_list7 INTO g_bottom_list7 SEPARATED BY space. "Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list7 '-' gt_select_list-zeugn  INTO g_bottom_list7 SEPARATED BY space. "Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019

  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST7'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_select_list INDEX g_index_bottom8.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom8.
*    g_number2 = '6'.
    CONCATENATE:  g_number2 '.'
                 gt_select_list-obj_numberc INTO g_bottom_list8.
    g_text_list8 = gt_select_list-obj_number_alt.

** KYVOR(AG) - INI - 01.09.2019
    IF g_nuevas_func_segunda IS NOT INITIAL AND gt_select_list-zeugn IS NOT INITIAL.
      "CONCATENATE gt_select_list-zeugn '-' g_bottom_list8 INTO g_bottom_list8 SEPARATED BY space. "Kyvor(RDM) - 20190916
      CONCATENATE  g_bottom_list8 '-' gt_select_list-zeugn  INTO g_bottom_list8 SEPARATED BY space. "Kyvor(RDM) - 20190916
    ENDIF.
** KYVOR(AG) - FIM - 01.09.2019
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST8'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_NEXT'.
        IF g_lines_list LE 8 OR
         ( g_lines_list LE g_index_bottom8 ).
          screen-active = 0.
        ENDIF.
      WHEN 'B_PREVIOUS'.
        IF g_index_bottom1 = 1.
          screen-active = 0.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
  SET CURSOR FIELD 'G_OPTION'.

* ini - cvivo - 08/07/2019 - Formateo automático de lista
  len = strlen( g_bottom_list1 ).
  IF len GT 20.
    len = strlen( g_bottom_list2 ).
    IF len GT 20.
      len = strlen( g_bottom_list3 ).
      IF len GT 20.
        len = strlen( g_bottom_list4 ).
        IF len GT 20.
          len = strlen( g_bottom_list5 ).
          IF len GT 20.
            len = strlen( g_bottom_list6 ).
            IF len GT 20.
              len = strlen( g_bottom_list7 ).
              IF len GT 20.
                len = strlen( g_bottom_list8 ).
                IF len GT 20. " todos los botones tienen MUCHO texto

*                  CONCATENATE '·              ' g_bottom_list1 INTO g_bottom_list1 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list2 INTO g_bottom_list2 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list3 INTO g_bottom_list3 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list4 INTO g_bottom_list4 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list5 INTO g_bottom_list5 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list6 INTO g_bottom_list6 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list7 INTO g_bottom_list7 RESPECTING BLANKS.
*                  CONCATENATE '·              ' g_bottom_list8 INTO g_bottom_list8 RESPECTING BLANKS.
*                  g_bottom_list1+49 = '|'.
*                  g_bottom_list2+49 = '|'.
*                  g_bottom_list3+49 = '|'.
*                  g_bottom_list4+49 = '|'.
*                  g_bottom_list5+49 = '|'.
*                  g_bottom_list6+49 = '|'.
*                  g_bottom_list7+49 = '|'.
*                  g_bottom_list8+49 = '|'.
                ENDIF.
              ENDIF.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
* fin - cvivo

  g_previous_screen = sy-dynnr.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_9999  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9999 OUTPUT.
  SET PF-STATUS '0020'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SCREEN_ATR_0016  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE screen_atr_0016 OUTPUT.
  LOOP AT SCREEN.
    CASE screen-name.

      WHEN 'B_SIG'.
        IF g_lineas = g_index.
          screen-active = 0.
        ELSE.
          screen-active = 1.
        ENDIF.
      WHEN 'B_ANT'.
        IF g_index = 1.
          screen-active = 0.
        ELSE.
          screen-active = 1.
        ENDIF.
      WHEN 'B_DESCARGA'. " fin descarga
        IF g_no_transporte IS NOT INITIAL. " si no hay transporte, sólo mostrarmos botón "grabar"
          screen-active = 0.
        ELSE.
          screen-active = 1.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.

  IF gs_em_puerto-read = abap_true.
    b_selecciona = text-005.
  ELSE.
    b_selecciona = text-004.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0040  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0040 OUTPUT.
  SET PF-STATUS '0040'.
  SET TITLEBAR '0040'.
ENDMODULE.
MODULE status_0041 OUTPUT.
  SET PF-STATUS '0041'.
  CONCATENATE 'Ubicación' gs_lagp-lgpla INTO g_process SEPARATED BY space.
  SET TITLEBAR 'DIN' WITH g_process.
*  SET TITLEBAR '0041'.
ENDMODULE.
MODULE status_043 OUTPUT.
  SET PF-STATUS '0043'.
  SET TITLEBAR '0043'.
ENDMODULE.
MODULE status_051 OUTPUT.
  SET PF-STATUS '0051'.
  SET TITLEBAR '0050'.

  gs_stock_nts-ausme = trunc( gs_stock_nts-verme ) + 1.
  gs_nts-menga = trunc( gs_nts-menga ).
  gs_nts-altme2 = gs_nts-altme.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ATT_043  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE att_043 OUTPUT.
  LOOP AT SCREEN.
    IF screen-name CS 'GS_LINV' AND
       screen-name <> 'GS_LINV-VERME'.
      IF sw_nueva = abap_true.
        screen-input = 1.
      ELSE.
        screen-input = 0.
      ENDIF.
    ELSE.
      CASE screen-name.
        WHEN 'B_SIG'.
          IF g_lineas = g_index_linp.
            screen-active = 0.
          ELSE.
            screen-active = 1.
          ENDIF.
        WHEN 'B_ANT'.
          IF g_index_linp = 1.
            screen-active = 0.
          ELSE.
            screen-active = 1.
          ENDIF.
        WHEN 'B_SAVE'.
          IF gt_linv_save IS INITIAL AND
            gt_recuento[] IS INITIAL.
            screen-active = 0.
            screen-invisible = 1.
          ELSE.
            screen-active = 1.
            screen-invisible = 0.
          ENDIF.
        WHEN 'B_CONF'.
          IF gs_linv-gesme IS INITIAL.
            screen-active = 0.
            screen-invisible = 1.
          ELSE.
            screen-active = 1.
            screen-invisible = 0.
          ENDIF.
        WHEN 'G_LENUM'.
          IF gs_linv-gesme IS INITIAL AND
             sw_nueva IS INITIAL..
            screen-input = 1.
          ELSE.
            screen-input = 0.
          ENDIF.
        WHEN 'GS_LINV-GESME'.
          IF NOT gs_linv-matnr IS INITIAL OR
             NOT sw_nueva IS INITIAL.
            screen-input = 1.
          ELSE.
            screen-input = 0.
          ENDIF.
      ENDCASE.
    ENDIF.

    MODIFY SCREEN.
  ENDLOOP.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ATT_051  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE att_051 OUTPUT.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'GS_STOCK_NTS-LENUM' OR
           'GS_STOCK_NTS-LGPLA' OR
           'GS_STOCK_NTS-LGTYP' OR
           'GS_STOCK_NTS-AUSME' OR
           '%#AUTOTEXT002'.
        IF sw_ctd = abap_true.
          screen-active = 0.
          screen-invisible = 1.
        ELSE.
          screen-active = 1.
          screen-invisible = 0.
        ENDIF.
      WHEN 'G_LENUM'.
        IF sw_confirmado = abap_true OR
           sw_ctd = abap_true.
          screen-active = 0.
          screen-invisible = 1.
        ELSE.
          screen-active = 1.
          screen-invisible = 0.
        ENDIF.
      WHEN 'G_LGPLA'.
        IF NOT sw_confirmado IS INITIAL AND
           sw_ctd = abap_false.
          screen-input = 1.
          screen-invisible = 0.
        ELSE.
          screen-input = 0.
          screen-invisible = 1.
        ENDIF.
      WHEN 'GS_NTS-MENGE_USR'.
        IF sw_ctd = abap_true.
          screen-input = 1.
          screen-active = 1.
          screen-invisible = 0.
        ELSE.
          screen-active = 0.
          screen-invisible = 1.
          screen-input =  0.
        ENDIF.
      WHEN 'B_SAVE'.
        IF sw_confirmado = abap_false AND
           sw_ctd = abap_false AND
          NOT g_lgpla IS INITIAL.
          screen-active = 0.
          screen-invisible = 1.
        ELSE.
          screen-active = 1.
          screen-invisible = 0.
        ENDIF.

      WHEN 'B_STOCK'.
        IF sw_ctd = abap_true.
          screen-active = 0.
          screen-invisible = 1.
        ELSE.
          screen-active = 1.
          screen-invisible = 0.
        ENDIF.
      WHEN 'B_CTD' OR
            'B_REUBICAR'.
        IF sw_ctd = abap_true.
          screen-active = 0.
          screen-invisible = 1.
        ELSE.
          screen-active = 1.
          screen-invisible = 0.
        ENDIF.
    ENDCASE.
    CASE screen-group1.
      WHEN 'INF'.
        IF gs_nts-tbktx IS INITIAL.
          screen-active = 0.
          screen-invisible = 1.
        ELSE.
          screen-active = 1.
          screen-invisible = 0.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  BACK_LM01  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE back_0076 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      LEAVE TO SCREEN '9997'.
  ENDCASE.
ENDMODULE.                 " BACK_LM01  INPUT



MODULE status_0077 OUTPUT.
  SET PF-STATUS '0077'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.

MODULE status_0085 OUTPUT.
  SET PF-STATUS '0085'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0077  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0077 OUTPUT.

  DATA: lv_text_list1(60),
        lv_text_list2(60),
        lv_text_list3(60),
        lv_text_list4(60),
        lv_text_list5(60),
        lv_text_list6(60),
        lv_text_list7(60),
        lv_text_list8(60),
        lv_text_list9(60),
        lv_text_list10(60),
        lv_text_list11(60),
        lv_text_list12(60),
        lv_text_list13(60),
        lv_text_list14(60),
        lv_text_list15(60),
        lv_text_list16(60),
        lv_index_linea1(5),
        lv_index_linea2(5),
        lv_index_linea3(5),
        lv_index_linea4(5),
        lv_index_linea5(5),
        lv_index_linea6(5),
        lv_index_linea7(5),
        lv_index_linea8(5),
        lv_index_linea9(5),
        lv_index_linea10(5),
        lv_index_linea11(5),
        lv_index_linea12(5),
        lv_index_linea13(5),
        lv_index_linea14(5),
        lv_index_linea15(5),
        lv_index_linea16(5),
        lv_index               TYPE c,
        lv_nom_campo_txt(30)   TYPE c,
        lv_nom_campo_index(30) TYPE c,
        lv_zzpeso_alb(30)      TYPE c.

  CLEAR: g_select_object,
         g_option,
         lv_index_linea1,
         lv_index_linea2,
         lv_index_linea3,
         lv_index_linea4,
         lv_index_linea5,
         lv_index_linea6,
         lv_index_linea7,
         lv_index_linea8,
         lv_index_linea9,
         lv_index_linea10,
         lv_index_linea11,
         lv_index_linea12,
         lv_index_linea13,
         lv_index_linea14,
         lv_index_linea15,
         lv_index_linea16,
         lv_text_list1, lv_text_list2, lv_text_list3, lv_text_list4,
         lv_text_list5, lv_text_list6, lv_text_list7, lv_text_list8,
         lv_text_list9, lv_text_list10, lv_text_list11, lv_text_list12,
         lv_text_list13, lv_text_list14, lv_text_list15, lv_text_list16.


  FIELD-SYMBOLS: <fs_texto>, <fs_index_linea> .

  CLEAR: g_lines_list.
  DESCRIBE TABLE gt_select_list LINES g_lines_list.

  lv_index_linea1 = ( 8 * g_partial_list ) + 1.
  lv_index_linea2 = ( 8 * g_partial_list ) + 2.
  lv_index_linea3 = ( 8 * g_partial_list ) + 3.
  lv_index_linea4 = ( 8 * g_partial_list ) + 4.
  lv_index_linea5 = ( 8 * g_partial_list ) + 5.
  lv_index_linea6 = ( 8 * g_partial_list ) + 6.
  lv_index_linea7 = ( 8 * g_partial_list ) + 7.
  lv_index_linea8 = ( 8 * g_partial_list ) + 8.
  lv_index_linea9 = ( 8 * g_partial_list ) + 9.
  lv_index_linea10 = ( 8 * g_partial_list ) + 10.
  lv_index_linea11 = ( 8 * g_partial_list ) + 11.
  lv_index_linea12 = ( 8 * g_partial_list ) + 12.
  lv_index_linea13 = ( 8 * g_partial_list ) + 13.
  lv_index_linea14 = ( 8 * g_partial_list ) + 14.
  lv_index_linea15 = ( 8 * g_partial_list ) + 15.
  lv_index_linea16 = ( 8 * g_partial_list ) + 16.

  CONDENSE: lv_index_linea1, lv_index_linea2, lv_index_linea3, lv_index_linea4,
            lv_index_linea5, lv_index_linea6, lv_index_linea7, lv_index_linea8,
            lv_index_linea9, lv_index_linea10, lv_index_linea11, lv_index_linea12,
            lv_index_linea13, lv_index_linea14, lv_index_linea15, lv_index_linea16.

*  Se obtiene dato del material
  IF gt_select_list[] IS NOT INITIAL.
    SELECT matnr, m~matkl, wgbez60 INTO TABLE @DATA(lt_tipos_papel)
    FROM mara AS m INNER JOIN t023t AS t
    ON m~matkl = t~matkl
    FOR ALL ENTRIES IN @gt_select_list
    WHERE matnr = @gt_select_list-matnr
      AND spras = @sy-langu .

  ENDIF.

  CLEAR: lv_index.
  DO 8 TIMES.  " porque aparecen 8 líneas
    lv_index = lv_index + 1.

*    Se prepara el número de índice con el que se va tratar
    CLEAR: lv_nom_campo_index.
    CONCATENATE 'LV_INDEX_LINEA' lv_index  INTO lv_nom_campo_index .

    ASSIGN (lv_nom_campo_index) TO <fs_index_linea>.

    CHECK <fs_index_linea> IS ASSIGNED.

    CLEAR: gt_select_list.
    READ TABLE gt_select_list INDEX <fs_index_linea>.

    IF sy-subrc = 0.
      g_number2 = <fs_index_linea>.

*    Se prepara el nombre del campo con el que se va tratar
      CLEAR: lv_nom_campo_txt.
      CONCATENATE 'LV_TEXT_LIST' lv_index  INTO lv_nom_campo_txt .

      ASSIGN (lv_nom_campo_txt) TO <fs_texto>.

      CHECK <fs_texto> IS ASSIGNED.

*    Bobina

      CONCATENATE: g_number2 '.' gt_select_list-obj_numberc INTO <fs_texto>
      SEPARATED BY '  '.

*    Peso
*      lv_zzpeso_alb = gs_vttk-zzpeso_alb.
      lv_zzpeso_alb = gt_select_list-zzpeso_alb.
      CONDENSE lv_zzpeso_alb.

      IF frac( lv_zzpeso_alb ) = 0.
        lv_zzpeso_alb = trunc( lv_zzpeso_alb ).
      ENDIF.
      CONDENSE lv_zzpeso_alb.

      CONCATENATE <fs_texto> lv_zzpeso_alb gt_select_list-dtmeg INTO <fs_texto>
      SEPARATED BY '  '.

*    Tipo de papel

*  Se obtiene dato del material

      READ TABLE lt_tipos_papel INTO DATA(ls_tipos_papel)
      WITH KEY matnr = gt_select_list-matnr.

      IF sy-subrc = 0.
        CONCATENATE <fs_texto> ls_tipos_papel-wgbez60  INTO <fs_texto>
        SEPARATED BY '  '.
      ENDIF.
    ENDIF.

  ENDDO.

  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_NEXT'.
        IF g_lines_list LE 16 OR
         ( g_lines_list LE lv_index_linea16 ).
          screen-active = 0.
        ENDIF.
      WHEN 'B_PREVIOUS'.
        IF lv_index_linea1 = 1.
          screen-active = 0.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.
ENDMODULE.

MODULE screen_atr_0077 OUTPUT.


  LOOP AT SCREEN  .

    CASE screen-name.

      WHEN 'B_FINALIZAR'.

        IF sy-ucomm NE 'FIN'.
          screen-active = 0.
          screen-invisible = 1.
        ENDIF.

      WHEN OTHERS.
    ENDCASE.

    MODIFY SCREEN.
  ENDLOOP.

ENDMODULE.


MODULE status_0078 OUTPUT.
  SET PF-STATUS '0078'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0078  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0078 OUTPUT.

  DATA: ls_sel_list_final LIKE LINE OF gt_sel_list_final.


  CLEAR: g_select_object,
         g_option,
         lv_index_linea1,
         lv_index_linea2,
         lv_index_linea3,
         lv_index_linea4,
         lv_index_linea5,
         lv_index_linea6,
         lv_index_linea7,
         lv_index_linea8,
         lv_text_list1, lv_text_list2, lv_text_list3, lv_text_list4,
         lv_text_list5, lv_text_list6, lv_text_list7, lv_text_list8,
         lv_index, lv_nom_campo_txt,
         lv_nom_campo_index, lv_zzpeso_alb, ls_sel_list_final.


*  FIELD-SYMBOLS: <fs_texto>, <fs_index_linea> .

*  move text-t03 to G_PROCESS.

  CLEAR: g_lines_list.
  DESCRIBE TABLE gt_sel_list_final LINES g_lines_list.

  IF g_lines_list > 0.
*  Se obtienen los descriptivos de todos los materiales
*    CLEAR: lv_matkl.
    SELECT matnr, maktx INTO TABLE @DATA(lt_makt)
    FROM makt
    FOR ALL ENTRIES IN @gt_sel_list_final
    WHERE matnr = @gt_sel_list_final-matnr.


*  Se obtiene el peso total bultos, en el caso que no se tenga
*  todavía

    IF gt_total_bultos[] IS INITIAL.

      CLEAR: gv_total_bultos.

*      IF sy-tcode = 'ZWM_RF_008'.  " Descargas Puerto
**        NOTA: Para el programa PUERTO, se deberá realizar el sumatorio de los
**        pesos totales de caba bobina que se ha guardado PERFORM Lista confirmados,
**        ya que no es posible sacar los pesos de la entrega entrante.

*        En esta tabla está el listado de Lista confirmados
      LOOP AT gt_select_list.
        IF sy-tcode = 'ZWM_RF_008'.  " Descargas Puerto
          READ TABLE gt_em_puerto INTO DATA(ls_em_puerto)
          WITH KEY charg = gt_select_list-obj_numberc
                   read = ' '.

          IF sy-subrc = 0.
*          Los NO leídos, no los sumarizo
            CONTINUE.
          ENDIF.

        ENDIF.

        gv_total_bultos = gv_total_bultos + gt_select_list-zzpeso_alb .
        gv_dtmeg_bultos = gt_select_list-dtmeg.

      ENDLOOP.

*      Obtengo todos los datos actualizados del transporte
      READ TABLE gt_vttk INTO gs_vttk
      WITH KEY tknum = gs_vttk-tknum.

      IF ( gv_total_bultos - gs_vttk-zzpeso_alb ) = 0.
        MOVE text-t01 TO gv_diferencias.
      ELSE.
        MOVE text-t02 TO gv_diferencias.
      ENDIF.

    ENDIF.

  ENDIF.

  MOVE gv_total_bultos TO gv_total_bultos_str.

  CONDENSE gv_total_bultos_str.

  IF frac( gv_total_bultos_str ) = 0.
    gv_total_bultos_str = trunc( gv_total_bultos_str ).
  ENDIF.

  CONDENSE gv_total_bultos_str.

  MOVE gs_vttk-zzpeso_alb TO gv_peso_alb_str.
  CONDENSE gv_peso_alb_str.

  IF frac( gv_peso_alb_str ) = 0.
    gv_peso_alb_str = trunc( gv_peso_alb_str ).
  ENDIF.

  CONDENSE gv_peso_alb_str.

  lv_index_linea1 = ( 8 * g_partial_list ) + 1.
  lv_index_linea2 = ( 8 * g_partial_list ) + 2.
  lv_index_linea3 = ( 8 * g_partial_list ) + 3.
  lv_index_linea4 = ( 8 * g_partial_list ) + 4.
  lv_index_linea5 = ( 8 * g_partial_list ) + 5.
  lv_index_linea6 = ( 8 * g_partial_list ) + 6.
  lv_index_linea7 = ( 8 * g_partial_list ) + 7.
  lv_index_linea8 = ( 8 * g_partial_list ) + 8.

  CONDENSE: lv_index_linea1, lv_index_linea2, lv_index_linea3, lv_index_linea4,
            lv_index_linea5, lv_index_linea6, lv_index_linea7, lv_index_linea8.

  CLEAR: lv_index.
  DO 8 TIMES.  " porque aparecen 8 líneas
    lv_index = lv_index + 1.

*    Se prepara el número de índice con el que se va tratar
    CLEAR: lv_nom_campo_index.
    CONCATENATE 'LV_INDEX_LINEA' lv_index  INTO lv_nom_campo_index .

    ASSIGN (lv_nom_campo_index) TO <fs_index_linea>.

    CHECK <fs_index_linea> IS ASSIGNED.

    CLEAR: gt_select_list.
    READ TABLE gt_sel_list_final INTO ls_sel_list_final INDEX <fs_index_linea>.

    IF sy-subrc = 0.
      g_number2 = <fs_index_linea>.

*    Se prepara el nombre del campo con el que se va tratar
      CLEAR: lv_nom_campo_txt.
      CONCATENATE 'LV_TEXT_LIST' lv_index  INTO lv_nom_campo_txt .

      ASSIGN (lv_nom_campo_txt) TO <fs_texto>.

      CHECK <fs_texto> IS ASSIGNED.

*    Bobina

      CONCATENATE: g_number2 '.' ls_sel_list_final-codigo_bobina
      INTO <fs_texto>  SEPARATED BY '  '.

*    Peso

      lv_zzpeso_alb = ls_sel_list_final-zzpeso_alb.
      CONDENSE lv_zzpeso_alb.
      IF frac( lv_zzpeso_alb ) = 0.
        lv_zzpeso_alb = trunc( lv_zzpeso_alb ).
      ENDIF.
      CONDENSE lv_zzpeso_alb.
      CONCATENATE <fs_texto> lv_zzpeso_alb ls_sel_list_final-dtmeg INTO <fs_texto>
      SEPARATED BY '  '.


      CONCATENATE lv_zzpeso_alb ls_sel_list_final-dtmeg INTO ls_sel_list_final-zzpeso_alb_dtmeg.


*   Descriptivo del material
      READ TABLE lt_makt INTO DATA(ls_makt)
      WITH KEY matnr = ls_sel_list_final-matnr.

      IF sy-subrc = 0.
        ls_sel_list_final-maktx = ls_makt-maktx.
        CONCATENATE <fs_texto> ls_sel_list_final-maktx  INTO <fs_texto>
        SEPARATED BY '  '.

      ENDIF.

    ENDIF.

  ENDDO.

  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_NEXT'.
        IF g_lines_list LE 8 OR
         ( g_lines_list LE lv_index_linea8 ).
          screen-active = 0.
        ENDIF.
      WHEN 'B_PREVIOUS'.
        IF lv_index_linea1 = 1.
          screen-active = 0.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0080  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0080 OUTPUT.
  SET PF-STATUS '0080'.

  MOVE text-t04 TO g_process.
  SET TITLEBAR 'DIN' WITH g_process.
ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0080  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0080 OUTPUT.

  CLEAR: g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_index_bottom9,
         g_index_bottom10,
         g_index_bottom11,
         g_index_bottom12,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8,
         g_text_list9, g_text_list10, g_text_list11, g_text_list12.

  DESCRIBE TABLE gt_mara_mard_red LINES g_lines_list.

  g_index_bottom1 = ( 12 * g_partial_list ) + 1.
  g_index_bottom2 = ( 12 * g_partial_list ) + 2.
  g_index_bottom3 = ( 12 * g_partial_list ) + 3.
  g_index_bottom4 = ( 12 * g_partial_list ) + 4.
  g_index_bottom5 = ( 12 * g_partial_list ) + 5.
  g_index_bottom6 = ( 12 * g_partial_list ) + 6.
  g_index_bottom7 = ( 12 * g_partial_list ) + 7.
  g_index_bottom8 = ( 12 * g_partial_list ) + 8.
  g_index_bottom9 = ( 12 * g_partial_list ) + 9.
  g_index_bottom10 = ( 12 * g_partial_list ) + 10.
  g_index_bottom11 = ( 12 * g_partial_list ) + 11.
  g_index_bottom12 = ( 12 * g_partial_list ) + 12.


  READ TABLE gt_mara_mard_red INTO DATA(ls_mara_mard_red) INDEX g_index_bottom1.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom1.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
    g_bottom_list1 = ls_mara_mard_red-wgbez60.
*    g_text_list1 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST1'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom2.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom2.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '2'.
    g_bottom_list2 = ls_mara_mard_red-wgbez60.
*    g_text_list2 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST2'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom3.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom3.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '3'.
    g_bottom_list3 = ls_mara_mard_red-wgbez60.
*    g_text_list3 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST3'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom4.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom4.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '4'.
    g_bottom_list4 = ls_mara_mard_red-wgbez60.
*    g_text_list4 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST4'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom5.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom5.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '5'.
    g_bottom_list5 = ls_mara_mard_red-wgbez60.
*    g_text_list5 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST5'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom6.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom6.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list6 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST6'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom7.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom7.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list7 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST7'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom8.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom8.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list8 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST8'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom9.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom9.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list9 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST9'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom10.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom10.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list10 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST10'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom11.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom11.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list11 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST11'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  READ TABLE gt_mara_mard_red INTO ls_mara_mard_red INDEX g_index_bottom12.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom12.
    CONCATENATE g_number2 '.' ls_mara_mard_red-wgbez60 INTO ls_mara_mard_red-wgbez60
    SEPARATED BY space.
*    g_number2 = '6'.
    g_bottom_list12 = ls_mara_mard_red-wgbez60.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST12'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_NEXT'.
        IF g_lines_list LE 12 OR
         ( g_lines_list LE g_index_bottom12 ).
          screen-active = 0.
        ENDIF.
      WHEN 'B_PREVIOUS'.
        IF g_index_bottom1 = 1.
          screen-active = 0.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.


ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0081  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0081 OUTPUT.
  SET PF-STATUS '0081'.
  g_process = text-t05.
  g_subtitulo_uas = g_subtitulo = g_select_object.

  SET TITLEBAR 'DIN' WITH g_process g_subtitulo.
ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0081  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0081 OUTPUT.

  DATA: ls_gramajes TYPE gtyp_gramajes.

  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8.

  MOVE text-t05 TO g_process.
*  g_subtitulo = g_subtitulo_uas = g_select_object.
  g_subtitulo_uas = g_subtitulo = g_select_object.

  DESCRIBE TABLE gt_gramajes LINES g_lines_list.

  g_index_bottom1 = ( 8 * g_partial_list ) + 1.
  g_index_bottom2 = ( 8 * g_partial_list ) + 2.
  g_index_bottom3 = ( 8 * g_partial_list ) + 3.
  g_index_bottom4 = ( 8 * g_partial_list ) + 4.
  g_index_bottom5 = ( 8 * g_partial_list ) + 5.
  g_index_bottom6 = ( 8 * g_partial_list ) + 6.
  g_index_bottom7 = ( 8 * g_partial_list ) + 7.
  g_index_bottom8 = ( 8 * g_partial_list ) + 8.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom1.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom1.

    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list1 SEPARATED BY space.
*    g_text_list1 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST1'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom2.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom2.
*    g_number2 = '2'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list2 SEPARATED BY space.
*    g_text_list2 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST2'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom3.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom3.
*    g_number2 = '3'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list3 SEPARATED BY space.
*    g_text_list3 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST3'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom4.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom4.
*    g_number2 = '4'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list4 SEPARATED BY space.
*    g_text_list4 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST4'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom5.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom5.
*    g_number2 = '5'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list5 SEPARATED BY space.
*    g_text_list5 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST5'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom6.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom6.
*    g_number2 = '6'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list6 SEPARATED BY space.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST6'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom7.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom7.
*    g_number2 = '6'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list7 SEPARATED BY space.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST7'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom8.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom8.
*    g_number2 = '6'.
    CONCATENATE g_number2 '.' ls_gramajes-zzgramaje 'gr' INTO g_bottom_list8 SEPARATED BY space.
*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST8'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_NEXT'.
        IF g_lines_list LE 8 OR
         ( g_lines_list LE g_index_bottom8 ).
          screen-active = 0.
        ENDIF.
      WHEN 'B_PREVIOUS'.
        IF g_index_bottom1 = 1.
          screen-active = 0.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.


ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0082  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0082 OUTPUT.
  DATA: lv_gramaje_titulo          TYPE zgramaje.

  SET PF-STATUS '0082'.

* NAC -> Quita el 0 si lo hay al principio.
  lv_gramaje_titulo = ls_gramajes-zzgramaje.
  DO 3 TIMES.
    IF lv_gramaje_titulo+0(1) EQ 0.
      SHIFT  lv_gramaje_titulo LEFT BY 1 PLACES.
    ENDIF.
  ENDDO.

*  CONCATENATE g_subtitulo_uas ls_gramajes-zzgramaje 'gr' INTO g_subtitulo
* NAC -> Actualizo concatenación quitando 0 de delante.
  CONCATENATE g_subtitulo_uas lv_gramaje_titulo 'gr' INTO g_subtitulo
  SEPARATED BY space.

  MOVE text-t06 TO g_process.
  IF g_subtitulo_uas IS INITIAL.
    g_subtitulo_uas = g_subtitulo.
  ENDIF.
  SET TITLEBAR 'DIN' WITH g_process g_subtitulo.
ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0082  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0082 OUTPUT.

  DATA: lt_gramajes                TYPE TABLE OF gtyp_gramajes,
        lv_txt_boton_sin_ceros(50) TYPE c,
        lv_txt_b_1(10)             TYPE c,
        lv_txt_b_2(10)             TYPE c.

  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8.

*  IF sy-ucomm = 'BACK'.
**    CONCATENATE g_subtitulo_uas ls_gramajes-zzgramaje 'gr' INTO g_subtitulo
**    SEPARATED BY space.
*    g_subtitulo = g_subtitulo_uas.
*  ELSE.
*    CONCATENATE g_subtitulo ls_gramajes-zzgramaje 'gr' INTO g_subtitulo

*  ENDIF.


*  lt_gramajes[] = gt_gramajes[].
*
**  Borro de la tabla a pintar, los que no me interesan, por que no son los
**  seleccionados
*  LOOP AT lt_gramajes INTO DATA(ls_gramajes_int).
*    IF ls_gramajes_int-matnr NE ls_gramajes-matnr.
*      DELETE lt_gramajes INDEX sy-tabix.
*    ENDIF.
*  ENDLOOP.


  DESCRIBE TABLE gt_gramajes LINES g_lines_list.

  g_index_bottom1 = ( 8 * g_partial_list ) + 1.
  g_index_bottom2 = ( 8 * g_partial_list ) + 2.
  g_index_bottom3 = ( 8 * g_partial_list ) + 3.
  g_index_bottom4 = ( 8 * g_partial_list ) + 4.
  g_index_bottom5 = ( 8 * g_partial_list ) + 5.
  g_index_bottom6 = ( 8 * g_partial_list ) + 6.
  g_index_bottom7 = ( 8 * g_partial_list ) + 7.
  g_index_bottom8 = ( 8 * g_partial_list ) + 8.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom1.
  IF sy-subrc = 0.
    g_number2 = g_index_bottom1.

    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list1 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list1 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list1.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list1 SEPARATED BY space.
      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list1 INTO g_bottom_list1 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list1.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom1
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list1 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST1'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom2.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom2.
*    g_number2 = '2'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.

*        CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list2 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list2 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list2.

      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list2 SEPARATED BY space.

        lv_txt_boton_sin_ceros = g_bottom_list2.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list2 SEPARATED BY space.
      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list2 INTO g_bottom_list2 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list2.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom2
    TRANSPORTING txt_boton txt_boton_sin_ceros .


*    g_text_list2 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST2'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom3.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom3.
*    g_number2 = '3'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list3 SEPARATED BY space.
        lv_txt_boton_sin_ceros = lv_txt_b_1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list3 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list3.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list3 SEPARATED BY space.

      WHEN OTHERS.
    ENDCASE.

    CONCATENATE g_number2 '.' g_bottom_list3 INTO g_bottom_list3 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list3.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom3
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list3 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST3'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom4.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom4.
*    g_number2 = '4'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list4 SEPARATED BY space.
        lv_txt_boton_sin_ceros = lv_txt_b_1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list4 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list4.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list4 SEPARATED BY space.

      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list4 INTO g_bottom_list4 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list4.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom4
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list4 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST4'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom5.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom5.
*    g_number2 = '5'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list5 SEPARATED BY space.
        lv_txt_boton_sin_ceros = lv_txt_b_1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list5 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list5.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list5 SEPARATED BY space.

      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list5 INTO g_bottom_list5 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list5.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom5
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list5 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST5'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom6.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom6.
*    g_number2 = '6'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list6 SEPARATED BY space.
        lv_txt_boton_sin_ceros = lv_txt_b_1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list6 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list6.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list6 SEPARATED BY space.


      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list6 INTO g_bottom_list6 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list6.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom6
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST6'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom7.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom7.
*    g_number2 = '6'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list7 SEPARATED BY space.
        lv_txt_boton_sin_ceros = lv_txt_b_1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list7 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list7.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list7 SEPARATED BY space.


      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list7 INTO g_bottom_list7 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list7.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom7
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST7'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  CLEAR: ls_gramajes.
  READ TABLE gt_gramajes INTO ls_gramajes INDEX g_index_bottom8.

  IF sy-subrc = 0.
    g_number2 = g_index_bottom8.
*    g_number2 = '6'.
    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
* Quita ceros.
        lv_txt_b_1 = ls_gramajes-zzancho.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
* CONCATENATE ls_gramajes-zzancho 'mm' INTO g_bottom_list1 SEPARATED BY space.
        CONCATENATE lv_txt_b_1 'mm' INTO g_bottom_list8 SEPARATED BY space.
        lv_txt_boton_sin_ceros = lv_txt_b_1.
      WHEN 'PAL'.
        CONCATENATE ls_gramajes-zzancho 'x' ls_gramajes-zzlargo INTO g_bottom_list8 SEPARATED BY space.
        lv_txt_boton_sin_ceros = g_bottom_list8.
        SPLIT lv_txt_boton_sin_ceros AT 'x' INTO lv_txt_b_1 lv_txt_b_2.
* Quita ceros.
        DO 3 TIMES.
          IF lv_txt_b_1+0(1) EQ 0.
            SHIFT lv_txt_b_1 LEFT BY 1 PLACES.
          ENDIF.
          IF lv_txt_b_2+0(1) EQ 0.
            SHIFT lv_txt_b_2 LEFT BY 1 PLACES.
          ENDIF.
        ENDDO.
        CONCATENATE lv_txt_b_1 'x' lv_txt_b_2 INTO g_bottom_list8 SEPARATED BY space.


      WHEN OTHERS.
    ENDCASE.
    CONCATENATE g_number2 '.' g_bottom_list8 INTO g_bottom_list8 SEPARATED BY space.
    ls_gramajes-txt_boton = g_bottom_list8.
    ls_gramajes-txt_boton_sin_ceros = lv_txt_boton_sin_ceros.
    MODIFY gt_gramajes FROM ls_gramajes INDEX g_index_bottom8
    TRANSPORTING txt_boton txt_boton_sin_ceros.

*    g_text_list6 = LS_MARA_MARD_RED-WGBEZ60.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'G_BOTTOM_LIST8'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_NEXT'.
        IF g_lines_list LE 8 OR
         ( g_lines_list LE g_index_bottom8 ).
          screen-active = 0.
        ENDIF.
      WHEN 'B_PREVIOUS'.
        IF g_index_bottom1 = 1.
          screen-active = 0.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.


ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0083  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0083 OUTPUT.
  SET PF-STATUS '0083'.

  g_process = 'Listado de UAs'.
  SET TITLEBAR 'DIN' WITH g_process g_subtitulo.

*  g_previous_screen = sy-dynnr.
ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0084  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0084 OUTPUT.
  DATA: num_pags  TYPE i.

  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8.

  IF gv_sumado_pagina_0084 IS INITIAL.
    num_pags  = ceil( g_lines_list_0084 / gc_lineas_grid_0084 ).
  ENDIF.

  IF ( num_pags * gc_lineas_grid_0084 ) LT g_lines_list_0084  AND
      gv_sumado_pagina_0084 IS INITIAL.
    ADD 1 TO num_pags.
    gv_sumado_pagina_0084 = 'X'.
  ENDIF.

* Modifica Visibilidad botones.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_SIGUIENTE'.
        IF ( g_lines_list_0084 LE gc_lineas_grid_0084 ) OR
           gv_pagina_actual_grid_0084 = num_pags.
          screen-active = 0.
        ENDIF.
      WHEN 'B_ANTERIOR'.
        IF id < 8 .
          screen-active = 0.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0085  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0085 OUTPUT.

  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8.

  MOVE text-t06 TO g_process.
  CONCATENATE g_subtitulo ls_gramajes-zzgramaje 'gr' INTO g_subtitulo
  SEPARATED BY space.



  IF init IS INITIAL.
* creación del control
    CREATE OBJECT container
      EXPORTING
        container_name = 'CUSTOM'.

* pongo el ALV en el container
    CREATE OBJECT g_alv
      EXPORTING
        i_parent = container.

**    creo manejador para ALV de cabecera y se lo asigno
*    CREATE OBJECT go_event_receiver.
*
*    SET HANDLER go_event_receiver_cab->handle_user_command FOR g_alv.
*    SET HANDLER go_event_receiver_cab->handle_toolbar_cab FOR g_alv.
*    SET HANDLER go_event_receiver_cab->hotspot_click_cab FOR g_alv.

    init = 'X'.

    CALL METHOD cl_gui_cfw=>flush
      EXCEPTIONS
        cntl_system_error = 1
        cntl_error        = 2.
    IF sy-subrc <> 0.
* error handling
    ENDIF.

  ENDIF.

  PERFORM prepara_alvs.

  PERFORM muestra_alv.



ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CARGAR_POSICIONES  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cargar_posiciones OUTPUT.

  PERFORM lista_materiales_po_completa.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0016  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0016 OUTPUT.

  g_process = 'Descarga de puerto/exterior'.
  SET TITLEBAR 'DIN' WITH g_process.

  gs_em_puerto-menge = trunc( gs_em_puerto-menge ).

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0084  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0084 OUTPUT.
*  SET PF-STATUS '0084'.
*  SET TITLEBAR 'xxx'.

  DATA: lv_menge_char(20)     TYPE c,
        lv_menge_char_dec(20) TYPE c,
        lv_menge              TYPE ekpo-menge,
        lv_meins_out          TYPE mara-meins,
        lv_reg                TYPE sy-tabix,
        lv_mein_chng(5)       TYPE c.

  IF gt_grid_uas[] IS INITIAL.


    CASE gv_tipo_mat.
      WHEN 'BOBINA'.
*      Se parametrizará como select options
        SELECT SINGLE * FROM tvarvc INTO @DATA(ls_tvarvc)
          WHERE name EQ 'ZWM_UM_WM_BOBINA'.

      WHEN 'PAL'.
        CLEAR: ls_tvarvc.
*      Se parametrizará como select options
        SELECT SINGLE * FROM tvarvc INTO ls_tvarvc
          WHERE name EQ 'ZWM_UM_WM_PALLET'.

      WHEN OTHERS.

    ENDCASE.

    SELECT matnr, charg, lifnr
    FROM mch1
    INTO TABLE @DATA(lt_mch1_red)
    FOR ALL ENTRIES IN @gt_lqua_red
    WHERE charg = @gt_lqua_red-charg.


    LOOP AT gt_lqua_red INTO DATA(ls_lqua_red).

      "Parte del GAP WM15
      IF ls_lqua_red-lgtyp = '030' OR ls_lqua_red-bestq IS NOT INITIAL
      OR ls_lqua_red-zeugn IS NOT INITIAL .
        CONTINUE.
      ENDIF.

      lv_reg = lv_reg + 1.
      gt_grid_uas-num = lv_reg.
      CONDENSE gt_grid_uas-num.

      MOVE-CORRESPONDING ls_lqua_red TO gt_grid_uas.
      WRITE ls_lqua_red-lenum TO gt_grid_uas-lenum NO-ZERO.

      READ TABLE lt_mch1_red INTO DATA(ls_mch1_red)
      WITH KEY charg = ls_lqua_red-charg.

      gt_grid_uas-lifnr = ls_mch1_red-lifnr.

      CLEAR: lv_menge, lv_mein_chng.
      IF ls_tvarvc-low IS NOT INITIAL.


        CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
          EXPORTING
            input          = ls_tvarvc-low
*           LANGUAGE       = SY-LANGU
          IMPORTING
            output         = lv_mein_chng
          EXCEPTIONS
            unit_not_found = 1
            OTHERS         = 2.
        IF sy-subrc <> 0.
* Implement suitable error handling here

        ELSE.
          CONDENSE lv_mein_chng.
          MOVE lv_mein_chng TO lv_meins_out .
          CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
            EXPORTING
              i_matnr              = gt_grid_uas-matnr
              i_in_me              = gt_grid_uas-meins
              i_out_me             = lv_meins_out
              i_menge              = gt_grid_uas-verme
            IMPORTING
              e_menge              = lv_menge
            EXCEPTIONS
              error_in_application = 1
              error                = 2
              OTHERS               = 3.
          IF sy-subrc <> 0.
* Implement suitable error handling here

          ELSE.
            gt_grid_uas-meins = ls_tvarvc-low.
            gt_grid_uas-verme = trunc( lv_menge ) + 1.

*            lv_menge_char = lv_menge.

*******            IF frac( lv_menge ) = 0.
*******              lv_menge = trunc( lv_menge ).
********              CONDENSE lv_menge_char.
*******            ENDIF.

            WRITE lv_menge TO lv_menge_char DECIMALS 0.
            CONDENSE lv_menge_char.

            IF frac( lv_menge ) = 0.
              CLEAR: lv_menge_char_dec.
              SPLIT lv_menge_char AT ',' INTO lv_menge_char lv_menge_char_dec.
*              lv_menge_char = trunc( lv_menge_char ).
              CONDENSE lv_menge_char.
            ENDIF.

            CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
              EXPORTING
                input          = lv_meins_out
*               LANGUAGE       = SY-LANGU
              IMPORTING
*               LONG_TEXT      =
                output         = lv_meins_out
*               SHORT_TEXT     =
              EXCEPTIONS
                unit_not_found = 1
                OTHERS         = 2.
            IF sy-subrc <> 0.
* Implement suitable error handling here

            ELSE.

              CONCATENATE lv_menge_char lv_meins_out INTO gt_grid_uas-verme_meins
              SEPARATED BY space.
              WRITE gt_grid_uas-verme_meins TO gt_grid_uas-verme_meins RIGHT-JUSTIFIED.
            ENDIF.

          ENDIF.
        ENDIF.


      ENDIF.

      APPEND gt_grid_uas.

      CLEAR: gt_grid_uas.

    ENDLOOP.

    SORT gt_grid_uas BY lifnr ASCENDING wdatu ASCENDING verme ASCENDING.

    LOOP AT gt_grid_uas .
      gt_grid_uas-num = sy-tabix.
      CONDENSE gt_grid_uas-num.

      MODIFY gt_grid_uas INDEX sy-tabix
      TRANSPORTING num.
    ENDLOOP.

  ENDIF.


  DESCRIBE TABLE gt_grid_uas LINES g_lines_list_0084.

  loopid = id.

ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  CUMPLIMENTA_GRID  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cumplimenta_grid OUTPUT.

  READ TABLE gt_grid_uas INDEX loopid.
  loopid = loopid + 1.
  IF sy-subrc <> 0.
    EXIT FROM STEP-LOOP.
  ENDIF.

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0086  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0086 OUTPUT.
*  DATA: num_pags  TYPE i.

  DATA: sumado TYPE bool.
  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8,
         lv_zzpeso_alb ,cur.



*** KYVOR(AG) - INI - 02.08.2019 - Detalhe SEGUNDAS ----> cvivo - se elimina de aquí por fallos, se saca fuera
*  IF g_nuevas_func_segunda IS NOT INITIAL.
*    SORT gt_select_list BY zeugn DESCENDING.
*  ENDIF.
*** KYVOR(AG) - FIM - 02.08.2019 - Detalhe SEGUNDAS

*  Se obtiene dato del material
  IF gt_select_list[] IS NOT INITIAL.
    REFRESH: lt_tipos_papel.

    SELECT matnr m~matkl wgbez60 INTO TABLE lt_tipos_papel
    FROM mara AS m INNER JOIN t023t AS t
    ON m~matkl = t~matkl
    FOR ALL ENTRIES IN gt_select_list
    WHERE matnr = gt_select_list-matnr
      AND spras = sy-langu .

* -> Descriptivo material.
    SELECT matnr, maktx
      FROM  makt
          INTO TABLE @DATA(lt_descripciones)
      FOR ALL ENTRIES IN @gt_select_list
      WHERE matnr = @gt_select_list-matnr.
  ENDIF.


  REFRESH: gt_grid_lconfirm.


  LOOP AT gt_select_list .
    CLEAR: lv_zzpeso_alb, gt_grid_lconfirm.

    gt_grid_lconfirm-num = sy-tabix.
    CONDENSE gt_grid_lconfirm-num.

*    Bobina
    gt_grid_lconfirm-bobina = gt_select_list-obj_numberc.

*    Peso
    lv_zzpeso_alb = gt_select_list-zzpeso_alb.
    CONDENSE lv_zzpeso_alb.

    IF frac( lv_zzpeso_alb ) = 0.
      lv_zzpeso_alb = trunc( lv_zzpeso_alb ).
    ENDIF.
    CONDENSE lv_zzpeso_alb.

    gt_grid_lconfirm-zzpeso_alb = lv_zzpeso_alb.

*    gt_grid_lconfirm-zzpeso_alb_dtmeg = gt_select_list-obj_number_alt.

*    move gt_grid_lconfirm-zzpeso_alb to lv_zzpeso_alb.
    CONDENSE lv_zzpeso_alb.
    CONCATENATE lv_zzpeso_alb gt_select_list-dtmeg INTO gt_grid_lconfirm-zzpeso_alb_dtmeg
    SEPARATED BY space.

    gt_grid_lconfirm-dtmeg = gt_select_list-dtmeg.

*    Tipo de papel
    CLEAR: ls_tipos_papel.

    READ TABLE lt_tipos_papel INTO ls_tipos_papel
    WITH KEY matnr = gt_select_list-matnr.

    IF sy-subrc = 0.
      gt_grid_lconfirm-wgbez60 = ls_tipos_papel-wgbez60 .
    ENDIF.

* NAC -> Recupera descripción material
    READ TABLE lt_descripciones INTO DATA(ls_descripcion)
    WITH KEY matnr = gt_select_list-matnr.
    IF sy-subrc = 0.
      gt_grid_lconfirm-maktx = ls_descripcion-maktx .
    ENDIF.

** KYVOR(AG) - INI - 02.08.2019 - Detalhe SEGUNDAS
    IF g_nuevas_func_segunda IS NOT INITIAL.
      gt_grid_lconfirm-zeugn = gt_select_list-zeugn.
    ENDIF.
** KYVOR(AG) - FIM - 02.08.2019 - Detalhe SEGUNDAS

    APPEND gt_grid_lconfirm.


  ENDLOOP.


  DESCRIBE TABLE gt_grid_lconfirm LINES g_lines_list_0086.

  loopid = id.


  IF gv_sumado_pagina_0086 IS INITIAL.
    num_pags  = ceil( g_lines_list_0086 / gc_lineas_grid_0086 ).
  ENDIF.

*  IF ( num_pags * gc_lineas_grid ) LT g_lines_list  AND
  IF ( num_pags * gc_lineas_grid_0086 ) LT g_lines_list_0086  AND
      gv_sumado_pagina_0086 IS INITIAL.
    ADD 1 TO num_pags.
    gv_sumado_pagina_0086 = 'X'.
  ENDIF.

* Modifica Visibilidad botones.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_SIGUIENTE'.
*        IF ( g_lines_list LE gc_lineas_grid ) OR
        IF ( g_lines_list_0086 LE gc_lineas_grid_0086 ) OR
*           gv_pagina_actual_grid = num_pags.
           gv_pagina_actual_grid_0086 = num_pags.
          screen-active = 0.
        ENDIF.
      WHEN 'B_ANTERIOR'.
        IF id < 8 .
          screen-active = 0.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  CUMPLIMENTA_GRID_LEIDOS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cumplimenta_grid_leidos OUTPUT.

  READ TABLE gt_grid_lconfirm  INDEX loopid.
  loopid = loopid + 1.
  IF sy-subrc <> 0.
    EXIT FROM STEP-LOOP.
  ENDIF.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0089  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0089 OUTPUT.
*  DATA: num_pags  TYPE i.

  CLEAR: g_select_object,
         g_option,
         lv_index_linea1,
         lv_index_linea2,
         lv_index_linea3,
         lv_index_linea4,
         lv_index_linea5,
         lv_index_linea6,
         lv_index_linea7,
         lv_index_linea8,
         lv_text_list1, lv_text_list2, lv_text_list3, lv_text_list4,
         lv_text_list5, lv_text_list6, lv_text_list7, lv_text_list8,
         lv_index, lv_nom_campo_txt,
         lv_nom_campo_index, lv_zzpeso_alb, ls_sel_list_final,
         gv_total_bultos. " 68264 - cvivo - lo muevo aquí: de lo contrario si no hay lista no se resetea


*  FIELD-SYMBOLS: <fs_texto>, <fs_index_linea> .

*  move text-t03 to G_PROCESS.

*  CLEAR: g_lines_list.
  CLEAR: g_lines_list_0091.
  DESCRIBE TABLE gt_sel_list_final LINES g_lines_list_0091.

  IF g_lines_list_0091 > 0.
*  Se obtienen los descriptivos de todos los materiales
*    CLEAR: lv_matkl.
    SELECT matnr, maktx INTO TABLE @lt_makt
    FROM makt
    FOR ALL ENTRIES IN @gt_sel_list_final
    WHERE matnr = @gt_sel_list_final-matnr.


*  Se obtiene el peso total bultos, en el caso que no se tenga
*  todavía
    IF gt_total_bultos[] IS INITIAL.

*      CLEAR: gv_total_bultos. "68264

*      IF sy-tcode = 'ZWM_RF_008'.  " Descargas Puerto
**        NOTA: Para el programa PUERTO, se deberá realizar el sumatorio de los
**        pesos totales de caba bobina que se ha guardado PERFORM Lista confirmados,
**        ya que no es posible sacar los pesos de la entrega entrante.

*        En esta tabla está el listado de Lista confirmados
      LOOP AT gt_select_list.
        IF sy-tcode = 'ZWM_RF_008'.  " Descargas Puerto
          READ TABLE gt_em_puerto INTO ls_em_puerto
          WITH KEY charg = gt_select_list-obj_numberc
                   read = ' '.

          IF sy-subrc = 0.
*          Los NO leídos, no los sumarizo
            CONTINUE.
          ENDIF.

        ENDIF.

        gv_total_bultos = gv_total_bultos + gt_select_list-zzpeso_alb.
        gv_dtmeg_bultos = gt_select_list-dtmeg.

      ENDLOOP.

*      ELSE.
**        Para el resto de transacciones
*
*        SELECT vp~tknum vp~tpnum vp~vbeln lp~btgew lp~gewei
*        INTO TABLE gt_total_bultos
*        FROM ( vttp AS vp INNER JOIN likp AS lp
*              ON vp~vbeln = lp~vbeln )
*        WHERE vp~tknum = gs_vttk-tknum.
*
*        LOOP AT gt_total_bultos INTO DATA(ls_total_bultos).
*          gv_total_bultos = gv_total_bultos + ls_total_bultos-btgew .
*          gv_dtmeg_bultos = ls_total_bultos-gewei.
*        ENDLOOP.
*      ENDIF.


*      Obtengo todos los datos actualizados del transporte
      READ TABLE gt_vttk INTO gs_vttk
      WITH KEY tknum = gs_vttk-tknum.

      IF ( gv_total_bultos - gs_vttk-zzpeso_alb ) = 0.
        MOVE text-t01 TO gv_diferencias.
      ELSE.
        MOVE text-t02 TO gv_diferencias.
      ENDIF.

    ENDIF.

  ENDIF.
* NAC -> Añadido para recuperar peso albarán actualizado.
*      Obtengo todos los datos actualizados del transporte.
  READ TABLE gt_vttk INTO gs_vttk
  WITH KEY tknum = gs_vttk-tknum.

  IF ( gv_total_bultos - gs_vttk-zzpeso_alb ) = 0.
    MOVE text-t01 TO gv_diferencias.
  ELSE.
    MOVE text-t02 TO gv_diferencias.
  ENDIF.

*  MOVE gv_total_bultos TO gv_total_bultos_str.
  WRITE gv_total_bultos TO gv_total_bultos_str DECIMALS 0 RIGHT-JUSTIFIED.

*  CONDENSE gv_total_bultos_str.
*
*  IF frac( gv_total_bultos_str ) = 0.
*    gv_total_bultos_str = trunc( gv_total_bultos_str ).
*  ENDIF.

  CONDENSE gv_total_bultos_str.

  WRITE gs_vttk-zzpeso_alb TO gv_peso_alb_str DECIMALS 0 RIGHT-JUSTIFIED.
*  CONDENSE gv_peso_alb_str.
*
*  IF frac( gv_peso_alb_str ) = 0.
*    gv_peso_alb_str = trunc( gv_peso_alb_str ).
*  ENDIF.

  CONDENSE gv_peso_alb_str.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.

***********************************************************************
***********************************************************************
***********************************************************************
***********************************************************************
***********************************************************************
***********************************************************************
  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8,
         lv_zzpeso_alb ,cur.


*  Se obtiene dato del material
  IF gt_select_list[] IS NOT INITIAL.
    REFRESH: lt_tipos_papel.

    SELECT matnr m~matkl wgbez60 INTO TABLE lt_tipos_papel
    FROM mara AS m INNER JOIN t023t AS t
    ON m~matkl = t~matkl
    FOR ALL ENTRIES IN gt_select_list
    WHERE matnr = gt_select_list-matnr
      AND spras = sy-langu .

* NAC -> Descriptivo material.
    SELECT matnr, maktx
      FROM  makt
          INTO TABLE @lt_descripciones
      FOR ALL ENTRIES IN @gt_select_list
      WHERE matnr = @gt_select_list-matnr.
  ENDIF.


  REFRESH: gt_grid_lconfirm.


  LOOP AT gt_select_list .
    CLEAR: lv_zzpeso_alb, gt_grid_lconfirm.

    gt_grid_lconfirm-num = sy-tabix.
    CONDENSE gt_grid_lconfirm-num.

*    Bobina
    gt_grid_lconfirm-bobina = gt_select_list-obj_numberc.

*    Peso
    lv_zzpeso_alb = gt_select_list-zzpeso_alb.
    CONDENSE lv_zzpeso_alb.

    IF frac( lv_zzpeso_alb ) = 0.
      lv_zzpeso_alb = trunc( lv_zzpeso_alb ).
    ENDIF.
    CONDENSE lv_zzpeso_alb.
    gt_grid_lconfirm-zzpeso_alb = lv_zzpeso_alb.


    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
      EXPORTING
        input          = gt_select_list-dtmeg
*       LANGUAGE       = SY-LANGU
      IMPORTING
*       LONG_TEXT      =
        output         = gt_grid_lconfirm-dtmeg
*       SHORT_TEXT     =
      EXCEPTIONS
        unit_not_found = 1
        OTHERS         = 2.
    IF sy-subrc <> 0.
    ELSE.
      CONCATENATE lv_zzpeso_alb gt_grid_lconfirm-dtmeg INTO gt_grid_lconfirm-zzpeso_alb_dtmeg
      SEPARATED BY space.
    ENDIF.


*    Tipo de papel
    CLEAR: ls_tipos_papel.

    READ TABLE lt_tipos_papel INTO ls_tipos_papel
    WITH KEY matnr = gt_select_list-matnr.

    IF sy-subrc = 0.
      gt_grid_lconfirm-wgbez60 = ls_tipos_papel-wgbez60 .
    ENDIF.

* NAC -> Recupera descripción material
    READ TABLE lt_descripciones INTO ls_descripcion
    WITH KEY matnr = gt_select_list-matnr.
    IF sy-subrc = 0.
      gt_grid_lconfirm-maktx = ls_descripcion-maktx .
    ENDIF.

    APPEND gt_grid_lconfirm.

  ENDLOOP.

  DESCRIBE TABLE gt_grid_lconfirm LINES g_lines_list_0091.

  loopid = id.
********************************************************
********************************************************
********************************************************
********************************************************
********************************************************

  CLEAR: gt_sel_list_final_cab.
  REFRESH gt_sel_list_final_cab.
  LOOP AT gt_grid_lconfirm.
    MOVE-CORRESPONDING gt_grid_lconfirm TO gt_sel_list_final_cab.
    gt_sel_list_final_cab-codigo_bobina = gt_grid_lconfirm-bobina.

    APPEND gt_sel_list_final_cab.
  ENDLOOP.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0091  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0091 INPUT.
  DATA id_aux TYPE i.

  CASE sy-ucomm.
    WHEN 'NEXT'.
*      ADD 1 TO gv_pagina_actual_grid.
      ADD 1 TO gv_pagina_actual_grid_0091.
*      g_partial_list = g_partial_list + 1.
      g_partial_list_0091 = g_partial_list_0091 + 1.
*      g_next_line = g_partial_list * gc_lineas_grid + 1.
*      g_next_line = g_partial_list * gc_lineas_grid_0091 + 1.
*      g_next_line_0091 = g_partial_list * gc_lineas_grid_0091 + 1.
      g_next_line_0091 = g_partial_list_0091 * gc_lineas_grid_0091 + 1.

*        Para controlar los registros de las subscreen
      id_aux = id.
*      id = id + gc_lineas_grid.
      id = id + gc_lineas_grid_0091.
      IF id GT g_lines_list_0091.
        id = id_aux.
      ENDIF.

*      IF g_next_line > g_lines_list.
      IF g_next_line_0091 > g_lines_list_0091.
*        SUBTRACT 1 FROM gv_pagina_actual_grid.
        SUBTRACT 1 FROM gv_pagina_actual_grid_0091.
*        g_partial_list = g_partial_list - 1.
        g_partial_list_0091 = g_partial_list_0091 - 1.
        g_message_number = '041'.
        g_message_type = 'A'.
        PERFORM mensajes USING 'ZWM_RF' g_message_type g_message_number g_msgv1 g_msgv2 g_msgv3 g_msgv4.
      ENDIF.
    WHEN 'PREV'.
*      SUBTRACT 1 FROM gv_pagina_actual_grid.
      SUBTRACT 1 FROM gv_pagina_actual_grid_0091.
*      IF g_partial_list LE 0.
      IF g_partial_list_0091 LE 0.
*        ADD 1 TO gv_pagina_actual_grid.
        ADD 1 TO gv_pagina_actual_grid_0091.
        g_message_number = '041'.
        g_message_type = 'A'.
        PERFORM mensajes USING 'ZWM_RF' g_message_type g_message_number g_msgv1 g_msgv2 g_msgv3 g_msgv4.
      ELSE.
*        g_partial_list = g_partial_list - 1.
        g_partial_list_0091 = g_partial_list_0091 - 1.

*        Para controlar los registros de las subscreen
*        id = id - gc_lineas_grid.
        id = id - gc_lineas_grid_0091.
        IF id LT 1.
          id = 1.
        ENDIF.
      ENDIF.
    WHEN OTHERS.

  ENDCASE.



ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0091  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_0091 OUTPUT.
* Gestión visibilidad de botones Siguiente y Anterior

*  * NAC -> Paginación
  IF gv_sumado_pagina_0091 IS INITIAL.
    num_pags  = ceil( g_lines_list_0091 / gc_lineas_grid_0091 ).
  ENDIF.

*  IF ( num_pags * gc_lineas_grid ) LT g_lines_list  AND
  IF ( num_pags * gc_lineas_grid_0091 ) LT g_lines_list_0091  AND
      gv_sumado_pagina_0091 IS INITIAL.
    ADD 1 TO num_pags.
    gv_sumado_pagina_0091 = 'X'.
  ENDIF.


  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_SIGUIENTE'..
*        IF  g_lines_list LE gc_lineas_grid  OR
        IF  g_lines_list_0091 LE gc_lineas_grid_0091  OR
*           gv_pagina_actual_grid = num_pags.
           gv_pagina_actual_grid_0091 = num_pags.
          screen-active = 0.
        ENDIF.
      WHEN 'B_ANTERIOR'.
        IF id < 8 .
          screen-active = 0.
        ENDIF.
      WHEN 'B_FINALIZAR'. " cvivo - 57472 - No permitir finalizar si hay diferencias
        IF NOT ( gv_total_bultos - gs_vttk-zzpeso_alb ) = 0 AND gs_vttk-zzpeso_alb GT 0.
          screen-active = 0.
        ELSE.
          screen-active = 1.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
*  * NAC <- Paginación

ENDMODULE.

** KYVOR(AG) - INI - 02.08.2019 - Detalhe SEGUNDAS
*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_9986  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_9986 OUTPUT.
*  DATA: num_pags  TYPE i.

*  DATA: sumado TYPE bool.
  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8,
         lv_zzpeso_alb ,cur.



** KYVOR(AG) - INI - 02.08.2019 - Detalhe SEGUNDAS
  IF g_nuevas_func_segunda IS NOT INITIAL.
    SORT gt_select_list BY zeugn DESCENDING.
  ENDIF.
** KYVOR(AG) - FIM - 02.08.2019 - Detalhe SEGUNDAS

*  Se obtiene dato del material
  IF gt_select_list[] IS NOT INITIAL.
    REFRESH: lt_tipos_papel.

    SELECT matnr m~matkl wgbez60 INTO TABLE lt_tipos_papel
    FROM mara AS m INNER JOIN t023t AS t
    ON m~matkl = t~matkl
    FOR ALL ENTRIES IN gt_select_list
    WHERE matnr = gt_select_list-matnr
      AND spras = sy-langu .

* -> Descriptivo material.
    SELECT matnr, maktx
      FROM  makt
          INTO TABLE @lt_descripciones
      FOR ALL ENTRIES IN @gt_select_list
      WHERE matnr = @gt_select_list-matnr.
  ENDIF.


  REFRESH: gt_grid_lconfirm.


  LOOP AT gt_select_list .
    CLEAR: lv_zzpeso_alb, gt_grid_lconfirm.

    gt_grid_lconfirm-num = sy-tabix.
    CONDENSE gt_grid_lconfirm-num.

*    Bobina
    gt_grid_lconfirm-bobina = gt_select_list-obj_numberc.

*    Peso
    lv_zzpeso_alb = gt_select_list-zzpeso_alb.
    CONDENSE lv_zzpeso_alb.

    IF frac( lv_zzpeso_alb ) = 0.
      lv_zzpeso_alb = trunc( lv_zzpeso_alb ).
    ENDIF.
    CONDENSE lv_zzpeso_alb.

    gt_grid_lconfirm-zzpeso_alb = lv_zzpeso_alb.

*    gt_grid_lconfirm-zzpeso_alb_dtmeg = gt_select_list-obj_number_alt.

*    move gt_grid_lconfirm-zzpeso_alb to lv_zzpeso_alb.
    CONDENSE lv_zzpeso_alb.
    CONCATENATE lv_zzpeso_alb gt_select_list-dtmeg INTO gt_grid_lconfirm-zzpeso_alb_dtmeg
    SEPARATED BY space.

    gt_grid_lconfirm-dtmeg = gt_select_list-dtmeg.

*    Tipo de papel
    CLEAR: ls_tipos_papel.

    READ TABLE lt_tipos_papel INTO ls_tipos_papel
    WITH KEY matnr = gt_select_list-matnr.

    IF sy-subrc = 0.
      gt_grid_lconfirm-wgbez60 = ls_tipos_papel-wgbez60 .
    ENDIF.

* NAC -> Recupera descripción material
    READ TABLE lt_descripciones INTO ls_descripcion
    WITH KEY matnr = gt_select_list-matnr.
    IF sy-subrc = 0.
      gt_grid_lconfirm-maktx = ls_descripcion-maktx .
    ENDIF.

** KYVOR(AG) - INI - 02.08.2019 - Detalhe SEGUNDAS
    IF g_nuevas_func_segunda IS NOT INITIAL.
      gt_grid_lconfirm-zeugn = gt_select_list-zeugn.
    ENDIF.
** KYVOR(AG) - FIM - 02.08.2019 - Detalhe SEGUNDAS

    APPEND gt_grid_lconfirm.


  ENDLOOP.


  DESCRIBE TABLE gt_grid_lconfirm LINES g_lines_list_0086.

  loopid = id.


  IF gv_sumado_pagina_0086 IS INITIAL.
    num_pags  = ceil( g_lines_list_0086 / gc_lineas_grid_0086 ).
  ENDIF.

*  IF ( num_pags * gc_lineas_grid ) LT g_lines_list  AND
  IF ( num_pags * gc_lineas_grid_0086 ) LT g_lines_list_0086  AND
      gv_sumado_pagina_0086 IS INITIAL.
    ADD 1 TO num_pags.
    gv_sumado_pagina_0086 = 'X'.
  ENDIF.

* Modifica Visibilidad botones.
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'B_SIGUIENTE'.
*        IF ( g_lines_list LE gc_lineas_grid ) OR
        IF ( g_lines_list_0086 LE gc_lineas_grid_0086 ) OR
*           gv_pagina_actual_grid = num_pags.
           gv_pagina_actual_grid_0086 = num_pags.
          screen-active = 0.
        ENDIF.
      WHEN 'B_ANTERIOR'.
        IF id < 8 .
          screen-active = 0.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
ENDMODULE.
MODULE status_9985 OUTPUT.
  SET PF-STATUS '0085'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  SPECIAL_PBO_0089  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE special_pbo_9989 OUTPUT.

  DATA(lv_fin_seg) = zcl_wm_rf_func=>check_parameter(
EXPORTING
 iv_func   =  zcl_wm_rf_func=>gc_func_cambia_acc_fin_seg   " ABA: Nombre de variables en variante
 iv_lgnum  =  CONV #( gv_lgnum_lg+2 )   " Núm.almacén/Complejo alm.
).


  CLEAR: g_select_object,
         g_option,
         lv_index_linea1,
         lv_index_linea2,
         lv_index_linea3,
         lv_index_linea4,
         lv_index_linea5,
         lv_index_linea6,
         lv_index_linea7,
         lv_index_linea8,
         lv_text_list1, lv_text_list2, lv_text_list3, lv_text_list4,
         lv_text_list5, lv_text_list6, lv_text_list7, lv_text_list8,
         lv_index, lv_nom_campo_txt,
         lv_nom_campo_index, lv_zzpeso_alb, ls_sel_list_final.


  CLEAR: g_lines_list_0091.
  DESCRIBE TABLE gt_sel_list_final LINES g_lines_list_0091.

  IF g_lines_list_0091 > 0.
*  Se obtienen los descriptivos de todos los materiales
    SELECT matnr, maktx INTO TABLE @lt_makt
    FROM makt
    FOR ALL ENTRIES IN @gt_sel_list_final
    WHERE matnr = @gt_sel_list_final-matnr.


*  Se obtiene el peso total bultos, en el caso que no se tenga
*  todavía
    IF gt_total_bultos[] IS INITIAL.
      CLEAR: gv_total_bultos.

*        En esta tabla está el listado de Lista confirmados
      LOOP AT gt_select_list.
        IF sy-tcode = 'ZWM_RF_008'.  " Descargas Puerto
          READ TABLE gt_em_puerto INTO ls_em_puerto
          WITH KEY charg = gt_select_list-obj_numberc
                   read = ' '.

          IF sy-subrc = 0.
*          Los NO leídos, no los sumarizo
            CONTINUE.
          ENDIF.
        ENDIF.

        gv_total_bultos = gv_total_bultos + gt_select_list-zzpeso_alb.
        gv_dtmeg_bultos = gt_select_list-dtmeg.
      ENDLOOP.
    ENDIF.

    " cvivo - 60831 - 06.05.2020
*      Obtengo todos los datos actualizados del transporte
    READ TABLE gt_vttk INTO gs_vttk WITH KEY tknum = gs_vttk-tknum.

    IF ( gv_total_bultos - gs_vttk-zzpeso_alb ) = 0 AND lv_fin_seg NE abap_true.
      MOVE text-t01 TO gv_diferencias. " no existen diferencias
    ELSEIF gs_vttk-zzpeso_alb > 0.
      MOVE text-t02 TO gv_diferencias. " existen diferencias
    ELSEIF lv_fin_seg = abap_true.
      MOVE text-t07 TO gv_diferencias. " hay bobinas de segunda
    ENDIF.
  ENDIF.
  " DEL - cvivo - 60831 - 06.05.2020 Ya se ha hecho justo antes no?
** NAC -> Añadido para recuperar peso albarán actualizado.
**      Obtengo todos los datos actualizados del transporte.
*  READ TABLE gt_vttk INTO gs_vttk WITH KEY tknum = gs_vttk-tknum.
*
*  IF ( gv_total_bultos - gs_vttk-zzpeso_alb ) = 0.
*    MOVE text-t01 TO gv_diferencias.
*  ELSE.
*    " KYV/RDM - 20191121 - BEG
*    "MOVE text-t02 TO gv_diferencias.
*    IF lv_fin_seg = abap_true.
*      MOVE text-t07 TO gv_diferencias.
*    ELSE.
*      MOVE text-t02 TO gv_diferencias.
*    ENDIF.
*    " KYV/RDM - 20191121 - END  ENDIF.
*  ENDIF.

*  MOVE gv_total_bultos TO gv_total_bultos_str.
  WRITE gv_total_bultos TO gv_total_bultos_str DECIMALS 0 RIGHT-JUSTIFIED.

  CONDENSE gv_total_bultos_str.

  WRITE gs_vttk-zzpeso_alb TO gv_peso_alb_str DECIMALS 0 RIGHT-JUSTIFIED.
  CONDENSE gv_peso_alb_str.
  SET CURSOR FIELD 'G_OPTION'.

  g_previous_screen = sy-dynnr.

  CLEAR: " g_select_object,
         g_option,
         g_index_bottom1,
         g_index_bottom2,
         g_index_bottom3,
         g_index_bottom4,
         g_index_bottom5,
         g_index_bottom6,
         g_index_bottom7,
         g_index_bottom8,
         g_text_list1, g_text_list2, g_text_list3, g_text_list4,
         g_text_list5, g_text_list6, g_text_list7, g_text_list8,
         lv_zzpeso_alb ,cur.

*  Se obtiene dato del material
  IF gt_select_list[] IS NOT INITIAL.
    REFRESH: lt_tipos_papel.

    SELECT matnr m~matkl wgbez60 INTO TABLE lt_tipos_papel
    FROM mara AS m INNER JOIN t023t AS t
    ON m~matkl = t~matkl
    FOR ALL ENTRIES IN gt_select_list
    WHERE matnr = gt_select_list-matnr
      AND spras = sy-langu .

* NAC -> Descriptivo material.
    SELECT matnr, maktx
      FROM  makt
          INTO TABLE @lt_descripciones
      FOR ALL ENTRIES IN @gt_select_list
      WHERE matnr = @gt_select_list-matnr.
  ENDIF.


  REFRESH: gt_grid_lconfirm.

  SORT gt_select_list BY zeugn DESCENDING.

  LOOP AT gt_select_list .
    CLEAR: lv_zzpeso_alb, gt_grid_lconfirm.

    gt_grid_lconfirm-num = sy-tabix.
    CONDENSE gt_grid_lconfirm-num.

*    Bobina
    gt_grid_lconfirm-bobina = gt_select_list-obj_numberc.

*    Peso
    lv_zzpeso_alb = gt_select_list-zzpeso_alb.
    CONDENSE lv_zzpeso_alb.

    IF frac( lv_zzpeso_alb ) = 0.
      lv_zzpeso_alb = trunc( lv_zzpeso_alb ).
    ENDIF.
    CONDENSE lv_zzpeso_alb.
    gt_grid_lconfirm-zzpeso_alb = lv_zzpeso_alb.


    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
      EXPORTING
        input          = gt_select_list-dtmeg
*       LANGUAGE       = SY-LANGU
      IMPORTING
*       LONG_TEXT      =
        output         = gt_grid_lconfirm-dtmeg
*       SHORT_TEXT     =
      EXCEPTIONS
        unit_not_found = 1
        OTHERS         = 2.
    IF sy-subrc <> 0.
    ELSE.
      CONCATENATE lv_zzpeso_alb gt_grid_lconfirm-dtmeg INTO gt_grid_lconfirm-zzpeso_alb_dtmeg
      SEPARATED BY space.
    ENDIF.


*    Tipo de papel
    CLEAR: ls_tipos_papel.

    READ TABLE lt_tipos_papel INTO ls_tipos_papel
    WITH KEY matnr = gt_select_list-matnr.

    IF sy-subrc = 0.
      gt_grid_lconfirm-wgbez60 = ls_tipos_papel-wgbez60 .
    ENDIF.

* NAC -> Recupera descripción material
    READ TABLE lt_descripciones INTO ls_descripcion
    WITH KEY matnr = gt_select_list-matnr.
    IF sy-subrc = 0.
      gt_grid_lconfirm-maktx = ls_descripcion-maktx .
    ENDIF.

    IF gt_select_list-zeugn IS NOT INITIAL.
      gt_grid_lconfirm-zeugn = gt_select_list-zeugn.
    ENDIF.

    APPEND gt_grid_lconfirm.

  ENDLOOP.

  DESCRIBE TABLE gt_grid_lconfirm LINES g_lines_list_0091.

  loopid = id.
********************************************************
********************************************************
********************************************************
********************************************************
********************************************************

  CLEAR: gt_sel_list_final_cab.
  REFRESH gt_sel_list_final_cab.
  LOOP AT gt_grid_lconfirm.
    MOVE-CORRESPONDING gt_grid_lconfirm TO gt_sel_list_final_cab.
    gt_sel_list_final_cab-codigo_bobina = gt_grid_lconfirm-bobina.

    APPEND gt_sel_list_final_cab.
  ENDLOOP.

  IF lv_fin_seg = abap_true.
    LOOP AT SCREEN.
      CHECK: screen-name = 'TXT_PESO_ALBARAN'
      OR screen-name = 'GV_PESO_ALB_STR'
      OR screen-name = 'GS_VTTK-DTMEG'
      OR screen-name = 'TXT_PES_TOT_BULTOS'
      OR screen-name = 'GV_TOTAL_BULTOS_STR'
      OR screen-name = 'GV_DTMEG_BULTOS'.
      screen-active = 0.
      MODIFY SCREEN.
    ENDLOOP.
  ENDIF.

ENDMODULE.

** KYVOR(AG) - FIM - 02.08.2019 - Detalhe SEGUNDAS
