*----------------------------------------------------------------------*
***INCLUDE ZSWM_LT0G_FUN.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LIKP  text
*      <--P_VBUK  text
*      <--P_KNA1  text
*      <--P_*KNA1  text
*----------------------------------------------------------------------*
FORM get_data  TABLES   t_pick  STRUCTURE zswm_ui5_pick
               CHANGING likp    type likp
                        vbuk    type vbuk
                        kna1    type kna1
                        *kna1   type kna1
                        sW_partition
                        lagp    type lagp
                        vttk    type vttk.
clear: likp, vbuk, kna1, *kna1, sw_partition, t_pick[],lagp, vttk.
SELECT SINGLE * FROM likp WHERE vbeln IN s_vbeln.
  CHECK sy-subrc EQ 0.
  SELECT SINGLE * FROM vbuk  WHERE vbeln EQ likp-vbeln.
  SELECT SINGLE * FROM kna1  WHERE kunnr EQ likp-kunnr.
  SELECT SINGLE * FROM *kna1 WHERE kunnr EQ likp-kunag.
  select single * into CORRESPONDING FIELDS OF lagp from lqua where lgnum eq likp-lgnum
*                                and lgtyp eq 'MUE'
                                and lgpla eq likp-vbeln
                                and verme > 0.

  if sy-subrc ne 0.
    clear lagp.
  endif.
  select SINGLE tknum into @data(tknum) from vttp where vbeln eq @likp-vbeln.
  if tknum is not INITIAL.
     select SINGLE * into vttk from vttk where tknum eq tknum.
  endif.
  select * into TABLE t_pick from zswm_ui5_pick where vbeln eq likp-vbeln
                                                  and lvorm ne abap_true.
 SELECT * INTO TABLE @DATA(tt_lips) FROM lips WHERE vbeln EQ @likp-vbeln.
  DELETE tt_lips WHERE posnr+0(1) NE '9'.
 check tt_lips[] is not INITIAL.
 move abap_true to sw_partition.
ENDFORM.
FORM show_log  TABLES   t_log STRUCTURE bapiret2.
  check t_log[] is not INITIAL.
  CALL FUNCTION 'SUSR_DISPLAY_LOG'
    EXPORTING
       DISPLAY_IN_POPUP           = abap_true
**     LOG_TITLE                  =
**     DISPLAY_IN_SUBSCREEN       =
    TABLES
*     IT_LOG_SPROT    =
      it_log_bapiret2 = t_log
    EXCEPTIONS
      parameter_error = 1
      OTHERS          = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.

FORM load_data_into_grid TABLES tabla       TYPE STANDARD TABLE
                         USING nombre_cont TYPE        scrfname
                               variant     LIKE        disvariant
                               estruc      LIKE        dd02l-tabname
                     CHANGING  contenedor  TYPE REF TO cl_gui_custom_container
                               alv_c         TYPE REF TO cl_gui_alv_grid
                               layout      TYPE        lvc_s_layo
                               it_fieldcat TYPE        lvc_t_fcat
                               excludin    TYPE        ui_functions.
  IF alv_c IS INITIAL.
    IF cl_gui_alv_grid=>offline( ) IS INITIAL.

      CREATE OBJECT contenedor
        EXPORTING
          container_name = nombre_cont.
*        EXCEPTIONS
*          OTHERS         = 1.
*      contenedor->

      CREATE OBJECT alv_c
        EXPORTING
          i_parent = contenedor.
*        EXCEPTIONS
*          OTHERS   = 1.

      CREATE OBJECT l_eventos.

*    ELSE.

      PERFORM preparefieldcatalog USING    estruc
                                  CHANGING it_fieldcat.

      PERFORM preparelayout       CHANGING layout.
      PERFORM rellenar_toolbar    CHANGING excludin.

    ENDIF.

    SET HANDLER l_eventos->handle_hotspot_click         FOR alv_c.
*    SET HANDLER eventos->user_tolbar           FOR alv_c.
*    SET HANDLER eventos->handle_user_command   FOR alv_c.

    CALL METHOD alv_c->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

*    alv_c->

    CALL METHOD alv_c->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_enter.

    CALL METHOD alv_c->set_table_for_first_display
      EXPORTING
        is_variant           = variant
        i_save               = 'A'
        is_layout            = layout
        it_toolbar_excluding = excludin
      CHANGING
        it_outtab            = tabla[]
        it_fieldcatalog      = it_fieldcat[]
      EXCEPTIONS
        OTHERS               = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ELSE.

    ls_stable-row = 'X'.
    ls_stable-col = 'X'.

    CALL METHOD alv_c->refresh_table_display
      EXPORTING
        is_stable = ls_stable.
  ENDIF.
ENDFORM.                    "load_data_into_grid
*&--------------------------------------------------------------------
*&      Form  preparefieldcatalog
*&--------------------------------------------------------------------
FORM preparefieldcatalog USING    estruc       LIKE dd02l-tabname
                         CHANGING it_fieldcat1 TYPE lvc_t_fcat.

  DATA: l_fieldcat TYPE LINE OF lvc_t_fcat.

  REFRESH it_fieldcat1.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active    = 'X'
      i_structure_name   = estruc
      i_bypassing_buffer = 'X'
    CHANGING
      ct_fieldcat        = it_fieldcat1[].
*    EXCEPTIONS
*      inconsistent_interface = 1
*      program_error          = 2
*      OTHERS                 = 3.
  LOOP AT it_fieldcat1 ASSIGNING FIELD-SYMBOL(<l_fieldcat>).
    CASE estruc.
      WHEN 'ZSWM_READ_EXIDV_STR'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'LENUM'.
            <l_fieldcat>-hotspot = 'X'.
        ENDCASE.
      WHEN 'ZSWM_UI5_STOCK_AND_PICKING_SCR'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'EXIDV'.
            <l_fieldcat>-hotspot = 'X'.
        ENDCASE.
      WHEN 'ZSWM_DATA_INCL_TRANSPORTES_STR'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'TKNUM'.
            <l_fieldcat>-hotspot = 'X'.

        ENDCASE.
      WHEN 'ZSWM_GET_ENTREGAS_HEAD_UI5_STR'
        OR 'ZSWM_GET_ENTREGAS_UI5_STR'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'VBELN'.
            <l_fieldcat>-hotspot = 'X'.
        ENDCASE.
      WHEN 'ZSWM_TKNUM_SELECT_LIST'.
        CASE <l_fieldcat>-fieldname.
          WHEN 'LGNUM'
            OR 'COD'.
            <l_fieldcat>-hotspot = 'X'.
          WHEN OTHERS.
        ENDCASE.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    "preparefieldcatalog

*&--------------------------------------------------------------------
*&      Form  preparelayout
*---------------------------------------------------------------------
FORM preparelayout CHANGING cwa_layout TYPE lvc_s_layo.

  cwa_layout-zebra    = 'X'.
  cwa_layout-cwidth_opt = 'X'.
  cwa_layout-sel_mode = 'D'.
  cwa_layout-stylefname = 'STYLE'.

ENDFORM.                    "preparelayout
*&--------------------------------------------------------------------
*&      Form  rellenar_toolbar
*&--------------------------------------------------------------------
FORM rellenar_toolbar CHANGING excluirtool TYPE ui_functions.

  REFRESH: excluirtool.

*  APPEND   cl_gui_alv_grid=>mc_fc_excl_all            TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_copy_row          TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_delete_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_append_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_insert_row        TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_move_row          TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_copy              TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_cut               TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_paste             TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_paste_new_row     TO excluirtool.
  APPEND cl_gui_alv_grid=>mc_fc_loc_undo              TO excluirtool.


ENDFORM.                    "rellenar_toolbar
