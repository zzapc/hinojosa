*&---------------------------------------------------------------------*
*& Report  ZRWM_ETIQUETAS_UBICACION
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zrwm_etiquetas_ubicacion.
TABLES: lagp, mlgt.


""""""""""""""""""""""""""
" Tipos de datos
""""""""""""""""""""""""""
TYPES: tt_lgpla TYPE STANDARD TABLE OF lagp-lgpla.


""""""""""""""""""""""""""
" Variables
""""""""""""""""""""""""""
DATA: rb_clich TYPE xfeld VALUE 'X',
      rb_troq  TYPE xfeld.

""""""""""""""""""""""""""
" Pantalla de selección
""""""""""""""""""""""""""
SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-t01.
PARAMETERS: p_lgnum TYPE lagp-lgnum OBLIGATORY,
            p_lgtyp TYPE lagp-lgtyp OBLIGATORY.
SELECT-OPTIONS s_lgber FOR lagp-lgber.
SELECT-OPTIONS s_matnr FOR mlgt-matnr.
SELECT-OPTIONS s_lgpla FOR lagp-lgpla.
SELECTION-SCREEN END OF BLOCK b01.

*SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE text-t02.
*PARAMETERS: rb_clich RADIOBUTTON GROUP g1 DEFAULT 'X',
*            rb_troq  RADIOBUTTON GROUP g1.
*SELECTION-SCREEN END OF BLOCK b02.


""""""""""""""""""""""""""
" Eventos
""""""""""""""""""""""""""

AT SELECTION-SCREEN.
  IF s_matnr IS INITIAL AND s_lgpla IS INITIAL.
    MESSAGE 'Debe seleccionar materiales o ubicaciones' TYPE 'E'.
  ENDIF.



START-OF-SELECTION.
  PERFORM f_start_of_selection.





  """"""""""""""""""""""""""
  " Rutinas
  """"""""""""""""""""""""""
*&---------------------------------------------------------------------*
*&      Form  F_START_OF_SELECTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_start_of_selection .
  DATA tl_lgpla_split TYPE TABLE OF char10.

  "LAGP
  "NUM ALMACEN 200
  "TIPO ALMACEN 800

  "Ubicaciones van del 1 al 16 o del 1 al 32, en principio
  "70331
  "Las TU que empiezan por C son cliches, T son troqueles
  "Codigo cliché o troquel: Campo verificación, quitándole la letra
  "Pantalla de selección: Ubicación sin la letra
  "Tipo (cliché o troquel)

  DATA(vl_tipo) = SWITCH char1( rb_clich WHEN 'X' THEN 'C' ELSE 'T' ).

  DATA: tl_lptyp_rg TYPE RANGE OF lagp-lptyp,
        tl_lgpla    TYPE TABLE OF lagp-lgpla.
  tl_lptyp_rg = VALUE #( ( sign = 'I' option = 'CP' low = |{ vl_tipo }*| ) ).


  DATA: tl_lgpla_matnr_rg TYPE RANGE OF mlgt-lgpla,
        wl_lgpla_matnr_rg LIKE LINE OF tl_lgpla_matnr_rg.
  IF s_matnr IS NOT INITIAL.
    SELECT lgnum, lgtyp, matnr, lgpla
      INTO TABLE @DATA(tl_mlgt)
      FROM mlgt
      WHERE lgnum = @p_lgnum    AND
            lgtyp = @p_lgtyp    AND
            matnr IN @s_matnr   AND
    lvorm = @space.
    LOOP AT tl_mlgt ASSIGNING FIELD-SYMBOL(<fs_mlgt>).
      SPLIT <fs_mlgt>-lgpla AT '-' INTO TABLE tl_lgpla_split.
      CHECK lines( tl_lgpla_split ) = 2.

      wl_lgpla_matnr_rg = VALUE #( sign = 'I' option = 'EQ' low = tl_lgpla_split[ 1 ] ).
      COLLECT wl_lgpla_matnr_rg INTO tl_lgpla_matnr_rg.
    ENDLOOP.

    IF tl_lgpla_matnr_rg IS INITIAL.
      MESSAGE 'No se han encontrado ubicaciones' TYPE 'I'.
      RETURN.
    ENDIF.
  ENDIF.



  SELECT lgnum, lgtyp, lptyp, lgpla, lgber, verif
    INTO TABLE @DATA(tl_lagp)
    FROM lagp
    WHERE lgnum = @p_lgnum  AND
          lgtyp = @p_lgtyp  AND
          lgber IN @s_lgber AND
  lptyp IN @tl_lptyp_rg.


  LOOP AT tl_lagp ASSIGNING FIELD-SYMBOL(<fs_lagp>).
    SPLIT <fs_lagp>-lgpla AT '-' INTO TABLE tl_lgpla_split.
    CHECK lines( tl_lgpla_split ) = 2.
    DATA(vl_lgpla) = tl_lgpla_split[ 1 ].

    IF vl_lgpla IN tl_lgpla_matnr_rg.
      IF vl_lgpla IN s_lgpla OR vl_lgpla+1 IN s_lgpla.
        COLLECT vl_lgpla INTO tl_lgpla.
      ENDIF.
    ENDIF.
  ENDLOOP.

  IF tl_lgpla IS INITIAL.
    MESSAGE 'No se han encontrado ubicaciones' TYPE 'I'.
    RETURN.
  ENDIF.

  SORT tl_lgpla.
  PERFORM f_imprimir_formulario USING p_lgnum p_lgtyp tl_lgpla.

ENDFORM.


*----------------------------------------------*
*& Form GENERAR_FORM
*----------------------------------------------*
FORM f_imprimir_formulario USING vp_lgnum vp_lgtyp
                                 tp_lgpla TYPE tt_lgpla.

  DATA: vl_fm_name      TYPE rs38l_fnam,
        wl_outputparams TYPE sfpoutputparams,
        wl_docparams    TYPE sfpdocparams.

  CALL FUNCTION 'FP_FUNCTION_MODULE_NAME'
    EXPORTING
      i_name     = 'ZSFWM_ETIQUETAS_UBIC'
    IMPORTING
      e_funcname = vl_fm_name.

  wl_outputparams-nodialog  = 'X'.
  wl_outputparams-preview   = 'X'.

  CALL FUNCTION 'FP_JOB_OPEN'
    CHANGING
      ie_outputparams = wl_outputparams
    EXCEPTIONS
      cancel          = 1
      usage_error     = 2
      system_error    = 3
      internal_error  = 4
      OTHERS          = 5.


  LOOP AT tp_lgpla ASSIGNING FIELD-SYMBOL(<fs_lgpla>).
    CALL FUNCTION vl_fm_name
      EXPORTING
        /1bcdwb/docparams = wl_docparams
*       user_settings     = 'X'
        vp_lgnum          = vp_lgnum
        vp_lgtyp          = vp_lgtyp
        vp_lgpla          = <fs_lgpla>
      EXCEPTIONS
        usage_error       = 1
        system_error      = 2
        internal_error    = 3
        OTHERS            = 4.
  ENDLOOP.

  CALL FUNCTION 'FP_JOB_CLOSE'
    EXCEPTIONS
      usage_error    = 1
      system_error   = 2
      internal_error = 3
      OTHERS         = 4.







ENDFORM. " GENERAR_FORM
