*&---------------------------------------------------------------------*
*&  Include           ZRWM_CARGA_UBICACIONES_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  RECUPERA_FICHERO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM recupera_fichero .
  DATA l_fichero TYPE string.
  l_fichero = p_file.
  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                = l_fichero
      filetype                = 'DAT'
*     DAT_MODE                = ' '
    TABLES
      data_tab                = g_it_datos
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      OTHERS                  = 17.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.                    " RECUPERA_FICHERO
*&---------------------------------------------------------------------*
*&      Form  FILE_GET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_P_FILE  text
*----------------------------------------------------------------------*
FORM file_get  CHANGING p_file.
  CALL FUNCTION 'KD_GET_FILENAME_ON_F4'
    CHANGING
      file_name     = p_file
    EXCEPTIONS
      mask_too_long = 1
      OTHERS        = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.                    " FILE_GET
*&---------------------------------------------------------------------*
*&      Form  ACTUALIZA_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM actualiza_datos .
  DATA l_mode VALUE 'N'.
  DATA l_it_mess LIKE bdcmsgcoll OCCURS 0 WITH HEADER LINE.
  DATA l_mess TYPE string.
  LOOP AT g_it_datos.
    REFRESH: bdcdata,
             l_it_mess.
    PERFORM bdc_dynpro      USING 'SAPML01S' '0400'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                             '/00'.
    PERFORM bdc_field       USING 'LAGP-LGNUM'
                                  g_it_datos-lgnum.
    PERFORM bdc_field       USING 'LAGP-LGTYP'
                                  g_it_datos-lgtyp.
    PERFORM bdc_field       USING 'LAGP-LGPLA'
                                  g_it_datos-lgpla.

    PERFORM bdc_dynpro      USING 'SAPML01S' '0400'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=BU'.
    PERFORM bdc_field       USING 'LAGP-LGBER'
                                  g_it_datos-lgber.
    PERFORM bdc_field       USING 'LAGP-LPTYP'
                                  g_it_datos-lptyp.
    PERFORM bdc_field       USING 'LAGP-LGEWI'
                                  g_it_datos-lkapv.


    SELECT SINGLE * INTO @DATA(ls_lagp)
           FROM lagp
           WHERE lgnum = @g_it_datos-lgnum AND
                 lgtyp = @g_it_datos-lgtyp AND
                 lgpla = @g_it_datos-lgpla.
    IF sy-subrc IS INITIAL.
      PERFORM bdc_field       USING 'LAGP-REIHF'
                                    g_it_datos-reihf.

      CALL TRANSACTION 'LS02N' USING bdcdata MESSAGES INTO l_it_mess UPDATE 'S' MODE l_mode.

    ELSE.
      CALL TRANSACTION 'LS01N' USING bdcdata MESSAGES INTO l_it_mess UPDATE 'S' MODE l_mode.
    ENDIF.
    READ TABLE l_it_mess WITH KEY msgtyp = 'E'.
    IF sy-subrc IS INITIAL.
      MESSAGE ID l_it_mess-msgid TYPE l_it_mess-msgtyp NUMBER l_it_mess-msgnr
              WITH l_it_mess-msgv1 l_it_mess-msgv2 l_it_mess-msgv3 l_it_mess-msgv4 INTO l_mess.
      WRITE: / 'Error al crear/modificar la ubicacion ',
               g_it_datos-lgnum, '/',
               g_it_datos-lgtyp,'/',
               g_it_datos-lgpla, ':',
               l_mess.
    ENDIF.

  ENDLOOP.


ENDFORM.                    " ACTUALIZA_DATOS
*----------------------------------------------------------------------*
*        Start new screen                                              *
*----------------------------------------------------------------------*
FORM bdc_dynpro USING program dynpro.
  CLEAR bdcdata.
  bdcdata-program  = program.
  bdcdata-dynpro   = dynpro.
  bdcdata-dynbegin = 'X'.
  APPEND bdcdata.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM bdc_field USING fnam fval.
  CLEAR bdcdata.
  bdcdata-fnam = fnam.
  bdcdata-fval = fval.
  APPEND bdcdata.
ENDFORM.
