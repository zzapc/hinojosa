*&---------------------------------------------------------------------*
*& Report  ZRWM0002
*&
*&---------------------------------------------------------------------*
*& Autor: Carlos Vivó Jiménez
*& Proyecto: WM Xàtiva
*& Fecha: 23/11/2018
*&
*& Funcionalidad: reprocesar automáticamente NTs pendientes en ubicación
*&    de consumos
*&---------------------------------------------------------------------*
REPORT zrwm0002.

INCLUDE zrwm0002_top.

SELECTION-SCREEN BEGIN OF BLOCK 1.
PARAMETERS: p_lgnum LIKE lqua-lgnum.
SELECT-OPTIONS: s_lgtyp FOR lagp-lgtyp.
SELECTION-SCREEN END OF BLOCK 1.

START-OF-SELECTION.

  SELECT * FROM lqua
    WHERE lgtyp IN @s_lgtyp
      AND lgnum EQ @p_lgnum
      AND gesme < 0
      AND tbnum NE @space
    INTO TABLE @DATA(t_lqua).

  IF sy-subrc EQ 0.
    SELECT  ltbk~tbnum, ltbk~nltyp, ltbk~nlpla, ltbp~tbpos,
            ltbp~meins, ltbp~menge, ltbp~matnr, ltbp~charg
      FROM ltbp INNER JOIN ltbk
      ON ltbk~tbnum EQ ltbp~tbnum
        AND ltbk~lgnum EQ ltbp~lgnum
      FOR ALL ENTRIES IN @t_lqua
      WHERE ltbp~lgnum EQ @p_lgnum
        AND ltbk~statu EQ @space
        AND ltbp~matnr EQ @t_lqua-matnr
        AND ltbp~charg EQ @t_lqua-charg
        AND ltbp~lgort EQ @t_lqua-lgort
      INTO TABLE @DATA(t_nt).

    LOOP AT t_nt ASSIGNING FIELD-SYMBOL(<nt>).
      CLEAR: trite.
      REFRESH: t_trite.
      trite-tbpos = <nt>-tbpos.
      trite-altme = <nt>-meins.
      trite-anfme = <nt>-menge.
      trite-charg = <nt>-charg.
      trite-nltyp = <nt>-nltyp.
      trite-nlpla = <nt>-nlpla.

      SELECT SINGLE * FROM lqua " buscamos origen
        WHERE lgnum EQ @p_lgnum
          AND matnr EQ @<nt>-matnr
          AND charg EQ @<nt>-charg
          AND gesme > 0
        INTO @DATA(origen).

      IF sy-subrc EQ 0.
        trite-vlpla = origen-lgpla.
        trite-vltyp = origen-lgtyp.
        trite-letyp = origen-letyp.

        APPEND trite TO t_trite.
      ENDIF.

      CALL FUNCTION 'L_TO_CREATE_TR'
        EXPORTING
          i_lgnum                        = p_lgnum
          i_tbnum                        = <nt>-tbnum
*         i_bname                        = gst_zwm005-bname
          i_squit                        = abap_true
          i_tbeli                        = abap_true
          it_trite                       = t_trite
        IMPORTING
          e_tanum                        = tanum
        EXCEPTIONS
          foreign_lock                   = 1
          qm_relevant                    = 2
          tr_completed                   = 3
          xfeld_wrong                    = 4
          ldest_wrong                    = 5
          drukz_wrong                    = 6
          tr_wrong                       = 7
          squit_forbidden                = 8
          no_to_created                  = 9
          update_without_commit          = 10
          no_authority                   = 11
          preallocated_stock             = 12
          partial_transfer_req_forbidden = 13
          input_error                    = 14
          error_message                  = 15
          OTHERS                         = 16.

      IF tanum IS NOT INITIAL.
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            wait = 'X'.

        WRITE: / 'Orden ', tanum, ' creada para NT ', <nt>-tbnum, ' y UA ', origen-lenum.
      ELSE.
        WRITE: / 'Error al tratar NT ', <nt>-tbnum, ' y UA ', origen-lenum.
      ENDIF.
      CLEAR: origen, tanum.
    ENDLOOP.
  ENDIF.
