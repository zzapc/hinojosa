class ZCL_AUT_SLK definition
  public
  inheriting from ZCL_AP_AUTORIZACION
  final
  create public .

public section.

  class-methods CONTROL_CENTRO
    importing
      !S_WERKS type PEG_T_WERKS
    preferred parameter S_WERKS .
  class-methods CONTROL_ORG_VENTAS
    importing
      !S_VKORG type VKORG_RAN_ITAB .
  type-pools ABAP .
  class-methods AUTORIZADO_A_CENTRO
    importing
      !WERKS type WERKS_D
      !MOSTRAR_ERROR type ABAP_BOOL default ''
    preferred parameter WERKS
    returning
      value(AUTORIZADO) type ABAP_BOOL .
  class-methods AUTORIZADO_A_ORG_VENTAS
    importing
      !VKORG type VKORG
      !MOSTRAR_ERROR type ABAP_BOOL default ''
    preferred parameter VKORG
    returning
      value(AUTORIZADO) type ABAP_BOOL .
  class-methods AUTORIZADO_A_SOCIEDAD
    importing
      !BUKRS type BUKRS
      !MOSTRAR_ERROR type ABAP_BOOL default ''
    preferred parameter BUKRS
    returning
      value(AUTORIZADO) type ABAP_BOOL .
  class-methods CONTROL_SOCIEDAD
    importing
      !S_BUKRS type TY_SO_BUKRS .
  class-methods AUTORIZADO_A_ORG_COMPRAS
    importing
      !EKORG type EKORG
      !MOSTRAR_ERROR type ABAP_BOOL default ''
    returning
      value(AUTORIZADO) type ABAP_BOOL .
  class-methods CONTROL_ORG_COMPRAS
    importing
      !S_EKORG type EKORG_RAN_ITAB .
protected section.
private section.
endclass. "ZCL_AUT_SLK definition
class ZCL_AUT_SLK implementation.
METHOD autorizado_a_centro.

  CLEAR autorizado.
  AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
             ID 'ACTVT' FIELD '03'
             ID 'WERKS' FIELD werks.
  IF sy-subrc = 0.
    autorizado = 'X'.
  ELSEIF mostrar_error = 'X'.
    MESSAGE e004(co) WITH werks. "No tiene autorización para el centro &
  ENDIF.

ENDMETHOD.
METHOD autorizado_a_org_compras.

  CLEAR autorizado.
  AUTHORITY-CHECK OBJECT 'M_BEST_EKO'
             ID 'EKORG' FIELD ekorg
             ID 'ACTVT' FIELD '03'.
  IF sy-subrc = 0.
    autorizado = 'X'.
  ELSEIF mostrar_error = 'X'.
    MESSAGE e518(jl) WITH ekorg. "Sin autorización en organización de compras &
  ENDIF.

ENDMETHOD.
METHOD autorizado_a_org_ventas.

  CLEAR autorizado.
  AUTHORITY-CHECK OBJECT 'V_VBAK_VKO'
             ID 'VKORG' FIELD vkorg
             ID 'VTWEG' DUMMY
             ID 'SPART' DUMMY
             ID 'ACTVT' FIELD '03'.
  IF sy-subrc = 0.
    autorizado = 'X'.
  elseif mostrar_error = 'X'.
    MESSAGE e151(jgbp) WITH vkorg. "Sin autorización para organización de ventas &1
  ENDIF.

ENDMETHOD.
METHOD autorizado_a_sociedad.

  CLEAR autorizado.
  AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
             ID 'ACTVT' FIELD '03'
             ID 'BUKRS' FIELD bukrs.
  IF sy-subrc = 0.
    autorizado = 'X'.
  elseif mostrar_error = 'X'.
    MESSAGE e869(8z) WITH bukrs. "Falta autorización para sociedad &
  ENDIF.

ENDMETHOD.
METHOD control_centro.
  DATA l_werks TYPE werks_d.

* Forzamos a que el usuario introduzca un centro autorizado
  SELECT werks FROM t001w
    INTO l_werks
   WHERE werks IN s_werks
     AND werks NE '0001'
     AND werks NE '1000'.
    IF autorizado_a_centro( l_werks ) = ''.
      MESSAGE e004(co) WITH l_werks. "No tiene autorización para el centro &
    ENDIF.
  ENDSELECT.

ENDMETHOD.
METHOD control_org_compras.
  DATA l_ekorg TYPE ekorg.

* Forzamos a que el usuario introduzca una organizacion de ventas autorizada
  SELECT ekorg FROM t024e
    INTO l_ekorg
   WHERE ekorg IN s_ekorg
     AND ekorg NE '0001'.

    IF autorizado_a_org_compras( l_ekorg ) = ''.
      MESSAGE e518(jl) WITH l_ekorg. "Sin autorización en organización de compras &
    ENDIF.
  ENDSELECT.

ENDMETHOD.
METHOD control_org_ventas.
  DATA l_vkorg TYPE vkorg.

* Forzamos a que el usuario introduzca una organizacion de ventas autorizada
  SELECT vkorg FROM tvko
    INTO l_vkorg
   WHERE vkorg IN s_vkorg
     AND vkorg NE '0001'.

    IF autorizado_a_org_ventas( l_vkorg ) = ''.
      MESSAGE e151(jgbp) WITH l_vkorg. "Sin autorización para organización de ventas &1
    ENDIF.
  ENDSELECT.

ENDMETHOD.
METHOD control_sociedad.
  DATA l_bukrs TYPE bukrs.

* Forzamos a que el usuario introduzca una sociedad
  SELECT bukrs FROM t001
    INTO l_bukrs
   WHERE bukrs IN s_bukrs
     AND bukrs >= '1000' AND bukrs < '9999'.
    IF autorizado_a_sociedad( l_bukrs ) = ''.
      MESSAGE e869(8z) WITH l_bukrs. "Falta autorización para sociedad &
    ENDIF.
  ENDSELECT.

ENDMETHOD.
