*----------------------------------------------------------------------*
*   INCLUDE J_3RMOBVEDF08                                              *
*&---------------------------------------------------------------------*
*&      Form  mat_doc_insert
*&---------------------------------------------------------------------*
form mat_doc_insert
    tables pt_docmat type tt_docmat
    using
        p_budat_high type budat
        p_budat_low  type budat
        pt_partners_sale type tt_partners_sale
        pt_routers       type tt_routers
        pt_routers1      type tt_routers1
        pt_partners_pay1 type tt_partners_pay1
        pt_partners_pay2 type tt_partners_pay2
        pt_werks_from    type tt_werks_from
        pw_mseg_mkpf type type_mseg_mkpf
        pw_bsim_bkpf type type_bsim_bkpf
        pw_listmat   type type_listmat
        p_menge      type menge_d
        p_dmbtr      type j_3rfinsum
        p_wrbtr      type wrbtr
        p_xktid      type j_3rmktnrtype
        p_xktnr      type j_3rmvkntr
        p_xitem      type j_3rmitems
        p_typedoc    type type_1c
        p_xbnrfill   type type_1c
        pp_pa_adcst  type type_1c
        p_notrights  type type_1c
        p_incld      type type_1c.

  data:
      lw_partners_sale type type_partners_sale,
      lw_routers       type type_routers,
      lw_routers1      type type_routers1,
      lw_partners_pay1 type type_partners_pay1,
      lw_partners_pay2 type type_partners_pay2,
      lw_werks_from    type type_werks_from,
      lw_docmat        type type_docmat.

  clear lw_docmat.

  if pw_mseg_mkpf-budat > p_budat_high.
    lw_docmat-later = gc_true.
  endif.

  lw_docmat-xbukrs  = pw_listmat-ybukrs.
  lw_docmat-xmatnr  = pw_listmat-xmatnr.
  lw_docmat-werk    = pw_listmat-werk.
  lw_docmat-lgort   = pw_listmat-lgort.
  lw_docmat-charg   = pw_listmat-charg.
  lw_docmat-tblsb   = pw_listmat-tblsb.    " special stock valuation type

  lw_docmat-sobkz   = pw_mseg_mkpf-sobkz.
  lw_docmat-budat   = pw_mseg_mkpf-budat.

  if not p_xbnrfill is initial.
    lw_docmat-xgjahr  = pw_bsim_bkpf-gjahr.
    lw_docmat-belegnr = pw_mseg_mkpf-mblnr.  " material document number
    lw_docmat-mzeile  = pw_mseg_mkpf-zeile.  " material document item
  endif.

  lw_docmat-sjahr   = pw_mseg_mkpf-sjahr.    " erased document year
  lw_docmat-smbln   = pw_mseg_mkpf-smbln.    " erased document number
  lw_docmat-smblp   = pw_mseg_mkpf-smblp.    " erased document item

  lw_docmat-sjhnr   = pw_mseg_mkpf-mjahr.    " material document year
  lw_docmat-sblnr   = pw_mseg_mkpf-mblnr.    " material document number
  lw_docmat-szile   = pw_mseg_mkpf-zeile.    " material document item
* Movement Type (Inventory Management)
  lw_docmat-bwart   = pw_mseg_mkpf-bwart.
  lw_docmat-bwtar   = pw_mseg_mkpf-bwtar.    " Valuation Type
  lw_docmat-xblnr   = pw_bsim_bkpf-xblnr.    " Reference Document Number
  lw_docmat-xbelnr  = pw_bsim_bkpf-belnr.    " accounting document number
  lw_docmat-buzei   = pw_bsim_bkpf-buzei.    " accounting document item
  if lw_docmat-xbelnr is not initial
    and lw_docmat-xbelnr ne gc_doc_phantom.
      lw_docmat-xhkont = pw_listmat-xsaknr.                      "1375994
  endif.
  lw_docmat-xktnr   = p_xktid.
  lw_docmat-vkntr   = p_xktnr.
  lw_docmat-items   = p_xitem.
  lw_docmat-xmeins  = pw_listmat-ymeins.  " Base Unit of Measure
  lw_docmat-bwaers  = pw_bsim_bkpf-waers. " document currency Key
  lw_docmat-xwaers  = pw_mseg_mkpf-waers. " CC currency Key
  lw_docmat-bvorg   = pw_bsim_bkpf-bvorg.
  lw_docmat-pspnr   = pw_mseg_mkpf-ps_psp_pnr.

  lw_docmat-j_3rftypedoc = p_typedoc.

* document read permission
  if not p_notrights is initial.
    lw_docmat-notrights = p_notrights.
  else.
    lw_docmat-notrights = pw_listmat-notrights.
  endif.
* quantity
  if p_menge > 0.
    lw_docmat-xmensh_in  = p_menge.
  else.
    lw_docmat-xmensh_out = p_menge.
  endif.
* CC amount
  if p_typedoc = gc_item_typ_s.
    if pp_pa_adcst is initial.
      lw_docmat-xdmshb_in  = p_dmbtr.
    else.
      lw_docmat-xchangprice = p_dmbtr.
    endif.
  else.
    if p_dmbtr > 0.
      lw_docmat-xdmshb_in  = p_dmbtr.
      lw_docmat-xwrbt_in   = p_wrbtr.
    else.
      lw_docmat-xdmshb_out = p_dmbtr.
      lw_docmat-xwrbt_out  = p_wrbtr.
    endif.
  endif.

  if pw_mseg_mkpf-budat <= p_budat_high
      and pw_mseg_mkpf-budat >= p_budat_low.
    pw_listmat-banner_doc = gc_true.
  endif.

  if not pw_mseg_mkpf-kdauf is initial.
    lw_docmat-vbeln = pw_mseg_mkpf-kdauf.
    read table pt_partners_sale into lw_partners_sale
        with key vbeln = pw_mseg_mkpf-kdauf
                 parvw = gc_parvw_ag
        binary search.
    if sy-subrc is initial.
      lw_docmat-kunnr_ag = lw_partners_sale-kunnr.
      lw_docmat-name_ag = lw_partners_sale-name1.
      if not lw_partners_sale-vtweg is initial.
        lw_docmat-vtweg = lw_partners_sale-vtweg.
      endif.
    endif.

    read table pt_partners_sale into lw_partners_sale
        with key vbeln = pw_mseg_mkpf-kdauf
                 parvw = gc_parvw_we
        binary search.
    if sy-subrc is initial.
      lw_docmat-kunnr_we = lw_partners_sale-kunnr.
      lw_docmat-name_we = lw_partners_sale-name1.
      if not lw_partners_sale-vtweg is initial.
        lw_docmat-vtweg = lw_partners_sale-vtweg.
      endif.
    endif.

    read table pt_routers1 into lw_routers1
        with key vbelv = pw_mseg_mkpf-kdauf
                 posnv = pw_mseg_mkpf-kdpos
        binary search.
    if sy-subrc is initial and not lw_routers1-route is initial.
      lw_docmat-route = lw_routers1-route.
    endif.
  endif.

  read table pt_routers into lw_routers
      with key mblnr = pw_mseg_mkpf-mblnr
             vbtyp_v = gc_vbtyp_c
      binary search.
  if sy-subrc is initial.
    lw_docmat-route = lw_routers-route.
    if not lw_routers-vtweg is initial.
      lw_docmat-vtweg = lw_routers-vtweg.
    endif.
  endif.

  if not pw_mseg_mkpf-ebeln is initial.
    lw_docmat-ebeln = pw_mseg_mkpf-ebeln.
    read table pt_partners_pay1 into lw_partners_pay1
        with key ebeln = pw_mseg_mkpf-ebeln
                 ebelp = pw_mseg_mkpf-ebelp
        binary search.
    if sy-subrc is initial.
      lw_docmat-mfrnr = lw_partners_pay1-mfrnr.
      lw_docmat-name_prdlifnr = lw_partners_pay1-name1.
    endif.
    read table pt_partners_pay2 into lw_partners_pay2          "1248726
        with key ebeln = pw_mseg_mkpf-ebeln
        binary search.
    if sy-subrc is initial.
      lw_docmat-lifnr = lw_partners_pay2-lifnr.
      lw_docmat-name_lifnr = lw_partners_pay2-name1.
    endif.
    read table pt_werks_from into lw_werks_from
        with key ebeln = pw_mseg_mkpf-ebeln
        binary search.
    if sy-subrc is initial.
      lw_docmat-reswk = lw_werks_from-reswk.
    endif.
  endif.


  perform link_field_filling
      using pw_mseg_mkpf-sobkz
            pw_listmat-xmatnr
            pw_mseg_mkpf-bwtar
            pw_mseg_mkpf-werks
            pw_listmat-lgort
            pw_listmat-charg
            pw_listmat-sortl
            pw_mseg_mkpf-ps_psp_pnr
            pw_mseg_mkpf-kdauf
            pw_mseg_mkpf-kdpos
      changing lw_docmat-linkk
               lw_docmat-field_link.

  lw_docmat-incld = p_incld.

  append lw_docmat to pt_docmat.

endform.                    " mat_doc_insert
*&---------------------------------------------------------------------*
*&      Form  fi_doc_insert
*&---------------------------------------------------------------------*
form fi_doc_insert
    using pp_so_budat_high  type budat
          pp_listmat        type type_listmat
          pw_bsim_bkpf      type type_bsim_bkpf
          pw_bseg           type type_bseg
          pt_bkpf_rbkp      type tt_bkpf_rbkp
          ppt_matnr_way     type tt_matnr_way
          p_vbeln           type vbeln_va
          p_posnr           type posnr_va
          p_pspnr           type ps_psp_pnr
          p_typedoc         type type_1c
          p_notrights       type type_1c
          p_lost            type type_1c
          p_bannerok        type type_1c                       "1318706
     changing ppt_overval   type tt_overvalue
              p_dmbtr       type j_3rfinsum.

  data: l_banner(1)  type c,
        lw_bkpf_rbkp type type_bkpf_rbkp,
        lw_overval   type type_overval.

* check current entry of document in document table of the report
  read table ppt_overval transporting no fields
      with key
          xbukrs = pp_listmat-ybukrs
          xmatnr = pp_listmat-xmatnr
          xhkont = pp_listmat-xsaknr
          bwtar  = pw_bseg-bwtar
          xbwkey = pw_bseg-bwkey
*        tblsb  = pp_listmat-tblsb
          budat  = pw_bsim_bkpf-budat
          xbelnr = pw_bsim_bkpf-belnr
          buzei  = pw_bsim_bkpf-buzei
      binary search.

  Check p_bannerok is not initial.                             "1318706
  if sy-subrc is initial.
    l_banner = gc_true.
  endif.

  if pw_bsim_bkpf-budat > pp_so_budat_high.
    lw_overval-later = gc_true.
  endif.

  lw_overval-xmeins = pp_listmat-ymeins.
  lw_overval-xbukrs = pp_listmat-ybukrs.
  lw_overval-xmatnr = pp_listmat-xmatnr.
  lw_overval-xgjahr = pw_bsim_bkpf-gjahr.
  lw_overval-xbelnr = pw_bsim_bkpf-belnr.

  lw_overval-sjhnr  = pw_bsim_bkpf-gjahr.
  lw_overval-sblnr  = pw_bsim_bkpf-belnr.

  read table pt_bkpf_rbkp into lw_bkpf_rbkp
      with key bukrs = pp_listmat-ybukrs
               belnr = pw_bsim_bkpf-belnr
               gjahr = pw_bsim_bkpf-gjahr
      binary search.

  if sy-subrc is initial.
    lw_overval-sjahr = lw_bkpf_rbkp-stjah.
    lw_overval-smbln = lw_bkpf_rbkp-stblg.
  else.
    lw_overval-sjahr = pw_bsim_bkpf-stjah.
    lw_overval-smbln = pw_bsim_bkpf-stblg.
  endif.

  lw_overval-werk   = pp_listmat-werk.
  lw_overval-lgort  = pp_listmat-lgort.
  lw_overval-charg  = pp_listmat-charg.
  lw_overval-sobkz  = pp_listmat-sobkz.
  lw_overval-tblsb  = pp_listmat-tblsb.
  lw_overval-budat  = pw_bsim_bkpf-budat.
  lw_overval-bwtar  = pw_bseg-bwtar.
  lw_overval-xbwkey = pw_bseg-bwkey.
  lw_overval-xhkont = pw_bseg-hkont.

  lw_overval-bwaers = pw_bsim_bkpf-waers.
  lw_overval-xwaers = pp_listmat-waers.

  lw_overval-overvalue = gc_true.

  lw_overval-nprei  = pw_bseg-nprei.
  lw_overval-peinh  = pw_bseg-peinh.
* lw_overval-hkont  = p_hkont.
* lw_overval-invoice  = p_invoice.
* lw_overval-pricvar  = p_pricvar.
  lw_overval-bvorg    = pw_bsim_bkpf-bvorg.
  lw_overval-buzei    = pw_bsim_bkpf-buzei.
  lw_overval-j_3rftypedoc    = p_typedoc.

  lw_overval-pspnr  = p_pspnr.
  lw_overval-vbeln  = p_vbeln.
  lw_overval-posnr  = p_posnr.
  lw_overval-lost   = p_lost.

* lw_overval-xktnr = p_xktid.
* lw_overval-vkntr = p_xktnr.
* lw_overval-items = p_xitem.

  if not p_notrights is initial.
    lw_overval-notrights = p_notrights.
  else.
    lw_overval-notrights = pp_listmat-notrights.
  endif.

  if pw_bseg-shkzg = gc_shkzg_s.
    p_dmbtr =
        lw_overval-xdmshb_in  =   pw_bseg-dmbtr.
    lw_overval-xwrbt_in   =   pw_bseg-wrbtr.
  else.
    p_dmbtr =
        lw_overval-xdmshb_out = - pw_bseg-dmbtr.
    lw_overval-xwrbt_out  = - pw_bseg-wrbtr.
  endif.

  perform link_field_filling
      using pp_listmat-sobkz
            pp_listmat-xmatnr
            pw_bseg-bwtar
            pp_listmat-werk
            pp_listmat-lgort
            pp_listmat-charg
            pp_listmat-sortl
            p_pspnr
            p_vbeln
            p_posnr
      changing lw_overval-linkk
               lw_overval-field_link.

  insert lw_overval into table ppt_overval.

  read table ppt_matnr_way transporting no fields
      with key bukrs = pp_listmat-ybukrs
               matnr = pp_listmat-xmatnr
               bwkey = pw_bseg-bwkey
               lgort = gc_str_phantom
      binary search.

  if sy-subrc is initial.

    loop at ppt_overval transporting no fields
        where xbukrs = pp_listmat-ybukrs
          and xmatnr = pp_listmat-xmatnr
          and xhkont = pw_bseg-hkont
          and bwtar  = pw_bseg-bwtar
          and xbwkey = pw_bseg-bwkey
          and tblsb  = pp_listmat-tblsb
          and budat  = pw_bsim_bkpf-budat
          and xbelnr = pw_bsim_bkpf-belnr
          and buzei  = pw_bsim_bkpf-buzei
          and lgort  = gc_str_phantom.                      "#EC NEEDED

    endloop.

    if not sy-subrc is initial.

      lw_overval-lgort = gc_str_phantom.

      perform link_field_filling
          using pp_listmat-sobkz
                pp_listmat-xmatnr
                pw_bseg-bwtar
                pp_listmat-werk
                gc_str_phantom
                pp_listmat-charg
                pp_listmat-sortl
                p_pspnr
                p_vbeln
                p_posnr
          changing lw_overval-linkk
                   lw_overval-field_link.

      insert lw_overval into table ppt_overval.

    endif.

  endif.

  if not l_banner is initial.
    p_dmbtr = 0.
  endif.

endform.                    " fi_doc_insert
*&---------------------------------------------------------------------*
*&      Form  fi_mm_item_insert
*&---------------------------------------------------------------------*
form fi_mm_item_insert
    tables pp_docmat          type tt_docmat
    using  pp_so_budat        like so_budat
           ppt_overval        type tt_overvalue
           plt_acctit         type tt_acctit
           plt_partners_sale  type tt_partners_sale
           plt_routers        type tt_routers
           plt_routers1       type tt_routers1
           plt_partners_pay1  type tt_partners_pay1
           plt_partners_pay2  type tt_partners_pay2
           plt_werks_from     type tt_werks_from
           pp_listmat         type type_listmat
           plw_mseg_mkpf      type type_mseg_mkpf
           plw_bsim_bkpf      type type_bsim_bkpf
           pp_pa_adcst        type type_1c
           p_amount           type type_1c
           p_typedoc          type type_1c
           pt_mseg_mkpf       type tt_mseg_mkpf_mb             "1782012
     changing pt_bwtar_change type tt_bwtar_change             "1247791
              pl_menge1       type menge_d
              pl_dmbtr1       type j_3rfinsum
              pl_wrbtr1       type wrbtr.

  data:
      l_ktid      type j_3rmktnrtype, " Type assigment
      l_ktnr      type j_3rmvkntr, " Assignent
      l_item      type j_3rmitems, " Assignent Item
      l_xbnrfill  type type_1c,
      l_incld     type type_1c,
      l_notrights type type_1c.

  perform quantity_sum_mseg_doc_getting
      using plt_acctit
            plw_mseg_mkpf
            pp_listmat
            plw_bsim_bkpf-budat
            ppt_overval
            gc_false                                           "1088124
            pt_mseg_mkpf                                       "1782012
      changing pt_bwtar_change                                 "1247791
               pl_menge1 pl_dmbtr1 pl_wrbtr1 l_incld.

* account assignment in document filling
  perform kotierungs_findung
      using pp_listmat-sobkz
            plw_mseg_mkpf
      changing l_ktid l_ktnr l_item.

  l_xbnrfill = gc_true.

  if p_amount is initial.
    clear: pl_dmbtr1, pl_wrbtr1.
  endif.

  perform mat_doc_insert
      tables pp_docmat
      using pp_so_budat-high pp_so_budat-low
          plt_partners_sale
          plt_routers
          plt_routers1
          plt_partners_pay1
          plt_partners_pay2
          plt_werks_from
          plw_mseg_mkpf
          plw_bsim_bkpf
          pp_listmat
          pl_menge1
          pl_dmbtr1
          pl_wrbtr1
          l_ktid
          l_ktnr
          l_item
          p_typedoc
          l_xbnrfill
          pp_pa_adcst
          l_notrights
          l_incld.

endform.                    " fi_mm_item_insert
*&---------------------------------------------------------------------*
*&      Form  documents_processing
*&---------------------------------------------------------------------*
form documents_processing
    tables p_listmat       type tt_listmat
           p_docmat        type tt_docmat
    using  pw_budat        type line of tt_so_budat
           p_pa_adcst      type type_1c
           pt_listfield2   type tt_listfield2
           pt_matnr_way    type tt_matnr_way
           pt_156_way_out  type tt_156_way_out
           pt_156_way_in   type tt_156_way_in
    changing pp_update     type type_1c                        "1259372
             pt_overval    type tt_overvalue
             pt_partcost   type tt_partcost
             pt_transfer   type tt_transfer.

  types:
      begin of type_key_bseg,
          bukrs type bukrs,
          belnr type belnr_d,
      end of type_key_bseg,
      begin of type_key_mseg,
           mblnr type mblnr,
           mjahr type mjahr,
           menge type menge_d,
           werks type werks_d,
           matnr type matnr,
           awtyp type awtyp,
           aworg type aworg,
           bwtar type bwtar_d,
      end of type_key_mseg,
      begin of type_key_rbkp,
          bukrs type bukrs,
          belnr type belnr_d,
      end of type_key_rbkp,
      begin of type_key_mlit,
          belnr type ck_belnr,
          kjahr type ck_kjahr,
          matnr type matnr,
          poper type poper,
          bwtar type bwtar_d,
          bwkey type bwkey,
          bukrs type bukrs,
          blnrf type belnr_d,
          buzei type buzei,
      end of type_key_mlit,
      begin of type_bsim_pos,
          matnr type matnr,
          bwkey type bwkey,
          bwtar type bwtar_d,
          belnr type belnr_d,
          gjahr type gjahr,
          buzei type buzei,
      end of type_bsim_pos,
      begin of type_mseg_pos,
          mblnr type mblnr,
          mjahr type mjahr,
          zeile type mblpo,
          matnr type matnr,
          werks type werks_d,
          lgort type lgort_d,
      end of type_mseg_pos,
      begin of type_kdauf,
          kdauf type vbeln_va,
          kdpos type posnr_va,
      end of type_kdauf,
      begin of type_bustm_in,
          bustm type bustm,
      end of type_bustm_in.

  data:
      l_rec_done   type sytabix,
      l_rec_cost   type sytabix,      " record number in pt_partcost
      l_rec_quant  type sytabix,      " record number in quantity table
      l_lgort      type lgort_d,
      l_bukrs      type bukrs,
      l_bwkey      type bwkey,
      l_bwtar      type bwtar_d,
      l_matnr      type matnr,
      l_werks      type werks_d,
      l_prcntcur   type i, " for scale
      l_prcntall   type i, " for scale
      l_prcntshw   type i, " for scale
      l_prcnttmp   type i, " for scale
      l_textsc     type type_text70,

* table headers
      lw_partcost   type type_cost,
      lw_listmat    type type_listmat,
      lw_bustm_in type type_bustm_in,
      lw_156_way_in type type_bustm,

* tables
      lt_bsim_bkpf   type tt_bsim_bkpf,
      lt_mseg_mkpf   type tt_mseg_mkpf_mb,                     "1384361
      lt_mseg_mkpf_w type tt_mseg_mkpf_s,
      lt_acctit      type tt_acctit,
      lt_ekbe        type tt_ekbe,
      lt_bseg        type tt_bseg,
      lt_bseg1       type tt_bseg1,
      lt_bkpf        type tt_bkpf,
      lt_mlit_mlcrf  type tt_mlit_mlcrf,
* sale document for customer
      lt_kdauf type tt_kdauf,
* sale partner
      lt_partners_sale type tt_partners_sale,
* purchase order table
      lt_ebeln type tt_ebeln,
* purchase order manufacturer table
      lt_partners_pay1 type tt_partners_pay1,
* purchase order provider table
      lt_partners_pay2 type tt_partners_pay2,
* plant provider of transfer order table
      lt_werks_from type tt_werks_from,
* table of routers
      lt_routers type tt_routers,
* table of routers 1
      lt_routers1 type tt_routers1,
      lt_mseg_pos type tt_mseg_pos,
      lt_bkpf_rbkp type tt_bkpf_rbkp,
      lt_bsim_mseg_mkpf type tt_bsim_mseg_mkpf,
      lt_bustm_in type tt_bustm_in,
      lt_bseg_used  type tth_key_bseg,
      lt_listmat    type tts_listmat,
      lt_bwtar_change    type tt_bwtar_change,                 "1247791
      lt_mseg_mkpf_bwtar type tt_mseg_mkpf_mb,                 "1247791
      lt_bsim_bkpf_bwtar type tt_bsim_bkpf.                    "1247791

  loop at pt_156_way_in into lw_156_way_in.
    read table lt_bustm_in transporting no fields
        with table key bustm = lw_156_way_in-bustm.
    if not sy-subrc is initial.
      lw_bustm_in-bustm = lw_156_way_in-bustm.
      insert lw_bustm_in into table lt_bustm_in.
    endif.
  endloop.

  sort p_listmat by xmatnr ybukrs werk bwkey bwtar.
  describe table p_listmat lines l_prcntall.

  loop at p_listmat into lw_listmat.

    l_rec_quant = sy-tabix.  " p_listmat record number
    add 1 to l_prcntcur.

    if lw_listmat-lgort = gc_str_phantom.
      clear l_lgort.
    else.
      l_lgort = lw_listmat-lgort.
    endif.

    if l_matnr <> lw_listmat-xmatnr or
        l_bukrs <> lw_listmat-ybukrs or
        l_bwkey <> lw_listmat-bwkey  or
        l_bwtar <> lw_listmat-bwtar or
        l_werks <> lw_listmat-werk.

      l_matnr = lw_listmat-xmatnr.
      l_bukrs = lw_listmat-ybukrs.
      l_bwkey = lw_listmat-bwkey.
      l_bwtar = lw_listmat-bwtar.
      l_werks = lw_listmat-werk.

      if l_rec_done > 0.
        perform unclear_items_insert
            using pw_budat-high
                  pw_budat-low
                  lt_listmat
                  lt_bseg
                  lt_bkpf_rbkp
                  lt_mlit_mlcrf                                "1318706
                  pt_matnr_way
                  lt_bseg_used
                  lt_bsim_bkpf
            changing
                  pt_partcost
                  pt_overval.
      endif.

      refresh: lt_bsim_bkpf, lt_bkpf_rbkp, lt_bseg1,
               lt_mseg_pos, lt_mlit_mlcrf, lt_mseg_mkpf_w,
               lt_kdauf, lt_partners_sale, lt_ebeln,
               lt_partners_pay1, lt_partners_pay2,
               lt_werks_from, lt_routers,
               lt_bsim_mseg_mkpf, lt_listmat, lt_bseg_used.

      clear: l_rec_done.

      perform document_items_getting
          tables lt_bkpf_rbkp
          using pw_budat
                lw_listmat
                pt_listfield2
                pt_156_way_out
                lt_bustm_in                                    "2046870
          changing
               lt_bseg_used
               lt_bsim_bkpf
               lt_mseg_mkpf[]
               lt_mseg_mkpf_w[]
               lt_bseg
               lt_bkpf
               lt_ekbe
               lt_bsim_mseg_mkpf
               lt_acctit
               lt_mlit_mlcrf
               lt_kdauf
               lt_partners_sale
               lt_ebeln
               lt_partners_pay1
               lt_partners_pay2
               lt_werks_from
               lt_routers
               pp_update.                                      "1259372

      lt_bseg1[] = lt_bseg[].
      describe table lt_bseg_used lines l_rec_done.

    endif.

* looking for table partite cost
* for material value calculation
    if lw_listmat-sobkz = gc_spec_q or
        lw_listmat-sobkz = gc_spec_e .
      read table pt_partcost into lw_partcost
          with key matnr = lw_listmat-xmatnr
                   bwkey = lw_listmat-bwkey
                   bwtar = lw_listmat-bwtar
                   bwtty = lw_listmat-bwtty
                   werks = lw_listmat-werk
                   tblsb = lw_listmat-tblsb
                   linkk = lw_listmat-linkk
          binary search.
    else.
      read table pt_partcost into lw_partcost
          with key matnr = lw_listmat-xmatnr
                   bwkey = lw_listmat-bwkey
                   bwtar = lw_listmat-bwtar
                   bwtty = lw_listmat-bwtty
                   werks = lw_listmat-werk
                   tblsb = lw_listmat-tblsb
          binary search.
    endif.

    check sy-subrc is initial.

    l_rec_cost = sy-tabix.      " pt_partcost record number

    if lw_listmat-lgort ne gc_str_phantom
        or lw_listmat-sobkz = gc_spec_w
        or lw_listmat-sobkz = gc_spec_v
        or lw_listmat-sobkz = gc_spec_o.

      perform fi_items_processing
          using
              pw_budat
              p_pa_adcst
              l_lgort
              lt_bsim_bkpf
              lt_bkpf_rbkp
              lt_mseg_mkpf
              lt_bsim_mseg_mkpf
              lt_bseg
              lt_acctit
              lt_mlit_mlcrf
              lt_partners_sale
              lt_partners_pay1
              lt_partners_pay2
              lt_werks_from
              lt_routers
              lt_routers1
              lt_bustm_in
              pt_matnr_way
          changing
              l_rec_done
              lt_bseg_used
              lt_mseg_mkpf_bwtar                               "1247791
              lt_bsim_bkpf_bwtar                               "1247791
              lt_bwtar_change                                  "1247791
              p_listmat[]
              lt_mseg_pos
              lw_listmat
              l_rec_cost "2085825
              lw_partcost "2085825
              pt_partcost "2085825
              p_docmat[]
              pt_transfer
              pt_overval.

* cost recording
      modify pt_partcost from lw_partcost index l_rec_cost.
* quantity recording
      modify p_listmat from lw_listmat index l_rec_quant.

      perform mm_items_processing
          using
              pw_budat
              p_pa_adcst
              l_lgort
              lt_mseg_mkpf
              lt_bseg1
              lt_bkpf
              lt_ekbe
              lt_acctit
              lt_partners_sale
              lt_partners_pay1
              lt_partners_pay2
              lt_werks_from
              lt_routers
              lt_routers1
              pt_156_way_out
              l_rec_cost
          changing
              pt_transfer
              p_listmat[]
              p_docmat[]
              lt_bwtar_change                                  "1247791
              lt_mseg_pos
              lw_listmat
              lw_partcost
              pt_partcost
              pt_overval.

* quantity recording
      modify p_listmat from lw_listmat index l_rec_quant.

    else.

      perform way_items_processing
          using
              pw_budat
              p_pa_adcst
              lt_mseg_mkpf_w
              lt_ekbe
              lt_bkpf
              lt_bseg1
              lt_acctit                                        "1703869
              pt_156_way_out                                   "1114541
              l_rec_cost
              lt_mseg_mkpf                                     "1782012
          changing
              pt_overval
              lw_listmat
              lw_partcost
              pt_partcost
              p_docmat[]
              p_listmat[]                                      "1114541
              pt_transfer.                                     "1114541

      modify p_listmat from lw_listmat index l_rec_quant.

    endif.

    Insert lw_listmat Into Table lt_listmat.                   "1123411

*   recording a step 'Processing material documents'           "1417445
    if g_bkgrd is initial.
      check gv_wan is initial.                                 "1417445
      concatenate text-012 lw_listmat-xmatnr into l_textsc     "1417445
          separated by space.
      perform run_scale
          using l_prcntall l_prcntcur l_textsc
          changing l_prcntshw l_prcnttmp.
    endif.

  endloop.

  refresh: lt_acctit, lt_partners_sale, lt_partners_pay1,      "1247791
           lt_partners_pay2, lt_werks_from, lt_routers, lt_routers1.
  clear:   gv_acctit_get.                                      "1782012
  perform val_type_change_processing                           "1247791
      using
          pw_budat
          p_pa_adcst
          lt_acctit
          lt_partners_sale
          lt_partners_pay1
          lt_partners_pay2
          lt_werks_from
          lt_routers
          lt_routers1
          lt_mseg_mkpf                                         "1782012
      changing
          lt_bwtar_change
          lt_mseg_mkpf_bwtar
          lt_bsim_bkpf_bwtar
          p_listmat[]
          p_docmat[]
          pt_partcost
          pt_transfer
          pt_overval.

  if l_rec_done > 0.
    perform unclear_items_insert
        using pw_budat-high
              pw_budat-low
              lt_listmat
              lt_bseg
              lt_bkpf_rbkp
              lt_mlit_mlcrf                                    "1318706
              pt_matnr_way
              lt_bseg_used
              lt_bsim_bkpf
        changing
              pt_partcost
              pt_overval.
  endif.

endform.                    " documents_processing
*&---------------------------------------------------------------------*
*&      Form  document_items_getting
*&---------------------------------------------------------------------*
form document_items_getting
    tables pt_bkpf_rbkp         type tt_bkpf_rbkp
    using  pw_budat             type line of tt_so_budat
           pw_listmat           type type_listmat
           ppt_listfield2       type tt_listfield2
           ppt_156_way_out      type tt_156_way_out
           pt_bustm_in          type tt_bustm_in               "2046870
    changing
            pt_bseg_used       type tth_key_bseg
            pt_bsim_bkpf       type tt_bsim_bkpf
            pt_mseg_mkpf       type tt_mseg_mkpf_mb            "1384361
            pt_mseg_mkpf_w     type tt_mseg_mkpf_s
            pt_bseg            type tt_bseg
            pt_bkpf            type tt_bkpf
            pt_ekbe            type tt_ekbe
            pt_bsim_mseg_mkpf  type tt_bsim_mseg_mkpf
            pt_acctit          type tt_acctit
            pt_mlit_mlcrf      type tt_mlit_mlcrf
            pt_kdauf           type tt_kdauf
            pt_partners_sale   type tt_partners_sale
            pt_ebeln           type tt_ebeln
            pt_partners_pay1   type tt_partners_pay1
            pt_partners_pay2   type tt_partners_pay2
            pt_werks_from      type tt_werks_from
            pt_routers         type tt_routers
            p_update           type type_1c.

  data:
      l_isrelevant type type_1c,
      l_rec       type sytabix,
      l_mblnr     type mblnr,
      l_mjahr     type mjahr,
      l_sort      type type_1c,                                "1247791
      l_zeile     type mblpo,                                  "2046870

* internal table headers
      lw_ekbe       type type_ekbe,
      lw_bseg       type type_bseg,
      lw_bseg_used type type_key_bseg,
      lw_bsim_bkpf  type type_bsim_bkpf,
      lw_bsim_mseg_mkpf type type_bsim_mseg_mkpf,
      lw_mseg_mkpf  type type_mseg_mkpf,
      lw_mlit_mlcrf type type_mlit_mlcrf,

* internal tables
*    lt_bseg type tt_bseg1,
      lt_mseg type standard table of type_mseg,
      lt_mkpf type standard table of type_mkpf,
      llt_mseg_mkpf type tt_mseg_mkpf,
      llt_mseg_mkpf_w type sorted table of type_mseg_mkpf
         with non-unique key mblnr dmbtr menge mjahr werks bwtar shkzg,
      llt_mseg_mkpf_b type sorted table of type_mseg_mkpf
         with non-unique key mblnr dmbtr menge mjahr bukrs bwtar shkzg,

      lt_mlit_mlcrf type standard table of type_mlit_mlcrf,
      lt_mlit_mlc   type standard table of type_mlit_mlcrf,

* key table for selection from EKBE table
      lt_key_ekbe type tt_key_ekbe,
* key table for selection from BSEG table
      lt_key_bseg type tt_key_bseg,
* key table for selection from MSEG table
      lt_key_mseg type tt_key_mseg,
* key table for selection from RBKP table
      lt_key_rbkp type tt_key_rbkp,
* key table for selection from MLHD table
      lt_key_mlit type tt_key_mlit,
      lw_key_ekbe type type_key_ekbe,
      lt_key_pspnr type tt_pspnr,                              " 1230284
      wa_key_pspnr like line of lt_key_pspnr,                  " 1230284
      wa_pt_bseg   like line of pt_bseg.                       " 1230284


  field-symbols: <fs_mseg_mkpf> type type_mseg_mkpf,
                 <fs_temp>      type type_mseg_mkpf.           "2046870


* FI items selection
  select
      a~matnr a~bwkey a~bwtar a~belnr a~gjahr
      b~bukrs b~stblg b~stjah
      a~buzei b~bvorg a~menge a~shkzg a~meins
      a~dmbtr a~budat b~cpudt b~cputm
      a~buzid b~awtyp b~blart
      b~awkey b~xblnr b~waers b~monat
      from bsim as a
      inner join bkpf as b
          on  a~mandt = b~mandt
          and a~belnr = b~belnr
          and a~gjahr = b~gjahr
      into table pt_bsim_bkpf
      where a~matnr = pw_listmat-xmatnr
        and a~bwkey = pw_listmat-bwkey
        and a~bwtar = pw_listmat-bwtar
        and b~bukrs = pw_listmat-ybukrs
        and a~budat ge pw_budat-low.

  if gv_mseg_conv = abap_true.                                 "1982947 start
*   mkpf fields are added to mseg
    select (ppt_listfield2)
        into table pt_mseg_mkpf
        from mseg as a
        where a~matnr = pw_listmat-xmatnr
          and a~bwtar = pw_listmat-bwtar
          and a~werks = pw_listmat-werk
          and a~mjahr >= pw_budat-low(4)
          and a~budat_mkpf >= pw_budat-low.
  else.                                                        "1982947 end
  select (ppt_listfield2)
      into table pt_mseg_mkpf
      from mseg as a
      inner join mkpf as b
          on a~mandt = b~mandt
         and a~mblnr = b~mblnr
         and a~mjahr = b~mjahr
      where a~matnr = pw_listmat-xmatnr
        and a~bwtar = pw_listmat-bwtar
        and a~werks = pw_listmat-werk
        and a~mjahr >= pw_budat-low(4)                         "1650775
        and b~budat >= pw_budat-low.
  endif.                                                       "1982947

* filter FI documents by SO_POSI                               " 1230284
* note: in general this logic is incorrect
* valid logic is: select all SD and FI documents without WBS filter,
* then aplly filter. At the moment, we select SD documents with filter,
* then select FI documents with filter.
  REFRESH lt_key_pspnr.
  IF NOT SO_POSID IS INITIAL.
    CLEAR wa_key_pspnr.
    wa_key_pspnr-option = gc_option_eq.
    wa_key_pspnr-sign   = gc_sign_i.
    SELECT * FROM prps
      WHERE posid IN so_posid.
      wa_key_pspnr-low = prps-pspnr.
      APPEND wa_key_pspnr TO lt_key_pspnr.
    ENDSELECT.
  ENDIF.

  IF NOT lt_key_pspnr IS INITIAL.                              " 1230284
    " filter mkpf
    IF NOT pt_mseg_mkpf IS INITIAL.
      DELETE pt_mseg_mkpf
        WHERE ps_psp_pnr NE space AND
              NOT ps_psp_pnr IN lt_key_pspnr.
    ENDIF.
  ENDIF.


* exclude batch processing                                     "1114541
  If pa_batch Is Initial.                                      "1114541
    Loop At pt_mseg_mkpf assigning <fs_mseg_mkpf>.             "1114541
      <fs_mseg_mkpf>-charg_del = <fs_mseg_mkpf>-charg.         "1114541
      Clear <fs_mseg_mkpf>-charg.                              "1114541
    Endloop.                                                   "1114541
  Endif.                                                       "1114541

  perform key_table_bseg_rbkp_mlit_fill
      using pt_bsim_bkpf
            pw_listmat-ybukrs
            pw_listmat-werk
      changing
          p_update
          lt_key_bseg
          lt_key_mseg
          lt_key_rbkp
          lt_key_mlit.

  describe table lt_key_bseg lines l_rec.

  if not l_rec is initial.
    select
        bukrs belnr gjahr buzei shkzg
        dmbtr wrbtr ktosl bwtar bwkey werks
        nprei peinh hkont ebeln ebelp
        matnr menge lifnr kunnr
        vbeln vbel2 posn2 projk                                "1932440
        from bseg
        into table pt_bseg
        for all entries in lt_key_bseg
        where bukrs = lt_key_bseg-bukrs
          and belnr = lt_key_bseg-belnr
          and gjahr = lt_key_bseg-gjahr
          and buzei = lt_key_bseg-buzei
          and bwtar = pw_listmat-bwtar
          and ktosl = gc_ktosl.
  else.
    refresh pt_bseg.
  endif.

  " filter FI documents                                           " 1230284
  IF NOT lt_key_pspnr IS INITIAL AND NOT pt_bseg IS INITIAL.
     LOOP AT pt_bseg
        INTO wa_pt_bseg
        WHERE projk NE space AND
              NOT projk IN lt_key_pspnr.
       " delete FI documents from lt_key_bseg, pt_bseg
       DELETE lt_key_bseg
         WHERE
           belnr = wa_pt_bseg-belnr AND
           buzei = wa_pt_bseg-buzei AND                        "1519935
           bukrs = wa_pt_bseg-bukrs AND
           gjahr = wa_pt_bseg-gjahr.

       DELETE pt_bseg
         WHERE
           buzei = wa_pt_bseg-buzei AND                        "1519935
           belnr = wa_pt_bseg-belnr AND
           bukrs = wa_pt_bseg-bukrs AND
           gjahr = wa_pt_bseg-gjahr.
     ENDLOOP.
  ENDIF.

  loop at pt_mseg_mkpf assigning <fs_mseg_mkpf>.

    perform is_mmdoc_relevant
      using <fs_mseg_mkpf>
      changing l_isrelevant.
    if l_isrelevant <> gc_true.
      delete pt_mseg_mkpf.
      continue.
    endif.

    if <fs_mseg_mkpf>-cpudt > g_dt_start or                    "1259372
       ( <fs_mseg_mkpf>-cpudt = g_dt_start and
         <fs_mseg_mkpf>-cputm >= g_tm_start ).
      p_update = gc_true.                                      "1259372
    endif.                                                     "1259372

    if <fs_mseg_mkpf>-bustm = gc_bustm_mu00.                   "1247791
      l_sort = 'X'.                                            "1247791
    endif.                                                     "1247791

    if <fs_mseg_mkpf>-lgort = gc_empty_lgort.
      lw_mseg_mkpf = <fs_mseg_mkpf>.
      concatenate lw_mseg_mkpf-mblnr lw_mseg_mkpf-mjahr
          into lw_mseg_mkpf-awkey.
      read table pt_bustm_in transporting no fields            "2046870 start
          with table key bustm = lw_mseg_mkpf-bustm.
      if sy-subrc is initial.
        if lw_mseg_mkpf-werks = lw_mseg_mkpf-umwrk and
           lw_mseg_mkpf-bwtar is not initial and
           lw_mseg_mkpf-bwtar = lw_mseg_mkpf-umbar and
           lw_mseg_mkpf-dmbtr = 0.
*         take lbkum and salk3 from issue_from_sloc line, as transit line
*         contains total values on plant level (not split by valuation type)
          l_zeile = lw_mseg_mkpf-zeile - 1.
          read table pt_mseg_mkpf assigning <fs_temp>
            with key mblnr = lw_mseg_mkpf-mblnr
                     mjahr = lw_mseg_mkpf-mjahr
                     matnr = lw_mseg_mkpf-matnr
                     werks = lw_mseg_mkpf-werks
                     zeile = l_zeile.
          if sy-subrc = 0.
            lw_mseg_mkpf-lbkum = <fs_temp>-lbkum.
            lw_mseg_mkpf-salk3 = <fs_temp>-salk3.
          endif.
        endif.
      endif.                                                   "2046870 end
      append lw_mseg_mkpf to pt_mseg_mkpf_w.
    endif.

    if <fs_mseg_mkpf>-bustm = gc_bustm_ma06 or                 "1251769
       ( <fs_mseg_mkpf>-bustm = gc_bustm_ma05
        and <fs_mseg_mkpf>-xauto = gc_true ).

*     way items (SLoc -> SLoc) processing
      lw_mseg_mkpf = <fs_mseg_mkpf>.
      concatenate lw_mseg_mkpf-mblnr lw_mseg_mkpf-mjahr
          into lw_mseg_mkpf-awkey.
      lw_mseg_mkpf-lgort = gc_empty_lgort.
      if lw_mseg_mkpf-bustm = gc_bustm_ma06.
        if lw_mseg_mkpf-shkzg = gc_shkzg_h.
          lw_mseg_mkpf-shkzg = gc_shkzg_s.
        else.
          lw_mseg_mkpf-shkzg = gc_shkzg_h.
        endif.
      endif.
      append lw_mseg_mkpf to pt_mseg_mkpf_w.
    endif.                                                     "1251769

    read table ppt_156_way_out transporting no fields
        with key bustm = <fs_mseg_mkpf>-bustm.

    if sy-subrc is initial.
      lw_mseg_mkpf = <fs_mseg_mkpf>.

      concatenate lw_mseg_mkpf-mblnr lw_mseg_mkpf-mjahr
          into lw_mseg_mkpf-awkey.
      if lw_mseg_mkpf-shkzg = gc_shkzg_h.
        lw_mseg_mkpf-shkzg = gc_shkzg_s.
      else.
        lw_mseg_mkpf-shkzg = gc_shkzg_h.
      endif.
      lw_mseg_mkpf-lgort = gc_empty_lgort.
*     to be displayed in stock in transit w/o batch            "1825272
      clear lw_mseg_mkpf-charg.
      append lw_mseg_mkpf to pt_mseg_mkpf_w.
    else.
      if <fs_mseg_mkpf>-bustm = gc_bustm_me24.
        lw_mseg_mkpf = <fs_mseg_mkpf>.
        concatenate lw_mseg_mkpf-mblnr lw_mseg_mkpf-mjahr
            into lw_mseg_mkpf-awkey.
        if lw_mseg_mkpf-shkzg = gc_shkzg_h.
          lw_mseg_mkpf-shkzg = gc_shkzg_s.
        else.
          lw_mseg_mkpf-shkzg = gc_shkzg_h.
        endif.
        lw_mseg_mkpf-lgort = gc_empty_lgort.
        append lw_mseg_mkpf to pt_mseg_mkpf_w.
      endif.
    endif.

    if not <fs_mseg_mkpf>-ebeln is initial.
      read table lt_key_ekbe into lw_key_ekbe
          with key ebeln = <fs_mseg_mkpf>-ebeln
                   ebelp = <fs_mseg_mkpf>-ebelp
                   matnr = <fs_mseg_mkpf>-matnr
          binary search.
      if not sy-subrc is initial.
        move: <fs_mseg_mkpf>-ebeln to lw_key_ekbe-ebeln,
              <fs_mseg_mkpf>-ebelp to lw_key_ekbe-ebelp,
              <fs_mseg_mkpf>-matnr to lw_key_ekbe-matnr.
        insert lw_key_ekbe into table lt_key_ekbe.
      endif.
    endif.
  endloop.

  clear lw_mseg_mkpf.

  describe table pt_bseg lines l_rec.

  if not l_rec is initial.

    loop at pt_bseg into lw_bseg
        where not ebeln is initial.
      read table lt_key_ekbe into lw_key_ekbe
          with key ebeln = lw_bseg-ebeln
                   ebelp = lw_bseg-ebelp
                   matnr = lw_bseg-matnr
          binary search.
      if not sy-subrc is initial.
        move: lw_bseg-ebeln to lw_key_ekbe-ebeln,
              lw_bseg-ebelp to lw_key_ekbe-ebelp,
              lw_bseg-matnr to lw_key_ekbe-matnr.
        insert lw_key_ekbe into table lt_key_ekbe.
      endif.
    endloop.

  endif.

  describe table lt_key_ekbe lines l_rec.

  if not l_rec is initial.
    select
        ebeln ebelp vgabe bewtp belnr buzei gjahr
        werks matnr menge shkzg dmbtr
        bwtar bwart
        into table pt_ekbe
        from ekbe
        for all entries in lt_key_ekbe
        where ebeln = lt_key_ekbe-ebeln
          and ebelp = lt_key_ekbe-ebelp
          and bwtar = pw_listmat-bwtar.

    if sy-subrc is initial.
      loop at pt_ekbe into lw_ekbe.
        l_rec = sy-tabix.
        lw_ekbe-awkey = lw_ekbe-belnr.
        lw_ekbe-awkey+10(4) = lw_ekbe-gjahr.
        modify pt_ekbe from lw_ekbe index l_rec.
      endloop.
    endif.
  else.
    refresh pt_ekbe.
  endif.

  describe table pt_ekbe lines l_rec.

  if not l_rec is initial.

    select bukrs belnr gjahr awtyp awkey budat
    from bkpf
    into table pt_bkpf
    for all entries in pt_ekbe
    where awtyp = gc_awtyp_mkpf
      and awkey = pt_ekbe-awkey
      and bukrs = pw_listmat-ybukrs.

*    if sy-subrc is initial.
*        select
*            bukrs belnr gjahr buzei shkzg
*            dmbtr wrbtr ktosl bwtar bwkey werks
*            nprei peinh hkont ebeln ebelp
*            matnr menge lifnr kunnr
*        from bseg
*        into table lt_bseg
*        for all entries in pt_bkpf
*        where bukrs = pw_listmat-ybukrs
*          and belnr = pt_bkpf-belnr
*          and gjahr = pt_bkpf-gjahr
*          and bwtar = pw_listmat-bwtar
*          and ktosl = gc_ktosl.
*    endif.
  endif.

  describe table pt_mseg_mkpf lines l_rec.
  if not l_rec is initial.

    llt_mseg_mkpf[] = pt_mseg_mkpf[].

    perform fill_partners
        tables lt_mseg
               lt_mkpf
        using gc_symbol_1
              pw_budat-high
              llt_mseg_mkpf
        changing pt_kdauf
                  pt_partners_sale
                  pt_ebeln
                  pt_partners_pay1
                  pt_partners_pay2
                  pt_werks_from
                  pt_routers.
*                  pt_routers1.

    refresh llt_mseg_mkpf.
  endif.                                                       "1177749

    if g_bwkrs_cus = gc_bwkrs_cus_1.

      llt_mseg_mkpf_w[] = pt_mseg_mkpf[].

      loop at pt_bsim_bkpf into lw_bsim_bkpf
           where not awkey is initial.

        l_mblnr = lw_bsim_bkpf-awkey(10).
        l_mjahr = lw_bsim_bkpf-awkey+10(4).

        loop at llt_mseg_mkpf_w into lw_mseg_mkpf
            where mblnr = l_mblnr
              and dmbtr = lw_bsim_bkpf-dmbtr
              and menge = lw_bsim_bkpf-menge
              and mjahr = l_mjahr
              and werks = lw_bsim_bkpf-bwkey
              and bwtar = lw_bsim_bkpf-bwtar
              and shkzg = lw_bsim_bkpf-shkzg.

          clear: lw_bsim_mseg_mkpf.

          read table pt_bsim_mseg_mkpf into lw_bsim_mseg_mkpf
              with key mblnr = l_mblnr
                       mjahr = l_mjahr
                       bwkey = lw_mseg_mkpf-werks
                       bwtar = lw_bsim_bkpf-bwtar
                       dmbtr = lw_bsim_bkpf-dmbtr
                       menge = lw_bsim_bkpf-menge
                       shkzg = lw_bsim_bkpf-shkzg
              binary search.                                "#EC *

          if sy-subrc is initial.
            l_rec = sy-tabix.
            lw_bsim_mseg_mkpf-count = 2.
            modify pt_bsim_mseg_mkpf
                from lw_bsim_mseg_mkpf index l_rec.
            continue.
          endif.

          move-corresponding lw_mseg_mkpf to lw_bsim_mseg_mkpf.

          if lw_mseg_mkpf-sobkz eq gc_spec_e.
            lw_bsim_mseg_mkpf-vbeln = lw_mseg_mkpf-kdauf.
            lw_bsim_mseg_mkpf-posnr = lw_mseg_mkpf-kdpos.
          else.
            clear: lw_bsim_mseg_mkpf-vbeln,
                 lw_bsim_mseg_mkpf-posnr.
          endif.

          if lw_mseg_mkpf-sobkz eq gc_spec_q.
            lw_bsim_mseg_mkpf-pspnr = lw_mseg_mkpf-ps_psp_pnr.
          else.
            clear: lw_bsim_mseg_mkpf-pspnr.
          endif.

          lw_bsim_mseg_mkpf-bdatm = lw_mseg_mkpf-budat.
          lw_bsim_mseg_mkpf-bwkey = lw_mseg_mkpf-werks.
          lw_bsim_mseg_mkpf-bwart = lw_mseg_mkpf-bwart.
          lw_bsim_mseg_mkpf-bustm = lw_mseg_mkpf-bustm.
          lw_bsim_mseg_mkpf-umwrk = lw_mseg_mkpf-umwrk.
          lw_bsim_mseg_mkpf-bdatf = lw_bsim_bkpf-budat.

          insert lw_bsim_mseg_mkpf into table pt_bsim_mseg_mkpf.
        endloop.
        if not sy-subrc is initial.
          lw_bseg_used-belnr = lw_bsim_bkpf-belnr.
          lw_bseg_used-buzei = lw_bsim_bkpf-buzei.
          lw_bseg_used-bukrs = lw_bsim_bkpf-bukrs.
          lw_bseg_used-gjahr = lw_bsim_bkpf-gjahr.
          insert lw_bseg_used into table pt_bseg_used.
        endif.
      endloop.

      refresh llt_mseg_mkpf_w.

    elseif g_bwkrs_cus = gc_bwkrs_cus_3.

      llt_mseg_mkpf_b[] = pt_mseg_mkpf[].

      loop at pt_bsim_bkpf into lw_bsim_bkpf
           where not awkey is initial.

        l_mblnr = lw_bsim_bkpf-awkey(10).
        l_mjahr = lw_bsim_bkpf-awkey+10(4).

        loop at llt_mseg_mkpf_b into lw_mseg_mkpf
            where mblnr = l_mblnr
              and dmbtr = lw_bsim_bkpf-dmbtr
              and menge = lw_bsim_bkpf-menge
              and mjahr = l_mjahr
              and bukrs = lw_bsim_bkpf-bwkey
              and bwtar = lw_bsim_bkpf-bwtar
              and shkzg = lw_bsim_bkpf-shkzg.

          read table pt_bsim_mseg_mkpf into lw_bsim_mseg_mkpf
              with key mblnr = l_mblnr
                       mjahr = l_mjahr
                       bwkey = lw_mseg_mkpf-bukrs
                       bwtar = lw_bsim_bkpf-bwtar
                       dmbtr = lw_bsim_bkpf-dmbtr
                       menge = lw_bsim_bkpf-menge
                       shkzg = lw_bsim_bkpf-shkzg
              binary search.                                "#EC *

          if sy-subrc is initial.
            l_rec = sy-tabix.
            lw_bsim_mseg_mkpf-count = 2.
            modify pt_bsim_mseg_mkpf
                from lw_bsim_mseg_mkpf index l_rec.
            continue.
          endif.

          move-corresponding lw_mseg_mkpf to lw_bsim_mseg_mkpf.

          if lw_mseg_mkpf-sobkz eq gc_spec_e.
            lw_bsim_mseg_mkpf-vbeln = lw_mseg_mkpf-kdauf.
            lw_bsim_mseg_mkpf-posnr = lw_mseg_mkpf-kdpos.
          else.
            clear: lw_bsim_mseg_mkpf-vbeln,
                 lw_bsim_mseg_mkpf-posnr.
          endif.

          if lw_mseg_mkpf-sobkz eq gc_spec_q.
            lw_bsim_mseg_mkpf-pspnr = lw_mseg_mkpf-ps_psp_pnr.
          else.
            clear: lw_bsim_mseg_mkpf-pspnr.
          endif.

          lw_bsim_mseg_mkpf-bdatm = lw_mseg_mkpf-budat.
          lw_bsim_mseg_mkpf-bwkey = lw_mseg_mkpf-werks.
          lw_bsim_mseg_mkpf-bwart = lw_mseg_mkpf-bwart.
          lw_bsim_mseg_mkpf-bustm = lw_mseg_mkpf-bustm.
          lw_bsim_mseg_mkpf-umwrk = lw_mseg_mkpf-umwrk.
          lw_bsim_mseg_mkpf-bdatf = lw_bsim_bkpf-budat.

          insert lw_bsim_mseg_mkpf into table pt_bsim_mseg_mkpf.
        endloop.
        if not sy-subrc is initial.
          lw_bseg_used-belnr = lw_bsim_bkpf-belnr.
          lw_bseg_used-buzei = lw_bsim_bkpf-buzei.
          lw_bseg_used-bukrs = lw_bsim_bkpf-bukrs.
          lw_bseg_used-gjahr = lw_bsim_bkpf-gjahr.
          insert lw_bseg_used into table pt_bseg_used.
        endif.
      endloop.
      refresh llt_mseg_mkpf_b.
    endif.

  perform purchase_invoice_processing
      tables lt_key_rbkp
             pt_bkpf_rbkp.

  refresh pt_mlit_mlcrf.
  describe table lt_key_mlit lines l_rec.


*****Begin of SAP Note 2392907 **********************************************************************

  IF NOT l_rec IS INITIAL.

    SELECT
        doc_position~bukrs

        doc_position~belnr
        doc_position~kjahr

        doc_group~poper

        doc_position~matnr
        doc_position~bwkey
        doc_position~bwtar

        doc_position~vbeln
        doc_position~vbelp AS posnr
        doc_position~pspnr

        doc_group~prdif
        doc_group~krdif

        "doc_position~kalnr
        "doc_position~bwmod

    INTO
        CORRESPONDING FIELDS OF TABLE lt_mlit_mlcrf
    FROM
        mlit AS doc_position

    INNER JOIN mlcrf AS doc_group ON (     doc_position~belnr = doc_group~belnr
                                       AND doc_position~kjahr = doc_group~kjahr
                                       AND doc_position~posnr = doc_group~posnr
                                     )
    FOR ALL ENTRIES IN
      lt_key_mlit

    WHERE   doc_position~belnr = lt_key_mlit-belnr
        AND doc_position~kjahr = lt_key_mlit-kjahr
        AND doc_position~matnr = lt_key_mlit-matnr
        AND doc_group~poper = lt_key_mlit-poper
        AND doc_position~bwtar = lt_key_mlit-bwtar
        AND doc_position~bwkey = lt_key_mlit-bwkey
        AND doc_position~bukrs = lt_key_mlit-bukrs
        AND doc_group~curtp = gc_curtp_10

        AND ( doc_position~psart <> 'MI' AND doc_position~psart <> 'MC' ) "check not lw_mlit_mlcrf-psart in gt_vgart_excl.        "1411886
        AND ( doc_group~feldg = 'ABO' OR doc_group~feldg = 'EBEA' OR doc_group~feldg = 'ABMO' OR doc_group~feldg = 'EBMA' OR doc_group~feldg = 'UMO' ).


    IF sy-subrc IS INITIAL.

      FIELD-SYMBOLS:
        <fs_mlit_mlcrf> TYPE type_mlit_mlcrf,
        <fs_bsim_bkpf>  TYPE type_bsim_bkpf,
        <fs_bseg>       TYPE type_bseg.

      DATA:
        lv_belnr_ml TYPE mblnr,
        lv_gjahr_ml TYPE mjahr,
        lv_poper    TYPE poper.


      LOOP AT lt_mlit_mlcrf ASSIGNING <fs_mlit_mlcrf>.
        <fs_mlit_mlcrf>-prdif = <fs_mlit_mlcrf>-prdif + <fs_mlit_mlcrf>-krdif.
        COLLECT <fs_mlit_mlcrf> INTO lt_mlit_mlc.
      ENDLOOP.

      LOOP AT pt_bsim_bkpf ASSIGNING <fs_bsim_bkpf> WHERE awtyp = 'MLHD' AND blart = 'ML'.

        lv_belnr_ml = <fs_bsim_bkpf>-awkey(10).
        lv_gjahr_ml = <fs_bsim_bkpf>-awkey+10(4).
        CONCATENATE '0' <fs_bsim_bkpf>-monat INTO lv_poper.

        LOOP AT
          lt_mlit_mlc
        ASSIGNING
          <fs_mlit_mlcrf>
        WHERE
              matnr = <fs_bsim_bkpf>-matnr
          AND bukrs = <fs_bsim_bkpf>-bukrs
          AND belnr = lv_belnr_ml
          AND kjahr = lv_gjahr_ml
          AND bwkey = <fs_bsim_bkpf>-bwkey
          AND bwtar = <fs_bsim_bkpf>-bwtar
          AND poper = lv_poper
          AND fi_found = abap_false.

          <fs_mlit_mlcrf>-prdif = abs( <fs_mlit_mlcrf>-prdif ).

          CHECK <fs_mlit_mlcrf>-prdif = <fs_bsim_bkpf>-dmbtr.


          "BSEG KEY: buzei belnr hkont bwkey bukrs gjahr bwtar ebelp ebeln
          "There are no fields Vbeln Posnr and Pspnr in BSIM table
          LOOP AT pt_bseg ASSIGNING <fs_bseg>
              WHERE buzei = <fs_bsim_bkpf>-buzei
                AND belnr = <fs_bsim_bkpf>-belnr
                AND bukrs = <fs_bsim_bkpf>-bukrs
                AND gjahr = <fs_bsim_bkpf>-gjahr.
            EXIT.
          ENDLOOP.

          "Check Vbeln and Posnr. Cope values from ML to bsim_bkpf and to bseg if empty
          IF <fs_bseg>-vbel2 IS NOT INITIAL.
            CHECK <fs_bseg>-vbel2 = <fs_mlit_mlcrf>-vbeln.
            CHECK <fs_bseg>-posn2 = <fs_mlit_mlcrf>-posnr.
          ELSE.
            <fs_bseg>-vbel2 = <fs_mlit_mlcrf>-vbeln.
            <fs_bseg>-posn2 = <fs_mlit_mlcrf>-posnr.
          ENDIF.

          <fs_bsim_bkpf>-vbel2 = <fs_mlit_mlcrf>-vbeln.
          <fs_bsim_bkpf>-posn2 = <fs_mlit_mlcrf>-posnr.

          "Check WBS Element. Cope values from ML to bsim_bkpf and to bseg if empty
          IF <fs_bseg>-projk IS NOT INITIAL.
            CHECK <fs_bseg>-projk = <fs_mlit_mlcrf>-pspnr.
          ELSE.
            <fs_bseg>-projk = <fs_mlit_mlcrf>-pspnr.
          ENDIF.

          <fs_bsim_bkpf>-projk = <fs_mlit_mlcrf>-pspnr.

          <fs_mlit_mlcrf>-fi_found = abap_true.

          EXIT.
        ENDLOOP.

      ENDLOOP.

    ENDIF.

  ENDIF.

*****End of SAP Note 2392907 **********************************************************************

  describe table pt_mseg_mkpf lines l_rec.                     "1244941

  if not l_rec is initial.
    gv_acctit_get = abap_true.                                 "1782012
  else.
    refresh pt_acctit.
    clear gv_acctit_get.                                       "1782012
  endif.

  if l_sort is not initial and pa_valch is not initial.        "1363385
*   posting order is important for processing of 340 mov. type "1247791
    sort pt_bsim_bkpf descending by cpudt cputm.               "1247791
  endif.                                                       "1247791

endform.                    " document_items_getting
*&---------------------------------------------------------------------*
*&      Form  key_table_bseg_rbkp_mlit_fill
*&---------------------------------------------------------------------*
form key_table_bseg_rbkp_mlit_fill
    using ppt_bsim_bkpf   type tt_bsim_bkpf
           p_bukrs        type bukrs
           p_werks        type werks_d
    changing
             p_update     type type_1c                         "1259372
             pt_key_bseg  type tt_key_bseg
             pt_key_mseg  type tt_key_mseg
             pt_key_rbkp  type tt_key_rbkp
             pt_key_mlit  type tt_key_mlit.

  data:
      lw_bsim_bkpf type type_bsim_bkpf,
      lw_key_bseg  type type_key_bseg,
      lw_key_mseg  type type_key_mseg,
      lw_key_rbkp  type type_key_rbkp,
      lw_key_mlit  type type_key_mlit,
      l_poper      type poper,
      l_time_stamp type timestampl.                         "#EC NEEDED

  loop at ppt_bsim_bkpf into lw_bsim_bkpf.
    if lw_bsim_bkpf-cpudt > g_dt_start or                      "1259372
       ( lw_bsim_bkpf-cpudt = g_dt_start and
         lw_bsim_bkpf-cputm >= g_tm_start ).
      p_update = gc_true.                                      "1259372
    endif.                                                     "1259372
* complete index table for selection from BSEG table
    move: p_bukrs            to lw_key_bseg-bukrs,
          lw_bsim_bkpf-belnr to lw_key_bseg-belnr,
          lw_bsim_bkpf-buzei to lw_key_bseg-buzei,
          lw_bsim_bkpf-gjahr to lw_key_bseg-gjahr.
    insert lw_key_bseg into table pt_key_bseg.

    check not lw_bsim_bkpf-awkey(10) is initial.

    if lw_bsim_bkpf-awtyp = gc_awtyp_mkpf.
      read table pt_key_mseg transporting no fields
          with key mblnr = lw_bsim_bkpf-awkey(10)
                   mjahr = lw_bsim_bkpf-awkey+10(4)         "#EC *
                   menge = lw_bsim_bkpf-menge
                   werks = p_werks
                   matnr = lw_bsim_bkpf-matnr
*                     bwtar = p_bwtar
          binary search.
      if not sy-subrc is initial.
        move:
             lw_bsim_bkpf-awkey(10)   to lw_key_mseg-mblnr,
             lw_bsim_bkpf-awkey+10(4) to lw_key_mseg-mjahr,
             lw_bsim_bkpf-menge       to lw_key_mseg-menge,
             p_werks                  to lw_key_mseg-werks,
             lw_bsim_bkpf-matnr       to lw_key_mseg-matnr,
             lw_bsim_bkpf-awtyp       to lw_key_mseg-awtyp,
             lw_bsim_bkpf-gjahr       to lw_key_mseg-aworg,
             lw_bsim_bkpf-bwtar       to lw_key_mseg-bwtar.
        insert lw_key_mseg into table pt_key_mseg.
      endif.
    elseif lw_bsim_bkpf-awtyp = gc_awtyp_rmrp.
* complete index table for selection from RBKP table
      read table pt_key_rbkp transporting no fields
          with key bukrs = p_bukrs
                   belnr = lw_bsim_bkpf-belnr
      binary search.

      if not sy-subrc is initial.
        move: p_bukrs            to lw_key_rbkp-bukrs,
              lw_bsim_bkpf-belnr to lw_key_rbkp-belnr.
        insert lw_key_rbkp into table pt_key_rbkp.
      endif.
    elseif lw_bsim_bkpf-awtyp = gc_awtyp_mlhd.
* complete index table for selection from RBKP table
      concatenate '0' lw_bsim_bkpf-monat into l_poper.
      read table pt_key_mlit transporting no fields
          with key belnr = lw_bsim_bkpf-awkey(10)
                   kjahr = lw_bsim_bkpf-awkey+10(4)         "#EC *
                   matnr = lw_bsim_bkpf-matnr
                   poper = l_poper
                   bwtar = lw_bsim_bkpf-bwtar
                   bwkey = lw_bsim_bkpf-bwkey
                   bukrs = p_bukrs
          binary search.

      if not sy-subrc is initial.
        move: lw_bsim_bkpf-awkey(10)   to lw_key_mlit-belnr,
              lw_bsim_bkpf-awkey+10(4) to lw_key_mlit-kjahr,
              lw_bsim_bkpf-matnr       to lw_key_mlit-matnr,
              l_poper                  to lw_key_mlit-poper,
              lw_bsim_bkpf-bwtar       to lw_key_mlit-bwtar,
              lw_bsim_bkpf-bwkey       to lw_key_mlit-bwkey,
              p_bukrs                  to lw_key_mlit-bukrs,
              lw_bsim_bkpf-belnr       to lw_key_mlit-blnrf,
              lw_bsim_bkpf-buzei       to lw_key_mlit-buzei.
        insert lw_key_mlit into table pt_key_mlit.
      endif.
    endif.
  endloop.


endform.                    " key_table_bseg_rbkp_mlit_fill
*&---------------------------------------------------------------------*
*&      Form  fi_items_processing
*&---------------------------------------------------------------------*
form fi_items_processing
    using  ppw_budat           type line of tt_so_budat
           ppa_adcst           type type_1c
           p_lgort             type lgort_d
           pt_bsim_bkpf        type tt_bsim_bkpf
           pt_bkpf_rbkp        type tt_bkpf_rbkp
           pt_mseg_mkpf        type tt_mseg_mkpf_mb            "1384361
           pt_bsim_mseg_mkpf   type tt_bsim_mseg_mkpf
           pt_bseg             type tt_bseg
           pt_acctit           type tt_acctit
           pt_mlit_mlcrf       type tt_mlit_mlcrf
           pt_partners_sale    type tt_partners_sale
           pt_partners_pay1    type tt_partners_pay1
           pt_partners_pay2    type tt_partners_pay2
           pt_werks_from       type tt_werks_from
           pt_routers          type tt_routers
           pt_routers1         type tt_routers1
           pt_bustm_in         type tt_bustm_in
           ppt_matnr_way       type tt_matnr_way
    changing
              p_rec_done        type sytabix
              pt_bseg_used      type tth_key_bseg
              pt_mseg_mkpf_bwtar type tt_mseg_mkpf_mb          "1247791
              pt_bsim_bkpf_bwtar type tt_bsim_bkpf             "1247791
              pt_bwtar_change    type tt_bwtar_change          "1247791
              pt_listmat        type tt_listmat
              pt_mseg_pos       type tt_mseg_pos
              pw_listmat        type type_listmat
              p_rec_cost        type sytabix "2085825
              pw_partcost       type type_cost "2085825
              pt_partcost       type tt_partcost "2085825
              pt_docmat         type tt_docmat
              ppt_transfer      type tt_transfer
              pt_overval        type tt_overvalue.

  data:
      l_mblnr  type mblnr,
      l_mjahr  type mjahr,
      l_mlch_x type type_1c,
      l_mlit_mlcrf_x     TYPE type_1c,                        "2392907
      l_lost             TYPE type_1c,
      l_poper  type poper,
      l_menge  type menge_d,
      l_wrbtr  type wrbtr,
      l_dmbtr  type j_3rfinsum,
      l_amount type type_1c,
      l_werks  type werks_d,                                   "1374130
      l_typedoc    type type_1c,
      l_notrights  type type_1c,
      l_bseg_delete_flag type type_1c,

* table headers
      lw_bseg           type type_bseg,
      lw_mseg_mkpf      type type_mseg_mkpf,
      lw_mseg_pos       type type_mseg_pos,
      lw_mlit_mlcrf     type type_mlit_mlcrf,
      lw_bsim_bkpf      type type_bsim_bkpf,
      lw_bsim_mseg_mkpf type type_bsim_mseg_mkpf,
      lw_mseg_mkpf_tmp  type type_mseg_mkpf,                   "1247791
      lw_bwtar          type type_bwtar_change.                "1247791

  loop at pt_bsim_bkpf into lw_bsim_bkpf
      where bwkey = pw_listmat-bwkey
        and bwtar = pw_listmat-bwtar
        and matnr = pw_listmat-xmatnr.

    l_mblnr = lw_bsim_bkpf-awkey(10).
    l_mjahr = lw_bsim_bkpf-awkey+10(4).

    clear: lw_bsim_mseg_mkpf, lw_mseg_mkpf, lw_mseg_mkpf_tmp.  "1247791

    if lw_bsim_bkpf-blart ne gc_blart_ml.

*mblnr mjahr matnr werks,
      loop at pt_mseg_mkpf into lw_mseg_mkpf
          where mblnr = l_mblnr
            and mjahr = l_mjahr
            and matnr = lw_bsim_bkpf-matnr
            and werks = lw_bsim_bkpf-bwkey
            and bwtar = lw_bsim_bkpf-bwtar
            and dmbtr = lw_bsim_bkpf-dmbtr
            and menge = lw_bsim_bkpf-menge
            and shkzg = lw_bsim_bkpf-shkzg
            and sobkz = pw_listmat-sobkz
            and charg = pw_listmat-charg.

        if lw_bsim_bkpf-blart = gc_blart_pr and                "1433794 start
           lw_mseg_mkpf-budat ne lw_bsim_bkpf-budat.
*         PR document in other period
          continue.
        endif.                                                 "1433794 end

        if lw_mseg_mkpf-sobkz eq gc_spec_e
           and pw_listmat-sobkz eq gc_spec_e.

          if pw_listmat-vbeln ne lw_mseg_mkpf-kdauf
              or pw_listmat-posnr ne lw_mseg_mkpf-kdpos.
            clear lw_mseg_mkpf.
            continue.
          endif.

        elseif lw_mseg_mkpf-sobkz eq gc_spec_q
           and pw_listmat-sobkz eq gc_spec_q.

          if pw_listmat-pspnr ne lw_mseg_mkpf-ps_psp_pnr.
            clear lw_mseg_mkpf.
            continue.
          endif.
        endif.

        If lw_mseg_mkpf-bustm = gc_bustm_mu00.                 "1247791
          lw_mseg_mkpf_tmp = lw_mseg_mkpf.                     "1247791
        Endif.                                                 "1247791
        Check lw_mseg_mkpf-lgort = p_lgort.                    "1247791

        read table pt_mseg_pos transporting no fields
            with key
                mblnr = lw_mseg_mkpf-mblnr
                mjahr = lw_mseg_mkpf-mjahr
                zeile = lw_mseg_mkpf-zeile
                matnr = lw_mseg_mkpf-matnr
                werks = lw_mseg_mkpf-werks
                lgort = lw_mseg_mkpf-lgort
            binary search.

        if sy-subrc is initial.
          clear lw_mseg_mkpf.
          continue.
*                exit.
        endif.

        read table pt_bsim_mseg_mkpf into lw_bsim_mseg_mkpf
            with key mblnr = lw_mseg_mkpf-mblnr
                     mjahr = lw_mseg_mkpf-mjahr
                     bwkey = lw_bsim_bkpf-bwkey
                     bwtar = lw_bsim_bkpf-bwtar
                     dmbtr = lw_bsim_bkpf-dmbtr
                     menge = lw_bsim_bkpf-menge
                     shkzg = lw_bsim_bkpf-shkzg
            binary search.

        exit.
      endloop.
      If lw_mseg_mkpf_tmp is not initial.                      "1247791
        lw_mseg_mkpf = lw_mseg_mkpf_tmp.                       "1247791
      Endif.                                                   "1247791

      if not sy-subrc is initial
          or lw_mseg_mkpf-lgort ne p_lgort.                    "1247791

        read table pt_bsim_mseg_mkpf into lw_bsim_mseg_mkpf
            with key mblnr = l_mblnr
                     mjahr = l_mjahr
                     bwkey = lw_bsim_bkpf-bwkey
                     bwtar = lw_bsim_bkpf-bwtar
                     dmbtr = lw_bsim_bkpf-dmbtr
                     menge = lw_bsim_bkpf-menge
                     shkzg = lw_bsim_bkpf-shkzg
            binary search.

        if sy-subrc is initial.
          if lw_bsim_bkpf-blart = gc_blart_pr and              "1433794 start
             lw_mseg_mkpf-budat ne lw_bsim_bkpf-budat.
*           PR document in other period
            clear lw_bsim_mseg_mkpf.
          endif.                                               "1433794 end
        endif.

      endif.

*    elseif lw_bsim_bkpf-blart eq gc_blart_ml. SAP Note 2392907

    endif.

    clear lw_bseg.
*BSEG KEY: buzei belnr hkont bwkey bukrs gjahr bwtar ebelp ebeln
    loop at pt_bseg into lw_bseg
        where buzei = lw_bsim_bkpf-buzei
          and belnr = lw_bsim_bkpf-belnr
          and bukrs = pw_listmat-ybukrs
          and gjahr = lw_bsim_bkpf-gjahr.
      exit.
    endloop.

    check not lw_bseg-belnr is initial.
    check not lw_bseg-dmbtr is initial.
    check lw_bseg-hkont = pw_listmat-xsaknr.

    clear l_bseg_delete_flag.                                  "1422813
    case pw_listmat-sobkz.
      when gc_spec_v.
        if lw_bseg-kunnr ne pw_listmat-sortl.
          clear lw_bsim_mseg_mkpf.
          continue.
        else.
          l_bseg_delete_flag = 'X'.

        endif.
      when gc_spec_w.
        if lw_bseg-kunnr ne pw_listmat-sortl.
          clear lw_bsim_mseg_mkpf.
          continue.
        else.
          l_bseg_delete_flag = 'X'.
        endif.
      when gc_spec_o.
        if lw_bsim_mseg_mkpf-lifnr ne pw_listmat-sortl.        "1180607
          clear lw_bsim_mseg_mkpf.
          continue.
        else.
          l_bseg_delete_flag = 'X'.
        endif.
      when gc_spec_q.
        if lw_bseg-projk ne pw_listmat-pspnr.
          clear lw_bsim_mseg_mkpf.
          continue.
        else.
          l_bseg_delete_flag = 'X'.
        endif.
    endcase.

    l_typedoc = gc_item_typ_f.
    if lw_mseg_mkpf-bustm = gc_bustm_ma05.                     "1284448
      check lw_mseg_mkpf-xauto is initial.                     "1284448
    endif.                                                     "1284448

    clear: l_menge, l_dmbtr, l_wrbtr.
*overvalue document: invoice, ML documet and so on.
    if lw_bsim_mseg_mkpf is initial.

      if     lw_bseg-bwtar = pw_listmat-bwtar
         and lw_bseg-vbel2 = pw_listmat-vbeln
         and lw_bseg-posn2 = pw_listmat-posnr
         and lw_bseg-projk = pw_listmat-pspnr.

        delete table pt_bseg_used
            with table key belnr = lw_bsim_bkpf-belnr
                      buzei = lw_bsim_bkpf-buzei
                      bukrs = lw_bsim_bkpf-bukrs
                      gjahr = lw_bsim_bkpf-gjahr.

        if sy-subrc is initial.
          p_rec_done = p_rec_done - 1.
        endif.
      else.
          continue.
      endif.

      "ML code is deleted SAP Note 2392907

      perform fi_doc_insert
          using ppw_budat-high
              pw_listmat
              lw_bsim_bkpf
              lw_bseg
              pt_bkpf_rbkp
              ppt_matnr_way
              pw_listmat-vbeln
              pw_listmat-posnr
              pw_listmat-pspnr
              l_typedoc
              l_notrights
              l_lost
              gc_true                                          "1318706
          changing
              pt_overval
              l_dmbtr.
    else.

      if l_bseg_delete_flag is not initial.                    "1422813 start
        delete table pt_bseg_used
         with table key belnr = lw_bsim_bkpf-belnr
                        buzei = lw_bsim_bkpf-buzei
                        bukrs = lw_bsim_bkpf-bukrs
                        gjahr = lw_bsim_bkpf-gjahr.
        if sy-subrc is initial.
          p_rec_done = p_rec_done - 1.
        endif.
      endif.                                                   "1422813 end

      read table pt_bustm_in transporting no fields
          with table key bustm = lw_mseg_mkpf-bustm.

      if sy-subrc is initial
        or lw_mseg_mkpf-bustm = gc_bustm_me23.                 "1861638
        if lw_mseg_mkpf-bustm = gc_bustm_mtra                  "1374130
          or lw_mseg_mkpf-bustm = gc_bustm_me23.               "1861638
          l_werks = lw_mseg_mkpf-werks.                        "1374130
        else.
          l_werks = lw_mseg_mkpf-umwrk.
        endif.
        perform transfer_stock_check_upd
            tables pt_listmat
            using l_werks                                      "1374130
                  pw_listmat
                  pw_listmat-charg                             "1114541
            changing ppt_transfer.
      endif.

      if lw_bsim_mseg_mkpf-count > 1.

        read table pt_mseg_pos transporting no fields
            with key
                mblnr = lw_mseg_mkpf-mblnr
                mjahr = lw_mseg_mkpf-mjahr
                zeile = lw_mseg_mkpf-zeile
                matnr = lw_mseg_mkpf-matnr
                werks = lw_mseg_mkpf-werks
                lgort = lw_mseg_mkpf-lgort
            binary search.

        if sy-subrc is initial.
          clear lw_mseg_mkpf.
*                continue.
        endif.

        check not lw_mseg_mkpf-mblnr is initial
              and ( lw_mseg_mkpf-lgort = p_lgort or            "1247791
                    lw_mseg_mkpf-bustm = gc_bustm_mu00 ).      "1247791

        if lw_mseg_mkpf-bustm = gc_bustm_mu00.                 "1247791
*       valuation type change documents will be processed      "1247791
*       later after all other documents for all listmat entries
          clear lw_bwtar.
          perform fill_bwtar_doc
              using lw_mseg_mkpf
                    pw_listmat
              changing lw_bwtar.
          Insert lw_bwtar Into Table pt_bwtar_change.
          If pa_valch is not initial.                          "1363385
            Insert lw_mseg_mkpf Into Table pt_mseg_mkpf_bwtar.
            Insert lw_bsim_bkpf Into Table pt_bsim_bkpf_bwtar.
*           insert listmat entry with old val. type if necessary
            perform val_type_check_upd
              tables pt_listmat
              using  lw_mseg_mkpf-umwrk
                     pw_listmat
                     pw_listmat-charg
                     lw_mseg_mkpf
              changing
                     ppt_transfer
                     p_rec_cost   "2085825
                     pt_partcost. "2085825
          Endif.                                               "1363385
          continue.                                            "1247791
        endif.                                                 "1247791

        l_amount  = gc_true.
        l_typedoc = gc_item_typ_f.
        clear lw_bsim_bkpf-buzei.

        perform fi_mm_item_insert
            tables pt_docmat
            using ppw_budat
                  pt_overval
                  pt_acctit
                  pt_partners_sale
                  pt_routers
                  pt_routers1
                  pt_partners_pay1
                  pt_partners_pay2
                  pt_werks_from
                  pw_listmat
                  lw_mseg_mkpf
                  lw_bsim_bkpf
                  ppa_adcst
                  l_amount
                  l_typedoc
                  pt_mseg_mkpf                                 "1782012
            changing pt_bwtar_change                           "1247791
                     l_menge l_dmbtr l_wrbtr.

        move-corresponding lw_mseg_mkpf to lw_mseg_pos.
        insert lw_mseg_pos into table pt_mseg_pos.

*            delete lt_mseg_mkpf index l_recm.

      else.

        if lw_bsim_mseg_mkpf-bdatf ne lw_bsim_mseg_mkpf-bdatm.

          perform fi_doc_insert
              using ppw_budat-high
                  pw_listmat
                  lw_bsim_bkpf
                  lw_bseg
                  pt_bkpf_rbkp
                  ppt_matnr_way
                  pw_listmat-vbeln
                  pw_listmat-posnr
                  pw_listmat-pspnr
                  l_typedoc
                  l_notrights
                  l_lost
                  gc_true                                      "1318706
              changing
                  pt_overval
                  l_dmbtr.
        else.

          check not lw_mseg_mkpf is initial
                and ( lw_mseg_mkpf-lgort = p_lgort or          "1247791
                      lw_mseg_mkpf-bustm = gc_bustm_mu00 ).    "1247791

          read table pt_mseg_pos transporting no fields
              with key
                  mblnr = lw_mseg_mkpf-mblnr
                  mjahr = lw_mseg_mkpf-mjahr
                  zeile = lw_mseg_mkpf-zeile
                  matnr = lw_mseg_mkpf-matnr
                  werks = lw_mseg_mkpf-werks
                  lgort = lw_mseg_mkpf-lgort
              binary search.

          check not sy-subrc is initial.

          if lw_mseg_mkpf-bustm = gc_bustm_mu00.               "1247791
*         valuation type change documents will be processed    "1247791
*         later after all other documents for all listmat entries
            clear lw_bwtar.
            perform fill_bwtar_doc
                using lw_mseg_mkpf
                      pw_listmat
                changing lw_bwtar.
            Insert lw_bwtar Into Table pt_bwtar_change.
            If pa_valch is not initial.                        "1363385
              Insert lw_mseg_mkpf Into Table pt_mseg_mkpf_bwtar.
              Insert lw_bsim_bkpf Into Table pt_bsim_bkpf_bwtar.
*             insert listmat entry with old val. type if necessary
              perform val_type_check_upd
                tables pt_listmat
                using  lw_mseg_mkpf-umwrk
                       pw_listmat
                       pw_listmat-charg
                       lw_mseg_mkpf
                changing
                       ppt_transfer
                       p_rec_cost "2085825
                       pt_partcost. "2085825
            Endif.                                             "1363385
            continue.                                          "1247791
          endif.                                               "1247791

          l_amount  = gc_true.
          l_typedoc = gc_item_typ_f.
          perform fi_mm_item_insert
              tables pt_docmat
              using ppw_budat
                    pt_overval
                    pt_acctit
                    pt_partners_sale
                    pt_routers
                    pt_routers1
                    pt_partners_pay1
                    pt_partners_pay2
                    pt_werks_from
                    pw_listmat
                    lw_mseg_mkpf
                    lw_bsim_bkpf
                    ppa_adcst
                    l_amount
                    l_typedoc
                    pt_mseg_mkpf                               "1782012
              changing pt_bwtar_change                         "1247791
                       l_menge l_dmbtr l_wrbtr.

          move-corresponding lw_mseg_mkpf to lw_mseg_pos.
          insert lw_mseg_pos into table pt_mseg_pos.

        endif.
      endif.
    endif.

    if not l_menge is initial or not l_dmbtr is initial.
      perform stock_value_update
          using lw_bsim_bkpf-budat
                lw_bsim_bkpf-cputm                             "1247791
                ppw_budat-high ppw_budat-low
                l_menge l_dmbtr
          changing pw_listmat pw_partcost
                   pt_bwtar_change.                            "1247791
    endif.
  endloop.

endform.                    " fi_items_processing
*&---------------------------------------------------------------------*
*&      Form  mm_items_processing
*&---------------------------------------------------------------------*
form mm_items_processing
    using  ppw_budat           type line of tt_so_budat
           ppa_adcst           type type_1c
           p_lgort             type lgort_d
           pt_mseg_mkpf        type tt_mseg_mkpf_mb            "1384361
           pt_bseg             type tt_bseg1
           pt_bkpf             type tt_bkpf
           pt_ekbe             type tt_ekbe
           pt_acctit           type tt_acctit
           pt_partners_sale    type tt_partners_sale
           pt_partners_pay1    type tt_partners_pay1
           pt_partners_pay2    type tt_partners_pay2
           pt_werks_from       type tt_werks_from
           pt_routers          type tt_routers
           pt_routers1         type tt_routers1
           ppt_156_way_out     type tt_156_way_out
           p_rec_cost          type sytabix
    changing ppt_transfer      type tt_transfer
             pt_listmat        type tt_listmat
             pt_docmat         type tt_docmat
             pt_bwtar_change   type tt_bwtar_change            "1247791
             pt_mseg_pos       type tt_mseg_pos
             pw_listmat        type type_listmat
             pw_partcost       type type_cost
             pt_partcost       type tt_partcost
             pt_overval        type tt_overvalue.

  data:
      l_menge        type menge_d,
      l_wrbtr        type wrbtr,
      l_dmbtr        type j_3rfinsum,
      l_dmbtw        type j_3rfinsum,
      l_amount       type type_1c,
      l_typedoc      type type_1c,
      l_notrights    type type_1c,
      l_ktid         type j_3rmktnrtype, " Type assigment
      l_ktnr         type j_3rmvkntr, " Assignent
      l_item         type j_3rmitems, " Assignent Item
      l_incld        type type_1c,
      l_xbnrfill     type type_1c,
      l_ebeln_done   type type_1c,
      l_charg        type charg_d,                             "1542965
* internal table headers
      lw_mseg_pos    type type_mseg_pos,
      lw_bsim_bkpf   type type_bsim_bkpf,
      lw_mseg_mkpf_1 type type_mseg_mkpf,
      lw_mseg_mkpf   type type_mseg_mkpf,
      lw_mseg_mkpf_m type type_mseg_mkpf,
* inernal tables
      lt_mseg_mkpf_m type tt_mseg_mkpf_m,
      lt_mseg_mkpf   type tt_mseg_mkpf,                        "1384361
      lt_ekbe_done   type tt_ekbe.

 Data: ls_ekpo  Like Line Of gt_ekpo_free,                     "1107249
       free     Type type_1c.                                  "1107249

  lt_mseg_mkpf[] = pt_mseg_mkpf[].                             "1384361

* evaluated movement loop
  loop at lt_mseg_mkpf into lw_mseg_mkpf                       "1384361
      where lgort = p_lgort
        and sobkz = pw_listmat-sobkz
        and bwtar = pw_listmat-bwtar
        and werks = pw_listmat-werk
        and matnr = pw_listmat-xmatnr
        and charg = pw_listmat-charg
        and dmbtr > 0.

    read table pt_mseg_pos transporting no fields
        with key
            mblnr = lw_mseg_mkpf-mblnr
            mjahr = lw_mseg_mkpf-mjahr
            zeile = lw_mseg_mkpf-zeile
            matnr = lw_mseg_mkpf-matnr
            werks = lw_mseg_mkpf-werks
            lgort = lw_mseg_mkpf-lgort
        binary search.

    check not sy-subrc is initial.
    if lw_mseg_mkpf-bustm = gc_bustm_ma05.                     "1284448
      check lw_mseg_mkpf-xauto is initial.                     "1284448
    endif.                                                     "1284448

    case pw_listmat-sobkz.
      when gc_spec_q.
        check pw_listmat-pspnr = lw_mseg_mkpf-ps_psp_pnr.
      when gc_spec_e.
        check pw_listmat-vbeln = lw_mseg_mkpf-kdauf
          and pw_listmat-posnr = lw_mseg_mkpf-kdpos.
      when gc_spec_o.
        check pw_listmat-sortl = lw_mseg_mkpf-lifnr.
      when gc_spec_v.
        check pw_listmat-sortl = lw_mseg_mkpf-kunnr.
      when gc_spec_w.
        check pw_listmat-sortl = lw_mseg_mkpf-kunnr.
    endcase.

    clear: l_menge, l_dmbtr, l_wrbtr, l_amount.

    l_typedoc = gc_item_typ_u.
    l_amount = gc_true.

    perform fi_mm_item_insert
        tables pt_docmat
        using ppw_budat
              pt_overval
              pt_acctit
              pt_partners_sale
              pt_routers
              pt_routers1
              pt_partners_pay1
              pt_partners_pay2
              pt_werks_from
              pw_listmat
              lw_mseg_mkpf
              lw_bsim_bkpf
              ppa_adcst
              l_amount
              l_typedoc
              pt_mseg_mkpf                                     "1782012
        changing pt_bwtar_change                               "1247791
                 l_menge l_dmbtr l_wrbtr.

    move-corresponding lw_mseg_mkpf to lw_mseg_pos.
    insert lw_mseg_pos into table pt_mseg_pos.

    perform stock_value_update
        using lw_mseg_mkpf-budat
              lw_mseg_mkpf-cputm                               "1247791
              ppw_budat-high ppw_budat-low
              l_menge l_dmbtr
        changing pw_listmat pw_partcost
                 pt_bwtar_change.                              "1247791
* value updating
    modify pt_partcost from pw_partcost index p_rec_cost.

  endloop.

  if not ( pw_listmat-lgort ne gc_str_phantom or
        pw_listmat-sobkz = gc_spec_w or
        pw_listmat-sobkz = gc_spec_v or
        pw_listmat-sobkz = gc_spec_o ).
    exit.
  endif.

* unvalued movement loop
  loop at lt_mseg_mkpf into lw_mseg_mkpf                       "1384361
      where lgort = p_lgort
        and sobkz = pw_listmat-sobkz
        and bwtar = pw_listmat-bwtar
        and werks = pw_listmat-werk
        and matnr = pw_listmat-xmatnr
        and charg = pw_listmat-charg
        and dmbtr = 0.

    check lw_mseg_mkpf-budat ge ppw_budat-low.

    if lw_mseg_mkpf-sobkz = gc_spec_v
        or lw_mseg_mkpf-sobkz = gc_spec_w.
      check lw_mseg_mkpf-kunnr = pw_listmat-sortl.
    endif.

    if lw_mseg_mkpf-sobkz = gc_spec_o.
      check lw_mseg_mkpf-lifnr = pw_listmat-sortl.
    endif.

    if pw_listmat-lgort = gc_str_phantom.
      check lw_mseg_mkpf-lgort is initial
          and lw_mseg_mkpf-werks = pw_listmat-werk.
    endif.

    if pw_listmat-pspnr ne sp_pspnr
        and pw_listmat-pspnr ne lw_mseg_mkpf-ps_psp_pnr.
      clear lw_mseg_mkpf.
      continue.
    endif.

    if pw_listmat-posnr ne sp_posnr
        and ( pw_listmat-posnr ne lw_mseg_mkpf-kdpos
         or pw_listmat-vbeln ne lw_mseg_mkpf-kdauf ) .
      clear lw_mseg_mkpf.
      continue.
    endif.

    if lw_mseg_mkpf-bustm = gc_bustm_ma05.                     "1251769
      check lw_mseg_mkpf-xauto is initial.                     "1251769
    endif.                                                     "1251769

    check not lw_mseg_mkpf-mblnr is initial.

  "  if lw_mseg_mkpf-separ is initial
  "      or lw_mseg_mkpf-ebeln is initial.
      perform fi_way_doc_linked_getting
          using pt_bkpf
                pt_bseg
                pt_ekbe
                lw_mseg_mkpf
                pw_listmat-ybukrs
                pw_listmat-xmatnr
                pw_listmat-werk
          changing lw_mseg_mkpf_1
                   l_typedoc.
      clear lw_mseg_mkpf_1-dmbtr.
*    else.
*      l_typedoc = gc_item_typ_u.
*      move: gc_doc_phantom  to lw_mseg_mkpf_1-belnr,
*            gc_str_phantom  to lw_mseg_mkpf_1-mjahr.
*      if not lw_mseg_mkpf-ebeln is initial.
*        read table lt_ekbe_done transporting no fields
*            with key ebeln = lw_mseg_mkpf-ebeln
*                     ebelp = lw_mseg_mkpf-ebelp.
*        if not sy-subrc is initial.
*          l_ebeln_done = gc_true.
*          perform separate_fi_docs_getting
*              using pt_mseg_mkpf
*                    pt_bkpf
*                    pt_bseg
*                    lw_mseg_mkpf
*                    pw_listmat-ybukrs
*                    pw_listmat-xmatnr
*                    pw_listmat-werk
*                    ppw_budat-low
*              changing
*                    lt_mseg_mkpf_m[]
*                    lt_ekbe_done.
*        endif.
*      endif.
*    endif.

    clear: l_notrights, l_ktid, l_ktnr, l_item, l_incld.

    perform kotierungs_findung
        using pw_listmat-sobkz
              lw_mseg_mkpf
        changing l_ktid l_ktnr l_item.

    clear: l_menge, l_dmbtr, l_wrbtr.
    l_typedoc = gc_item_typ_u.

    l_charg = pw_listmat-charg.                                "1542965
    read table ppt_156_way_out transporting no fields
        with key bustm = lw_mseg_mkpf-bustm.

    if sy-subrc is initial.
      if lw_mseg_mkpf-bustm = gc_bustm_meu1 or                 "1542965 start
         lw_mseg_mkpf-bustm = gc_bustm_meu3 or
         lw_mseg_mkpf-bustm = gc_bustm_meu4.
*       to be displayed in stock in transit w/o batch
        clear l_charg.
      endif.                                                   "1542965 end
      perform transfer_stock_check_upd
          tables pt_listmat
          using pw_listmat-werk
                pw_listmat
                l_charg                                        "1542965
          changing ppt_transfer.
    else.                                                      "1112509
      if lw_mseg_mkpf-bustm = gc_bustm_mau2 or                 "1112509
         lw_mseg_mkpf-bustm = gc_bustm_ma05 or                 "1251769
         lw_mseg_mkpf-bustm = gc_bustm_ma06.                   "1251769
        perform transfer_stock_check_upd                       "1112509
            tables pt_listmat                                  "1112509
            using pw_listmat-werk                              "1112509
                  pw_listmat                                   "1112509
                  l_charg                                      "1542965
            changing ppt_transfer.                             "1112509
      endif.                                                   "1112509
    endif.

*  Check for free shipment                                     "1107249
   Clear: free, ls_ekpo.                                       "1107249
   If lw_mseg_mkpf-ebeln is not initial.                       "1107249
     Read table gt_ekpo_free Into ls_ekpo With Key             "1107249
        ebeln = lw_mseg_mkpf-ebeln
        ebelp = lw_mseg_mkpf-ebelp.
     IF sy-subrc NE 0.                                         "1107249
       Select Single * From ekpo Into ls_ekpo                  "1107249
         Where ebeln = lw_mseg_mkpf-ebeln
           And ebelp = lw_mseg_mkpf-ebelp.
       If sy-subrc EQ 0.                                       "1107249
         Insert ls_ekpo Into Table gt_ekpo_free.               "1107249
       Endif.                                                  "1107249
     ENDIF.                                                    "1107249
     IF ls_ekpo is not initial.                                "1107249
*      like field UMSON in form lesen_beleg(MEPO) (exclude
*      item categories Consignment =2 and Stock transfer =7)
       IF ls_ekpo-repos EQ space AND ls_ekpo-pstyp NE '2'      "1107249
                                 AND ls_ekpo-pstyp NE '7'.
         free = gc_true.                                       "1107249
       ENDIF.                                                  "1107249
     Endif.                                                    "1107249
   Endif.                                                      "1107249

  "  if lw_mseg_mkpf-separ is initial
  "      or lw_mseg_mkpf-ebeln is initial.
   if lw_mseg_mkpf-ebeln is initial or free is initial.        "1107249

      perform quantity_sum_mseg_doc_getting
          using pt_acctit
                lw_mseg_mkpf
                pw_listmat
                lw_mseg_mkpf-budat
                pt_overval
                gc_true                                        "1088124
                pt_mseg_mkpf                                   "1782012
          changing pt_bwtar_change                             "1247791
                   l_menge
                   l_dmbtr
                   l_wrbtr
                   l_incld.

      "if not lw_mseg_mkpf-separ is initial
      "    or lw_mseg_mkpf_1-belnr is initial.
      "  move: gc_doc_phantom  to lw_mseg_mkpf-belnr.
      "else.
        move: lw_mseg_mkpf_1-belnr to lw_mseg_mkpf-belnr.
      "endif.

      l_xbnrfill = gc_true.

      clear lw_bsim_bkpf.

      lw_bsim_bkpf-gjahr = lw_mseg_mkpf-mjahr.
      lw_bsim_bkpf-xblnr = lw_mseg_mkpf-xblnr.
      lw_bsim_bkpf-belnr = lw_mseg_mkpf-belnr.
      lw_bsim_bkpf-buzei = lw_mseg_mkpf-buzei.
      lw_bsim_bkpf-waers = space.
      lw_bsim_bkpf-bvorg = space.

      perform mat_doc_insert
          tables pt_docmat
          using ppw_budat-high ppw_budat-low
                pt_partners_sale
                pt_routers
                pt_routers1
                pt_partners_pay1
                pt_partners_pay2
                pt_werks_from
                lw_mseg_mkpf
                lw_bsim_bkpf
                pw_listmat
                l_menge
                l_dmbtr
                l_wrbtr
                l_ktid
                l_ktnr
                l_item
                l_typedoc
                l_xbnrfill
                ppa_adcst
                l_notrights
                l_incld.

    else.                                                      "1098693

      l_xbnrfill = gc_true.                                    "1098693
      clear: lw_mseg_mkpf-buzei, lw_bsim_bkpf.                 "1098693
      move: gc_doc_phantom     to lw_mseg_mkpf-belnr.          "1098693
      if lw_mseg_mkpf-shkzg = gc_shkzg_s.                      "1098693
        l_menge = lw_mseg_mkpf-menge.                          "1098693
      else.                                                    "1098693
        l_menge = - lw_mseg_mkpf-menge.                        "1098693
      endif.                                                   "1098693

      lw_bsim_bkpf-gjahr = lw_mseg_mkpf-mjahr.                 "1098693
      lw_bsim_bkpf-xblnr = lw_mseg_mkpf-xblnr.                 "1098693
      lw_bsim_bkpf-belnr = lw_mseg_mkpf-belnr.                 "1098693
      lw_bsim_bkpf-buzei = lw_mseg_mkpf-buzei.                 "1098693
      lw_bsim_bkpf-waers = space.                              "1098693
      lw_bsim_bkpf-bvorg = space.                              "1098693

      perform mat_doc_insert                                   "1098693
          tables pt_docmat
          using ppw_budat-high ppw_budat-low
                pt_partners_sale
                pt_routers
                pt_routers1
                pt_partners_pay1
                pt_partners_pay2
                pt_werks_from
                lw_mseg_mkpf
                lw_bsim_bkpf
                pw_listmat
                l_menge
                gc_dmshb_zero
                l_wrbtr
                l_ktid
                l_ktnr
                l_item
                l_typedoc
                l_xbnrfill
                ppa_adcst
                l_notrights
                l_incld.
*
** write second document with cost
*      if not l_ebeln_done is initial.
*
*        clear: l_ebeln_done, l_xbnrfill.
*        l_typedoc = gc_item_typ_f.
*
*        loop at lt_mseg_mkpf_m into lw_mseg_mkpf_m.
*
*          perform kotierungs_findung
*              using pw_listmat-sobkz
*                    lw_mseg_mkpf_m
*              changing l_ktid l_ktnr l_item.
*
** write second document with cost
*          clear: l_ebeln_done,
*              lw_mseg_mkpf_m-mblnr, lw_mseg_mkpf_m-zeile,
*              lw_mseg_mkpf_m-bwart, lw_mseg_mkpf_m-mjahr.
*          l_dmbtr = l_dmbtr + lw_mseg_mkpf_m-dmbtr.
*          l_wrbtr = l_wrbtr + lw_mseg_mkpf_m-wrbtr.
*          l_dmbtw = lw_mseg_mkpf_m-dmbtr.
*
*          check not l_dmbtr is initial.
*
*          lw_bsim_bkpf-gjahr = lw_mseg_mkpf_m-mjahr.
*          lw_bsim_bkpf-xblnr = lw_mseg_mkpf_m-xblnr.
*          lw_bsim_bkpf-belnr = lw_mseg_mkpf_m-belnr.
*          lw_bsim_bkpf-buzei = lw_mseg_mkpf_m-buzei.
*          lw_bsim_bkpf-waers = space.
*          lw_bsim_bkpf-bvorg = space.
*
*          perform mat_doc_insert
*              tables pt_docmat
*              using ppw_budat-high ppw_budat-low
*                    pt_partners_sale
*                    pt_routers
*                    pt_routers1
*                    pt_partners_pay1
*                    pt_partners_pay2
*                    pt_werks_from
*                    lw_mseg_mkpf_m
*                    lw_bsim_bkpf
*                    pw_listmat
*                    gc_mensh_zero
*                    l_dmbtw
*                    space
*                    l_ktid
*                    l_ktnr
*                    l_item
*                    l_typedoc
*                    l_xbnrfill
*                    ppa_adcst
*                    l_notrights
*                    l_incld.
*
*        endloop.
*      endif.
    endif.                                                     "1098693

    perform stock_value_update
        using lw_mseg_mkpf-budat
              lw_mseg_mkpf-cputm                               "1247791
              ppw_budat-high ppw_budat-low
              l_menge l_dmbtr
        changing pw_listmat pw_partcost
                 pt_bwtar_change.                              "1247791

*   value updating                                             "1088124
    modify pt_partcost from pw_partcost index p_rec_cost.      "1088124

  endloop.

endform.                    " mm_items_processing
*&---------------------------------------------------------------------*
*&      Form  way_items_processing
*&---------------------------------------------------------------------*
form way_items_processing
    using ppw_budat          type line of tt_so_budat
          ppa_adcst          type type_1c
          pt_mseg_mkpf_w     type tt_mseg_mkpf_s
          pt_ekbe            type tt_ekbe
          pt_bkpf            type tt_bkpf
          pt_bseg1           type tt_bseg1
          pt_acctit          type tt_acctit                    "1703869
          ppt_156_way_out    type tt_156_way_out               "1114541
          p_rec_cost         type sytabix
          pt_mseg_mkpf       type tt_mseg_mkpf_mb              "1782012
      changing
               ppt_overval   type tt_overvalue
               pw_listmat    type type_listmat
               pw_partcost   type type_cost
               pt_partcost   type tt_partcost
               pp_docmat     type tt_docmat
               pt_listmat    type tt_listmat                   "1114541
               ppt_transfer  type tt_transfer.                 "1114541

  data:
*    l_error       type type_1c,
      l_ebeln_done  type type_1c,
      l_notrights   type type_1c,
      l_xbnrfill    type type_1c,
      l_typedoc     type type_1c,
      l_ktid        type j_3rmktnrtype, " Type assigment
      l_ktnr        type j_3rmvkntr, " Assignent
      l_item        type j_3rmitems, " Assignent Item
      l_incld       type type_1c,
      l_dmbtr       type j_3rfinsum,
      l_dmbtw       type j_3rfinsum,
      l_wrbtr       type wrbtr,
      l_menge       type menge_d,

* internal table headers
      lw_mseg_mkpf1 type type_mseg_mkpf,
      lw_mseg_mkpf  type type_mseg_mkpf,
      lw_bsim_bkpf  type type_bsim_bkpf,
* internal tables
      lt_partners_sale type tt_partners_sale,
      lt_partners_pay1 type tt_partners_pay1,
      lt_partners_pay2 type tt_partners_pay2,
      lt_werks_from    type tt_werks_from,
      lt_routers       type tt_routers,
      lt_routers1      type tt_routers1,
      lt_mseg_mkpf1 type tt_mseg_mkpf_m,
      lt_bwtar_change  type tt_bwtar_change,     "dummy        "1247791
      lt_ekbe_done  type tt_ekbe.

 Data: ls_ekpo  Like Line Of gt_ekpo_free,                     "1107249
       free     Type type_1c.                                  "1107249

  loop at pt_mseg_mkpf_w into lw_mseg_mkpf.

    check lw_mseg_mkpf-budat ge ppw_budat-low.
    check lw_mseg_mkpf-matnr = pw_listmat-xmatnr.
    check lw_mseg_mkpf-sobkz = pw_listmat-sobkz.
    check lw_mseg_mkpf-bwtar = pw_listmat-bwtar.
    If lw_mseg_mkpf-charg Is Initial                           "1114541
              And pw_listmat-charg Is Not Initial.             "1114541
      Read Table ppt_156_way_out transporting no fields        "1114541
        with key bustm = lw_mseg_mkpf-bustm.                   "1114541
      If sy-subrc Is Initial Or ( sy-subrc Is Not Initial      "1114541
                And ( lw_mseg_mkpf-bustm = gc_bustm_mau2       "1114541
                   Or lw_mseg_mkpf-bustm = gc_bustm_mauq       "1161196
                   Or lw_mseg_mkpf-bustm = gc_bustm_maue       "1161196
                   Or lw_mseg_mkpf-bustm = gc_bustm_mau7       "1825272
                   Or lw_mseg_mkpf-bustm = gc_bustm_mau8 ) ).  "1161196
        perform transfer_stock_check_upd                       "1114541
            tables pt_listmat                                  "1114541
            using pw_listmat-werk                              "1114541
                  pw_listmat                                   "1114541
                  lw_mseg_mkpf-charg                           "1114541
            changing ppt_transfer.                             "1114541
      Endif.                                                   "1114541
    Endif.                                                     "1114541
    check lw_mseg_mkpf-charg = pw_listmat-charg.               "1114541
    check lw_mseg_mkpf-kzvbr is initial
       Or ( lw_mseg_mkpf-kzvbr = gc_kzvbr_p And                "1161196
            lw_mseg_mkpf-bustm = gc_bustm_mau8 )               "1161196
       Or ( lw_mseg_mkpf-kzvbr = gc_kzvbr_e And                "1825272
            lw_mseg_mkpf-bustm = gc_bustm_mau7 ).              "1825272
    check lw_mseg_mkpf-bustm ne gc_bustm_me11.

*story document header
*if FI document date not equally MM document date
    if pw_listmat-lgort = gc_str_phantom.
      check lw_mseg_mkpf-lgort is initial
          and lw_mseg_mkpf-werks = pw_listmat-werk.
    else.
      check lw_mseg_mkpf-lgort = pw_listmat-lgort.
    endif.

    if pw_listmat-pspnr ne sp_pspnr.
      check pw_listmat-pspnr = lw_mseg_mkpf-ps_psp_pnr.
    endif.

    if pw_listmat-posnr ne sp_posnr.
      check ( pw_listmat-posnr = lw_mseg_mkpf-kdpos
       and pw_listmat-vbeln = lw_mseg_mkpf-kdauf ).
    endif.

    move lw_mseg_mkpf to lw_mseg_mkpf1.

    check not lw_mseg_mkpf-mblnr is initial.

    clear l_ebeln_done.
    refresh lt_mseg_mkpf1.

  "  if lw_mseg_mkpf-separ is initial
  "      or lw_mseg_mkpf-ebeln is initial.
      perform fi_way_doc_linked_getting
          using pt_bkpf
                pt_bseg1
                pt_ekbe
                lw_mseg_mkpf
                pw_listmat-ybukrs
                pw_listmat-xmatnr
                pw_listmat-werk
          changing lw_mseg_mkpf1
                   l_typedoc.
*    else.
*      l_typedoc = gc_item_typ_u.
*      move: gc_doc_phantom  to lw_mseg_mkpf1-belnr,
*            gc_str_phantom  to lw_mseg_mkpf1-mjahr.
*      if not lw_mseg_mkpf-ebeln is initial.
*        read table lt_ekbe_done transporting no fields
*            with key ebeln = lw_mseg_mkpf-ebeln
*                     ebelp = lw_mseg_mkpf-ebelp.
*        if not sy-subrc is initial.
*          l_ebeln_done = gc_true.
*          perform separate_fi_docs_getting
*              using pt_mseg_mkpf_w
*                    pt_bkpf
*                    pt_bseg1
*                    lw_mseg_mkpf
*                    pw_listmat-ybukrs
*                    pw_listmat-xmatnr
*                    pw_listmat-werk
*                    ppw_budat-low
*              changing
*                    lt_mseg_mkpf1[]
*                    lt_ekbe_done.
*        endif.
*      endif.
*    endif.

    clear: l_ktid, l_ktnr, l_item, l_incld.

    perform kotierungs_findung
        using pw_listmat-sobkz
              lw_mseg_mkpf
          changing l_ktid l_ktnr l_item.

    clear: l_menge, l_dmbtr, l_wrbtr.

*   Check for free shipment                                    "1107249
    Clear: free, ls_ekpo.                                      "1107249
    If lw_mseg_mkpf-ebeln is not initial.                      "1107249
      Read table gt_ekpo_free Into ls_ekpo With Key            "1107249
         ebeln = lw_mseg_mkpf-ebeln
         ebelp = lw_mseg_mkpf-ebelp.
      IF sy-subrc NE 0.                                        "1107249
        Select Single * From ekpo Into ls_ekpo                 "1107249
          Where ebeln = lw_mseg_mkpf-ebeln
            And ebelp = lw_mseg_mkpf-ebelp.
        If sy-subrc EQ 0.                                      "1107249
          Insert ls_ekpo Into Table gt_ekpo_free.              "1107249
        Endif.                                                 "1107249
      ENDIF.                                                   "1107249
      IF ls_ekpo is not initial.                               "1107249
*       like field UMSON in form lesen_beleg(MEPO) (exclude
*       item categories Consignment =2 and Stock transfer =7)
        IF ls_ekpo-repos EQ space AND ls_ekpo-pstyp NE '2'     "1107249
                                  AND ls_ekpo-pstyp NE '7'.
          free = gc_true.                                      "1107249
        ENDIF.                                                 "1107249
      Endif.                                                   "1107249
    Endif.                                                     "1107249

  "  if lw_mseg_mkpf-separ is initial
  "      or lw_mseg_mkpf-ebeln is initial.
    if lw_mseg_mkpf-ebeln is initial or free is initial.       "1107249

      lw_mseg_mkpf-wrbtr = 0.

      perform quantity_sum_mseg_doc_getting
          using pt_acctit                                      "1703869
                lw_mseg_mkpf
                pw_listmat
                lw_mseg_mkpf-budat
                ppt_overval
                gc_false                                       "1088124
                pt_mseg_mkpf                                   "1782012
          changing lt_bwtar_change                             "1247791
                   l_menge l_dmbtr l_wrbtr l_incld.

      if l_menge is initial and
          l_dmbtr is initial and
          l_wrbtr is initial.
        continue.
      endif.

      move: lw_mseg_mkpf1-dmbtr to lw_mseg_mkpf-dmbtr,
            lw_mseg_mkpf1-belnr to lw_mseg_mkpf-belnr,
            lw_mseg_mkpf1-buzei to lw_mseg_mkpf-buzei.
      if lw_mseg_mkpf-belnr is initial
          and l_typedoc = gc_item_typ_u.
        move: gc_doc_phantom to lw_mseg_mkpf-belnr.
      endif.

      clear lw_bsim_bkpf.

      l_xbnrfill = gc_true.

      lw_bsim_bkpf-gjahr = lw_mseg_mkpf-mjahr.
      lw_bsim_bkpf-xblnr = lw_mseg_mkpf-xblnr.
      lw_bsim_bkpf-belnr = lw_mseg_mkpf-belnr.
      lw_bsim_bkpf-buzei = lw_mseg_mkpf-buzei.
      lw_bsim_bkpf-waers = space.
      lw_bsim_bkpf-bvorg = space.

      perform mat_doc_insert
          tables pp_docmat
          using ppw_budat-high ppw_budat-low
              lt_partners_sale
              lt_routers
              lt_routers1
              lt_partners_pay1
              lt_partners_pay2
              lt_werks_from
              lw_mseg_mkpf
              lw_bsim_bkpf
              pw_listmat
              l_menge
              l_dmbtr
              l_wrbtr
              l_ktid
              l_ktnr
              l_item
              l_typedoc
              l_xbnrfill
              ppa_adcst
              l_notrights
              l_incld.

      perform stock_value_update
          using lw_mseg_mkpf-budat
                lw_mseg_mkpf-cputm                             "1247791
                ppw_budat-high ppw_budat-low
                l_menge l_dmbtr
          changing pw_listmat pw_partcost
                   lt_bwtar_change.                            "1247791

    else.                                                      "1107249

      l_xbnrfill  = gc_true.                                   "1107249
      clear: lw_mseg_mkpf-buzei, l_wrbtr.                      "1107249
      move: gc_doc_phantom to lw_mseg_mkpf-belnr.              "1107249
      if lw_mseg_mkpf-shkzg = gc_shkzg_s.                      "1107249
        l_menge = lw_mseg_mkpf-menge.                          "1107249
      else.                                                    "1107249
        l_menge = - lw_mseg_mkpf-menge.                        "1107249
      endif.                                                   "1107249

      clear lw_bsim_bkpf.                                      "1107249
      lw_bsim_bkpf-gjahr = lw_mseg_mkpf-mjahr.                 "1107249
      lw_bsim_bkpf-xblnr = lw_mseg_mkpf-xblnr.                 "1107249
      lw_bsim_bkpf-belnr = lw_mseg_mkpf-belnr.                 "1107249
      lw_bsim_bkpf-buzei = lw_mseg_mkpf-buzei.                 "1107249
      lw_bsim_bkpf-waers = space.                              "1107249
      lw_bsim_bkpf-bvorg = space.                              "1107249

      perform mat_doc_insert                                   "1107249
          tables pp_docmat
          using ppw_budat-high ppw_budat-low
              lt_partners_sale
              lt_routers
              lt_routers1
              lt_partners_pay1
              lt_partners_pay2
              lt_werks_from
              lw_mseg_mkpf
              lw_bsim_bkpf
              pw_listmat
              l_menge
              gc_dmshb_zero
              l_wrbtr
              l_ktid
              l_ktnr
              l_item
              l_typedoc
              l_xbnrfill
              ppa_adcst
              l_notrights
              l_incld.

      perform stock_value_update                               "1107249
          using lw_mseg_mkpf-budat
                lw_mseg_mkpf-cputm                             "1247791
                ppw_budat-high ppw_budat-low
                l_menge gc_dmshb_zero
          changing pw_listmat pw_partcost
                   lt_bwtar_change.                            "1247791

*      if not l_ebeln_done is initial.
*
*        clear: l_ebeln_done, l_xbnrfill.
*        l_typedoc = gc_item_typ_f.
*
*        loop at lt_mseg_mkpf1 into lw_mseg_mkpf1.
*
*          clear: l_ebeln_done,
*              lw_mseg_mkpf1-mblnr, lw_mseg_mkpf1-zeile,
*              lw_mseg_mkpf1-bwart, lw_mseg_mkpf1-mjahr.
*
*          if lw_mseg_mkpf1-shkzg = gc_shkzg_s.
*            l_dmbtw = lw_mseg_mkpf1-dmbtr.
*            l_dmbtr = l_dmbtr + lw_mseg_mkpf1-dmbtr.
*            l_wrbtr = l_wrbtr + lw_mseg_mkpf1-wrbtr.
*          else.
*            l_dmbtr = l_dmbtr - lw_mseg_mkpf1-dmbtr.
*            l_wrbtr = l_wrbtr - lw_mseg_mkpf1-wrbtr.
*            l_dmbtw = - lw_mseg_mkpf1-dmbtr.
*          endif.
*
*          clear lw_bsim_bkpf.
*
*          lw_bsim_bkpf-gjahr = lw_mseg_mkpf1-mjahr.
*          lw_bsim_bkpf-xblnr = lw_mseg_mkpf1-xblnr.
*          lw_bsim_bkpf-belnr = lw_mseg_mkpf1-belnr.
*          lw_bsim_bkpf-buzei = lw_mseg_mkpf1-buzei.
*          lw_bsim_bkpf-waers = space.
*          lw_bsim_bkpf-bvorg = space.
*
*          perform mat_doc_insert
*              tables pp_docmat
*              using ppw_budat-high ppw_budat-low
*                  lt_partners_sale
*                  lt_routers
*                  lt_routers1
*                  lt_partners_pay1
*                  lt_partners_pay2
*                  lt_werks_from
*                  lw_mseg_mkpf1
*                  lw_bsim_bkpf
*                  pw_listmat
*                  gc_mensh_zero
*                  l_dmbtw
*                  lw_mseg_mkpf1-wrbtr
*                  l_ktid
*                  l_ktnr
*                  l_item
*                  l_typedoc
*                  l_xbnrfill
*                  ppa_adcst
*                  l_notrights
*                  l_incld.
*
*          perform stock_value_update
*              using lw_mseg_mkpf1-budat
*                    ppw_budat-high ppw_budat-low
*                    gc_mensh_zero l_dmbtw
*              changing pw_listmat pw_partcost.
*        endloop.
*      endif.
    endif.                                                     "1107249

    modify pt_partcost from pw_partcost index p_rec_cost.

  endloop.

endform.                    " way_items_processing
*&---------------------------------------------------------------------*
*&      Form  unclear_items_insert
*&---------------------------------------------------------------------*
form unclear_items_insert
    using p_budat_high    type budat
          p_budat_low     type budat
          pt_listmat      type tts_listmat
          pt_bseg         type tt_bseg
          pt_bkpf_rbkp    type tt_bkpf_rbkp
          pt_mlit_mlcrf   type tt_mlit_mlcrf                   "1318706
          ppt_matnr_way   type tt_matnr_way
          pt_bseg_used    type tth_key_bseg
          pt_bsim_bkpf    type tt_bsim_bkpf
    changing ppt_partcost type tt_partcost
             ppt_overval  type tt_overvalue.

  data:
      l_typedoc    type type_1c,
      l_lost       type type_1c,
      l_notrights  type type_1c,
      l_dmbtr      type j_3rfinsum,
      l_bannerok   type type_1c,                               "1318706
      l_mblnr      type mblnr,                                 "1318706
      l_mjahr      type mjahr,                                 "1318706
      l_mlch_x     type type_1c,                               "1318706
      l_poper      type poper,                                 "1318706
      lw_mlit_mlcrf  type type_mlit_mlcrf.                     "1318706

  field-symbols:
      <fs_bseg>      type type_bseg,
      <fs_bsim_bkpf> type type_bsim_bkpf,
      <fs_partcost>  type type_cost,
      <fs_listmat>   type type_listmat.

  l_typedoc = gc_item_typ_f.
  l_lost    = gc_true.

  loop at pt_bsim_bkpf assigning <fs_bsim_bkpf>.

    l_mblnr = <fs_bsim_bkpf>-awkey(10).                        "1318706
    l_mjahr = <fs_bsim_bkpf>-awkey+10(4).                      "1318706

    read table pt_bseg_used transporting no fields
        with table key belnr = <fs_bsim_bkpf>-belnr
                 buzei = <fs_bsim_bkpf>-buzei
                 bukrs = <fs_bsim_bkpf>-bukrs
                 gjahr = <fs_bsim_bkpf>-gjahr.

    if not sy-subrc is initial.
      continue.
    endif.

    read table pt_bseg assigning <fs_bseg>
        with key buzei = <fs_bsim_bkpf>-buzei
                 belnr = <fs_bsim_bkpf>-belnr
                 bukrs = <fs_bsim_bkpf>-bukrs
                 gjahr = <fs_bsim_bkpf>-gjahr
        binary search.
    check sy-subrc is initial.

    loop at pt_listmat assigning <fs_listmat>
        where xmatnr = <fs_bsim_bkpf>-matnr
          and bwkey  = <fs_bsim_bkpf>-bwkey
          and bwtar  = <fs_bsim_bkpf>-bwtar
          and ybukrs = <fs_bsim_bkpf>-bukrs.

      check <fs_listmat>-xsaknr = <fs_bseg>-hkont.

      if <fs_listmat>-sobkz = gc_spec_q or
          <fs_listmat>-sobkz = gc_spec_e .
        read table ppt_partcost assigning <fs_partcost>
            with key matnr = <fs_listmat>-xmatnr
                     bwkey = <fs_listmat>-bwkey
                     bwtar = <fs_listmat>-bwtar
                     bwtty = <fs_listmat>-bwtty
                     werks = <fs_listmat>-werk
                     tblsb = <fs_listmat>-tblsb
                     linkk = <fs_listmat>-linkk
            binary search.
      else.
        read table ppt_partcost assigning <fs_partcost>
            with key matnr = <fs_listmat>-xmatnr
                     bwkey = <fs_listmat>-bwkey
                     bwtar = <fs_listmat>-bwtar
                     bwtty = <fs_listmat>-bwtty
                     werks = <fs_listmat>-werk
                     tblsb = <fs_listmat>-tblsb
            binary search.
      endif.

      l_bannerok = gc_true.                                    "1318706

*SAP Note 2392907
*      if <fs_bsim_bkpf>-blart eq gc_blart_ml and               "1318706
*         <fs_bsim_bkpf>-awtyp eq gc_awtyp_mlhd.                "1318706
*


      clear l_dmbtr.                                           "1106506
      perform fi_doc_insert
          using p_budat_high
              <fs_listmat>
              <fs_bsim_bkpf>
              <fs_bseg>
              pt_bkpf_rbkp
              ppt_matnr_way
              <fs_listmat>-vbeln
              <fs_listmat>-posnr
              <fs_listmat>-pspnr
              l_typedoc
              l_notrights
              l_lost
              l_bannerok                                       "1318706
          changing
              ppt_overval
              l_dmbtr.

      if <fs_bsim_bkpf>-budat gt p_budat_high.
        <fs_partcost>-salke = <fs_partcost>-salke - l_dmbtr.
      endif.
      if <fs_bsim_bkpf>-budat ge p_budat_low.
        <fs_partcost>-salkb = <fs_partcost>-salkb - l_dmbtr.
      endif.

    endloop.
  endloop.
endform.                    " unclear_items_insert
*&---------------------------------------------------------------------*
*&      Form  is_mmdoc_relevant
*&---------------------------------------------------------------------*
*       skip documents that should not be processed
*&---------------------------------------------------------------------*
form is_mmdoc_relevant
  using pw_mseg_mkpf  type type_mseg_mkpf
  changing is_relevant type type_1c.

  is_relevant = gc_true.
  if ( pw_mseg_mkpf-xauto is not initial and
       ( pw_mseg_mkpf-bustm = gc_bustm_mar1 or
         pw_mseg_mkpf-bustm = gc_bustm_mar3 or
         pw_mseg_mkpf-bustm = gc_bustm_mar4
     ) ) Or
         pw_mseg_mkpf-bustm = gc_bustm_mar0 or
         pw_mseg_mkpf-bustm = gc_bustm_mar2 or
         pw_mseg_mkpf-bustm = gc_bustm_me11. "2131077 Goods receipt for purchase order into GR blocked stock. 103, 104, 124, 125 Movement types
    is_relevant = gc_false.                                    "1345551
  endif.

endform.                    " is_mmdoc_relevant
*&---------------------------------------------------------------------*
*&      Form  val_type_change_processing
*&---------------------------------------------------------------------*
*       process valuation type change documents (340 mov. type)
*&---------------------------------------------------------------------*
form val_type_change_processing                                "1247791
    using  ppw_budat           type line of tt_so_budat
           ppa_adcst           type type_1c
           pt_acctit           type tt_acctit
           pt_partners_sale    type tt_partners_sale
           pt_partners_pay1    type tt_partners_pay1
           pt_partners_pay2    type tt_partners_pay2
           pt_werks_from       type tt_werks_from
           pt_routers          type tt_routers
           pt_routers1         type tt_routers1
           pt_mseg_mkpf        type tt_mseg_mkpf_mb            "1782012
    changing
           pt_bwtar_change     type tt_bwtar_change
           pt_mseg_mkpf_bwtar  type tt_mseg_mkpf_mb
           pt_bsim_bkpf_bwtar  type tt_bsim_bkpf
           pt_listmat          type tt_listmat
           pt_docmat           type tt_docmat
           pt_partcost         type tt_partcost
           ppt_transfer        type tt_transfer
           pt_overval          type tt_overvalue.

  data:
      l_awkey      type awkey,
      l_menge      type menge_d,
      l_wrbtr      type wrbtr,
      l_dmbtr      type j_3rfinsum,
      l_amount     type type_1c,
      l_typedoc    type type_1c,
      l_rec_list   type sytabix,
      l_rec_cost   type sytabix,
      lw_listmat   type type_listmat,
      lw_partcost  type type_cost,
      lw_bwtar_change type type_bwtar_change,
      lw_mseg_mkpf type type_mseg_mkpf,
      lw_bsim_bkpf type type_bsim_bkpf.

  if pa_valch is initial and pt_bwtar_change is not initial.   "1363385
*   correct quantities cannot be determined if splitting is deactivated
    message s022 display like 'W'.                             "1323282
    return.
  endif.

* posting order is important for processing of 340 mov. type
  sort pt_bwtar_change descending by date time mblnr zeile.
  delete adjacent duplicates from pt_bwtar_change comparing all fields.
  delete adjacent duplicates from pt_mseg_mkpf_bwtar comparing all fields.
  sort pt_bsim_bkpf_bwtar descending by belnr gjahr buzei.
  delete adjacent duplicates from pt_bsim_bkpf_bwtar comparing all fields.

  loop at pt_bwtar_change into lw_bwtar_change.
    Clear: lw_mseg_mkpf, lw_bsim_bkpf, lw_listmat, lw_partcost, l_awkey,
           l_rec_list, l_rec_cost, l_menge, l_dmbtr, l_wrbtr.

    Read table pt_mseg_mkpf_bwtar into lw_mseg_mkpf
      with key mblnr = lw_bwtar_change-mblnr
               mjahr = lw_bwtar_change-mjahr
               zeile = lw_bwtar_change-zeile.

    concatenate lw_mseg_mkpf-mblnr lw_mseg_mkpf-mjahr into l_awkey.
    Read Table pt_bsim_bkpf_bwtar into lw_bsim_bkpf
      with key matnr = lw_bwtar_change-matnr
               bwkey = lw_bwtar_change-bwkey
               bwtar = lw_bwtar_change-bwtar
               awkey = l_awkey
               shkzg = lw_mseg_mkpf-shkzg.

    Read table pt_listmat into lw_listmat
      with key xmatnr = lw_bwtar_change-matnr
               bwkey  = lw_bwtar_change-bwkey
               bwtar  = lw_bwtar_change-bwtar
               werk   = lw_bwtar_change-werks
               lgort  = lw_bwtar_change-lgort
               sobkz  = lw_bwtar_change-sobkz
               linkk  = lw_bwtar_change-linkk
               charg  = lw_bwtar_change-charg.
    Check sy-subrc is initial.
    l_rec_list = sy-tabix.

    Read table pt_partcost into lw_partcost
      with key matnr = lw_listmat-xmatnr
               bwkey = lw_listmat-bwkey
               bwtar = lw_listmat-bwtar
               bwtty = lw_listmat-bwtty
               werks = lw_listmat-werk
               tblsb = lw_listmat-tblsb
               sobkz = lw_listmat-sobkz
               linkk = lw_listmat-linkk.
    Check sy-subrc is initial.
    l_rec_cost = sy-tabix.

    l_amount  = gc_true.
    l_typedoc = gc_item_typ_f.
    perform fi_mm_item_insert
        tables pt_docmat
        using ppw_budat
              pt_overval
              pt_acctit
              pt_partners_sale
              pt_routers
              pt_routers1
              pt_partners_pay1
              pt_partners_pay2
              pt_werks_from
              lw_listmat
              lw_mseg_mkpf
              lw_bsim_bkpf
              ppa_adcst
              l_amount
              l_typedoc
              pt_mseg_mkpf                                     "1782012
        changing pt_bwtar_change
                 l_menge l_dmbtr l_wrbtr.

    if not l_menge is initial or not l_dmbtr is initial.
      perform stock_value_update
          using lw_mseg_mkpf-budat
                lw_mseg_mkpf-cputm
                ppw_budat-high ppw_budat-low
                l_menge l_dmbtr
          changing lw_listmat lw_partcost
                   pt_bwtar_change.
    endif.

    modify pt_partcost from lw_partcost index l_rec_cost.
    modify pt_listmat  from lw_listmat  index l_rec_list.

  endloop.

endform.                    " val_type_change_processing       "1247791
*&---------------------------------------------------------------------*
*&      Form  val_type_check_upd
*&---------------------------------------------------------------------*
*       check if doc is valuation type change document (340 mov. type)
*       if so insert line with old valuation type to listmat
*&---------------------------------------------------------------------*
form val_type_check_upd                                        "1247791
    tables pt_listmat     type tt_listmat
    using p_werks         type werks_d
          pp_listmat      type j_3rmlistmatw
          p_charg         type charg_d
          pw_mseg_mkpf    type type_mseg_mkpf
    changing
          pt_transfer     type tt_transfer
          p_rec_cost      type sytabix  "2085825
          pt_partcost     type tt_partcost. "2085825

Types: ltt_listmat type sorted table of type_listmat           "1534105
         with non-unique key xmatnr bwkey bwtar werk charg.    "1534105

Data: lw_mseg             type type_mseg,
      lw_listmat          type type_listmat,
      lt_listmat          type ltt_listmat,                    "1534105
      lt_werk_class_saknr type tt_werk_class_saknr, "dummy
      l_bklas_dummy       type bklas,               "dummy
      l_bklas             type bklas,
      l_zeile             type type_mseg-zeile,
      l_saknr             type saknr,
      lw_partcost         type type_cost. "2085825

Field-symbols:
      <fs_listmat>        type type_listmat,
      <fs_partcost>       type type_cost.  "2085825

* material document with valuation type change has x2
* line items in MSEG, we need first one if we have second
  l_zeile = pw_mseg_mkpf-zeile mod 2.
  If l_zeile = 0.
    l_zeile = pw_mseg_mkpf-zeile - 1.
  Else.
    clear l_zeile.
  Endif.
  Select Single * From mseg Into Corresponding Fields Of lw_mseg
      Where mblnr = pw_mseg_mkpf-mblnr
        And mjahr = pw_mseg_mkpf-mjahr
        And zeile = l_zeile.

  If sy-subrc Is Initial And pw_mseg_mkpf-bwtar ne lw_mseg-bwtar.
    Check lw_mseg-bwtar = pw_mseg_mkpf-umbar And
          lw_mseg-charg = pw_mseg_mkpf-charg.

*   get all listmat entries with new valuation type of batch   "1534105 start
    lt_listmat[] = pt_listmat[].
    Loop at lt_listmat Into lw_listmat
      Where xmatnr = pp_listmat-xmatnr
        and bwkey  = pp_listmat-bwkey
        and bwtar  = pp_listmat-bwtar
        and werk   = p_werks
        and charg  = p_charg.

*   valuation type is changed
    Clear: l_bklas.                                            "1534105 end
    lw_listmat-bwtar = lw_mseg-bwtar.

*   get correct valuation class
    if lw_listmat-sobkz = gc_spec_e.                           "1534105
      Select Single bklas From EBEW Into l_bklas
          Where matnr = lw_listmat-xmatnr
            And bwkey = lw_listmat-bwkey
            And bwtar = lw_listmat-bwtar
            And sobkz = lw_listmat-sobkz
            And vbeln = lw_listmat-vbeln
            And posnr = lw_listmat-posnr.
    elseif lw_listmat-sobkz = gc_spec_q.                       "1534105
      Select Single bklas From QBEW Into l_bklas
          Where matnr = lw_listmat-xmatnr
            And bwkey = lw_listmat-bwkey
            And bwtar = lw_listmat-bwtar
            And sobkz = lw_listmat-sobkz
            And pspnr = lw_listmat-pspnr.
    else.
      Select Single bklas From MBEW Into l_bklas
          Where matnr = lw_listmat-xmatnr
            And bwkey = lw_listmat-bwkey
            And bwtar = lw_listmat-bwtar.
    endif.
    lw_listmat-bklas = l_bklas.

*   get correct G/L account
    perform get_saknr
                using
                   p_werks
                   lw_listmat-bklas
                   lw_listmat-ktopl
                   lw_listmat-bwmod
                changing
                   l_bklas_dummy
                   l_saknr
                   lt_werk_class_saknr.
    lw_listmat-xsaknr = l_saknr.

*   insert line with old valuation type to common stock
    perform link_field_filling
        using lw_listmat-sobkz
              lw_listmat-xmatnr
              lw_listmat-bwtar
              p_werks
              lw_listmat-lgort
              p_charg
              lw_listmat-sortl
              lw_listmat-pspnr
              lw_listmat-vbeln
              lw_listmat-posnr
        changing lw_listmat-linkk
                 lw_listmat-field_link.

    clear: lw_listmat-begremn, lw_listmat-endremn,
           lw_listmat-deltlbkumd, lw_listmat-deltlbkumk,
           lw_listmat-lbkum.
    read table pt_listmat assigning <fs_listmat>
        with key xmatnr = lw_listmat-xmatnr
                 bwtar = lw_listmat-bwtar
                 werk  = lw_listmat-werk
                 lgort = lw_listmat-lgort
                 charg = lw_listmat-charg
                 sobkz = lw_listmat-sobkz
                 tblsb = lw_listmat-tblsb
                 linkk = lw_listmat-linkk.
    if sy-subrc ne 0.
      append lw_listmat to pt_listmat.
     endif.
                                                                            "2085825 Start
    if ( lw_listmat-sobkz = gc_spec_q or lw_listmat-sobkz = gc_spec_e ).
       read table pt_partcost assigning <fs_partcost>
           with key matnr = lw_listmat-xmatnr
                    bwkey = lw_listmat-bwkey
                    bwtar = lw_listmat-bwtar
                    bwtty = lw_listmat-bwtty
                    werks = lw_listmat-werk
                    tblsb = lw_listmat-tblsb
                    linkk = lw_listmat-linkk
           binary search.
     else.
       read table pt_partcost assigning <fs_partcost>
           with key matnr = lw_listmat-xmatnr
                    bwkey = lw_listmat-bwkey
                    bwtar = lw_listmat-bwtar
                    bwtty = lw_listmat-bwtty
                    werks = lw_listmat-werk
                    tblsb = lw_listmat-tblsb
           binary search.

     endif.

    if ( sy-subrc ne 0 ).

      clear lw_partcost.

      lw_partcost-matnr = lw_listmat-xmatnr.      " material number
      lw_partcost-bwkey = lw_listmat-bwkey.      " valuation area
      lw_partcost-bwtar = lw_listmat-bwtar.    " valuation type
      lw_partcost-bwtty = lw_listmat-bwtty.    " valuation category
      lw_partcost-werks = lw_listmat-werk.    " plants
      lw_partcost-tblsb = lw_listmat-tblsb.      " special stock valuation type
      lw_partcost-sobkz = lw_listmat-sobkz.      " special stock
      lw_partcost-lgort = ''. "lw_listmat-lgort.      " storage
      lw_partcost-charg = ''. " lw_listmat-charg.      " storage
      lw_partcost-linkk = lw_listmat-linkk. " index field
      "lw_partcost-subkey = lw_listmat-subkey.

      lw_partcost-salkbfact = 0. " stock cost on beginning of period
      lw_partcost-salkefact = 0. " stock cost on ending of period
      lw_partcost-salkb = 0.     " stock cost on beginning of period
      lw_partcost-salke = 0.     " stock cost on ending of period
      lw_partcost-lbkub = 0.     " quant.of stock on beginning of period
      lw_partcost-lbkue = 0.     " quant.of stock on ending of period

      "lw_partcost-peinh = lw_listmat-peinh.  " multiplier cost
      "lw_partcost-kaln1 = lw_listmat-kaln1.
      lw_partcost-vbeln = lw_listmat-vbeln.
      lw_partcost-posnr = lw_listmat-posnr.    " Item number of the SD document *Work Breakdown Structure Element (WBS Element)
      lw_partcost-pspnr = lw_listmat-pspnr.
      lw_partcost-salk3 = 0.
      lw_partcost-lbkum = 0.

      INSERT lw_partcost INTO TABLE pt_partcost.
      if ( sy-tabix <= p_rec_cost and sy-subrc = 0 ).
        p_rec_cost = p_rec_cost + 1.
      endif.
    endif.                                                    "2085825 End


    Endloop.                                                   "1534105
  Endif.

endform.                    "val_type_check_upd                "1247791
*&---------------------------------------------------------------------*
*&      Form  fill_bwtar_doc
*&---------------------------------------------------------------------*
*       valuation type change doc. and its history (stock quantities)
*&---------------------------------------------------------------------*
form fill_bwtar_doc                                            "1247791
    using pw_mseg_mkpf type type_mseg_mkpf
          pw_listmat   type type_listmat
    changing pw_bwtar_doc  type type_bwtar_change.

  pw_bwtar_doc-mblnr = pw_mseg_mkpf-mblnr.
  pw_bwtar_doc-mjahr = pw_mseg_mkpf-mjahr.
  pw_bwtar_doc-zeile = pw_mseg_mkpf-zeile.
  pw_bwtar_doc-matnr = pw_listmat-xmatnr.
  pw_bwtar_doc-bwkey = pw_listmat-bwkey.
  pw_bwtar_doc-bwtar = pw_listmat-bwtar.
  pw_bwtar_doc-werks = pw_listmat-werk.
  pw_bwtar_doc-lgort = pw_listmat-lgort.
  pw_bwtar_doc-charg = pw_listmat-charg.
  pw_bwtar_doc-sobkz = pw_listmat-sobkz.
  pw_bwtar_doc-linkk = pw_listmat-linkk.
  pw_bwtar_doc-date  = pw_mseg_mkpf-budat.
  pw_bwtar_doc-time  = pw_mseg_mkpf-cputm.
  pw_bwtar_doc-lbkum = pw_listmat-lbkum.
  pw_bwtar_doc-begremn = pw_listmat-begremn.
  pw_bwtar_doc-endremn = pw_listmat-endremn.
  pw_bwtar_doc-deltlbkumd = pw_listmat-deltlbkumd.
  pw_bwtar_doc-deltlbkumk = pw_listmat-deltlbkumk.

endform.                    "fill_bwtar_doc                    "1247791
