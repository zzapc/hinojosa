
class YCL_IM_RF_TPM_ME_PD_POSTED definition
  public
  final
  create public .

public section.

  interfaces IF_EX_ME_PURCHDOC_POSTED .

  class-methods POST_TP
    importing
      !IM_VORGA type T160-VORGA
      !IM_EKKO type EKKO
      !IM_EKKO_OLD type EKKO
      !IM_EKPO type MMPR_UEKPO
      !IM_EKPO_OLD type MMPR_UEKPO
      !IM_EKET type MMPR_UEKET
      !IM_EKET_OLD type MMPR_UEKET
      !IM_EKKN type MMPR_UEKKN
      !IM_EKKN_OLD type MMPR_UEKKN
      !IM_KOMV type KOMV_TAB
      !IM_KOMV_OLD type KOMV_TAB
      !IM_EKBES type ME_EKBES
      !IM_EKES type MMPR_UEKES
      !IM_EKES_OLD type MMPR_UEKES
      !IM_EKEH type MMPR_IEKEH
      !IM_EKEH_OLD type MMPR_IEKEH
      !IM_EKEK type MMPR_UEKEK
      !IM_EKEK_OLD type MMPR_UEKEK
      !IM_EINA type MMPR_EINAU
      !IM_EINA_OLD type MMPR_EINA
      !IM_EINE type MMPR_EINEU
      !IM_EINE_OLD type MMPR_EINE
      !IM_BATU type MEREQ_T_FEBAN
      !IM_EKPA type MMPR_UEKPA
      !IM_EKPA_OLD type MMPR_UEKPA
      !IM_EKPV type MMPR_EKPV .
protected section.
private section.
endclass. "YCL_IM_RF_TPM_ME_PD_POSTED definition
class YCL_IM_RF_TPM_ME_PD_POSTED implementation.
method IF_EX_ME_PURCHDOC_POSTED~POSTED.

  YCL_IM_RF_TPM_ME_PD_POSTED=>POST_TP(
    exporting
      IM_VORGA    = IM_VORGA         " Transaction/Event in Purchasing Document
      IM_EKKO     = IM_EKKO          " New Purchasing Document Header
      IM_EKKO_OLD = IM_EKKO_OLD      " Old Purchasing Document Header
      IM_EKPO     = IM_EKPO          " New Items
      IM_EKPO_OLD = IM_EKPO_OLD      " Old Items
      IM_EKET     = IM_EKET          " New Schedule Lines
      IM_EKET_OLD = IM_EKET_OLD      " Old Schedule Lines
      IM_EKKN     = IM_EKKN          " New Account Assignments
      IM_EKKN_OLD = IM_EKKN_OLD      " Old Account Assignments
      IM_KOMV     = IM_KOMV          " New Conditions
      IM_KOMV_OLD = IM_KOMV_OLD      " Old Conditions
      IM_EKBES    = IM_EKBES         " PO History Totals Records
      IM_EKES     = IM_EKES          " New Confirmations
      IM_EKES_OLD = IM_EKES_OLD      " Old Confirmations
      IM_EKEH     = IM_EKEH          " New Release History for Scheduling Agreement
      IM_EKEH_OLD = IM_EKEH_OLD      " Old Release History for Scheduling Agreement
      IM_EKEK     = IM_EKEK          " New Release History for Scheduling Agreement
      IM_EKEK_OLD = IM_EKEK_OLD      " Old Release History for Scheduling Agreement
      IM_EINA     = IM_EINA          " New Info Records (General Data)
      IM_EINA_OLD = IM_EINA_OLD      " Old Info Records (General Data)
      IM_EINE     = IM_EINE          " New Info Records (Purchasing Organization Data)
      IM_EINE_OLD = IM_EINE_OLD      " Old Info Records (Purchasing Organization Data)
      IM_BATU     = IM_BATU          " Purchase Requisitions
      IM_EKPA     = IM_EKPA          " New Partners
      IM_EKPA_OLD = IM_EKPA_OLD      " Old Partners
      IM_EKPV     = IM_EKPV       ). " Shipping-Specific Data

endmethod.
method POST_TP.

*** Data declaration
  data: LF_CHANGED type AS4FLAG,
        LF_DAPSE   type YRF_TPM_DAPSE,
        LF_DADSE   type YRF_TPM_DADSE.
  data: LS_PRIFP    type YRF_TPM_S_PRIFP,
        LS_EKPO_OLD type UEKPO,
        LS_EKET_OLD type UEKET,
        LS_EKET_NEW type UEKET,
        LS_TD100    type YRF_TPR_TD100.

  data: LR_BL_TOOL type ref to YCL_RF_TPM_TOOL.

  field-symbols: <S_EKPO> type UEKPO,
                 <S_EKET> type UEKET.

*** Loop all items
  loop at IM_EKPO assigning <S_EKPO> where MTART = YCL_RF_TPM_TOOL=>C_MTART_TOOL
                                        or MTART = YCL_RF_TPM_TOOL=>C_MTART_STEREO.

    clear: LS_EKPO_OLD,
           LS_EKET_OLD,
           LF_CHANGED.

***   ... and get their former values
    read table IM_EKPO_OLD into LS_EKPO_OLD with key EBELN = <S_EKPO>-EBELN
                                                     EBELP = <S_EKPO>-EBELP.

***   ... get delivery date
    read table IM_EKET into LS_EKET_NEW with key EBELN = <S_EKPO>-EBELN
                                                 EBELP = <S_EKPO>-EBELP.

    read table IM_EKET_OLD into LS_EKET_OLD with key EBELN = <S_EKPO>-EBELN
                                                     EBELP = <S_EKPO>-EBELP.


***-------------------------------------------------------------------*
*** Update Tool LO-VC characteristics

*** Get current characteristics
    YCL_RF_TPM_TOOL=>GET_TD100( exporting IF_MATNR = <S_EKPO>-MATNR
                                          IF_WERKS = <S_EKPO>-WERKS
                                importing ES_TD100 = LS_TD100       ).


***  Final Purchase Price changed? then set it to update
    if <S_EKPO>-NETPR ne LS_EKPO_OLD-NETPR or
       IM_EKKO-WAERS  ne IM_EKKO_OLD-WAERS or
       <S_EKPO>-PEINH ne LS_EKPO_OLD-PEINH.

      if <S_EKPO>-PEINH gt 0.
        LS_PRIFP-PRIFP      = <S_EKPO>-NETPR / <S_EKPO>-PEINH.
        LS_PRIFP-PRIFP_CURR = IM_EKKO-WAERS.

        move-corresponding LS_PRIFP to LS_TD100-S_PRIFP.
        LF_CHANGED = ABAP_TRUE.
      endif.
    endif.

*** Expected Delivery (Availability) Date changed? then set it to update
    if LS_EKET_OLD-EINDT ne LS_EKET_NEW-EINDT.
      move LS_EKET_NEW-EINDT to LS_TD100-DAAVL.
      LF_CHANGED = ABAP_TRUE.
    endif.

*** Write changes to material master
    if LF_CHANGED eq ABAP_TRUE.
      try.
          YCL_RF_TPM_TOOL=>SET_LOVC(  IF_MATNR  = <S_EKPO>-MATNR
                                      IF_WERKS  = <S_EKPO>-WERKS
                                      IF_COMMIT = ABAP_TRUE
                                      IS_TD100  = LS_TD100 ).
        catch /VCXI/CX_CKX.
          continue.
      endtry.
    endif.

***     Reset document dates
    if LS_EKPO_OLD ne <S_EKPO>.
      call function 'YRF_TPM_SET_DOC_DATES'
        exporting
          IF_PRDOC        = <S_EKPO>-EBELN
          IF_DOPOS        = <S_EKPO>-EBELP
          IF_CHANGE_DADSE = ABAP_FALSE
          IF_DAPSE        = LF_DAPSE
          IF_CHANGE_DAPSE = ABAP_TRUE
          IF_COMMIT       = ABAP_FALSE.
    endif.

    if IM_EKKO-LIFNR ne IM_EKKO_OLD-LIFNR.
      call function 'YRF_TPM_SET_DOC_DATES'
        exporting
          IF_PRDOC        = <S_EKPO>-EBELN
          IF_DOPOS        = <S_EKPO>-EBELP
          IF_DADSE        = LF_DADSE
          IF_CHANGE_DADSE = ABAP_TRUE
          IF_CHANGE_DAPSE = ABAP_FALSE
          IF_COMMIT       = ABAP_FALSE.
    endif.

  endloop.

endmethod.
