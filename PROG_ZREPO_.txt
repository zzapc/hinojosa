*&---------------------------------------------------------------------*
*& Report  ZREPO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zrepo.

PARAMETERS: file RADIOBUTTON GROUP g,
            ftp  RADIOBUTTON GROUP g.
PARAMETERS: pass TYPE text6 DEFAULT '' NO-DISPLAY,
            dir TYPE string DEFAULT 'd:\Google Drive\LIB\'.


*----------------------------------------------------------------------*
*       CLASS lcl_alv DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv DEFINITION INHERITING FROM zcl_ap_alv_check.
  PUBLIC SECTION.
    CLASS-DATA:
      o_repo TYPE REF TO zcl_ap_repo.

    METHODS: handle_double_click REDEFINITION.
    METHODS: handle_user_command REDEFINITION.
ENDCLASS.                    "lcl_alv DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_alv IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv IMPLEMENTATION.
  METHOD handle_double_click.
    DATA l_repo TYPE zap_repo.

    READ TABLE o_repo->i_repo INDEX row INTO l_repo.
    IF sy-subrc = 0.
    ENDIF.
  ENDMETHOD.                    "handle_double_click
  METHOD handle_user_command.
    DATA: l_row TYPE i,
          l_repo TYPE zap_repo.

    CASE e_salv_function.
      WHEN 'INST_TEMP'.
        l_row = get_fila_activa( ).
        READ TABLE o_repo->i_repo INDEX l_row INTO l_repo.
        IF sy-subrc = 0.
          IF l_repo-object = 'PROG'.
            o_repo->instalar_report_temp( l_repo-nombre ).
          ENDIF.
        ENDIF.
      WHEN 'ACT'.
        get_seleccion( CHANGING t_tabla = o_repo->i_repo ).
        LOOP AT o_repo->i_repo INTO l_repo WHERE check = 'X'.
          o_repo->importa_slnk_from_ftp( repo = l_repo ).
        ENDLOOP.
      WHEN 'BORRAR'.
        get_seleccion( CHANGING t_tabla = o_repo->i_repo ).
        LOOP AT o_repo->i_repo INTO l_repo WHERE check = 'X'.
          DELETE o_repo->i_repo.
        ENDLOOP.
        o_repo->actualiza_indice_repo( ).
      WHEN 'EXCEL'.
        exportar_excel( CHANGING t_tabla = o_repo->i_repo ).
      WHEN OTHERS.
    ENDCASE.
  ENDMETHOD.                    "handle_USER_COMMAND

ENDCLASS.                    "lcl_alv IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS REPORT DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS report DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS main.

  PRIVATE SECTION.
    CLASS-DATA:
      o_repo TYPE REF TO zcl_ap_repo,
      o_alv TYPE REF TO lcl_alv.

    CLASS-METHODS:  show.

ENDCLASS.                    "REPORT DEFINITION


*----------------------------------------------------------------------*
*       CLASS REPORT IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS report IMPLEMENTATION.
  METHOD main.
    DATA l_origen TYPE c.

    IF file = 'X'.
      l_origen = 'L'.
    ELSE.
      l_origen = 'F'.
    ENDIF.

    CREATE OBJECT o_repo
      EXPORTING
        origen        = l_origen
        ruta_pc_local = dir.

    o_repo->conexion( pass ).

    show( ).

    o_repo->desconexion( ).

  ENDMETHOD.                    "main

  METHOD show.
    CREATE OBJECT o_alv
      EXPORTING
        tabla = ''.

    o_alv->o_repo = o_repo.
    o_alv->constructor_tabla( EXPORTING tabla = 'REPO'
                                        status = 'STANDARD'
                                        sel    = 'M'
                                        lights = 'LIGHTS'
                                        campo_check = 'CHECK'
                              CHANGING t_tabla = o_repo->i_repo ).

    o_alv->set_orden( 'OBJECT,NOMBRE' ).

    o_alv->show( ).

  ENDMETHOD.                    "show

ENDCLASS.                    "report IMPLEMENTATION

START-OF-SELECTION.

  report=>main( ).
