*&---------------------------------------------------------------------*
*&  Include           ZTPI0016_CARGA_F01
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  INIT_PROGRAM_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_program_data .

  go_file_utils = NEW zcl_utils_files( ).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CARGA_FICHERO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM load_file.

  p_ruta = go_file_utils->get_filepath( i_file_filter = zcl_utils_files=>filetypes_excel ).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM read_file .

  IF ( p_ruta IS NOT INITIAL ).

    go_file_utils->map_xls_2_sap(
      EXPORTING
        i_filepath = p_ruta    " Fichero local para upload/download
      IMPORTING
        e_table    = gt_data
    ).

  ELSE.

    MESSAGE 'No ha seleccionado un fichero valido' TYPE 'E'.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PROCESS_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM process_file .

**********************************************************************
* Parámetros locales
**********************************************************************

  DATA: ls_data             LIKE LINE OF gt_data,
        lv_message          TYPE string,
        lv_line_exist       TYPE boolean,
        lv_lines            TYPE i,
        lv_total_l_proc     TYPE i,
        lv_total_l_no_proc  TYPE i,
        lv_total_l_modif    TYPE i,
        lv_total_l_noex     TYPE i.

**********************************************************************
* Lógica
**********************************************************************

  lv_lines = lines( gt_data ).

  IF ( lv_lines GT 0 ).

    LOOP AT gt_data INTO ls_data.

      go_file_utils->show_progress( i_current_line = sy-tabix i_total_lines = lv_lines ).

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input         = ls_data-zzancho
        IMPORTING
          OUTPUT        = ls_data-zzancho.

      SELECT COUNT(*)
        FROM ztpi0016
       WHERE paperid_nav EQ ls_data-paperid_nav
         AND calidad_nav EQ ls_data-calidad_nav
         AND zzancho     EQ ls_data-zzancho.

      IF ( sy-subrc EQ 0 ).
        lv_line_exist = abap_true.
      ELSE.
        lv_line_exist = abap_false.
      ENDIF.

      IF ( p_borrar = abap_true ).

        IF ( lv_line_exist = abap_true ).

          DELETE ztpi0016 FROM ls_data.
          IF ( sy-subrc = 0 ).
            CONCATENATE 'Registro:' ls_data 'eliminado.' INTO lv_message SEPARATED BY space.
            WRITE: / lv_message.
            lv_total_l_proc = lv_total_l_proc + 1.
          ELSE.
            CONCATENATE 'Registro:' ls_data 'no eliminado.' INTO lv_message SEPARATED BY space.
            WRITE: / lv_message.
            lv_total_l_no_proc = lv_total_l_no_proc + 1.
          ENDIF.

        ELSE.

          CONCATENATE 'Registro:' ls_data 'no existe.' INTO lv_message SEPARATED BY space.
          WRITE: / lv_message.
          lv_total_l_noex = lv_total_l_noex + 1.

        ENDIF.

      ELSE.

        MODIFY ztpi0016 FROM ls_data.
        IF ( sy-subrc = 0 ).

          IF ( lv_line_exist = abap_true ).

            CONCATENATE 'Registro:' ls_data 'modificado.' INTO lv_message SEPARATED BY space.
            WRITE: / lv_message.
            lv_total_l_modif = lv_total_l_modif + 1.

          ELSE.

            CONCATENATE 'Registro:' ls_data 'añadido.' INTO lv_message SEPARATED BY space.
            WRITE: / lv_message.
            lv_total_l_proc = lv_total_l_proc + 1.

          ENDIF.

        ELSE.

          CONCATENATE 'Registro:' ls_data 'no añadido.' INTO lv_message SEPARATED BY space.
          WRITE: / lv_message.
          lv_total_l_no_proc = lv_total_l_no_proc + 1.

        ENDIF.

      ENDIF.

    ENDLOOP.

  ENDIF.

  SKIP.
  WRITE: / | REGISTROS PROCESADOS:    { lv_total_l_proc } |.
  WRITE: / | REGISTROS NO PROCESADOS: { lv_total_l_no_proc } |.
  IF ( p_borrar = abap_true ).
    WRITE: / | REGISTROS NO EXISTEN:    { lv_total_l_noex } |.
  ELSE.
    WRITE: / | REGISTROS MODIFICADOS:   { lv_total_l_modif } |.
  ENDIF.

ENDFORM.
