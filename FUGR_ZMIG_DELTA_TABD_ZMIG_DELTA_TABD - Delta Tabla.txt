FUNCTION ZMIG_DELTA_TABD.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_OBJNAME) LIKE  VRSD-OBJNAME OPTIONAL
*"     REFERENCE(I_OBJNAM2) LIKE  VRSD-OBJNAME OPTIONAL
*"     REFERENCE(I_VERSNO1) LIKE  VRSD-VERSNO OPTIONAL
*"     REFERENCE(I_VERSNO2) LIKE  VRSD-VERSNO OPTIONAL
*"     REFERENCE(I_INFOLN1A) LIKE  VRSINFOLNA-OBJNAME OPTIONAL
*"     REFERENCE(I_INFOLN1B) LIKE  VRSINFOLNA-OBJNAME OPTIONAL
*"     REFERENCE(I_INFOLN2A) LIKE  VRSINFOLNA-OBJNAME OPTIONAL
*"     REFERENCE(I_INFOLN2B) LIKE  VRSINFOLNA-OBJNAME OPTIONAL
*"     REFERENCE(I_LOG_DEST) TYPE  RFCDEST OPTIONAL
*"     REFERENCE(I_REM_SYST) LIKE  TADIR-SRCSYSTEM OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_DELTA) TYPE  CHAR1
*"----------------------------------------------------------------------

  CLEAR: e_delta.

  objname  = i_objname.
  objnam2  = i_objnam2.
  versno1  = i_versno1.
  versno2  = i_versno2.
  infoln1a = i_infoln1a.
  infoln1b = i_infoln1b.
  infoln2a = i_infoln2a.
  infoln2b = i_infoln2b.
  log_dest = i_log_dest.
  rem_syst = i_rem_syst.

* PERFORM auth_check(radvvutl) USING 'TABL' objname objnam2.

  PERFORM fill_emtpy_par(radvvutl)
          CHANGING objname objnam2
                   versno1 versno2
                   log_dest compare.

  PERFORM obj_read TABLES dd02vd_obj1 dd03v_obj1 dd05m_obj1 dd08v_obj1 dd35v_obj1 dd36v_obj1
                    USING objname versno1 space from_mem CHANGING rc.
  IF rc IS NOT INITIAL.
    e_delta = 'A'.
  ENDIF.
  IF compare = 'X'.
    IF rc IS INITIAL.
      PERFORM obj_read TABLES dd02vd_obj2 dd03v_obj2 dd05m_obj2 dd08v_obj2 dd35v_obj2 dd36v_obj2
                        USING objnam2 versno2 log_dest from_mem CHANGING rc.
      IF rc IS NOT INITIAL.
        e_delta = 'B'.
      ENDIF.
    ENDIF.
  ENDIF.

  IF rc IS INITIAL.

    DO.

      CALL FUNCTION 'RS_VERS_DISPLAY_INIT'
        EXCEPTIONS
          OTHERS = 0.

      CALL FUNCTION 'RS_VERS_TITEL_DEF'
        EXPORTING
          objname1 = objname
          objname2 = objnam2
          versno1  = versno1
          versno2  = versno2
          infoln1b = infoln1b
          infoln2b = infoln2b
          log_dest = log_dest
          rem_syst = rem_syst
        EXCEPTIONS
          OTHERS   = 0.

      block_info-typ     = 'A'.
      block_info-title   = 'Allgemeine Eigenschaften:'(s01).
      block_info-tabname = 'DD02VD'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info      = block_info
        TABLES
          obj1_tab        = dd02vd_obj1
          obj2_tab        = dd02vd_obj2
          display_tab     = dd02vd_list
          key_fields      = key_fields
          tech_fields     = tech_fields
          checkbox_fields = cb_fields
          opt_fields      = opt_fields
        EXCEPTIONS
          OTHERS          = 0.

      block_info-typ     = 'T'.
      block_info-title   = 'Felder'(002).
      block_info-tabname = 'DD03V'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info      = block_info
        TABLES
          obj1_tab        = dd03v_obj1
          obj2_tab        = dd03v_obj2
          display_tab     = dd03v_list
          key_fields      = key_fields
          tech_fields     = tech_fields
          checkbox_fields = cb_fields
          opt_fields      = opt_fields
        EXCEPTIONS
          OTHERS          = 0.

      block_info-typ     = 'HH'.
      block_info-title   = 'Fremdschlüssel'(003).
      block_info-tabname = 'DD08V'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info      = block_info
        TABLES
          obj1_tab        = dd08v_obj1
          obj2_tab        = dd08v_obj2
          display_tab     = dd08v_list
          key_fields      = key_fields
          tech_fields     = tech_fields
          checkbox_fields = cb_fields
        EXCEPTIONS
          OTHERS          = 0.

      block_info-typ     = 'HI'.
      block_info-title   = 'Fremdschlüssel'(004).
      block_info-tabname = 'DD05M'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info  = block_info
          hs_key      = keyinfo
        TABLES
          obj1_tab    = dd05m_obj1
          obj2_tab    = dd05m_obj2
          display_tab = dd05m_list
          key_fields  = key_fields
          tech_fields = tech_fields
          opt_fields  = opt_fields
        EXCEPTIONS
          OTHERS      = 0.

      READ TABLE dd02vd_obj1 INDEX 1.
      READ TABLE dd02vd_obj2 INDEX 1.

      IF dd02vd_obj1-shlpexi <> space.
        LOOP AT dd35v_obj1 WHERE fieldname = space.
          dd35v_obj1_2 = dd35v_obj1.
          APPEND dd35v_obj1_2.
        ENDLOOP.
        LOOP AT dd36v_obj1 WHERE fieldname = space.
          dd36v_obj1_2 = dd36v_obj1.
          APPEND dd36v_obj1_2.
        ENDLOOP.
      ENDIF.

      IF dd02vd_obj2-shlpexi <> space.
        LOOP AT dd35v_obj2 WHERE fieldname = space.
          dd35v_obj2_2 = dd35v_obj2.
          APPEND dd35v_obj2_2.
        ENDLOOP.
        LOOP AT dd36v_obj2 WHERE fieldname = space.
          dd36v_obj2_2 = dd36v_obj2.
          APPEND dd36v_obj2_2.
        ENDLOOP.
      ENDIF.

      DELETE dd35v_obj1 WHERE fieldname = space.
      DELETE dd35v_obj2 WHERE fieldname = space.
      DELETE dd36v_obj1 WHERE fieldname = space.
      DELETE dd36v_obj2 WHERE fieldname = space.

      block_info-typ     = 'HH'.
      block_info-title   = 'Suchhilfeanbindung an Tabelle'(s05).
      block_info-tabname = 'DD35V'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info      = block_info
        TABLES
          obj1_tab        = dd35v_obj1_2
          obj2_tab        = dd35v_obj2_2
          display_tab     = dd35v_list_2
          key_fields      = key_fields
          tech_fields     = tech_fields
          checkbox_fields = cb_fields
        EXCEPTIONS
          OTHERS          = 0.

      block_info-typ     = 'HI'.
      block_info-title   = 'Suchhilfeanbindung an Tabelle'(s05).
      block_info-tabname = 'DD36V'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info  = block_info
          hs_key      = keyinfo
        TABLES
          obj1_tab    = dd36v_obj1_2
          obj2_tab    = dd36v_obj2_2
          display_tab = dd36v_list_2
          key_fields  = key_fields
          tech_fields = tech_fields
          opt_fields  = opt_fields
        EXCEPTIONS
          OTHERS      = 0.

      block_info-typ     = 'HH'.
      block_info-title   = 'Suchhilfeanbindung an Felder'(s06).
      block_info-tabname = 'DD35V'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info      = block_info
        TABLES
          obj1_tab        = dd35v_obj1
          obj2_tab        = dd35v_obj2
          display_tab     = dd35v_list
          key_fields      = key_fields
          tech_fields     = tech_fields
          checkbox_fields = cb_fields
        EXCEPTIONS
          OTHERS          = 0.

      block_info-typ     = 'HI'.
      block_info-title   = 'Suchhilfeanbindung an Felder'(s06).
      block_info-tabname = 'DD36V'.

      CALL FUNCTION 'RS_VERS_BLOCK_DEF'
        EXPORTING
          block_info  = block_info
          hs_key      = keyinfo
        TABLES
          obj1_tab    = dd36v_obj1
          obj2_tab    = dd36v_obj2
          display_tab = dd36v_list
          key_fields  = key_fields
          tech_fields = tech_fields
          opt_fields  = opt_fields
        EXCEPTIONS
          OTHERS      = 0.

      LOOP AT dd02vd_list.
        ls_attr = dd02vd_list-attr.
        IF ls_attr-delta IS NOT INITIAL.
          e_delta = 'X'.
        ENDIF.
      ENDLOOP.

      LOOP AT dd03v_list.
        ls_attr = dd03v_list-attr.
        IF ls_attr-delta IS NOT INITIAL.
          e_delta = 'X'.
        ENDIF.
      ENDLOOP.

      LOOP AT dd05m_list.
        ls_attr = dd05m_list-attr.
        IF ls_attr-delta IS NOT INITIAL.
          e_delta = 'X'.
        ENDIF.
      ENDLOOP.

      LOOP AT dd08v_list.
        ls_attr = dd08v_list-attr.
        IF ls_attr-delta IS NOT INITIAL.
          e_delta = 'X'.
        ENDIF.
      ENDLOOP.

      LOOP AT dd35v_list.
        ls_attr = dd35v_list-attr.
        IF ls_attr-delta IS NOT INITIAL.
          e_delta = 'X'.
        ENDIF.
      ENDLOOP.

      LOOP AT dd36v_list.
        ls_attr = dd36v_list-attr.
        IF ls_attr-delta IS NOT INITIAL.
          e_delta = 'X'.
        ENDIF.
      ENDLOOP.

      IF repeat_display = space.
        EXIT.
      ENDIF.

    ENDDO.

  ENDIF.

ENDFUNCTION.
