
class ZHCL_UTILS_TLM definition
  public
  final
  create public .

public section.

  class-data S_CLASS_LABEL type MSGID read-only value 'ZHCL_UTILS_TLM' ##NO_TEXT.
  class-data S_TIPOUTIL_CLICHE type ZTIPOUTIL read-only value 'CLICHE' ##NO_TEXT.
  class-data S_TIPOUTIL_TROQUEL type ZTIPOUTIL read-only value 'TROQUEL' ##NO_TEXT.
  data _WERKS type WERKS_D read-only .
  data _LGORT type LGORT_D read-only .
  data _LGNUM type LGNUM read-only .
  data _LGTYP type LGTYP read-only .

  methods CONSTRUCTOR
    importing
      !I_WERKS type WERKS_D
      !I_LGORT type LGORT_D
    raising
      ZCX_EXCEPTION .
  class-methods S_GET_ZTLM0001_DATA
    importing
      !I_T_R_WERKS type ZTT_R_WERKS optional
      !I_T_R_LGORT type ZTT_R_LGORT optional
      !I_T_R_LGNUM type ZTT_R_LGNUM optional
      !I_T_R_LGTYP type ZTT_R_LGTYP optional
    returning
      value(R_T_ZTLM0001) type ZTLM0001_TT .
  class-methods S_GET_ZTLM0002_DATA
    importing
      !I_ZTIPOUTIL type ZTIPOUTIL
      !I_T_R_WERKS type ZTT_R_WERKS optional
      !I_T_R_LGNUM type ZTT_R_LGNUM optional
      !I_T_R_LGTYP type ZTT_R_LGTYP optional
    returning
      value(R_T_ZTLM0002) type ZTLM0002_TT .
  class-methods S_GET_ZTLM0003_DATA
    importing
      !I_ZTIPOUTIL type ZTIPOUTIL
      !I_T_R_LGNUM type ZTT_R_LGNUM optional
      !I_T_R_LGTYP type ZTT_R_LGTYP optional
    returning
      value(R_T_ZTLM0003) type ZTLM0003_TT .
  class-methods S_GET_ZTLM0004_DATA
    importing
      !I_ZTIPOUTIL type ZTIPOUTIL
      !I_T_R_WERKS type ZTT_R_WERKS optional
      !I_T_R_LGORT type ZTT_R_LGORT optional
      !I_T_R_LGNUM type ZTT_R_LGNUM optional
      !I_T_R_LGTYP type ZTT_R_LGTYP optional
    returning
      value(R_T_ZTLM0004) type ZTLM0004_TT .
  class-methods S_GET_ZTMM0033_DATA
    importing
      !I_ZTIPOUTIL type ZTIPOUTIL
      !I_T_R_WERKS type ZTT_R_WERKS optional
      !I_T_R_ARBPL type ZTT_R_ARBPL optional
    returning
      value(R_T_ZTMM0033) type ZTMM0033_TT .
  methods GET_ZTLM0001_DATA
    returning
      value(R_T_ZTLM0001) type ZTLM0001_TT .
  methods GET_ZTLM0002_DATA
    importing
      !I_TIPOUTIL type ZTIPOUTIL
    returning
      value(R_T_ZTLM0002) type ZTLM0002_TT .
  methods GET_ZTLM0003_DATA
    importing
      !I_TIPOUTIL type ZTIPOUTIL
    returning
      value(R_T_ZTLM0003) type ZTLM0003_TT .
  methods GET_ZTLM0004_DATA
    importing
      !I_TIPOUTIL type ZTIPOUTIL
    returning
      value(R_T_ZTLM0004) type ZTLM0004_TT .
  methods GET_ZTMM0033_DATA
    importing
      !I_TIPOUTIL type ZTIPOUTIL
    returning
      value(R_T_ZTMM0033) type ZTMM0033_TT .
  methods GET_LAGP_LIST
    importing
      !I_T_R_LGBER type ZTT_R_LGBER
      !I_T_R_LGPLA type ZTT_R_LGPLA
      !I_T_R_LPTYP type ZTT_R_LPTYP
    returning
      value(R_T_LAGP) type ZTT_LAGP .
  methods GET_LQUA_LIST
    importing
      !I_T_R_LQNUM type ZTT_R_LQNUM
      !I_T_R_LGPLA type ZTT_R_LGPLA
      !I_T_R_MATNR type ZTT_R_MATNR
    returning
      value(R_T_LQUA_DATA) type ZTT_LQUA .
protected section.
private section.
endclass. "ZHCL_UTILS_TLM definition
class ZHCL_UTILS_TLM implementation.
METHOD constructor.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_ztlm0001 TYPE ztlm0001_tt,
        lt_r_werks  TYPE ztt_r_werks,
        lt_r_lgort  TYPE ztt_r_lgort.

**********************************************************************^
* validaciones
**********************************************************************

****** IMPORT DATA

  IF ( i_werks IS INITIAL OR i_lgort IS INITIAL ).
    zcl_utils=>zif_msg_utils~s_launch_exception( i_textid = zcl_utils=>zif_msg_utils~s_create_raising_message( i_msgno = '001' i_msgid = zhcl_utils_tlm=>s_class_label i_msgty = 'E' ) ).
  ENDIF.

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE DATA

  APPEND VALUE #( sign = 'I' option = 'EQ' werks_low = i_werks ) TO lt_r_werks.
  APPEND VALUE #( sign = 'I' option = 'EQ' lgort_low = i_lgort ) TO lt_r_lgort.

  lt_ztlm0001 = zhcl_utils_tlm=>s_get_ztlm0001_data( i_t_r_werks = lt_r_werks i_t_r_lgort = lt_r_lgort ).
  IF ( lines( lt_ztlm0001 ) LE 0 ).
    zcl_utils=>zif_msg_utils~s_launch_exception( i_textid = zcl_utils=>zif_msg_utils~s_create_raising_message( i_msgno = '001' i_msgid = zhcl_utils_tlm=>s_class_label i_msgty = 'E' ) ).
  ENDIF.

  READ TABLE lt_ztlm0001 INTO DATA(ls_stlm0001) INDEX 1.

****** FILL OBJECT PARAMS

  me->_werks = i_werks.
  me->_lgort = i_lgort.
  me->_lgnum = ls_stlm0001-lgnum.
  me->_lgtyp = ls_stlm0001-lgtyp.

ENDMETHOD.
METHOD get_lagp_list.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_lgtyp TYPE ztt_r_lgtyp.

**********************************************************************
* Valdiaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE DATA

  APPEND VALUE #( sign = 'I' option = 'EQ' stge_type_low = me->_lgtyp ) TO lt_r_lgtyp.

****** GET/SET DATA

  TRY.
    r_t_lagp = CONV ztt_lagp( NEW zcl_utils_wm( i_werks = me->_werks i_lgort = me->_lgort )->get_wm_lagp_list( i_t_r_lgtyp = lt_r_lgtyp i_t_r_lgber = i_t_r_lgber i_t_r_lgpla = i_t_r_lgpla i_t_r_lptyp = i_t_r_lptyp ) ).
  CATCH zcx_exception.
  ENDTRY.

ENDMETHOD.
METHOD get_lqua_list.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_lgtyp TYPE ztt_r_lgtyp.

**********************************************************************
* Valdiaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE DATA

  APPEND VALUE #( sign = 'I' option = 'EQ' stge_type_low = me->_lgtyp ) TO lt_r_lgtyp.

****** GET/SET DATA

  TRY .
    r_t_lqua_data = CONV #( NEW zcl_utils_wm( i_werks = me->_werks i_lgort = me->_lgort )->get_wm_lqua_data( i_t_r_lqnum = i_t_r_lqnum i_t_r_lgtyp = lt_r_lgtyp i_t_r_lgpla = i_t_r_lgpla i_t_r_matnr = i_t_r_matnr ) ).
  CATCH zcx_exception.
  ENDTRY.

ENDMETHOD.
METHOD get_ztlm0001_data.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_werks TYPE ztt_r_werks,
        lt_r_lgort TYPE ztt_r_lgort,
        lt_r_lgnum TYPE ztt_r_lgnum,
        lt_r_lgtyp TYPE ztt_r_lgtyp.


**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE

  APPEND VALUE #( sign = 'I' option = 'EQ' werks_low = me->_werks )     TO lt_r_werks.
  APPEND VALUE #( sign = 'I' option = 'EQ' lgort_low = me->_lgort )     TO lt_r_lgort.
  APPEND VALUE #( sign = 'I' option = 'EQ' low = me->_lgnum )           TO lt_r_lgnum.
  APPEND VALUE #( sign = 'I' option = 'EQ' stge_type_low = me->_lgnum ) TO lt_r_lgtyp.

****** GET/SET DATA

  r_t_ztlm0001 = zhcl_utils_tlm=>s_get_ztlm0001_data( i_t_r_werks = lt_r_werks i_t_r_lgort = lt_r_lgort i_t_r_lgnum = lt_r_lgnum i_t_r_lgtyp = lt_r_lgtyp ).

ENDMETHOD.
METHOD get_ztlm0002_data.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_werks TYPE ztt_r_werks,
        lt_r_lgnum TYPE ztt_r_lgnum,
        lt_r_lgtyp TYPE ztt_r_lgtyp.

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE

  APPEND VALUE #( sign = 'I' option = 'EQ' werks_low = me->_werks )     TO lt_r_werks.
  APPEND VALUE #( sign = 'I' option = 'EQ' low = me->_lgnum )           TO lt_r_lgnum.
  APPEND VALUE #( sign = 'I' option = 'EQ' stge_type_low = me->_lgnum ) TO lt_r_lgtyp.

****** GET/SET DATA

  r_t_ztlm0002 = zhcl_utils_tlm=>s_get_ztlm0002_data( i_ztipoutil = i_tipoutil i_t_r_werks = lt_r_werks i_t_r_lgnum = lt_r_lgnum i_t_r_lgtyp = lt_r_lgtyp ).

ENDMETHOD.
METHOD get_ztlm0003_data.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_lgnum TYPE ztt_r_lgnum,
        lt_r_lgtyp TYPE ztt_r_lgtyp.


**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE

  APPEND VALUE #( sign = 'I' option = 'EQ' low = me->_lgnum )           TO lt_r_lgnum.
  APPEND VALUE #( sign = 'I' option = 'EQ' stge_type_low = me->_lgtyp ) TO lt_r_lgtyp.


****** GET/SET DATA

  r_t_ztlm0003 = zhcl_utils_tlm=>s_get_ztlm0003_data( i_ztipoutil = i_tipoutil i_t_r_lgnum = lt_r_lgnum i_t_r_lgtyp = lt_r_lgtyp ).

ENDMETHOD.
METHOD get_ztlm0004_data.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_werks TYPE ztt_r_werks,
        lt_r_lgort TYPE ztt_r_lgort,
        lt_r_lgnum TYPE ztt_r_lgnum,
        lt_r_lgtyp TYPE ztt_r_lgtyp.


**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE

***** GET WERKS AND LGORT

  APPEND VALUE #( sign = 'I' option = 'EQ' werks_low = me->_werks )     TO lt_r_werks.
  APPEND VALUE #( sign = 'I' option = 'EQ' lgort_low = me->_lgort )     TO lt_r_lgort.
  APPEND VALUE #( sign = 'I' option = 'EQ' low = me->_lgnum )           TO lt_r_lgnum.
  APPEND VALUE #( sign = 'I' option = 'EQ' stge_type_low = me->_lgtyp ) TO lt_r_lgtyp.

****** GET/SET DATA

  r_t_ztlm0004 = zhcl_utils_tlm=>s_get_ztlm0004_data( i_ztipoutil = i_tipoutil i_t_r_werks = lt_r_werks i_t_r_lgort = lt_r_lgort i_t_r_lgnum = lt_r_lgnum i_t_r_lgtyp = lt_r_lgtyp ).

ENDMETHOD.
METHOD GET_ZTMM0033_DATA.

**********************************************************************
* Parámetros locales
**********************************************************************

****** TABLES

  DATA: lt_r_werks  TYPE ztt_r_werks.

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE

***** GET WERKS AND LGORT

  APPEND VALUE #( sign = 'I' option = 'EQ' werks_low = me->_werks )     TO lt_r_werks.

****** GET/SET DATA

  r_t_ztmm0033 = zhcl_utils_tlm=>s_get_ztmm0033_data( i_ztipoutil = i_tipoutil i_t_r_werks = lt_r_werks ).

ENDMETHOD.
METHOD s_get_ztlm0001_data.

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** GET/SET DATA

  SELECT *
    FROM ztlm0001
    INTO CORRESPONDING FIELDS OF TABLE r_t_ztlm0001
   WHERE werks IN i_t_r_werks
     AND lgort IN i_t_r_lgort
     AND lgnum IN i_t_r_lgnum
     AND lgtyp IN i_t_r_lgtyp.

ENDMETHOD.
METHOD s_get_ztlm0002_data.

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** GET/SET DATA

  SELECT *
    FROM ztlm0002
    INTO CORRESPONDING FIELDS OF TABLE r_t_ztlm0002
   WHERE ztipoutil EQ i_ztipoutil
     AND werks IN i_t_r_werks
     AND lgnum IN i_t_r_lgnum
     AND lgtyp IN i_t_r_lgtyp.

ENDMETHOD.
METHOD S_GET_ZTLM0003_DATA.

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** GET/SET DATA

  SELECT *
    FROM ztlm0003
    INTO CORRESPONDING FIELDS OF TABLE r_t_ztlm0003
   WHERE ztipoutil EQ i_ztipoutil
     AND lgnum IN i_t_r_lgnum
     AND lgtyp IN i_t_r_lgtyp.

ENDMETHOD.
METHOD S_GET_ZTLM0004_DATA.

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** GET/SET DATA

  SELECT *
    FROM ztlm0004
    INTO CORRESPONDING FIELDS OF TABLE r_t_ztlm0004
   WHERE werks IN i_t_r_werks
     AND lgort IN i_t_r_lgort
     AND lgnum IN i_t_r_lgnum
     AND lgtyp IN i_t_r_lgtyp.

ENDMETHOD.
METHOD S_GET_ZTMM0033_DATA.

**********************************************************************
* Parámetros locales
**********************************************************************

**********************************************************************
* Validaciones
**********************************************************************

**********************************************************************
* Lógica
**********************************************************************

****** GET/SET DATA

  SELECT *
    FROM ztmm0033
    INTO CORRESPONDING FIELDS OF TABLE r_t_ztmm0033
   WHERE ztipoutil    EQ i_ztipoutil
     AND werks        IN i_t_r_werks
     AND work_center  IN i_t_r_arbpl.

ENDMETHOD.
