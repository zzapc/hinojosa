*&---------------------------------------------------------------------*
*& Report  ZDOCUMENT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zdocument.



TABLES: payr,pcec.

DATA: bukrs       LIKE reguh-zbukr,
      laufd(10),
      xlaufd(10),
      fecha(10),
      xbelnr(10),
      xlifnr(10),
      adrnr       LIKE reguh-adrnr,
      xadrc       LIKE adrc,
      wrbtr       LIKE regup-wrbtr,
      shkzg       LIKE regup-shkzg,
      vblnr       LIKE payr-vblnr,
      belnr       LIKE regup-belnr,
      lifnr       LIKE reguh-lifnr,
      laufi       LIKE payr-laufi,
      checf       LIKE payr-checf,
      v_checf     LIKE pcec-checf,
      v_chect     LIKE pcec-chect,
      v_stapi     LIKE pcec-stapi,
      chect2      LIKE payr-chect,
      hbkid       LIKE payr-hbkid,
      hktid       LIKE pcec-hktid,
      chect       LIKE regud-chect,
      dig(13),
      stapf       LIKE regud-stapf,
      remesa      LIKE pcec-stapi,
      rwbtr       LIKE payr-rwbtr,
      let(130),
      let1(80),
      let2(80),
      spellw      LIKE spell-word,
      spelld      LIKE spell-decword,
      escribir(1),
      banco(35),
      pais        LIKE t005t-landx,
      land1       LIKE t005t-land1.


DATA: xvorl LIKE reguh-xvorl.
DATA: cfe_venc(30).
* sotilr  05.08.2002

*---------------------------------------------------------------------*
*       FORM CHEQUE                                                   *
*---------------------------------------------------------------------*
FORM cheque TABLES table_entrada STRUCTURE itcsy
                   table_salida  STRUCTURE itcsy.


  READ TABLE table_entrada WITH KEY 'REGUH-ZBUKR'.
  MOVE table_entrada-value TO bukrs.

  READ TABLE table_entrada WITH KEY 'REGUH-HBKID'.
  MOVE table_entrada-value TO hbkid.

  READ TABLE table_entrada WITH KEY 'REGUH-HKTID'.
  MOVE table_entrada-value TO hktid.
  READ TABLE table_entrada WITH KEY 'REGUD-CHECT'.
  MOVE table_entrada-value TO chect.
  READ TABLE table_entrada WITH KEY 'REGUH-XVORL'.
  MOVE table_entrada-value TO xvorl.
  READ TABLE table_entrada WITH KEY 'REGUD-STAPF'.
  MOVE table_entrada-value TO stapf.
  READ TABLE table_entrada WITH KEY 'REGUH-LAUFI'.
  MOVE table_entrada-value TO laufi.
  READ TABLE table_entrada WITH KEY 'REGUH-LAUFD'.
  MOVE table_entrada-value TO laufd.
  READ TABLE table_entrada WITH KEY 'REGUH-LIFNR'.
  MOVE table_entrada-value TO lifnr.
  READ TABLE table_entrada WITH KEY 'REGUP-BELNR'.
  MOVE table_entrada-value TO belnr.


  PERFORM conversion_belnr USING belnr
                           CHANGING xbelnr.
  PERFORM conversion_lifnr USING lifnr
                           CHANGING xlifnr.

  WRITE laufd TO xlaufd.
  CLEAR vblnr.
  SELECT  vblnr INTO vblnr FROM regup WHERE zbukr = bukrs
                                            AND   laufi = laufi
                                            AND   lifnr = xlifnr
                                            AND   belnr = xbelnr
                                            AND   xvorl NE 'X'.
  ENDSELECT.
  CLEAR: chect2,remesa.
  SELECT chect INTO chect2
                  FROM payr
                  WHERE zbukr = bukrs
                  AND   hbkid = hbkid
                  AND   hktid = hktid
                  AND   laufi = laufi
                  AND   lifnr = xlifnr
                  AND   vblnr = vblnr.
*                  AND   voidr < '01'.
  ENDSELECT.

* A la generación únicamente y no a la reimpresión.
  IF chect2 IS INITIAL.
    CLEAR chect2.
    chect2 = chect.
  ENDIF.

*  SELECT SINGLE stapi INTO remesa
  SELECT checf chect stapi INTO (v_checf, v_chect, v_stapi)
    FROM pcec  WHERE zbukr  = bukrs
                             AND   hbkid  = hbkid
                             AND   hktid  = hktid.

    IF v_checf <= chect2 AND v_chect >= chect2 .
      remesa = v_stapi.
    ENDIF.

  ENDSELECT.


  IF xvorl IS INITIAL.
    CLEAR chect2.
    chect2 = chect.
  ENDIF.
* seidor. 040705.
  DATA: zaux1(11).
  CONCATENATE chect2(4) chect2+5(7) INTO zaux1.
*  dig = chect2 MOD 7.
  dig = zaux1 MOD 7.
* end seidor. 040705.
  CONDENSE dig NO-GAPS.

  CLEAR table_salida.
  table_salida-name = 'DIG'.
  MOVE dig TO table_salida-value.
  APPEND table_salida.

  CLEAR table_salida.
  table_salida-name = 'CHECT2'.
  table_salida-value = chect2.
  APPEND table_salida.

  CLEAR table_salida.
  table_salida-name = 'REMESA'.
  table_salida-value = remesa.
  APPEND table_salida.

ENDFORM.                    "cheque

*---------------------------------------------------------------------*
*       FORM IMPORTE                                                  *
*---------------------------------------------------------------------*
FORM importe TABLES table_entrada STRUCTURE itcsy
                    table_salida  STRUCTURE itcsy.


  READ TABLE table_entrada WITH KEY 'SPELL-WORD'.
  MOVE table_entrada-value TO spellw.

  READ TABLE table_entrada WITH KEY 'SPELL-DECWORD'.
  MOVE table_entrada-value TO spelld.

  CONCATENATE spellw  'con' spelld  'céntimos' '****' INTO let
  SEPARATED BY space.

  CALL FUNCTION 'RKD_WORD_WRAP'
    EXPORTING
      textline            = let
      outputlen           = 80
    IMPORTING
      out_line1           = let1
      out_line2           = let2
    EXCEPTIONS
      outputlen_too_large = 1
      OTHERS              = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CLEAR: table_salida.
  table_salida-name = 'LET1'.
  MOVE let1 TO table_salida-value.
  APPEND table_salida.


  CLEAR: table_salida.
  table_salida-name = 'LET2'.
  MOVE let2 TO table_salida-value.
  APPEND table_salida.

  IF let2 IS INITIAL.
    escribir = 'N'.
  ELSE.
    escribir = 'S'.
  ENDIF.

  CLEAR: table_salida.
  table_salida-name = 'ESCRIBIR'.
  MOVE escribir TO table_salida-value.
  APPEND table_salida.

ENDFORM.                    "importe


*&---------------------------------------------------------------------*
*&      Form  conv_importe
*&---------------------------------------------------------------------*
FORM conv_importe USING    import.
  break jpardo.
  DO.
    REPLACE ',' WITH ' ' INTO import.
    REPLACE '.' WITH ' ' INTO import.
    IF sy-subrc NE 0.
      EXIT.
    ENDIF.
  ENDDO.

ENDFORM.                    " conv_importe
*&---------------------------------------------------------------------*
*&      Form  conversion_belnr
*&---------------------------------------------------------------------*
FORM conversion_belnr USING    belnr
                      CHANGING xbelnr.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = belnr
    IMPORTING
      output = xbelnr.

ENDFORM.                    " conversion_belnr
*&---------------------------------------------------------------------*
*&      Form  conversion_lifnr
*&---------------------------------------------------------------------*
FORM conversion_lifnr USING    lifnr
                      CHANGING xlifnr.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = lifnr
    IMPORTING
      output = xlifnr.

ENDFORM.                    " conversion_lifnr

**---------------------------------------------------------------------*
**       FORM DIREC                                                  *
**---------------------------------------------------------------------*
FORM pais TABLES table_entrada STRUCTURE itcsy
                 table_salida  STRUCTURE itcsy.


  READ TABLE table_entrada WITH KEY 'REGUH-LAND1'.
  MOVE table_entrada-value TO land1.
  CLEAR pais.
  SELECT SINGLE landx INTO pais FROM t005t WHERE land1 = land1
                                           AND   spras = sy-langu.
  CLEAR: table_salida.
  table_salida-name = 'PAIS'.
  table_salida-value = pais.
  APPEND table_salida.

ENDFORM.                    "pais

*---------------------------------------------------------------------*
*       FORM FECHA_VENCIMIENTO                                        *
*---------------------------------------------------------------------*
FORM fecha_vencimiento  TABLES table_entrada STRUCTURE itcsy
                               table_salida  STRUCTURE itcsy.

  DATA: longit LIKE sy-tabix.

  READ TABLE table_entrada WITH KEY 'REGUD-WEFIW'.
  MOVE table_entrada-value TO cfe_venc.

  CLEAR: longit.
  longit = strlen( cfe_venc ).

  IF longit = 8.      "Mayo
    REPLACE '.' INTO cfe_venc WITH '   de     '.
  ELSEIF longit = 9.  "Enero, Marzo, Abril, Junio, Julio
    REPLACE '.' INTO cfe_venc WITH '  de     '.
  ELSEIF longit = 10. "Agosto
    REPLACE '.' INTO cfe_venc WITH '  de    '.
  ELSEIF longit = 11. "Febrero, Octubre
    REPLACE '.' INTO cfe_venc WITH '   de   '.
  ELSEIF longit = 13. "Noviembre, Diciembre
    REPLACE '.' INTO cfe_venc WITH '  de '.
  ELSEIF longit = 14.  "Septiembre
    REPLACE '.' INTO cfe_venc WITH ' de '.
  ELSE.
    REPLACE '.' INTO cfe_venc WITH '  de '.
  ENDIF.

*  REPLACE '.' INTO cfe_venc WITH ',    '.

  READ TABLE table_entrada WITH KEY 'REGUD-GJAHR'.
  IF sy-subrc IS INITIAL.
    CONCATENATE cfe_venc table_entrada-value INTO cfe_venc
*    SEPARATED BY '. '.
    SEPARATED BY '  de    '.
  ELSE.
    READ TABLE table_entrada WITH KEY 'HLP_GJAHR2'.
    IF sy-subrc IS INITIAL.
      CONCATENATE cfe_venc table_entrada-value INTO cfe_venc
*    SEPARATED BY '. '.
      SEPARATED BY '  de    '.
    ENDIF.
  ENDIF.

*  CONDENSE cfe_venc.

  LOOP AT table_salida WHERE name = 'XWEFIW'.
    table_salida-value = cfe_venc.
    MODIFY table_salida.
    CLEAR table_salida.
  ENDLOOP.

  CLEAR cfe_venc.

ENDFORM.                    "fecha_vencimiento

*---------------------------------------------------------------------*
*       FORM IBAN                                        *
*---------------------------------------------------------------------*
FORM iban  TABLES table_entrada STRUCTURE itcsy
                  table_salida  STRUCTURE itcsy.

  DATA: xubnkl LIKE reguh-ubnkl,
        xubknt LIKE reguh-ubknt,
        xubkon LIKE reguh-ubkon.

  break almenar.
  READ TABLE table_entrada WITH KEY 'REGUH-UBNKL'.
  MOVE table_entrada-value TO xubnkl.

  READ TABLE table_entrada WITH KEY 'REGUH-UBKNT'.
  MOVE table_entrada-value TO xubknt.

  READ TABLE table_entrada WITH KEY 'REGUH-UBKON'.
  MOVE table_entrada-value TO xubkon.

  DATA xiban LIKE tiban-iban.
  SELECT SINGLE iban FROM tiban INTO xiban
                     WHERE banks = 'ES'
                     AND   bankl = xubnkl
                     AND   bankn = xubknt
                     AND   bkont = xubkon.

  LOOP AT table_salida WHERE name = 'XIBAN'.
    table_salida-value = xiban.
    MODIFY table_salida.
    CLEAR table_salida.
  ENDLOOP.


ENDFORM.                    "iban


*&--------------------------------------------------------------------*
*&      Form  REGIO
*&--------------------------------------------------------------------*
*       text
*---------------------------------------------------------------------*
*      -->INPUT_TABLEtext
*      -->OUTPUT_TABLtext
*---------------------------------------------------------------------*
FORM regio TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.
  TABLES: t005u.

  DATA: zregio LIKE t005u-bland.

  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO zregio.

  SELECT SINGLE * FROM t005u WHERE spras = sy-langu
                               AND land1 = 'ES'
                               AND bland = zregio.
  IF sy-subrc = 0.
    MOVE t005u-bezei TO output_table-value.
    MODIFY output_table TRANSPORTING value WHERE name = 'TEXTREG'.
  ENDIF.
ENDFORM.                    "REGIO


*&---------------------------------------------------------------------*
*&      Form  nombre_empresa
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->INPUT_TABLE   text
*      -->OUTPUT_TABLE  text
*----------------------------------------------------------------------*
FORM nombre_empresa TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.

  DATA: v_bukrs    LIKE t001-bukrs,
*        zbutxt_soc LIKE t001-butxt.
        lv_obj     LIKE t001-adrnr,
        zbutxt_soc LIKE adrc-name1,
        v_hbkid    LIKE rffbwe-hbkid.

  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO v_bukrs.

* SI LA CLAVE DE BANCO ES IDLCX Ó IDVCA Y LA
* SOCIEDAD ES DELEGACIONES, TIENE QUE SACAR LA DIRECCIÓN
* DE LA SOCIEDAD PRINCIPAL.
  READ TABLE input_table INDEX 2.
  MOVE input_table-value TO v_hbkid.

  IF v_hbkid = 'IDLCX' OR v_hbkid = 'IDVCA' OR v_hbkid = 'IDSTT' AND v_bukrs = '07'.
    v_bukrs = '01'.
  ENDIF.

  CLEAR: zbutxt_soc, lv_obj.
* Obtener para la sociedad de entrada, la región y la empresa
*  SELECT SINGLE butxt INTO zbutxt_soc FROM t001 WHERE bukrs = v_bukrs.
  SELECT SINGLE adrnr INTO lv_obj FROM t001 WHERE bukrs = v_bukrs.

  IF sy-subrc = 0.
    SELECT SINGLE name1 INTO zbutxt_soc FROM adrc WHERE addrnumber = lv_obj.
    IF sy-subrc = 0.
      MOVE zbutxt_soc TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'TEXTEMP'.
    ENDIF.
  ENDIF.
ENDFORM.                    "NOMBRE_EMPRESA


*&---------------------------------------------------------------------*
*&      Form  IMPORTE_LONG11
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->INPUT_TABLE   text
*      -->OUTPUT_TABLE  text
*----------------------------------------------------------------------*
FORM importe_long11 TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.

  DATA: zswnet(20),
        zlong_imp  LIKE sy-tabix,
        znum_ceros LIKE sy-tabix,
        ziter      LIKE sy-tabix.

  CLEAR: zlong_imp, zswnet, znum_ceros.
  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO zswnet.

* Se le quitan los puntos y las comas al importe
  REPLACE '.' INTO zswnet WITH ' '.
  REPLACE ',' INTO zswnet WITH ' '.
  CONDENSE zswnet NO-GAPS.
* Se rellena con ceros delante hasta longitud 11
  zlong_imp = strlen( zswnet ).
  IF zlong_imp < 11.
    znum_ceros = 11 - zlong_imp.

    CLEAR: ziter.
    WHILE ziter < znum_ceros.
      ziter = ziter + 1.
      CONCATENATE '0' zswnet INTO zswnet.
    ENDWHILE.

  ENDIF.

  MOVE zswnet TO output_table-value.
  MODIFY output_table TRANSPORTING value WHERE name = 'IMPORTE11'.

ENDFORM.                    "importe_long11



*&---------------------------------------------------------------------*
*&      Form  region_sociedad
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->INPUT_TABLE   text
*      -->OUTPUT_TABLE  text
*----------------------------------------------------------------------*
FORM region_sociedad TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.

  DATA: v_bukrs LIKE t001-bukrs,
        zort01  LIKE t001-ort01.

  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO v_bukrs.


  CLEAR: zort01.
* Obtener para la sociedad de entrada, la región y la empresa
  SELECT SINGLE ort01 INTO zort01 FROM t001 WHERE bukrs = v_bukrs.
  IF sy-subrc = 0.
    MOVE zort01 TO output_table-value.
    MODIFY output_table TRANSPORTING value WHERE name = 'REGSOCI'.
  ENDIF.
ENDFORM.                    "region_sociedad


*&---------------------------------------------------------------------*
*&      Form  mes_letra
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->INPUT_TABLE   text
*      -->OUTPUT_TABLE  text
*----------------------------------------------------------------------*
FORM mes_letra TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.

  DATA: mes_num(2),
        mes_letra(15).

  CLEAR: mes_num.
  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO mes_num.


  CLEAR: mes_letra.
  CASE mes_num.
    WHEN '01'.
      mes_letra = 'Enero'.
    WHEN '02'.
      mes_letra = 'Febrero'.
    WHEN '03'.
      mes_letra = 'Marzo'.
    WHEN '04'.
      mes_letra = 'Abril'.
    WHEN '05'.
      mes_letra = 'Mayo'.
    WHEN '06'.
      mes_letra = 'Junio'.
    WHEN '07'.
      mes_letra = 'Julio'.
    WHEN '08'.
      mes_letra = 'Agosto'.
    WHEN '09'.
      mes_letra = 'Septiembre'.
    WHEN '10'.
      mes_letra = 'Octubre'.
    WHEN '11'.
      mes_letra = 'Noviembre'.
    WHEN '12'.
      mes_letra = 'Diciembre'.

  ENDCASE.

  MOVE mes_letra TO output_table-value.
  MODIFY output_table TRANSPORTING value WHERE name = 'MESL'.

ENDFORM.                    "mes_letra



*---------------------------------------------------------------------*
*       FORM FECHA_VENCIMIENTO2                                       *
*---------------------------------------------------------------------*
FORM fecha_vencimiento2  TABLES table_entrada STRUCTURE itcsy
                               table_salida  STRUCTURE itcsy.

  READ TABLE table_entrada WITH KEY 'REGUD-WEFIW'.
  MOVE table_entrada-value TO cfe_venc.

  REPLACE '.' INTO cfe_venc WITH ' de'.

  READ TABLE table_entrada WITH KEY 'REGUD-GJAHR'.
  IF sy-subrc IS INITIAL.
    CONCATENATE cfe_venc table_entrada-value INTO cfe_venc
*    SEPARATED BY '. '.
    SEPARATED BY ' de '.
  ELSE.
    READ TABLE table_entrada WITH KEY 'HLP_GJAHR2'.
    IF sy-subrc IS INITIAL.
      CONCATENATE cfe_venc table_entrada-value INTO cfe_venc
*    SEPARATED BY '. '.
     SEPARATED BY ' de '.
    ENDIF.
  ENDIF.

  CONDENSE cfe_venc.

  LOOP AT table_salida WHERE name = 'XWEFIW2'.
    table_salida-value = cfe_venc.
    MODIFY table_salida.
    CLEAR table_salida.
  ENDLOOP.

  CLEAR cfe_venc.

ENDFORM.                    "fecha_vencimiento2


*&---------------------------------------------------------------------*
*&      Form  direcc_empresa
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->INPUT_TABLE   text
*      -->OUTPUT_TABLE  text
*----------------------------------------------------------------------*
FORM direcc_empresa TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.

  DATA: v_bukrs     LIKE t001-bukrs,
        zadrnr      LIKE t001-adrnr,
        zcity1      LIKE adrc-city1,
        zpost_code1 LIKE adrc-post_code1,
        zstreet     LIKE adrc-street,
        zhouse_num1 LIKE adrc-house_num1,
        zregion     LIKE adrc-region,
        zlangu      LIKE adrc-langu,
        zcountry    LIKE adrc-country,
        zbezei      LIKE t005u-bezei,
        v_hbkid     LIKE rffbwe-hbkid.

  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO v_bukrs.

* SI LA CLAVE DE BANCO ES IDLCX Ó IDVCA Y LA
* SOCIEDAD ES DELEGACIONES, TIENE QUE SACAR LA DIRECCIÓN
* DE LA SOCIEDAD PRINCIPAL.
  READ TABLE input_table INDEX 2.
  MOVE input_table-value TO v_hbkid.

  IF v_hbkid = 'IDLCX' OR v_hbkid = 'IDVCA' OR v_hbkid = 'IDSTT' AND v_bukrs = '07'.
    v_bukrs = '01'.
  ENDIF.

  CLEAR: zadrnr.
* Obtener para la sociedad de entrada, la región y la empresa
  SELECT SINGLE adrnr INTO zadrnr FROM t001 WHERE bukrs = v_bukrs.
  IF sy-subrc = 0.
    CLEAR: zcity1, zpost_code1, zstreet, zhouse_num1, zregion, zlangu, zcountry.
    SELECT SINGLE city1 post_code1 street house_num1 region langu country
            INTO (zcity1, zpost_code1, zstreet, zhouse_num1, zregion, zlangu, zcountry )
            FROM adrc WHERE addrnumber = zadrnr.
    IF sy-subrc = 0.
      MOVE zcity1 TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'ZPOBLAC'.

      MOVE zpost_code1 TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'ZCODPOST'.

      MOVE zstreet TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'ZCALLE'.

      MOVE zhouse_num1 TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'ZNUMCALLE'.

      CLEAR: zbezei.
      SELECT SINGLE bezei INTO zbezei FROM t005u WHERE spras = zlangu
              AND land1 = zcountry AND bland = zregion.
      IF sy-subrc = 0.
        MOVE zbezei TO output_table-value.
        MODIFY output_table TRANSPORTING value WHERE name = 'ZPROVIN'.
      ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.                    "DIRECC_EMPRESA


*&---------------------------------------------------------------------*
*&      Form  FAXTLF_EMPRESA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->INPUT_TABLE   text
*      -->OUTPUT_TABLE  text
*----------------------------------------------------------------------*
FORM faxtlf_empresa TABLES input_table STRUCTURE itcsy
                 output_table STRUCTURE itcsy.

  DATA: v_bukrs     LIKE t001-bukrs,
        zadrnr      LIKE t001-adrnr,
        zfax_number LIKE adrc-fax_number,
        ztel_number LIKE adrc-tel_number,
        v_hbkid     LIKE rffbwe-hbkid.

  READ TABLE input_table INDEX 1.
  MOVE input_table-value TO v_bukrs.

* SI LA CLAVE DE BANCO ES IDLCX Ó IDVCA Y LA
* SOCIEDAD ES DELEGACIONES, TIENE QUE SACAR LA DIRECCIÓN
* DE LA SOCIEDAD PRINCIPAL.
  READ TABLE input_table INDEX 2.
  MOVE input_table-value TO v_hbkid.

  IF v_hbkid = 'IDLCX' OR v_hbkid = 'IDVCA' OR v_hbkid = 'IDSTT' AND v_bukrs = '07'.
    v_bukrs = '01'.
  ENDIF.

  CLEAR: zadrnr.
* Obtener para la sociedad de entrada, la región y la empresa
  SELECT SINGLE adrnr INTO zadrnr FROM t001 WHERE bukrs = v_bukrs.
  IF sy-subrc = 0.
    CLEAR: ztel_number, zfax_number.
    SELECT SINGLE tel_number fax_number
           INTO (ztel_number, zfax_number)
            FROM adrc WHERE addrnumber = zadrnr.
    IF sy-subrc = 0.
      MOVE ztel_number TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'ZTEL_NUMBER'.

      MOVE zfax_number TO output_table-value.
      MODIFY output_table TRANSPORTING value WHERE name = 'ZFAX_NUMBER'.
    ENDIF.
  ENDIF.
ENDFORM.                    "FAXTLF_EMPRESA
