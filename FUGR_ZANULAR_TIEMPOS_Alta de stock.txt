FUNCTION zanular_tiempos.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_AUFNR) TYPE  AUFNR
*"     VALUE(I_PESO) TYPE  MENGE_D
*"  EXPORTING
*"     VALUE(E_ERROR) TYPE  XFELD
*"  TABLES
*"      T_MESSAGES STRUCTURE  BAPIRET2 OPTIONAL
*"----------------------------------------------------------------------
* A partir del lote mes, buscar el lote sap para dar de baja.


  DATA: t_order_range    TYPE TABLE OF bapi_pi_orderrange,
        wa_order_range   TYPE          bapi_pi_orderrange,
        wa_return        TYPE          bapiret1,
        lt_return        TYPE TABLE OF bapiret2,
        ls_return        TYPE bapiret2,
        wa_return_1      TYPE          bapiret1,
        wa_detail        TYPE          bapi_pi_confirm,
        t_goodsmovements TYPE TABLE OF bapi2017_gm_item_show,
        t_failedgmoves   TYPE TABLE OF bapi_coru_fgm,
        t_confirmations  TYPE TABLE OF bapi_pi_conf_key,
        wa_confirmations TYPE          bapi_pi_conf_key.


  DATA: lv_extnumber TYPE balnrext.





* obtenemos las notificaciones de tiempo
  wa_order_range-sign = 'I'.
  wa_order_range-option = 'EQ'.
  wa_order_range-low = i_aufnr.
  APPEND wa_order_range TO t_order_range.

  CALL FUNCTION 'BAPI_PROCORDCONF_GETLIST'
* EXPORTING
*   PHASE               =
*   SEC_RESOURCE        =
    IMPORTING
      return        = wa_return
    TABLES
      order_range   = t_order_range
*     CONF_RANGE    =
      confirmations = t_confirmations.



* borramos las notificaciones de tiempo
  LOOP AT t_confirmations INTO wa_confirmations WHERE reversed      = '' AND
                                                      rev_conf_cnt = 0  AND
                                                      phase        = '0040'.

    CLEAR: wa_return_1, wa_detail, t_goodsmovements, t_failedgmoves.
    REFRESH: t_goodsmovements, t_failedgmoves.

    CALL FUNCTION 'BAPI_PROCORDCONF_GETDETAIL'
      EXPORTING
        confirmation        = wa_confirmations-conf_no
        confirmationcounter = wa_confirmations-conf_cnt
      IMPORTING
        return              = wa_return_1
        conf_detail         = wa_detail
      TABLES
        goodsmovements      = t_goodsmovements
        failedgmoves        = t_failedgmoves.

    CHECK wa_detail-yield = i_peso.

*    IF wa_return_1-type <> 'E' AND wa_detail-phase = '0040'.   "AND wa_detail-yield = p_menge
    CLEAR: wa_return_1.


    CALL FUNCTION 'BAPI_PROCORDCONF_CANCEL'
      EXPORTING
        confirmation        = wa_confirmations-conf_no
        confirmationcounter = wa_confirmations-conf_cnt
        postg_date          = sy-datum
*       CONF_TEXT           =
      IMPORTING
        return              = wa_return_1
*       LOCKED              =
*       CREATED_CONF_NO     =
*       CREATED_CONF_COUNT  =
      .

    IF wa_return_1-type <> 'E'.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      EXIT.

    ELSE.
      e_error  = 'X'.

      MOVE-CORRESPONDING wa_return_1 TO ls_return.
      APPEND ls_return TO lt_return.

      CLEAR lv_extnumber.
      CONCATENATE 'Notif.Tiempo' wa_confirmations-conf_no wa_confirmations-conf_cnt
        INTO lv_extnumber SEPARATED BY space.

      CALL FUNCTION 'ZMFPP_GUARDAR_LOG'
        EXPORTING
          objeto    = 'ZSAP_MES'
          subobjeto = 'ZANULAR_TIEMPOS'
          mensajes  = lt_return[]
          extnumber = lv_extnumber.
    ENDIF.
*    ENDIF.
  ENDLOOP.



ENDFUNCTION.
