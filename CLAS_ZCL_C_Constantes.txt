class ZCL_C definition
  public
  final
  create public .

public section.

  constants BUKRS type BKPF-BUKRS value '2000' ##NO_TEXT.
  constants EMPRESA type BKPF-XBLNR value 'Hinojosa' ##NO_TEXT.
  constants RUTA_DESCARGA_SLNK type STRING value 'd:\Google Drive\CODIGO\Reports_slnk\Hinojosa\' ##NO_TEXT.
  constants RFC_PRODUCCION type CHAR40 value 'TMSSUP@HEP.DOMAIN_HED' ##NO_TEXT.
  constants ENTORNO_DESARROLLO type SY-SYSID value 'HED' ##NO_TEXT.
  constants ENTORNO_PRODUCCION type SY-SYSID value 'HEP' ##NO_TEXT.
  constants WAERS type WAERS value 'EUR' ##NO_TEXT.
  constants IP_QAS type STRING value '10.101.10.29' ##NO_TEXT.
  constants IP_PRD type STRING value '10.101.10.22' ##NO_TEXT.
  constants DEST_AVISOS_MAIL type STRING value 'andres@sap4.com' ##NO_TEXT.
  constants RFC_DESARROLLO type CHAR40 value 'TMSSUP@HED.DOMAIN_HED' ##NO_TEXT.
  constants RFC_CALIDAD type CHAR40 value 'TMSSUP@HEQ.DOMAIN_HED' ##NO_TEXT.
  constants PLAN_CUENTAS type KTOPL value 'PGCH' ##NO_TEXT.
  constants SOCIEDAD_CO type KOKRS value '1000' ##NO_TEXT.
  constants USUARIO_AP type SY-UNAME value 'PARTNERSAP8' ##NO_TEXT.
  constants WERKS type WERKS_D value '2000' ##NO_TEXT.
  constants RUTAS_TASKS type STRING value 'http://minisap.sap4.com:443/sap/bc/bsp/sap/ztasksf/index.html?&cliente=HIN&objeto=' ##NO_TEXT.
  constants CLIENTE_TASKS type CHAR3 value 'HIN' ##NO_TEXT.
  constants CODEPAGE type TCP00-CPCODEPAGE value '4103' ##NO_TEXT.
  constants CODEPAGE_HTML type TCP00-CPCODEPAGE value '4103' ##NO_TEXT.
  constants USUARIOS_SISTEMAS type STRING value 'DESARROLLO,2572,1050,ANDRES_EDU' ##NO_TEXT.
  constants PROG_ZLOG type SY-REPID value 'ZLOG' ##NO_TEXT.
  constants ZDOCUMENTOS_GRABAR_XSTRING type ABAP_BOOL value 'X' ##NO_TEXT.
  constants ZDOCUMENTOS_CODEPAGE_OLD type TCP00-CPCODEPAGE value '1100' ##NO_TEXT.
  constants BREAK_CONDICIONAL type ABAP_BOOL value '' ##NO_TEXT.
  constants CODEPAGE_UNICODE type ABAP_ENCODING value '4110' ##NO_TEXT.
  constants LGNUM type LGNUM value '201' ##NO_TEXT.
  constants TABLA_ZLOG type STRING value 'ZLOG' ##NO_TEXT.
  constants TABLA_ZPARAMETROS type STRING value 'ZPARAMETROS' ##NO_TEXT.
  constants HANA type ABAP_BOOL value '' ##NO_TEXT.
  constants ZPARAMETROS_ALV type ABAP_BOOL value 'X' ##NO_TEXT.
  constants MAIL_INCLUIR_SISTEMA_EN_ASUNTO type STRING value '' ##NO_TEXT.
  constants MAIL_LIMITE_TAMANYO_ADJUNTOS type INT4 value 30 ##NO_TEXT.
  constants NOMBRE_PC type STRING value 'FIJOI7,ANDRES-PC,S3,MACBOOK,PECECITO,EDGE4' ##NO_TEXT.
  constants SALIDA_MAIL_DESARROLLO type ABAP_BOOL value 'X' ##NO_TEXT.
  constants ENTORNO_CALIDAD type SY-SYSID value 'HEQ' ##NO_TEXT.
  constants ROL_SISTEMAS type STRING value 'ZTECNICO_HINOJOSA' ##NO_TEXT.
  constants DOMINIO_TRANSPORTE type TMSDOMNAM value 'DOMAIN_HED' ##NO_TEXT.
  constants SISTEMA_TRANSPORTE type TMSSYSNAM value 'HEP' ##NO_TEXT.
  constants ZCL_ALV type STRING value 'ZCL_ALV' ##NO_TEXT.

  class-methods AVISO_MAIL
    importing
      !SUBJECT type ANY
      !DIRECCION type ANY default DEST_AVISOS_MAIL
      !TEXTO type ANY optional
    preferred parameter SUBJECT .
  class-methods AVISO_MAIL_AP
    importing
      !SUBJECT type ANY
      !DIRECCION type ANY default USUARIO_AP
      !TEXTO type ANY optional
    preferred parameter SUBJECT .
  class-methods GET_CONSTANTE
    importing
      !CONSTANTE type ANY
    returning
      value(VALOR) type STRING .
  class-methods EXISTE
    importing
      !CONSTANTE type ANY
      !VALOR type ANY
    returning
      value(EXISTE) type ABAP_BOOL .
protected section.
private section.
endclass. "ZCL_C definition
class ZCL_C implementation.
method AVISO_MAIL.
  DATA l_texto TYPE string.

  IF texto IS INITIAL.
    l_texto = subject.
  ELSE.
    l_texto = texto.
  ENDIF.

  zcl_ap_envio_mail=>mail( subject = subject
                           direccion = direccion
                           texto   = l_texto ).

endmethod.
method AVISO_MAIL_AP.
*  DATA l_texto TYPE string.
*
*  IF texto IS INITIAL.
*    l_texto = subject.
*  ELSE.
*    l_texto = texto.
*  ENDIF.
*
*  zcl_ap_envio_mail=>mail( subject = subject
*                           direccion = direccion
*                           texto   = l_texto ).

endmethod.
  METHOD existe.
    DATA: l_string    TYPE string,
          l_atributo1 TYPE zparametros-atributo1.

    CLEAR existe.
    l_string = get_constante( constante ).
    IF l_string = valor.
      existe = 'X'.
    ELSE.
      SELECT SINGLE atributo1 FROM zparametros
        INTO l_atributo1
       WHERE clave  = 'ZCL_C'
         AND campo  = constante
         AND valor  = valor.
      IF sy-subrc = 0.
        existe = 'X'.
      ENDIF.
    ENDIF.

  ENDMETHOD.
  METHOD get_constante.
    DATA: l_campo(80),
          l_atributo1 TYPE zparametros-atributo1.
    FIELD-SYMBOLS <fs> TYPE any.

    CONCATENATE 'ZCL_C=>' constante INTO l_campo.
    ASSIGN (l_campo) TO <fs>.
    IF sy-subrc = 0.
      valor = <fs>.
    ELSE.
      SELECT SINGLE atributo1 FROM zparametros
        INTO l_atributo1
       WHERE clave = 'ZCL_C'
         AND campo = constante.
      IF sy-subrc = 0.
        valor = l_atributo1.
      ENDIF.
    ENDIF.

  ENDMETHOD.
