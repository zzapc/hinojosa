*&---------------------------------------------------------------------*
*&  Include           ZRFI0001_FRM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_select_data.

*  DATA: lt_bsik      TYPE TABLE OF bsik,
*        ls_bsik      TYPE          bsik,
*        ls_datos     LIKE LINE OF  gt_datos,
*        ls_datos_aux LIKE LINE OF  gt_datos.
*
*  REFRESH: lt_bsik.
*  CLEAR: lt_bsik, ls_bsik.
*
*  SELECT * FROM bsik INTO TABLE lt_bsik
*    WHERE bukrs IN so_bukrs
*    AND blart IN so_blart
*    AND umskz IN so_umskz
*    AND lifnr IN so_lifnr
*    AND zfbdt <= p_zfbdt.
*
*  LOOP AT lt_bsik INTO ls_bsik.
*    CLEAR: ls_datos, ls_datos_aux.
*    READ TABLE gt_datos INTO ls_datos_aux WITH KEY bukrs = ls_bsik-bukrs
*                                               blart = ls_bsik-blart
*                                               umskz = ls_bsik-umskz
*                                               lifnr = ls_bsik-lifnr
*                                               gjahr = ls_bsik-gjahr
*                                               belnr = ls_bsik-belnr.
*    IF ls_datos_aux IS INITIAL.
*      MOVE-CORRESPONDING ls_bsik TO ls_datos.
*      APPEND ls_datos TO gt_datos.
*    ENDIF.
*
*  ENDLOOP.


ENDFORM.                    " F_SELECT_DATA
*&---------------------------------------------------------------------*
*&      Form  F_COMP_AUTOMAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_comp_automat .

ENDFORM.                    " F_COMP_AUTOMAT

*&---------------------------------------------------------------------*
*&      Form  SELECCION_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM seleccion_datos .

  CLEAR gt_bsik. REFRESH gt_bsik.

  IF s_lifnr[] IS INITIAL.

    SELECT * FROM bsik INTO TABLE gt_bsik
      WHERE blart IN s_blart
        AND bukrs IN s_bukrs
        AND umskz IN s_umskz
        AND zfbdt LE p_zfbdt.

  ELSE.

    SELECT * FROM bsik INTO TABLE gt_bsik
      WHERE blart IN s_blart
        AND bukrs IN s_bukrs
        AND umskz IN s_umskz
        AND zfbdt LE p_zfbdt
        AND lifnr IN s_lifnr.

  ENDIF.

ENDFORM.                    " SELECCION_DATOS

*&---------------------------------------------------------------------*
*&      Form  EJEC_PROCESO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ejec_proceso .

  DATA: ls_bsik TYPE bsik.


  DATA: lv_mode  TYPE allgazmd VALUE 'N', " 'N' no visual, 'A' visual
        lv_msgid TYPE symsgid,
        lv_msgno TYPE symsgno,
        lv_msgty TYPE symsgty,
        lv_msgv1 TYPE symsgv,
        lv_msgv2 TYPE symsgv,
        lv_msgv3 TYPE symsgv,
        lv_msgv4 TYPE symsgv,
        lv_subrc TYPE sysubrc.
  DATA: lc_error TYPE c.


  CLEAR gv_fecha.
  CONCATENATE p_zfbdt+6(2) '.'
              p_zfbdt+4(2) '.'
              p_zfbdt(4) INTO gv_fecha.

  LOOP AT gt_bsik INTO ls_bsik.


    CALL FUNCTION 'POSTING_INTERFACE_START'
      EXPORTING
        i_client   = sy-mandt
        i_function = 'C'   "Call transaction
        i_mode     = lv_mode
        i_update   = 'S'   "Synchronous update
      EXCEPTIONS
        OTHERS     = 8.
    IF sy-subrc NE 0.
**    IF sy-batch EQ space.
**      sy-msgty = 'A'.
**    ELSE.
**      sy-msgty = 'S'.
**    ENDIF.
**    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
**      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      lc_error = 'X'.
    ENDIF.

    CHECK lc_error IS INITIAL.






    CHECK lc_error IS INITIAL.
*Close the interface function
    CALL FUNCTION 'POSTING_INTERFACE_END'.

*    CLEAR bdc_tab. REFRESH bdc_tab.
*    PERFORM fill_batch_input USING ls_bsik.
*    PERFORM call_transaccion_f_44.

  ENDLOOP.

ENDFORM.                    " EJEC_PROCESO
