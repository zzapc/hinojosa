*&---------------------------------------------------------------------*
*& Report ZEIC_FIRMA_DIGITAL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT zeic_firma_digital MESSAGE-ID zeic_firma.

INCLUDE zeic_constants.

INCLUDE zeic_f01.

INCLUDE <icon>.

INCLUDE <symbol>.

TABLES: /cockpit/thdr, zeic_visor, /cockpit/tflag, /cockpit/twc.

TYPE-POOLS: slis.

CLASS cl_gui_resources DEFINITION LOAD.

TYPES: BEGIN OF  gt_datos_cab .
        INCLUDE STRUCTURE /cockpit/thdr.
TYPES: base1           LIKE zeic_datos_carga-net_amount,
       tipo1           LIKE zeic_datos_carga-tax_rate,
       importe1        LIKE zeic_datos_carga-tax_amount,
       base2           LIKE zeic_datos_carga-net_amount,
       tipo2           LIKE zeic_datos_carga-tax_rate,
       importe2        LIKE zeic_datos_carga-tax_amount,
       base3           LIKE zeic_datos_carga-net_amount,
       tipo3           LIKE zeic_datos_carga-tax_rate,
       importe3        LIKE zeic_datos_carga-tax_amount,
       base4           LIKE zeic_datos_carga-net_amount,
       tipo4           LIKE zeic_datos_carga-tax_rate,
       importe4        LIKE zeic_datos_carga-tax_amount,
       base5           LIKE zeic_datos_carga-net_amount,
       tipo5           LIKE zeic_datos_carga-tax_rate,
       importe5        LIKE zeic_datos_carga-tax_amount,
       base6           LIKE zeic_datos_carga-net_amount,
       tipo6           LIKE zeic_datos_carga-tax_rate,
       importe6        LIKE zeic_datos_carga-tax_amount,
       name1           LIKE lfa1-name1,
       xblnr           LIKE bkpf-xblnr,
       fecha_doc(10),
       fecha_cont(10),
       fecha_gener(10),
       fecha_anul(10),
       documento       LIKE /cockpit/thdr-sap_doc_no,
       tipo_formato    LIKE /cockpit/thdr-zeic_formato,
       status_wc(4), " like /cockpit/twc-WC_STATUS,
       zver(1).

TYPES: END OF gt_datos_cab.

DATA: gt_tab_datos_cab TYPE TABLE OF gt_datos_cab WITH HEADER LINE.
DATA: gt_tab_datos_cab_error TYPE TABLE OF gt_datos_cab.
DATA: lt_tab_datos_det TYPE TABLE OF zeic_datos_det.
DATA: it_datos_cab LIKE /cockpit/shdr_if.
DATA: gt_tab_param TYPE TABLE OF zeic_visor WITH HEADER LINE.

DATA: BEGIN OF it_bukrs OCCURS 0,
        sign(1),
        option(2),
        low       LIKE /cockpit/thdr-comp_code,
        high      LIKE /cockpit/thdr-comp_code,
      END OF it_bukrs.

DATA: BEGIN OF it_status_wc OCCURS 0,
        i_status  LIKE /cockpit/twc-wc_status,
        i_icon(4),
      END OF it_status_wc.

DATA: error(1) .
DATA: lb_auth_act LIKE boole-boole.
DATA: lt_header TYPE TABLE OF gt_datos_cab WITH HEADER LINE.
DATA: ls_header LIKE gt_tab_datos_cab.
DATA: lt_headwc TYPE TABLE OF gt_datos_cab WITH HEADER LINE.
DATA: l_tabix LIKE sy-tabix.
DATA: lt_messages LIKE bapiret2 OCCURS 0 WITH HEADER LINE.

DATA:
  g_okcode               TYPE        sy-ucomm,
  g_container_d0100      TYPE REF TO cl_gui_custom_container,
  g_container_name_d0100 TYPE        scrfname VALUE 'D0100_CONTAINER',
  g_grid_d0100           TYPE REF TO cl_gui_alv_grid.

DATA: g_title             TYPE lvc_title,    " Título del formulario
      gt_grid             TYPE lvc_s_glay,
      gt_list_top_of_page TYPE slis_t_listheader,
      i_structure_name    LIKE dd02l-tabname VALUE 'lt_header'.

DATA: gt_fieldcat TYPE lvc_t_fcat WITH HEADER LINE,
      gs_layout   TYPE lvc_s_layo,
      gt_sort     TYPE lvc_t_sort WITH HEADER LINE,
      is_print    TYPE slis_print_alv.


DATA: BEGIN OF it_soc OCCURS 0,
        sign   TYPE c LENGTH 1,
        option TYPE c LENGTH 2,
        low    LIKE t001-bukrs,
        high   LIKE t001-bukrs,
      END OF it_soc.

DATA: BEGIN OF it_aprobado OCCURS 0,
        sign   TYPE c LENGTH 1,
        option TYPE c LENGTH 2,
        low    LIKE zeic_visor-d_wc_status,
        high   LIKE zeic_visor-d_wc_status,
      END OF it_aprobado.


DATA: BEGIN OF it_paprob OCCURS 0,
        sign   TYPE c LENGTH 1,
        option TYPE c LENGTH 2,
        low    LIKE zeic_visor-d_wc_status,
        high   LIKE zeic_visor-d_wc_status,
      END OF it_paprob.

CONSTANTS:
  c_user_command  TYPE slis_formname VALUE 'USER_COMMAND',
  c_form_cabecera TYPE slis_formname VALUE 'CABECERA',
  c_tipo_grande   TYPE c VALUE 'H'.
*texto(100)  value  'Este programa NO se puede ejecutar en Fondo'(043).

***********************************************************
* INITIALIZATION
***********************************************************
SELECTION-SCREEN: BEGIN OF LINE,
                  POSITION 16.
SELECTION-SCREEN: COMMENT 40(50) text,
                  END OF LINE.

INITIALIZATION.

  text = 'Este programa NO se puede ejecutar en fondo'(043).

***********************************************************
* PARAMETROS DE SELECCION
***********************************************************

  SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
  SELECT-OPTIONS: s_bukrs  FOR /cockpit/thdr-comp_code.       " sociedad
  SELECT-OPTIONS: s_belnr  FOR /cockpit/thdr-sap_doc_no.      " nro doc sap
  SELECT-OPTIONS: s_date   FOR /cockpit/thdr-pstng_date .   " fecha contabilizacion
  SELECT-OPTIONS: s_vendor FOR /cockpit/thdr-vendor_no.       " proveedor
  SELECT-OPTIONS: s_bldat  FOR /cockpit/thdr-doc_date.        " fecha documento
  SELECT-OPTIONS: s_ref    FOR /cockpit/thdr-ref_doc_no.    " referencia

  SELECTION-SCREEN END OF BLOCK b1.

  SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-042.
  SELECT-OPTIONS: s_docno  FOR /cockpit/thdr-docno.            " documento cockpit
  SELECT-OPTIONS: s_gener  FOR /cockpit/thdr-zeic_generado.
  SELECT-OPTIONS: s_anul   FOR /cockpit/thdr-zeic_anulado.
  SELECT-OPTIONS: s_format FOR /cockpit/thdr-zeic_formato DEFAULT 'FID'.

  PARAMETER:  s_follow LIKE /cockpit/thdr-follow_up DEFAULT 'NV'. " eliminar marca de seguimiento.
  PARAMETERS: c_gener AS CHECKBOX DEFAULT 'X' .
  PARAMETERS: c_anul AS CHECKBOX.
  SELECTION-SCREEN END OF BLOCK b2.
***********************************************************
* START-OF-SELECTION
***********************************************************
START-OF-SELECTION.

  IF sy-batch = 'X'.
    MESSAGE e701(bc) WITH 'Este programa NO se puede ejecutar en fondo'(043).
  ELSE.

    PERFORM seleccionar_datos .

    PERFORM mostrar_datos.

  ENDIF.

*&---------------------------------------------------------------------*
*&      Form  SELECCIONAR_DATOS
*&---------------------------------------------------------------------*

FORM seleccionar_datos.

  DATA: l_gener LIKE boole-boole.
  DATA: li_tabix LIKE sy-tabix.
  DATA: li_reg_proc LIKE sy-tabix.
  DATA: li_reg_error LIKE sy-tabix.
  DATA: lb_error LIKE boole-boole.
  DATA: lb_error_proc LIKE boole-boole.
  DATA: ls_ruta_descarga LIKE /cockpit/thdr-zeic_img.
  DATA: lb_posted LIKE boole-boole,
        ls_belnr  LIKE /cockpit/thdr-sap_doc_no,
        name      LIKE lfa1-name1.

  CLEAR error.

  CLEAR: it_bukrs, lt_header, lt_headwc, gt_tab_datos_cab, lt_header,
         gt_tab_param, it_aprobado, it_paprob, it_status_wc.

  REFRESH: it_bukrs, lt_header, lt_headwc, gt_tab_datos_cab, lt_header,
           gt_tab_param, it_aprobado, it_paprob, it_status_wc.

  PERFORM status_web_cycle.

  PERFORM datos_icon_status.

  PERFORM datos_sociedades_param.

** Sociedades de la parametrización
*  select bukrs from zeic_param_visor into it_bukrs-low.
*    it_bukrs-sign = 'I'.
*    it_bukrs-option = 'EQ'.
*    perform authority_check using  ls_header-comp_code
*                               '*'
*                               lb_auth_act.
*    if lb_auth_act ne con_true.
*      append it_bukrs.
*    endif.
*  endselect.
*
*
** Sociedades del select-options.
*  delete s_bukrs where low = '    '.
*
*  if s_bukrs[] is initial.
*    it_soc[] = it_bukrs[].
*  else.
*    select bukrs from t001 into t001-bukrs where bukrs in s_bukrs and bukrs in it_bukrs.
*      perform authority_check using  t001-bukrs
*                               '*'
*                               lb_auth_act.
*      if lb_auth_act ne con_true.
*        it_soc-sign = 'I'.
*        it_soc-option = 'EQ'.
*        it_soc-low = t001-bukrs.
*        append it_soc.
*      endif.
*    endselect.
*  endif.
*
*
*
** Se rellena la tabla de parametrización según las sociedades.
*  loop at it_soc.
*    L_TABIX = SY-TABIX.
*    clear gt_tab_param.
*    select single * from ZEIC_PARAM_VISOR where bukrs = it_soc-low.
*    if sy-subrc eq 0.
*      select  * from zeic_visor into corresponding fields of gt_tab_param where codparam = zeic_param_visor-codparam
*          and tipo_formato in s_format.
*
*        gt_tab_param-codparam = ZEIC_PARAM_VISOR-bukrs.
*        append gt_tab_param.
*      endselect.
*      IF SY-SUBRC NE 0.
*        DELETE IT_SOC INDEX SY-TABIX.
*      ENDIF.
*    endif.
*  endloop.

  SORT gt_tab_param.
  LOOP AT gt_tab_param.
* Sólo se seleccionan los no descargados  con anterioridad.
    PERFORM selecciona_datos.

* Se eliminan los que no están contabilizados.  Preliminares también  puede tener en tabla estatus contabilizado
    IF gt_tab_param-preliminares EQ 'X'.

      PERFORM eliminar_preliminares.

    ENDIF.

    IF gt_tab_param-d_webcycle = 'X'.
* Se descargan contabilizados y contabilizados con flujo en Web Cycle.
* Sólo se seleccionan los no descargados con anterioridad.
* Sólo CONTABILIZADOS.
      PERFORM descarga_contab_en_wc.

    ENDIF.

  ENDLOOP.

* Se eliminan los documentos que han tenido flujo de aprobación y no cumplen
* parametrización.
  PERFORM comprueba_status_wc.

  SORT lt_header.
  DELETE ADJACENT DUPLICATES FROM lt_header.

* Se eliminan generados.
  IF c_gener = 'X'.
    DELETE lt_header WHERE zeic_generado NE con_fech_ini.
  ENDIF.

* Se eliminan anulados.
  IF c_anul = 'X'.
    DELETE lt_header WHERE zeic_anulado = con_fech_ini.
  ENDIF.

  PERFORM eliminar_marca_rastreo.

  LOOP AT lt_header.
    EXIT.
  ENDLOOP.

  IF sy-subrc NE 0.

*   No existen datos para la selección
    CALL FUNCTION 'POPUP_TO_INFORM'
      EXPORTING
        titel = 'Error'(002)
        txt1  = 'No se encontraron registros'(003)
        txt2  = ''.

  ELSE.

    PERFORM formatea_fechas.

    CLEAR: li_reg_proc, li_reg_error, lb_error_proc.
  ENDIF.

ENDFORM.                    " seleccionar_datos

*---------------------------------------------------------------------*
*       FORM AUTHORTY CHECK                                           *
*---------------------------------------------------------------------*
FORM authority_check USING ps_bukrs LIKE  /cockpit/sif-comp_code
                           ps_lifnr LIKE  /cockpit/sif-vendor_no
                           pb_auth_act  LIKE  boole-boole.

  CLEAR: pb_auth_act.

  CALL FUNCTION '/COCKPIT/AUTHORITY_CHECK'
    EXPORTING
      i_actvt        = con_activity_display
      i_bukrs        = ps_bukrs
      i_lifnr        = ps_lifnr
    EXCEPTIONS
      not_authorized = 1
      error_occured  = 2
      OTHERS         = 3.

  IF sy-subrc NE 0.
    pb_auth_act = con_true.
  ENDIF.

ENDFORM.                    "authority_check

*&---------------------------------------------------------------------*
*&      Form  f_alv_configuration
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_alv_configuration.

* Configure the ALV layout.
  PERFORM f_alv_layout_configuration.

  PERFORM f_alv_field_configuration.

ENDFORM.                    " f_alv_configuration

*&---------------------------------------------------------------------*
*&      Form  f_alv_layout_configuration
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*

FORM f_alv_layout_configuration.

  DATA: n          TYPE i,
        lineas(10) TYPE n.

  CLEAR: g_title, gt_grid, gs_layout, is_print.

* Asignación de valores de informe
  DESCRIBE TABLE gt_tab_datos_cab LINES n.
  lineas = n.
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
    EXPORTING
      input  = lineas
    IMPORTING
      output = lineas.

  IF error IS INITIAL.
    CONCATENATE 'Documentos a Generar Datos para el Visor ('(004) lineas ')'(005) INTO g_title.

  ELSE.
    CONCATENATE 'Documentos No Generados/Erroneos ('(006) lineas ')'(005) INTO g_title.
  ENDIF.

  gt_grid-top_p_only = 'X'.
  gt_grid-eol_p_only = 'X'.
  gt_grid-coll_end_l = 'X'.
  gt_grid-coll_top_p = 'X'.
  is_print-no_change_print_params = 'X'.

  gs_layout-cwidth_opt = 'X'.
  gs_layout-sel_mode = 'A'.    "'A' multiples lineas
  gs_layout-zebra = 'X'.
  gs_layout-box_fname = 'ZVER'.


  DATA: ls_line TYPE slis_listheader.

  CLEAR:ls_line, gt_list_top_of_page.
  REFRESH: gt_list_top_of_page.

  ls_line-key = 'Listado de Documentos no tratados'(007).
  ls_line-typ = c_tipo_grande.
  ls_line-info = 'Listado de Documentos no tratados'(007).

  APPEND ls_line TO gt_list_top_of_page.

ENDFORM.                    " f_alv_layout_configuration

*&---------------------------------------------------------------------*
*&      Form  f_alv_display_report
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*

FORM f_alv_display_report.

  IF NOT gt_tab_datos_cab[] IS INITIAL.

    SORT gt_tab_datos_cab BY comp_code fiscal_year ref_doc_no.

    CLEAR gt_sort.
    REFRESH gt_sort.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
      EXPORTING
        i_callback_program       = sy-repid
* Este sólo si quieres un status determinado--> &GEN
        i_callback_pf_status_set = 'STATUS_SET' "c_pf_status_set
        i_callback_user_command  = c_user_command
        i_callback_top_of_page   = 'CABECERA'
        i_structure_name         = i_structure_name
        i_grid_title             = g_title
        i_grid_settings          = gt_grid
        is_layout_lvc            = gs_layout
        it_fieldcat_lvc          = gt_fieldcat[]
        it_sort_lvc              = gt_sort[]
*       i_default                = 'X'
        i_save                   = 'A'
*       is_print                 = is_print
      TABLES
        t_outtab                 = gt_tab_datos_cab[].

  ENDIF.

ENDFORM.                    " f_alv_display_report

*&---------------------------------------------------------------------*
*&      Form  f_alv_field_configuration
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*

FORM f_alv_field_configuration.

  CLEAR gt_fieldcat.
  REFRESH gt_fieldcat.

  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                           'ZVER'
                           'VER'
                           '1'
                           'X'.

* Ya generado
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'ZEIC_GENERADO'
                              'Ya Generado'(008)
                              '10'
                              ''.

* Anulado
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'ZEIC_ANULADO'
                              'Anulado'(009)
                              '10'
                              ''.

* Tipo Formato
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'ZEIC_FORMATO'
                              'Formato'(041)
                              '10'
                              ''.

* status WC
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'STATUS_WC'
                              'Status Web Cycle'(044)
                              '4'
                              ''.

* Sociedad
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'COMP_CODE'
                              'Sociedad'(010)
                              '200'
                              ''.
* Ejercicio
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'FISCAL_YEAR'
                              'Ejercicio'(011)
                              '4'
                              ''.

* Documento SAP
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'SAP_DOC_NO'
                              'Doc. SAP'(012)
                              '14'
                              ''.

* Nro factura
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'XBLNR'
                              'NúmFactura'(013)
                              '10'
                              ''.

* Proveedor
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'VENDOR_NO'
                              'Cod.Prov.'(014)
                              '200'
                              ''.

*Proveedor Nombre
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'NAME1'
                              'Nombre Prov.'(015)
                              '7'
                              ''.
*    Ini: Modificacion Signo importes para eliminar columna factura/abono
*    --> Asteriscamos la columna, para que no se muestre.
** Factura/Abono
*  perform fill_fieldcat using 'gt_tab_datos_cab'
*                              'INVOICE_IND'
*                              'Factura'
*                              '1'
*                              ''.
*    Fin: Modificacion Signo importes para eliminar columna factura/abono


*    Ini: Se añade columna tipo documento MM/FI
*  Tipo de Documento (MM/FI)
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                               'FI_MM_FLG'
                               'MM/FI'(016)
                               '2'
                               ''.
*    Fin: Se añade columna tipo documento MM/FI

* Documento Cockpit
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'DOCNO'
                              'Doc.Cockpit'(017)
                              '14'
                              ''.
* Moneda
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'CURRENCY'
                              'Moneda'(018)
                              '5'
                              ''.

* Importe bruto
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'GROSS_AMOUNT'
                              'Bruto'(019)
                              '13'
                              ''.

* Importe NETO
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'NET_AMOUNT'
                              'Neto'(020)
                              '13'
                              ''.

* Fecha documento
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'FECHA_DOC'
                              'Fecha doc'(021)
                              '8'
                              ''.

* Fecha contabilización
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'FECHA_CONT'
                              'Fecha contable'(022)
                              '8'
                              ''.

* Tipo Iva1
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'TIPO1'
                              'Tipo Iva 1'(023)
                              '7'
                              ''.

*Base1
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'BASE1'
                              'Base 1'(024)
                              '7'
                              ''.

*Importe1
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'IMPORTE1'
                              'Importe 1'(025)
                              '7'
                              ''.

* Tipo Iva2
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'TIPO2'
                              'Tipo Iva 2'(026)
                              '7'
                              ''.
*Base2
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'BASE2'
                              'Base 2'(027)
                              '7'
                              ''.
*Importe2
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'IMPORTE2'
                              'Importe 2'(028)
                              '7'
                              ''.

* Tipo Iva3
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'TIPO3'
                              'Tipo Iva 3'(029)
                              '7'
                              ''.

*Base3
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'BASE3'
                              'Base 3'(030)
                              '7'
                              ''.
*Importe3
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'IMPORTE3'
                              'Importe 3'(031)
                              '7'
                              ''.

* Tipo Iva4
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'TIPO4'
                              'Tipo Iva 4'(032)
                              '7'
                              ''.

*Base4
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'BASE4'
                              'Base 4'(033)
                              '7'
                              ''.
*Importe4
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'IMPORTE4'
                              'Importe 4'(034)
                              '7'
                              ''.

* Tipo Iva5
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'TIPO5'
                              'Tipo Iva 5'(035)
                              '7'
                              ''.

*Base5
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'BASE5'
                              'Base 5'(036)
                              '7'
                              ''.
*Importe5
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'IMPORTE5'
                              'Importe 5'(037)
                              '7'
                              ''.

* Tipo Iva6
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'TIPO6'
                              'Tipo Iva 6'(038)
                              '7'
                              ''.

*Base6
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'BASE6'
                              'Base 6'(039)
                              '7'
                              ''.
*Importe6
  PERFORM fill_fieldcat USING 'gt_tab_datos_cab'
                              'IMPORTE6'
                              'Importe 6'(040)
                              '7'
                              ''.


ENDFORM.                    " f_alv_field_configuration

*&---------------------------------------------------------------------*
*&      Form  fill_fieldcat
*&---------------------------------------------------------------------*
*   Atributos de los campos
*----------------------------------------------------------------------*

FORM fill_fieldcat USING   p_tabla
                           p_field
                           p_texto
                           p_long
                           p_ver.


*  gt_fieldcat-ref_table = 'gt_datos_cab'." '/cockpit/thdr'.
  gt_fieldcat-txt_field = p_field.
  gt_fieldcat-fieldname = p_field.
  gt_fieldcat-reptext = gt_fieldcat-seltext = p_texto.
  gt_fieldcat-no_out = p_ver.
  gt_fieldcat-tabname = p_tabla.
  gt_fieldcat-outputlen = p_long.


  IF ( p_field =  'DOCNO' ) OR ( p_field = 'SAP_DOC_NO' ).

    gt_fieldcat-hotspot = 'X'.
*    gt_fieldcat-key     = 'X'.
  ENDIF.


* Campo de importe justificados a la dcha
  IF p_long = 17.
    gt_fieldcat-just = 'R'.
  ENDIF.


  APPEND gt_fieldcat.
  CLEAR gt_fieldcat.

ENDFORM.                    " fill_fieldcat

*---------------------------------------------------------------------*
*       FORM CABECERA
*
*---------------------------------------------------------------------*
FORM cabecera.

  DATA : l_logo TYPE sdydo_value.

  CLEAR l_logo.
  l_logo = 'ERASE'.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = gt_list_top_of_page.
*     I_LOGO                   = 'ENJOY'.
*     I_END_OF_LIST_GRID       =

ENDFORM.                    "CABECERA

*---------------------------------------------------------------------*
*       FORM STATUS                                                   *
*---------------------------------------------------------------------*
FORM status_set USING rt_extab TYPE slis_t_extab.

* Status de la barra de titulos.  Copia del programa: saplslvc_fullscreen, status:
* STANDARD_FULLSCREEN y se añade el botón generar datos.  Icono: icon_write_file

  SET PF-STATUS 'STANDARD_F'.

ENDFORM.                    "status_set

*---------------------------------------------------------------------*
*       FORM user_command                                             *
*---------------------------------------------------------------------*
FORM user_command USING p_ucomm LIKE sy-ucomm
                         p_campo TYPE slis_selfield.
  DATA: lt_zeic_hist LIKE zeic_historicos OCCURS 0 WITH HEADER LINE.
  DATA: ls_zeic_hist LIKE zeic_historicos.

  DATA: lt_rows TYPE lvc_t_row.
  DATA: l_var(1).

  DATA: lt_messages LIKE bapiret2 OCCURS 0 WITH HEADER LINE.
  DATA: li_num TYPE i.
  DATA: li_reg_proc TYPE i.
  DATA: li_reg_error TYPE i.
  DATA: lb_error LIKE boole-boole.
  DATA: lb_error_proc LIKE boole-boole.
  DATA: ls_ruta_descarga LIKE /cockpit/thdr-zeic_img.


  DATA: BEGIN OF it_sociedad OCCURS 0,
          bukrs   LIKE /cockpit/thdr-comp_code,
          formato LIKE /cockpit/thdr-zeic_formato,
        END OF it_sociedad.
  DATA: BEGIN OF it_encripta OCCURS 0,
          ruta       LIKE zeic_visor-ruta_encripta,
          ejecutable LIKE zeic_visor-prog_encripta,
        END OF it_encripta.
  DATA: ls_header LIKE gt_tab_datos_cab .
  CLEAR error.
  CASE p_ucomm.

    WHEN 'BACK' OR 'EXIT' OR 'CANCEL'.

      LEAVE TO SCREEN 0.


    WHEN '&GEN'.

      READ TABLE gt_tab_datos_cab WITH KEY zver = 'X'.

      IF sy-subrc <> 0.
        MESSAGE i007.
      ELSE.

        CLEAR: lt_messages, it_sociedad, it_encripta.
        REFRESH: lt_messages, it_sociedad, it_encripta.

        CLEAR: li_reg_proc, li_reg_error, lb_error_proc.

        LOOP AT gt_tab_datos_cab WHERE zver = 'X'.

          IF sy-subrc = 0.
            READ TABLE gt_tab_param WITH KEY codparam =
gt_tab_datos_cab-comp_code tipo_formato = gt_tab_datos_cab-zeic_formato.
            it_sociedad-bukrs = gt_tab_datos_cab-comp_code.
            it_sociedad-formato = gt_tab_datos_cab-zeic_formato.
            APPEND it_sociedad.
            CLEAR lb_error.
            CALL FUNCTION 'ZEIC_OBTENER_DATOS_VISOR'
              EXPORTING
                ic_bukrs       = gt_tab_datos_cab-comp_code
                ic_belnr       = gt_tab_datos_cab-sap_doc_no
                ic_gjahr       = gt_tab_datos_cab-fiscal_year
*               ic_ruta_imagen = gt_tab_datos_cab-zeic_ruta
                ic_formato     = gt_tab_datos_cab-zeic_formato
                ic_ruta        = gt_tab_param-ruta_descarga
                ic_origen      = gt_tab_datos_cab-docno " Factura generada desde cockpit NO histórico.
                ic_fich_cab    = gt_tab_param-fich_cabecera
                ic_fich_lin    = gt_tab_param-fich_linea
              TABLES
                e_tab_messages = lt_messages
              CHANGING
                ib_error       = lb_error
              EXCEPTIONS
                error_occured  = 1
                OTHERS         = 2.

            IF lb_error = con_true.

              lb_error_proc = con_true.
              li_reg_error = li_reg_error + 1.
              APPEND gt_tab_datos_cab TO gt_tab_datos_cab_error .

            ELSE.
              li_reg_proc = li_reg_proc + 1.
* Se actualiza el campo ya_generado.
              MOVE-CORRESPONDING gt_tab_datos_cab TO it_datos_cab.
              it_datos_cab-zeic_generado = sy-datum.
              it_datos_cab-sap_doc_no = gt_tab_datos_cab-documento.

              CALL FUNCTION '/COCKPIT/API_DATA_UPDATE'
                EXPORTING
                  i_invoice_guid    = it_datos_cab-invoice_guid
                CHANGING
                  c_str_header_disp = it_datos_cab
                EXCEPTIONS
                  no_data_found     = 1
                  no_update         = 2
                  error_occured     = 3
                  OTHERS            = 4.
              IF sy-subrc <> 0.

              ENDIF.

            ENDIF.

          ENDIF.

        ENDLOOP.

        SORT it_sociedad.
        DELETE ADJACENT DUPLICATES FROM it_sociedad.

        LOOP AT it_sociedad.
          READ TABLE gt_tab_param WITH KEY codparam =
it_sociedad-bukrs tipo_formato = it_sociedad-formato.
          it_encripta-ruta = gt_tab_param-ruta_encripta.
          it_encripta-ejecutable = gt_tab_param-prog_encripta.
          APPEND it_encripta.
        ENDLOOP.

        SORT it_encripta.
        DELETE ADJACENT DUPLICATES FROM it_encripta.
        LOOP AT it_encripta.
*         Se cifra los registros que se hayan podido generar en el fichero.
          PERFORM cifrado_datos TABLES lt_messages
                                USING  it_encripta-ruta
                                       it_encripta-ejecutable
                                       lb_error
                                       con_true.

          IF lb_error = 'X'.
            MESSAGE i001 WITH it_encripta-ejecutable.
          ENDIF.
        ENDLOOP.

        CLEAR lb_error.


        IF lb_error_proc = con_true.
*           Se muestra el mensaje, si hubo error en algun registro se muestra
*           cuantos registros dieron error y cuantos se generaron correctamente.
          MESSAGE i002 WITH li_reg_error li_reg_proc.
        ELSE.
*           Se muestra el mensaje, se procesaron correctamente.
          MESSAGE i003 WITH li_reg_proc.
        ENDIF.

      ENDIF.
    WHEN '&IC1'. " HotSpot.

      READ TABLE gt_tab_datos_cab INDEX p_campo-tabindex.
      IF p_campo-fieldname = 'SAP_DOC_NO'.

        SET PARAMETER ID 'BLN' FIELD gt_tab_datos_cab-sap_doc_no.
        SET PARAMETER ID 'BUK' FIELD gt_tab_datos_cab-comp_code.
        SET PARAMETER ID 'GJR' FIELD gt_tab_datos_cab-fiscal_year.
        CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN .

      ENDIF.

      IF p_campo-fieldname = 'DOCNO'.

        PACK gt_tab_datos_cab-docno TO gt_tab_datos_cab-docno.
        SUBMIT /cockpit/display_alv WITH sel_dcno-low = gt_tab_datos_cab-docno AND RETURN.

      ENDIF.
    WHEN '&REF'.
      PERFORM seleccionar_datos .

      PERFORM mostrar_datos.
      SET SCREEN 0.
      LEAVE SCREEN.


    WHEN OTHERS.

* AÃ?ADIR TODOS LOS CASOS DE COMMAND QUE EXISTA
  ENDCASE.

  IF li_reg_error GT '0'.
    error = 'X'.

    PERFORM mostrar_datos.
  ENDIF.

ENDFORM.                    "user_command
*&---------------------------------------------------------------------*
*&      Form  mostrar_datos
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_datos .

  IF error IS INITIAL.
*    Ini: Modificacion Signo importes para eliminar columna factura/abono
*    --> Cambiamos el signo de los ABONOS, bruto y neto.
    LOOP AT gt_tab_datos_cab WHERE invoice_ind IS INITIAL.
      gt_tab_datos_cab-gross_amount = gt_tab_datos_cab-gross_amount * -1.
      gt_tab_datos_cab-net_amount = gt_tab_datos_cab-net_amount * -1.

      gt_tab_datos_cab-base1  = gt_tab_datos_cab-base1 * -1.
      gt_tab_datos_cab-importe1  = gt_tab_datos_cab-importe1 * -1.

      gt_tab_datos_cab-base2  = gt_tab_datos_cab-base2 * -1.
      gt_tab_datos_cab-importe2  = gt_tab_datos_cab-importe2 * -1.

      gt_tab_datos_cab-base3  = gt_tab_datos_cab-base3 * -1.
      gt_tab_datos_cab-importe3  = gt_tab_datos_cab-importe3 * -1.

      gt_tab_datos_cab-base4  = gt_tab_datos_cab-base4 * -1.
      gt_tab_datos_cab-importe4  = gt_tab_datos_cab-importe4 * -1.

      gt_tab_datos_cab-base5  = gt_tab_datos_cab-base5 * -1.
      gt_tab_datos_cab-importe5  = gt_tab_datos_cab-importe5 * -1.

      gt_tab_datos_cab-base6  = gt_tab_datos_cab-base6 * -1.
      gt_tab_datos_cab-importe6  = gt_tab_datos_cab-importe6 * -1.

      MODIFY gt_tab_datos_cab.

    ENDLOOP.
*    Fin: Modificacion Signo importes para eliminar columna factura/abono
  ELSE.

    REFRESH  gt_tab_datos_cab .
    CLEAR gt_tab_datos_cab.
    gt_tab_datos_cab[] = gt_tab_datos_cab_error[] .
    REFRESH gt_tab_datos_cab_error[].
    CLEAR gt_tab_datos_cab_error[].
  ENDIF.

  PERFORM f_alv_configuration.

* Display the report.
  PERFORM f_alv_display_report.


ENDFORM.                    " mostrar_datos


*&---------------------------------------------------------------------*
*&      Form  RECUPERAR_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_HEADER  text
*----------------------------------------------------------------------*
FORM recuperar_datos   TABLES p_datos_det STRUCTURE zeic_datos_det
  USING p_header STRUCTURE gt_tab_datos_cab
                     CHANGING name
                      .
  .
  DATA:
    lt_tab_bset LIKE bset OCCURS 0 WITH HEADER LINE,
    lt_tab_bkpf LIKE bset OCCURS 0 WITH HEADER LINE,
    lt_tab_bseg LIKE bseg OCCURS 0 WITH HEADER LINE.
  DATA: li_nro_lin   TYPE i,
        ls_datos_det LIKE zeic_datos_det,
        pb_posted    LIKE boole-boole,
        for_header   LIKE /cockpit/thdr.
  DATA: ls_id_doc(50) TYPE c.

  IF p_header-fi_mm_flg = 'FI'.

    SELECT SINGLE xblnr INTO p_header-xblnr
            FROM bkpf
            WHERE bukrs = p_header-comp_code
              AND belnr = p_header-sap_doc_no
              AND gjahr = p_header-fiscal_year.
  ELSE.

    MOVE-CORRESPONDING p_header TO for_header.
    PERFORM obtener_nro_doc_fi USING for_header
                               CHANGING p_header-sap_doc_no
"ps_nro_doc_fi
                                        pb_posted.

    SELECT SINGLE xblnr INTO p_header-xblnr
      FROM bkpf WHERE bukrs = p_header-comp_code AND belnr = p_header-sap_doc_no
        AND gjahr = p_header-fiscal_year.

  ENDIF.

  IF sy-subrc <> 0.

  ELSE.

    SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_tab_bseg
      FROM bseg WHERE bukrs = p_header-comp_code AND belnr = p_header-sap_doc_no
        AND gjahr = p_header-fiscal_year AND lifnr <> ''.

    LOOP AT lt_tab_bseg.

      SELECT SINGLE name1 FROM lfa1 INTO name WHERE lifnr = lt_tab_bseg-lifnr.

      IF sy-subrc = 0.
        CONCATENATE lt_tab_bseg-bukrs lt_tab_bseg-belnr lt_tab_bseg-gjahr INTO ls_id_doc.
        EXIT.
      ENDIF.

    ENDLOOP.

    IF sy-subrc <> 0.

    ELSE.
      p_header-gross_amount     = lt_tab_bseg-wrbtr.
      p_header-net_amount     = lt_tab_bseg-wrbtr.
      SELECT * INTO CORRESPONDING FIELDS OF TABLE lt_tab_bset
        FROM bset WHERE bukrs = p_header-comp_code AND belnr = p_header-sap_doc_no
          AND gjahr = p_header-fiscal_year.

      li_nro_lin = 1.

      LOOP AT lt_tab_bset.

        ls_datos_det-guid       = ls_id_doc.
        ls_datos_det-buzei      = li_nro_lin.
        ls_datos_det-wrbtr      = lt_tab_bset-fwbas.
        ls_datos_det-tax_rate   = lt_tab_bset-kbetr / 10.
        ls_datos_det-tax_amount = lt_tab_bset-fwste.

        IF li_nro_lin > 1.
*           Si la factura es multiIva se genera el fichero de detalle.
          APPEND ls_datos_det TO p_datos_det.
        ENDIF.

        IF li_nro_lin = 1.
          p_header-tipo1      = lt_tab_bset-kbetr / 10.
          p_header-importe1    = lt_tab_bset-fwste.
          p_header-base1       = lt_tab_bset-fwbas.
        ENDIF.

        IF li_nro_lin = 2.
          p_header-tipo2      = lt_tab_bset-kbetr / 10.
          p_header-importe2    = lt_tab_bset-fwste.
          p_header-base2          = lt_tab_bset-fwbas.
        ENDIF.

        IF li_nro_lin = 3.
          p_header-tipo3      = lt_tab_bset-kbetr / 10.
          p_header-importe3    = lt_tab_bset-fwste.
          p_header-base3          = lt_tab_bset-fwbas.
        ENDIF.

        IF li_nro_lin = 4.
          p_header-tipo4      = lt_tab_bset-kbetr / 10.
          p_header-importe4    = lt_tab_bset-fwste.
          p_header-base4         = lt_tab_bset-fwbas.
        ENDIF.

        IF li_nro_lin = 5.
          p_header-tipo5     = lt_tab_bset-kbetr / 10.
          p_header-importe5    = lt_tab_bset-fwste.
          p_header-base5          = lt_tab_bset-fwbas.
        ENDIF.

        IF li_nro_lin = 6.
          p_header-tipo6      = lt_tab_bset-kbetr / 10.
          p_header-importe6    = lt_tab_bset-fwste.
          p_header-base6          = lt_tab_bset-fwbas.
        ENDIF.

        li_nro_lin = li_nro_lin + 1.
        p_header-net_amount = p_header-net_amount - lt_tab_bset-fwste.

      ENDLOOP.

    ENDIF.

  ENDIF.

ENDFORM.                    " RECUPERAR_DATOS
.
*&---------------------------------------------------------------------*
*&      Form  STATUS_WEB_CYCLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_APROBADO  text
*----------------------------------------------------------------------*
FORM status_web_cycle.

* Status Web Cycle.
  it_aprobado-sign = 'I'.
  it_aprobado-option = 'EQ'.
  it_aprobado-low = con_liberado.
  APPEND it_aprobado.

  it_paprob-sign = 'I'.
  it_paprob-option = 'EQ'.
  it_paprob-low = con_liberado.
  APPEND it_paprob.

  it_paprob-sign = 'I'.
  it_paprob-option = 'EQ'.
  it_paprob-low = con_par_libe.
  APPEND it_paprob.

ENDFORM.                    " STATUS_WEB_CYCLE
*&---------------------------------------------------------------------*
*&      Form  DATOS_ICON_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*

FORM datos_icon_status.

*  FORM fill_wc_state
*     TABLES   it_wcs           STRUCTURE /cockpit/swc_if
*     USING    is_wc            LIKE      /cockpit/swc_if
*              ib_text          LIKE      boole-boole
*              ic_header_status LIKE      /cockpit/thdr-status
*              ib_in_webcycle   LIKE      boole-boole
*              ii_lines         TYPE      i
*              ib_disp_subst    LIKE      boole-boole
*              is_twc           LIKE      /cockpit/twc
*              ib_version       LIKE      boole-boole
*     CHANGING ec_icon.


* Iconos Web Cycle
  CLEAR it_status_wc.
  it_status_wc-i_status = '01'.
  it_status_wc-i_icon = con_icon_envelope_closed.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '02'.
  it_status_wc-i_icon = con_icon_envelope_open.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '03'.
  it_status_wc-i_icon = con_icon_alarm.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '04'.
  it_status_wc-i_icon = con_icon_okay.
  APPEND it_status_wc.


  CLEAR it_status_wc.
  it_status_wc-i_status = '05'.
  it_status_wc-i_icon = con_icon_cancel.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '06'.
  it_status_wc-i_icon = con_icon_system_undo.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '07'.
  it_status_wc-i_icon = con_icon_information.
  APPEND it_status_wc.

*  clear it_status_wc.
*  it_status_wc-i_status = '08'.
*  it_status_wc-i_icon = con_icon_booking_ok.
*  append it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '09'.
  it_status_wc-i_icon = con_icon_hint.
  APPEND it_status_wc.

* Suplencia
  CLEAR it_status_wc.
  it_status_wc-i_status = '10'.
  it_status_wc-i_icon = con_icon_employee.
  APPEND it_status_wc.

* Consulta
  CLEAR it_status_wc.
  it_status_wc-i_status = '11'.
  it_status_wc-i_icon = con_icon_question.
  APPEND it_status_wc.

* Consulta respondida
  CLEAR it_status_wc.
  it_status_wc-i_status = '12'.
  it_status_wc-i_icon = con_icon_letter.
  APPEND it_status_wc.

* Liberado en parte.
  CLEAR it_status_wc.
  it_status_wc-i_status = '13'.
  it_status_wc-i_icon = con_icon_status_overview.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '41'.
*  it_status_wc-i_icon =
*  append it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '42'.
  it_status_wc-i_icon = con_icon_query.
  APPEND it_status_wc.

  CLEAR it_status_wc.
  it_status_wc-i_status = '43'.
  it_status_wc-i_icon = con_icon_letter.
  APPEND it_status_wc.

ENDFORM.                    " DATOS_ICON_STATUS
*&---------------------------------------------------------------------*
*&      Form  DATOS_SOCIEDADES_PARAM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*

FORM datos_sociedades_param.

* Sociedades de la parametrización
  SELECT bukrs FROM zeic_param_visor INTO it_bukrs-low.
    it_bukrs-sign = 'I'.
    it_bukrs-option = 'EQ'.
    PERFORM authority_check USING  ls_header-comp_code
                               '*'
                               lb_auth_act.
    IF lb_auth_act NE con_true.
      APPEND it_bukrs.
    ENDIF.
  ENDSELECT.

* Sociedades del select-options.
  DELETE s_bukrs WHERE low = '    '.

  IF s_bukrs[] IS INITIAL.
    it_soc[] = it_bukrs[].
  ELSE.
    SELECT bukrs FROM t001 INTO t001-bukrs WHERE bukrs IN s_bukrs AND bukrs IN it_bukrs.
      PERFORM authority_check USING t001-bukrs '*' lb_auth_act.

      IF lb_auth_act NE con_true.
        it_soc-sign = 'I'.
        it_soc-option = 'EQ'.
        it_soc-low = t001-bukrs.
        APPEND it_soc.
      ENDIF.

    ENDSELECT.
  ENDIF.

* Se rellena la tabla de parametrización según las sociedades.
  LOOP AT it_soc.

    l_tabix = sy-tabix.
    CLEAR gt_tab_param.

    SELECT SINGLE * FROM zeic_param_visor WHERE bukrs = it_soc-low.
    IF sy-subrc EQ 0.
      SELECT  * FROM zeic_visor INTO CORRESPONDING FIELDS OF gt_tab_param
        WHERE codparam = zeic_param_visor-codparam  AND tipo_formato IN s_format.

        gt_tab_param-codparam = zeic_param_visor-bukrs.
        APPEND gt_tab_param.
      ENDSELECT.

      IF sy-subrc NE 0.
        DELETE it_soc INDEX sy-tabix.
      ENDIF.

    ENDIF.
  ENDLOOP.
ENDFORM.                    " DATOS_SOCIEDADES_PARAM
*&---------------------------------------------------------------------*
*&      Form  ELIMINAR_PRELIMINARES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM eliminar_preliminares.

  LOOP AT lt_header WHERE comp_code = gt_tab_param-codparam.

    SELECT SINGLE process FROM /cockpit/tstat INTO /cockpit/tstat-process
      WHERE invoice_guid = lt_header-invoice_guid AND status = con_status_processed.
*          ( process ne con_proc_park and process ne con_proc_online_park ).
    IF sy-subrc NE 0.
      DELETE lt_header INDEX sy-tabix.
    ELSE.
      IF /cockpit/tstat-process EQ con_proc_park OR
/cockpit/tstat-process EQ con_proc_online_park.
* Es realmente documento preliminar.
        DELETE lt_header INDEX sy-tabix.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " ELIMINAR_PRELIMINARES
*&---------------------------------------------------------------------*
*&      Form  DESCARGA_CONTAB_EN_WC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*

FORM descarga_contab_en_wc.

  CLEAR lt_headwc.
  REFRESH lt_headwc.

  SELECT * FROM /cockpit/thdr APPENDING TABLE  lt_headwc
   WHERE comp_code = gt_tab_param-codparam
     AND sap_doc_no IN s_belnr
     AND docno IN s_docno
     AND pstng_date IN s_date
     AND zeic_generado IN s_gener
     AND zeic_anulado IN s_anul
     AND status = con_status_webcycle.

  IF c_gener = 'X'.
    DELETE lt_headwc WHERE zeic_generado NE con_fech_ini.
  ENDIF.
  IF c_anul = 'X'.
    DELETE lt_headwc WHERE zeic_anulado = con_fech_ini.
  ENDIF.
* Se seleccionan sólo los de WC contabilizado.
  LOOP AT lt_headwc.
    SELECT SINGLE invoice_guid
           FROM /cockpit/twc
           INTO /cockpit/twc-invoice_guid
           WHERE invoice_guid = lt_headwc-invoice_guid AND
              doc_status = con_status_processed.
    IF sy-subrc EQ 0.
* Web Cycle contabilizado.
      CLEAR lt_header.
      lt_header = lt_headwc.
      APPEND lt_header.
    ENDIF.

  ENDLOOP.
ENDFORM.                    " DESCARGA_CONTAB_EN_WC
*&---------------------------------------------------------------------*
*&      Form  COMPRUEBA_STATUS_WC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM comprueba_status_wc .

  DATA: li_tabix LIKE sy-tabix.

  CASE gt_tab_param-d_wc_status.


    WHEN '01'.
      LOOP AT lt_header.
        SELECT SINGLE wc_status FROM /cockpit/twc INTO
/cockpit/twc-wc_status WHERE
          invoice_guid = lt_header-invoice_guid.
        IF sy-subrc NE 0. " No tiene Web Cycle dicho documento
        ELSE.
          IF /cockpit/twc-wc_status IN it_aprobado.
            "lt_header-status_wc = /cockpit/twc-wc_status.
            lt_header-status_wc = con_icon_booking_ok.
            MODIFY lt_header INDEX sy-tabix.
          ELSE.
            DELETE lt_header INDEX sy-tabix.
          ENDIF.
        ENDIF.
      ENDLOOP.
    WHEN '02'.
      LOOP AT lt_header.
        SELECT SINGLE wc_status FROM /cockpit/twc INTO
/cockpit/twc-wc_status WHERE
          invoice_guid = lt_header-invoice_guid.
        IF sy-subrc NE 0. " No tiene Web Cycle dicho documento
        ELSE.
          IF /cockpit/twc-wc_status IN it_paprob.
            lt_header-status_wc = /cockpit/twc-wc_status.
            MODIFY lt_header INDEX sy-tabix.
          ELSE.
            DELETE lt_header INDEX sy-tabix.
          ENDIF.
        ENDIF.
      ENDLOOP.
    WHEN '03'.
      LOOP AT lt_header.
        li_tabix = sy-tabix.
        SELECT SINGLE wc_status FROM /cockpit/twc INTO
/cockpit/twc-wc_status WHERE
          invoice_guid = lt_header-invoice_guid.
        IF sy-subrc EQ 0.
          READ TABLE it_status_wc WITH KEY i_status =
/cockpit/twc-wc_status.
          lt_header-status_wc = it_status_wc-i_icon.
          MODIFY lt_header INDEX li_tabix.
        ENDIF.
      ENDLOOP.
    WHEN OTHERS. " Si d_wc_status = ' ' no hay web cycle, no se hace nada, y si d_wc_status = '03', se seleccionan todos, no se hace nada.

  ENDCASE.
ENDFORM.                    " COMPRUEBA_STATUS_WC
*&---------------------------------------------------------------------*
*&      Form  FORMATEA_FECHAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM formatea_fechas .
  DATA: li_tabix LIKE sy-tabix.
  DATA: name LIKE lfa1-name1.
  LOOP AT lt_header INTO ls_header.

*      modificamos el formato de la fecha
*   Se cambia la fecha a formato externo.

    CALL FUNCTION 'CONVERT_DATE_TO_EXTERNAL'
      EXPORTING
        date_internal = ls_header-doc_date
      IMPORTING
        date_external = ls_header-fecha_doc.

*   Se cambia la fecha a formato externo.

    CALL FUNCTION 'CONVERT_DATE_TO_EXTERNAL'
      EXPORTING
        date_internal = ls_header-pstng_date
      IMPORTING
        date_external = ls_header-fecha_cont.


*   Se cambia la fecha a formato externo.

    CALL FUNCTION 'CONVERT_DATE_TO_EXTERNAL'
      EXPORTING
        date_internal = ls_header-zeic_generado
      IMPORTING
        date_external = ls_header-fecha_gener.


*   Se cambia la fecha a formato externo.

    CALL FUNCTION 'CONVERT_DATE_TO_EXTERNAL'
      EXPORTING
        date_internal = ls_header-zeic_anulado
      IMPORTING
        date_external = ls_header-fecha_anul.

    li_tabix = sy-tabix.
*        perform authority_check using  ls_header-comp_code
*                                       '*'
*                                       lb_auth_act.
*        if lb_auth_act = con_true.
*          delete lt_header index li_tabix.
*        else.
* Se almacena el documento contabilizado asociado a Cockpit.
    ls_header-documento = ls_header-sap_doc_no.
    PERFORM recuperar_datos TABLES lt_tab_datos_det USING ls_header
CHANGING name..
    ls_header-name1 = name.

    CLEAR name.
    APPEND ls_header TO gt_tab_datos_cab .
*        endif.
  ENDLOOP.
ENDFORM.                    " FORMATEA_FECHAS
*&---------------------------------------------------------------------*
*&      Form  SELECCIONA_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM selecciona_datos .
  SELECT * FROM /cockpit/thdr APPENDING TABLE lt_header
   WHERE comp_code = gt_tab_param-codparam
     AND sap_doc_no IN s_belnr
     AND docno IN s_docno
     AND pstng_date IN s_date
     AND status EQ con_status_processed
     AND vendor_no IN s_vendor
     AND doc_date  IN s_bldat
     AND ref_doc_no IN s_ref
     AND zeic_generado IN s_gener
     AND zeic_anulado IN s_anul
     AND zeic_formato = gt_tab_param-tipo_formato.
ENDFORM.                    " SELECCIONA_DATOS
*&---------------------------------------------------------------------*
*&      Form  ELIMINAR_MARCA_RASTREO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM eliminar_marca_rastreo .
  DATA: li_tabix LIKE sy-tabix.
** Se eliminan los que no cumplen la marca de seguimiento.
*  if s_follow is initial.
*  else.
*    delete lt_header where follow_up eq s_follow.
*  endif.

*  Versión 3.2 y Process Director
  IF s_follow IS INITIAL.
  ELSE.
    LOOP AT lt_header.
      li_tabix = sy-tabix.
      SELECT SINGLE flag FROM /cockpit/tflag INTO /cockpit/tflag WHERE
        invoice_guid = lt_header-invoice_guid AND flag = s_follow.
      IF sy-subrc EQ 0.
* Se ha de desestimar dicho registro.
        DELETE lt_header INDEX li_tabix.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " ELIMINAR_MARCA_RASTREO
