*&---------------------------------------------------------------------*
*&  Include           ZRFI0003_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECCION_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM seleccion_datos .
  DATA: lt_bsik     TYPE tty_bsik,
        wa_bsik     TYPE LINE OF tty_bsik,
        lt_cabecera TYPE tty_cabecera,
        wa_cabecera TYPE LINE OF tty_cabecera,
        wa_datos    TYPE zrfi0003_grid.

  CLEAR: lt_bsik, lt_cabecera.
  REFRESH: lt_bsik, lt_cabecera.

  SELECT bukrs belnr gjahr buzei hbkid lifnr hkont umskz wrbtr waers zfbdt sgtxt
    FROM bsik
    INTO TABLE lt_bsik
    WHERE blart IN s_blart
      AND bukrs IN s_bukrs
      AND umskz IN s_umskz
      AND zfbdt = p_zfbdt
      AND lifnr IN s_lifnr
      AND hbkid = p_hbkid .

  CHECK lt_bsik[] IS NOT INITIAL.

  SELECT bukrs belnr gjahr bktxt FROM bkpf
    INTO TABLE lt_cabecera
    FOR ALL ENTRIES IN lt_bsik
    WHERE bukrs = lt_bsik-bukrs AND
          belnr = lt_bsik-belnr AND
          gjahr = lt_bsik-gjahr.


  LOOP AT lt_bsik INTO wa_bsik.
    MOVE-CORRESPONDING wa_bsik TO wa_datos.
    READ TABLE lt_cabecera INTO wa_cabecera WITH KEY bukrs = wa_datos-bukrs
          belnr = wa_datos-belnr
          gjahr = wa_datos-gjahr.
    IF sy-subrc = 0.
      wa_datos-bktxt = wa_cabecera-bktxt.
    ENDIF.

    APPEND wa_datos TO gti_datos.
  ENDLOOP.


  SORT gti_datos BY bukrs bktxt ASCENDING.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PREPARE_VARIANT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_VARIANT  text
*----------------------------------------------------------------------*
FORM prepare_variant  CHANGING ps_variant TYPE disvariant .

*  IF gs_variant IS NOT INITIAL.
*    ps_variant = gs_variant.
*  ELSE.
*    CLEAR ps_variant.
*    ps_variant-report = sy-repid.
*  ENDIF.

* Variante
  ls_variant-report = sy-repid.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_FIELDCAT  text
*----------------------------------------------------------------------*
FORM prepare_fielcat  CHANGING ct_fieldcat TYPE lvc_t_fcat.

  DATA: lt_fieldcat TYPE lvc_t_fcat.

  DATA: ls_fcat TYPE lvc_s_fcat.

  DATA: lv_ind TYPE i.

* Recuperamos el catálogo de campos
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = 'ZRFI0003_GRID'
    CHANGING
      ct_fieldcat      = lt_fieldcat.

* Los cargamos en el catálogo de campos global
  ct_fieldcat[] = lt_fieldcat[].
*
** Recorremos el catálogo de campos modificandolo
*  LOOP AT ct_fieldcat INTO ls_fcat.
*    lv_ind = sy-tabix.
*    CASE ls_fcat-fieldname.
*      WHEN 'LISTA_CALIDAD' OR 'LISTA_GRAMAJE' OR 'LISTA_ANCHO'
*           OR'OBJNR' OR 'ZINDEX' OR 'CONCATE_ORDEN'.
*        ls_fcat-no_out = gc_true.
*      WHEN 'ROLLOS'.
*        ls_fcat-edit = gc_true.
*      WHEN 'AUFNR' OR 'PEDIDO_POS1' OR 'PEDIDO_POS2' OR 'PEDIDO_POS3'.
*        ls_fcat-hotspot = 'X'.
*      WHEN 'ICON_ESTADO' OR 'ICON_CALIDAD' OR 'ICON_GRAMAJE' OR 'ICON_ANCHO'.
*        ls_fcat-just = 'C'.
*      WHEN 'ROLLOS'.
*        ls_fcat-inttype = 'I'.
*    ENDCASE.
** Modificamos el catálogo
*    MODIFY ct_fieldcat FROM ls_fcat INDEX lv_ind.
*  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_LVC_S_LAYO  text
*----------------------------------------------------------------------*
FORM prepare_layout  CHANGING ls_lvc_s_layo TYPE lvc_s_layo.

* Para que muestre el ancho de las columnas optimizado
  ls_lvc_s_layo-cwidth_opt = 'X'.
  ls_lvc_s_layo-sel_mode   = 'A'.
  ls_lvc_s_layo-zebra =  'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  TOOLBAR_EXCLUDING
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_TOOLBAR_EXCLUDING  text
*----------------------------------------------------------------------*
FORM toolbar_excluding  CHANGING lt_toolbar TYPE ui_functions.

  DATA: ls_exclude TYPE ui_func.
  REFRESH: lt_toolbar.

*********************************************************************mc_fc_refresh
*  CLEAR ls_exclude.
*  ls_exclude = cl_gui_alv_grid=>mc_fc_refresh.
*  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_detail
*  ls_exclude = cl_gui_alv_grid=>mc_fc_detail.
*  APPEND ls_exclude TO lt_toolbar.
*********************************************************************mc_fc_check
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_check.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_cut
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_cut.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_copy
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_copy.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_paste
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_paste.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_paste_new_row
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_paste_new_row.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_undo
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_undo.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_append_row
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_append_row.
  APPEND ls_exclude TO lt_toolbar.
*********************************************************************mc_fc_loc_insert_row
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_insert_row.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_delete_row
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_delete_row.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_loc_copy_row
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_copy_row.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_sort_asc
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_sort_asc.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_sort_dsc
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_sort_dsc.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_find
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_find.
  APPEND ls_exclude TO lt_toolbar.
***********************************************************************mc_fc_filter
*  CLEAR ls_exclude.
*  ls_exclude = cl_gui_alv_grid=>mc_fc_filter.
*  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_mb_sum
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_mb_sum.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_subtot
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_subtot.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_print
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_print.
  APPEND ls_exclude TO lt_toolbar.
**********************************************************************mc_fc_views
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_views.
  APPEND ls_exclude TO lt_toolbar.
*********************************************************************mc_mb_export
*  CLEAR ls_exclude.
*  ls_exclude = cl_gui_alv_grid=>mc_mb_export.
*  APPEND ls_exclude TO lt_toolbar.
*********************************************************************mc_fc_current_variant
*  CLEAR ls_exclude.
*  ls_exclude = cl_gui_alv_grid=>mc_fc_current_variant.
*  APPEND ls_exclude TO lt_toolbar.
*********************************************************************mc_fc_graph
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_graph.
  APPEND ls_exclude TO lt_toolbar.
*********************************************************************mc_fc_info
  CLEAR ls_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_info.
  APPEND ls_exclude TO lt_toolbar.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  LINES_SELECTED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GTI_BSIK  text
*----------------------------------------------------------------------*
FORM lines_selected  TABLES   lt_datos STRUCTURE zrfi0003_grid.

  DATA: lt_selected_row TYPE                   lvc_t_roid,
        ls_selected_row TYPE lvc_s_roid,
        ls_datos        TYPE zrfi0003_grid,
        lv_lines        TYPE i.

  REFRESH lt_selected_row.
  CLEAR: lt_selected_row, ls_selected_row, lv_lines.

  CALL METHOD g_grid->get_selected_rows
    IMPORTING
      et_row_no = lt_selected_row.

  DESCRIBE TABLE lt_selected_row LINES lv_lines.

  IF lv_lines EQ 0. "No se han seleccionado lineas
    MESSAGE e131(zpp).
  ELSE.
    REFRESH lt_datos.
    CLEAR: ls_datos, ls_selected_row.

    LOOP AT lt_selected_row INTO ls_selected_row.
      READ TABLE gti_datos INTO ls_datos INDEX ls_selected_row-row_id.

      IF ls_datos IS NOT INITIAL.
        APPEND ls_datos TO lt_datos.
        CLEAR: ls_selected_row, ls_datos.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CONTABILIZAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_DATOS  text
*----------------------------------------------------------------------*
FORM f_contabilizar  TABLES   lt_datos STRUCTURE zrfi0003_grid.
  DATA: wa_datos   TYPE zrfi0003_grid,
        lt_agrupar TYPE tty_agrupar,
        wa_agrupar TYPE LINE OF tty_agrupar.

  DATA: lti_blntab  TYPE TABLE OF blntab  WITH HEADER LINE,
        lti_ftclear TYPE TABLE OF ftclear WITH HEADER LINE,
        lti_ftpost  TYPE TABLE OF ftpost  WITH HEADER LINE,
        lti_fttax   TYPE TABLE OF fttax   WITH HEADER LINE.

  DATA: it_return TYPE bapiret2.

  DATA: lv_imp   TYPE wrbtr,
        lv_imp_c TYPE c LENGTH 15.


  CLEAR: lt_agrupar. REFRESH: lt_agrupar.

  LOOP AT lt_datos INTO wa_datos.
    wa_agrupar-bukrs = wa_datos-bukrs.
    wa_agrupar-bktxt = wa_datos-bktxt.
    wa_agrupar-lifnr = wa_datos-lifnr.
    APPEND wa_agrupar TO lt_agrupar.
  ENDLOOP.

  SORT lt_agrupar BY bukrs bktxt ASCENDING.
  DELETE ADJACENT DUPLICATES FROM lt_agrupar.

  LOOP AT lt_agrupar INTO wa_agrupar.
*---------------------------------------------------------------------
*   Rellenamos los datos de cabecera para la función
*---------------------------------------------------------------------
    CLEAR: lti_ftpost, lti_ftclear.
    REFRESH: lti_ftpost, lti_ftclear.

*   Importe
    CLEAR: lv_imp, wa_datos.
    LOOP AT lt_datos INTO wa_datos WHERE bukrs = wa_agrupar-bukrs AND
                                         bktxt = wa_agrupar-bktxt.
      lv_imp = lv_imp + wa_datos-wrbtr.
    ENDLOOP.


    lti_ftpost-stype = 'K'. "Cabecera
    lti_ftpost-count = 1.

*   Clase de documento
    lti_ftpost-fnam  = 'BKPF-BLART'.
    lti_ftpost-fval  = p_blart .
    APPEND lti_ftpost.

*   Sociedad
    lti_ftpost-fnam  = 'BKPF-BUKRS'.
    lti_ftpost-fval  = wa_agrupar-bukrs.
    APPEND lti_ftpost.

*   Fecha de contabilización
    lti_ftpost-fnam  = 'BKPF-BLDAT'.
    WRITE p_budat TO lti_ftpost-fval DD/MM/YYYY.
    APPEND lti_ftpost.

*   Texto de cabecera
    lti_ftpost-fnam  = 'BKPF-BKTXT'.
    lti_ftpost-fval  = wa_agrupar-bktxt.
    APPEND lti_ftpost.

*   Moneda
    READ TABLE lt_datos INTO wa_datos INDEX 1.
    lti_ftpost-fnam  = 'BKPF-WAERS'.
    lti_ftpost-fval  = wa_datos-waers.
    APPEND lti_ftpost.

    "Texto compensación
    lti_ftpost-fnam  = 'RF05A-AUGTX'.
    lti_ftpost-fval  = wa_datos-sgtxt.
    APPEND lti_ftpost.




*---------------------------------------------------------------------
*   Rellenamos la posición del EFECTO
*---------------------------------------------------------------------
    CLEAR lti_ftpost.
    lti_ftpost-stype = 'P'. "Posición
    lti_ftpost-count = sy-tabix.

*   Clave de contabilización
    lti_ftpost-fnam  = 'RF05A-NEWBS'.
    lti_ftpost-fval  = '50'.
    APPEND lti_ftpost.

*   Número de Cuenta
    lti_ftpost-fnam  = 'RF05A-NEWKO'.
*
* ***MODIF LESCRIVA 26.05.22*
*
    SELECT SINGLE zctacomp FROM zrfi0003_comp
      INTO lti_ftpost-fval
      WHERE bukrs = wa_agrupar-bukrs AND
            hbkid = wa_datos-hbkid.
    IF sy-subrc <> 0.
      SELECT SINGLE wekon FROM t012k
      INTO lti_ftpost-fval
        WHERE bukrs = wa_agrupar-bukrs AND
              hbkid = wa_datos-hbkid.
    ENDIF.
    APPEND lti_ftpost.



*   Importe
    lti_ftpost-fnam  = 'BSEG-WRBTR'.
    WRITE lv_imp TO lv_imp_c CURRENCY wa_datos-waers.
    CONDENSE lv_imp_c.
    lti_ftpost-fval = lv_imp_c.
    APPEND lti_ftpost.

    "JCB 12.09.24 84600 Texto en documento de compensación de confirming PP
    lti_ftpost-fnam = 'BSEG-SGTXT'.
    lti_ftpost-fval = wa_datos-sgtxt.
    APPEND lti_ftpost.





*---------------------------------------------------------------------
*   Rellenamos la posición con la facturas a compensar
*--------------------------------------------------------------------
    CLEAR: lti_ftclear.
    REFRESH: lti_ftclear.

    LOOP AT lt_datos INTO wa_datos WHERE bukrs = wa_agrupar-bukrs AND
                                         bktxt = wa_agrupar-bktxt.
      lti_ftclear-agkoa  = 'K'. "Deudor
      lti_ftclear-xnops  = ''.
      lti_ftclear-agbuk  = wa_datos-bukrs.
      lti_ftclear-agkon  = wa_datos-lifnr.
      lti_ftclear-agums  = wa_datos-umskz.
      lti_ftclear-selfd  = 'BELNR'."Campo de selección de partidas
      lti_ftclear-selvon = wa_datos-belnr.
      lti_ftclear-selbis = wa_datos-belnr.
      APPEND lti_ftclear.
    ENDLOOP.

*--------------------------------------------------------------------
*   Iniciamos el proceso de compensación
* --------------------------------------------------------------------
    CALL FUNCTION 'POSTING_INTERFACE_START'
      EXPORTING
        i_function         = 'C'   "B-Batch Input, C-Call transaction
        i_mode             = 'N'   "A-Visible, N-Invisible
        i_update           = 'S'   "S-Sincrono, A-Asincrono
      EXCEPTIONS
        client_incorrect   = 1
        function_invalid   = 2
        group_name_missing = 3
        mode_invalid       = 4
        update_invalid     = 5
        OTHERS             = 6.
    IF sy-subrc <> 0.
      CLEAR it_return.
      it_return-id         = sy-msgid.
      it_return-number     = sy-msgno.
      it_return-type       = sy-msgty.
      it_return-message_v1 = sy-msgv1.
      it_return-message_v2 = sy-msgv2.
      it_return-message_v3 = sy-msgv3.
      it_return-message_v4 = sy-msgv4.
    ENDIF.

*--------------------------------------------------------------------
*   Llamamos a la función que realiza la compensación
*--------------------------------------------------------------------
    CALL FUNCTION 'POSTING_INTERFACE_CLEARING'
      EXPORTING
        i_auglv                    = 'EINGZAHL' "Entrada de pagos
        i_tcode                    = 'FB05'
      IMPORTING
        e_msgid                    = it_return-id
        e_msgno                    = it_return-number
        e_msgty                    = it_return-type
        e_msgv1                    = it_return-message_v1
        e_msgv2                    = it_return-message_v2
        e_msgv3                    = it_return-message_v3
        e_msgv4                    = it_return-message_v4
      TABLES
        t_blntab                   = lti_blntab
        t_ftclear                  = lti_ftclear
        t_ftpost                   = lti_ftpost
        t_fttax                    = lti_fttax
      EXCEPTIONS
        clearing_procedure_invalid = 1
        clearing_procedure_missing = 2
        table_t041a_empty          = 3
        transaction_code_invalid   = 4
        amount_format_error        = 5
        too_many_line_items        = 6
        company_code_invalid       = 7
        screen_not_found           = 8
        no_authorization           = 9
        OTHERS                     = 10.

*    APPEND it_return.

    IF sy-subrc <> 0.
      break developer.
      CLEAR it_return.
      it_return-id         = sy-msgid.
      it_return-number     = sy-msgno.
      it_return-type       = sy-msgty.
      it_return-message_v1 = sy-msgv1.
      it_return-message_v2 = sy-msgv2.
      it_return-message_v3 = sy-msgv3.
      it_return-message_v4 = sy-msgv4.
*    ELSE.
*      COMMIT WORK.
    ENDIF.

*   --------------------------------------------------------------------
*   Finalizamos el proceso de compensación
*   --------------------------------------------------------------------
    CALL FUNCTION 'POSTING_INTERFACE_END'
      EXCEPTIONS
        session_not_processable = 1
        OTHERS                  = 2.

    IF sy-subrc <> 0.
      CLEAR it_return.
      it_return-id         = sy-msgid.
      it_return-number     = sy-msgno.
      it_return-type       = sy-msgty.
      it_return-message_v1 = sy-msgv1.
      it_return-message_v2 = sy-msgv2.
      it_return-message_v3 = sy-msgv3.
      it_return-message_v4 = sy-msgv4.
*      APPEND it_return.
    ENDIF.


* Devolvemos los datos del documento
    READ TABLE lti_blntab INDEX 1.
    IF sy-subrc IS INITIAL.
*    e_belnr = lti_blntab-belnr.
*    e_gjahr = lti_blntab-gjahr.
    ENDIF.
  ENDLOOP.
ENDFORM.
