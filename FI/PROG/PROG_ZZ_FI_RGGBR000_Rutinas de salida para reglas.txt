PROGRAM zz_fi_rggbr000 .
*---------------------------------------------------------------------*
*                                                                     *
*   Regeln: EXIT-Formpool for Uxxx-Exits                              *
*                                                                     *
*   This formpool is used by SAP for demonstration purposes only.     *
*                                                                     *
*   Note: If you define a new user exit, you have to enter your       *
*         user exit in the form routine GET_EXIT_TITLES.              *
*                                                                     *
*---------------------------------------------------------------------*
INCLUDE fgbbgd00.               "Data types

*TABLES: bsed.

*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*
*    PLEASE INCLUDE THE FOLLOWING "TYPE-POOL"  AND "TABLES" COMMANDS  *
*        IF THE ACCOUNTING MODULE IS INSTALLED IN YOUR SYSTEM         *
*TYPE-POOLS: GB002. " TO BE INCLUDED IN
*TABLES: BKPF,      " ANY SYSTEM THAT
*        BSEG,      " HAS 'FI' INSTALLED
*        COBL,
*        GLU1.
*ENHANCEMENT-POINT RGGBR000_01 SPOTS ES_RGGBR000 STATIC.
*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*


*----------------------------------------------------------------------*
*       FORM GET_EXIT_TITLES                                           *
*----------------------------------------------------------------------*
*       returns name and title of all available standard-exits         *
*       every exit in this formpool has to be added to this form.      *
*       You have to specify a parameter type in order to enable the    *
*       code generation program to determine correctly how to          *
*       generate the user exit call, i.e. how many and what kind of    *
*       parameter(s) are used in the user exit.                        *
*       The following parameter types exist:                           *
*                                                                      *
*       TYPE                Description              Usage             *
*    ------------------------------------------------------------      *
*       C_EXIT_PARAM_NONE   Use no parameter         Subst. and Valid. *
*                           except B_RESULT                            *
*       C_EXIT_PARAM_CLASS  Use a type as parameter  Subst. and Valid  *
*----------------------------------------------------------------------*
*  -->  EXIT_TAB  table with exit-name and exit-titles                 *
*                 structure: NAME(5), PARAM(1), TITEL(60)
*----------------------------------------------------------------------*
FORM get_exit_titles TABLES etab.

  DATA: BEGIN OF exits OCCURS 50,
          name(5)   TYPE c,
          param     LIKE c_exit_param_none,
          title(60) TYPE c,
        END OF exits.
*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* PLEASE DELETE THE FIRST '*' FORM THE BEGINING OF THE FOLLOWING LINES *
*        IF THE ACCOUNTING MODULE IS INSTALLED IN YOUR SYSTEM:         *
*  EXITS-NAME  = 'U101'.
*  EXITS-PARAM = C_EXIT_PARAM_CLASS.
*  EXITS-TITLE = TEXT-100.                 "Posting date check
*  APPEND EXITS.

  exits-name  = 'U100'.
  exits-param = c_exit_param_none.        "Complete data used in exit.
  exits-title = text-101.                 "Posting date check
  APPEND exits.

  exits-name  = 'U200'.
  exits-param = c_exit_param_none.        "Complete data used in exit.
  exits-title = text-104.                 "Posting date check
  APPEND exits.

*  exits-name  = 'U201'.
*  exits-param = c_exit_param_none.        "Complete data used in exit.
*  exits-title = text-105.                 "Posting date check
*  APPEND exits.

* forms for SAP_EIS
  exits-name  = 'US001'.                  "single validation: only one
  exits-param = c_exit_param_none.        "data record used
  exits-title = text-102.                 "Example EIS
  APPEND exits.

  exits-name  = 'UM001'.                  "matrix validation:
  exits-param = c_exit_param_class.       "complete data used in exit.
  exits-title = text-103.                 "Example EIS
  APPEND exits.


  exits-name  = 'U202'.
  exits-param = c_exit_param_class.
  exits-title = text-202.
  APPEND exits.

**********05.11.21 69361 USER EXIT VALIDACION BANCO INTERLOCUTOR SOC 2040

  exits-name  = 'U104'.
  exits-param = c_exit_param_none.
  exits-title = text-106.
  APPEND exits.
**********************************************************************

**********18.01.22 69889 - FI - LER - 20.12.21 FICHERO CONFIRMING ESTANDARIZADO

  exits-name  = 'U105'.
  exits-param = c_exit_param_class.
  exits-title = text-107.
  APPEND exits.
**********************************************************************

*--->mhernandez. 31.01.2022
*Comprobación fechas vto = operación y fiscal
  exits-name  = 'U106'.
  exits-param = c_exit_param_none.
  exits-title = text-108.
  APPEND exits.

  exits-name  = 'U107'.
  exits-param = c_exit_param_none.
  exits-title = text-109.
  APPEND exits.
*<---fin mhernandez

*--->LESCRIVA 71849 VALIDACION FECHA DOCUMENTO FACTURA EN EL FUTURO
  exits-name  = 'U108'.
  exits-param = c_exit_param_none.
  exits-title = text-110.
  APPEND exits.
*<--- fin LESCRIVA


* >> JJR 10.08.2022
  exits-name  = 'U109'.
  exits-param = c_exit_param_none.
  exits-title = text-111.
  APPEND exits.
* << JJR 10.08.2022

*--->LESCRIVA 72728 VALIDACION DUPLICADO DJ FACTORING SIN RECURSO.
  exits-name  = 'U110'.
  exits-param = c_exit_param_none.        "Complete data used in exit.
  exits-title = text-112.                 "Posting date check
  APPEND exits.
*<--- fin LESCRIVA

*--->LESCRIVA 74860 VALIDACION REFERENCIA EN DOCS SA de CONFIRMING DE PROVEEDOR. 05.01.23
  exits-name  = 'U111'.
  exits-param = c_exit_param_class.        "Complete data used in exit.
  exits-title = text-113.                 "Posting date check
  APPEND exits.
*<--- fin LESCRIVA

***********************************************************************
** EXIT EXAMPLES FROM PUBLIC SECTOR INDUSTRY SOLUTION
**
** PLEASE DELETE THE FIRST '*' FORM THE BEGINING OF THE FOLLOWING LINE
** TO ENABLE PUBLIC SECTOR EXAMPLE SUBSTITUTION EXITS
***********************************************************************
  INCLUDE rggbr_ps_titles.

***********************************************************************
** EXIT EXAMPLES FROM Argentina Legal Change - Law Res 177
***********************************************************************
  INCLUDE rggbs_ar_titles.

  REFRESH etab.
  LOOP AT exits.
    etab = exits.
    APPEND etab.
  ENDLOOP.

ENDFORM.                    "GET_EXIT_TITLES

*eject
*----------------------------------------------------------------------*
*       FORM U100                                                      *
*----------------------------------------------------------------------*
*       Example of an exit for a boolean rule                          *
*       This exit can be used in FI for callup points 1,2 or 3.        *
*----------------------------------------------------------------------*
*  <--  B_RESULT    T = True  F = False                                *
*----------------------------------------------------------------------*
FORM u100  USING b_result.

*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* PLEASE DELETE THE FIRST '*' FORM THE BEGINING OF THE FOLLOWING LINES *
*        IF THE ACCOUNTING MODULE IS INSTALLED IN YOUR SYSTEM:         *
*
*   IF SY-DATUM = BKPF-BUDAT.
*     B_RESULT  = B_TRUE.
*  ELSE.
*    B_RESULT  = B_FALSE.
*  ENDIF.

*ENHANCEMENT-POINT RGGBR000_02 SPOTS ES_RGGBR000 STATIC.

*ENHANCEMENT-POINT RGGBR000_03 SPOTS ES_RGGBR000.


ENDFORM.                                                    "U100

*eject
*----------------------------------------------------------------------*
*       FORM U101                                                      *
*----------------------------------------------------------------------*
*       Example of an exit using the complete data from one            *
*       multi-line rule.                                               *
*       This exit is intended for use from callup point 3, in FI.      *
*                                                                      *
*       If account 400000 is used, then account 399999 must be posted  *
*       to in another posting line.                                    *
*----------------------------------------------------------------------*
*  -->  BOOL_DATA   The complete posting data.                         *
*  <--  B_RESULT    T = True  F = False                                *
*----------------------------------------------------------------------*

*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* PLEASE DELETE THE FIRST '*' FORM THE BEGINING OF THE FOLLOWING LINES *
*        IF THE ACCOUNTING MODULE IS INSTALLED IN YOUR SYSTEM:         *
*FORM u101 USING    bool_data TYPE gb002_015
*          CHANGING B_RESULT.
*  DATA: B_ACC_400000_USED LIKE D_BOOL VALUE 'F'.
*
*  B_RESULT = B_TRUE.
** Has account 400000 has been used?
*  LOOP AT BOOL_DATA-BSEG INTO BSEG
*                 WHERE HKONT  = '0000400000'.
*     B_ACC_400000_USED = B_TRUE.
*     EXIT.
*  ENDLOOP.
*
** Check that account 400000 has been used.
*  CHECK B_ACC_400000_USED = B_TRUE.
*
*  B_RESULT = B_FALSE.
*  LOOP AT BOOL_DATA-BSEG INTO BSEG
*                 WHERE HKONT  = '0000399999'.
*     B_RESULT = B_TRUE.
*     EXIT.
* ENDLOOP.
*
*ENDFORM.

*eject
*----------------------------------------------------------------------*
*       FORM US001
*----------------------------------------------------------------------*
*       Example of an exit for a boolean rule in SAP-EIS
*       for aspect 001 (single validation).
*       one data record is transfered in structure CF<asspect>
*----------------------------------------------------------------------
*       Attention: for any FORM one has to make an entry in the
*       form GET_EXIT_TITLES at the beginning of this include
*----------------------------------------------------------------------*
*  <--  B_RESULT    T = True  F = False                                *
*----------------------------------------------------------------------*
FORM us001 USING b_result.

*TABLES CF001.                                 "table name aspect 001
*
*  IF ( CF001-SPART = '00000001' OR
*       CF001-GEBIE = '00000001' ) AND
*       CF001-ERLOS >= '1000000'.
*
**   further checks ...
*
*    B_RESULT  = B_TRUE.
*  ELSE.
*
**   further checks ...
*
*    B_RESULT  = B_FALSE.
*  ENDIF.

ENDFORM.                                                    "US001

*eject
*----------------------------------------------------------------------*
*       FORM UM001
*----------------------------------------------------------------------*
*       Example of an exit for a boolean rule in SAP-EIS
*       for aspect 001 (matrix validation).
*       Data is transfered in BOOL_DATA:
*       BOOL_DATA-CF<aspect> is intern table of structure CF<asspect>
*----------------------------------------------------------------------
*       Attention: for any FORM one has to make an entry in the
*       form GET_EXIT_TITLES at the beginning of this include
*----------------------------------------------------------------------*
*  <--  B_RESULT    T = True  F = False                                *
*----------------------------------------------------------------------*
FORM um001 USING bool_data    "TYPE GB002_<boolean class of aspect 001>
           CHANGING b_result.

*DATA: LC_CF001 LIKE CF001.
*DATA: LC_COUNT TYPE I.

*  B_RESULT = B_TRUE.
*  CLEAR LC_COUNT.
*  process data records in BOOL_DATA
*  LOOP AT BOOL_DATA-CF001 INTO LC_CF001.
*    IF LC_CF001-SPART = '00000001'.
*      ADD 1 TO LC_COUNT.
*      IF LC_COUNT >= 2.
**       division '00000001' may only occur once !
*        B_RESULT = B_FALSE.
*        EXIT.
*      ENDIF.
*    ENDIF.
*
**   further checks ....
*
*  ENDLOOP.

ENDFORM.                                                    "UM001


***********************************************************************
** EXIT EXAMPLES FROM PUBLIC SECTOR INDUSTRY SOLUTION
**
** PLEASE DELETE THE FIRST '*' FORM THE BEGINING OF THE FOLLOWING LINE
** TO ENABLE PUBLIC SECTOR EXAMPLE SUBSTITUTION EXITS
***********************************************************************
*INCLUDE rggbr_ps_forms.

***********************************************************************
** EXIT EXAMPLES FROM Argentina Legal Change - Law Res 177
***********************************************************************
INCLUDE rggbs_ar_forms.


*eject
*----------------------------------------------------------------------*
*       FORM U200                                                      *
*----------------------------------------------------------------------*
*       VALIDACIÓN FACTURAS VENTAS INTERFASES RTS                      *
*                                                                      *
*----------------------------------------------------------------------*
FORM u200  USING b_result.

  DATA: ls_bkpf TYPE bkpf.
* quitar las anulaciones
  IF sy-tcode <> 'FB08'.
* solo para las creaciones
    IF bkpf-belnr IS INITIAL OR bkpf-belnr = '$       1'.
      IF bkpf-blart = 'DR' OR bkpf-blart = 'DG' OR bkpf-blart = 'DF' OR bkpf-blart = 'DW'.
        SELECT SINGLE * INTO ls_bkpf
        FROM bkpf
        WHERE bukrs = bkpf-bukrs
        AND gjahr = bkpf-gjahr
        AND xblnr = bkpf-xblnr
        AND bstat <> 'D'
        AND ( blart = 'DR' OR blart = 'DG' OR blart = 'DF' OR blart = 'DW').
        IF sy-subrc = 0.
          MESSAGE e017(zfi) WITH bkpf-xblnr.      "   Factura de ventas & duplicada.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.


*----------------------------------------------------------------------*
*       FORM U201                                                      *
*----------------------------------------------------------------------*
*       VALIDACIÓN FECHA EMISIÓN PAGARÉ OBLIGATORIA                    *
*                                                                      *
*----------------------------------------------------------------------*
*FORM u201  USING b_result.
*
*  IF bsed-wdate IS INITIAL.
*
*    b_result = b_false.
*
*  ELSE.
*
*    b_result = b_true.
*
*  ENDIF.
*
*ENDFORM.

*>> JJR 10.12.2020
************************************************************************
* Subrutina..: U202                                                  *                                              *                                    *                                         *
* Función....: Obligatoriedad REINDAT
************************************************************************
FORM u202 USING    bool_data TYPE gb002_015
      CHANGING b_result.


*Validar obligatoriedad del campo REINDAT
  b_result = b_true.

* Obtener pais
  SELECT SINGLE land1 FROM t001 INTO @DATA(lv_land1)
    WHERE bukrs = @bkpf-bukrs.
* Activación REINDAT
  SELECT SINGLE  reindat_act FROM idfivatt_def INTO @DATA(lv_reindat_act)
    WHERE tbukrs = @bkpf-bukrs.

  SELECT SINGLE *  FROM fiessii_doctype INTO @DATA(ls_doctype)
    WHERE bukrs = @bkpf-bukrs AND
          blart = @bkpf-blart.
  IF sy-subrc <> 0.
    SELECT SINGLE *  FROM fiescan_doctype INTO ls_doctype
    WHERE bukrs = bkpf-bukrs AND
          blart = bkpf-blart.
  ENDIF.


  IF lv_land1 = 'ES' AND
     lv_reindat_act = 'X' AND
     ls_doctype IS NOT INITIAL.


    IF  ( bkpf-awtyp = 'BKPF' OR bkpf-awtyp = 'BKPFF' ).
* Seleccionar si es soportado o repercutido
      LOOP AT bool_data-bseg INTO DATA(ls_bseg) WHERE mwskz IS NOT INITIAL.
        EXIT.
      ENDLOOP.
      IF sy-subrc = 0.
        b_result = b_false.
      ENDIF.
    ELSEIF bkpf-awtyp = 'RMRP' OR bkpf-awtyp = 'VBRK'.
      b_result = b_false.
    ENDIF.

  ENDIF.
ENDFORM.                                                    "U202

**********05.11.21 69361 USER EXIT VALIDACION BANCO INTERLOCUTOR SOC 2040
FORM u104  USING b_result.

  DATA: lv_bvtyp TYPE bvtyp.
  SELECT bvtyp
    FROM lfbk
    INTO lv_bvtyp
    WHERE lifnr = bseg-lifnr
    AND bvtyp <> '0000'.
  ENDSELECT.

  IF sy-subrc = 0
    AND lv_bvtyp IS NOT INITIAL.
    MESSAGE i038(zfi).
  ENDIF.

ENDFORM.

**********18.01.22 69889 - FI - LER - 20.12.21 FICHERO CONFIRMING ESTANDARIZADO.
FORM u105 USING bool_data TYPE gb002_015
          CHANGING b_result.

  DATA: lv_adrnr TYPE adrnr.
  DATA: lv_emailid TYPE ad_smtpadr.
  DATA: lv_addrnumber TYPE ad_addrnum.
  DATA: lv_remark    TYPE ad_remark2.
  DATA: lv_smtp_addr TYPE ad_smtpadr.

  b_result = b_true.

*****06.10.2022 - 73827 - limitación vía de pago K -

  LOOP AT bool_data-bseg INTO bseg
    WHERE koart = 'K' AND zlsch = 'K'.
    DATA(lv_lifnr) = bseg-lifnr.
    SELECT SINGLE adrnr
      FROM lfa1
      INTO lv_addrnumber
      WHERE lifnr = lv_lifnr.
    IF sy-subrc EQ 0.

      SELECT SINGLE a~smtp_addr
        INTO @lv_smtp_addr
        FROM adr6 AS a
          INNER JOIN adrt AS b
            ON a~addrnumber EQ b~addrnumber
            AND a~consnumber EQ b~consnumber
            WHERE a~addrnumber EQ @lv_addrnumber
            AND b~remark EQ 'CONFIRMING'.

      IF sy-subrc NE 0.
        b_result = b_false.
        EXIT.
      ENDIF.
    ENDIF.

  ENDLOOP.
ENDFORM.
*--->mhernandez. 31.01.2022
*Comprobación fechas vto = operación y fiscal
FORM u106 USING b_result.

  DATA: lt_date TYPE STANDARD TABLE OF vtopis.

  IF sy-tcode EQ 'FB60' OR sy-tcode EQ 'MIRO'.

    IF bseg-zterm IS NOT INITIAL.

*Otenemos la fecha de vencimiento para
*compararla con la VATDATE
      CALL FUNCTION 'SD_PRINT_TERMS_OF_PAYMENT'
        EXPORTING
          bldat                        = bseg-zfbdt "bkpf-bldat
          budat                        = bseg-zfbdt "bkpf-budat
          language                     = sy-langu
          terms_of_payment             = bseg-zterm
        TABLES
          top_text                     = lt_date
        EXCEPTIONS
          terms_of_payment_not_in_t052 = 1
          OTHERS                       = 2.

      IF bseg-zterm EQ '0000'.

        DATA(lv_fecha) = bseg-zfbdt.

      ELSE.

        IF lt_date[] IS NOT INITIAL.
          DATA(ls_date) = lt_date[ 1 ].

          lv_fecha = ls_date-hdatum.

        ENDIF.

      ENDIF.

      IF ( bkpf-vatdate NE bkpf-reindat ) OR ( bkpf-vatdate NE lv_fecha ).
        MESSAGE e040(zfi).
        b_result = b_false.
        EXIT.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.
FORM u107 USING b_result.
*Comprobamos si el proveedor está sujeto a tracto
*sucesivo y si, por lo tanto, la clase de documento
*es KV

  SELECT SINGLE lifnr FROM ztfi_proveedores
  INTO @DATA(lv_lifnr)
        WHERE lifnr EQ @bseg-lifnr.

  IF sy-subrc EQ 0 AND bkpf-blart NE 'KV'.
    MESSAGE i041(zfi).
    b_result = b_false.
    EXIT.
  ENDIF.

ENDFORM.
*<---fin mhernandez
*******************************************************************************

*---> 71849 20.05.2022 LESCRIVA
FORM u108  USING b_result.

  DATA: ls_bkpf     TYPE bkpf,
        lt_tvarvc   TYPE TABLE OF tvarvc,
        l_ejercicio TYPE tvarv_val,
        l_periodo   TYPE tvarv_val,
        l_yeardoc   TYPE gjahr,
        l_perdoc    TYPE monat.

*Calculamos el año actual a partir de la variable de la tvarvc.
  SELECT SINGLE low
    FROM tvarvc
    INTO l_ejercicio
    WHERE name = 'RV_ACTUAL_YEAR'.

*Calculamos el periodo actual a partir de la variable de la tvarvc.

  SELECT SINGLE low
  FROM tvarvc
  INTO l_periodo
  WHERE name = 'RV_ACTUAL_MONTH'.

*obtenemos el periodo y el año de la fecha del documento
  IF bkpf-bldat IS NOT INITIAL.
    l_perdoc = bkpf-bldat+4(2).
    l_yeardoc = bkpf-bldat(4).
  ENDIF.

*Comparamos periodo y año del documetno con el periodo y año actual.
  IF ( l_perdoc > l_periodo AND l_yeardoc >= l_ejercicio )
  OR ( l_yeardoc > l_ejercicio ).

    MESSAGE e043(zfi) WITH bkpf-blart.
    b_result = b_false.
    EXIT.
  ENDIF.
ENDFORM.

*<--- fin LESCRIVA

**>> JJR 10.08.2022
*FORM u109  USING b_result.
*  FIELD-SYMBOLS <bankl> TYPE bsec-bankl.
*
*  b_result = b_true.
*
**  CHECK bseg-bschl = '09' AND bseg-umskz = 'I' AND sy-tcode = 'FB05'.
*
*    IF bkpf-bktxt IS INITIAL.
*      MESSAGE 'Informe cheque en el campo texto de cabecera' TYPE 'E'.
*    ELSE.
*      DATA bktxt TYPE bkpf-bktxt.
*      bktxt = bkpf-bktxt.
*      DATA(l_long) = strlen( bktxt ).
*      IF l_long NE 13.
*        b_result = b_false.
*        MESSAGE 'El cheque informado en Txt.cabec. debe tener 13 posiciones' TYPE 'E'.
*      ELSEIF NOT bktxt(13) CO '0123456789'.
*        b_result = b_false.
*        MESSAGE 'El cheque informado en Txt.cabec. sólo debe tener dígitos' TYPE 'E'.
*      ELSE.
*        DATA(n_pagare) = bktxt(7).
*        DATA(dc) = bktxt+7(1).
*        DATA(tipo_documento) = bktxt+8(4).
*        DATA(dc_dd) = bktxt+12(1).
*
*        IF NOT ( tipo_documento(2) = '42' OR tipo_documento(2) = '75' OR tipo_documento(2) = '82' OR tipo_documento(2) = '90' ).
*          b_result = b_false.
*          MESSAGE 'Tipo de documento incorrecto' TYPE 'E'.
*        ENDIF.
*
*        DATA td_np TYPE numc11.
*        CONCATENATE tipo_documento n_pagare INTO td_np.
*        DATA(resto) = td_np MOD 7.
*        IF resto NE dc.
*          b_result = b_false.
*          MESSAGE 'Nº de cheque incorrecto' TYPE 'E'.
*        ENDIF.
*
*        resto = tipo_documento MOD 7.
*        IF resto NE dc_dd.
*          b_result = b_false.
*          MESSAGE 'Nº de cheque incorrecto' TYPE 'E'.
*        ENDIF.
*      ENDIF.
*    ENDIF.
*
*ENDFORM.
**<< JJR 10.08.2022

FORM u110 USING b_result.

  DATA: lt_bkpf TYPE TABLE OF bkpf,
        ls_bkpf TYPE bkpf.
*** LER 14.11.23 - 80200 PERMITIR FACTORIZAR CON DJ ANULADOS
  " quitar las anulaciones
  IF sy-tcode <> 'FB08'.
    " solo para las creaciones
    IF bkpf-belnr IS INITIAL OR bkpf-belnr = '$ 1'.
      IF bkpf-blart = 'DJ'.
        SELECT * INTO TABLE lt_bkpf
        FROM bkpf
        WHERE bukrs = bkpf-bukrs
          AND gjahr = bkpf-gjahr
          AND xblnr = bkpf-xblnr
          AND bstat <> 'D'
          AND blart = 'DJ'
          AND stblg = ''.
        IF sy-subrc = 0 AND lt_bkpf[] IS NOT INITIAL.
          LOOP AT lt_bkpf INTO ls_bkpf.
            MESSAGE e045(zfi) WITH ls_bkpf-xblnr.
          ENDLOOP.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.

FORM u111  USING bool_data TYPE gb002_015
          CHANGING b_result.

  b_result = b_true.

  LOOP AT bool_data-bseg INTO bseg
    WHERE koart = 'K' AND zlsch = 'K'.

    DATA: xblnr_doc TYPE xblnr.
    xblnr_doc = bkpf-xblnr.

    IF xblnr_doc = ''.
      b_result = b_false.
      EXIT.
    ENDIF.
  ENDLOOP.
ENDFORM.
