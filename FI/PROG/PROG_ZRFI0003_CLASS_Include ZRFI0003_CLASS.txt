*&---------------------------------------------------------------------*
*&  Include           ZRFI0003_CLASS
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&       Class
*&---------------------------------------------------------------------*
CLASS lcl_event_handler DEFINITION.
  PUBLIC SECTION.

    METHODS handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
      IMPORTING e_object e_interactive.

    METHODS handle_data_changed
                  FOR EVENT data_changed OF cl_gui_alv_grid
      IMPORTING er_data_changed e_onf4 e_onf4_before
                  e_onf4_after e_ucomm.

    METHODS handle_hotspot
                  FOR EVENT hotspot_click OF cl_gui_alv_grid
      IMPORTING e_row_id e_column_id es_row_no.

    METHODS handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
      IMPORTING e_ucomm.

    METHODS handle_finished FOR EVENT finished OF cl_gui_timer.

ENDCLASS.                    "lcl_event_receiver DEFINITION


*&---------------------------------------------------------------------*
*&       Class (Implementation)
*&---------------------------------------------------------------------*
CLASS lcl_event_handler IMPLEMENTATION.

  METHOD handle_toolbar.
    CLEAR gs_toolbar.
    MOVE  'CONTAB'                  TO gs_toolbar-function.
    MOVE  text-003                   TO gs_toolbar-quickinfo.
    MOVE  text-003                   TO gs_toolbar-text.
    MOVE space                       TO gs_toolbar-disabled.
    APPEND gs_toolbar                TO e_object->mt_toolbar.
*
*    MOVE  'BLOQ_DESB'                TO gs_toolbar-function.
*    MOVE  text-008                   TO gs_toolbar-quickinfo.
*    MOVE  text-008                   TO gs_toolbar-text.
*    MOVE space                       TO gs_toolbar-disabled.
*    APPEND gs_toolbar                TO e_object->mt_toolbar.
*
*    MOVE  'CERRAR'                   TO gs_toolbar-function.
*    MOVE  text-009                   TO gs_toolbar-quickinfo.
*    MOVE  text-009                   TO gs_toolbar-text.
*    MOVE space                       TO gs_toolbar-disabled.
*    APPEND gs_toolbar                TO e_object->mt_toolbar.
*
*    MOVE  'ACTUALIZAR'               TO gs_toolbar-function.
*    MOVE  text-010                   TO gs_toolbar-quickinfo.
*    MOVE  text-010                   TO gs_toolbar-text.
*    MOVE space                       TO gs_toolbar-disabled.
*    APPEND gs_toolbar                TO e_object->mt_toolbar.
*
*    MOVE  'PROGRAMAR'                TO gs_toolbar-function.
*    MOVE  text-011                   TO gs_toolbar-quickinfo.
*    MOVE  text-011                   TO gs_toolbar-text.
*    MOVE space                       TO gs_toolbar-disabled.
*    APPEND gs_toolbar                TO e_object->mt_toolbar.
*
*    MOVE  'OBSERVACIONES'                TO gs_toolbar-function.
*    MOVE  text-013                   TO gs_toolbar-quickinfo.
*    MOVE  text-013                   TO gs_toolbar-text.
*    MOVE space                       TO gs_toolbar-disabled.
*    APPEND gs_toolbar                TO e_object->mt_toolbar.

  ENDMETHOD.                    "handle_toolbar

  METHOD handle_user_command.
    DATA: g_event_handler TYPE REF TO lcl_event_handler.
*
    DATA: lt_datos       TYPE table of ZRFI0003_grid.

*          lti_ztpp0009    TYPE STANDARD TABLE OF ztpp0009.
*
*    DATA: ls_datos        TYPE ztpp0009,
*          ls_datos_aux    TYPE ztpp0009,
*          ls_ztpp0009     TYPE ztpp0009.
*
*    DATA: lv_index TYPE syst_index.
*
*    FIELD-SYMBOLS: <fs_datos> TYPE ztpp0009.
*
*    PERFORM refrescar.
*
    gv_okcode = e_ucomm.

*
    CASE gv_okcode.
      WHEN 'CONTAB'.
        PERFORM lines_selected TABLES lt_datos.
        check lt_datos[] is not initial.
        PERFORM f_contabilizar TABLES lt_datos.

    ENDCASE.
*
**Nos aseguramos de que al cambiar datos y orden, los
**cambios de calidad, gramaje y ancho permanecen
*    PERFORM cambios TABLES gti_datos.
*
*    CLEAR gv_okcode.
*
**    CREATE OBJECT g_event_handler.
**    SET HANDLER g_event_handler->handle_data_changed FOR g_grid.
**
*    CALL METHOD g_grid->refresh_table_display.

  ENDMETHOD.                    "handle_user_command

  METHOD handle_data_changed.

  ENDMETHOD.                    "handle_data_changed

  METHOD handle_hotspot.
*    DATA: g_event_handler TYPE REF TO lcl_event_handler.
*
*    DATA: ls_datos TYPE ztpp0009.
*
*    DATA: lv_ebeln TYPE ebeln,
*          lv_ebelp TYPE ebelp.
*
*    CLEAR ls_datos.
*    READ TABLE gti_datos INDEX e_row_id-index INTO ls_datos.
*    IF sy-subrc = 0.
*      CASE e_column_id.
*        WHEN 'AUFNR'.
*          IF NOT ls_datos-aufnr IS INITIAL.
*            FREE MEMORY ID 'BR1'.
*            SET PARAMETER ID 'BR1' FIELD ls_datos-aufnr.
*            CALL TRANSACTION 'COR2' AND SKIP FIRST SCREEN.
*          ENDIF.
*        WHEN 'PEDIDO_POS1'.
*          IF NOT ls_datos-pedido_pos1 IS INITIAL.
*            SPLIT ls_datos-pedido_pos1 AT '/' INTO lv_ebeln lv_ebelp.
*
*            IF lv_ebeln(2) EQ '44'.
*              FREE MEMORY ID 'BES'.
*              SET PARAMETER ID 'BES' FIELD lv_ebeln.
*              CALL TRANSACTION 'ME22N' AND SKIP FIRST SCREEN.
*            ELSE.
*              FREE MEMORY ID 'AUN'.
*              SET PARAMETER ID 'AUN' FIELD lv_ebeln.
*              CALL TRANSACTION 'VA02' AND SKIP FIRST SCREEN.
*            ENDIF.
*          ENDIF.
*        WHEN 'PEDIDO_POS2'.
*          IF NOT ls_datos-pedido_pos2 IS INITIAL.
*            SPLIT ls_datos-pedido_pos2 AT '/' INTO lv_ebeln lv_ebelp.
*
*            IF lv_ebeln(2) EQ '44'.
*              FREE MEMORY ID 'BES'.
*              SET PARAMETER ID 'BES' FIELD lv_ebeln.
*              CALL TRANSACTION 'ME22N' AND SKIP FIRST SCREEN.
*            ELSE.
*              FREE MEMORY ID 'AUN'.
*              SET PARAMETER ID 'AUN' FIELD lv_ebeln.
*              CALL TRANSACTION 'VA02' AND SKIP FIRST SCREEN.
*            ENDIF.
*          ENDIF.
*        WHEN 'PEDIDO_POS3'.
*          IF NOT ls_datos-pedido_pos3 IS INITIAL.
*            SPLIT ls_datos-pedido_pos3 AT '/' INTO lv_ebeln lv_ebelp.
*
*            IF lv_ebeln(2) EQ '44'.
*              FREE MEMORY ID 'BES'.
*              SET PARAMETER ID 'BES' FIELD lv_ebeln.
*              CALL TRANSACTION 'ME22N' AND SKIP FIRST SCREEN.
*            ELSE.
*              FREE MEMORY ID 'AUN'.
*              SET PARAMETER ID 'AUN' FIELD lv_ebeln.
*              CALL TRANSACTION 'VA02' AND SKIP FIRST SCREEN.
*            ENDIF.
*          ENDIF.
*      ENDCASE.
*    ENDIF.
*
*    WAIT UP TO 3 SECONDS.
*
*    PERFORM f_ucomm_refrescar_alvs.

  ENDMETHOD.                    "handle_hotspot

  METHOD handle_finished.
*    PERFORM f_ucomm_refrescar_alvs.
*
*    ADD g_af_timer TO g_counter.
*    CALL METHOD g_timer->run.
  ENDMETHOD.                    "handle_finished

ENDCLASS.                    "lcl_application IMPLEMENTATION
