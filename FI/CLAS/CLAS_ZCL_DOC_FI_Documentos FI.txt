class ZCL_DOC_FI definition
  public
  final
  create public .

public section.

  data BKPF type BKPF .

  class ZCL_C definition load .
  class-methods GET_EBELN_SIMPLE
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR
    exporting
      value(EBELN) type BSEG-EBELN
      value(EBELP) type BSEG-EBELP .
  class-methods GET_BKPF
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR
    returning
      value(BKPF) type BKPF .
  class-methods ES_ANULADO
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR
    returning
      value(ANULADO) type BKPF-XNETB .
  class-methods GET_IMPORTE_POR_CUENTA
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !HKONT type BSEG-HKONT
      !ZUONR type BSEG-ZUONR optional
      !BLART type BKPF-BLART optional
      !XREF3 type BSEG-XREF3 optional
      !AUFNR type BSEG-AUFNR optional
      !EBELN type BSEG-EBELN optional
      !EBELP type BSEG-EBELP optional
    returning
      value(IMPORTE) type DMBTRV .
  class-methods GET_IMPORTE_POR_CUENTA_DOC
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR
      !KOART type BSEG-KOART default 'S'
      !HKONT type BSEG-HKONT
    returning
      value(IMPORTE) type DMBTRV .
  type-pools ABAP .
  class-methods INSERTAR_URL_GOS_ST
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR
      !URL type STRING
      !TITULO type STRING
      !POSICIONES type ABAP_BOOL default ''
    returning
      value(ERROR) type EKKO-LOEKZ .
  class-methods GET_URL_POR_TITULO_ST
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR
      !TITULO type STRING
    returning
      value(URL) type STRING .
  class-methods GET_ULT_DOC_POR_CUENTA
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !HKONT type BSEG-HKONT
      !ZUONR type BSEG-ZUONR optional
      !BLART type BKPF-BLART optional
      !XREF3 type BSEG-XREF3 optional
      !AUFNR type BSEG-AUFNR optional
      !EBELN type BSEG-EBELN optional
      !EBELP type BSEG-EBELP optional
    changing
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR .
  class-methods FB03
    importing
      !BUKRS type BKPF-BUKRS default ZCL_C=>BUKRS
      !BELNR type BKPF-BELNR
      !GJAHR type BKPF-GJAHR .
  class-methods CUENTA_TIENE_IMPUTACION
    importing
      !BUKRS type BKPF-BUKRS
      !SAKNR type SKB1-SAKNR
      !CAMPO type ANY
    returning
      value(SI) type BKPF-XNETB .
  class-methods CONVERTIR_MONEDA_EUR
    importing
      !IMPORTE type ANY
      !MONEDA type WAERS
      !WKURS type WKURS optional
      !FECHA type DATS default SY-DATUM
      !TYPE_OF_RATE type ANY default 'M'
      !MONEDA_LOCAL type WAERS default 'EUR'
    returning
      value(IMPORTE_EUR) type NETWR .
  class-methods GET_IMPORTE_IVA
    importing
      !BUKRS type BUKRS default ZCL_C=>BUKRS
      !MWSKZ type MWSKZ
      !WAERS type WAERS default ZCL_C=>WAERS
      !WRBTR type ANY
    returning
      value(IMPORTE) type BSEG-WRBTR .
  class-methods ACTUALIZAR_CAMPO_BSEG
    importing
      !CAMPO type STRING
      !VALOR type ANY
      !BUKRS type BUKRS
      !BELNR type BELNR_D
      !GJAHR type GJAHR
      !BUZEI type BUZEI .
  class-methods ES_PERIODO_ABIERTO
    importing
      !BUKRS type BUKRS default ZCL_C=>BUKRS
      !GJAHR type GJAHR optional
      !MONAT type MONAT optional
      !BUDAT type BUDAT optional
      !KOART type T001B-MKOAR default '+'
      !KONTO type T001B-VKONT default '+'
    returning
      value(ES_ABIERTO) type ABAP_BOOL .
  class-methods GET_DATOS_IVA
    importing
      !BUKRS type BUKRS default ZCL_C=>BUKRS
      !FECHA type DATS default SY-DATUM
      !MWSKZ type MWSKZ
      !WAERS type WAERS default ZCL_C=>WAERS
      !WRBTR type ANY
    returning
      value(IMPORTE) type BSEG-WRBTR .
  class-methods GET_IMP_IVA_DESDE_BRUTO
    importing
      !BUKRS type BUKRS default ZCL_C=>BUKRS
      !MWSKZ type MWSKZ
      !WAERS type WAERS default ZCL_C=>WAERS
      !WRBTR type ANY
    returning
      value(IMPORTE) type BSEG-WRBTR .
  class-methods GET_UTILIZACION_PAGO
    importing
      !BUKRS type BUKRS
      !AUGBL type AUGBL
      !AUGDT type AUGDT
      !CUENTAS type ABAP_BOOL default 'X'
      !PROVEEDOR type ABAP_BOOL default ''
      !CLIENTE type ABAP_BOOL default ''
      !BLART type BLART default ''
    returning
      value(I_BSEG) type BSEG_T .
  class-methods GET_NOMBRE_CUENTA
    importing
      !SAKNR type SAKNR
      !KTOPL type KTOPL default ZCL_C=>PLAN_CUENTAS
      !SPRAS type SY-LANGU default SY-LANGU
    preferred parameter SAKNR
    returning
      value(TXT20) type TXT20_SKAT .
  class-methods GET_FECHA_PAGO
    importing
      !FECHA type DATS
      !ZTERM type DZTERM
    returning
      value(FECHA_PAGO) type DATS .
  class-methods GET_TIPO_CAMBIO
    importing
      !FECHA type SY-DATUM default SY-DATUM
      !MON_EXT type WAERS
      !MON_LOCAL type WAERS default 'EUR'
      !TIPO_CAMBIO type TCURR-KURST default 'M'
    returning
      value(TIPO) type TCURR-UKURS .
protected section.
private section.
endclass. "ZCL_DOC_FI definition
class ZCL_DOC_FI implementation.
method ACTUALIZAR_CAMPO_BSEG.
  DATA: l_set TYPE string,
        l_aux TYPE sgtxt,
        l_koart TYPE koart,
        l_kunnr TYPE kunnr,
        l_lifnr TYPE lifnr,
        l_hkont TYPE hkont,
        l_augbl TYPE augbl,
        l_dd03l TYPE dd03l,
        l_tabla TYPE string.

  WRITE valor TO l_aux.
  CONCATENATE campo '=' l_aux INTO l_set SEPARATED BY space.

  SELECT SINGLE koart kunnr lifnr hkont augbl FROM bseg
    INTO (l_koart, l_kunnr, l_lifnr, l_hkont, l_augbl)
     WHERE bukrs = bukrs
       AND belnr = belnr
       AND gjahr = gjahr
       AND buzei = buzei.
  IF sy-subrc = 0.

    UPDATE bseg
       SET (l_set)
     WHERE bukrs = bukrs
       AND belnr = belnr
       AND gjahr = gjahr
       AND buzei = buzei.
    IF sy-subrc = 0.

      CASE l_koart.
        WHEN 'D'.
          SELECT SINGLE * FROM dd03l
            INTO l_dd03l
           WHERE tabname = 'BSID'
             AND fieldname = campo.
          IF sy-subrc = 0.
            IF l_augbl IS INITIAL.
              l_tabla = 'BSID'.
            ELSE.
              l_tabla = 'BSAD'.
            ENDIF.
            UPDATE (l_tabla)
             SET (l_set)
           WHERE bukrs = bukrs
             AND kunnr = l_kunnr
             AND belnr = belnr
             AND gjahr = gjahr
             AND buzei = buzei.
          ENDIF.
        WHEN 'K'.
          SELECT SINGLE * FROM dd03l
            INTO l_dd03l
           WHERE tabname = 'BSIK'
             AND fieldname = campo.
          IF sy-subrc = 0.
            IF l_augbl IS INITIAL.
              l_tabla = 'BSIK'.
            ELSE.
              l_tabla = 'BSAK'.
            ENDIF.
            UPDATE (l_tabla)
             SET (l_set)
           WHERE bukrs = bukrs
             AND lifnr = l_lifnr
             AND belnr = belnr
             AND gjahr = gjahr
             AND buzei = buzei.
          ENDIF.

        WHEN 'S'.
          SELECT SINGLE * FROM dd03l
            INTO l_dd03l
           WHERE tabname = 'BSIS'
             AND fieldname = campo.
          IF sy-subrc = 0.
            IF l_augbl IS INITIAL.
              l_tabla = 'BSIS'.
            ELSE.
              l_tabla = 'BSAS'.
            ENDIF.
            UPDATE (l_tabla)
             SET (l_set)
           WHERE bukrs = bukrs
             AND hkont = l_hkont
             AND belnr = belnr
             AND gjahr = gjahr
             AND buzei = buzei.
          ENDIF.
      ENDCASE.
    ENDIF.
  ENDIF.


endmethod.
METHOD convertir_moneda_eur.

  CLEAR importe_eur.

  CALL FUNCTION 'CONVERT_TO_LOCAL_CURRENCY'
    EXPORTING
      date                    = fecha
      foreign_amount          = importe
      foreign_currency        = moneda
      local_currency          = moneda_local
      rate                    = wkurs
      type_of_rate            = type_of_rate
*     READ_TCURR              = 'X'
    IMPORTING
*     EXCHANGE_RATE           =
*     FOREIGN_FACTOR          =
      local_amount            = importe_eur
*     LOCAL_FACTOR            =
*     EXCHANGE_RATEX          =
*     FIXED_RATE              =
*     DERIVED_RATE_TYPE       =
   EXCEPTIONS
     no_rate_found           = 1
     overflow                = 2
     no_factors_found        = 3
     no_spread_found         = 4
     derived_2_times         = 5
     OTHERS                  = 6.


ENDMETHOD.
method CUENTA_TIENE_IMPUTACION.

  DATA: skb1 TYPE skb1,
        t004f TYPE t004f,
        t169o TYPE t169o.

  DATA:  feldauswahl(140), i TYPE i.

  TYPES: BEGIN OF t_cobs,
          bukrs TYPE bseg-bukrs,
          saknr TYPE bseg-saknr,
          field TYPE tcobf-field,
          mwskz TYPE bseg-mwskz,
          xintb TYPE skb1-xintb,
        END OF t_cobs.

  DATA: xcobs TYPE TABLE OF t_cobs,
        l_cobs TYPE t_cobs,
        xcobf TYPE TABLE OF tcobf,
        l_cobf TYPE tcobf.

  CLEAR si.



  SELECT * FROM tcobf INTO TABLE xcobf.

*------ Entfernen der Felder aus T169O
  LOOP AT xcobf INTO l_cobf.
    SELECT SINGLE * FROM t169o
    INTO t169o
     WHERE field = l_cobf-field.
    CHECK sy-subrc = 0.
    DELETE xcobf.
  ENDLOOP.

*-----  Kundendefinierte Felder gefüllt?
*------ Sachkonto lesen -----------------------------------------------*
  CALL FUNCTION 'READ_SACHKONTO'
    EXPORTING
      buchungskreis = bukrs
      sachkonto     = saknr
    IMPORTING
      sachkonto_wa  = skb1.

  IF campo = 'MWSKZ'.
    IF NOT skb1-mwskz  IS INITIAL.
      si = 'X'.
      exit.
    ENDIF.
  ENDIF.

  SELECT SINGLE * FROM t004f INTO t004f WHERE bukrs = bukrs
  AND fstag = skb1-fstag.


*------ Steuerkennzeichen setzen -------------------------------------*
  IF skb1-mwskz = '< ' OR skb1-mwskz = '> '.
    l_cobs-mwskz = skb1-mwskz.
  ENDIF.


*------ Gegebenenfalls Flag "nur automatisch bebuchbar" setzen -------*
  IF skb1-xintb NE space OR skb1-mitkz NE space.
    l_cobs-xintb = 'X'.
  ENDIF.

*------ "Keyfelder" von XCOBS füllen ---------------------------------*
  l_cobs-bukrs = bukrs.
  l_cobs-saknr = saknr.
  APPEND l_cobs TO xcobs.

*------ Entfernen der Felder aufgrund T004F-Steuerung -----------------*
  LOOP AT xcobf INTO l_cobf.
    feldauswahl(50) = t004f-faus1.
    feldauswahl+90(50) = t004f-faus2.
    i = l_cobf-group1 - 1.
    SHIFT feldauswahl BY i PLACES.
    CHECK feldauswahl(1) = '+' OR feldauswahl(1) = '.'.
    l_cobs-field = l_cobf-field.
    APPEND l_cobs TO xcobs.
  ENDLOOP.

  read table xcobs transporting no fields with key field = campo.
  if sy-subrc = 0.
    si = 'X'.
  endif.

endmethod.
method ES_ANULADO.
  DATA l_bkpf TYPE bkpf.

  CLEAR anulado.
* Compruebo si tiene documento de anulaciÃ³n
  l_bkpf = get_bkpf( bukrs = bukrs belnr = belnr gjahr = gjahr ).
  IF NOT l_bkpf-stblg IS INITIAL.
    anulado = 'X'.
* Por si acaso, verificamos que estÃ© anulado, el documento anulaciÃ³n
    l_bkpf = get_bkpf( bukrs = bukrs
                       belnr = l_bkpf-stblg
                       gjahr = l_bkpf-stjah ).
    IF l_bkpf-stblg IS INITIAL.
      CLEAR ANULADO.
    ENDIF.
  ENDIF.

endmethod.
method ES_PERIODO_ABIERTO.
  DATA: l_gjahr TYPE gjahr,
        l_monat TYPE monat,
        l_period TYPE t001b-frpe1.

  IF NOT budat IS INITIAL.
    CALL FUNCTION 'FI_PERIOD_DETERMINE'
      EXPORTING
        i_budat             = budat
        i_bukrs             = bukrs
*   I_PERIV               = ' '
*   I_GJAHR               = 0000
*   I_MONAT               = 00
*   X_XMO16               = ' '
     IMPORTING
       e_gjahr              = l_gjahr
       e_monat              = l_monat
*   E_POPER               =
     EXCEPTIONS
       fiscal_year          = 1
       period               = 2
       period_version       = 3
       posting_period       = 4
       special_period       = 5
       version              = 6
       posting_date         = 7
       OTHERS               = 8.
  ELSE.
    l_gjahr = gjahr.
    l_monat = monat.
  ENDIF.

  l_period = l_monat.

  CALL FUNCTION 'FI_PERIOD_CHECK'
    EXPORTING
     i_bukrs               = bukrs
*   I_OPVAR                = ' '
     i_gjahr               = l_gjahr
     i_koart               = koart
     i_konto               = konto
     i_monat               = l_period
*   I_SPERI                =
* IMPORTING
*   E_OPER                 =
   EXCEPTIONS
     error_period          = 1
     error_period_acc      = 2
     OTHERS                = 3.

  if sy-subrc = 0.
    es_abierto = 'X'.
  endif.

endmethod.
method FB03.

  SET PARAMETER ID: 'BLN' FIELD belnr,
                    'BUK' FIELD bukrs,
                    'GJR' FIELD gjahr.
  CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.

endmethod.
method GET_BKPF.

  select single * from bkpf
    into bkpf
   where bukrs = bukrs
     and belnr = belnr
     and gjahr = gjahr.

endmethod.
method GET_DATOS_IVA.
  DATA: taxcom TYPE taxcom.

  taxcom-bukrs = bukrs.
  taxcom-budat = fecha.
  taxcom-waers = waers.
  taxcom-kposn = '999999'.
  taxcom-mwskz = mwskz.
  taxcom-koart = space.
  taxcom-shkzg = 'H'.
  taxcom-wrbtr = WRBTR.
  taxcom-wmwst = 0.
  taxcom-xmwst = 'X'.
  taxcom-wskto = 0.
  taxcom-skfbt = 0.
  taxcom-zbd1p = 0.

  CALL FUNCTION 'CALCULATE_TAX_ITEM'
    EXPORTING
*      dialog     = 'N'
*      inklusive  = space
      i_taxcom   = taxcom
*      pruefen    = space
*     reset      = space
    IMPORTING
*      e_navfw    = e_navfw
      e_taxcom   = taxcom.
*      e_xstvr    = e_xstvr
*      nav_anteil = nav_anteil.

endmethod.
method GET_EBELN_SIMPLE.
  data: l_bkpf type bkpf.

  l_bkpf = get_bkpf( bukrs = bukrs belnr = belnr gjahr = gjahr ).

  if l_bkpf-awtyp = 'RMRP'.
    l_bkpf-gjahr = l_bkpf-awkey+10(4).
    call method zcl_ap_factura_mm=>get_ebeln_simple
      exporting
        belnr = l_bkpf-awkey(10)
        gjahr = l_bkpf-gjahr
      importing
        ebeln = ebeln
        ebelp = ebelp.
  endif.

endmethod.
METHOD get_fecha_pago.
  DATA: l_count TYPE i,
        l_t052 TYPE t052.

  CLEAR fecha_pago.
  SELECT COUNT( * ) FROM  t052
    INTO l_count
   WHERE zterm  = zterm.


  IF l_count = 1.
    SELECT SINGLE * FROM  t052
      INTO l_t052
     WHERE zterm  = zterm.

    IF l_t052-zmona IS INITIAL AND l_t052-ztag2 IS INITIAL.
      IF l_t052-ztag1 = '030'.
        fecha_pago = zcl_fechas=>suma_meses( meses = 1 fecha = fecha ).
      ELSE.
        fecha_pago = fecha + l_t052-ztag1.
      ENDIF.
      EXIT.
    ENDIF.
  ENDIF.

  CALL FUNCTION 'FI_TERMS_OF_PAYMENT_PROPOSE'
    EXPORTING
      i_bldat               = fecha
      i_budat               = fecha
*     I_CPUDT               = SY-DATUM
*     I_ZFBDT               =
      i_zterm               = zterm
*     I_REINDAT             =
*     I_LIFNR               =
*     I_BUKRS               =
    IMPORTING
*     E_ZBD1T               =
*     E_ZBD1P               =
*     E_ZBD2T               =
*     E_ZBD2P               =
*     E_ZBD3T               =
      e_zfbdt               = fecha_pago
*     E_SPLIT               =
*     E_ZSCHF               =
*     E_ZLSCH               =
*     E_T052                =
   EXCEPTIONS
     terms_not_found       = 1
     OTHERS                = 2.

ENDMETHOD.
METHOD get_imp_iva_desde_bruto.
  DATA: l_wrbtr TYPE bseg-wrbtr,
        i_mwdat TYPE TABLE OF rtax1u15.

  l_wrbtr = wrbtr.

  CALL FUNCTION 'CALCULATE_TAX_FROM_GROSSAMOUNT'
    EXPORTING
        i_bukrs                 = bukrs
        i_mwskz                 = mwskz
*   I_TXJCD                 = ' '
        i_waers                 = waers
        i_wrbtr                 = l_wrbtr
*   I_ZBD1P                       = 0
*   I_PRSDT                       =
*   I_PROTOKOLL                   =
*   I_TAXPS                       =
*   I_ACCNT_EXT                   =
*   I_ACCDATA                     =
*   IS_ENHANCEMENT                =
    IMPORTING
*   E_FWNAV                       =
*   E_FWNVV                       =
        e_fwste                 = importe
*   E_FWAST                       =
    TABLES
        t_mwdat                 = i_mwdat
   EXCEPTIONS
     bukrs_not_found               = 1
     country_not_found             = 2
     mwskz_not_defined             = 3
     mwskz_not_valid               = 4
     account_not_found             = 5
     different_discount_base       = 6
     different_tax_base            = 7
     txjcd_not_valid               = 8
     not_found                     = 9
     ktosl_not_found               = 10
     kalsm_not_found               = 11
     parameter_error               = 12
     knumh_not_found               = 13
     kschl_not_found               = 14
     unknown_error                 = 15
     OTHERS                        = 16.

ENDMETHOD.
method GET_IMPORTE_IVA.
  DATA: l_wrbtr TYPE bseg-wrbtr,
        i_mwdat TYPE TABLE OF rtax1u15.

  l_wrbtr = wrbtr.
  CALL FUNCTION 'CALCULATE_TAX_FROM_NET_AMOUNT'
    EXPORTING
      i_bukrs                 = bukrs
      i_mwskz                 = mwskz
*   I_TXJCD                 = ' '
      i_waers                 = waers
      i_wrbtr                 = l_wrbtr
*   I_ZBD1P                 = 0
*   I_PRSDT                 =
*   I_PROTOKOLL             =
*   I_TAXPS                 =
*   I_ACCNT_EXT             =
*   I_ACCDATA               =
    IMPORTING
*   E_FWNAV                 =
*   E_FWNVV                 =
      e_fwste                 = importe
*   E_FWAST                 =
    TABLES
      t_mwdat                 = i_mwdat
   EXCEPTIONS
     bukrs_not_found         = 1
     country_not_found       = 2
     mwskz_not_defined       = 3
     mwskz_not_valid         = 4
     ktosl_not_found         = 5
     kalsm_not_found         = 6
     parameter_error         = 7
     knumh_not_found         = 8
     kschl_not_found         = 9
     unknown_error           = 10
     account_not_found       = 11
     txjcd_not_valid         = 12
     OTHERS                  = 13.

endmethod.
method GET_IMPORTE_POR_CUENTA.
  DATA: i_bsas TYPE TABLE OF bsas,
        l_bsas TYPE bsas,
        r_blart TYPE RANGE OF bsas-blart,
        l_blart LIKE LINE OF r_blart,
        r_xref3 TYPE RANGE OF bsas-xref3,
        l_xref3 LIKE LINE OF r_xref3,
        r_aufnr TYPE RANGE OF bsas-aufnr,
        l_aufnr LIKE LINE OF r_aufnr,
        r_zuonr tYPE RANGE OF bsas-zuonr,
        l_zuonr LIKE LINE OF r_zuonr.

  CLEAR importe.

  IF NOT zuonr IS INITIAL.
    l_zuonr-option = 'EQ'.
    l_zuonr-sign   = 'I'.
    l_zuonr-low    = zuonr.
    APPEND l_zuonr TO r_zuonr.
  ENDIF.

  IF NOT blart IS INITIAL.
    l_blart-option = 'EQ'.
    l_blart-sign   = 'I'.
    l_blart-low    = blart.
    APPEND l_blart TO r_blart.
  ENDIF.

  IF NOT xref3 IS INITIAL.
    l_xref3-option = 'EQ'.
    l_xref3-sign   = 'I'.
    l_xref3-low    = xref3.
    APPEND l_xref3 TO r_xref3.
  ENDIF.

  IF NOT aufnr IS INITIAL.
    l_aufnr-option = 'EQ'.
    l_aufnr-sign   = 'I'.
    l_aufnr-low    = aufnr.
    APPEND l_aufnr TO r_aufnr.
  ENDIF.

  SELECT * FROM bsas
    INTO TABLE i_bsas
   WHERE bukrs = bukrs
     AND hkont = hkont
     AND blart IN r_blart
     AND zuonr in r_zuonr
     and xref3 in r_xref3
     and aufnr in r_aufnr.

  SELECT * FROM bsis
    APPENDING CORRESPONDING FIELDS OF TABLE i_bsas
   WHERE bukrs = bukrs
     AND hkont = hkont
     AND blart IN r_blart
     AND zuonr in r_zuonr
     and xref3 in r_xref3
     and aufnr in r_aufnr.

  LOOP AT i_bsas INTO l_bsas.
    IF l_bsas-shkzg = 'S'.
      ADD l_bsas-dmbtr TO importe.
    ELSE.
      SUBTRACT l_bsas-dmbtr FROM importe.
    ENDIF.
  ENDLOOP.



endmethod.
method GET_IMPORTE_POR_CUENTA_DOC.
  DATA: i_bseg TYPE TABLE OF bseg,
        l_bseg TYPE bseg.

  CLEAR importe.
  IF es_anulado( bukrs = bukrs belnr = belnr  gjahr = gjahr )
     IS INITIAL.
    SELECT * FROM bseg
      INTO TABLE i_bseg
     WHERE bukrs = bukrs
       AND belnr = belnr
       AND gjahr = gjahr
       AND koart = koart
       AND hkont = hkont.

    LOOP AT i_bseg INTO l_bseg.
      IF l_bseg-shkzg = 'S'.
        ADD l_bseg-dmbtr TO importe.
      ELSE.
        SUBTRACT l_bseg-dmbtr FROM importe.
      ENDIF.
    ENDLOOP.

  ENDIF.

endmethod.
METHOD get_nombre_cuenta.

  CLEAR txt20.
  IF NOT saknr IS INITIAL.
    SELECT SINGLE txt20 FROM  skat
      INTO txt20
     WHERE spras  = spras
       AND ktopl  = ktopl
       AND saknr  = saknr.
  ENDIF.

ENDMETHOD.
METHOD get_tipo_cambio.

  CALL FUNCTION 'READ_EXCHANGE_RATE'
    EXPORTING
      date             = fecha
      foreign_currency = mon_ext
      local_currency   = mon_local
      type_of_rate     = tipo_cambio
    IMPORTING
      exchange_rate    = tipo
    EXCEPTIONS
      error_message    = 1.

ENDMETHOD.
method GET_ULT_DOC_POR_CUENTA.
  DATA: i_bsas TYPE TABLE OF bsas,
        l_bsas TYPE bsas,
        r_blart TYPE RANGE OF bsas-blart,
        l_blart LIKE LINE OF r_blart,
        r_xref3 TYPE RANGE OF bsas-xref3,
        l_xref3 LIKE LINE OF r_xref3,
        r_aufnr TYPE RANGE OF bsas-aufnr,
        l_aufnr LIKE LINE OF r_aufnr,
        r_zuonr TYPE RANGE OF bsas-zuonr,
        l_zuonr LIKE LINE OF r_zuonr.

  IF NOT zuonr IS INITIAL.
    l_zuonr-option = 'EQ'.
    l_zuonr-sign   = 'I'.
    l_zuonr-low    = zuonr.
    APPEND l_zuonr TO r_zuonr.
  ENDIF.

  IF NOT blart IS INITIAL.
    l_blart-option = 'EQ'.
    l_blart-sign   = 'I'.
    l_blart-low    = blart.
    APPEND l_blart TO r_blart.
  ENDIF.

  IF NOT xref3 IS INITIAL.
    l_xref3-option = 'EQ'.
    l_xref3-sign   = 'I'.
    l_xref3-low    = xref3.
    APPEND l_xref3 TO r_xref3.
  ENDIF.

  IF NOT aufnr IS INITIAL.
    l_aufnr-option = 'EQ'.
    l_aufnr-sign   = 'I'.
    l_aufnr-low    = aufnr.
    APPEND l_aufnr TO r_aufnr.
  ENDIF.

  SELECT * FROM bsas
    INTO TABLE i_bsas
   WHERE bukrs = bukrs
     AND hkont = hkont
     AND blart IN r_blart
     AND zuonr IN r_zuonr
     AND xref3 IN r_xref3
     AND aufnr IN r_aufnr.

  SELECT * FROM bsis
    APPENDING CORRESPONDING FIELDS OF TABLE i_bsas
   WHERE bukrs = bukrs
     AND hkont = hkont
     AND blart IN r_blart
     AND zuonr IN r_zuonr
     AND xref3 IN r_xref3
     AND aufnr IN r_aufnr.

  SORT i_bsas BY gjahr DESCENDING belnr DESCENDING.

  CLEAR: belnr, gjahr.
  LOOP AT i_bsas INTO l_bsas.
    IF es_anulado( bukrs = l_bsas-bukrs
                   belnr = l_bsas-belnr
                   gjahr = l_bsas-gjahr ) = ''.
      belnr = l_bsas-belnr.
      gjahr = l_bsas-gjahr.
      EXIT.
    ENDIF.
  ENDLOOP.



endmethod.
method GET_URL_POR_TITULO_ST.
  data l_clave type srgbtbrel-instid_a.

  if not belnr is initial.
    concatenate bukrs belnr gjahr into l_clave.
    url = zcl_gos=>get_url_por_titulo_st( tipo   = 'BKPF'
                                          clave  = l_clave
                                          titulo = titulo ).
  endif.

endmethod.
METHOD get_utilizacion_pago.
  DATA: i_bsas TYPE TABLE OF bsas,
        i_bsak TYPE TABLE OF bsak,
        l_bseg TYPE bseg,
        r_blart type range of blart,
        lr_blart like line of r_blart.

  FIELD-SYMBOLS: <bsas> TYPE bsas,
                 <bsak> TYPE bsak.

  if not blart is initial.
    clear lr_blart.
    lr_blart-option = 'EQ'.
    lr_blart-sign   = 'I'.
    lr_blart-low    = blart.
    append lr_blart to r_blart.
  endif.

  CLEAR i_bseg.
  IF cuentas = 'X'.
    SELECT * FROM bsas
      INTO TABLE i_bsas
     WHERE bukrs = bukrs
       AND augdt = augdt
       AND augbl = augbl
       and blart in r_blart.
    LOOP AT i_bsas ASSIGNING <bsas>.
      MOVE-CORRESPONDING <bsas> TO l_bseg.
      APPEND l_bseg TO i_bseg.
    ENDLOOP.
  ENDIF.

  IF proveedor = 'X'.
    SELECT * FROM bsak
      INTO CORRESPONDING FIELDS OF TABLE i_bsak
     WHERE bukrs = bukrs
       AND augdt = augdt
       AND augbl = augbl
       and blart in r_blart.
    LOOP AT i_bsak ASSIGNING <bsak>.
      MOVE-CORRESPONDING <bsak> TO l_bseg.
      APPEND l_bseg TO i_bseg.
    ENDLOOP.
  ENDIF.

  IF cliente = 'X'.
    SELECT * FROM bsad
      INTO CORRESPONDING FIELDS OF TABLE i_bseg
     WHERE bukrs = bukrs
       AND augdt = augdt
       AND augbl = augbl
       and blart in r_blart.
  ENDIF.


ENDMETHOD.
method INSERTAR_URL_GOS_ST.

  data l_clave type srgbtbrel-instid_a.

  concatenate bukrs belnr gjahr into l_clave.
  error = zcl_gos=>insertar_url_gos_st( tipo   = 'BKPF'
                                        clave  = l_clave
                                        titulo = titulo
                                        url    = url ).

  if posiciones = 'X'.
    data: i_bseg type table of bseg,
          l_bseg type bseg.
    select * from bseg
      into table i_bseg
     where bukrs = bukrs
       and belnr = belnr
       and gjahr = gjahr.
    loop at i_bseg into l_bseg.
      concatenate bukrs belnr gjahr l_bseg-buzei into l_clave.
      error = zcl_gos=>insertar_url_gos_st( tipo   = 'BSEG'
                                            clave  = l_clave
                                            titulo = titulo
                                            url    = url ).
    endloop.
  endif.

endmethod.
