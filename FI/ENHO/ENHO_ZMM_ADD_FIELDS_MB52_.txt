<?xml version="1.0" encoding="utf-8"?> <ENHO enhancement_id="ZMM_ADD_FIELDS_MB52" shorttext="Campos adicionales MB52" tooltype_id="HOOK_IMPL" orig_object="R3TR-RM07MLBS-PROG-RM07MLBS">  <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">   <as
x:values>    <IMPLS>     <ENH_HOOK_IMPL>      <SPOTNAME>ES_RM07MLBS</SPOTNAME>      <PROGRAMNAME>RM07MLBS</PROGRAMNAME>      <EXTID>1</EXTID>      <ID>1</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>D</ENHMODE>      <FULL_NAME>\PR:RM07MLBS\EX:RM07ML
BS_11\EI</FULL_NAME>      <SOURCE>       <item>* ini 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>macro_fill_fieldcat &apos;Z_RECH_PROD&apos;  &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_field
cat &apos;Z_DEVOLUCION&apos;  &apos;ZSMM0002&apos;   c_out.</item>       <item>* fin 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>* ini 08.05.2019 - cvivo - 54261</item>       <item>macro_fill_fieldcat &apos;
Z_LWEDT&apos;  &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;Z_ANTIG&apos;  &apos;ZSMM0002&apos;   c_out.</item>       <item>* fin 08.05.2019 - cvivo - 54261</item>       <item>macro_fill_fieldcat &apos;MATNR&apos;  &apos;MARA
&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZLIFNR&apos;  &apos;ZSMM0002&apos;   c_out. &quot; cvivo - 56683</item>       <item>macro_fill_fieldcat &apos;ZZLICHA&apos;  &apos;ZSMM0002&apos;   c_out. &quot; cvivo - 66422</item>       <ite
m/>       <item>&quot;JCB SD - 74025 - Añadir campos Z transacción MB52</item>       <item>macro_fill_fieldcat &apos;ZZVBELN&apos;         &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZPOSNR&apos;         &apos;ZSMM0002&apos
;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZAUFNR&apos;         &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZKUNNR_CLIENTE&apos; &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZNAM
E1_CLIENTE&apos; &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZKDMAT&apos;         &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZPOSTX&apos;         &apos;ZSMM0002&apos;   c_out.</item>       <
item>macro_fill_fieldcat &apos;ZZKUNNR_DEST&apos;    &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZNAME1_DEST&apos;    &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZLIFNR_COMER&apos;   &apos;ZS
MM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZNAME1_COMER&apos;   &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZNUM_PALETS&apos;    &apos;ZSMM0002&apos;   c_out.</item>       <item>&quot;FIN JCB SD - 7
4025 - Añadir campos Z transacción MB52</item>       <item/>       <item>macro_fill_fieldcat &apos;ZZLABST_M2&apos;    &apos;ZSMM0002&apos;   c_out.</item>       <item>macro_fill_fieldcat &apos;ZZM2&apos;    &apos;ZSMM0002&apos;   c_out.</item>       <ite
m/>      </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>     <ENH_HOOK_IMPL>      <SPOTNAME>ES_RM07MLBS</SPOTNAME>      <PROGRAMNAME>RM07MLBS</PROGRAMNAME>      <EXTID>2</EXTID>      <ID>2</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>S</ENH
MODE>      <FULL_NAME>\PR:RM07MLBS\EX:EHP604_RM07MLBS_01\EI</FULL_NAME>      <SOURCE>       <item>* ini 08.05.2019 - cvivo - 54261</item>       <item>DATA: ersda TYPE ersda.</item>       <item>* fin 08.05.2019 - cvivo - 54261</item>      </SOURCE>      <P
ARENT_FULL_NAME/>     </ENH_HOOK_IMPL>     <ENH_HOOK_IMPL>      <SPOTNAME>ES_RM07MLBS</SPOTNAME>      <PROGRAMNAME>RM07MLBS</PROGRAMNAME>      <EXTID>3</EXTID>      <ID>3</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>D</ENHMODE>      <FULL_NAME>\PR:
RM07MLBS\EX:RM07MLBS\EI</FULL_NAME>      <SOURCE>       <item>IF cl_ops_switch_check=&gt;sfsw_segmentation( ) EQ abap_on.</item>       <item>SELECT mchb~matnr mchb~werks lgort mchb~charg mcha~ersda &quot; 08.05.2019 - cvivo - 54261</item>       <item>SUM(
 clabs ) AS labst SUM( cumlm ) AS umlme SUM( cinsm ) AS insme</item>       <item>SUM( ceinm ) AS einme SUM( cspem ) AS speme SUM( cretm ) AS retme</item>       <item>mchb~lvorm mcha~bwtar mchb~sgt_scat</item>       <item>CONNECTION (dbcon)</item>       <i
tem>APPENDING CORRESPONDING FIELDS OF TABLE collector_mchb</item>       <item>FROM mchb INNER JOIN marc</item>       <item>ON mchb~matnr = marc~matnr AND</item>       <item>mchb~werks = marc~werks</item>       <item>INNER JOIN mara</item>       <item>ON m
ara~matnr = mchb~matnr</item>       <item>LEFT JOIN mcha</item>       <item>ON mcha~matnr = mchb~matnr AND</item>       <item>mcha~werks = mchb~werks AND</item>       <item>mcha~charg = mchb~charg</item>       <item>WHERE mchb~matnr IN matnr</item>
<item>AND mchb~werks IN werks</item>       <item>AND lgort IN lgort</item>       <item>AND mchb~charg IN charg</item>       <item>AND xchar = &apos;X&apos;</item>       <item>AND ( clabs IN r_stopt</item>       <item>OR   cumlm IN r_stopt</item>       <it
em>OR   cinsm IN r_stopt</item>       <item>OR   ceinm IN r_stopt</item>       <item>OR   cspem IN r_stopt</item>       <item>OR   cretm IN r_stopt )</item>       <item>AND marc~ekgrp IN ekgrup</item>       <item>AND mara~matkl IN matkla</item>       <ite
m>AND mara~mtart IN matart</item>       <item>AND (lv_dynwhere)                                                  &quot;1917052</item>       <item>GROUP BY mchb~matnr mchb~werks mchb~lgort mchb~charg mchb~sgt_scat</item>       <item>mchb~lvorm mcha~bwtar m
cha~ersda.</item>       <item>ELSE.</item>       <item>SELECT mchb~matnr mchb~werks lgort mchb~charg mcha~ersda &quot; 08.05.2019 - cvivo - 54261</item>       <item>SUM( clabs ) AS labst SUM( cumlm ) AS umlme SUM( cinsm ) AS insme</item>       <item>SUM(
ceinm ) AS einme SUM( cspem ) AS speme SUM( cretm ) AS retme</item>       <item>mchb~lvorm mcha~bwtar</item>       <item>CONNECTION (dbcon)</item>       <item>APPENDING CORRESPONDING FIELDS OF TABLE collector_mchb</item>       <item>FROM mchb INNER JOIN m
arc</item>       <item>ON mchb~matnr = marc~matnr AND</item>       <item>mchb~werks = marc~werks</item>       <item>INNER JOIN mara</item>       <item>ON mara~matnr = mchb~matnr</item>       <item>LEFT JOIN mcha</item>       <item>ON mcha~matnr = mchb~mat
nr AND</item>       <item>mcha~werks = mchb~werks AND</item>       <item>mcha~charg = mchb~charg</item>       <item>WHERE mchb~matnr IN matnr</item>       <item>AND mchb~werks IN werks</item>       <item>AND lgort IN lgort</item>       <item>AND mchb~char
g IN charg</item>       <item>AND xchar = &apos;X&apos;</item>       <item>AND ( clabs IN r_stopt</item>       <item>OR   cumlm IN r_stopt</item>       <item>OR   cinsm IN r_stopt</item>       <item>OR   ceinm IN r_stopt</item>       <item>OR   cspem IN r
_stopt</item>       <item>OR   cretm IN r_stopt )</item>       <item>AND marc~ekgrp IN ekgrup</item>       <item>AND mara~matkl IN matkla</item>       <item>AND mara~mtart IN matart</item>       <item>AND (lv_dynwhere)
             &quot;1917052</item>       <item>GROUP BY mchb~matnr mchb~werks mchb~lgort mchb~charg mchb~lvorm mcha~bwtar mcha~ersda.</item>       <item>ENDIF.</item>      </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>     <ENH_HOOK_IMPL>      <SP
OTNAME>ES_RM07MLBS</SPOTNAME>      <PROGRAMNAME>RM07MLBS</PROGRAMNAME>      <EXTID>4</EXTID>      <ID>4</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>D</ENHMODE>      <FULL_NAME>\PR:RM07MLBS\EX:RM07MLBS_17\EI</FULL_NAME>      <SOURCE>       <item>**
**** cvivo - 28.08.2019 - Migramos arriba porque si no cuando se lanza sin valores no aparece</item>       <item>*  DATA: l_atwtb   TYPE atwtb,</item>       <item>*        lt_tvarvc TYPE TABLE OF tvarvc WITH HEADER LINE,</item>       <item>*        zzsubr
c   TYPE sysubrc.</item>       <item>** ini 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>*  zzsubrc = sy-subrc. &quot; 56601 - Copiamos para luego enviar al estándar el mismo valor</item>       <item>*</item>
       <item>*  SELECT * FROM tvarvc INTO TABLE lt_tvarvc</item>       <item>*    WHERE name EQ &apos;ZMM_FIELDS_MB52&apos;.</item>       <item>** fin 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>**   selecci
onar los valores de los campos añadidos</item>       <item>*    SELECT SINGLE zzcalidad zzgramaje zzancho zzlargo</item>       <item>*      INTO CORRESPONDING FIELDS OF bestand</item>       <item>*      FROM mara</item>       <item>*     WHERE matnr EQ be
stand-matnr.</item>       <item>*</item>       <item>*    SELECT SINGLE bezei</item>       <item>*      INTO bestand-bezei</item>       <item>*      FROM ztmm0002t</item>       <item>*     WHERE zzcalidad = bestand-zzcalidad</item>       <item>*      AND
spras = sy-langu.</item>       <item>*</item>       <item>*    SELECT SINGLE wgbez wgbez60</item>       <item>*      INTO (bestand-wgbez, bestand-wgbez60)</item>       <item>*      FROM t023t</item>       <item>*     WHERE matkl = bestand-matkl</item>
   <item>*      AND spras = sy-langu.</item>       <item>*</item>       <item>*    CLEAR l_atwtb.</item>       <item>*    CALL FUNCTION &apos;Z_ZMM008_MATERIAL_COLOR&apos;</item>       <item>*      EXPORTING</item>       <item>*        i_matnr       = bes
tand-matnr</item>       <item>*      IMPORTING</item>       <item>**       e_atwrt       =</item>       <item>*        e_atwtb       = l_atwtb.</item>       <item>*</item>       <item>*    IF l_atwtb IS NOT INITIAL.</item>       <item>*      bestand-zzcol
or = l_atwtb.</item>       <item>*    ENDIF.</item>       <item>*</item>       <item>** ini 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>*  DATA: lv_object            TYPE objnum,</item>       <item>*
lv_classnum          TYPE bapi1003_key-classnum,</item>       <item>*        lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num,</item>       <item>*        lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr,</item>       <item>*        lt_alloc_
values_char TYPE tt_bapi1003_alloc_values_char,</item>       <item>*        ls_alloc_values_char TYPE bapi1003_alloc_values_char,</item>       <item>*        lt_return            TYPE bapiret2_tab,</item>       <item>*        lv_value             TYPE atw
tb.</item>       <item>*</item>       <item>*    READ TABLE lt_tvarvc WITH KEY low = bestand-werks TRANSPORTING NO FIELDS.</item>       <item>*</item>       <item>*    IF sy-subrc EQ 0 AND bestand-charg IS NOT INITIAL.</item>       <item>** Se descarta es
ta vía por rendimiento</item>       <item>**</item>       <item>**      CLEAR: lv_object, lv_classnum.</item>       <item>**      REFRESH: lt_alloc_values_num, lt_alloc_values_char, lt_alloc_values_curr, lt_return.</item>       <item>**</item>       <item
>**      CONCATENATE bestand-matnr bestand-charg INTO lv_object.</item>       <item>**</item>       <item>**      IF bestand-mtart = &apos;ZPMP&apos;.</item>       <item>**        lv_classnum = &apos;Z_ZPMP&apos;.</item>       <item>**      ELSEIF bestand
-mtart = &apos;ZPLP&apos;.</item>       <item>**        lv_classnum = &apos;Z_ZPLP&apos;.</item>       <item>**      ENDIF.</item>       <item>**</item>       <item>**      CALL FUNCTION &apos;BAPI_OBJCL_GETDETAIL&apos;</item>       <item>**        EXPORT
ING</item>       <item>**          objectkey       = lv_object</item>       <item>**          objecttable     = &apos;MCH1&apos;</item>       <item>**          classnum        = lv_classnum</item>       <item>**          classtype       = &apos;023&apos;<
/item>       <item>**        TABLES</item>       <item>**          allocvaluesnum  = lt_alloc_values_num</item>       <item>**          allocvalueschar = lt_alloc_values_char</item>       <item>**          allocvaluescurr = lt_alloc_values_curr</item>
   <item>**          return          = lt_return.</item>       <item>**</item>       <item>**      CLEAR ls_alloc_values_char.</item>       <item>**      READ TABLE lt_alloc_values_char INTO ls_alloc_values_char</item>       <item>**             WITH KEY
charact = &apos;Z_RECH_PROD&apos;.</item>       <item>**      IF sy-subrc EQ 0.</item>       <item>**        bestand-z_rech_prod = ls_alloc_values_char-value_char.</item>       <item>**      ENDIF.</item>       <item>**</item>       <item>**      CLEAR ls
_alloc_values_char.</item>       <item>**      READ TABLE lt_alloc_values_char INTO ls_alloc_values_char</item>       <item>**             WITH KEY charact = &apos;Z_DEVOLUCION&apos;.</item>       <item>**      IF sy-subrc EQ 0.</item>       <item>**
   bestand-z_devolucion = ls_alloc_values_char-value_char.</item>       <item>**      ENDIF.</item>       <item>*</item>       <item>** Se opta por consulta directa a tabla por rendimiento</item>       <item>*</item>       <item>*      CALL FUNCTION &apos
;Z_ZMM008_DEVOLUCION_LOTE&apos;</item>       <item>*        EXPORTING</item>       <item>*          i_matnr       = bestand-matnr</item>       <item>*          i_charg       = bestand-charg</item>       <item>*        IMPORTING</item>       <item>*
   e_atwtb       = lv_value.</item>       <item>*</item>       <item>*      WRITE lv_value TO bestand-z_devolucion.</item>       <item>*      CLEAR lv_value.</item>       <item>*</item>       <item>*      CALL FUNCTION &apos;Z_ZMM008_RECH_PROD_LOTE&apos;<
/item>       <item>*        EXPORTING</item>       <item>*          i_matnr       = bestand-matnr</item>       <item>*          i_charg       = bestand-charg</item>       <item>*        IMPORTING</item>       <item>*          e_atwtb       = lv_value.</it
em>       <item>*</item>       <item>*      WRITE lv_value TO bestand-z_rech_prod.</item>       <item>*      CLEAR lv_value.</item>       <item>*    ENDIF.</item>       <item>** fin 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote<
/item>       <item>** ini 08.05.2019 - cvivo - 54261</item>       <item>*DATA: zzE_TDIFF LIKE TVRO-FAHZTD.</item>       <item>*CLEAR: bestand-z_antig, zzE_TDIFF.</item>       <item>*</item>       <item>*    bestand-z_lwedt = bestand-ersda.</item>       <i
tem>*</item>       <item>*   CALL FUNCTION &apos;SD_CALC_DURATION_FROM_DATETIME&apos;</item>       <item>*     EXPORTING</item>       <item>*      i_date1 = bestand-z_lwedt &quot; ULTIMA EM</item>       <item>*      i_time1 = SY-UZEIT          &quot; HORA
 ACTUAL</item>       <item>*      i_Date2 = SY-DATUM          &quot; FECHA ACTUAL</item>       <item>*      i_time2 = SY-UZEIT          &quot; HORA ACTUAL</item>       <item>*    IMPORTING</item>       <item>*      E_TDIFF                = zzE_TDIFF</item
>       <item>**      E_DATE2_EARLY          =</item>       <item>*    EXCEPTIONS</item>       <item>*      INVALID_DATETIME       = 1</item>       <item>*      OTHERS                 = 2</item>       <item>*.</item>       <item>*   IF SY-SUBRC = 0.</item
>       <item>*     bestand-z_antig = ( zzE_TDIFF / 240000 ).</item>       <item>*   ENDIF.</item>       <item>** fin 08.05.2019 - cvivo - 54261</item>       <item>*   sy-subrc = zzsubrc. &quot; 56601 - Volcamos el valor original para el estándar</item>
    </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>     <ENH_HOOK_IMPL>      <SPOTNAME>ES_RM07MLBS</SPOTNAME>      <PROGRAMNAME>RM07MLBS</PROGRAMNAME>      <EXTID>5</EXTID>      <ID>5</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>D</ENHMODE>
      <FULL_NAME>\PR:RM07MLBS\EX:RM07MLBS_16\EI</FULL_NAME>      <SOURCE>       <item>* cvivo - 28.08.2019 - Migramos aquí porque si no cuando se lanza sin valores no aparece</item>       <item/>       <item>DATA: l_atwtb   TYPE atwtb,</item>       <item>
lt_tvarvc TYPE TABLE OF tvarvc WITH HEADER LINE.</item>       <item>* ini 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item/>       <item>SELECT * FROM tvarvc INTO TABLE lt_tvarvc</item>       <item>WHERE name EQ
&apos;ZMM_FIELDS_MB52&apos;.</item>       <item>* fin 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>*   seleccionar los valores de los campos añadidos</item>       <item>SELECT SINGLE zzcalidad zzgramaje zzanc
ho zzlargo</item>       <item>INTO CORRESPONDING FIELDS OF bestand</item>       <item>FROM mara</item>       <item>WHERE matnr EQ bestand-matnr.</item>       <item/>       <item>SELECT SINGLE bezei</item>       <item>INTO bestand-bezei</item>       <item>
FROM ztmm0002t</item>       <item>WHERE zzcalidad = bestand-zzcalidad</item>       <item>AND spras = sy-langu.</item>       <item/>       <item>SELECT SINGLE wgbez wgbez60</item>       <item>INTO (bestand-wgbez, bestand-wgbez60)</item>       <item>FROM t0
23t</item>       <item>WHERE matkl = bestand-matkl</item>       <item>AND spras = sy-langu.</item>       <item/>       <item>CLEAR l_atwtb.</item>       <item>CALL FUNCTION &apos;Z_ZMM008_MATERIAL_COLOR&apos;</item>       <item>EXPORTING</item>       <ite
m>i_matnr       = bestand-matnr</item>       <item>IMPORTING</item>       <item>*       e_atwrt       =</item>       <item>e_atwtb       = l_atwtb.</item>       <item/>       <item>IF l_atwtb IS NOT INITIAL.</item>       <item>bestand-zzcolor = l_atwtb.</
item>       <item>ENDIF.</item>       <item/>       <item>* ini 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>DATA: lv_object            TYPE objnum,</item>       <item>lv_classnum          TYPE bapi1003_key-c
lassnum,</item>       <item>lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num,</item>       <item>lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr,</item>       <item>lt_alloc_values_char TYPE tt_bapi1003_alloc_values_char,</item>       <item>
ls_alloc_values_char TYPE bapi1003_alloc_values_char,</item>       <item>lt_return            TYPE bapiret2_tab,</item>       <item>lv_value             TYPE atwtb.</item>       <item/>       <item>READ TABLE lt_tvarvc WITH KEY low = bestand-werks TRANSPO
RTING NO FIELDS.</item>       <item/>       <item>IF sy-subrc EQ 0 AND bestand-charg IS NOT INITIAL.</item>       <item>* Se descarta esta vía por rendimiento</item>       <item>*</item>       <item>*      CLEAR: lv_object, lv_classnum.</item>       <item
>*      REFRESH: lt_alloc_values_num, lt_alloc_values_char, lt_alloc_values_curr, lt_return.</item>       <item>*</item>       <item>*      CONCATENATE bestand-matnr bestand-charg INTO lv_object.</item>       <item>*</item>       <item>*      IF bestand-m
tart = &apos;ZPMP&apos;.</item>       <item>*        lv_classnum = &apos;Z_ZPMP&apos;.</item>       <item>*      ELSEIF bestand-mtart = &apos;ZPLP&apos;.</item>       <item>*        lv_classnum = &apos;Z_ZPLP&apos;.</item>       <item>*      ENDIF.</item>
       <item>*</item>       <item>*      CALL FUNCTION &apos;BAPI_OBJCL_GETDETAIL&apos;</item>       <item>*        EXPORTING</item>       <item>*          objectkey       = lv_object</item>       <item>*          objecttable     = &apos;MCH1&apos;</item>
       <item>*          classnum        = lv_classnum</item>       <item>*          classtype       = &apos;023&apos;</item>       <item>*        TABLES</item>       <item>*          allocvaluesnum  = lt_alloc_values_num</item>       <item>*          allo
cvalueschar = lt_alloc_values_char</item>       <item>*          allocvaluescurr = lt_alloc_values_curr</item>       <item>*          return          = lt_return.</item>       <item>*</item>       <item>*      CLEAR ls_alloc_values_char.</item>       <ite
m>*      READ TABLE lt_alloc_values_char INTO ls_alloc_values_char</item>       <item>*             WITH KEY charact = &apos;Z_RECH_PROD&apos;.</item>       <item>*      IF sy-subrc EQ 0.</item>       <item>*        bestand-z_rech_prod = ls_alloc_values_c
har-value_char.</item>       <item>*      ENDIF.</item>       <item>*</item>       <item>*      CLEAR ls_alloc_values_char.</item>       <item>*      READ TABLE lt_alloc_values_char INTO ls_alloc_values_char</item>       <item>*             WITH KEY chara
ct = &apos;Z_DEVOLUCION&apos;.</item>       <item>*      IF sy-subrc EQ 0.</item>       <item>*        bestand-z_devolucion = ls_alloc_values_char-value_char.</item>       <item>*      ENDIF.</item>       <item/>       <item>* Se opta por consulta directa
 a tabla por rendimiento</item>       <item/>       <item>CALL FUNCTION &apos;Z_ZMM008_DEVOLUCION_LOTE&apos;</item>       <item>EXPORTING</item>       <item>i_matnr       = bestand-matnr</item>       <item>i_charg       = bestand-charg</item>       <item>
IMPORTING</item>       <item>e_atwtb       = lv_value.</item>       <item/>       <item>WRITE lv_value TO bestand-z_devolucion.</item>       <item>CLEAR lv_value.</item>       <item/>       <item>CALL FUNCTION &apos;Z_ZMM008_RECH_PROD_LOTE&apos;</item>
    <item>EXPORTING</item>       <item>i_matnr       = bestand-matnr</item>       <item>i_charg       = bestand-charg</item>       <item>IMPORTING</item>       <item>e_atwtb       = lv_value.</item>       <item/>       <item>WRITE lv_value TO bestand-z_re
ch_prod.</item>       <item>CLEAR lv_value.</item>       <item>ENDIF.</item>       <item>* fin 26.01.2018 - cvivo - 46105 Campos adicionales MB52, características lote</item>       <item>* ini 08.05.2019 - cvivo - 54261</item>       <item>DATA: zzE_TDIFF
LIKE TVRO-FAHZTD.</item>       <item>CLEAR: bestand-z_antig, zzE_TDIFF.</item>       <item/>       <item/>       <item>*--&gt; FCC 78976 - Error información antigüedad (0).</item>       <item/>       <item>IF ( bestand-ersda IS NOT INITIAL AND bestand-ers
da NE &apos;00000000&apos; ).</item>       <item>bestand-z_lwedt = bestand-ersda.</item>       <item>ELSE.</item>       <item/>       <item>SELECT SINGLE MAX( budat_mkpf )</item>       <item>FROM mseg</item>       <item>INTO bestand-z_lwedt</item>       <
item>WHERE charg EQ bestand-charg</item>       <item>AND bwart EQ &apos;101&apos;.</item>       <item/>       <item>ENDIF.</item>       <item/>       <item>*&lt;-- FCC 78976 - Error información antigüedad (0).</item>       <item/>       <item>CALL FUNCTIO
N &apos;SD_CALC_DURATION_FROM_DATETIME&apos;</item>       <item>EXPORTING</item>       <item>i_date1 = bestand-z_lwedt &quot; ULTIMA EM</item>       <item>i_time1 = SY-UZEIT          &quot; HORA ACTUAL</item>       <item>i_Date2 = SY-DATUM          &quot;
 FECHA ACTUAL</item>       <item>i_time2 = SY-UZEIT          &quot; HORA ACTUAL</item>       <item>IMPORTING</item>       <item>E_TDIFF                = zzE_TDIFF</item>       <item>*      E_DATE2_EARLY          =</item>       <item>EXCEPTIONS</item>
  <item>INVALID_DATETIME       = 1</item>       <item>OTHERS                 = 2</item>       <item>.</item>       <item>IF SY-SUBRC = 0.</item>       <item>bestand-z_antig = ( zzE_TDIFF / 240000 ).</item>       <item>ENDIF.</item>       <item>* fin 08.05
.2019 - cvivo - 54261</item>       <item/>       <item>* ini 27.08.2019 - cvivo - 56683 Incluir proveedor en ZRMM0012</item>       <item>if bestand-zzlifnr is INITIAL and bestand-charg is not INITIAL.</item>       <item>SELECT SINGLE lifnr licha FROM mch1
</item>       <item>INTO ( bestand-zzlifnr, bestand-zzlicha )</item>       <item>WHERE matnr EQ bestand-matnr</item>       <item>AND charg EQ bestand-charg.</item>       <item>endif.</item>       <item>* fin 27.08.2019 - cvivo - 56683</item>       <item/>
      </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>    </IMPLS>   </asx:values>  </asx:abap> </ENHO>
