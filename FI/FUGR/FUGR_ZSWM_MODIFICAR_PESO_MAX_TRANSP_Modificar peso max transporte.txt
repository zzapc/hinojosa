FUNCTION ZSWM_MODIFICAR_PESO_MAX_TRANSP.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(VTTK_IN) TYPE  VTTKVB
*"  CHANGING
*"     REFERENCE(VTTK_OUT) TYPE  VTTKVB
*"     REFERENCE(CHANGE) TYPE  FLAG
*"----------------------------------------------------------------------
  data: tT_set type GENFM_T_EXTBR_GROUPS,
        rT_set type SETNAMENEW,
        rr_lgn type SHP_LGNUM_RANGE_T,
        ALLOWED_TWGT_DFL  TYPE  FLAG,
        ALLOWED_TWGT_VLE  TYPE  ALLOWED_TWGT.


  check vttk_in-abfer eq '1'
     or vttk_in-abfer eq '3'. " transporte de salida
* hay entregas anexadas al transporte o existe el transporte???
  select * into TABLE @data(tt_vttp) from vttp where tknum eq @vttk_in-tknum.
  check sy-subrc eq 0.

  clear: tT_set[], rt_set, rr_lgn[], ALLOWED_TWGT_VLE, ALLOWED_TWGT_DFL.
  rt_set = 'ZSWM_PLANCHA_HER_UAS_EE'. append rT_set to TT_SET.
  rt_set = 'ZSWM_ALLOWED_TWGT_DFL'.   append rt_set to TT_SET.
  CALL FUNCTION 'ZSWM_SET_GET_VALUES'
    EXPORTING
*     SHORTNAME                = 'ZSWM_PLANCHA'
      TT_SHORTNAME             = TT_SET
*     NO_AUTHORITY_CHECK       = 'X'
      LANGU                    = 'S'
*     TT_FIELDNAME             =
    IMPORTING
      RR_LGNUM                 = rr_lgn
      ALLOWED_TWGT_DFL         = ALLOWED_TWGT_DFL
      ALLOWED_TWGT_VLE         = ALLOWED_TWGT_VLE
            .
  check rr_lgn[]         is not INITIAL
    and ALLOWED_TWGT_DFL eq abap_true.
  loop at tt_vttp into data(rt_vttp).
      select SINGLE lgnum into @DATA(lgnum) from likp where vbeln eq @rt_vttp-vbeln.
      check sy-subrc eq 0
        and lgnum is not INITIAL
        and lgnum in rr_lgn.
      move ALLOWED_TWGT_VLE to VTTK_OUT-ALLOWED_TWGT.
      move abap_true        to change.
      exit.
  endloop.
ENDFUNCTION.
