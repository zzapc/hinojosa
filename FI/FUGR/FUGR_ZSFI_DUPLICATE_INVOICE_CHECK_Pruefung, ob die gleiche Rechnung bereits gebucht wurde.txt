FUNCTION ZSFI_DUPLICATE_INVOICE_CHECK.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_BUKRS) LIKE  BKPF-BUKRS
*"     VALUE(I_LIFNR) LIKE  BSEG-LIFNR
*"     VALUE(I_WAERS) LIKE  BKPF-WAERS
*"     VALUE(I_BLDAT) LIKE  BKPF-BLDAT
*"     VALUE(I_XBLNR) LIKE  BKPF-XBLNR
*"     VALUE(I_WRBTR) LIKE  BSEG-WRBTR OPTIONAL
*"     VALUE(I_BELNR) LIKE  BSEG-BELNR OPTIONAL
*"     VALUE(I_GJAHR) LIKE  BSEG-GJAHR OPTIONAL
*"     VALUE(I_BUZEI) LIKE  BSEG-BUZEI OPTIONAL
*"     VALUE(I_KOART) LIKE  BSEG-KOART
*"     VALUE(I_REPRF) LIKE  LFB1-REPRF
*"     VALUE(I_SHKZG) LIKE  BSEG-SHKZG
*"     VALUE(I_XUMSW) LIKE  BSEG-XUMSW
*"     VALUE(I_BSTAT) LIKE  BKPF-BSTAT
*"     VALUE(I_BLART) TYPE  BLART OPTIONAL
*"  EXPORTING
*"     REFERENCE(RETURN) TYPE  BAPIRET2_T
*"  EXCEPTIONS
*"      MISSING_DATA
*"----------------------------------------------------------------------
DATA: not_shkzg LIKE bseg-shkzg.
  DATA: xnost LIKE boole-boole.
  DATA: l_return TYPE bapiret2.
  DATA: lt_bsip TYPE TABLE OF bsip.

  CHECK: i_koart EQ 'K',
         i_reprf EQ 'X',
         i_xumsw EQ 'X',
         i_bstat EQ space.

  IF i_bukrs IS INITIAL
  OR i_lifnr IS INITIAL
  OR i_waers IS INITIAL
  OR i_bldat IS INITIAL.
    MESSAGE e603 WITH 'FI_DUPLICATE_INVOICE_CHECK'
                 RAISING missing_data.
  ENDIF.

  CHECK oldb-bukrs NE i_bukrs
  OR    oldb-lifnr NE i_lifnr
  OR    oldb-waers NE i_waers
  OR    oldb-wrbtr NE i_wrbtr
  OR    oldb-xblnr NE i_xblnr
  OR    oldb-bldat NE i_bldat
  OR    oldb-shkzg NE i_shkzg.
  CHECK sy-tcode NE 'FBVB'.

  REFRESH lt_bsip.
  CLEAR   bsip.

*--------------- Open FI- Prozeﬂ-Schnittstelle -------------------------
  CALL FUNCTION 'OPEN_FI_PERFORM_00001110_P'
    EXPORTING
      i_bukrs = i_bukrs
      i_lifnr = i_lifnr
      i_waers = i_waers
      i_bldat = i_bldat
      i_xblnr = i_xblnr
      i_wrbtr = i_wrbtr
      i_belnr = i_belnr
      i_gjahr = i_gjahr
      i_buzei = i_buzei
      i_shkzg = i_shkzg
      i_blart = i_blart
    IMPORTING
      e_nostd = xnost.

  CHECK xnost IS INITIAL.
  CHECK i_wrbtr NE 0.

  not_shkzg = i_shkzg.
  TRANSLATE not_shkzg USING 'SHHS'.

  IF i_xblnr = space.
    SELECT * INTO TABLE lt_bsip FROM bsip                   "N1354713
     WHERE bukrs = i_bukrs
     AND   lifnr = i_lifnr
     AND   waers = i_waers
     AND   wrbtr = i_wrbtr
     AND   bldat = i_bldat
     AND   shkzg NE not_shkzg.
  ELSE.
    SELECT * INTO TABLE lt_bsip FROM bsip
     WHERE bukrs = i_bukrs
     AND   lifnr = i_lifnr
     AND   waers = i_waers
     AND   xblnr = i_xblnr
     AND   bldat = i_bldat
     AND   shkzg NE not_shkzg.
  ENDIF.

  LOOP AT lt_bsip INTO bsip.
    CHECK NOT ( i_shkzg = 'S' AND bsip-shkzg = space ).
    CHECK NOT ( i_belnr = bsip-belnr AND
                i_bukrs = bsip-bukrs AND
                i_gjahr = bsip-gjahr ).
    PERFORM doppelte_belege_pruefen_s TABLES return USING rc.
    CHECK rc = 0.
    EXIT.
  ENDLOOP.

  oldb-bukrs = i_bukrs.
  oldb-lifnr = i_lifnr.
  oldb-waers = i_waers.
  oldb-wrbtr = i_wrbtr.
  oldb-xblnr = i_xblnr.
  oldb-bldat = i_bldat.
  oldb-shkzg = i_shkzg.

ENDFUNCTION.

FORM doppelte_belege_pruefen_s TABLES ti_return STRUCTURE bapiret2 USING dop_rc TYPE sysubrc.
  DATA: loc_stblg    LIKE bkpf-stblg,
        loc_stblg_mm LIKE bkpf-stblg,
        loc_subrc    LIKE sy-subrc,
        l_return     TYPE bapiret2.
  DATA l_msgts LIKE t100c-msgts.

  SELECT SINGLE * FROM bkpf
           WHERE belnr = bsip-belnr
           AND   bukrs = bsip-bukrs
           AND   gjahr = bsip-gjahr.

  loc_subrc = sy-subrc.

  IF bkpf-awtyp = 'RMRP'.
    SELECT SINGLE stblg INTO loc_stblg_mm FROM rbkp
         WHERE belnr = bkpf-awkey(10)
           AND gjahr = bkpf-awkey+10.
  ELSE.
    loc_stblg = bkpf-stblg.
  ENDIF.

  IF loc_subrc NE
  0 OR loc_stblg NE space.
    dop_rc = 4.
  ELSEIF loc_stblg_mm NE space.
    CLEAR: sy-msgid, sy-msgty, sy-msgno.
    CALL FUNCTION 'READ_CUSTOMIZED_MESSAGE'
      EXPORTING
        i_arbgb = 'F5A'
        i_dtype = 'W'
        i_msgnr = '291'
      IMPORTING
        e_msgty = l_msgts.

    IF l_msgts NE '-'.
      l_return-id = 'F5A'.
      l_return-type = l_msgts.
      l_return-number = '291'.
      l_return-message_v1 = bsip-bukrs.
      l_return-message_v2 = bsip-belnr.
      l_return-message_v3 = bsip-gjahr.
      APPEND l_return TO ti_return.
    ENDIF.
    IF l_msgts NE 'E'.                                    "Note1354713
      dop_rc = 4.                                           "Note781858
    ELSE.                                                   "Note781858
      dop_rc = 0.                                           "Note781858
    ENDIF.                                                  "Note781858
  ELSE.
    EXPORT bsip-bukrs bsip-belnr bsip-gjahr TO MEMORY ID 'BSIP_DOC'.

    CALL FUNCTION 'READ_CUSTOMIZED_MESSAGE'
      EXPORTING
        i_arbgb = 'F5'
        i_dtype = 'W'
        i_msgnr = '117'
      IMPORTING
        e_msgty = l_msgts.

    IF l_msgts NE '-'.
      l_return-id = 'F5'.
      l_return-type = l_msgts.
      l_return-number = '117'.
      l_return-message_v1 = bsip-bukrs.
      l_return-message_v2 = bsip-belnr.
      l_return-message_v3 = bsip-gjahr.
      APPEND l_return TO ti_return.
    ENDIF.

    dop_rc = 0.
    FREE MEMORY ID 'BSIP_DOC'.
  ENDIF.
ENDFORM.                    "DOPPELTE_BELEGE_PRUEFEN_S
