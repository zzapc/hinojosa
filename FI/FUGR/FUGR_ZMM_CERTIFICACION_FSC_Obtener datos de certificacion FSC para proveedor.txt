FUNCTION zmm_certificacion_fsc.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(LIFNR) TYPE  LIFNR
*"  EXPORTING
*"     REFERENCE(FSC) TYPE  ZZFSC
*"     REFERENCE(CODIGO_CERTIFICADO) TYPE  ZZCODIGO_CERTIFICADO
*"     REFERENCE(DECLARACION_FSC) TYPE  ZZDECLARACION_FSC
*"     REFERENCE(PORCENTAJE_FSC) TYPE  ZZPORCENT_FSC
*"     REFERENCE(CODIGO_CERTIFICADO2) TYPE  ZZCODIGO_CERTIFICADO
*"     REFERENCE(DECLARACION_FSC2) TYPE  ZZDECLARACION_FSC
*"     REFERENCE(PORCENTAJE_FSC2) TYPE  ZZPORCENT_FSC
*"     REFERENCE(T_MATKL) TYPE  MDG_BS_TT_MATKL
*"----------------------------------------------------------------------
  DATA: lv_object            TYPE objnum,
        lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num WITH HEADER LINE,
        lt_alloc_values_char TYPE tt_bapi1003_alloc_values_char WITH HEADER LINE,
        lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr WITH HEADER LINE,
        lt_return            TYPE bapiret2_tab WITH HEADER LINE.

  CLEAR: fsc, codigo_certificado, declaracion_fsc, porcentaje_fsc, codigo_certificado2, declaracion_fsc2, porcentaje_fsc2, t_matkl.
  REFRESH: lt_alloc_values_num, lt_alloc_values_char, lt_return, lt_alloc_values_curr, t_matkl.
  lv_object = lifnr.

  CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
    EXPORTING
      objectkey       = lv_object
      objecttable     = 'LFA1'
      classnum        = 'CERTIFICACION_FSC'
      classtype       = '010'
      keydate         = sy-datum
    TABLES
      allocvaluesnum  = lt_alloc_values_num[]
      allocvalueschar = lt_alloc_values_char[]
      allocvaluescurr = lt_alloc_values_curr[]
      return          = lt_return.

  IF lt_alloc_values_num[] IS NOT INITIAL OR lt_alloc_values_char[] IS NOT INITIAL. " tiene certificación
    fsc = 'S'.

    READ TABLE lt_alloc_values_char WITH KEY charact = 'CODIGO_CERTIFICADO'.
    IF sy-subrc EQ 0.
      codigo_certificado = lt_alloc_values_char-value_neutral.
    ENDIF.

    READ TABLE lt_alloc_values_char WITH KEY charact = 'DECLARACION_FSC'.
    IF sy-subrc EQ 0.
      declaracion_fsc = lt_alloc_values_char-value_neutral.
    ENDIF.

    READ TABLE lt_alloc_values_num WITH KEY charact = 'PORCENTAJE_FSC'.
    IF sy-subrc EQ 0.
      porcentaje_fsc = lt_alloc_values_num-value_from.
    ENDIF.
  ENDIF.

  REFRESH: lt_alloc_values_num, lt_alloc_values_char, lt_return, lt_alloc_values_curr.

  CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
    EXPORTING
      objectkey       = lv_object
      objecttable     = 'LFA1'
      classnum        = 'CERTIFICACION_FSC2'
      classtype       = '010'
      keydate         = sy-datum
    TABLES
      allocvaluesnum  = lt_alloc_values_num[]
      allocvalueschar = lt_alloc_values_char[]
      allocvaluescurr = lt_alloc_values_curr[]
      return          = lt_return.

  IF lt_alloc_values_num[] IS NOT INITIAL OR lt_alloc_values_char[] IS NOT INITIAL. " tiene certificación
    READ TABLE lt_alloc_values_char WITH KEY charact = 'CODIGO_CERTIFICADO2'.
    IF sy-subrc EQ 0.
      codigo_certificado2 = lt_alloc_values_char-value_neutral.
    ENDIF.

    READ TABLE lt_alloc_values_char WITH KEY charact = 'DECLARACION_FSC2'.
    IF sy-subrc EQ 0.
      declaracion_fsc2 = lt_alloc_values_char-value_neutral.
    ENDIF.

    READ TABLE lt_alloc_values_num WITH KEY charact = 'PORCENTAJE_FSC2'.
    IF sy-subrc EQ 0.
      porcentaje_fsc2 = lt_alloc_values_num-value_from.
    ENDIF.

    LOOP AT lt_alloc_values_char WHERE charact = 'GRUPO_ARTICULO'.
      APPEND lt_alloc_values_char-value_neutral TO t_matkl.
    ENDLOOP.
  ENDIF.

  IF fsc IS INITIAL. " si no hay, marcamos "No"
    fsc = 'N'.
  ENDIF.

ENDFUNCTION.
