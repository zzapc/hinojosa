FUNCTION zanular_clasificacion_lote.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_ROW) TYPE  ZDT_NOTRO_L
*"     VALUE(I_CHARG) TYPE  CHARG_D
*"  EXPORTING
*"     VALUE(E_ERROR) TYPE  XFELD
*"  TABLES
*"      T_MESSAGES STRUCTURE  BAPIRET2
*"----------------------------------------------------------------------
  DATA: lv_aufnr TYPE aufnr.

  DATA: lv_object            TYPE objnum,
        lv_classnum          TYPE                   bapi1003_key-classnum,
        ls_alloc_values_num  TYPE bapi1003_alloc_values_num,
        ls_alloc_values_char TYPE bapi1003_alloc_values_char,
        ls_return            TYPE bapiret2.

  DATA: lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num,
        lt_alloc_values_char TYPE tt_bapi1003_alloc_values_char,
        lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr,
        lt_return            TYPE bapiret2_tab.

  DATA: lv_plnbez TYPE afko-plnbez.

  DATA: gs_messages TYPE bapiret2.

  DATA: lv_extnumber TYPE balnrext.


  CLEAR: lv_object, lt_alloc_values_num, lt_alloc_values_char,
         lt_alloc_values_curr, lt_return, ls_alloc_values_num,
         ls_alloc_values_char, ls_return.
  REFRESH: lt_alloc_values_num, lt_alloc_values_char, lt_alloc_values_curr,
           lt_return.


  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = i_row-ord_fab
    IMPORTING
      output = lv_aufnr.

  SELECT SINGLE plnbez FROM afko
    INTO lv_plnbez
    WHERE aufnr = lv_aufnr.

  CONCATENATE lv_plnbez i_charg INTO lv_object.


  lv_classnum  = 'Z_ROLLO'.

  CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
    EXPORTING
      objectkey       = lv_object
      objecttable     = 'MCH1'
      classnum        = lv_classnum
      classtype       = '023'
    TABLES
      allocvaluesnum  = lt_alloc_values_num
      allocvalueschar = lt_alloc_values_char
      allocvaluescurr = lt_alloc_values_curr
      return          = lt_return.

  READ TABLE lt_return TRANSPORTING NO FIELDS WITH KEY type = 'E'.
  CHECK sy-subrc <> 0.


  " DIAMETRO:
  CLEAR ls_alloc_values_num.
  ls_alloc_values_num-charact = 'Z_DIAMETRO1'.
  ls_alloc_values_num-value_from = ''.
  APPEND ls_alloc_values_num TO lt_alloc_values_num.


  " TORNADAS:
  CLEAR ls_alloc_values_num.
  ls_alloc_values_num-charact = 'Z_TORNADAS'.
  ls_alloc_values_num-value_from = ''.
  APPEND ls_alloc_values_num TO lt_alloc_values_num.

  "FECHA DE FABRICACION:
  CLEAR ls_alloc_values_char.
  ls_alloc_values_char-charact = 'LOBM_HSDAT'.
  ls_alloc_values_char-value_char = ''.
  APPEND ls_alloc_values_char TO lt_alloc_values_char.

  " HORA DE FABRICACION:
  CLEAR ls_alloc_values_char.
  ls_alloc_values_char-charact = 'Z_HORA'.
  ls_alloc_values_char-value_char = ''.
  APPEND ls_alloc_values_char TO lt_alloc_values_char.

  " PESO:
  CLEAR ls_alloc_values_num.
  ls_alloc_values_num-charact = 'Z_PESO1'.
  ls_alloc_values_num-value_from = ''.
  APPEND ls_alloc_values_num TO lt_alloc_values_num.


  CLEAR ls_alloc_values_char.
  ls_alloc_values_char-charact = 'Z_LOTE_MES'.
  ls_alloc_values_char-value_char = ''.
  APPEND ls_alloc_values_char TO lt_alloc_values_char.

  CALL FUNCTION 'BAPI_OBJCL_CHANGE'
    EXPORTING
      objectkey          = lv_object
      objecttable        = 'MCH1'
      classnum           = lv_classnum
      classtype          = '023'
*     STATUS             = '1'
*     STANDARDCLASS      =
*     CHANGENUMBER       =
*     KEYDATE            = SY-DATUM
*     NO_DEFAULT_VALUES  = ' '
*   IMPORTING
*     CLASSIF_STATUS     =
    TABLES
      allocvaluesnumnew  = lt_alloc_values_num
      allocvaluescharnew = lt_alloc_values_char
      allocvaluescurrnew = lt_alloc_values_curr
      return             = lt_return.

  CLEAR ls_return.
  READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.
  IF ls_return IS NOT INITIAL. " Error act. característica
    e_error = 'X'.

    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*       IMPORTING
*         RETURN        =
      .

*   REGISTRAR ERROR EN CASO DE NO CREACION DEL PEDIDO DE COMPRAS
    LOOP AT lt_return INTO ls_return WHERE type  = 'E'.
      CLEAR gs_messages.
      gs_messages = ls_return.
      APPEND gs_messages TO t_messages.
    ENDLOOP.


    CONCATENATE 'Material' lv_plnbez 'Lote' i_charg INTO lv_extnumber SEPARATED BY space.

    CALL FUNCTION 'ZMFPP_GUARDAR_LOG'
      EXPORTING
        objeto    = 'ZSAP_MES'
        subobjeto = 'ZANULAR_CLASIF_LOTE'
        mensajes  = t_messages[]
        extnumber = lv_extnumber.

  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.

*   GUARDAR LOGS CON EL PEDIDO DE COMPRAS CREADO
    READ TABLE lt_return INTO ls_return WITH KEY type = 'S'.
    CLEAR gs_messages.
    gs_messages = ls_return.
    APPEND gs_messages TO t_messages.

  ENDIF.


** montar log slg1
*  CALL FUNCTION 'ZMONTAR_LOG_SLG1'
*    EXPORTING
*      i_extnumber = ''
*      i_object    = 'ZPP'
*      i_subobject = sy-tcode
*    TABLES
*      t_return    = t_messages.
*
*


ENDFUNCTION.
