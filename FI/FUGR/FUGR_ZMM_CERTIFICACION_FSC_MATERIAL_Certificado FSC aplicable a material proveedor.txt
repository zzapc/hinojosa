FUNCTION zmm_certificacion_fsc_material.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(LIFNR) TYPE  LIFNR
*"     REFERENCE(MATNR) TYPE  MATNR
*"  EXPORTING
*"     REFERENCE(FSC) TYPE  ZZFSC
*"     REFERENCE(CODIGO_CERTIFICADO) TYPE  ZZCODIGO_CERTIFICADO
*"     REFERENCE(DECLARACION_FSC) TYPE  ZZDECLARACION_FSC
*"     REFERENCE(PORCENTAJE_FSC) TYPE  ZZPORCENT_FSC
*"----------------------------------------------------------------------
  DATA: codigo_certificado2 TYPE zzcodigo_certificado,
        declaracion_fsc2    TYPE zzdeclaracion_fsc,
        porcentaje_fsc2     TYPE zzporcent_fsc,
        t_matkl             TYPE mdg_bs_tt_matkl,
        l_matkl             LIKE LINE OF t_matkl.

  CLEAR: fsc, codigo_certificado, declaracion_fsc, porcentaje_fsc, codigo_certificado2, declaracion_fsc2, porcentaje_fsc2, t_matkl.
  REFRESH: t_matkl.

  CHECK: lifnr IS NOT INITIAL,
         matnr IS NOT INITIAL.

  CALL FUNCTION 'ZMM_CERTIFICACION_FSC'
    EXPORTING
      lifnr               = lifnr
    IMPORTING
      fsc                 = fsc
      codigo_certificado  = codigo_certificado
      declaracion_fsc     = declaracion_fsc
      porcentaje_fsc      = porcentaje_fsc
      codigo_certificado2 = codigo_certificado2
      declaracion_fsc2    = declaracion_fsc2
      porcentaje_fsc2     = porcentaje_fsc2
      t_matkl             = t_matkl.

  IF t_matkl[] IS NOT INITIAL. " hay 2 certificaciones
    SELECT SINGLE matkl FROM mara
      INTO l_matkl
      WHERE matnr EQ matnr.

    READ TABLE t_matkl WITH KEY table_line = l_matkl TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0. " el material es relevante para la 2ª certificación
      codigo_certificado = codigo_certificado2.
      porcentaje_fsc = porcentaje_fsc2.
      declaracion_fsc = declaracion_fsc2.
    ENDIF.
  ENDIF.

ENDFUNCTION.
