FUNCTION zswm_modifica_necesidades_pp.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  TABLES
*"      XV_LTBK STRUCTURE  LTBK OPTIONAL
*"      XV_LTBP STRUCTURE  LTBP OPTIONAL
*"      XH_LTBK STRUCTURE  LTBK OPTIONAL
*"      XH_LTBP STRUCTURE  LTBP OPTIONAL
*"----------------------------------------------------------------------
  CALL FUNCTION 'ZSWM_BREAK_USER_EXIT'.
  DATA: rr_lgnum TYPE shp_lgnum_range_t.
* add jtm 14.03.2022 en las OFS de SEMI o PT se deben modificar  datos de
* las necesidades PP+WM GAPWM008 Crear las necesidades correctamente
  CALL FUNCTION 'ZSWM_SET_GET_VALUES'
    EXPORTING
      shortname = 'ZSWM_PLANCHA_HER_UAS_EE'
*     TT_SHORTNAME             =
*     NO_AUTHORITY_CHECK       = 'X'
*     LANGU     = SYST-LANGU
*     TT_FIELDNAME             =
    IMPORTING
      rr_lgnum  = rr_lgnum.
* Solo me interesan las necesidades de aprovi (319) de los numeros de almacén para tema plancha
  LOOP AT xh_ltbk INTO DATA(rt_ltbk) WHERE lgnum IN rr_lgnum
                                       AND bwlvs EQ '319'.    " aprovisionamiento producción

    DATA(sw_tabix) = sy-tabix.
*   Miro que tenga reserva
    CHECK rt_ltbk-rsnum IS NOT INITIAL.
*   Con la reserva saco la OF
    SELECT aufnr INTO @DATA(aufnr) UP TO 1 ROWS FROM resb WHERE rsnum EQ @rt_ltbk-rsnum.
    ENDSELECT.
    CHECK sy-subrc EQ 0.

    SELECT SINGLE * INTO @DATA(caufv)  FROM caufv WHERE aufnr EQ @aufnr.
    CHECK sy-subrc EQ 0.
    DATA: object_key TYPE cuib_objkey.
    object_key+0(18) = caufv-plnbez.
    object_key+18(4) = caufv-werks.
    SELECT SINGLE * INTO @DATA(yhp_idx_td010) FROM yhp_idx_td010 WHERE object_type EQ 'MARC'
                                                                   AND object_key  EQ @object_key.
    IF sy-subrc EQ 0.
      SELECT * INTO @DATA(rt_idx_td110) UP TO 1 ROWS
                                        FROM yhp_idx_td110 WHERE cuobj  EQ @yhp_idx_td010-cuobj
                                                             AND mboar  EQ 'P'.
      ENDSELECT.
      IF sy-subrc NE 0.
        CLEAR: rt_idx_td110.
      ENDIF.
    ENDIF.

    DATA: BEGIN OF t_lzsum OCCURS 0,
            zzancho   TYPE mara-zzancho,     " Es el Reel width que es el ancho a consumir
            flute     TYPE zvcxi_pcs_flute,  " Canal FLUTE
            board     TYPE zvcxi_pcs_board,  " Calidad VCXI-PC: ID Calidad (Board ID) ID PLANCHA del material a consumir
            vornr     TYPE resb-vornr,
            ci_number TYPE zspp_cinumber,
          END   OF t_lzsum.
    CLEAR t_lzsum[].
    DATA sw_es_papel TYPE flag.
    CLEAR sw_es_papel.
    LOOP AT xh_ltbp INTO DATA(rt_ltbp).
      DATA: mtart   TYPE mara-mtart,
            zzancho TYPE mara-zzancho,
            matkl   TYPE mara-matkl.
      SELECT SINGLE vornr INTO @DATA(vornr) FROM resb WHERE rsnum EQ @rt_ltbk-rsnum
                                                        AND rspos EQ @rt_ltbp-rspos.
      SELECT SINGLE mtart zzancho matkl INTO (mtart, zzancho, matkl) FROM mara WHERE matnr EQ rt_ltbp-matnr.
      CHECK mtart EQ 'ZPAP'.
      CLEAR: t_lzsum.
      t_lzsum-zzancho = zzancho.
      t_lzsum-flute = rt_idx_td110-flute.
      t_lzsum-board = rt_idx_td110-board.
      t_lzsum-vornr = vornr.
      SELECT SINGLE zzcinumber INTO t_lzsum-ci_number FROM caufv WHERE aufnr EQ aufnr.
*      SELECT SINGLE ci_number INTO t_lzsum-ci_number FROM zsppt_cinumbers WHERE aufnr EQ aufnr
*                                                                            AND vornr EQ vornr.
      IF sy-subrc NE 0.
        t_lzsum-ci_number = 'SIN CI_NUMBER'.
*        CLEAR t_lzsum-ci_number.
      ENDIF.
      APPEND t_lzsum.
      MOVE abap_true TO sw_es_papel.
    ENDLOOP.
    CHECK sw_es_papel EQ abap_true.
*   rt_ltbk-benum = caufv-zzcinumber+0(10).
    READ TABLE t_lzsum INDEX 1.
    CHECK sy-subrc EQ 0.
    CONCATENATE t_lzsum-zzancho t_lzsum-flute t_lzsum-board INTO rt_ltbk-lznum SEPARATED BY '/'.
    IF t_lzsum-ci_number IS INITIAL.
      UPDATE ltbk SET lznum = rt_ltbk-lznum
                      WHERE lgnum EQ rt_ltbk-lgnum
                        AND tbnum EQ rt_ltbk-tbnum.
    ELSE.
      rt_ltbk-benum = t_lzsum-ci_number+0(10).
      UPDATE ltbk SET benum = rt_ltbk-benum
                      lznum = rt_ltbk-lznum
                      WHERE lgnum EQ rt_ltbk-lgnum
                        AND tbnum EQ rt_ltbk-tbnum.
    ENDIF.
    MODIFY xh_ltbk FROM rt_ltbk INDEX sw_tabix.
  ENDLOOP.
* fin de add jtm 14.03.2022 en las OFS de SEMI o PT se deben modificar  datos de
* las necesidades PP+WM GAPWM008 Crear las necesidades correctamente

ENDFUNCTION.
