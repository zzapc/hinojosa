*----------------------------------------------------------------------*
*   INCLUDE J_3RMOBVEDF03                                              *
*----------------------------------------------------------------------*
*&      Form  calculation
*&---------------------------------------------------------------------*
form calculation
    tables
           pt_listmat type tt_listmat
           pt_docmat  type tt_docmat
           pto_matnr  type tt_so_matnr.
  data:
      l_update       type type_1c,                             "1259372
* tables
      lt_156n        type tt_156n,
      lt_156st       type tt_156st,
      lt_156         type tt_156,
      lt_156_way_in  type tt_156_way_in,
      lt_156_way_out type tt_156_way_out,
      lt_matnr_way type tt_matnr_way,
      lt_listfield1  type tt_listfield1,
      lt_listfield2  type tt_listfield2,
      lt_mard_mara type tt_mard_mara,
      lt_select_lgort type tt_select_lgort,
      lt_select_charg type tt_select_charg,
      lt_skb1 type tt_skb1,
      lt_charg type tt_mcha_mchb,
      lt_mcha type tt_mcha,
      lt_actual_so_matnr type tt_so_matnr,
      lt_listmat_tmp  type tt_listmat,                         "1259372
      lt_docmat_tmp   type tt_docmat,                          "1650775

* valuation tables
      lt_mbew type tt_mbew,
      lt_ebew type tt_ebew,
      lt_qbew type tt_qbew,
* stock tables
      lt_msku type tt_msku,
      lt_mslb type tt_mslb,
      lt_mspr type tt_mspr,
* Sales Order Stock table
      lt_mska type tt_mska,
* overvalue document table
      lt_overval  type tt_overvalue,
* cost table
      lt_partcost type tt_partcost,
* stock in transfer
      lt_ekpo type tt_ekpo,
* stock in transfer assigning
      lt_ekkn type tt_ekkn,
      lt_transfer type tt_transfer,
      lt_matnr type standard table of type_matnr_struc,        "1259372

      lw_so_matnr type j3rm_s_matnr,                           "1259372
      lw_budat type line of tt_so_budat.

  field-symbols:                                               "1259372
      <fs_matnr>  type type_matnr_struc.                       "1259372

* check if connection is to be treated as WAN connection       "1417445
* SAP GUI Progress Indicator will not be shown in WAN, as
* it consumes up to 500 milliseconds per each call
  Call Function 'SAPGUI_GET_WAN_FLAG'
    Importing wan_flag = gv_wan.                               "1417445

  read table so_budat into lw_budat index 1.

  perform customizing_tables_filling
      tables so_saknr
      changing
          lt_skb1
          lt_156n
          lt_156st
          lt_156
          lt_156_way_in
          lt_156_way_out.

  perform fields_table_filling
      tables
          lt_listfield1
          lt_listfield2.

  if pto_matnr[] is initial.
    lt_actual_so_matnr[] = so_matnr[].
  else.
    lt_actual_so_matnr[] = pto_matnr[].
  endif.

  If pa_lock is not initial.                                   "1384361

* Get all relevant material numbers                            "1259372
  If pa_bukrs is not initial.                                  "1266509
    Select Distinct matnr From j_3rm_marcmara_b Into Table lt_matnr
      Where bukrs = pa_bukrs  and
            werks in so_werks and
            matkl in so_matkl and
            mtart in so_mtart and
            matnr in lt_actual_so_matnr[].
  Else.                                                        "1266509
    Select Distinct matnr From j_3rm_marcmara_w Into Table lt_matnr
      Where werks in so_werks and
            matkl in so_matkl and
            mtart in so_mtart and
            matnr in lt_actual_so_matnr[].
  Endif.                                                       "1266509

  lw_so_matnr-sign   = gc_sign_i.                              "1259372
  lw_so_matnr-option = gc_option_eq.                           "1417445

  Loop At lt_matnr Assigning <fs_matnr>.                       "1259372
* Process materials one by one in order to set locks           "1259372
    lw_so_matnr-low = <fs_matnr>-matnr.                        "1259372
    Refresh: lt_actual_so_matnr.                               "1259372
    Append lw_so_matnr to lt_actual_so_matnr[].                "1259372

      Perform lock_set using <fs_matnr>-matnr.                 "1259372

      Perform processing_sub                                   "1384361
       tables pt_listmat
              pt_docmat
        using lt_actual_so_matnr[]
              lw_budat
              pa_bukrs
              pa_adcst
              lt_listfield2[]
              lt_156_way_out
              lt_156_way_in
        changing
              lt_mard_mara
              lt_mbew
              lt_ebew
              lt_qbew
              lt_msku
              lt_mska
              lt_mslb
              lt_mspr
              lt_matnr_way
              lt_select_lgort
              lt_select_charg
              lt_charg
              lt_mcha
              lt_ekpo
              lt_ekkn
              lt_transfer
              lt_skb1
              lt_partcost
              l_update
              lt_overval.

      Perform lock_release using <fs_matnr>-matnr.             "1259372

      Refresh: lt_mard_mara, lt_mbew, lt_ebew,                 "1650775
      lt_qbew, lt_msku, lt_mska, lt_mslb, lt_mspr,
      lt_matnr_way, lt_select_lgort, lt_select_charg,
      lt_charg, lt_mcha, lt_ekpo, lt_ekkn, lt_transfer.

      Perform processing_sub_2                                 "1650775 start
       tables pt_listmat
              pt_docmat
        changing
              lt_partcost
              lt_overval.

      Refresh: lt_partcost, lt_overval.
      Append Lines Of pt_listmat To lt_listmat_tmp.
      Append Lines Of pt_docmat  To lt_docmat_tmp.
      Refresh: pt_listmat, pt_docmat.                          "1650775 end

  Endloop.                                                     "1259372

  pt_listmat[] = lt_listmat_tmp[].                             "1384361
  Refresh: lt_listmat_tmp.                                     "1384361
  pt_docmat[]  = lt_docmat_tmp[].                              "1650775
  Refresh: lt_docmat_tmp.                                      "1650775

  Else.                                                        "1384361
*   Process all materials in order to improve performance      "1384361
    Perform processing_sub                                     "1384361
     tables pt_listmat
            pt_docmat
      using lt_actual_so_matnr[]
            lw_budat
            pa_bukrs
            pa_adcst
            lt_listfield2[]
            lt_156_way_out
            lt_156_way_in
      changing
            lt_mard_mara
            lt_mbew
            lt_ebew
            lt_qbew
            lt_msku
            lt_mska
            lt_mslb
            lt_mspr
            lt_matnr_way
            lt_select_lgort
            lt_select_charg
            lt_charg
            lt_mcha
            lt_ekpo
            lt_ekkn
            lt_transfer
            lt_skb1
            lt_partcost
            l_update
            lt_overval.

      Perform processing_sub_2                                 "1650775
       tables pt_listmat
              pt_docmat
        changing
              lt_partcost
              lt_overval.
  Endif.                                                       "1384361

  if pa_lock is initial and l_update is not initial.           "1259372
*   material documents were posted during report run
    message s023 display like 'W'.                             "1323282
  endif.                                                       "1259372

  write: sy-datum  to gd_made,
         sy-uzeit  to gt_made.

  perform save_current_result_database
       tables pt_listmat
              pt_docmat.

endform.                    " calculation
*&---------------------------------------------------------------------*
*&      Form  tmp_tables_filling
*&---------------------------------------------------------------------*
form tmp_tables_filling
    using pt_matnr type tt_so_matnr
          pw_budat type line of tt_so_budat                    "1247791
    changing
          pt_mard_mara type tt_mard_mara
          pt_mbew      type tt_mbew
          pt_ebew      type tt_ebew
          pt_qbew      type tt_qbew
          pt_msku      type tt_msku
          pt_mska      type tt_mska
          pt_mslb      type tt_mslb
          pt_mspr      type tt_mspr
          pt_matnr_way type tt_matnr_way
          pt_select_lgort type tt_select_lgort
          pt_select_charg type tt_select_charg
          pt_charg     type tt_mcha_mchb
          pt_mcha      type tt_mcha
          pt_ekpo      type tt_ekpo
          pt_ekkn      type tt_ekkn.

  data:
      l_recsel_sobkz  type i,
      l_banner        type type_check_box,
      l_spec_q        type type_check_box,
      l_spec_e        type type_check_box,
      l_rec           type sytabix,

* table parameters for SELECT ... FOR ALL ENTRIES
      lt_select_bwkey type tt_select_bwkey,
      lt_select_matnr type tt_select_matnr,                    "1384361
      lt_so_bwkey     type tt_so_bwkey,                        "1384361
      lt_so_bwtar     type tt_so_bwtar.                        "1247791

  describe table so_sobkz lines l_recsel_sobkz.

*-----------------
  refresh: lt_select_bwkey.
****************************************************
* "W", "V", "O", special stock values
* are in MBEW table,
* so should collect simple stock from MARD table
* and special stock from table MSKU,
* since it's impossible to calc costs
****************************************************



************** BKLAS getting ********
*  perform get_bklas changing lt_bklas.

* new table for valuation type restriction                     "1247791
  describe table so_bwtar lines l_rec.                         "1247791
  If l_rec Is not Initial.                                     "1247791
    lt_so_bwtar[] = so_bwtar[].                                "1247791
  Endif.                                                       "1247791

* fill entries batch quantity into table it_charg
  perform charg_getting
      using
            pt_matnr
            pw_budat                                           "1247791
      changing
            pt_mcha
            pt_charg
            lt_so_bwtar                                        "1247791
            pt_select_lgort
            pt_select_charg.

  sort lt_so_bwtar[].                                          "1247791
  delete adjacent duplicates from lt_so_bwtar[].               "1247791

* unless otherwise "special stock only" and special stocks aren't
* in selection screen
  if pa_onlsp is initial or
      l_banner is initial.
* begin loop at material's table to link's table
* mard --+-- mara is main_record_material
*        +-- makt is material's short text

    perform mard_marc_getting
        using
              pt_matnr
        changing
              pt_mard_mara
              pt_select_lgort
              pt_select_charg
              lt_select_bwkey
              lt_select_matnr                                  "1384361
              lt_so_bwkey.                                     "1384361

* IT_MSKU table entryes complete
* our special stock at customer
* MSKU <-> MBEW

    perform msku_getting
       using
              pt_matnr
        changing
              pt_msku
              pt_mard_mara
              pt_select_lgort
              pt_select_charg
              lt_select_bwkey
              lt_select_matnr                                  "1384361
              lt_so_bwkey.                                     "1384361

* IT_MSLB table entryes complete
* our special stock at customer
* MSLB <-> MBEW

    perform mslb_getting
        using
              pt_matnr
        changing
              pt_mslb
              pt_mard_mara
              pt_select_lgort
              pt_select_charg
              lt_select_bwkey
              lt_select_matnr                                  "1384361
              lt_so_bwkey.                                     "1384361

    perform mbew_getting
        using
              lt_select_bwkey
              lt_so_bwkey                                      "1384361
              lt_select_matnr                                  "1384361
              pt_matnr
              lt_so_bwtar                                      "1247791
        changing
              pt_mbew.

  endif.

* IT_MSKA table entryes complete
* our special stock in storage for customer order
* MSKA <-> EBEW
  if l_recsel_sobkz is initial or l_spec_e is initial.

    perform mska_getting
        using
              pt_matnr
        changing
              pt_mska
              pt_mard_mara
              pt_select_lgort
              pt_select_charg
              lt_select_bwkey
              lt_select_matnr                                  "1384361
              lt_so_bwkey.                                     "1384361

    perform ebew_getting
        using
              pt_matnr
              lt_select_bwkey
              lt_so_bwkey                                      "1384361
              lt_select_matnr                                  "1384361
              lt_so_bwtar                                      "1247791
        changing
              pt_ebew.

  endif.

* fill entryes IT_MSPR table
* our special stock in storage for project
* MSPR <-> QBEW
  if l_recsel_sobkz is initial or l_spec_q is initial.

    perform mspr_getting
        using
              pt_matnr
        changing
              pt_mspr
              pt_mard_mara
              pt_select_lgort
              pt_select_charg
              lt_select_bwkey
              lt_select_matnr                                  "1384361
              lt_so_bwkey.                                     "1384361

    perform qbew_getting
        using
              pt_matnr
              lt_select_bwkey
              lt_so_bwkey                                      "1384361
              lt_select_matnr                                  "1384361
              lt_so_bwtar                                      "1247791
        changing
              pt_qbew.
  endif.

  Get Time.                                                    "1259372
  g_dt_start = sy-datum.                                       "1259372
  g_tm_start = sy-uzeit.                                       "1259372

endform.                    " tmp_tables_filling
*&---------------------------------------------------------------------*
*&      Form  customizing_tables_filling
*&---------------------------------------------------------------------*
form customizing_tables_filling
    tables pso_saknr   type tt_so_saknr
    changing
        pt_skb1        type tt_skb1
        pt_156n        type tt_156n
        pt_156st       type tt_156st
        pt_156         type tt_156
        pt_156_way_in  type tt_156_way_in
        pt_156_way_out type tt_156_way_out.                 "#EC *
  types:
      begin of type_lbbsa,
          lbbsa type lbbsa,
          sobkz type sobkz,
      end of type_lbbsa.

  data:
      l_rec type sytabix,
      lt_lbbsa type standard table of type_lbbsa.

* reversal movement type list
  select bwart bwart_next
      from t156n
      into table pt_156st
      where fcode = 'ST'.

* two-steps movement type table
  select fcode bwart bwart_next xstor
      from t156n
      into table pt_156n
      where xstor = '3'.
*    fcode = 'SU' OR fcode = 'SUU'.

* check table for exclude not relevant movement from the report
  select bwart kzvbu kzstr
      from t156
      into table pt_156.

* check table for movement into stock in transit
  select lbbsa sobkz
      from t156c
      into table lt_lbbsa
      where xumlmc = gc_true.

  select lbbsa sobkz
      from t156c
      appending table lt_lbbsa
      where xtrame = gc_true.

  IF lines( lt_lbbsa ) > 0.                     "2169022  Checkman
    select bustm lbbsa kbbsa
      from t156m
      into table pt_156_way_in
      for all entries in lt_lbbsa
      where lbbsa = lt_lbbsa-lbbsa.
  ENDIF.

  IF lines( lt_lbbsa ) > 0.                       "2169022  Checkman
  select bustm lbbsa kbbsa
      from t156m
      into table pt_156_way_out
      for all entries in lt_lbbsa
      where kbbsa = lt_lbbsa-lbbsa.
  ENDIF.

  describe table pso_saknr lines l_rec.

  if not l_rec is initial.
    select bukrs saknr
        from skb1                                     "#EC CI_SGLSELECT
        into table pt_skb1
        where saknr in pso_saknr.                       "#EC CI_GENBUFF
  endif.

* check table to exclude not relevant ML item types            "1411886
  Data: ls_vgart_excl like line of gt_vgart_excl.

  ls_vgart_excl-sign = 'I'.
  ls_vgart_excl-option = 'EQ'.
  ls_vgart_excl-low = gc_vgart_input_material.
  Insert ls_vgart_excl Into Table gt_vgart_excl.
  ls_vgart_excl-low = gc_vgart_input_curtp_ms.
  Insert ls_vgart_excl Into Table gt_vgart_excl.               "1411886

* check table to sum up PrD and ERD for ML field groups        "1464432 start
  Data: ls_feldg_sum like line of gt_feldg_sum.

  ls_feldg_sum-sign = 'I'.
  ls_feldg_sum-option = 'EQ'.
  ls_feldg_sum-low = gc_anfb_einst_aufgel.
  Insert ls_feldg_sum Into Table gt_feldg_sum.
  ls_feldg_sum-low = gc_endb_einst_abger.
  Insert ls_feldg_sum Into Table gt_feldg_sum.
  ls_feldg_sum-low = gc_anfb_mst_aufgel.
  Insert ls_feldg_sum Into Table gt_feldg_sum.
  ls_feldg_sum-low = gc_endb_mst_abger.
  Insert ls_feldg_sum Into Table gt_feldg_sum.                 "1464432 end

endform.                    " customizing_tables_filling
*&---------------------------------------------------------------------*
*&      Form  fields_table_filling
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
form fields_table_filling
    tables
        pt_listfield1 type tt_listfield1
        pt_listfield2 type tt_listfield2.

  data:
        lw_listfield1 type type_field_list1,
        lw_listfield2 type type_field_list2.

*---------------------------------------------
* it_mseg table name fields list complete
  enter_it_listfield1:
     'MBLNR', 'MJAHR', 'MATNR', 'WERKS', 'LGORT',
     'ZEILE', 'BWART', 'BWTAR', 'CHARG', 'SHKZG',
     'MENGE', 'DMBTR', 'WAERS', 'SALK3', 'LBKUM',
     'KOSTL', 'LIFNR', 'ANLN1', 'KUNNR', 'UMWRK',
     'UMLGO', 'UMCHA', 'UMBAR', 'AUFNR', 'EBELN', 'EBELP', 'SAKTO',
     'SJAHR', 'SMBLN', 'SMBLP', 'SOBKZ', 'WERTU',
     'MENGU', 'BUSTM', 'BUSTW', 'VPRSV'.
  if syst-saprl(2) = '40'.
    enter_it_listfield1: 'KDAUF', 'KDPOS', 'PS_PSP_PNR'.
  else.
    enter_it_listfield1: 'MAT_KDAUF', 'MAT_KDPOS', 'MAT_PSPNR'.
  endif.

  enter_it_listfield2: 'A~MBLNR', 'A~MJAHR',
      'A~ZEILE', 'A~MENGE', 'A~MEINS', 'A~BPMNG', 'A~BPRME',
      'A~DMBTR', 'A~SALK3', 'A~LBKUM', 'A~KOSTL', 'A~EMLIF',   "1180607
      'A~ANLN1', 'A~KUNNR', 'A~UMWRK', 'A~UMLGO',
      'A~UMCHA', 'A~UMBAR',
      'A~AUFNR',
      'A~EBELN', 'A~EBELP', 'A~SAKTO', 'A~WERKS', 'A~LGORT',
      'A~BWART', 'A~MATNR', 'A~SHKZG', 'A~SJAHR', 'A~SMBLN',
      'A~SMBLP', 'A~BWTAR', 'A~BUKRS',
      'A~WAERS', 'A~BELNR',
      'A~GJAHR', 'A~BUZEI'.

  clear gv_mseg_conv.                                          "1982947 start
  CALL FUNCTION 'FUNCTION_EXISTS'
    EXPORTING
      funcname           = 'MB_CHECK_MSEG_CONVERSION_DONE'
    EXCEPTIONS
      function_not_exist = 1
      OTHERS             = 2.
  if sy-subrc = 0.
*   check for optimization notes 1516684 and 1550000
    call function 'MB_CHECK_MSEG_CONVERSION_DONE'
      importing E_CONVERSION_DONE = gv_mseg_conv.
  endif.

  if gv_mseg_conv = abap_true.
*   mkpf fields are added to mseg
    enter_it_listfield2:
      'A~XBLNR_MKPF AS XBLNR', 'A~VGART_MKPF AS VGART', 'A~BUDAT_MKPF AS BUDAT',
      'A~CPUDT_MKPF AS CPUDT', 'A~CPUTM_MKPF AS CPUTM'.
  else.
*   old logic
    enter_it_listfield2:
      'B~XBLNR', 'B~VGART', 'B~BUDAT', 'B~CPUDT', 'B~CPUTM'.
  endif.                                                       "1982947 end

  enter_it_listfield2:
      'A~KZBEW', 'A~KZVBR',
      'A~KZZUG', 'A~XAUTO',
      'A~SOBKZ', 'A~WERTU', 'A~MENGU', 'A~CHARG' .
  if syst-saprl(2) = '40'.
    enter_it_listfield2: 'KDAUF', 'KDPOS', 'PS_PSP_PNR'.
  else.
    enter_it_listfield2: 'MAT_KDAUF', 'MAT_KDPOS', 'MAT_PSPNR'.
  endif.

  enter_it_listfield2: 'BUSTM', 'BUSTW', 'VPRSV'.

* CLEAR: pt_listfield1, pt_listfield2.


endform.                    " fields_table_filling
*&---------------------------------------------------------------------*
*&      Form  get_stock_in_transfer
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PT_MATNR      text
*      -->PT_WERKS      text
*      -->PT_SOBKZ      text
*      -->PT_WAY_MATNR  text
*      -->PT_EKPO       text
*      -->PT_EKKN       text
*      -->PT_MARC       text
*      -->PT_MSSA       text
*      -->PT_MSSQ       text
*----------------------------------------------------------------------*
form get_stock_in_transfer
  using
    pt_matnr    type tt_so_matnr
    pt_werks    type tt_so_werks
    pt_sobkz    type tt_so_sobkz
  changing
    pt_way_matnr type tt_way_matnr
    pt_ekpo      type tt_ekpo
    pt_ekkn      type tt_ekkn
    pt_marc      type tt_marc
    pt_mssa      type tt_mssa
    pt_mssq      type tt_mssq
    retcode      type sysubrc.

  data:
        has_gen_stock(1)     type c,
        has_onhands_stock(1) type c,
        has_prj_stock(1)     type c,

        l_rec          type sytabix,
        l_rec1         type sytabix,
        lt_pstyp type range of pstyp,
        lt_elikz type range of elikz,
        lt_loekz type range of eloek,
        lt_reswk type range of reswk,
        lt_t163k type hashed table of type_t163k
            with unique key knttp,
* table headers
        lw_ekpo  type type_ekpo,
        lw_ekkn  type type_ekkn,
        lw_pstyp type type_where_in_pstyp,
        lw_elikz type type_where_in_elikz,
        lw_loekz type type_where_in_loekz,
        lw_t163k type type_t163k.

  clear: has_gen_stock, has_onhands_stock, has_prj_stock.
  refresh: lt_pstyp, lt_elikz, lt_loekz, lt_reswk.

*  lw_elikz-sign = gc_sign_i. lw_elikz-option = gc_option_eq.  "1825272
*  clear lw_elikz-low. append lw_elikz to lt_elikz.            "1825272
*  lw_loekz-sign = gc_sign_i. lw_loekz-option = gc_option_eq.  "1582729
*  clear lw_loekz-low. append lw_loekz to lt_loekz.            "1582729

  lw_pstyp-sign = gc_sign_i. lw_pstyp-option = gc_option_eq.
  clear lw_pstyp-low. append lw_pstyp to lt_pstyp.
  lw_pstyp-sign = gc_sign_i. lw_pstyp-option = gc_option_eq.
  lw_pstyp-low = '7'. append lw_pstyp to lt_pstyp.
  lw_pstyp-sign = gc_sign_i. lw_pstyp-option = gc_option_eq.
* Message Number : 0120025231 0000039911 2007
*  lw_pstyp-low = '0'. append lw_pstyp to lt_pstyp.
* end Message Number : 0120025231 0000039911 2007
  lw_pstyp-sign = gc_sign_i. lw_pstyp-option = gc_option_eq.
  lw_pstyp-low = '3'. append lw_pstyp to lt_pstyp.

  call function 'J_3RM_MB_ADD_TRANSFER_QUANTITY'               "1582729
    exporting
      cumulate = ' '
    tables
      xmatnr   = pt_matnr
      xwerks   = pt_werks
      xreswk   = lt_reswk
      xsobkz   = pt_sobkz
      xpstyp   = lt_pstyp
*      xelikz   = lt_elikz                                     "1825272
*      xloekz   = lt_loekz                                     "1582729
      xtab6    = pt_way_matnr
    exceptions
      others   = 1.                                         "#EC *

  refresh: pt_ekkn, pt_ekpo.
  retcode = sy-subrc.

*
* we should show in calling procedure that
* either FM threw an error or no record in
* pt_way_matnr were provided
*
  if retcode is not initial or
     pt_way_matnr[] is initial.
    if retcode is initial.
      retcode = 4.
    endif.
    exit.
  endif.

  select knttp kzvbr
    from t163k
    into table lt_t163k.

  select
      a~ebeln a~ebelp a~zekkn a~vgabe a~gjahr a~belnr a~buzei
      b~matnr b~bukrs b~werks
      c~bwkey
      b~lgort b~sobkz b~bwtty
      a~bwtar a~charg a~bewtp a~menge
      b~pstyp b~knttp a~shkzg
      b~umrez b~umren
  from ekbe as a
      inner join ekpo as b
      on b~ebeln = a~ebeln
     and b~ebelp = a~ebelp
      inner join t001w as c
      on c~werks = b~werks
  into corresponding fields of table pt_ekpo
    for all entries in pt_way_matnr
      where a~ebeln = pt_way_matnr-ebeln
        and a~ebelp = pt_way_matnr-ebelp
        and a~bewtp in (gc_bewtp_u, gc_bewtp_e ).             "#EC CI_BUFFJOIN

  select ebeln ebelp zekkn
         loekz vbeln vbelp
         ps_psp_pnr
  from ekkn
  into table pt_ekkn
    for all entries in pt_way_matnr
      where ebeln = pt_way_matnr-ebeln
        and ebelp = pt_way_matnr-ebelp
        and loekz = gc_false.


  loop at pt_ekpo into lw_ekpo
      where knttp ne gc_false.
    l_rec1 = sy-tabix.

    read table lt_t163k into lw_t163k
        with table key knttp = lw_ekpo-knttp.

    check lw_t163k-kzvbr = gc_kzvbr_v.

    delete pt_way_matnr where ebeln = lw_ekpo-ebeln
                          and ebelp = lw_ekpo-ebelp.
    delete pt_ekkn where ebeln = lw_ekpo-ebeln
                     and ebelp = lw_ekpo-ebelp.

    delete pt_ekpo index l_rec1.
  endloop.

*
* checking if we have to search for general stock in transafer (sobkz ca ' WV')
*
  read table pt_way_matnr with key sobkz = ' ' transporting no fields.
  if ( sy-subrc is not initial ).
    read table pt_way_matnr with key sobkz = 'W' transporting no fields.
    if ( sy-subrc is not initial ).
      read table pt_way_matnr with key sobkz = 'V' transporting no fields.
    endif.
  endif.
  if ( sy-subrc is initial ).
    has_gen_stock = 'X'.
  endif.
*
* checking if we have to search for stock on hands (sobkz = 'E')
*
  read table pt_way_matnr with key sobkz = gc_spec_e transporting no fields.
  if ( sy-subrc is initial ).
    has_onhands_stock = 'X'.
  endif.
*
* checking if we have to search for project stock (sobkz = 'Q')
*
  read table pt_way_matnr with key sobkz = gc_spec_q transporting no fields.
  if ( sy-subrc is initial ).
    has_prj_stock = 'X'.
  endif.


  if ( has_gen_stock is not initial ).
* general (not special) stock in transfer
    select
        v~matnr v~werks v~bwtty v~bwkey
        v~xchar v~trame v~umlmc v~bwesb                     "\ ERP2005
        v~meins v~mtart v~matkl v~bismt          "/
*            a~xchar a~trame a~umlmc                "\ADD-ONs C-CIS,
*            b~meins b~mtart b~matkl b~bismt        "/
        mat_text~maktx
        from j_3rm_marcmara_w as v
                      left join makt as mat_text      "#EC CI_BUFFJOIN
                          on v~matnr = mat_text~matnr and
                             mat_text~spras = sy-langu
        into table pt_marc
        for all entries in pt_way_matnr
        where v~werks = pt_way_matnr-werks
          and v~matnr = pt_way_matnr-matnr
          and v~matkl in so_matkl                              "1418079
          and v~mtart in so_mtart.                             "1418079
  endif.
  if ( has_onhands_stock is not initial ).
* customer order stock in transfer
    select a~matnr a~werks
           a~sobkz a~vbeln a~posnr v~bwkey
           v~bwtty v~xchar a~satra v~mtart v~matkl v~bismt     "1418079
           mat_text~maktx
        from mssa as a
            inner join j_3rm_marcmara_w as v
                on a~matnr = v~matnr and
                   a~werks = v~werks
            left join makt as mat_text        "#EC CI_BUFFJOIN
                on v~matnr = mat_text~matnr and
                  mat_text~spras = sy-langu
        into table pt_mssa
        for all entries in pt_way_matnr
        where v~werks = pt_way_matnr-werks
          and v~matnr = pt_way_matnr-matnr
          and a~sobkz = pt_way_matnr-sobkz
          and v~matkl in so_matkl                              "1418079
          and v~mtart in so_mtart                              "1418079
          and a~satra > 0.
  endif.
  if ( has_prj_stock is not initial ).
* project stock in transfer
    select a~matnr a~werks
           a~sobkz a~pspnr v~bwkey
           v~bwtty v~xchar a~sqtra v~mtart v~matkl v~bismt     "1418079
           mat_text~maktx
        from mssq as a
            inner join j_3rm_marcmara_w as v
                on a~matnr = v~matnr and
                   a~werks = v~werks
            left join makt as mat_text          "#EC CI_BUFFJOIN
                on v~matnr = mat_text~matnr and
                  mat_text~spras = sy-langu
        into table pt_mssq
        for all entries in pt_way_matnr
        where v~werks = pt_way_matnr-werks
          and v~matnr = pt_way_matnr-matnr
          and a~sobkz = pt_way_matnr-sobkz
          and v~matkl in so_matkl                              "1418079
          and v~mtart in so_mtart                              "1418079
          and a~sqtra > 0.
  endif.
endform.                    "get_stock_in_transfer
*&---------------------------------------------------------------------*
*&      Form  transfer_stock
*&---------------------------------------------------------------------*
form transfer_stock
    using p_so_matnr  type tt_so_matnr
    changing
          pt_mard_mara type tt_mard_mara
          pt_matnr_way type tt_matnr_way
          pt_mbew      type tt_mbew
          pt_ebew      type tt_ebew
          pt_qbew      type tt_qbew
          pt_ekpo      type tt_ekpo
          pt_ekkn      type tt_ekkn
          pt_mcha      type tt_mcha                            "1582729
          pt_transfer  type tt_transfer.

  types:
      begin of type_bwkey,
          werks type werks_d,
          bwkey type bwkey,
          bukrs type bukrs,
      end of type_bwkey.

  data:
      retcode        type sysubrc,
      l_rec          type sytabix,
      l_rec1         type sytabix,
*    l_rec2         TYPE sytabix,
      l_rec_mrd_mara type sytabix,
      l_linkk        type j_3rmanylink,
* tables
      lt_mssq type sorted table of type_mssq
          with non-unique key matnr werks sobkz pspnr,
      lt_mssa type sorted table of type_mssa
          with non-unique key matnr werks sobkz vbeln posnr,
      lt_mard_mara type standard table of type_mard_mara
          with non-unique key werks matnr,
      lt_marc type sorted table of type_marc
          with non-unique key matnr werks,
      lt_way_matnr type tt_way_matnr,
      lt_t163k type hashed table of type_t163k
          with unique key knttp,


* table headers
      lw_t001w      type type_bwkey,
      lw_mssa       type type_mssa,
      lw_mssq       type type_mssq,
      lw_matnr_way  type type_matnr_way,
      lw_way_matnr  type type_way_matnr,
      lw_marc       type type_marc,
      lw_mard_mara  type type_mard_mara,
      lw_mbew  type type_xbew,
      lw_ekpo  type type_ekpo,
      lw_ekkn  type type_ekkn,
      lw_mcha  type type_mcha,                                 "1582729
      lw_transfer type type_transfer,
      lw_werks    type type_where_in_werks,                    "1673200
      lv_index    like sy-tabix,                               "1673200
      lv_mbew_ok  type abap_bool,                              "1673200
      lw_t163k type type_t163k.

  field-symbols:
      <fs_mard_mara> type type_mard_mara.

  statics: lt_t001w type sorted table of type_bwkey            "1666710 start
                    with non-unique key werks,
           lt_werks type tt_so_werks.                          "1673200
  data:    ls_t001w type type_bwkey.

  if lt_t001w is initial.
    select * from t001w where werks in so_werks.
      select * from t001k where bwkey = t001w-bwkey.
        ls_t001w-werks = t001w-werks.
        ls_t001w-bwkey = t001k-bwkey.
        if pa_bukrs is not initial.                            "1673200
          check t001k-bukrs = pa_bukrs.                        "1673200
        endif.                                                 "1673200
        ls_t001w-bukrs = t001k-bukrs.
        insert ls_t001w into table lt_t001w.
      endselect.
    endselect.
    if so_werks is not initial.                                "1673200 start
      lt_werks = so_werks[].
    else.
      lw_werks-sign = gc_sign_i. lw_werks-option = gc_option_eq.
      loop at lt_t001w into ls_t001w.
        lw_werks-low = ls_t001w-werks.
        append lw_werks to lt_werks.
      endloop.
    endif.                                                     "1673200 end
  endif.                                                       "1666710 end

* ERP2005 blocked valuated stock processing start
  loop at pt_mard_mara assigning <fs_mard_mara>
      where not bwesb is initial.
    lw_mard_mara = <fs_mard_mara>.
    lw_mard_mara-lgort = gc_str_phantom.
    lw_mard_mara-labst = lw_mard_mara-bwesb.
    clear: <fs_mard_mara>-bwesb.
    insert lw_mard_mara into table pt_mard_mara.
  endloop.
* ERP2005 blocked valuated stock processing end

  perform get_stock_in_transfer
        using
          p_so_matnr[]
          lt_werks                                             "1673200
          so_sobkz[]
        changing
          lt_way_matnr
          pt_ekpo
          pt_ekkn
          lt_marc
          lt_mssa
          lt_mssq
          retcode.

  if retcode is initial.
* general stock in transfer
    loop at lt_way_matnr into lw_way_matnr
        where sobkz ca ' WV'.
      clear lw_mard_mara.
      read table lt_t001w into lw_t001w
          with key werks = lw_way_matnr-werks
          binary search.
      check sy-subrc is initial.

      clear lw_marc.                                           "1418079
      read table lt_marc into lw_marc
          with key matnr = lw_way_matnr-matnr
                   werks = lw_way_matnr-werks
          binary search.
      check lw_marc-matkl in so_matkl.
      check lw_marc-mtart in so_mtart.                         "1418079

      read table pt_ekpo                                       "1673200
          with key matnr = lw_way_matnr-matnr
                   ebeln = lw_way_matnr-ebeln
                   ebelp = lw_way_matnr-ebelp
          binary search transporting no fields.                "1673200
      check sy-subrc is initial.
      lv_index = sy-tabix.                                     "1673200 start

      lv_mbew_ok = abap_false.
      Loop At pt_ekpo into lw_ekpo from lv_index.
        if lw_ekpo-matnr ne lw_way_matnr-matnr or
           lw_ekpo-ebeln ne lw_way_matnr-ebeln or
           lw_ekpo-ebelp ne lw_way_matnr-ebelp.
          exit.
        endif.                                                 "1673200 end

* the stock valuation check
      loop at pt_mbew into lw_mbew
          where matnr = lw_way_matnr-matnr
            and bwkey = lw_t001w-bwkey
            and bwtar = lw_ekpo-bwtar
            and bwtty = lw_ekpo-bwtty.
        exit.
      endloop.

      if not sy-subrc is initial.
        select single                                "#EC CI_SEL_NESTED
            matnr bwkey bwtar bwtty
            lbkum salk3 bklas vprsv
            stprs peinh kaln1
        from  mbew
        into lw_mbew
        where matnr = lw_way_matnr-matnr
          and bwkey = lw_t001w-bwkey
          and bwtar = lw_ekpo-bwtar
          and bwtty = lw_ekpo-bwtty.
        if sy-subrc is initial.
          insert lw_mbew into table pt_mbew.
          lv_mbew_ok = abap_true.                              "1673200
        else.
* the stock is not valued
          continue.
        endif.
      else.                                                    "1673200
        lv_mbew_ok = abap_true.                                "1673200
      endif.

*     add empty charg for #### stock without batch number      "1582729 start
      read table pt_mcha transporting no fields
        with table key matnr = lw_way_matnr-matnr
                       werks = lw_way_matnr-werks
                       bwtar = lw_ekpo-bwtar
                       charg = sp_charg.
      if not sy-subrc is initial.
        lw_mcha-matnr = lw_way_matnr-matnr.
        lw_mcha-werks = lw_way_matnr-werks.
        lw_mcha-bwtar = lw_ekpo-bwtar.
        lw_mcha-charg = sp_charg.
        Insert lw_mcha Into Table pt_mcha.
      endif.                                                   "1582729 end

      read table pt_transfer transporting no fields            "1673200 start
          with table key matnr = lw_way_matnr-matnr
                         werks = lw_way_matnr-werks
                         sobkz = lw_way_matnr-sobkz
                         tblsb = gc_value_mbew
                         linkk = sp_sortl
                         bwtar = lw_mbew-bwtar.
      if not sy-subrc is initial.
        lw_transfer-matnr = lw_way_matnr-matnr.
        lw_transfer-werks = lw_way_matnr-werks.
        lw_transfer-sobkz = lw_way_matnr-sobkz.
        lw_transfer-tblsb = gc_value_mbew.
        lw_transfer-linkk = sp_sortl.
        lw_transfer-bwtar = lw_mbew-bwtar.
        insert lw_transfer into table pt_transfer.
      endif.

      Endloop.
      check lv_mbew_ok = abap_true.                            "1673200 end

      loop at pt_mard_mara into lw_mard_mara
          where matnr = lw_way_matnr-matnr
            and werks = lw_way_matnr-werks
            and sobkz = lw_way_matnr-sobkz
            and lgort = gc_str_phantom
            and vbeln = sp_vbeln
            and posnr = sp_posnr
            and pspnr = sp_pspnr.
*                  AND trord = gc_true.
        l_rec_mrd_mara = sy-tabix.
        exit.
      endloop.

      if not sy-subrc is initial.
        read table lt_marc into lw_marc
            with key matnr = lw_way_matnr-matnr
                     werks = lw_way_matnr-werks
            binary search.
        check sy-subrc is initial.

        lw_mard_mara-bwkey = lw_t001w-bwkey.
        lw_mard_mara-matnr = lw_way_matnr-matnr.
        lw_mard_mara-werks = lw_way_matnr-werks.
        lw_mard_mara-sobkz = lw_way_matnr-sobkz.
        lw_mard_mara-vbeln = sp_vbeln.
        lw_mard_mara-posnr = sp_posnr.
        lw_mard_mara-pspnr = sp_pspnr.
        lw_mard_mara-meins = lw_way_matnr-meins.
        lw_mard_mara-lgort = gc_str_phantom.
        lw_mard_mara-xchar = lw_marc-xchar.
        lw_mard_mara-mtart = lw_marc-mtart.
        lw_mard_mara-matkl = lw_marc-matkl.

        lw_mard_mara-trame = lw_way_matnr-menge.
        lw_mard_mara-umlmc = lw_marc-umlmc.
*                lw_mard_mara-trame = lw_marc-trame.
        lw_mard_mara-bwesb = lw_marc-bwesb.                 " ERP2005
        lw_mard_mara-maktx = lw_marc-maktx.
        lw_mard_mara-bismt = lw_marc-bismt.                    "1157518
        insert lw_mard_mara into table pt_mard_mara.

        read table pt_matnr_way transporting no fields
            with key bukrs = lw_t001w-bukrs
                     matnr = lw_way_matnr-matnr
                     bwkey = lw_t001w-bwkey
                     lgort = gc_str_phantom
                     sobkz = lw_way_matnr-sobkz
            binary search.
        if not sy-subrc is initial.
          lw_matnr_way-bukrs = lw_t001w-bukrs.
          lw_matnr_way-matnr = lw_way_matnr-matnr.
          lw_matnr_way-bwkey = lw_t001w-bwkey.
          lw_matnr_way-lgort = gc_str_phantom.
          lw_matnr_way-sobkz = lw_way_matnr-sobkz.
          lw_matnr_way-vbeln = sp_vbeln.
          lw_matnr_way-posnr = sp_posnr.
          lw_matnr_way-pspnr = sp_pspnr.
          insert lw_matnr_way into table pt_matnr_way.
        endif.

      else.
        lw_mard_mara-trame
            = lw_mard_mara-trame + lw_way_matnr-menge.
        lw_mard_mara-umlmc = lw_marc-umlmc.
*                lw_mard_mara-labst =
*                    lw_mard_mara-labst + lt_way_matnr-menge.
        modify pt_mard_mara from lw_mard_mara
            index l_rec_mrd_mara.
      endif.
    endloop.

* customer order stock in transfer
    loop at lt_way_matnr into lw_way_matnr
      where sobkz eq gc_spec_e.
      clear lw_mard_mara.

      read table lt_t001w into lw_t001w
          with key werks = lw_way_matnr-werks
          binary search.
      check sy-subrc is initial.

      clear lw_mssa.                                           "1418079
      read table lt_mssa into lw_mssa
          with key matnr = lw_way_matnr-matnr
                   werks = lw_way_matnr-werks
          binary search.
      check lw_mssa-matkl in so_matkl.
      check lw_mssa-mtart in so_mtart.                         "1418079

      read table pt_ekpo                                       "1673200
          with key matnr = lw_way_matnr-matnr
                   ebeln = lw_way_matnr-ebeln
                   ebelp = lw_way_matnr-ebelp
          binary search transporting no fields.                "1673200
      check sy-subrc is initial.
      lv_index = sy-tabix.                                     "1673200

      read table pt_ekkn into lw_ekkn
          with key ebeln = lw_way_matnr-ebeln
                   ebelp = lw_way_matnr-ebelp
          binary search.
      check sy-subrc is initial.

      lw_mard_mara-tblsb = gc_value_ebew.

      perform linkk_filling                                    "1673200 start
          using lw_way_matnr-sobkz
                lw_ekkn-vbeln
                lw_ekkn-vbelp
                sp_pspnr
                sp_sortl
          changing l_linkk.

      lv_mbew_ok = abap_false.
      Loop At pt_ekpo into lw_ekpo from lv_index.
        if lw_ekpo-matnr ne lw_way_matnr-matnr or
           lw_ekpo-ebeln ne lw_way_matnr-ebeln or
           lw_ekpo-ebelp ne lw_way_matnr-ebelp.
          exit.
        endif.                                                 "1673200 end

      loop at pt_ebew into lw_mbew
          where matnr = lw_way_matnr-matnr
            and bwkey = lw_t001w-bwkey
            and bwtar = lw_ekpo-bwtar
            and bwtty = lw_ekpo-bwtty
            and sobkz = lw_ekpo-sobkz
            and vbeln = lw_ekkn-vbeln
            and posnr = lw_ekkn-vbelp.                      "#EC NEEDED
      endloop.

      if not sy-subrc is initial.                              "1825272 start
        select single
            matnr bwkey bwtar bwtty
            lbkum salk3 bklas vprsv
            stprs peinh kaln1 vbeln posnr sobkz
        from  ebew
        into corresponding fields of lw_mbew
        where matnr = lw_way_matnr-matnr
          and bwkey = lw_t001w-bwkey
          and bwtar = lw_ekpo-bwtar
          and bwtty = lw_ekpo-bwtty
          and sobkz = lw_ekpo-sobkz
          and vbeln = lw_ekkn-vbeln
          and posnr = lw_ekkn-vbelp.
        if sy-subrc is initial.
          insert lw_mbew into table pt_ebew.
          lv_mbew_ok = abap_true.
        else.
*         the stock is not valuated
          continue.
        endif.
      else.
        lv_mbew_ok = abap_true.
      endif.                                                   "1825272 end

*     add empty charg for #### stock without batch number      "1582729 start
      read table pt_mcha transporting no fields
        with table key matnr = lw_way_matnr-matnr
                       werks = lw_way_matnr-werks
                       bwtar = lw_ekpo-bwtar
                       charg = sp_charg.
      if not sy-subrc is initial.
        lw_mcha-matnr = lw_way_matnr-matnr.
        lw_mcha-werks = lw_way_matnr-werks.
        lw_mcha-bwtar = lw_ekpo-bwtar.
        lw_mcha-charg = sp_charg.
        Insert lw_mcha Into Table pt_mcha.
      endif.                                                   "1582729 end

      read table pt_transfer transporting no fields            "1673200 start
        with table key matnr = lw_way_matnr-matnr
                       werks = lw_way_matnr-werks
                       sobkz = lw_way_matnr-sobkz
                       tblsb = gc_value_ebew
                       linkk = l_linkk
                       bwtar = lw_mbew-bwtar.
      if not sy-subrc is initial.
        lw_transfer-matnr = lw_way_matnr-matnr.
        lw_transfer-werks = lw_way_matnr-werks.
        lw_transfer-sobkz = lw_way_matnr-sobkz.
        lw_transfer-tblsb = gc_value_ebew.
        lw_transfer-linkk = l_linkk.
        lw_transfer-bwtar = lw_mbew-bwtar.
        insert lw_transfer into table pt_transfer.
      endif.

      Endloop.
      check lv_mbew_ok = abap_true.                            "1673200 end

      read table pt_mard_mara into lw_mard_mara
          with key matnr = lw_way_matnr-matnr
                   werks = lw_way_matnr-werks
                   sobkz = lw_way_matnr-sobkz
                   lgort = gc_str_phantom
                   vbeln = lw_ekkn-vbeln
                   posnr = lw_ekkn-vbelp
                   pspnr = sp_pspnr
          binary search.

      if not sy-subrc is initial.
        loop at pt_mard_mara assigning <fs_mard_mara>
            where matnr = lw_way_matnr-matnr
              and werks = lw_way_matnr-werks
              and sobkz = lw_way_matnr-sobkz
              and lgort = gc_str_phantom
              and vbeln = lw_ekkn-vbeln
              and posnr = lw_ekkn-vbelp
              and pspnr = sp_pspnr.

          <fs_mard_mara>-trame = 0.
          <fs_mard_mara>-umlmc = 0.
        endloop.

        read table lt_mssa into lw_mssa
            with key matnr = lw_way_matnr-matnr
                     werks = lw_way_matnr-werks
                     sobkz = lw_way_matnr-sobkz
                     vbeln = lw_ekkn-vbeln
                     posnr = lw_ekkn-vbelp
            binary search.

        check sy-subrc is initial.

        lw_mard_mara-bwkey = lw_t001w-bwkey.
        lw_mard_mara-matnr = lw_way_matnr-matnr.
        lw_mard_mara-werks = lw_way_matnr-werks.
        lw_mard_mara-sobkz = lw_way_matnr-sobkz.
        lw_mard_mara-meins = lw_way_matnr-meins.
        lw_mard_mara-lgort = gc_str_phantom.
        lw_mard_mara-vbeln = lw_ekkn-vbeln.
        lw_mard_mara-posnr = lw_ekkn-vbelp.
        lw_mard_mara-pspnr = sp_pspnr.
        lw_mard_mara-xchar = lw_mssa-xchar.

        lw_mard_mara-labst = lw_mssa-satra.
        lw_mard_mara-maktx = lw_mssa-maktx.
        lw_mard_mara-mtart = lw_mssa-mtart.                    "1418079
        lw_mard_mara-matkl = lw_mssa-matkl.                    "1418079
        lw_mard_mara-bismt = lw_mssa-bismt.                    "1157518
        insert lw_mard_mara into table pt_mard_mara.

        read table pt_matnr_way transporting no fields
            with key bukrs = lw_t001w-bukrs
                     matnr = lw_way_matnr-matnr
                     bwkey = lw_t001w-bwkey
                     lgort = gc_str_phantom
                     sobkz = lw_way_matnr-sobkz
                     vbeln = lw_ekkn-vbeln
                     posnr = lw_ekkn-vbelp
                     pspnr = sp_pspnr
            binary search.

        if not sy-subrc is initial.
          lw_matnr_way-bukrs = lw_t001w-bukrs.
          lw_matnr_way-matnr = lw_way_matnr-matnr.
          lw_matnr_way-bwkey = lw_t001w-bwkey.
          lw_matnr_way-lgort = gc_str_phantom.
          lw_matnr_way-sobkz = lw_way_matnr-sobkz.
          lw_matnr_way-vbeln = lw_ekkn-vbeln.
          lw_matnr_way-posnr = lw_ekkn-vbelp.
          lw_matnr_way-pspnr = sp_pspnr.
          insert lw_matnr_way into table pt_matnr_way.
        endif.

      else.
        lw_mard_mara-labst =
            lw_mard_mara-labst + lw_way_matnr-menge.
        modify pt_mard_mara from lw_mard_mara index sy-tabix.
      endif.
    endloop.

* project stock in transfer
    loop at lt_way_matnr into lw_way_matnr
      where sobkz eq gc_spec_q.

      clear lw_mard_mara.

      read table lt_t001w into lw_t001w
          with key werks = lw_way_matnr-werks
          binary search.
      check sy-subrc is initial.

      clear lw_mssq.                                           "1418079
      read table lt_mssq into lw_mssq
          with key matnr = lw_way_matnr-matnr
                   werks = lw_way_matnr-werks
          binary search.
      check lw_mssq-matkl in so_matkl.
      check lw_mssq-mtart in so_mtart.                         "1418079

      read table pt_ekpo                                       "1673200
          with key matnr = lw_way_matnr-matnr
                   ebeln = lw_way_matnr-ebeln
                   ebelp = lw_way_matnr-ebelp
          binary search transporting no fields.                "1673200
      check sy-subrc is initial.
      lv_index = sy-tabix.                                     "1673200

      read table pt_ekkn into lw_ekkn
          with key ebeln = lw_way_matnr-ebeln
                   ebelp = lw_way_matnr-ebelp
          binary search.
      check sy-subrc is initial.

      lw_mard_mara-tblsb = gc_value_qbew.

      perform linkk_filling                                    "1673200 start
          using lw_way_matnr-sobkz
                sp_vbeln
                sp_posnr
                lw_ekkn-ps_psp_pnr
                sp_sortl
          changing l_linkk.

      lv_mbew_ok = abap_false.
      Loop At pt_ekpo into lw_ekpo from lv_index.
        if lw_ekpo-matnr ne lw_way_matnr-matnr or
           lw_ekpo-ebeln ne lw_way_matnr-ebeln or
           lw_ekpo-ebelp ne lw_way_matnr-ebelp.
          exit.
        endif.                                                 "1673200 end

      loop at pt_qbew into lw_mbew
          where matnr = lw_way_matnr-matnr
            and bwkey = lw_t001w-bwkey
            and bwtar = lw_ekpo-bwtar
            and bwtty = lw_ekpo-bwtty
            and sobkz = lw_ekpo-sobkz
            and pspnr = lw_ekkn-ps_psp_pnr.                 "#EC NEEDED
      endloop.

      if not sy-subrc is initial.                              "1825272 start
        select single
            matnr bwkey bwtar bwtty
            lbkum salk3 bklas vprsv
            stprs peinh kaln1 pspnr sobkz
        from  qbew
        into corresponding fields of lw_mbew
        where matnr = lw_way_matnr-matnr
          and bwkey = lw_t001w-bwkey
          and bwtar = lw_ekpo-bwtar
          and bwtty = lw_ekpo-bwtty
          and sobkz = lw_ekpo-sobkz
          and pspnr = lw_ekkn-ps_psp_pnr.
        if sy-subrc is initial.
          insert lw_mbew into table pt_qbew.
          lv_mbew_ok = abap_true.
        else.
*         the stock is not valuated
          continue.
        endif.
      else.
        lv_mbew_ok = abap_true.
      endif.                                                   "1825272 end

*     add empty charg for #### stock without batch number      "1582729 start
      read table pt_mcha transporting no fields
        with table key matnr = lw_way_matnr-matnr
                       werks = lw_way_matnr-werks
                       bwtar = lw_ekpo-bwtar
                       charg = sp_charg.
      if not sy-subrc is initial.
        lw_mcha-matnr = lw_way_matnr-matnr.
        lw_mcha-werks = lw_way_matnr-werks.
        lw_mcha-bwtar = lw_ekpo-bwtar.
        lw_mcha-charg = sp_charg.
        Insert lw_mcha Into Table pt_mcha.
      endif.                                                   "1582729 end

      read table pt_transfer transporting no fields            "1673200 start
          with table key matnr = lw_way_matnr-matnr
                         werks = lw_way_matnr-werks
                         sobkz = lw_way_matnr-sobkz
                         tblsb = gc_value_qbew
                         linkk = l_linkk
                         bwtar = lw_mbew-bwtar.

      if not sy-subrc is initial.
        lw_transfer-matnr = lw_way_matnr-matnr.
        lw_transfer-werks = lw_way_matnr-werks.
        lw_transfer-sobkz = lw_way_matnr-sobkz.
        lw_transfer-tblsb = gc_value_qbew.
        lw_transfer-linkk = l_linkk.
        lw_transfer-bwtar = lw_mbew-bwtar.
        insert lw_transfer into table pt_transfer.
      endif.

      Endloop.
      check lv_mbew_ok = abap_true.                            "1673200 end

      read table pt_mard_mara into lw_mard_mara
          with key matnr = lw_way_matnr-matnr
                   werks = lw_way_matnr-werks
                   sobkz = lw_way_matnr-sobkz
                   lgort = gc_str_phantom
                   vbeln = sp_vbeln
                   posnr = sp_posnr
                   pspnr = lw_ekkn-ps_psp_pnr
          binary search.

      if not sy-subrc is initial.
        loop at pt_mard_mara assigning <fs_mard_mara>
            where matnr = lw_way_matnr-matnr
              and werks = lw_way_matnr-werks
              and sobkz = lw_way_matnr-sobkz
              and lgort = gc_str_phantom
              and vbeln = sp_vbeln
              and posnr = sp_posnr
              and pspnr = lw_ekkn-ps_psp_pnr.

          <fs_mard_mara>-trame = 0.
          <fs_mard_mara>-umlmc = 0.
        endloop.

        read table lt_mssq into lw_mssq
            with key matnr = lw_way_matnr-matnr
                     werks = lw_way_matnr-werks
                     sobkz = lw_way_matnr-sobkz
                     pspnr = lw_ekkn-ps_psp_pnr
            binary search.

        check sy-subrc is initial.

        lw_mard_mara-bwkey = lw_t001w-bwkey.
        lw_mard_mara-matnr = lw_way_matnr-matnr.
        lw_mard_mara-werks = lw_way_matnr-werks.
        lw_mard_mara-sobkz = lw_way_matnr-sobkz.
        lw_mard_mara-meins = lw_way_matnr-meins.
        lw_mard_mara-lgort = gc_str_phantom.
        lw_mard_mara-vbeln = sp_vbeln.
        lw_mard_mara-posnr = sp_posnr.
        lw_mard_mara-pspnr = lw_ekkn-ps_psp_pnr.
        lw_mard_mara-xchar = lw_mssq-xchar.

        lw_mard_mara-labst = lw_mssq-sqtra.
        lw_mard_mara-maktx = lw_mssq-maktx.
        lw_mard_mara-mtart = lw_mssq-mtart.                    "1418079
        lw_mard_mara-matkl = lw_mssq-matkl.                    "1418079
        lw_mard_mara-bismt = lw_mssq-bismt.                    "1157518
        insert lw_mard_mara into table pt_mard_mara.

        read table pt_matnr_way transporting no fields
            with key bukrs = lw_t001w-bukrs
                     matnr = lw_way_matnr-matnr
                     bwkey = lw_t001w-bwkey
                     lgort = gc_str_phantom
                     sobkz = lw_way_matnr-sobkz
                     vbeln = sp_vbeln
                     posnr = sp_posnr
                     pspnr = lw_ekkn-ps_psp_pnr
            binary search.
        if not sy-subrc is initial.
          lw_matnr_way-bukrs = lw_t001w-bukrs.
          lw_matnr_way-matnr = lw_way_matnr-matnr.
          lw_matnr_way-bwkey = lw_t001w-bwkey.
          lw_matnr_way-lgort = gc_str_phantom.
          lw_matnr_way-sobkz = lw_way_matnr-sobkz.
          lw_matnr_way-vbeln = sp_vbeln.
          lw_matnr_way-posnr = sp_posnr.
          lw_matnr_way-pspnr = lw_ekkn-ps_psp_pnr.
          insert lw_matnr_way into table pt_matnr_way.
        endif.

      else.
        lw_mard_mara-labst =
            lw_mard_mara-labst + lw_way_matnr-menge.
        modify pt_mard_mara from lw_mard_mara index sy-tabix.
      endif.
    endloop.

  endif.

  clear l_rec.

  loop at pt_mard_mara assigning <fs_mard_mara>             "#EC CI_XYZ
      where not umlmc is initial
         or not umlme is initial
         or not trame is initial.                           "#EC CI_XYZ

    check not <fs_mard_mara>-lgort is initial.

    if <fs_mard_mara>-lgort ne gc_str_phantom.

      read table lt_t001w into lw_t001w
          with key werks = <fs_mard_mara>-werks
          binary search.
      check sy-subrc is initial.

      read table pt_matnr_way transporting no fields
          with key bukrs = lw_t001w-bukrs
                   matnr = <fs_mard_mara>-matnr
                   bwkey = <fs_mard_mara>-bwkey
                   lgort = gc_str_phantom
          binary search.
      if not sy-subrc is initial.
        lw_matnr_way-bukrs = lw_t001w-bukrs.
        lw_matnr_way-matnr = <fs_mard_mara>-matnr.
        lw_matnr_way-bwkey = <fs_mard_mara>-bwkey.
        lw_matnr_way-lgort = gc_str_phantom.
        insert lw_matnr_way into table pt_matnr_way.
      endif.
    else.
      continue.
    endif.

    read table lt_mard_mara transporting no fields
        with key werks = <fs_mard_mara>-werks
                 matnr = <fs_mard_mara>-matnr
        binary search.

    check not sy-subrc is initial.

    l_rec = l_rec + 1.

    lw_mard_mara = <fs_mard_mara>.
    lw_mard_mara-umlmc = <fs_mard_mara>-umlmc.
    lw_mard_mara-umlme = <fs_mard_mara>-umlme.                 "1251769
*         +  <fs_mard_mara>-umlme
*         +  <fs_mard_mara>-trame.
    lw_mard_mara-trame = <fs_mard_mara>-trame.

*    <fs_mard_mara>-umlmc = 0.
*    <fs_mard_mara>-trame = 0.

    lw_mard_mara-lgort = gc_str_phantom .

    insert lw_mard_mara into table lt_mard_mara.

  endloop.

  if not l_rec is initial.
    loop at lt_mard_mara into lw_mard_mara.
      read table pt_mard_mara assigning <fs_mard_mara>
          with key
              matnr = lw_mard_mara-matnr
              werks = lw_mard_mara-werks
              sobkz = lw_mard_mara-sobkz
              lgort = lw_mard_mara-lgort
              vbeln = lw_mard_mara-vbeln
              posnr = lw_mard_mara-posnr
              pspnr = lw_mard_mara-pspnr
              sortl = lw_mard_mara-sortl
          binary search.
      if sy-subrc is initial.
        <fs_mard_mara>-labst = <fs_mard_mara>-labst +
             lw_mard_mara-labst.
      else.
        insert lw_mard_mara into table pt_mard_mara.
      endif.
    endloop.
    refresh lt_mard_mara. free lt_mard_mara.
  endif.

  select
      v~matnr v~werks v~bwtty v~bwkey
      v~xchar v~trame v~umlmc           "\ADD-ONs C-CIS,
      v~meins v~mtart v~matkl v~bismt           "/
      mat_text~maktx
      from j_3rm_marcmara_w as v
          left join makt as mat_text
               on v~matnr = mat_text~matnr and
                  mat_text~spras = sy-langu
      into corresponding fields of table lt_marc
      where v~werks in so_werks
        and v~matnr in p_so_matnr
        and v~matkl in so_matkl                                "1418079
        and v~mtart in so_mtart                                "1418079
        and v~umlmc > 0.      "#EC CI_BUFFJOIN

  if sy-subrc is initial.
    loop at lt_marc into lw_marc.
      read table pt_mard_mara assigning <fs_mard_mara>
          with key
              matnr = lw_marc-matnr
              werks = lw_marc-werks
          binary search.
      if not sy-subrc is initial.
        clear lw_mard_mara.                                    "1251769
        lw_mard_mara-bwkey = lw_marc-bwkey.
        lw_mard_mara-matnr = lw_marc-matnr.
        lw_mard_mara-werks = lw_marc-werks.
        lw_mard_mara-vbeln = sp_vbeln.
        lw_mard_mara-posnr = sp_posnr.
        lw_mard_mara-pspnr = sp_pspnr.
        lw_mard_mara-meins = lw_marc-meins.
        lw_mard_mara-lgort = gc_str_phantom.
        lw_mard_mara-xchar = lw_marc-xchar.
        lw_mard_mara-mtart = lw_marc-mtart.
        lw_mard_mara-matkl = lw_marc-matkl.
        lw_mard_mara-trame = lw_marc-umlmc.
        lw_mard_mara-maktx = lw_marc-maktx.
*            lw_mard_mara-trame = lw_marc-trame.
*            lw_mard_mara-bwesb = lw_marc-bwesb.     " ERP2005
        lw_mard_mara-bismt = lw_marc-bismt.                    "1157518

        insert lw_mard_mara into table pt_mard_mara.
      endif.
      read table pt_mbew transporting no fields
          with key
              matnr = lw_marc-matnr
              bwkey = lw_marc-bwkey.
      if not sy-subrc is initial.
        select
            matnr bwkey bwtar bwtty
            lbkum salk3 bklas vprsv
            stprs peinh kaln1
        from mbew
            appending table pt_mbew
         where matnr  = lw_marc-matnr
           and bwkey = lw_marc-bwkey.
      endif.
    endloop.
  endif.


endform.           " transfer_stock
*&---------------------------------------------------------------------*
*&      Form  transfer_stock_check_upd
*&---------------------------------------------------------------------*
form transfer_stock_check_upd
    tables pt_listmat type tt_listmat
    using p_werks     type werks_d
          pp_listmat  type j_3rmlistmatw
          p_charg     type charg_d                             "1114541
    changing pt_transfer type tt_transfer.

  data:
      lw_listmat  type type_listmat,
      lw_transfer type type_transfer.

*  read table pt_transfer transporting no fields
*      with table key matnr = pp_listmat-xmatnr
*                     werks = p_werks
*                     tblsb = pp_listmat-tblsb
*                     sobkz = pp_listmat-sobkz
*                     linkk = pp_listmat-linkk
*                     bwtar = pp_listmat-bwtar.
*
*  if sy-subrc is initial.
*    exit.
*  endif.

  read table pt_listmat into lw_listmat
      with key xmatnr = pp_listmat-xmatnr
               bwtar = pp_listmat-bwtar
               werk  = p_werks
               lgort = gc_str_phantom
               charg = p_charg                                 "1114541
               sobkz = pp_listmat-sobkz
               tblsb = pp_listmat-tblsb
               linkk = pp_listmat-linkk.

  if sy-subrc is initial.
    lw_transfer-matnr = pp_listmat-xmatnr.
    lw_transfer-werks = p_werks.
    lw_transfer-sobkz = pp_listmat-sobkz.
    lw_transfer-tblsb = pp_listmat-tblsb.
    lw_transfer-linkk = pp_listmat-linkk.
    lw_transfer-bwtar = pp_listmat-bwtar.

    insert lw_transfer into table pt_transfer.
    exit.
  endif.

  read table pt_listmat into lw_listmat
      with key xmatnr = pp_listmat-xmatnr
               bwtar = pp_listmat-bwtar
               werk  = p_werks
               sobkz = pp_listmat-sobkz
               tblsb = pp_listmat-tblsb
               linkk = pp_listmat-linkk.

  if sy-subrc is initial.


    perform link_field_filling
        using pp_listmat-sobkz
              pp_listmat-xmatnr
              pp_listmat-bwtar
              p_werks
              gc_str_phantom
              p_charg                                          "1114541
              pp_listmat-sortl
              pp_listmat-pspnr
              pp_listmat-vbeln
              pp_listmat-posnr
        changing lw_listmat-linkk
                 lw_listmat-field_link.

    clear: lw_listmat-begremn, lw_listmat-endremn,
           lw_listmat-deltlbkumd, lw_listmat-deltlbkumk,
           lw_listmat-lbkum, lw_listmat-banner_doc.            "1418079

    lw_listmat-lgort = gc_str_phantom.
    lw_listmat-charg = p_charg.                                "1114541

    append lw_listmat to pt_listmat.

    lw_transfer-matnr = pp_listmat-xmatnr.
    lw_transfer-werks = p_werks.
    lw_transfer-sobkz = pp_listmat-sobkz.
    lw_transfer-tblsb = pp_listmat-tblsb.
    lw_transfer-linkk = pp_listmat-linkk.

    insert lw_transfer into table pt_transfer.
  endif.

endform.                    " transfer_stock_check_upd

*&---------------------------------------------------------------------*
*&      Form  mard_marc_getting
*&---------------------------------------------------------------------*
form mard_marc_getting
    using
          pt_matnr         type tt_so_matnr
    changing pt_mard_mara  type tt_mard_mara
          pt_select_lgort  type tt_select_lgort
          pt_select_charg  type tt_select_charg
          pt_select_bwkey  type tt_select_bwkey
          pt_select_matnr  type tt_select_matnr                "1384361
          pt_so_bwkey      type tt_so_bwkey.                   "1384361

  data:
      lw_mard_mara      type type_mard_mara,
      lw_select_lgort   like line of pt_select_lgort,
      lw_select_matnr   like line of pt_select_matnr,          "1384361
      lw_bwkey          like line of pt_so_bwkey,              "1384361
      lw_select_bwkey   like line of pt_select_bwkey.

  get time stamp field g_time_mard_b.

  perform fetch_mard_marc
    using
          pt_matnr
    changing pt_mard_mara.

  get time stamp field g_time_mard_e.

  lw_bwkey-sign   = gc_sign_i.                                 "1384361
  lw_bwkey-option = gc_option_eq.                              "1384361
  loop at pt_mard_mara into lw_mard_mara.
    fill_select_bwkey lw_mard_mara-bwkey.
    fill_select_matnr lw_mard_mara-matnr.                      "1384361
*   material filter of storage table
    fill_select_lgort lw_mard_mara-lgort.
  endloop.

endform.                    " mard_marc_getting
*&---------------------------------------------------------------------*
*&      Form  fetch_mard_marc
*&---------------------------------------------------------------------*
form fetch_mard_marc
    using
             pt_matnr         type tt_so_matnr
    changing pt_mard_mara  type tt_mard_mara.               "#EC NEEDED

  data:
      matnr_cond        type string,                           "1417445
      ls_matnr          like line of pt_matnr,
      lv_matnr_nmb      type i,
      from_cond         type string,
      bukrs_cond        type string.

  Describe table pt_matnr Lines lv_matnr_nmb.
  If lv_matnr_nmb = 1.
    Read table pt_matnr Into ls_matnr index 1.
    If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
      matnr_cond = 'v~matnr = ls_matnr-low'.
    Endif.
  Endif.
  If matnr_cond is initial.
    matnr_cond = 'v~matnr in pt_matnr'.
  Endif.

  If pa_bukrs is not initial.
    from_cond = 'j_3rm_marcmara_b'.
    bukrs_cond = 'v~bukrs = pa_bukrs'.
  Else.
    from_cond = 'j_3rm_marcmara_w'.
  Endif.
  concatenate from_cond 'as v inner join mard as a'
    'on v~matnr = a~matnr and v~werks = a~werks'
    'left join makt as mat_text'
    'on v~matnr = mat_text~matnr and mat_text~spras = sy-langu'
    into from_cond separated by space.                         "1417445

  select distinct
       v~matnr v~werks v~bwkey
       v~meins v~mtart v~matkl v~bismt
       v~xchar v~trame v~umlmc v~bwesb
       v~bwtty v~ekgrp

       a~lgort a~labst a~umlme a~insme a~einme
       a~speme a~retme
       a~klabs a~kinsm a~keinm a~kspem
       mat_text~maktx
       from (from_cond)                                        "1417445
       into corresponding fields of table pt_mard_mara
         where
         (bukrs_cond) and                                      "1417445
         (matnr_cond) and                                      "1417445
         v~werks in so_werks and
         v~matkl in so_matkl and
         v~mtart in so_mtart.

endform.                    " fetch_mard_marc

*&---------------------------------------------------------------------*
*&      Form  msku_getting
*&---------------------------------------------------------------------*
form msku_getting
    using
          pt_matnr         type tt_so_matnr
    changing pt_msku       type tt_msku
          pt_mard_mara     type tt_mard_mara
          pt_select_lgort  type tt_select_lgort
          pt_select_charg  type tt_select_charg
          pt_select_bwkey  type tt_select_bwkey
          pt_select_matnr  type tt_select_matnr                "1384361
          pt_so_bwkey      type tt_so_bwkey.                   "1384361

  data:
      lw_select_lgort   type type_select_lgort,
      lw_select_charg   type type_select_charg,
      lw_select_bwkey   like line of pt_select_bwkey,
      lw_select_matnr   like line of pt_select_matnr,          "1384361
      lw_bwkey          like line of pt_so_bwkey,              "1384361
      lw_msku           type type_msku,
      lw_mard_mara      type type_mard_mara.

  get time stamp field g_time_msku_b.

  perform fetch_msku
      using
            pt_matnr
      changing
            pt_msku.

  get time stamp field g_time_msku_e.

  if sy-subrc is initial.
    lw_bwkey-sign   = gc_sign_i.                               "1384361
    lw_bwkey-option = gc_option_eq.                            "1384361
    loop at pt_msku into lw_msku.
      clear lw_mard_mara.
      lw_mard_mara-matnr = lw_msku-matnr.
      lw_mard_mara-werks = lw_msku-werks.
      lw_mard_mara-lgort = gc_str_phantom.
      lw_mard_mara-charg = lw_msku-charg.
      lw_mard_mara-bwkey = lw_msku-bwkey.
      lw_mard_mara-meins = lw_msku-meins.
      lw_mard_mara-sobkz = lw_msku-sobkz.
      lw_mard_mara-speci
          = lw_msku-kulab + lw_msku-kuins.
      lw_mard_mara-xchar = lw_msku-xchar.
      lw_mard_mara-vbeln = sp_vbeln.
      lw_mard_mara-posnr = sp_posnr.
      lw_mard_mara-pspnr = sp_pspnr.
      lw_mard_mara-sortl = lw_msku-kunnr.
      lw_mard_mara-tblsb = gc_value_mbew.
      lw_mard_mara-mtart = lw_msku-mtart.
      lw_mard_mara-matkl = lw_msku-matkl.
      lw_mard_mara-ekgrp = lw_msku-ekgrp.
      lw_mard_mara-maktx = lw_msku-maktx.
      lw_mard_mara-bismt = lw_msku-bismt.                      "1157518
      insert lw_mard_mara into table pt_mard_mara.
      fill_select_bwkey lw_mard_mara-bwkey.
      fill_select_matnr lw_mard_mara-matnr.                    "1384361
      fill_select_lgort lw_mard_mara-lgort.
      fill_select_charg lw_mard_mara-charg.
    endloop.
  endif.

endform.                    " msku_getting
*&---------------------------------------------------------------------*
*&      Form  fetch_msku
*&---------------------------------------------------------------------*
form fetch_msku
    using
          pt_matnr         type tt_so_matnr
    changing pt_msku  type tt_msku.

  data:
      matnr_cond        type string,                           "1417445
      ls_matnr          like line of pt_matnr,
      lv_matnr_nmb      type i,
      from_cond         type string,
      bukrs_cond        type string.

  Describe table pt_matnr Lines lv_matnr_nmb.
  If lv_matnr_nmb = 1.
    Read table pt_matnr Into ls_matnr index 1.
    If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
      matnr_cond = 'v~matnr = ls_matnr-low'.
    Endif.
  Endif.
  If matnr_cond is initial.
    matnr_cond = 'v~matnr in pt_matnr'.
  Endif.

  If pa_bukrs is not initial.
    from_cond = 'j_3rm_marcmara_b'.
    bukrs_cond = 'v~bukrs = pa_bukrs'.
  Else.
    from_cond = 'j_3rm_marcmara_w'.
  Endif.
  concatenate from_cond 'as v inner join msku as a'
    'on v~matnr = a~matnr and v~werks = a~werks'
    'left join makt as mat_text'
    'on v~matnr = mat_text~matnr and mat_text~spras = sy-langu'
    into from_cond separated by space.                         "1417445

  select distinct
    v~matnr v~werks v~bwkey
    a~charg a~sobkz a~kunnr
    a~lfgja a~lfmon a~kuspr a~kulab
    a~kuins a~kuvla a~kuvin
    v~meins v~mtart v~matkl
    v~xchar
    v~ekgrp v~bismt                                            "1157518
    mat_text~maktx
     from (from_cond)                                          "1417445
     into table pt_msku
        where
    (bukrs_cond) and                                           "1417445
    (matnr_cond) and                                           "1417445
    v~werks in so_werks and
    v~matkl in so_matkl and
    v~mtart in so_mtart.
*   a~kunnr in so_kunnr.                                       "1494542 start
*   All customers should be processed for correct calculation
*   of stock values (summed up to get plant value)             "1494542 end

endform.                    " fetch_msku
*&---------------------------------------------------------------------*
*&      Form  mslb_getting
*&---------------------------------------------------------------------*
form mslb_getting
    using
          pt_matnr         type tt_so_matnr
    changing
          pt_mslb          type tt_mslb
          pt_mard_mara     type tt_mard_mara
          pt_select_lgort  type tt_select_lgort
          pt_select_charg  type tt_select_charg
          pt_select_bwkey  type tt_select_bwkey
          pt_select_matnr  type tt_select_matnr                "1384361
          pt_so_bwkey      type tt_so_bwkey.                   "1384361

  data:
      lw_select_lgort   type type_select_lgort,
      lw_select_charg   type type_select_charg,
      lw_select_bwkey   like line of pt_select_bwkey,
      lw_select_matnr   like line of pt_select_matnr,          "1384361
      lw_bwkey          like line of pt_so_bwkey,              "1384361
      lw_mslb           type type_mslb,
      lw_mard_mara      type type_mard_mara.

  get time stamp field g_time_mslb_b.

  perform fetch_mslb
      using
            pt_matnr
      changing
            pt_mslb.

  get time stamp field g_time_mslb_e.

  if sy-subrc is initial.
    lw_bwkey-sign   = gc_sign_i.                               "1384361
    lw_bwkey-option = gc_option_eq.                            "1384361
    loop at pt_mslb into lw_mslb.
      clear lw_mard_mara.
      lw_mard_mara-matnr = lw_mslb-matnr.
      lw_mard_mara-werks = lw_mslb-werks.
      lw_mard_mara-lgort = gc_str_phantom.
      lw_mard_mara-charg = lw_mslb-charg.
      lw_mard_mara-bwkey = lw_mslb-bwkey.
      lw_mard_mara-meins = lw_mslb-meins.
      lw_mard_mara-sobkz = lw_mslb-sobkz.
      lw_mard_mara-speci
          = lw_mslb-lblab + lw_mslb-lbins.
      lw_mard_mara-xchar = lw_mslb-xchar.
      lw_mard_mara-vbeln = sp_vbeln.
      lw_mard_mara-posnr = sp_posnr.
      lw_mard_mara-pspnr = sp_pspnr.
      lw_mard_mara-sortl = lw_mslb-lifnr.
      lw_mard_mara-tblsb = gc_value_mbew.
      lw_mard_mara-mtart = lw_mslb-mtart.
      lw_mard_mara-matkl = lw_mslb-matkl.
      lw_mard_mara-ekgrp = lw_mslb-ekgrp.
      lw_mard_mara-maktx = lw_mslb-maktx.
      lw_mard_mara-bismt = lw_mslb-bismt.                      "1157518
      insert lw_mard_mara into table pt_mard_mara.
      fill_select_bwkey lw_mard_mara-bwkey.
      fill_select_matnr lw_mard_mara-matnr.                    "1384361
      fill_select_lgort lw_mard_mara-lgort.
      fill_select_charg lw_mard_mara-charg.
    endloop.
  endif.

endform.                    " mslb_getting
*&---------------------------------------------------------------------*
*&      Form  fetch_mslb
*&---------------------------------------------------------------------*
form fetch_mslb
    using
          pt_matnr         type tt_so_matnr
    changing pt_mslb  type tt_mslb.                         "#EC NEEDED

  data:
      matnr_cond        type string,                           "1417445
      ls_matnr          like line of pt_matnr,
      lv_matnr_nmb      type i,
      from_cond         type string,
      bukrs_cond        type string.

  Describe table pt_matnr Lines lv_matnr_nmb.
  If lv_matnr_nmb = 1.
    Read table pt_matnr Into ls_matnr index 1.
    If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
      matnr_cond = 'v~matnr = ls_matnr-low'.
    Endif.
  Endif.
  If matnr_cond is initial.
    matnr_cond = 'v~matnr in pt_matnr'.
  Endif.

  If pa_bukrs is not initial.
    from_cond = 'j_3rm_marcmara_b'.
    bukrs_cond = 'v~bukrs = pa_bukrs'.
  Else.
    from_cond = 'j_3rm_marcmara_w'.
  Endif.
  concatenate from_cond 'as v inner join mslb as a'
    'on v~matnr = a~matnr and v~werks = a~werks'
    'left join makt as mat_text'
    'on v~matnr = mat_text~matnr and mat_text~spras = sy-langu'
    into from_cond separated by space.                         "1417445

  select distinct
      v~matnr v~werks v~bwkey
      a~charg a~sobkz a~lifnr
      a~lblab a~lbins
      v~meins v~mtart v~matkl
      v~xchar
      v~ekgrp v~bismt                                          "1157518
      mat_text~maktx
      from (from_cond)                                         "1417445
      into table pt_mslb
        where
      (bukrs_cond) and                                         "1417445
      (matnr_cond) and                                         "1417445
      v~werks in so_werks and
      v~matkl in so_matkl and
      v~mtart in so_mtart.
*     a~lifnr in so_lifnr.                                     "1494542 start
*     All vendors should be processed for correct calculation
*     of stock values (summed up to get plant value)           "1494542 end

endform.                    " fetch_mslb
*&---------------------------------------------------------------------*
*&      Form  mska_getting
*&---------------------------------------------------------------------*
form mska_getting
    using
          pt_matnr         type tt_so_matnr
    changing
          pt_mska          type tt_mska
          pt_mard_mara     type tt_mard_mara
          pt_select_lgort  type tt_select_lgort
          pt_select_charg  type tt_select_charg
          pt_select_bwkey  type tt_select_bwkey
          pt_select_matnr  type tt_select_matnr                "1384361
          pt_so_bwkey      type tt_so_bwkey.                   "1384361

  data:
      lw_select_lgort   type type_select_lgort,
      lw_select_charg   type type_select_charg,
      lw_select_bwkey   like line of pt_select_bwkey,
      lw_select_matnr   like line of pt_select_matnr,          "1384361
      lw_bwkey          like line of pt_so_bwkey,              "1384361
      lw_mska           type type_mska,
      lw_mard_mara      type type_mard_mara.

  get time stamp field g_time_mska_b.

  perform fetch_mska
      using
            pt_matnr
    changing pt_mska.

  get time stamp field g_time_mska_e.

  if sy-subrc is initial.
    lw_bwkey-sign   = gc_sign_i.                               "1384361
    lw_bwkey-option = gc_option_eq.                            "1384361
    loop at pt_mska into lw_mska.
*test valuated stock
      clear lw_mard_mara.
*werks matnr sobkz lgort vbeln posnr pspnr sortl
      lw_mard_mara-werks = lw_mska-werks.
      lw_mard_mara-matnr = lw_mska-matnr.
      lw_mard_mara-sobkz = lw_mska-sobkz.
      lw_mard_mara-charg = lw_mska-charg.
      lw_mard_mara-lgort = lw_mska-lgort.
      lw_mard_mara-vbeln = lw_mska-vbeln.
      lw_mard_mara-posnr = lw_mska-posnr.
      lw_mard_mara-pspnr = sp_pspnr.
      lw_mard_mara-sortl = sp_sortl.
      lw_mard_mara-bwkey = lw_mska-bwkey.
      lw_mard_mara-meins = lw_mska-meins.
      lw_mard_mara-speci
            = lw_mska-kalab + lw_mska-kains.
      lw_mard_mara-xchar = lw_mska-xchar.
      lw_mard_mara-tblsb = gc_value_ebew.
      lw_mard_mara-mtart = lw_mska-mtart.
      lw_mard_mara-matkl = lw_mska-matkl.
      lw_mard_mara-ekgrp = lw_mska-ekgrp.
      lw_mard_mara-maktx = lw_mska-maktx.
      lw_mard_mara-bismt = lw_mska-bismt.                      "1157518
      insert lw_mard_mara into table pt_mard_mara.
      fill_select_bwkey lw_mard_mara-bwkey.
      fill_select_matnr lw_mard_mara-matnr.                    "1384361
      fill_select_lgort lw_mard_mara-lgort.
      fill_select_charg lw_mard_mara-charg.
    endloop.
    clear: lw_mska.
  endif.

endform.                    " mska_getting
*&---------------------------------------------------------------------*
*&      Form  fetch_mska
*&---------------------------------------------------------------------*
form fetch_mska
    using
          pt_matnr         type tt_so_matnr
    changing pt_mska  type tt_mska.                         "#EC NEEDED

  data:
      matnr_cond        type string,                           "1417445
      ls_matnr          like line of pt_matnr,
      lv_matnr_nmb      type i,
      from_cond         type string,
      bukrs_cond        type string.

  Describe table pt_matnr Lines lv_matnr_nmb.
  If lv_matnr_nmb = 1.
    Read table pt_matnr Into ls_matnr index 1.
    If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
      matnr_cond = 'v~matnr = ls_matnr-low'.
    Endif.
  Endif.
  If matnr_cond is initial.
    matnr_cond = 'v~matnr in pt_matnr'.
  Endif.

  If pa_bukrs is not initial.
    from_cond = 'j_3rm_marcmara_b'.
    bukrs_cond = 'v~bukrs = pa_bukrs'.
  Else.
    from_cond = 'j_3rm_marcmara_w'.
  Endif.
  concatenate from_cond 'as v inner join mska as a'
    'on v~matnr = a~matnr and v~werks = a~werks'
    'left join makt as mat_text'
    'on v~matnr = mat_text~matnr and mat_text~spras = sy-langu'
    into from_cond separated by space.                         "1417445

  select distinct
      v~matnr v~werks v~bwkey a~lgort
      a~charg a~sobkz a~vbeln a~posnr
      a~kalab a~kains a~kaspe v~meins
      v~mtart v~matkl
      v~xchar
      v~ekgrp v~bismt                                          "1157518
      mat_text~maktx
      from (from_cond)                                         "1417445
      into table pt_mska
        where
        (bukrs_cond) and                                       "1417445
        (matnr_cond) and                                       "1417445
        v~werks in so_werks and
        v~matkl in so_matkl and
        v~mtart in so_mtart and
        a~sobkz = gc_spec_e and                                "1859566
        a~vbeln in so_vbeln.

endform.                    " fetch_mska
*&---------------------------------------------------------------------*
*&      Form  mspr_getting
*&---------------------------------------------------------------------*
form mspr_getting
    using
          pt_matnr    type tt_so_matnr
    changing
          pt_mspr          type tt_mspr
          pt_mard_mara     type tt_mard_mara
          pt_select_lgort  type tt_select_lgort
          pt_select_charg  type tt_select_charg
          pt_select_bwkey  type tt_select_bwkey
          pt_select_matnr  type tt_select_matnr                "1384361
          pt_so_bwkey      type tt_so_bwkey.                   "1384361

  data:
      lw_select_lgort   type type_select_lgort,
      lw_select_charg   type type_select_charg,
      lw_select_bwkey   like line of pt_select_bwkey,
      lw_select_matnr   like line of pt_select_matnr,          "1384361
      lw_bwkey          like line of pt_so_bwkey,              "1384361
      lw_mspr           type type_mspr,
      lw_mard_mara      type type_mard_mara.

  get time stamp field g_time_mspr_b.

  perform fetch_mspr
      using
            pt_matnr
      changing
            pt_mspr.

  get time stamp field g_time_mspr_e.
  if sy-subrc is initial.
    lw_bwkey-sign   = gc_sign_i.                               "1384361
    lw_bwkey-option = gc_option_eq.                            "1384361
    loop at pt_mspr into lw_mspr.
      clear lw_mard_mara.
      lw_mard_mara-matnr = lw_mspr-matnr.
      lw_mard_mara-werks = lw_mspr-werks.
      lw_mard_mara-lgort = lw_mspr-lgort.
      lw_mard_mara-charg = lw_mspr-charg.
      lw_mard_mara-bwkey = lw_mspr-bwkey.
      lw_mard_mara-meins = lw_mspr-meins.
      lw_mard_mara-sobkz = lw_mspr-sobkz.
      lw_mard_mara-speci
          = lw_mspr-prlab + lw_mspr-prins + lw_mspr-prspe.
      lw_mard_mara-xchar = lw_mspr-xchar.
      lw_mard_mara-vbeln = sp_vbeln.
      lw_mard_mara-posnr = sp_posnr.
      lw_mard_mara-pspnr = lw_mspr-pspnr.
      lw_mard_mara-sortl = sp_sortl.
      lw_mard_mara-tblsb = gc_value_qbew.
      lw_mard_mara-mtart = lw_mspr-mtart.
      lw_mard_mara-matkl = lw_mspr-matkl.
      lw_mard_mara-ekgrp = lw_mspr-ekgrp.
      lw_mard_mara-maktx = lw_mspr-maktx.
      lw_mard_mara-bismt = lw_mspr-bismt.                      "1157518
      insert lw_mard_mara into table pt_mard_mara.
      fill_select_bwkey lw_mard_mara-bwkey.
      fill_select_matnr lw_mard_mara-matnr.                    "1384361
*list material at warehouse table
      fill_select_lgort lw_mard_mara-lgort.
      fill_select_charg lw_mard_mara-charg.
    endloop.
    clear: lw_mspr.
  endif.

endform.                    " mspr_getting
*&---------------------------------------------------------------------*
*&      Form  fetch_mspr
*&---------------------------------------------------------------------*
form fetch_mspr
    using
          pt_matnr    type tt_so_matnr
    changing pt_mspr  type tt_mspr.                         "#EC NEEDED

  data:
      matnr_cond        type string,                           "1417445
      ls_matnr          like line of pt_matnr,
      lv_matnr_nmb      type i,
      from_cond         type string,
      bukrs_cond        type string.

  Describe table pt_matnr Lines lv_matnr_nmb.
  If lv_matnr_nmb = 1.
    Read table pt_matnr Into ls_matnr index 1.
    If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
      matnr_cond = 'v~matnr = ls_matnr-low'.
    Endif.
  Endif.
  If matnr_cond is initial.
    matnr_cond = 'v~matnr in pt_matnr'.
  Endif.

  If pa_bukrs is not initial.
    from_cond = 'j_3rm_marcmara_b'.
    bukrs_cond = 'v~bukrs = pa_bukrs'.
  Else.
    from_cond = 'j_3rm_marcmara_w'.
  Endif.
  concatenate from_cond 'as v inner join mspr as a'
    'on v~matnr = a~matnr and v~werks = a~werks'
    'left join makt as mat_text'
    'on v~matnr = mat_text~matnr and mat_text~spras = sy-langu'
    into from_cond separated by space.                         "1417445

  select distinct
      v~matnr v~werks v~bwkey a~lgort
      a~charg a~sobkz a~pspnr
      a~prlab a~prins a~prspe a~prein v~meins
      v~mtart v~matkl
      v~xchar v~ekgrp v~bismt                                  "1157518
      mat_text~maktx
      from (from_cond)                                         "1417445
      into table pt_mspr
        where
        (bukrs_cond) and                                       "1417445
        (matnr_cond) and                                       "1417445
        v~werks in so_werks and
        v~matkl in so_matkl and
        v~mtart in so_mtart and
        a~pspnr in ( select pspnr from prps where posid in so_posid ).

endform.                    " fetch_mspr
*&---------------------------------------------------------------------*
*&      Form  mbew_getting
*&---------------------------------------------------------------------*
form mbew_getting
  using
        pt_bwkey     type tt_select_bwkey
        pt_so_bwkey  type tt_so_bwkey                          "1384361
        pt_sel_matnr type tt_select_matnr                      "1384361
        pt_matnr     type tt_so_matnr
        pt_so_bwtar  type tt_so_bwtar                          "1247791
  changing ppt_mbew  type tt_mbew.                          "#EC NEEDED

  data: lv_bwkey    like sy-tfill,                             "1384361
        lv_matnr    like sy-tfill,                             "1384361
        matnr_cond       type string,
        ls_matnr         like line of pt_matnr,                "1417445
        lv_matnr_nmb     type i.

  get time stamp field g_time_mbew_b.

  describe table pt_bwkey lines lv_bwkey.                      "1384361
  describe table pt_sel_matnr lines lv_matnr.                  "1384361
  if lv_bwkey > lv_matnr.                                      "1384361

    Describe table pt_matnr Lines lv_matnr_nmb.                "1417445
    If lv_matnr_nmb = 1.
      Read table pt_matnr Into ls_matnr index 1.
      If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
        matnr_cond = 'a~matnr = ls_matnr-low'.
      Endif.
    Endif.
    If matnr_cond is initial.
      matnr_cond = 'a~matnr in pt_matnr'.
    Endif.                                                     "1417445

    select
        matnr bwkey bwtar bwtty
        lbkum salk3 bklas vprsv
        stprs peinh kaln1
    from mbew as a
        into table ppt_mbew
        for all entries in pt_bwkey
        where
        (matnr_cond) and                                       "1417445
        a~bwkey = pt_bwkey-bwkey    and  " valuation area
        a~bwtar in pt_so_bwtar.                                "1247791
  else.                                                        "1384361
    check lv_matnr > 0.                                        "1384361
    select                                                     "1384361
        matnr bwkey bwtar bwtty
        lbkum salk3 bklas vprsv
        stprs peinh kaln1
    from mbew as a
        into table ppt_mbew
        for all entries in pt_sel_matnr
        where
        a~matnr = pt_sel_matnr-matnr and
        a~bwkey in pt_so_bwkey      and  " valuation area
        a~bwtar in pt_so_bwtar.
  endif.                                                       "1384361

  get time stamp field g_time_mbew_e.

endform.                    " mbew_getting
*&---------------------------------------------------------------------*
*&      Form  ebew_getting
*&---------------------------------------------------------------------*
form ebew_getting
  using
        pt_matnr     type tt_so_matnr
        pt_bwkey     type tt_select_bwkey
        pt_so_bwkey  type tt_so_bwkey                          "1384361
        pt_sel_matnr type tt_select_matnr                      "1384361
        pt_so_bwtar  type tt_so_bwtar                          "1247791
  changing
        pt_ebew      type tt_ebew.                           "#EC NEEDED

  data: lv_bwkey    like sy-tfill,                             "1384361
        lv_matnr    like sy-tfill,                             "1384361
        matnr_cond       type string,
        ls_matnr         like line of pt_matnr,                "1417445
        lv_matnr_nmb     type i.

  get time stamp field g_time_ebew_b.

  describe table pt_bwkey lines lv_bwkey.                      "1384361
  describe table pt_sel_matnr lines lv_matnr.                  "1384361
  if lv_bwkey > lv_matnr.                                      "1384361

    Describe table pt_matnr Lines lv_matnr_nmb.                "1417445
    If lv_matnr_nmb = 1.
      Read table pt_matnr Into ls_matnr index 1.
      If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
        matnr_cond = 'a~matnr = ls_matnr-low'.
      Endif.
    Endif.
    If matnr_cond is initial.
      matnr_cond = 'a~matnr in pt_matnr'.
    Endif.                                                     "1417445

    select
        matnr bwkey bwtar bwtty
        lbkum salk3 bklas vprsv
        stprs peinh kaln1 vbeln posnr sobkz
    from ebew as a
        into corresponding fields of table pt_ebew
        for all entries in pt_bwkey
        where
        (matnr_cond) and                 " material number     "1417445
        a~bwkey = pt_bwkey-bwkey and     " valuation area
        a~bwtar in pt_so_bwtar and       " valuation type      "1247791
        a~sobkz = gc_spec_e    and                             "1859566
        a~vbeln in so_vbeln.
  else.                                                        "1384361
    check lv_matnr > 0.                                        "1384361
    select                                                     "1384361
        matnr bwkey bwtar bwtty
        lbkum salk3 bklas vprsv
        stprs peinh kaln1 vbeln posnr sobkz
    from ebew as a
        into corresponding fields of table pt_ebew
        for all entries in pt_sel_matnr
        where
        a~matnr = pt_sel_matnr-matnr and  " material number
        a~bwkey in pt_so_bwkey and     " valuation area
        a~bwtar in pt_so_bwtar and     " valuation type
        a~sobkz = gc_spec_e    and                             "1859566
        a~vbeln in so_vbeln.
  endif.                                                       "1384361

  get time stamp field g_time_ebew_e.

endform.                    " ebew_getting
*&---------------------------------------------------------------------*
*&      Form  qbew_getting
*&---------------------------------------------------------------------*
form qbew_getting
  using pt_matnr     type tt_so_matnr
        pt_bwkey     type tt_select_bwkey
        pt_so_bwkey  type tt_so_bwkey                          "1384361
        pt_sel_matnr type tt_select_matnr                      "1384361
        pt_so_bwtar  type tt_so_bwtar                          "1247791
  changing pt_qbew   type tt_qbew.                           "#EC NEEDED

  data: lv_bwkey    like sy-tfill,                             "1384361
        lv_matnr    like sy-tfill,                             "1384361
        matnr_cond       type string,
        ls_matnr         like line of pt_matnr,                "1417445
        lv_matnr_nmb     type i.

  get time stamp field g_time_qbew_b.

  describe table pt_bwkey lines lv_bwkey.                      "1384361
  describe table pt_sel_matnr lines lv_matnr.                  "1384361
  if lv_bwkey > lv_matnr.                                      "1384361

    Describe table pt_matnr Lines lv_matnr_nmb.                "1417445
    If lv_matnr_nmb = 1.
      Read table pt_matnr Into ls_matnr index 1.
      If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
        matnr_cond = 'a~matnr = ls_matnr-low'.
      Endif.
    Endif.
    If matnr_cond is initial.
      matnr_cond = 'a~matnr in pt_matnr'.
    Endif.                                                     "1417445

    select
        matnr bwkey bwtar bwtty
        lbkum salk3 bklas vprsv
        stprs peinh kaln1 pspnr sobkz
    from qbew as a
        into corresponding fields of table pt_qbew
        for all entries in pt_bwkey
      where
        (matnr_cond) and                  " material number    "1417445
        a~bwkey = pt_bwkey-bwkey and      " valuation area
        a~bwtar in pt_so_bwtar and        " valuation type     "1247791
        a~pspnr in ( select pspnr from prps where posid in so_posid ).
  else.                                                        "1384361
    check lv_matnr > 0.                                        "1384361
    select                                                     "1384361
        matnr bwkey bwtar bwtty
        lbkum salk3 bklas vprsv
        stprs peinh kaln1 pspnr sobkz
    from qbew as a
        into corresponding fields of table pt_qbew
        for all entries in pt_sel_matnr
      where
        a~matnr = pt_sel_matnr-matnr and   " material number
        a~bwkey in pt_so_bwkey and      " valuation area
        a~bwtar in pt_so_bwtar and      " valuation type
        a~pspnr in ( select pspnr from prps where posid in so_posid ).
  endif.                                                       "1384361

  get time stamp field g_time_qbew_e.

endform.                    "qbew_getting

*&---------------------------------------------------------------------*
*&      Form  charg_getting
*&---------------------------------------------------------------------*
form charg_getting
    using
          pt_matnr   type tt_so_matnr
          pw_budat   type line of tt_so_budat                  "1247791
    changing
          pt_mcha   type tt_mcha
          pt_charg  type tt_mcha_mchb
          p_so_bwtar       type tt_so_bwtar                    "1247791
          pt_select_lgort  type tt_select_lgort
          pt_select_charg  type tt_select_charg.

  data:
      lw_mcha           type type_mcha,
      lw_charg          type type_mcha_mchb,
      lw_mard_mara      type type_mard_mara,
      lw_select_charg   type type_select_charg,
      lw_select_lgort   type type_select_lgort.

  field-symbols: <fs_mcha> type type_mcha.                     "1114541

  data:
      matnr_cond        type string,                           "1417445
      ls_matnr          like line of pt_matnr,
      lv_matnr_nmb      type i.

  Describe table pt_matnr Lines lv_matnr_nmb.
  If lv_matnr_nmb = 1.
    Read table pt_matnr Into ls_matnr index 1.
    If ls_matnr-sign = gc_sign_i and ls_matnr-option = gc_option_eq.
      matnr_cond = 'c~matnr = ls_matnr-low'.
    Endif.
  Endif.
  If matnr_cond is initial.
    matnr_cond = 'c~matnr in pt_matnr'.
  Endif.                                                       "1417445

  get time stamp field g_time_mcha_b.

  select
      c~matnr c~bwtar c~werks
      b~lgort c~charg b~clabs
      b~cumlm b~cinsm b~cspem b~ceinm
      from mcha as c
          inner join mchb as b
              on c~matnr = b~matnr
              and c~werks = b~werks
              and c~charg  = b~charg
      into table pt_charg
      where
          (matnr_cond) and                                     "1417445
          c~werks  in so_werks.

  select c~matnr c~werks c~bwtar c~charg
      from mcha as c
      into table pt_mcha
      where
          (matnr_cond) and                                     "1417445
          c~werks  in so_werks.

  get time stamp field g_time_mcha_e.

  if not so_charg[] is initial.                                "1114541
    loop at pt_mcha into lw_mcha.
      clear lw_mard_mara.
      lw_mard_mara-matnr = lw_mcha-matnr.
      lw_mard_mara-werks = lw_mcha-werks.
      lw_mard_mara-charg = lw_mcha-charg.
      fill_select_charg lw_mard_mara-charg.
    endloop.
  endif.                                                       "1114541

  if not so_charg[] is initial or not so_lgort[] is initial.   "1114541
    loop at pt_charg into lw_charg.
      clear lw_mard_mara.
      lw_mard_mara-matnr = lw_charg-matnr.
      lw_mard_mara-werks = lw_charg-werks.
      lw_mard_mara-charg = lw_charg-charg.
      if not so_charg[] is initial.                            "1114541
        fill_select_charg lw_mard_mara-charg.
      endif.                                                   "1114541
      if not so_lgort[] is initial.                            "1114541
        fill_select_lgort lw_charg-lgort.
      endif.                                                   "1114541
    endloop.
  endif.                                                       "1114541

  if pa_valch is not initial.                                  "1363385
*   get previous valuation type of batches                     "1247791
    perform val_type_mcha_getting                              "1247791
      using
            pw_budat
      changing
            p_so_bwtar
            pt_mcha.
  endif.                                                       "1363385

* insert empty charg for #### stock without batch number       "1114541
  Loop at pt_mcha Assigning <fs_mcha>.                         "1114541
    On change Of <fs_mcha>-matnr Or <fs_mcha>-werks            "1114541
              Or <fs_mcha>-bwtar.                              "1114541
      lw_mcha-matnr = <fs_mcha>-matnr.                         "1114541
      lw_mcha-werks = <fs_mcha>-werks.                         "1114541
      lw_mcha-bwtar = <fs_mcha>-bwtar.                         "1114541
      lw_mcha-charg = sp_charg.                                "1114541
      Insert lw_mcha Into Table pt_mcha.                       "1289968
    Endon.                                                     "1114541
  Endloop.                                                     "1114541

endform.                    " charg_getting
*&---------------------------------------------------------------------*
*&      Form  val_type_mcha_getting
*&---------------------------------------------------------------------*
*       check valuation type change documents
*       get batches with previous (old) valuation type if changed
*----------------------------------------------------------------------*
form val_type_mcha_getting                                     "1247791
    using
          pw_budat   type line of tt_so_budat
    changing
          p_so_bwtar type tt_so_bwtar
          pt_mcha    type tt_mcha.

  data: batch_level  type tcuch-kzdch,
        lv_objid     type cdhdr-objectid.      "change object ID

  data: begin of chobj_id,
          matnr like mcha-matnr,
          werks like mcha-werks,
          charg like mcha-charg.
  data: end of chobj_id.

  field-symbols: <fs_mcha> type type_mcha.

* get batch level
  CALL FUNCTION 'VB_BATCH_DEFINITION'
   IMPORTING
     KZDCH         = batch_level.

* check for valuation type change for existing batches
  Loop at pt_mcha Assigning <fs_mcha>.
    Clear: lv_objid, chobj_id.

    If batch_level eq gc_btch_plant.
      On change Of <fs_mcha>-matnr Or <fs_mcha>-werks Or <fs_mcha>-charg.
*       fill change object ID
        chobj_id-matnr = <fs_mcha>-matnr.
        chobj_id-werks = <fs_mcha>-werks.
        chobj_id-charg = <fs_mcha>-charg.
        lv_objid = chobj_id.
        Perform check_change_docs
                    using
                       pw_budat
                       lv_objid
                    changing
                       p_so_bwtar
                       <fs_mcha>
                       pt_mcha.
      Endon.
    Else.
      On change Of <fs_mcha>-matnr Or <fs_mcha>-charg.
*       fill change object ID
        chobj_id-matnr = <fs_mcha>-matnr.
        chobj_id-charg = <fs_mcha>-charg.
        lv_objid = chobj_id.
        Perform check_change_docs
                    using
                       pw_budat
                       lv_objid
                    changing
                       p_so_bwtar
                       <fs_mcha>
                       pt_mcha.
      Endon.
    Endif.
  Endloop.

ENDFORM.                    " val_type_mcha_getting            "1247791
*&---------------------------------------------------------------------*
*&      Form  check_change_docs
*&---------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
form check_change_docs                                         "1247791
    using
          pw_budat   type line of tt_so_budat
          pw_objid   type cdhdr-objectid
    changing
          p_so_bwtar type tt_so_bwtar
          pw_mcha    type type_mcha
          pt_mcha    type tt_mcha.

  data: ls_cdhdr     type cdhdr,               "change doc header
        lt_cdpos     type cdpos_tab,           "change doc positions
        ls_cdpos     like line of lt_cdpos,
        lw_mcha      type type_mcha,
        l_so_bwtar   like line of p_so_bwtar,
        l_rec        type sytabix,
        lt_cdhdr     type cdhdr_tab.

  describe table p_so_bwtar[] lines l_rec.
  l_so_bwtar-sign   = gc_sign_i.
  l_so_bwtar-option = gc_option_eq.

* get all change documents positions with BWTAR change
  CALL FUNCTION 'CHANGEDOCU_CDPOS_READ'                        "1266509
       EXPORTING
         IV_OBJECTCLAS            = 'CHARGE'
         IV_OBJECTID              = pw_objid
         IV_FNAME                 = 'BWTAR'
       IMPORTING
         ET_CDPOS                 = lt_cdpos
       EXCEPTIONS
         NO_IMPORTPARAMETER       = 1
         OTHERS                   = 2.

  IF SY-SUBRC = 0.

    Data:
          lv_function_exists type abap_bool.

    CALL FUNCTION 'FUNCTION_EXISTS'
      EXPORTING
        funcname           = 'CHANGEDOCUMENT_READ_ALL'

      EXCEPTIONS
        function_not_exist = 1
        OTHERS             = 2.

    IF sy-subrc = 0.
      lv_function_exists = abap_true.
    ELSE.
      lv_function_exists = abap_false.
    ENDIF.


    Loop At lt_cdpos Into ls_cdpos.
      Check ls_cdpos-value_old Is Not Initial.

*     get corresponding change document header

      IF LV_FUNCTION_EXISTS = abap_true.
        CALL FUNCTION 'CHANGEDOCUMENT_READ_ALL'
          EXPORTING
            I_OBJECTCLASS   = 'CHARGE'
            I_OBJECTID      = pw_objid
            I_CHANGENUMBER  = ls_cdpos-changenr

            I_ONLY_HEADERS  = abap_true
          CHANGING
            CT_CDHDR       = lt_cdhdr.

        READ TABLE lt_cdhdr INDEX 1 INTO ls_cdhdr.
      ELSE.
        Select Single * From CDHDR Into ls_cdhdr                 "1266509
          Where OBJECTCLAS = 'CHARGE' and
            OBJECTID   = pw_objid and
            CHANGENR   = ls_cdpos-changenr.

        Check sy-subrc = 0.
      ENDIF.


*     check that change was made after selected start date
      Check ls_cdhdr-udate >= pw_budat-low.
*     insert batch with previous valuation type
      lw_mcha-matnr = pw_mcha-matnr.
      lw_mcha-werks = pw_mcha-werks.
      lw_mcha-bwtar = ls_cdpos-value_old.
      lw_mcha-charg = pw_mcha-charg.
      lw_mcha-changed = 'O'.
      Read Table pt_mcha From lw_mcha Transporting No Fields.
      If sy-subrc ne 0.
        Insert lw_mcha Into Table pt_mcha.
*       set indicator necessary fo correct processing of
*       G/L accounts restiction (for new valuation type only)
        pw_mcha-changed = 'N'.
*       insert old and new valuation type to 'so_bwtar' for correct
*       processing of valuation type restriction
        if l_rec is not initial.
          l_so_bwtar-low = lw_mcha-bwtar.
          append l_so_bwtar to p_so_bwtar[].
          l_so_bwtar-low = pw_mcha-bwtar.
          append l_so_bwtar to p_so_bwtar[].
        endif.
      Endif.
    Endloop.
  ENDIF.

endform.                    " check_change_docs                "1247791
*&---------------------------------------------------------------------*
*&      Form  lock_set
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form lock_set                                                  "1259372
    using l_matnr type type_listmat-xmatnr.

Data: l_lock_set type c.

* Send E-lock request on the material plant data (table MARC)
* to the local lock container
  call function 'ENQUEUE_EMMARCE'
   exporting
     matnr                = l_matnr
     _collect             = 'X'
   exceptions
     foreign_lock         = 1
     system_failure       = 2
     others               = 3.
  if sy-subrc <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

* Send E-lock request on the material valuation data (table MBEW)
* to the local lock container
  call function 'ENQUEUE_EMMBEWE'
   exporting
     matnr                = l_matnr
     _collect             = 'X'
   exceptions
     foreign_lock         = 1
     system_failure       = 2
     others               = 3.
  if sy-subrc <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

  Do gc_wait_nmb times.
*   Send collected locks to the lock server
    call function 'FLUSH_ENQUEUE'
     exceptions
       foreign_lock         = 1
       system_failure       = 2
       others               = 3.
    Case sy-subrc.
      When 0.
        l_lock_set = 'X'.
        Exit.
      When 1.
*       Attempts cannot be repeated without delay (Note 97760)
        Wait Up To '2' Seconds.
      When Others.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    Endcase.
  Enddo.

  If l_lock_set Is Initial.
*   Unable to set locks
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  Endif.

endform.                    " lock_set                         "1259372
*&---------------------------------------------------------------------*
*&      Form  lock_release
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form lock_release                                              "1259372
    using l_matnr type type_listmat-xmatnr.

  call function 'DEQUEUE_EMMARCE'
   exporting
     matnr           = l_matnr.

  call function 'DEQUEUE_EMMBEWE'
   exporting
     matnr           = l_matnr.

endform.                    " lock_release                     "1259372
*&---------------------------------------------------------------------*
*&      Form  processing_sub
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form processing_sub  tables   pt_listmat     type tt_listmat   "1384361
                              pt_docmat      type tt_docmat
                     using    pt_matnr       type tt_so_matnr
                              pw_budat       type line of tt_so_budat
                              p_bukrs        type bukrs
                              p_adcst        type type_1c
                              pt_listfield2  type tt_listfield2
                              pt_156_way_out type tt_156_way_out
                              pt_156_way_in  type tt_156_way_in
                     changing pt_mard_mara type tt_mard_mara
                              pt_mbew      type tt_mbew
                              pt_ebew      type tt_ebew
                              pt_qbew      type tt_qbew
                              pt_msku      type tt_msku
                              pt_mska      type tt_mska
                              pt_mslb      type tt_mslb
                              pt_mspr      type tt_mspr
                              pt_matnr_way type tt_matnr_way
                              pt_select_lgort type tt_select_lgort
                              pt_select_charg type tt_select_charg
                              pt_charg     type tt_mcha_mchb
                              pt_mcha      type tt_mcha
                              pt_ekpo      type tt_ekpo
                              pt_ekkn      type tt_ekkn
                              pt_transfer  type tt_transfer
                              pt_skb1      type tt_skb1
                              pt_partcost  type tt_partcost
                              p_update     type type_1c
                              pt_overval   type tt_overvalue.

  perform tmp_tables_filling
    using pt_matnr
          pw_budat
    changing
          pt_mard_mara
          pt_mbew
          pt_ebew
          pt_qbew
          pt_msku
          pt_mska
          pt_mslb
          pt_mspr
          pt_matnr_way
          pt_select_lgort
          pt_select_charg
          pt_charg
          pt_mcha
          pt_ekpo
          pt_ekkn.

  perform transfer_stock
    using pt_matnr
    changing
          pt_mard_mara
          pt_matnr_way
          pt_mbew
          pt_ebew
          pt_qbew
          pt_ekpo
          pt_ekkn
          pt_mcha                                              "1582729
          pt_transfer.

* fill two main tables: pt_listmat contains current stock quantity,
* lt_partcost contains current stock valuation
  perform quantity_cost_tables_filling
   tables pt_listmat
    using p_bukrs
          pt_mard_mara
          pt_ebew
          pt_qbew
          pt_mbew
          pt_msku
          pt_mska
          pt_mslb
          pt_mspr
          pt_select_lgort
          pt_select_charg
          pt_skb1
          pt_partcost
          pt_charg
          pt_mcha
          pt_ekpo
          pt_ekkn.

* fill pt_docmat with relevant material documents,
* tables pt_listmat and lt_partcost are modified here
  perform documents_processing
   tables pt_listmat
          pt_docmat
    using pw_budat
          p_adcst
          pt_listfield2
          pt_matnr_way
          pt_156_way_out
          pt_156_way_in
    changing
          p_update
          pt_overval
          pt_partcost
          pt_transfer.

endform.                    " processing_sub                   "1384361
*&---------------------------------------------------------------------*
*&      Form  processing_sub_2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form processing_sub_2 tables  pt_listmat     type tt_listmat   "1650775
                              pt_docmat      type tt_docmat
                     changing pt_partcost  type tt_partcost
                              pt_overval   type tt_overvalue.

  data:
      l_rec          type sytabix,
      lt_ind6_docmat type tt_ind6_docmat,     "document index table
      lw_so_sobkz type type_where_in_sobkz.

* delete additional listmat entries with unnecessary G/L account,
* that were added for correct processing of valuation type change
  describe table so_saknr lines l_rec.
  if not l_rec is initial and not pa_valch is initial.
    delete pt_listmat where not xsaknr in so_saknr.
  endif.

* delete additional listmat entries with unnecessary val.type
  describe table so_bwtar lines l_rec.
  if not l_rec is initial and not pa_valch is initial.
    delete pt_listmat where not bwtar in so_bwtar.
  endif.

* in form overvalue_doc_splitting document overvalue amount
* are distributed for every storage proportion
* storage quantity.
* overvalue documents are moveing into table docmat.
* value turnover are modefing in table listmat
  perform overvalue_doc_splitting
      tables
          pt_listmat
          pt_docmat
          so_budat
      changing
          pt_overval.

* calculate storage cost
* add records for every storage into table it_partite_cost
  perform at_storage_cost_calculation
      tables pt_listmat
*           pt_docmat
      changing pt_partcost.

  lt_ind6_docmat[] = pt_docmat[].

* in the form processing_reversal_documents are linked reversal and
* canseled documents after this they paint
  perform reversal_doc_processing
      tables
          pt_listmat
          pt_docmat
          so_budat
      using pa_rever.

* in the form processing_reversal_invoices are linked reversal and
* canseled invoices after this they paint
  perform reversal_invoice_processing
      tables
          pt_listmat
          pt_docmat
          so_budat
      using pa_rever.

* stock cost for each storage filling.
  perform storage_cost_filling
      tables pt_listmat
             pt_docmat
      using lt_ind6_docmat
            pa_onlsp
            so_kunnr[]
            so_lifnr[]
      changing pt_partcost.

  refresh lt_ind6_docmat. free lt_ind6_docmat.

* in form Adjustment_cost_amount adjust to value
* in non valuation documents if need
  perform cost_amount_adjustment
      tables
          pt_listmat
          pt_docmat
      changing pt_partcost.

* valuation turnover are calculated
  perform turnovers_calculation
      tables
          pt_listmat
          pt_docmat.

* pseudo-document changing cost for storage creation
  perform amount_redistribution
      tables
          pt_listmat
          pt_docmat
          so_budat
      using pa_adcst.

  if not pa_moved is initial.
    delete pt_listmat
        where endremn = 0 and begremn = 0
        and banner_doc is initial.
  else.
    delete pt_listmat where banner_doc is initial.
  endif.

  if not pa_onlsp is initial.
    delete pt_listmat where sobkz is initial.
    delete pt_docmat  where sobkz is initial.
  endif.

  describe table so_sobkz lines l_rec.
  if not l_rec is initial.
    read table so_sobkz[] with key low = '' transporting no fields.
    if sy-subrc ne 0.                                          "1959351
      clear so_sobkz.
      lw_so_sobkz-sign   = gc_sign_i.
      lw_so_sobkz-option = gc_option_eq.
      append lw_so_sobkz to so_sobkz.
    endif.                                                     "1959351
    delete pt_listmat where not sobkz in so_sobkz.
    delete pt_docmat  where not sobkz in so_sobkz.
  endif.

  delete pt_docmat where not later is initial.

  describe table so_lgort lines l_rec.
  if not l_rec is initial.
    delete pt_docmat where not lgort in so_lgort.
    delete pt_listmat where not lgort in so_lgort.
  endif.

  describe table so_charg lines l_rec.
  if not l_rec is initial.
    delete pt_docmat where not charg in so_charg.
    delete pt_listmat where not charg in so_charg.
  endif.

endform.                    " processing_sub_2                 "1650775
