FUNCTION zbaja_stock.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_INPUT) TYPE  ZDT_NOTRO_L
*"  EXPORTING
*"     VALUE(E_MBLNR) TYPE  MBLNR
*"     VALUE(E_MJAHR) TYPE  MJAHR
*"     VALUE(E_MATNR) TYPE  MATNR
*"     VALUE(E_CHARG) TYPE  CHARG_D
*"     VALUE(E_ERROR) TYPE  XFELD
*"  TABLES
*"      T_MESSAGES STRUCTURE  BAPIRET2 OPTIONAL
*"----------------------------------------------------------------------
* A partir del lote mes, buscar el lote sap para dar de baja.

  DATA: lv_aufnr TYPE aufnr.

  DATA: ls_header  TYPE bapi2017_gm_head_01,
        lt_return  LIKE bapiret2 OCCURS 0,
        ls_return  TYPE bapiret2,
        lt_item    LIKE bapi2017_gm_item_create OCCURS 0,
        ls_item    TYPE bapi2017_gm_item_create,
        ls_headret TYPE bapi2017_gm_head_ret.


  DATA: lv_extnumber TYPE balnrext.

  DATA: i_string      TYPE  char30,
        ld_e_float    TYPE f,
        ld_e_dec      TYPE string,
        ld_e_decimals TYPE i.

  CLEAR: lt_item,
         ls_header,
         ls_item.

  REFRESH: lt_item,
           lt_return.

* posicion
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = i_input-ord_fab
    IMPORTING
      output = lv_aufnr.

  SELECT SINGLE * FROM mseg
    INTO @DATA(wa_mseg)
    WHERE werks = @i_input-centro AND
          aufnr = @lv_aufnr AND
          kzbew = 'F' AND
          bwart = '101' AND
          sgtxt = @i_input-id_rollo_mes.


* cabecera
  ls_header-pstng_date =  sy-datum.
  ls_header-doc_date   =  sy-datum.
  ls_header-pr_uname = sy-uname.
  ls_header-header_txt = 'Notificación MES'.

* posicion
  ls_item-material = wa_mseg-matnr.
  e_matnr = wa_mseg-matnr.

  ls_item-batch = wa_mseg-charg.
  e_charg = wa_mseg-charg.

  ls_item-plant = i_input-centro.
  ls_item-stge_loc = wa_mseg-lgort.
  ls_item-move_type = '102'.

  i_string = i_input-peso.

  CALL FUNCTION 'C14DG_CHAR_NUMBER_CONVERSION'
    EXPORTING
      i_string                   = i_string
    IMPORTING
      e_float                    = ld_e_float
      e_dec                      = ld_e_dec
      e_decimals                 = ld_e_decimals
    EXCEPTIONS
      wrong_characters           = 1
      first_character_wrong      = 2
      arithmetic_sign            = 3
      multiple_decimal_separator = 4
      thousandsep_in_decimal     = 5
      thousand_separator         = 6
      number_too_big             = 7
      OTHERS                     = 8.
  IF sy-subrc <> 0.
*       Implement suitable error handling here
  ELSE.
    MOVE ld_e_dec TO ls_item-entry_qnt.
    ls_item-entry_qnt = ( -1 ) * ls_item-entry_qnt.
  ENDIF.


  ls_item-entry_uom = 'KG'.
  ls_item-orderid =  lv_aufnr.
  ls_item-mvt_ind = 'F'.
  ls_item-item_text = i_input-id_rollo_mes.
  APPEND ls_item TO lt_item.


  CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
    EXPORTING
      goodsmvt_header  = ls_header
      goodsmvt_code    = '02'
*     TESTRUN          = ' '
*     GOODSMVT_REF_EWM =
    IMPORTING
      goodsmvt_headret = ls_headret
      materialdocument = e_mblnr
      matdocumentyear  = e_mjahr
    TABLES
      goodsmvt_item    = lt_item
*     GOODSMVT_SERIALNUMBER         =
      return           = lt_return
*     GOODSMVT_SERV_PART_DATA       =
*     EXTENSIONIN      =
    .

  READ TABLE lt_return INTO ls_return WITH KEY type = 'E'.
  IF sy-subrc <> 0.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.

  ELSE.

    e_error = 'X'.

    CLEAR lv_extnumber.

    CALL FUNCTION 'ZMFPP_GUARDAR_LOG'
      EXPORTING
        objeto    = 'ZSAP_MES'
        subobjeto = 'ZBAJA_STOCK'
        mensajes  = lt_return[]
        extnumber = lv_extnumber.
  ENDIF.


ENDFUNCTION.
