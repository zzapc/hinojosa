*&---------------------------------------------------------------------*
*& Report  ZRMM0021
*&
*&---------------------------------------------------------------------*
*& Autor: Carlos Vivó Jiménez
*& Fecha: 26.06.2019
*&
*& Descripción: tras ver que es inviable ampliar la transacción ME11 por
*&      falta de puntos de amplicación de SAP, se decide realizar modi-
*&      ficaciones automática con un JOB nocturno
*&
*&---------------------------------------------------------------------*
REPORT zrmm0021.

INCLUDE zrmm0021_top.

SELECTION-SCREEN BEGIN OF BLOCK sel WITH FRAME TITLE text-001.

SELECT-OPTIONS:
  s_infnr  FOR eine-infnr,
  s_ekorg  FOR eine-ekorg,
  s_werks  FOR eine-werks,
  s_urzla  FOR eina-urzla.
SELECTION-SCREEN SKIP.

SELECT-OPTIONS:
  s_land1 FOR lfa1-land1.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF BLOCK eina WITH FRAME TITLE text-003.
PARAMETERS:
  eina_f1     TYPE dd03l-fieldname,
  eina_v1(30),
  eina_f2     TYPE dd03l-fieldname,
  eina_v2(30),
  eina_f3     TYPE dd03l-fieldname,
  eina_v3(30),
  eina_f4     TYPE dd03l-fieldname,
  eina_v4(30).
SELECTION-SCREEN END OF BLOCK eina.

SELECTION-SCREEN BEGIN OF BLOCK eine WITH FRAME TITLE text-002.
PARAMETERS:
  eine_f1     TYPE dd03l-fieldname,
  eine_v1(30),
  eine_f2     TYPE dd03l-fieldname,
  eine_v2(30),
  eine_f3     TYPE dd03l-fieldname,
  eine_v3(30),
  eine_f4     TYPE dd03l-fieldname,
  eine_v4(30).
SELECTION-SCREEN END OF BLOCK eine.

SELECTION-SCREEN END OF BLOCK sel.


START-OF-SELECTION.

  SELECT eine~infnr FROM eine
    INNER JOIN eina
    ON eine~infnr EQ eina~infnr
    INNER JOIN lfa1
    ON eina~lifnr EQ lfa1~lifnr
    INTO TABLE t_infnr " primero cogemos sólo el nº para luego no perdernos campos
    WHERE eine~infnr IN s_infnr
      AND eine~ekorg IN s_ekorg
      AND eine~werks IN s_werks
      AND eina~urzla IN s_urzla
      AND lfa1~land1 IN s_land1.

  SORT t_infnr. DELETE ADJACENT DUPLICATES FROM t_infnr.

  LOOP AT t_infnr.
    IF eina_f1 IS NOT INITIAL OR
       eina_f2 IS NOT INITIAL OR
       eina_f3 IS NOT INITIAL OR
       eina_f4 IS NOT INITIAL.
      CLEAR: eina, eina_new.

      SELECT SINGLE * FROM eina
        WHERE infnr EQ t_infnr
          AND urzla IN s_urzla.

      eina_new = eina.

      IF eina_f1 IS NOT INITIAL.
        CONCATENATE 'EINA_NEW-' eina_f1 INTO field.
        ASSIGN (field) TO <field>.
        MOVE eina_v1 TO <field>.
      ENDIF.
      IF eina_f2 IS NOT INITIAL.
        CONCATENATE 'EINA_NEW-' eina_f2 INTO field.
        ASSIGN (field) TO <field>.
        MOVE eina_v2 TO <field>.
      ENDIF.
      IF eina_f3 IS NOT INITIAL.
        CONCATENATE 'EINA_NEW-' eina_f3 INTO field.
        ASSIGN (field) TO <field>.
        MOVE eina_v3 TO <field>.
      ENDIF.
      IF eina_f4 IS NOT INITIAL.
        CONCATENATE 'EINA_NEW-' eina_f4 INTO field.
        ASSIGN (field) TO <field>.
        MOVE eina_v4 TO <field>.
      ENDIF.

      IF eina_new NE eina.
        CALL FUNCTION 'ME_INITIALIZE_INFORECORD'.

        CALL FUNCTION 'ME_DIRECT_INPUT_INFORECORD'
          EXPORTING
*            activity      = 'V'
            i_eina        = eina_new
            o_eina        = eina
*            i_eine        = eine_new
*            o_eine        = eine
*            i_no_suppose  = abap_true
*           i_skip_nr_check = abap_true
*            i_vorga       = 'A'
          EXCEPTIONS
            error_message = 1.

        CALL FUNCTION 'ME_POST_INFORECORD'
          TABLES
            t_eina_i = t_eina[].

        COMMIT WORK AND WAIT.

        WRITE: /, / 'Modificada tabla EINA: ', eina-infnr NO-ZERO, /.
        IF eina_f1 IS NOT INITIAL.
          WRITE: '   Campo ', eina_f1, ' valor ', eina_v1, /.
        ENDIF.
        IF eina_f2 IS NOT INITIAL.
          WRITE: '   Campo ', eina_f2, ' valor ', eina_v2, /.
        ENDIF.
        IF eina_f3 IS NOT INITIAL.
          WRITE: '   Campo ', eina_f3, ' valor ', eina_v3, /.
        ENDIF.
        IF eina_f4 IS NOT INITIAL.
          WRITE: '   Campo ', eina_f4, ' valor ', eina_v4, /.
        ENDIF.
      ENDIF.
    ENDIF.

    IF eine_f1 IS NOT INITIAL OR
       eine_f2 IS NOT INITIAL OR
       eine_f3 IS NOT INITIAL OR
       eine_f4 IS NOT INITIAL.
      CLEAR: eine, eine_new.

      SELECT SINGLE * FROM eina
        WHERE infnr EQ t_infnr
          AND urzla IN s_urzla.

      eina_new = eina.

      SELECT * FROM eine
        INTO TABLE t_eine
        WHERE infnr EQ t_infnr
          AND ekorg IN s_ekorg
          AND werks IN s_werks.

      LOOP AT t_eine INTO eine.
        eine_new = eine.

        IF eine_f1 IS NOT INITIAL.
          CONCATENATE 'EINE_NEW-' eine_f1 INTO field.
          ASSIGN (field) TO <field>.
          MOVE eine_v1 TO <field>.
        ENDIF.
        IF eine_f2 IS NOT INITIAL.
          CONCATENATE 'EINE_NEW-' eine_f2 INTO field.
          ASSIGN (field) TO <field>.
          MOVE eine_v2 TO <field>.
        ENDIF.
        IF eine_f3 IS NOT INITIAL.
          CONCATENATE 'EINE_NEW-' eine_f3 INTO field.
          ASSIGN (field) TO <field>.
          MOVE eine_v3 TO <field>.
        ENDIF.
        IF eine_f4 IS NOT INITIAL.
          CONCATENATE 'EINE_NEW-' eine_f4 INTO field.
          ASSIGN (field) TO <field>.
          MOVE eine_v4 TO <field>.
        ENDIF.

        IF eine_new NE eine.
          CALL FUNCTION 'ME_INITIALIZE_INFORECORD'.

          CALL FUNCTION 'ME_DIRECT_INPUT_INFORECORD'
            EXPORTING
*              activity      = 'V'
              i_eina        = eina_new
              o_eina        = eina
              i_eine        = eine_new
              o_eine        = eine
*              i_no_suppose  = abap_true
*             i_skip_nr_check = abap_true
*              i_vorga       = 'A'
            EXCEPTIONS
              error_message = 1.

          CALL FUNCTION 'ME_POST_INFORECORD'
            TABLES
              t_eina_i = t_eina[].

          COMMIT WORK AND WAIT.

          WRITE: /, / 'Modificada tabla EINE: ', eine-infnr NO-ZERO, space, eine-ekorg, space, eine-esokz, space, eine-werks, /.
          IF eine_f1 IS NOT INITIAL.
            WRITE: '   Campo ', eine_f1, ' valor ', eine_v1, /.
          ENDIF.
          IF eine_f2 IS NOT INITIAL.
            WRITE: '   Campo ', eine_f2, ' valor ', eine_v2, /.
          ENDIF.
          IF eine_f3 IS NOT INITIAL.
            WRITE: '   Campo ', eine_f3, ' valor ', eine_v3, /.
          ENDIF.
          IF eine_f4 IS NOT INITIAL.
            WRITE: '   Campo ', eine_f4, ' valor ', eine_v4, /.
          ENDIF.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDLOOP.

END-OF-SELECTION.

  MESSAGE 'Finalizado' TYPE 'S'.
