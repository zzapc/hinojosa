*&---------------------------------------------------------------------*
*& Report  ZSWMMMES
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZSWMMMES.
TABLES: komdlgn  .
PARAMETERS: p_lfart like komdlgn-dlvtp OBLIGATORY DEFAULT 'LB',
            p_lifnr like komdlgn-lifnr OBLIGATORY,
            p_vkorg like komdlgn-vkorg OBLIGATORY,
            p_vtweg like komdlgn-vtweg OBLIGATORY,
            p_spart like komdlgn-spart OBLIGATORY.
*            p_route like komdlgn-route .
*            p_rblvs like komdlgn-rblvs OBLIGATORY DEFAULT '541',
*            p_shkzg_
*             like komdlgn-shkzg_um  OBLIGATORY DEFAULT '1',
*            p_shkzg like komdlgn-shkzg     OBLIGATORY DEFAULT 'H'.
SELECTION-SCREEN SKIP 1.
PARAMETERS:
            p_werks like komdlgn-werks OBLIGATORY,
            p_lgort like komdlgn-lgort OBLIGATORY.

SELECTION-SCREEN SKIP 1.
PARAMETERS: p_matn1 like mara-matnr OBLIGATORY,
            p_ctd1  like lips-lfimg OBLIGATORY,
            p_und1  like lips-vrkme OBLIGATORY.
SELECTION-SCREEN SKIP 1.

PARAMETERS:
            p_matn2 like mara-matnr ,
            p_ctd2  like lips-lfimg ,
            p_und2  like lips-vrkme .

START-OF-SELECTION.
  DATA:  xlk03    LIKE komdlgn  OCCURS 0 WITH HEADER LINE.

      CLEAR xlk03[].
      clear xlk03.
      xlk03-mandt = sy-mandt.
      xlk03-lfart =
      xlk03-dlvtp = p_lfart.
      xlk03-bwart =
      xlk03-rblvs = '541'.
      xlk03-shkzg_um = '1'.
      xlk03-shkzg    = 'H'.
      xlk03-umsok  = 'O'.
      xlk03-usonu  = p_lifnr..



      xlk03-wadat =
      xlk03-wadat_ist =
      xlk03-bldat =
      xlk03-lfdat = sy-datum.
      xlk03-kzuml = abap_true.

      MOVE p_werks TO: xlk03-umwrk, xlk03-werks.
      move p_lgort to: xlk03-umlgo, xlk03-lgort.

*        xlk03-route = p_route.
        xlk03-vkorg = p_vkorg.
        xlk03-vtweg = p_vtweg.
        xlk03-spart = p_spart.

      SELECT SINGLE wanst INTO xlk03-vstel FROM twlvz WHERE werks EQ xlk03-werks
                                   AND lgort EQ xlk03-lgort.
      SELECT SINGLE kunnr lifnr INTO (xlk03-kunwe, xlk03-lifnr) FROM t001w WHERE werks EQ xlk03-werks.

      move p_matn1 to: xlk03-ummat, xlk03-matnr.
      move p_ctd1  to xlk03-lfimg.
      move p_und1  to: xlk03-vrkme, xlk03-meins.
      append xlk03.
      if p_matn2 is not INITIAL.
      move p_matn2 to: xlk03-ummat,  xlk03-matnr.
      move p_ctd2  to xlk03-lfimg.
      move p_und2  to: xlk03-vrkme, xlk03-meins.
      append xlk03.

      endif.

 DATA: hlp_vbsk_i       TYPE vbsk,
        gt_rehng_hu      TYPE hum_rehang_hu_t,
        is_borgr_control TYPE borgr_control,
        hlp_vbsk_e       TYPE vbsk,
        t_XVBFS	         LIKE vbfs OCCURS 0 WITH HEADER LINE,
        t_xvbls          LIKE vbls OCCURS 0 WITH HEADER LINE.

  CALL FUNCTION 'GN_DELIVERY_CREATE'
    EXPORTING
      vbsk_i               = hlp_vbsk_i
      no_commit            = 'X'
      if_synchron          = ' '
      vbls_pos_rueck       = 'X'
      if_no_deque          = 'X'
      it_handling_units    = gt_rehng_hu
      is_borgr_control     = is_borgr_control
      iF_NO_PARTNER_DIALOG = ' '
    IMPORTING
      vbsk_e               = hlp_vbsk_e
*     ET_SPLITPROT         =
*     ET_VBADR             =
*     ET_VBPA              =
    TABLES
      xkomdlgn             = xlk03
      xvbfs                = t_xvbfs
      xvbls                = t_xvbls
*     XXLIPS               =
*     XVERKO               =
*     XVERPO               =
*     IT_GN_PARTNER        =
*     IT_GN_LIPSPO         =
*     IT_GN_LIPSRF         =
*     IT_GN_TEXTH          =
*     IT_GN_TEXTL          =
*     IT_GN_HUSERNR        =
*     IT_GN_SERNR          =
*     IT_TMSTMP            =
*     ET_SPE_VBFS          =
*     IT_BAPIADDR1         =
*     IT_GN_HU_HEADER_EPC  =
*     IT_GN_HU_ITEMS_EPC   =
*     IT_GN_HURES          =

    .
    data error type flag.
    LOOP AT t_XVBFS.

data cadena type string.
    MESSAGE id   t_xvbfs-msgid TYPE t_xvbfs-msgty NUMBER t_xvbfs-msgno with t_xvbfs-msgv1 t_xvbfs-msgv2 t_xvbfs-msgv3 t_xvbfs-msgv4 into cadena.
    write:/ t_XVBFS-msgty, cadena.
    CHECK t_XVBFS-msgty EQ 'E' OR t_XVBFS-msgty EQ 'A'.
    MOVE abap_true TO error.
  ENDLOOP.
   IF error NE abap_true AND t_xvbls[] IS NOT INITIAL.
    READ TABLE t_XVBls INDEX 1.
    write:/ 'Entrega:', t_XVBls-vbeln_lif. " TO l_entrega.
  ENDIF.
  if error ne abap_true.
     commit WORK and WAIT.
  endif.
