*&---------------------------------------------------------------------*
*&  Include           ZRMM0005_ALV
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  CONSTRUIR_TABLA_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM construir_tabla_alv .

  DATA: lo_table TYPE REF TO data,
        lo_line  TYPE REF TO data.

* Cargamos las columnas dinámicas que se mostrarán en el listado
  PERFORM cargar_columnas.

** Después construimos el catálogo de campos del ALV
  PERFORM prepare_fielcat  CHANGING gti_fieldcat.

* Por último creamos la tabla interna dinámica a partir del catálogo
  CALL METHOD cl_alv_table_create=>create_dynamic_table
    EXPORTING
      it_fieldcatalog = gti_fieldcat
    IMPORTING
      ep_table        = lo_table.
  ASSIGN lo_table->* TO <gti_datos>.

* Creamos el area de trabajo y la asignamos al FS global
  CREATE DATA lo_line LIKE LINE OF <gti_datos>.
  ASSIGN lo_line->* TO <gs_dato>. " Línea de datos
  ASSIGN lo_line->* TO <gs_tot>.  " Linea totales
  ASSIGN lo_line->* TO <gs_tot_tab>.  " Linea totales de tabla
  ASSIGN lo_line->* TO <gs_porc>.  " Linea porcentaje totales
  ASSIGN lo_line->* TO <gs_porc_tab>.  " Linea porcentaje tabla
  ASSIGN lo_line->* TO <gs_desv>.  " Linea desviación

ENDFORM.                    " CONSTRUIR_TABLA_ALV
*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_HTML_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_html_header .

  DATA: l_doctable TYPE REF TO cl_dd_table_element,
        l_col_pic  TYPE REF TO cl_dd_area,
        l_col_tit  TYPE REF TO cl_dd_area,
        l_col_info TYPE REF TO cl_dd_area.

  DATA: lv_logo TYPE sdydo_key VALUE 'ZLOGO_3000_ALV',
        lv_text TYPE sdydo_text_element,
        lv_tex2 TYPE sdydo_text_element.

* Creamos una tabla con 3 columnas
  CALL METHOD g_dd_doc->add_table
    EXPORTING
      no_of_columns = 3
      border        = '0'
      width         = '100%'
    IMPORTING
      table         = l_doctable.

* Columna del logo
  CALL METHOD l_doctable->add_column
    EXPORTING
      width  = '15%'
    IMPORTING
      column = l_col_pic.

* Columna de títulos
  CALL METHOD l_doctable->add_column
    EXPORTING
      width  = '10%'
    IMPORTING
      column = l_col_tit.

* Columna de valores (información)
  CALL METHOD l_doctable->add_column
    EXPORTING
      width  = '75%'
    IMPORTING
      column = l_col_info.

* Ponemos el logo
*  REPLACE 'XXXX' IN lv_logo WITH gs_orgvta-bukrs.
  IF so_werks-low IS NOT INITIAL.
    CONCATENATE 'ZLOGO_' so_werks-low '_ALV' INTO lv_logo.
    CALL METHOD l_col_pic->add_picture
      EXPORTING
        picture_id = lv_logo.
  ELSE.
    lv_logo = 'ZLOGO_3000_ALV'.
    CALL METHOD l_col_pic->add_picture
      EXPORTING
        picture_id = lv_logo.
  ENDIF.

* Ponemos el título del centro
  CALL METHOD l_col_tit->add_text
    EXPORTING
      text         = text-c01
      sap_color    = cl_dd_area=>list_heading
      sap_fontsize = cl_dd_area=>large.
  l_col_tit->new_line( ).

* Ponemos el título de la fecha
  CALL METHOD l_col_tit->add_text
    EXPORTING
      text         = text-c02
      sap_color    = cl_dd_area=>list_heading
      sap_fontsize = cl_dd_area=>large.
  l_col_tit->new_line( ).

* Ponemos el título de la hora
  CALL METHOD l_col_tit->add_text
    EXPORTING
      text         = text-c03
      sap_color    = cl_dd_area=>list_heading
      sap_fontsize = cl_dd_area=>large.

* Ponemos el nombre del centro

  IF so_werks-low IS NOT INITIAL.
    SELECT SINGLE name1 INTO lv_text
        FROM  t001w
        WHERE werks = so_werks-low.
    CONCATENATE so_werks-low lv_text INTO lv_text SEPARATED BY '-'.
    CALL METHOD l_col_info->add_text
      EXPORTING
        text         = lv_text
        sap_fontsize = cl_dd_document=>large.
    l_col_info->new_line( ).
  ELSE.
    SELECT SINGLE name1 INTO lv_text
        FROM  t001w
        WHERE werks = '3000'.
    CONCATENATE '3000' lv_text INTO lv_text SEPARATED BY '-'.
    CALL METHOD l_col_info->add_text
      EXPORTING
        text         = lv_text
        sap_fontsize = cl_dd_document=>large.
    l_col_info->new_line( ).
  ENDIF.

* Ponemos la fecha
  WRITE sy-datum TO lv_text DD/MM/YYYY.
  CALL METHOD l_col_info->add_text
    EXPORTING
      text         = lv_text
      sap_fontsize = cl_dd_document=>large.
  l_col_info->new_line( ).

* Ponemos la hora
  WRITE sy-uzeit TO lv_text.
  CALL METHOD l_col_info->add_text
    EXPORTING
      text         = lv_text
      sap_fontsize = cl_dd_document=>large.

* Creamos el objeto HTML en el container de arriba
  CREATE OBJECT g_html
    EXPORTING
      parent = g_container_1.

* Cargamos los textos en el visor HTML
  g_dd_doc->html_control = g_html.

* Visualizamos los textos
  CALL METHOD g_dd_doc->merge_document.
  CALL METHOD g_dd_doc->display_document
    EXPORTING
      reuse_control = 'X'
      parent        = g_container_1.

ENDFORM.                    " MOSTRAR_HTML_HEADER
*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_alv .

  DATA: lti_fieldcat TYPE lvc_t_fcat,
        lti_exctool  TYPE ui_functions.
  DATA: ls_layout  TYPE lvc_s_layo,
        ls_variant TYPE disvariant.
  DATA: lv_repid TYPE syrepid.

* Variante
  lv_repid          = sy-repid.
  ls_variant-report = lv_repid.

* Layout
  ls_layout-cwidth_opt = 'X'.
  ls_layout-info_fname = 'COLOR'.
*  ls_layout-sel_mode   = 'A'.

* Mostramos el ALV
  CALL METHOD g_grid->set_table_for_first_display
    EXPORTING
      i_buffer_active    = ' '
      i_bypassing_buffer = 'X'
      is_layout          = ls_layout
      is_variant         = ls_variant
      i_save             = 'A'
    CHANGING
      it_outtab          = <gti_datos>
      it_fieldcatalog    = gti_fieldcat.

* Volvemos a ajustar el ancho de las columnas
  PERFORM refrescar_alv .

ENDFORM.                    " MOSTRAR_ALV
*&---------------------------------------------------------------------*
*&      Form  REFRESCAR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refrescar_alv .

  DATA: ls_layout TYPE lvc_s_layo,
        ls_stable TYPE lvc_s_stbl.

* Sacamos el layout del ALV
  CALL METHOD g_grid->get_frontend_layout
    IMPORTING
      es_layout = ls_layout.

* Ponemos de nuevo que optimice las columnas
  ls_layout-cwidth_opt = 'X'.

* Cargamos de nuevo el layout
  CALL METHOD g_grid->set_frontend_layout
    EXPORTING
      is_layout = ls_layout.

* Refrescamos el ALV
  ls_stable-row = 'X'.
  ls_stable-col = 'X'.
  CALL METHOD g_grid->refresh_table_display
    EXPORTING
      is_stable = ls_stable.

ENDFORM.                    " REFRESCAR_ALV

*&---------------------------------------------------------------------*
*&      Form  PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--CTI_FIELDCAT  text
*----------------------------------------------------------------------*
FORM prepare_fielcat  CHANGING cti_fieldcat TYPE lvc_t_fcat.

  DATA: ls_fcat    TYPE lvc_s_fcat,
        ls_columna TYPE ty_clientes.

  DATA: lv_ind  TYPE i,
        lv_ncol TYPE i,
        lv_col  TYPE i,
        lv_text TYPE char20.

* Número de columnas dinámicas que vamos a añadir:
  CLEAR lv_ncol.
  DESCRIBE TABLE gti_columnas LINES lv_ncol.

* Recuperamos el catálogo de campos de la estructura genérica
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = 'ZSMM0001_GRID'
    CHANGING
      ct_fieldcat      = cti_fieldcat.

* Ponemos los campos clave
  LOOP AT cti_fieldcat INTO ls_fcat.
    lv_ind = sy-tabix.
    CASE ls_fcat-fieldname.
      WHEN 'PERIODO'.
        ls_fcat-col_id = 1.
      WHEN 'ZTOT_PER'.
        CLEAR lv_col.
        lv_col = 2 + lv_ncol.
        ls_fcat-col_id = lv_col.
      WHEN 'MEINS'.
        ls_fcat-scrtext_l = text-002.
        ls_fcat-scrtext_m = text-002.
        ls_fcat-scrtext_s = text-002.
        ls_fcat-reptext   = text-002.
        CLEAR lv_col.
        lv_col = 3 + lv_ncol.
        ls_fcat-col_id = lv_col.
    ENDCASE.
    MODIFY cti_fieldcat FROM ls_fcat INDEX lv_ind.
  ENDLOOP.

* Sacamos la línea del cliente genérico, la utilizaremos
* como plantilla para añadir al catálogo los clientes
* (columnas) dinámicos

  CLEAR lv_col.
  lv_col = 1.
  READ TABLE cti_fieldcat INTO ls_fcat WITH KEY fieldname = 'ZMENGE_CLI000'.
  IF sy-subrc = 0.
*   Borramos el cliente genérico de la tabla del catálogo
    lv_ind = sy-tabix.
    DELETE cti_fieldcat INDEX lv_ind.
*   Recorremos los clientes que hemos obtenido añadiendolos al catálogo
    LOOP AT gti_columnas INTO ls_columna.
      lv_col = lv_col + 1.
*     Nombre del campo dinámico
      CONCATENATE ls_fcat-fieldname(10) ls_columna-cont INTO ls_fcat-fieldname.
      CLEAR ls_fcat-ref_table.
      ls_fcat-scrtext_l = ls_columna-txt.
      ls_fcat-scrtext_m = ls_columna-txt.
      ls_fcat-scrtext_s = ls_columna-txt.
      ls_fcat-reptext   = ls_columna-txt.
      ls_fcat-col_id = lv_col.
*     Añadimos el campo al catálogo
      APPEND ls_fcat TO cti_fieldcat.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " PREPARE_FIELCAT
