*&---------------------------------------------------------------------*
*&  Include           ZRPP0003_FORM
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  TRASPASAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM traspasar .

  DATA: ls_header TYPE bapi2017_gm_head_01,
        ls_head   TYPE bapi2017_gm_head_ret,
        lv_doc    LIKE bapi2017_gm_head_ret-mat_doc,
        lv_year   LIKE bapi2017_gm_head_ret-doc_year,
        lt_item   LIKE bapi2017_gm_item_create OCCURS 0,
        ls_item   TYPE bapi2017_gm_item_create,
        lt_return LIKE bapiret2 OCCURS 0,
        ls_return TYPE bapiret2 .

* se condiciona la orden segun el sistema
  CASE sy-sysid.
    WHEN 'HED'.
      gc_orden = '000000600100'.
    WHEN 'HEQ'.
      gc_orden = '000000600100'.
    WHEN 'HEP'.
      gc_orden = '000000600162'.
    WHEN OTHERS.
      gc_orden = '000000600100'.
  ENDCASE.


  CLEAR ls_header.
  ls_header-pstng_date = sy-datum.
  ls_header-doc_date = sy-datum.

  CLEAR: lt_item, ls_item.
  REFRESH lt_item.
  ls_item-material = gv_matnr.
  ls_item-batch = gv_charg.
  ls_item-plant = gv_werks.
  ls_item-stge_loc = gv_lgort_or.
  ls_item-move_type = '291'.
  ls_item-entry_qnt = gv_clabs.
  ls_item-entry_uom = gv_meins.
  ls_item-move_stloc = gv_lgort_de.
  ls_item-orderid = gc_orden.
  APPEND ls_item TO lt_item.

  CLEAR: ls_head, lv_doc, lv_year, lt_return, ls_return.
  REFRESH: lt_return.

  CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
    EXPORTING
      goodsmvt_header  = ls_header
      goodsmvt_code    = '03'
*     TESTRUN          = ' '
*     GOODSMVT_REF_EWM =
    IMPORTING
      goodsmvt_headret = ls_head
      materialdocument = lv_doc
      matdocumentyear  = lv_year
    TABLES
      goodsmvt_item    = lt_item
*     GOODSMVT_SERIALNUMBER         =
      return           = lt_return
*     GOODSMVT_SERV_PART_DATA       =
*     EXTENSIONIN      =
    .

*   Comprobamos errores
  CLEAR ls_return.
  READ TABLE lt_return INTO ls_return
  WITH KEY type = 'E'.
  IF sy-subrc = 0.
    MESSAGE ls_return-message TYPE 'S'.
  ELSE.


    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = 'X'.
*     Volvemos a la dynpro inicial

    MESSAGE text-001 TYPE 'S'.


    CLEAR: gv_lgobe_or, gv_lgobe_de, gv_werks,
gv_clabs, gv_meins, gv_okcode2, gv_cod_barras, gv_matnr, gv_maktx, gv_charg.
    CLEAR: gv_okcode2, gv_okcode.
    LEAVE TO SCREEN 1000.


  ENDIF.


ENDFORM.                    " TRASPASAR
