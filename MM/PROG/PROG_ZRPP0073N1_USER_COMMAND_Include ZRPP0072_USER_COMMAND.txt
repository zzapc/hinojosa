*----------------------------------------------------------------------*
***INCLUDE ZRPP0072_USER_COMMAND.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE gs_dyn100-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL'.
      LEAVE TO SCREEN 0.
    WHEN 'REFR'.
      PERFORM refrescar_alvs.
    WHEN 'ALQUERIA'.
      PERFORM cambiar_centro USING '3000'.
    WHEN 'SARRIA'.
      PERFORM cambiar_centro USING '3020'.
    WHEN 'SANT'.
      PERFORM navegar_semana USING '-'.
    WHEN 'SACT'.
      PERFORM navegar_semana USING '='.
    WHEN 'SPOS'.
      PERFORM navegar_semana USING '+'.

    WHEN OTHERS.
  ENDCASE.

ENDMODULE.

MODULE user_command_0200 INPUT.

  DATA: lr_matnr  TYPE RANGE OF matnr,
        lsr_matnr LIKE LINE OF lr_matnr,
        lv_rc     TYPE char2.

  CASE gs_dyn200-ok_code.

    WHEN 'EXIT' OR 'BACK' OR 'CANCEL'.

**      PERFORM clear_dyn200.
      CLEAR: gs_dyn200.

      LEAVE TO SCREEN 0.

    WHEN 'CREAR_OF'.

* Validación nºbobinas
      IF gs_dyn200-sw_partida = 'X' AND
         gs_dyn200-num_bobinas IS INITIAL.

        MESSAGE |Obligatorio informar nº bobinas para bobina partida.| TYPE 'I' DISPLAY LIKE 'E'.
        EXIT.

      ENDIF.

      PERFORM check_pantalla_200 CHANGING lv_rc.

      CHECK lv_rc = '00'.

* POPUP de confirmación
      CLEAR: g_answer.
      g_titulo  = |Creación de OFs|.
      g_msg     = |Se procederá a la creación de OFs. ¿Desea continuar?|.

      PERFORM popup_confirm.

      CHECK g_answer = '1'.

      CALL METHOD gr_semana_crea_of->procesar_datos_creacion_of
        IMPORTING
          o_rc = DATA(lv_ret).

      CASE lv_ret.

        WHEN '00'.

          CALL METHOD gr_semana_crea_of->refrescar_tablas_alvs
            EXPORTING
              i_flag  = abap_true
              i_werks = gs_dyn100-werks.

          CLEAR gt_datos_ofs_pend[].
          REFRESH: gt_datos_ofs_pend.
          gt_datos_ofs_pend[] = gr_semana_crea_of->gt_ofs_pend[].

**          PERFORM clear_dyn200.
          CLEAR: gs_dyn200.

          LEAVE TO SCREEN 0.

        WHEN '01'. "Cancelación en la pantalla de aviso.

**          PERFORM clear_dyn200.
          CLEAR: gs_dyn200-ok_code.

        WHEN OTHERS.

      ENDCASE.

    WHEN 'CONSULTA_STOCK'.

      CLEAR lr_matnr[].
* Se recopilan los materiales de los repartos seleccionados para lanzar ZPP0083
      LOOP AT gs_dyn200-gt_repartos INTO DATA(ls_repart).

        CLEAR lsr_matnr.
        lsr_matnr-low = ls_repart-matnr.
        lsr_matnr-sign = 'I'.
        lsr_matnr-option = 'EQ'.
        INSERT lsr_matnr INTO TABLE lr_matnr.

      ENDLOOP.

      SUBMIT zrpp0075 WITH p_werks = gs_dyn100-werks
                      WITH s_matnr IN lr_matnr AND RETURN.

**      PERFORM clear_dyn200.
      CLEAR: gs_dyn200-ok_code.

    WHEN 'BOB_PART'.

      CASE 'X'.

        WHEN gs_dyn200-sw_simple.

          gs_dyn200-num_bobinas = 1.

        WHEN gs_dyn200-sw_partida.

          gs_dyn200-num_bobinas = 2.

        WHEN OTHERS.

      ENDCASE.

      PERFORM check_pantalla_200 CHANGING lv_rc.
**      PERFORM clear_dyn200.
      CLEAR: gs_dyn200-ok_code.

    WHEN 'ANCHO_MAX'.

      gs_dyn200-ancho_cabo = gr_semana_crea_of->calcular_ancho_maximo( gs_dyn200-num_bobinas ).

      PERFORM check_pantalla_200 CHANGING lv_rc.
**      PERFORM clear_dyn200.
      CLEAR: gs_dyn200-ok_code.

    WHEN OTHERS.

      PERFORM check_pantalla_200 CHANGING lv_rc.

  ENDCASE.

ENDMODULE.
