*&---------------------------------------------------------------------*
*&  Include           ZMM0032_I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  GET_MATNR  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE get_matnr INPUT.
  CLEAR: gv_name1, gv_matnr_input.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = gv_matnr
    IMPORTING
      output = gv_matnr_input.


  PERFORM validar .


*  SELECT SINGLE maktx FROM makt
*    INTO gv_maktx
*    WHERE matnr = gv_matnr_input  AND
*          spras = sy-langu.


ENDMODULE.                 " GET_MATNR  INPUT
*&---------------------------------------------------------------------*
*&      Module  GET_WERKS  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE get_werks INPUT.

* verificamos si el usuario tiene autorización en el centro indicado

* recuperamos la descripción del centro indicado.
  CLEAR: gv_name1.
  SELECT SINGLE name1 FROM t001w
    INTO gv_name1
    WHERE werks = gv_werks.
ENDMODULE.                 " GET_WERKS  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE gv_okcode.
    WHEN 'BACK'.
      clear: gv_okcode.
      LEAVE PROGRAM.
    WHEN 'BTN1'.
      CLEAR: gv_okcode.
      PERFORM generar_asignar.
  ENDCASE.
ENDMODULE.                 " USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*&      Module  VERIFICAR_CENTRO_MATERIAL  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE verificar_centro_material INPUT.

  DATA: wa_marc  TYPE marc,
        lv_matnr TYPE matnr.

  CHECK gv_matnr_input IS NOT INITIAL.

  SELECT SINGLE * FROM marc
    INTO wa_marc
    WHERE matnr = gv_matnr_input  AND
          werks = gv_werks.

  IF sy-subrc <> 0.
    MESSAGE e000(zmm) WITH text-001. "El material no existe en el centro
  ELSE.
    IF wa_marc-uchkz = 1 AND wa_marc-ucmat IS NOT INITIAL.
*      gv_gest_lote = wa_marc-uchkz.
*      gv_zwip = wa_marc-ucmat.
      PERFORM clear_vbles.

      MESSAGE e000(zmm) WITH text-003. "Material ZWIP ya generado y asignado
    ELSE.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          input  = gv_matnr
        IMPORTING
          output = lv_matnr.

      CONCATENATE lv_matnr 'W' INTO gv_zwip.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = gv_zwip
        IMPORTING
          output = gv_zwip.

    ENDIF.
  ENDIF.
ENDMODULE.                 " VERIFICAR_CENTRO_MATERIAL  INPUT
