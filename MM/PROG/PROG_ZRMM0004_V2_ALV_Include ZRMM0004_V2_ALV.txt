*&---------------------------------------------------------------------*
*&  Include           ZRMM0004_V2_ALV
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_alv .

  DATA: lti_fieldcat TYPE lvc_t_fcat,
        lti_exctool  TYPE ui_functions.
  DATA: ls_layout    TYPE lvc_s_layo,
        ls_variant   TYPE disvariant.
  DATA: lv_repid     TYPE syrepid.

* Variante
  lv_repid          = sy-repid.
  ls_variant-report = lv_repid.

* Preparamos el catálogo de campos
  PERFORM prepare_fielcat CHANGING lti_fieldcat.

* Layout
  ls_layout-cwidth_opt = 'X'.
*  ls_layout-sel_mode   = 'A'.

* Mostramos el ALV
  CALL METHOD g_grid->set_table_for_first_display
    EXPORTING
      i_buffer_active    = ' '
      i_bypassing_buffer = 'X'
      is_layout          = ls_layout
      is_variant         = ls_variant
      i_save             = 'A'
    CHANGING
      it_outtab          = gt_datos
      it_fieldcatalog    = lti_fieldcat.

* Volvemos a ajustar el ancho de las columnas
  PERFORM refrescar_alv .

ENDFORM.                    " MOSTRAR_ALV


*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_HTML_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_html_header .

  DATA: l_doctable    TYPE REF TO cl_dd_table_element,
        l_col_pic     TYPE REF TO cl_dd_area,
        l_col_tit     TYPE REF TO cl_dd_area,
        l_col_info    TYPE REF TO cl_dd_area.

  DATA: lv_logo       TYPE sdydo_key,
        lv_text       TYPE sdydo_text_element.

* Creamos una tabla con 3 columnas
  CALL METHOD g_dd_doc->add_table
    EXPORTING
      no_of_columns = 3
      border        = '0'
      width         = '100%'
    IMPORTING
      table         = l_doctable.

* Columna del logo
  CALL METHOD l_doctable->add_column
    EXPORTING
      width  = '15%'
    IMPORTING
      column = l_col_pic.

* Columna de títulos
  CALL METHOD l_doctable->add_column
    EXPORTING
      width  = '10%'
    IMPORTING
      column = l_col_tit.

* Columna de valores (información)
  CALL METHOD l_doctable->add_column
    EXPORTING
      width  = '75%'
    IMPORTING
      column = l_col_info.

* Ponemos el logo
*  REPLACE 'XXXX' IN lv_logo WITH gs_orgvta-bukrs.

  CONCATENATE 'ZLOGO_' g_bukrs '_ALV' INTO lv_logo.

  CONDENSE lv_logo NO-GAPS.

  CALL METHOD l_col_pic->add_picture
    EXPORTING
      picture_id = lv_logo.

* Ponemos el título del centro
  CALL METHOD l_col_tit->add_text
    EXPORTING
      text         = text-c01
      sap_color    = cl_dd_area=>list_heading
      sap_fontsize = cl_dd_area=>large.
  l_col_tit->new_line( ).

* Ponemos el título de la fecha
  CALL METHOD l_col_tit->add_text
    EXPORTING
      text         = text-c02
      sap_color    = cl_dd_area=>list_heading
      sap_fontsize = cl_dd_area=>large.
  l_col_tit->new_line( ).

* Ponemos el título de la hora
  CALL METHOD l_col_tit->add_text
    EXPORTING
      text         = text-c03
      sap_color    = cl_dd_area=>list_heading
      sap_fontsize = cl_dd_area=>large.

* Ponemos el nombre del centro
  SELECT SINGLE name1 INTO lv_text
      FROM  t001w
      WHERE werks = g_werks.
  CONCATENATE g_werks lv_text INTO lv_text SEPARATED BY '-'.
  CALL METHOD l_col_info->add_text
    EXPORTING
      text         = lv_text
      sap_fontsize = cl_dd_document=>large.
  l_col_info->new_line( ).

* Ponemos la fecha
  WRITE sy-datum TO lv_text DD/MM/YYYY.
  CALL METHOD l_col_info->add_text
    EXPORTING
      text         = lv_text
      sap_fontsize = cl_dd_document=>large.
  l_col_info->new_line( ).

* Ponemos la hora
  WRITE sy-uzeit TO lv_text.
  CALL METHOD l_col_info->add_text
    EXPORTING
      text         = lv_text
      sap_fontsize = cl_dd_document=>large.


* Creamos el objeto HTML en el container de arriba
  CREATE OBJECT g_html
    EXPORTING
      parent = g_container_1.

* Cargamos los textos en el visor HTML
  g_dd_doc->html_control = g_html.

* Visualizamos los textos
  CALL METHOD g_dd_doc->merge_document.
  CALL METHOD g_dd_doc->display_document
    EXPORTING
      reuse_control = 'X'
      parent        = g_container_1.

ENDFORM.                    " MOSTRAR_HTML_HEADER
*&---------------------------------------------------------------------*
*&      Form  REFRESCAR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refrescar_alv .

    DATA: ls_layout TYPE lvc_s_layo,
        ls_stable TYPE lvc_s_stbl.

* Sacamos el layout del ALV
  CALL METHOD g_grid->get_frontend_layout
    IMPORTING
      es_layout = ls_layout.

* Ponemos de nuevo que optimice las columnas
  ls_layout-cwidth_opt = 'X'.

* Cargamos de nuevo el layout
  CALL METHOD g_grid->set_frontend_layout
    EXPORTING
      is_layout = ls_layout.

* Refrescamos el ALV
  ls_stable-row = 'X'.
  ls_stable-col = 'X'.
  CALL METHOD g_grid->refresh_table_display
    EXPORTING
      is_stable = ls_stable.

ENDFORM.                    " REFRESCAR_ALV
*&---------------------------------------------------------------------*
*&      Form  PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LTI_FIELDCAT  text
*----------------------------------------------------------------------*
FORM prepare_fielcat  CHANGING cti_fieldcat TYPE lvc_t_fcat.

  DATA: ls_fcat   TYPE lvc_s_fcat.
  DATA: lv_ind    TYPE i.

* Recuperamos el catálogo de campos
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = 'ZEMM_DOC_TRANSPORT_ALV_V2'
    CHANGING
      ct_fieldcat      = cti_fieldcat.

  LOOP AT cti_fieldcat INTO ls_fcat.
    lv_ind = sy-tabix.
    ls_fcat-selddictxt = 'M'.

    CASE ls_fcat-fieldname.
      WHEN 'LIFNR_M'.
        ls_fcat-SCRTEXT_l = text-l01.
        ls_fcat-SCRTEXT_m = text-m01.
        ls_fcat-SCRTEXT_s = text-s01.
        ls_fcat-key = si.
      WHEN 'NAME1_M'.
        ls_fcat-SCRTEXT_l = text-l02.
        ls_fcat-SCRTEXT_m = text-m02.
        ls_fcat-scrtext_s = text-s02.
        ls_fcat-emphasize = si.
      WHEN 'BUDAT'.
        ls_fcat-scrtext_l = text-l03.
        ls_fcat-scrtext_m = text-m03.
        ls_fcat-scrtext_s = text-s03.
        ls_fcat-key = si.
      WHEN 'ZNUM_PESADA'.
        ls_fcat-scrtext_l = text-l04.
        ls_fcat-scrtext_m = text-m04.
        ls_fcat-scrtext_s = text-s04.
        ls_fcat-key = si.
      WHEN 'EBELN'.
        ls_fcat-scrtext_l = text-l05.
        ls_fcat-scrtext_m = text-m05.
        ls_fcat-scrtext_s = text-s05.
      WHEN 'MBLNR'.
        ls_fcat-scrtext_l = text-l06.
        ls_fcat-scrtext_m = text-m06.
        ls_fcat-scrtext_s = text-s06.
        ls_fcat-key = si.
      WHEN 'LIFNR_I'.
        ls_fcat-scrtext_l = text-l07.
        ls_fcat-scrtext_m = text-m07.
        ls_fcat-scrtext_s = text-s07.
        ls_fcat-key = si.
      WHEN 'NAME1_I'.
        ls_fcat-scrtext_l = text-l08.
        ls_fcat-scrtext_m = text-m08.
        ls_fcat-scrtext_s = text-s08.
        ls_fcat-emphasize = si.
      WHEN 'FRBNR'.
        ls_fcat-scrtext_l = text-l09.
        ls_fcat-scrtext_m = text-m09.
        ls_fcat-scrtext_s = text-s09.
      WHEN 'BNBTR'.
        ls_fcat-scrtext_l = text-l10.
        ls_fcat-scrtext_m = text-m10.
        ls_fcat-scrtext_s = text-s10.
      WHEN 'PCOMP'.
        ls_fcat-scrtext_l = text-l11.
        ls_fcat-scrtext_m = text-m11.
        ls_fcat-scrtext_s = text-s11.
      WHEN 'DMBTR'.
        ls_fcat-scrtext_l = text-l12.
        ls_fcat-scrtext_m = text-m12.
        ls_fcat-scrtext_s = text-s12.
      WHEN OTHERS.
    ENDCASE.
    MODIFY cti_fieldcat FROM ls_fcat INDEX lv_ind.
  ENDLOOP.

ENDFORM.                    " PREPARE_FIELCAT
