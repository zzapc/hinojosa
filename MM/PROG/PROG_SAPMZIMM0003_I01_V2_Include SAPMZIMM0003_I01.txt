*&---------------------------------------------------------------------*
*&  Include           SAPMZIMM0003_I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  EXIT_COMMAND_9000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_command_9000 INPUT.
  "> RHP 30/03/2015
  CASE okcode_9000.
    WHEN 'READ_EXCEL'.
*      PERFORM read_excel.
    WHEN OTHERS.
      LEAVE TO SCREEN 0.
  ENDCASE.
  "< RHP 30/03/2015
ENDMODULE.                 " EXIT_COMMAND_9000  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_9000 INPUT.
  PERFORM user_command_9000.
ENDMODULE.                 " USER_COMMAND_9000  INPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_command_9001 INPUT.
  PERFORM exit_command_9001.
ENDMODULE.                 " EXIT_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_9001 INPUT.
  PERFORM user_command_9001.
ENDMODULE.                 " USER_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*&      Module  VERIFICAR_PERIODO_ABIERTO  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE verificar_periodo_abierto INPUT.
*  PERFORM verificar_periodo_abierto.
ENDMODULE.                 " VERIFICAR_PERIODO_ABIERTO  INPUT

*&---------------------------------------------------------------------*
*&      Module  BOBPRV  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE bobprv INPUT.

  DATA ls_regem TYPE zemm_0003_regem_alv.
  DATA: lv_licha LIKE mch1-licha.
  DATA: lv_clabs TYPE mchb-clabs.

*1.- leer si ya se ha leido con anterioridad
  IF NOT zemm_0003_scr-bobprv IS INITIAL.
    CLEAR ls_regem.
    READ TABLE gt_regem INTO ls_regem
    WITH KEY lote_prov = zemm_0003_scr-bobprv(10).
    IF sy-subrc = 0.
      CLEAR: zemm_0003_scr-bobprv, zemm_0003_scr-info_bob.
      MESSAGE e077(zmm) WITH ls_regem-lote_prov.
    ENDIF.
  ENDIF.

*2.- comprobar que no este asignado a otro pedido
  IF NOT zemm_0003_scr-bobprv IS INITIAL.
    CLEAR lv_licha.
    SELECT SINGLE licha INTO lv_licha
    FROM mseg
    INNER JOIN mch1 ON mch1~charg = mseg~charg
*                  AND mch1~matnr = mseg~matnr
    WHERE mseg~ebeln = zemm_0003_scr-ebeln
    AND mch1~licha = zemm_0003_scr-bobprv.
    IF sy-subrc = 0.
      CLEAR lv_clabs.
      SELECT SINGLE clabs INTO lv_clabs
      FROM mchb
      INNER JOIN mch1 ON mch1~charg = mchb~charg
      WHERE mch1~licha = zemm_0003_scr-bobprv.
      IF lv_clabs > 0.
        CLEAR: zemm_0003_scr-bobprv, zemm_0003_scr-info_bob.
        MESSAGE e078(zmm) WITH ls_regem-lote_prov zemm_0003_scr-ebeln.
      ENDIF.
    ENDIF.
  ENDIF.

ENDMODULE.                 " BOBPRV  INPUT


*&---------------------------------------------------------------------*
*&      Module  EBELN  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ebeln INPUT.

  DATA: ls_ekko       TYPE ekko,
        lv_ok         TYPE xflag,
        lv_periodo(7).

  CLEAR ls_ekko.
  SELECT SINGLE * INTO ls_ekko
  FROM ekko
  WHERE ebeln = zemm_0003_scr-ebeln.
  IF sy-subrc <> 0.
    MESSAGE e084(zmm) WITH zemm_0003_scr-ebeln.
*   Pedido & no existe
  ENDIF.

* GST - 15/05/2015 ->
  IF zemm_0003_scr-budat IS NOT INITIAL.
    CLEAR lv_ok.
    CALL FUNCTION 'ZMFMM_CHECK_CIERRE'
      EXPORTING
        i_bukrs = ls_ekko-bukrs
*       I_WERKS =
        i_budat = zemm_0003_scr-budat
      IMPORTING
        e_ok    = lv_ok.

    IF lv_ok <> 'X'.
      CLEAR lv_periodo.
      CONCATENATE zemm_0003_scr-budat+4(2) zemm_0003_scr-budat+0(4)
                  INTO lv_periodo SEPARATED BY '.'.
      MESSAGE e097(zmm) WITH lv_periodo.
    ENDIF.
  ENDIF.
* GST - 15/05/2015 <-

ENDMODULE.                 " EBELN  INPUT
