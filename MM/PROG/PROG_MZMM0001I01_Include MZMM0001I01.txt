*&---------------------------------------------------------------------*
*&  Include           MZMM0001I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  gs_ztmm0001 = ztmm0001.
  LEAVE TO SCREEN 0200.

ENDMODULE.                 " USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  DATA: lv_error.

  CASE d_okcode200.
    WHEN 'SAVE'.
      CLEAR d_okcode200.
      IF gs_ztmm0001 NE ztmm0001.
        PERFORM actualizar_datos USING lv_error.
        IF lv_error IS INITIAL.
          MESSAGE s004.
        ELSE.
          MESSAGE s005.
        ENDIF.
        LEAVE TO SCREEN 0100.
      ELSE.
        MESSAGE w006.
      ENDIF.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT_COMAND_0100  INPUT
*&---------------------------------------------------------------------*
MODULE exit_comand_0100 INPUT.

  CASE d_okcode100.
    WHEN 'BACK'.
      CLEAR d_okcode100.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.                 " EXIT_COMAND_0100  INPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT_COMAND_0200  INPUT
*&---------------------------------------------------------------------*
MODULE exit_comand_0200 INPUT.

  CASE d_okcode200.
    WHEN 'BACK'.
      CLEAR d_okcode200.
      LEAVE TO SCREEN 0100.
    WHEN 'EXIT'.
      CLEAR d_okcode200.
      LEAVE TO SCREEN 0.
    WHEN 'CANC'.
      CLEAR d_okcode200.
      LEAVE TO SCREEN 0100.
  ENDCASE.

ENDMODULE.                 " EXIT_COMAND_0200  INPUT

*---------------------------------------------------------------------*
*       MODULE BELEG_SUCHEN                                           *
*---------------------------------------------------------------------*
*       Materialbeleg über 'Materialbelege zum Material' suchen.      *
*---------------------------------------------------------------------*
MODULE beleg_suchen.
  DATA: flag(1).
  flag  = 'X'.
  EXPORT flag TO MEMORY ID 'MB51_FLAG'.
  CALL TRANSACTION 'MB51'.
  GET PARAMETER ID 'MBN' FIELD ztmm0001-mblnr.
  GET PARAMETER ID 'MJA' FIELD ztmm0001-mjahr.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  BELEG_LESEN  INPUT
*&---------------------------------------------------------------------*
MODULE beleg_lesen INPUT.
  DATA: lv_mblnr TYPE mblnr.

  IF ztmm0001-mblnr IS INITIAL.
    MESSAGE e018(m7) WITH 'Doc.material'(001).
  ENDIF.
  IF ztmm0001-mjahr IS INITIAL.
    MESSAGE e018(m7) WITH 'Ejerc.doc.mat.'(002).
  ENDIF.

  SELECT SINGLE mblnr INTO lv_mblnr
    FROM mkpf
      WHERE mblnr = ztmm0001-mblnr
      AND   mjahr = ztmm0001-mjahr.
  IF sy-subrc NE 0.
    MESSAGE e062(m7) WITH ztmm0001-mblnr ztmm0001-mjahr.
  ENDIF.

  SELECT SINGLE *
    FROM ztmm0001
    WHERE mblnr = ztmm0001-mblnr
    AND   mjahr = ztmm0001-mjahr.
  IF sy-subrc NE 0.
    MESSAGE e003.
  ENDIF.

ENDMODULE.                 " BELEG_LESEN  INPUT
