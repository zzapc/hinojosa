*&---------------------------------------------------------------------*
*&  Include           ZRMM0022_SEL
*&---------------------------------------------------------------------*

*-----------------------------------------------------------------------
* SELECTION SCREEN
*-----------------------------------------------------------------------
SELECTION-SCREEN BEGIN OF BLOCK b0 WITH FRAME TITLE text-s00.
PARAMETERS:     p_mtart LIKE mara-mtart NO-DISPLAY,
                p_werks TYPE werks_d NO-DISPLAY,
                p_matkl LIKE mara-matkl OBLIGATORY MODIF ID 1.
SELECTION-SCREEN SKIP.
SELECT-OPTIONS: s_grama FOR mara-zzgramaje OBLIGATORY MODIF ID 1 NO INTERVALS,
                s_ancho   FOR mara-zzancho OBLIGATORY MODIF ID 1 NO INTERVALS,
                s_largo   FOR mara-zzlargo MODIF ID 1 NO INTERVALS.
SELECTION-SCREEN SKIP.
PARAMETERS:     p_impre TYPE numc_5 MODIF ID 1.
SELECT-OPTIONS: s_matnr FOR mara-matnr MODIF ID 2.
PARAMETERS:     p_matnr AS CHECKBOX MODIF ID 2, " del - cvivo: si apuntamos a memoria, al modificarlo se sobreescribe; MEMORY ID zrmm0022_matnr,
                p_fondo NO-DISPLAY.

SELECTION-SCREEN SKIP.
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-s01.
PARAMETERS: p2000 AS CHECKBOX MEMORY ID zrmm0022_2000,
            p2001 AS CHECKBOX MEMORY ID zrmm0022_2001,
            p2003 AS CHECKBOX MEMORY ID zrmm0022_2003,
            p2004 AS CHECKBOX MEMORY ID zrmm0022_2004,
            p2010 AS CHECKBOX MEMORY ID zrmm0022_2010,
            p2020 AS CHECKBOX MEMORY ID zrmm0022_2020,
            p2030 AS CHECKBOX MEMORY ID zrmm0022_2030,
            p2040 AS CHECKBOX MEMORY ID zrmm0022_2040,
            p2041 AS CHECKBOX MEMORY ID zrmm0022_2041,
            p2051 AS CHECKBOX MEMORY ID zrmm0022_2051,
            p2060 AS CHECKBOX MEMORY ID zrmm0022_2060,
            p2070 AS CHECKBOX MEMORY ID zrmm0022_2070.
SELECTION-SCREEN END OF BLOCK b1.
SELECTION-SCREEN END OF BLOCK b0.

SELECTION-SCREEN COMMENT 1(5) icon1.
SELECTION-SCREEN COMMENT 7(80) text-001.
SELECTION-SCREEN COMMENT /1(83) text-002.
SELECTION-SCREEN COMMENT /1(82) text-003.
SELECTION-SCREEN COMMENT /1(82) text-03b.
SELECTION-SCREEN COMMENT /1(83) text-004.
SELECTION-SCREEN COMMENT /1(83) text-005.
SELECTION-SCREEN COMMENT /1(83) text-006.

INITIALIZATION.
  GET PARAMETER ID 'ZRMM0022_MATNR' FIELD p_matnr." necesario para que esté informado en el at selection screen

AT SELECTION-SCREEN ON p_matkl.
  IF p_matkl NP '1*' AND p_matnr IS INITIAL.
    MESSAGE 'Seleccione un grupo de artículos correspondiente a un papel o cartoncillo' TYPE 'E'.
  ENDIF.

AT SELECTION-SCREEN OUTPUT.
  WRITE icon_system_help AS ICON TO icon1.

  LOOP AT SCREEN.
    IF screen-name CP 'p2*'. " checkbox de centro, verificamos autorización
      DATA(authwerks) = screen-name+1(4).

      AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
        ID 'ACTVT' FIELD '01' " crear
        ID 'WERKS' FIELD authwerks.

      IF sy-subrc NE 0.
        ASSIGN (screen-name) TO FIELD-SYMBOL(<par>). CLEAR <par>.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDIF.
*    IF screen-name CP '*IMPRE*'.
*      IF p_mtart CP 'ZPI*'.
*        screen-active = 1.
*        screen-required = 1.
*      ELSE.
*        CLEAR p_impre.
*        screen-active = 0.
*      ENDIF.
*    ENDIF.
*    IF screen-name CP '*LARGO*'.
*      IF p_mtart CP '*H'.
*        screen-active = 1.
*        IF screen-name CP '*LOW*'.
*          screen-required = 1.
*        ENDIF.
*      ELSE.
*        CLEAR s_largo[].
*        screen-active = 0.
*      ENDIF.
*    ENDIF.
    IF p_matnr IS INITIAL.
      IF screen-group1 EQ '2'.
        screen-active = 0.
      ELSEIF screen-group1 EQ '1'.
        screen-active = 1.
      ENDIF.
    ELSE.
      IF screen-group1 EQ '1'.
        screen-active = 0.
      ELSEIF screen-group1 EQ '0'.
        screen-active = 1.
      ENDIF.
    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.

AT SELECTION-SCREEN.
  IF p_werks IS NOT INITIAL.
    DATA: variable(20).

    CONCATENATE 'p' p_werks INTO variable.

    ASSIGN (variable) TO FIELD-SYMBOL(<werks>).
    IF sy-subrc EQ 0.
      <werks> = 'X'.
    ELSE.
      LEAVE PROGRAM.
    ENDIF.
  ENDIF.

  IF p2000 IS INITIAL AND
     p2001 IS INITIAL AND
     p2003 IS INITIAL AND
     p2004 IS INITIAL AND
     p2010 IS INITIAL AND
     p2020 IS INITIAL AND
     p2030 IS INITIAL AND
     p2040 IS INITIAL AND
     p2041 IS INITIAL AND
     p2051 IS INITIAL AND
     p2060 IS INITIAL AND
     p2070 IS INITIAL.
    MESSAGE 'Seleccione al menos un centro' TYPE 'E'.
  ENDIF.

  CONCATENATE 'ZMM_VALID_MTART_' p_mtart INTO texto.

  SELECT * FROM tvarvc
    WHERE name EQ @texto
    INTO TABLE @DATA(t_tvarvc).

  IF sy-subrc EQ 0. " aplica la validación
    LOOP AT t_tvarvc ASSIGNING FIELD-SYMBOL(<tvarvc>).
      MOVE-CORRESPONDING <tvarvc> TO lso_matkl.
      lso_matkl-option = <tvarvc>-opti.
      APPEND lso_matkl.
      CLEAR lso_matkl.
    ENDLOOP.
  ENDIF.

  IF p_matkl IS NOT INITIAL.
    IF lso_matkl[] IS NOT INITIAL AND p_matkl NOT IN lso_matkl.
      MESSAGE e172(zmm) WITH p_mtart p_matkl.
    ENDIF.
  ENDIF.
