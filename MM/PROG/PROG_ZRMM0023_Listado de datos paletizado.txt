*&---------------------------------------------------------------------*
*& Report  ZRMM0023
*&
*&---------------------------------------------------------------------*
*& Autor: Carlos Vivó Jiménez
*& Empresa: CIPASI
*& Fecha: 03/10/2019
*&
*& Descripción: Ver datos de paletizado en listado
*&---------------------------------------------------------------------*
REPORT zrmm0023.

TABLES: zmarcpalet.

DATA BEGIN OF gs_datos.
        INCLUDE STRUCTURE zmarcpalet.

DATA: maktx         TYPE maktx,
      zmaktx_pallet TYPE zmaktx_pallet,
      zzsectmat     TYPE zsectmat,
      zzsectmatdes  TYPE zsectmatdes.
DATA END OF gs_datos.

RANGES s_name2 FOR zwm_rf_oper-nombre.

DATA gt_datos LIKE TABLE OF gs_datos.

DATA gr_table TYPE REF TO cl_salv_table.
DATA layout_settings TYPE REF TO cl_salv_layout.
DATA layout_key      TYPE salv_s_layout_key.
DATA columns TYPE REF TO cl_salv_columns_table.
DATA column  TYPE REF TO cl_salv_column.
DATA not_found TYPE REF TO cx_salv_not_found.
DATA functions TYPE REF TO cl_salv_functions_list.
DATA display_settings TYPE REF TO cl_salv_display_settings.


SELECTION-SCREEN BEGIN OF BLOCK 1 WITH FRAME TITLE text-001.
PARAMETERS: p_werks TYPE werks_d MEMORY ID wrk MATCHCODE OBJECT h_t001w OBLIGATORY.
SELECTION-SCREEN SKIP.
SELECT-OPTIONS: s_matnr FOR zmarcpalet-matnr,
                s_kunnr FOR zmarcpalet-kunnr.
SELECTION-SCREEN SKIP.
SELECT-OPTIONS: s_pallet FOR zmarcpalet-zzmatpal.
SELECTION-SCREEN END OF BLOCK 1.

START-OF-SELECTION.

  SELECT * FROM zmarcpalet
    INTO TABLE gt_datos
    WHERE werks EQ p_werks
      AND matnr IN s_matnr
      AND kunnr IN s_kunnr
      AND zzmatpal IN s_pallet.

  IF sy-subrc NE 0.
    MESSAGE 'No hay datos para la selección realizada' TYPE 'I'.
  ELSE.
    LOOP AT gt_datos ASSIGNING FIELD-SYMBOL(<datos>).
      SELECT SINGLE maktx FROM makt
        INTO <datos>-maktx
        WHERE spras EQ sy-langu
          AND matnr EQ <datos>-matnr.

      CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
        EXPORTING
          input  = <datos>-zzmatpal
        IMPORTING
          output = <datos>-zzmatpal.

      SELECT SINGLE maktx FROM makt
        INTO <datos>-zmaktx_pallet
        WHERE spras EQ sy-langu
          AND matnr EQ <datos>-zzmatpal.

      CALL FUNCTION 'CONVERSION_EXIT_MATN1_OUTPUT'
        EXPORTING
          input  = <datos>-zzmatpal
        IMPORTING
          output = <datos>-zzmatpal.

      SELECT SINGLE zzsectmat FROM marc
        INTO <datos>-zzsectmat
        WHERE matnr EQ <datos>-matnr
          AND werks EQ p_werks.

      SELECT SINGLE zzsectmatdes FROM ztmm0018
        INTO <datos>-zzsectmatdes
        WHERE zzsectmat EQ <datos>-zzsectmat.
    ENDLOOP.
  ENDIF.

END-OF-SELECTION.

* Instanciar ALV desde tabla interna
  cl_salv_table=>factory( IMPORTING r_salv_table = gr_table CHANGING t_table = gt_datos ).

* Disposición ALV
  layout_settings = gr_table->get_layout( ).
  layout_settings->set_default( abap_true ).
  layout_key-report = sy-repid.
  layout_settings->set_key( layout_key ).
  layout_settings->set_save_restriction( if_salv_c_layout=>restrict_none ).

* Optimizar columnas
  columns = gr_table->get_columns( ).
  columns->set_optimize( ).

* Modificar/ocultar columnas
  TRY.
      column = columns->get_column( 'MANDT' ).
      column->set_visible( if_salv_c_bool_sap=>false ).
    CATCH cx_salv_not_found INTO not_found.
  ENDTRY.

* Funciones ALV activar
  functions = gr_table->get_functions( ).
  functions->set_all( ).

* Opciones generales ALV
  display_settings = gr_table->get_display_settings( ).
  display_settings->set_striped_pattern( if_salv_c_bool_sap=>true ).
  display_settings->set_list_header( 'Datos de paletizado' ).

  gr_table->display( ).
