*&---------------------------------------------------------------------*
*&  Include           ZRMM0013_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GUARDAR_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM guardar_info.

  DATA: wa_zmarcpalet TYPE zmarcpalet.

  SELECT SINGLE * FROM zmarcpalet
    INTO wa_zmarcpalet
    WHERE matnr = gv_matnr_in AND
          werks = gv_werks AND
          kunnr = ''.

  IF sy-subrc = 0.
    UPDATE zmarcpalet FROM gwa_paletizado_centro.
  ELSE.
    gwa_paletizado_centro-matnr = gv_matnr_in.
    gwa_paletizado_centro-werks = gv_werks.
    INSERT zmarcpalet FROM gwa_paletizado_centro.
  ENDIF.

  IF sy-subrc = 0.
    COMMIT WORK.
  ENDIF.


ENDFORM.                    " GUARDAR_INFO
*&---------------------------------------------------------------------*
*&      Form  GET_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZMARCPALET_ZRETRAC  text
*      <--P_GV_ZZRETRAC  text
*----------------------------------------------------------------------*
FORM get_value  USING    dom
                         campo
                CHANGING value.

  DATA:  lv_dom       TYPE          dd07l-domname,
         t_values_tab TYPE TABLE OF dd07v,
         wa_values    TYPE          dd07v.

  lv_dom = dom.

  CALL FUNCTION 'GET_DOMAIN_VALUES'
    EXPORTING
      domname         = lv_dom
      text            = 'X'
*     FILL_DD07L_TAB  = ' '
    TABLES
      values_tab      = t_values_tab
*     VALUES_DD07L    =
    EXCEPTIONS
      no_values_found = 1
      OTHERS          = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ELSE.
    READ TABLE t_values_tab INTO wa_values WITH KEY domvalue_l = campo.
    value = wa_values-ddtext.
  ENDIF.


ENDFORM.                    " GET_VALUE
*&---------------------------------------------------------------------*
*&      Form  OBTENER_DATOS_PALETIZADO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GV_MATNR_IN  text
*      -->P_GV_WERKS  text
*      <--P_GWA_PALETIZADO_CENTRO  text
*----------------------------------------------------------------------*
FORM obtener_datos_generales  USING    p_matnr
                                       p_werks
                              CHANGING paletizado_centro.


  clear: paletizado_centro.
  SELECT SINGLE * FROM zmarcpalet
    INTO paletizado_centro
    WHERE matnr = p_matnr AND
          werks = p_werks AND
          kunnr = ''.
ENDFORM.                    " OBTENER_DATOS_PALETIZADO
*&---------------------------------------------------------------------*
*&      Form  OBTENER_CLIENTES_PALETIZADO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GV_MATNR_IN  text
*      -->P_GV_WERKS  text
*      <--P_GT_CLIENTES_PALETIZADO  text
*----------------------------------------------------------------------*
FORM obtener_clientes  USING    p_matnr
                                p_werks
                       CHANGING t_clientes_paletizado TYPE tty_cli_pal.

  DATA: lt_zmarcpalet          TYPE TABLE OF zmarcpalet,
        wa_zmarcpalet          TYPE          zmarcpalet,
        wa_clientes_paletizado TYPE LINE OF  tty_cli_pal,
        lv_kunnr               TYPE          kunnr.

  CLEAR: lt_zmarcpalet, gt_clientes_paletizado.
  REFRESH: lt_zmarcpalet, gt_clientes_paletizado.

  SELECT * FROM zmarcpalet
    INTO TABLE lt_zmarcpalet
    WHERE matnr = p_matnr AND
          werks = p_werks AND
          kunnr <> ''.

  LOOP AT lt_zmarcpalet INTO wa_zmarcpalet.
    wa_clientes_paletizado-werks =  wa_zmarcpalet-werks.
    wa_clientes_paletizado-kunnr =  wa_zmarcpalet-kunnr.

    SELECT SINGLE name1 FROM kna1
      INTO wa_clientes_paletizado-name1
      WHERE kunnr = wa_zmarcpalet-kunnr.

    APPEND wa_clientes_paletizado TO t_clientes_paletizado.
  ENDLOOP.

ENDFORM.                    " OBTENER_CLIENTES_PALETIZADO
*&---------------------------------------------------------------------*
*&      Form  ALV_CLIENTES_PALETIZADO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_clientes_paletizado .

  IF gr_container IS INITIAL.
    CREATE OBJECT gr_container
      EXPORTING
        container_name = 'CONTAINER'.

    CREATE OBJECT gr_grid
      EXPORTING
        i_parent = gr_container.


    PERFORM fieldcat CHANGING lt_fcat.

    PERFORM layout CHANGING ls_layout.

    REFRESH:  lt_toolb.

    ls_toolb = cl_gui_alv_grid=>mc_fc_call_crbatch.
    APPEND ls_toolb TO lt_toolb.

    lt_tooltips = gt_exc.

* Para los eventos
    CREATE OBJECT g_application.

    SET HANDLER g_application->handle_toolbar FOR gr_grid.
    SET HANDLER g_application->handle_user_command FOR gr_grid.

  ENDIF.

  CALL METHOD gr_grid->set_table_for_first_display
    EXPORTING
      is_layout            = ls_layout
      it_except_qinfo      = lt_tooltips
      it_toolbar_excluding = lt_toolb
      i_save               = 'A'
    CHANGING
      it_fieldcatalog      = lt_fcat
      it_outtab            = gt_clientes_paletizado.

ENDFORM.                    " ALV_CLIENTES_PALETIZADO
*&---------------------------------------------------------------------*
*&      Form  FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_FCAT  text
*----------------------------------------------------------------------*
FORM fieldcat  CHANGING lt_fcat  TYPE lvc_t_fcat.

  CLEAR: lt_fcat. REFRESH: lt_fcat.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = 'ZEMM0013_CLIENTES'
*     i_client_never_display = 'X'
*     i_bypassing_buffer     =
    CHANGING
      ct_fieldcat      = lt_fcat
    EXCEPTIONS
      OTHERS           = 3.

  IF sy-subrc <> 0.

  ENDIF.
ENDFORM.                    " FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_LAYOUT  text
*----------------------------------------------------------------------*
FORM layout  CHANGING ls_layout TYPE lvc_s_layo.
  ls_layout-zebra = 'X'.
  ls_layout-cwidth_opt = 'X'.
ENDFORM.                    " LAYOUT
*&---------------------------------------------------------------------*
*&      Form  DETALLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM detalle .
  DATA: index_rows       TYPE         lvc_t_row,
        lt_sel_rows      TYPE         lvc_t_roid,
        ls_selected_line LIKE LINE OF lt_sel_rows.

  DATA: lv_error TYPE xfeld.
  DATA: lv_extnumber TYPE balnrext.
  DATA: num_reg TYPE sy-tabix.


  REFRESH lt_sel_rows.

  CALL METHOD gr_grid->get_selected_rows(
    IMPORTING
      et_row_no     = lt_sel_rows
      et_index_rows = index_rows ).

  CALL METHOD cl_gui_cfw=>flush.
*
  DESCRIBE TABLE  lt_sel_rows LINES num_reg.
  IF num_reg = 0.
    MESSAGE i000(0k) WITH text-005.
  ELSEIF num_reg > 1.
    MESSAGE i000(0k) WITH text-006.
  ELSE.
    READ TABLE lt_sel_rows INTO ls_selected_line INDEX 1.
    READ TABLE gt_clientes_paletizado INTO wa_clientes INDEX ls_selected_line-row_id.


    PERFORM obtener_detalle_clientes USING gv_matnr_in
                                           gv_werks
                                           wa_clientes-kunnr
                                  CHANGING gwa_detalle_cliente.

    IF gwa_detalle_cliente IS NOT INITIAL.
      LEAVE TO SCREEN 400.
    ENDIF.


*
*          PERFORM finalizar USING wa_datos_sel
*                           CHANGING lv_error.
*
*          IF lv_error = ''.
*            lv_extnumber = wa_datos_sel-aufnr .
*
*            CALL FUNCTION 'ZMFPP_GUARDAR_LOG'
*              EXPORTING
*                objeto    = 'ZPP'
*                subobjeto = sy-tcode
*                mensajes  = gt_messages[]
*                extnumber = lv_extnumber.
*          ENDIF.
  ENDIF.
ENDFORM.                    " DETALLE
*&---------------------------------------------------------------------*
*&      Form  NUEVO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM nuevo .




ENDFORM.                    " NUEVO
*&---------------------------------------------------------------------*
*&      Form  OBTENER_DETALLE_CLIENTES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GV_MATNR_IN  text
*      -->P_GV_WERKS  text
*      -->P_WA_CLIENTES_KUNNR  text
*      <--P_GT_CLIENTES_PALETIZADO  text
*----------------------------------------------------------------------*
FORM obtener_detalle_clientes  USING    p_matnr
                                        p_werks
                                        p_kunnr
                               CHANGING datos_clientes_paletizado.

  SELECT SINGLE * FROM zmarcpalet
    INTO datos_clientes_paletizado
    WHERE matnr = p_matnr AND
          werks = p_werks AND
          kunnr = p_kunnr.

  SELECT SINGLE name1 FROM kna1
    INTO gv_cli
    WHERE kunnr = p_kunnr.

ENDFORM.                    " OBTENER_DETALLE_CLIENTES
*&---------------------------------------------------------------------*
*&      Form  GET_ZZMATPAL_DESCRIPCION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GWA_PALETIZADO_CENTRO_ZZMATPAL  text
*      <--P_GV_ZZMATPAL_200  text
*----------------------------------------------------------------------*
FORM get_zzmatpal_descripcion  USING    zzmatpal
                               CHANGING zzmatpal_200.

  data: lv_matnr type matnr.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input         = zzmatpal
   IMPORTING
     OUTPUT        = lv_matnr
            .

  SELECT SINGLE maktx FROM makt
    INTO zzmatpal_200
    WHERE matnr = lv_matnr AND
          spras = sy-langu.
ENDFORM.                    " GET_ZZMATPAL_DESCRIPCION
