*&---------------------------------------------------------------------*
*&  Include           ZRPP0003_MOD
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_1000 INPUT.

  CASE gv_okcode.
*   Limpiamos variables de la pantalla
    WHEN 'CLEAN1000'.
      CLEAR: gv_cod_barras, gv_matnr, gv_maktx, gv_charg, gv_werks.
      CLEAR: gv_okcode.

*   Pasamos a la dynpro 300
    WHEN 'OK1000'.

** RELLENAR EL CENTRO/ALMACEN ORIGEN
*      IF NOT gv_matnr IS INITIAL AND NOT gv_charg IS INITIAL .
*        SELECT SINGLE mchb~werks mchb~clabs mara~meins t001l~lgort t001l~lgobe
*                      INTO (gv_werks, gv_clabs, gv_meins, gv_lgort_or, gv_lgobe_or)
*        FROM mchb
*        INNER JOIN t001l ON mchb~lgort = t001l~lgort
*        INNER JOIN mara ON mchb~matnr = mara~matnr
*        WHERE mchb~matnr = gv_matnr
*        AND mchb~charg = gv_charg
*        AND mchb~clabs > 0.
*      ENDIF.

      CLEAR: gv_okcode.

      LEAVE TO SCREEN 2000.
    WHEN 'RETURN1000'.
      CLEAR: gv_cod_barras, gv_matnr, gv_maktx, gv_charg, gv_werks.
      CLEAR: gv_okcode.
      SET SCREEN 0.
      LEAVE SCREEN.

  ENDCASE.
  CLEAR gv_okcode.

ENDMODULE.                 " USER_COMMAND_1000  INPUT


*&---------------------------------------------------------------------*
*&      Module  GV_COD_BARRAS  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE gv_cod_barras INPUT.

  gv_matnr = gv_cod_barras(18).
  gv_charg = gv_cod_barras+18(10).

  SELECT SINGLE *
  FROM mara
  WHERE matnr = gv_matnr.
  IF sy-subrc = 0.

    SELECT SINGLE maktx INTO gv_maktx
    FROM makt
    WHERE matnr = gv_matnr
    AND spras = sy-langu.

* RELLENAR EL CENTRO/ALMACEN ORIGEN
    IF NOT gv_matnr IS INITIAL AND NOT gv_charg IS INITIAL .
      SELECT SINGLE *
      FROM mara
      WHERE matnr = gv_matnr.
      IF sy-subrc <> 0.
        MESSAGE e006 WITH gv_matnr.
      ELSE.
        SELECT SINGLE *
        FROM mchb
        WHERE matnr = gv_matnr
        AND charg = gv_charg.
        IF sy-subrc <> 0.
          MESSAGE e007 WITH gv_charg.
        ELSE.

          " Obtener centro del usuario actual:
          CLEAR gv_werks.
          SELECT SINGLE parva FROM usr05
          INTO gv_werks
          WHERE bname = sy-uname AND
          parid = 'WRK'.

          IF gv_werks IS INITIAL.
            MESSAGE e104 WITH sy-uname.
          ELSE.


          SELECT SINGLE mchb~werks mchb~clabs mara~meins t001l~lgort t001l~lgobe
                        INTO (gv_werks, gv_clabs, gv_meins, gv_lgort_or, gv_lgobe_or)
          FROM mchb
          INNER JOIN t001l ON mchb~lgort = t001l~lgort
          INNER JOIN mara ON mchb~matnr = mara~matnr
          WHERE mchb~matnr = gv_matnr
          AND mchb~charg = gv_charg
          AND mchb~clabs > 0.
          IF sy-subrc = 0.
            IF gv_lgort_or IS INITIAL OR gv_lgort_de IS INITIAL.
              MESSAGE e003.
            ELSE.
              IF gv_lgort_or = gv_lgort_de.
                MESSAGE e005.
              ELSE.
                IF gv_clabs = 0.
                  MESSAGE e009 WITH gv_charg.
                ELSE.
                  PERFORM traspasar.
                ENDIF.
              ENDIF.
            ENDIF.
          ELSE.
            MESSAGE e007.
          ENDIF.
        ENDIF.
       ENDIF.
      ENDIF.
    ELSE.
      MESSAGE e008.
    ENDIF.

  ENDIF.

ENDMODULE.                 " GV_COD_BARRAS  INPUT

*&---------------------------------------------------------------------*
*&      Module  STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_2000 OUTPUT.

  SET PF-STATUS '2000'.
*  SET TITLEBAR 'xxx'.


ENDMODULE.                 " STATUS_2000  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_2000 INPUT.

  CASE gv_okcode2.
*   Limpiamos variables de la pantalla
    WHEN 'CLEAN2000'.
      CLEAR: gv_lgort_or, gv_lgort_de, gv_lgobe_or, gv_lgobe_de, gv_werks,
      gv_clabs, gv_meins, gv_okcode2.

*   Pasamos a la dynpro 300
    WHEN 'OK2000'.
      IF gv_lgort_or IS INITIAL OR gv_lgort_de IS INITIAL.
        MESSAGE e003.
      ELSE.
        PERFORM traspasar.
      ENDIF.


    WHEN 'RETURN2000'.
      CLEAR: gv_lgort_or, gv_lgort_de, gv_lgobe_or, gv_lgobe_de, gv_werks,
       gv_clabs, gv_meins, gv_okcode2, gv_cod_barras, gv_matnr, gv_maktx, gv_charg.
      CLEAR: gv_okcode2.
      LEAVE TO SCREEN 1000.

  ENDCASE.
  CLEAR gv_okcode2.

ENDMODULE.                 " USER_COMMAND_2000  INPUT

*&---------------------------------------------------------------------*
*&      Module  GV_LGORT_OR  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE gv_lgort_or INPUT.

  IF NOT gv_lgort_or IS INITIAL.
    CLEAR gv_lgobe_or.
    SELECT SINGLE lgobe INTO gv_lgobe_or
    FROM t001l
    WHERE lgort = gv_lgort_or.
  ENDIF.

ENDMODULE.                 " GV_LGORT_OR  INPUT

*&---------------------------------------------------------------------*
*&      Module  GV_LGORT_DE  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE gv_lgort_de INPUT.

  IF NOT gv_lgort_de IS INITIAL.
    CLEAR gv_lgobe_de.
    SELECT SINGLE lgobe INTO gv_lgobe_de
    FROM t001l
    WHERE lgort = gv_lgort_de.
  ENDIF.

ENDMODULE.                 " GV_LGORT_DE  INPUT

*&---------------------------------------------------------------------*
*&      Module  EXIT_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_2000 INPUT.

  LEAVE TO SCREEN 1000.

ENDMODULE.                 " EXIT_2000  INPUT
