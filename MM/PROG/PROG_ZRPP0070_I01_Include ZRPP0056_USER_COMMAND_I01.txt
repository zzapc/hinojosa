*----------------------------------------------------------------------*
***INCLUDE ZRPP0056_USER_COMMAND_I01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  IF gs_dyn100-ok_code <> 'EXIT' AND
     gs_dyn100-ok_code <> 'BACK' AND
     gs_dyn100-ok_code <> 'CANCEL'.

    IF gs_dyn100-operario IS INITIAL.
      MESSAGE |Seleccionar operario.| TYPE 'S' DISPLAY LIKE 'E' .
      EXIT.
    ENDIF.

  ENDIF.

  CASE gs_dyn100-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL'.
      LEAVE PROGRAM.
    WHEN 'ENTR'. "Registro de entrada
      CLEAR gs_dyn200.
*      CALL SCREEN 0200.
      SET SCREEN 0200.
    WHEN 'ESPE'. "Registros de espera
*      CALL SCREEN 0300.
      SET SCREEN 0300.
    WHEN 'SALI'. "Registros en planta
      SET SCREEN 0400.
    WHEN 'REGI'.
*      CALL TRANSACTION 'ZPP0077'.


* Informar SO con fecha del dia y operario para el borrado.
      DATA: lr_fec  TYPE RANGE OF matnr,
            lsr_fec LIKE LINE OF lr_fec.

      CLEAR lsr_fec.
      lsr_fec-low = sy-datum.
      lsr_fec-high = sy-datum.
      lsr_fec-sign = 'I'.
      lsr_fec-option = 'EQ'.
      INSERT lsr_fec INTO TABLE lr_fec.

      SUBMIT zrpp0071 WITH p_oper = gs_dyn100-operario
                      WITH s_fec IN lr_fec AND RETURN VIA SELECTION-SCREEN.

    WHEN OTHERS.
  ENDCASE.


ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE procesar_intro INPUT.

  CASE gs_dyn200-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL' OR 'CANC'.
      EXIT.
  ENDCASE.

  PERFORM tratar_intro_200 .

ENDMODULE.

MODULE procesar_intro_500 INPUT.

  CASE gs_dyn500-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL' OR 'CANC'.
      EXIT.
  ENDCASE.

  PERFORM tratar_intro_500 .

ENDMODULE.


MODULE user_command_0200 INPUT.

  DATA: l_rc            TYPE char2,
        lr_reg_vehiculo TYPE REF TO zclpp_reg_vehiculo_master.
  DATA: l_matricula LIKE gs_dyn200-zmatricula1.

  CASE gs_dyn200-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL' OR 'CANC'.
      CLEAR gs_dyn200-ok_code.
      CASE gs_dyn200-sw_from_espera.
        WHEN ' '.   LEAVE TO SCREEN 100.
        WHEN 'X'.   LEAVE TO SCREEN 300.
      ENDCASE.

    WHEN 'NEWCON'. "Alta conductor
      PERFORM alta_conductor.

    WHEN 'MODCON'.
      IF gs_dyn200-nombre IS INITIAL.
        MESSAGE 'Introducir id conductor válido para modificar.' TYPE 'S' DISPLAY LIKE 'E' .
        EXIT.
      ENDIF.


      PERFORM modif_conductor.
*    WHEN 'NEWVEHI'.
*      PERFORM alta_vehiculo.
*    WHEN 'MODVEH'.
*      PERFORM modif_vehiculo.
    WHEN 'AESPERA'.
      PERFORM entrada_a_espera.
    WHEN 'ADESTINO'.
      PERFORM entrada_a_destino.
    WHEN 'NEWVEHI'.
      IF gs_dyn200-dninie IS INITIAL.
        MESSAGE |Informar Id conductor.| TYPE 'I' DISPLAY LIKE 'E'.
        EXIT.
      ENDIF.

      CALL FUNCTION 'ZMPP_MOSTRAR_REL_VEHICULOS'
        EXPORTING
          i_werks        = gs_dyn200-werks
          i_dninie       = gs_dyn200-dninie
          i_operario     = gs_dyn100-operario
          i_forzar_popup = 'X'
        IMPORTING
          o_zmatricula1  = l_matricula
          o_rc           = l_rc.
      IF l_matricula IS NOT INITIAL.
        gs_dyn200-zmatricula1 = l_matricula.
      ENDIF.

  ENDCASE.

  CLEAR: gs_dyn200-ok_code.

ENDMODULE.

MODULE user_command_0300 INPUT.
  CASE gs_dyn300-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL' OR 'CANC'.
      CLEAR: gs_dyn300-ok_code , gs_dyn200-sw_from_espera. " gw_desde_300.
      LEAVE TO SCREEN 0100.
    WHEN OTHERS.
  ENDCASE.

ENDMODULE.

MODULE user_command_0400 INPUT.
  CASE gs_dyn400-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL' OR 'CANC'.
      CLEAR gs_dyn400-ok_code.
      LEAVE TO SCREEN 0100.
    WHEN OTHERS.
  ENDCASE.

ENDMODULE.

MODULE user_command_0500 INPUT.


  CASE gs_dyn500-ok_code.
    WHEN 'EXIT' OR 'BACK' OR 'CANCEL' OR 'CANC'.
      CLEAR gs_dyn500-ok_code.
      LEAVE TO SCREEN 400.
* DTM - Botón modificar albarán
    WHEN 'BAL1'.
      CLEAR gs_dyn500-ok_code.
      PERFORM mostrar_popup_albaran USING 'PA1'
                                  CHANGING gs_dyn500-albaran.
* DTM
    WHEN 'BPB1'.
      CLEAR gs_dyn500-ok_code.
      PERFORM mostrar_popup_pesos USING    'PB1'
                                CHANGING gs_dyn500-peso_bruto.
    WHEN 'BPB2'.
      CLEAR gs_dyn500-ok_code.
      PERFORM mostrar_popup_pesos USING    'PB2'
                               CHANGING gs_dyn500-peso_bruto_remol.
    WHEN 'BTA1'.
      CLEAR gs_dyn500-ok_code.
      PERFORM mostrar_popup_pesos USING    'TA1'
                                CHANGING gs_dyn500-tara.
    WHEN 'BTA2'.
      CLEAR gs_dyn500-ok_code.
      PERFORM mostrar_popup_pesos USING    'TA2'
                                CHANGING gs_dyn500-tara_remol.
    WHEN 'BCONT'.
*      perFORM popup_contenedores CHANGING gs_dyn500-contenedor_entr.
      CLEAR gs_dyn500-ok_code.
      gs_dyn500-sw_cont_entr = 'X'.
    WHEN 'SALIDA'.
      CLEAR gs_dyn500-ok_code.
      PERFORM validar_dyn500 CHANGING l_rc.

      CHECK l_rc = '00'.

      PERFORM grabar_salida_vehiculo CHANGING l_rc.

      IF l_rc <> '00'.
*        MESSAGE |Grabación de salida de materia prima cancelada.| TYPE 'W'.
        EXIT.
      ENDIF.

      IF zclpp_reg_vehiculo_master=>validar_turno_actual( i_turno = gs_dyn100-turno ) = 'E'.

        CLEAR: gs_dyn100-turno , gs_dyn100-operario.
        LEAVE TO SCREEN 100.
        EXIT.
      ENDIF.

      CHECK l_rc = '00'.

* Si se trata de salida de MP, preguntamos si hacer entrada de expediciones.
      IF gs_dyn500-destino  = '01' AND " MP
         gs_dyn500-tp_carga = '1'.     " MP

        PERFORM popup_mp_2_expediciones CHANGING l_rc. "Navegación a DYN-200 para Expediciones.

      ENDIF.

      IF l_rc = '00'.
        PERFORM obtener_reg_en_planta.
        gs_dyn400-go_alv->refresh( ).
        LEAVE TO SCREEN 400.
      ENDIF.


    WHEN OTHERS.
  ENDCASE.

*  CLEAR gs_dyn500-ok_code.
ENDMODULE.
