*&---------------------------------------------------------------------*
*&  Include           ZMM0025R_F01
*&---------------------------------------------------------------------*


FORM obtener_datos.

  TYPES: BEGIN OF ty_pedido,
           ebeln          LIKE ekko-ebeln,
           bukrs          LIKE ekko-bukrs,
           lifnr          LIKE ekko-lifnr,
           waers          LIKE ekko-waers,
           bsart          LIKE ekko-bsart,
           bstyp          LIKE ekko-bstyp,
           knumv          LIKE ekko-knumv,
           ebelp          LIKE ekpo-ebelp,
           netwr          LIKE ekpo-netwr,
           menge          LIKE ekpo-menge,
           meins          LIKE ekpo-meins,
           werks          LIKE ekpo-werks,
           lgort          LIKE ekpo-lgort,
           txz01          LIKE ekpo-txz01,
           matnr          LIKE ekpo-matnr,
           bldat          LIKE ztmm0006-bldat,
           budat          LIKE ztmm0006-budat,
           zcontabilizado LIKE ztmm0006-zcontabilizado,
           zmatricula1    LIKE ztmm0006-zmatricula1,
           zmatricula2    LIKE ztmm0006-zmatricula2,
           zhumedad       LIKE ztmm0006-zhumedad,
           zentrada       LIKE ztmm0006-zentrada,
         END OF ty_pedido.

  TYPES: BEGIN OF ty_factura,
           mblnr LIKE mkpf-mblnr,
           mjahr LIKE mkpf-mjahr,
           xblnr LIKE mkpf-xblnr,
           bldat LIKE mkpf-bldat,
           budat LIKE mkpf-budat,
           frbnr LIKE mkpf-frbnr,
         END OF ty_factura.

  TYPES: BEGIN OF ty_t001,
           bukrs LIKE t001-bukrs,
           butxt LIKE t001-butxt,
         END OF ty_t001.

  TYPES: BEGIN OF ty_t161t,
           bsart LIKE t161t-bsart,
           bstyp LIKE t161t-bstyp,
           batxt LIKE t161t-batxt,
         END OF ty_t161t.

  TYPES: BEGIN OF ty_lfa1,
           lifnr LIKE lfa1-lifnr,
           name1 LIKE lfa1-name1,
         END OF ty_lfa1.

  TYPES: BEGIN OF ty_tcurt,
           waers LIKE tcurt-waers,
           ltext LIKE tcurt-ltext,
           ktext LIKE tcurt-ktext,
         END OF ty_tcurt.

  TYPES: BEGIN OF ty_t006a,
           msehi LIKE t006a-msehi,
           mseht LIKE t006a-mseht,
           msehl LIKE t006a-msehl,
         END OF ty_t006a.

  TYPES: BEGIN OF ty_t001w,
           werks LIKE t001w-werks,
           name1 LIKE t001w-name1,
         END OF ty_t001w.

  TYPES: BEGIN OF ty_t001l,
           werks LIKE t001l-werks,
           lgort LIKE t001l-lgort,
           lgobe LIKE t001l-lgobe,
         END OF ty_t001l.

  TYPES: BEGIN OF ty_znum_pesada,
           zentrada    LIKE ztmm0007-zentrada,
           znum_pesada LIKE ztmm0007-znum_pesada,
         END OF ty_znum_pesada.

  DATA: ls_data        LIKE LINE OF           gt_data,
        lt_pedidos     TYPE STANDARD TABLE OF ty_pedido,
        ls_pedidos     LIKE LINE OF           lt_pedidos,
        lt_ekbe        TYPE STANDARD TABLE OF ekbe,
        ls_ekbe        LIKE LINE OF           lt_ekbe,
        lt_facturas    TYPE STANDARD TABLE OF ty_factura,
        ls_factura     LIKE LINE OF           lt_facturas,
        lt_znum_pesada TYPE STANDARD TABLE OF ty_znum_pesada,
        ls_znum_pesada LIKE LINE OF           lt_znum_pesada,
        lt_text_bukrs  TYPE STANDARD TABLE OF ty_t001,
        ls_text_bukrs  LIKE LINE OF           lt_text_bukrs,
        lt_text_bsart  TYPE STANDARD TABLE OF ty_t161t,
        ls_text_bsart  LIKE LINE OF           lt_text_bsart,
        lt_text_lifnr  TYPE STANDARD TABLE OF ty_lfa1,
        ls_text_lifnr  LIKE LINE OF           lt_text_lifnr,
        lt_text_waers  TYPE STANDARD TABLE OF ty_tcurt,
        ls_text_waers  LIKE LINE OF           lt_text_waers,
        lt_text_meins  TYPE STANDARD TABLE OF ty_t006a,
        ls_text_meins  LIKE LINE OF           lt_text_meins,
        lt_text_werks  TYPE STANDARD TABLE OF ty_t001w,
        ls_text_werks  LIKE LINE OF           lt_text_werks,
        lt_text_lgort  TYPE STANDARD TABLE OF ty_t001l,
        ls_text_lgort  LIKE LINE OF           lt_text_lgort,
        ls_rv61a       TYPE                   rv61a,
        ls_komk        TYPE                   komk,
        lt_dd07v_tab   TYPE STANDARD TABLE OF dd07v,
        ls_dd07v_tab   LIKE LINE OF           lt_dd07v_tab.


  CLEAR: gt_data[].

  "Pedidos
  SELECT ekko~ebeln ekko~bukrs ekko~lifnr ekko~waers ekko~bsart ekko~bstyp
         ekko~knumv ekpo~ebelp ekpo~netwr ekpo~menge ekpo~meins ekpo~werks
         ekpo~lgort ekpo~txz01 ekpo~matnr ztmm0006~bldat ztmm0006~budat
         ztmm0006~zcontabilizado ztmm0006~zmatricula1 ztmm0006~zmatricula2
         ztmm0006~zhumedad ztmm0006~zentrada
         FROM ( ekko
                INNER JOIN ekpo
                ON  ekpo~ebeln = ekko~ebeln
                INNER JOIN ztmm0006
                ON  ztmm0006~ebeln = ekpo~ebeln )
         INTO TABLE lt_pedidos
              WHERE ekko~bukrs IN sp_bukrs
                AND ekko~ebeln IN sp_ebeln
                AND ekko~lifnr IN sp_lifnr
                AND ztmm0006~bldat IN sp_bldat
                AND ztmm0006~budat IN sp_budat
                AND ztmm0006~zcontabilizado IN sp_zcont.

  IF lt_pedidos[] IS INITIAL.
    "No se han encontrado pedidos de recortes
    MESSAGE e116(zmm).
  ENDIF.

  "Entradas de mercancias
  SELECT * FROM ekbe
    INTO CORRESPONDING FIELDS OF TABLE lt_ekbe
    FOR ALL ENTRIES IN lt_pedidos
    WHERE ebeln EQ lt_pedidos-ebeln
          AND ebelp EQ lt_pedidos-ebelp
          AND vgabe EQ '1'.

  IF lt_ekbe[] IS INITIAL.
    "No se han encontrado entradas de recortes
    MESSAGE e117(zmm).
  ENDIF.

  SELECT mblnr mjahr xblnr bldat budat frbnr FROM mkpf
    INTO TABLE lt_facturas
    FOR ALL ENTRIES IN lt_ekbe
     WHERE mblnr EQ lt_ekbe-belnr
       AND mjahr EQ lt_ekbe-gjahr.

  IF lt_facturas[] IS INITIAL.
    "No se han encontrado facturas de recortes
    MESSAGE e118(zmm).
  ENDIF.

  SELECT zentrada znum_pesada FROM ztmm0007
    INTO TABLE lt_znum_pesada
    FOR ALL ENTRIES IN lt_pedidos
    WHERE zentrada EQ lt_pedidos-zentrada.

  "Buscamos textos Sociedad
  SELECT bukrs butxt FROM t001
    INTO TABLE lt_text_bukrs
    FOR ALL ENTRIES IN lt_pedidos
    WHERE bukrs = lt_pedidos-bukrs.

  "Buscamos textos Clase y tipo de pedido
  SELECT bsart bstyp batxt FROM t161t
    INTO TABLE lt_text_bsart
    FOR ALL ENTRIES IN lt_pedidos
    WHERE bsart = lt_pedidos-bsart AND
          bstyp = lt_pedidos-bstyp AND
          spras = sy-langu.

  "Buscamos textos Proveedor
  SELECT lifnr name1 FROM lfa1
    INTO TABLE lt_text_lifnr
    FOR ALL ENTRIES IN lt_pedidos
    WHERE lifnr = lt_pedidos-lifnr AND
          spras = sy-langu.

  "Buscamos textos Moneda
  SELECT waers ltext ktext FROM tcurt
    INTO TABLE lt_text_waers
    FOR ALL ENTRIES IN lt_pedidos
    WHERE waers = lt_pedidos-waers AND
          spras = sy-langu.

  "Buscamos textos Unidad de medida
  SELECT msehi mseht msehl FROM t006a
    INTO TABLE lt_text_meins
    FOR ALL ENTRIES IN lt_pedidos
    WHERE msehi = lt_pedidos-meins AND
          spras = sy-langu.

  "Buscamos textos Centros
  SELECT werks name1 FROM t001w
    INTO TABLE lt_text_werks
    FOR ALL ENTRIES IN lt_pedidos
    WHERE werks = lt_pedidos-werks AND
          spras = sy-langu.

  "Buscamos textos Almacenes
  SELECT werks lgort lgobe FROM t001l
    INTO TABLE lt_text_lgort
    FOR ALL ENTRIES IN lt_pedidos
    WHERE werks = lt_pedidos-werks AND
          lgort = lt_pedidos-lgort.

  "Texto tipo de pedido
  CALL FUNCTION 'DD_DOMVALUES_GET'
    EXPORTING
      domname   = 'BSTYP'
      text      = 'X'
      langu     = sy-langu
*     BYPASS_BUFFER        = ' '
*   IMPORTING
*     RC        =
    TABLES
      dd07v_tab = lt_dd07v_tab.


  "Contruimos datos de salida
  LOOP AT lt_pedidos INTO ls_pedidos.

    CLEAR: ls_data, ls_dd07v_tab.

    MOVE-CORRESPONDING ls_pedidos TO ls_data.

    "Clave de moneda
    ls_data-waers001 = ls_pedidos-waers.
    "Unidad de medida de pedido
    ls_data-meins001 = ls_pedidos-meins.

    "Entrada
    READ TABLE lt_ekbe INTO ls_ekbe WITH KEY ebeln = ls_pedidos-ebeln ebelp = ls_pedidos-ebelp.
    IF sy-subrc = 0.
      "Factura
      READ TABLE lt_facturas INTO ls_factura WITH KEY mblnr = ls_ekbe-belnr mjahr = ls_ekbe-gjahr.
      IF sy-subrc = 0.
        ls_data-frbnr = ls_factura-frbnr.
        ls_data-xblnr = ls_factura-xblnr.
      ENDIF.
    ENDIF.

    "
    SELECT COUNT(*) FROM ekbe
      INTO ls_data-nbalas
      WHERE ebeln EQ ls_pedidos-ebeln
                  AND ebelp EQ ls_pedidos-ebelp
                  AND vgabe EQ '1'.

    "Nº de Ticket
    READ TABLE lt_znum_pesada INTO ls_znum_pesada WITH KEY zentrada = ls_pedidos-zentrada.
    IF sy-subrc = 0.
      ls_data-znum_pesada = ls_znum_pesada-znum_pesada.
    ENDIF.

    "kbetr: Importe o porcentaje de la condición
    "kwert: Valor de la condición
    "tdlnr: Número de transportista
    SELECT SINGLE kbetr kwert lifnr FROM konv
      INTO (ls_data-kbetr, ls_data-kwert, ls_data-tdlnr)
        WHERE knumv EQ ls_pedidos-knumv
                   AND kposn EQ ls_pedidos-ebelp
                   AND kschl EQ 'ZFC1'.

    IF ls_data-tdlnr IS NOT INITIAL.
      "Nombre del transportista
      SELECT SINGLE name1 FROM lfa1
        INTO ls_data-namet
        WHERE lifnr EQ ls_data-tdlnr.
    ENDIF.

    CALL FUNCTION 'RSAQRT_TEXTFIELD_CONTEXT'
      EXPORTING
        name  = 'KOMK'
        struc = ls_komk.

    IF ls_komk IS NOT INITIAL.
      ls_data-waerk = ls_komk-waerk.
    ENDIF.

    CALL FUNCTION 'RSAQRT_TEXTFIELD_CONTEXT'
      EXPORTING
        name  = 'RV61A'
        struc = ls_rv61a.

    IF ls_rv61a IS NOT INITIAL.
      ls_data-koei1 = ls_rv61a-koei1.
    ENDIF.

    "Valor Total
    ls_data-valor_total = ls_data-netwr + ls_data-kwert.

    "Texto Pedido
    ls_data-text_ekko_ebeln = ls_pedidos-txz01.

    "Texto Sociedad
    READ TABLE lt_text_bukrs INTO ls_text_bukrs WITH KEY bukrs = ls_pedidos-bukrs.
    IF sy-subrc = 0.
      ls_data-text_ekko_bukrs = ls_text_bukrs-butxt.
    ENDIF.

    "Texto Clase de pedido
    READ TABLE lt_text_bsart INTO ls_text_bsart WITH KEY bsart = ls_pedidos-bsart.
    IF sy-subrc = 0.
      ls_data-text_ekko_bsart = ls_text_bsart-batxt.
    ENDIF.

    "Texto Tipo de pedido
    READ TABLE lt_dd07v_tab INTO ls_dd07v_tab WITH KEY domvalue_l = ls_pedidos-bstyp.
    IF sy-subrc = 0.
      ls_data-text_ekko_bstyp = ls_dd07v_tab-ddtext.
    ENDIF.

    "Texto Proveedor
    READ TABLE lt_text_lifnr INTO ls_text_lifnr WITH KEY lifnr = ls_pedidos-lifnr.
    IF sy-subrc = 0.
      ls_data-text_ekko_lifnr = ls_text_lifnr-name1.
    ENDIF.

    "Texto Moneda
    READ TABLE lt_text_waers INTO ls_text_waers WITH KEY waers = ls_pedidos-waers.
    IF sy-subrc = 0.
      ls_data-text_ekko_waers = ls_text_waers-ltext.
    ENDIF.

    "Texto Unidad de medida
    READ TABLE lt_text_meins INTO ls_text_meins WITH KEY msehi = ls_pedidos-meins.
    IF sy-subrc = 0.
      ls_data-text_ekpo_meins = ls_text_meins-msehl.
    ENDIF.

    "Texto Centro
    READ TABLE lt_text_werks INTO ls_text_werks WITH KEY werks = ls_pedidos-werks.
    IF sy-subrc = 0.
      ls_data-text_ekpo_werks = ls_text_werks-name1.
    ENDIF.

    "Texto Almacen
    READ TABLE lt_text_lgort INTO ls_text_lgort WITH KEY werks = ls_pedidos-werks lgort = ls_pedidos-lgort .
    IF sy-subrc = 0.
      ls_data-text_ekpo_lgort = ls_text_lgort-lgobe.
    ENDIF.

    ls_data-%alvcount = 1.

    APPEND ls_data TO gt_data.
  ENDLOOP.

ENDFORM.
