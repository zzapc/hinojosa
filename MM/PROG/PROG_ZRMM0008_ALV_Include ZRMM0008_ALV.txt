*&---------------------------------------------------------------------*
*&  Include           ZRMM0008_ALV
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_alv .

  DATA: lt_fieldcat TYPE lvc_t_fcat,
        ls_variant  TYPE disvariant.

  DATA: ls_lvc_s_layo TYPE lvc_s_layo.

* Variante
  PERFORM alv_prepare_variant CHANGING ls_variant.
*Preparamos el catálogo de campos
  PERFORM alv_prepare_fielcat CHANGING lt_fieldcat.
*Preparamos el layout
  PERFORM alv_prepare_layout CHANGING ls_lvc_s_layo.

* Mostramos el ALV
  CALL METHOD g_grid->set_table_for_first_display
    EXPORTING
      i_buffer_active               = ' '
      i_bypassing_buffer            = 'X'
      is_layout                     = ls_lvc_s_layo
      i_structure_name              = 'GT_DATOS'
      is_variant                    = ls_variant
      i_save                        = 'A'
    CHANGING
      it_outtab                     = gt_datos[]
      it_fieldcatalog               = lt_fieldcat
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
*   Implement suitable error handling here
  ENDIF.

* Volvemos a ajustar el ancho de las columnas
  PERFORM alv_refrescar.


ENDFORM.                    " MOSTRAR_ALV
*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_FIELDCAT  text
*----------------------------------------------------------------------*
FORM alv_prepare_fielcat  CHANGING p_fieldcat TYPE lvc_t_fcat.

  DATA: ls_fcat TYPE lvc_s_fcat.

  DATA: lv_ind TYPE i.

* Recuperamos el catálogo de campos
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZSTMM_BOB_EXP_QM'
    CHANGING
      ct_fieldcat            = p_fieldcat
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

* Recorremos el catálogo de campos modificandolo
  LOOP AT p_fieldcat INTO ls_fcat.
    lv_ind = sy-tabix.
    CASE ls_fcat-fieldname.
      WHEN 'LOTE_ORIG'.
        ls_fcat-scrtext_l = 'Lote Rollo'.
        ls_fcat-scrtext_m = 'Lote Rollo'.
        ls_fcat-scrtext_s = 'Lote Rollo'.
        ls_fcat-reptext = 'Lote Rollo'.
      WHEN 'MATNR_ORIG'.
        ls_fcat-scrtext_l = 'Material Rollo'.
        ls_fcat-scrtext_m = 'Material Rollo'.
        ls_fcat-scrtext_s = 'Material Rollo'.
        ls_fcat-reptext = 'Material Rollo'.
    ENDCASE.
* Modificamos la línea
    MODIFY p_fieldcat FROM ls_fcat INDEX lv_ind.
  ENDLOOP.

ENDFORM.                    " ALV_PREPARE_FIELCAT
*&---------------------------------------------------------------------*
*&      Form  ALV_PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LS_LVC_S_LAYO  text
*----------------------------------------------------------------------*
FORM alv_prepare_layout  CHANGING p_lvc_s_layo TYPE lvc_s_layo.

* Para que muestre el ancho de las columnas optimizado
  p_lvc_s_layo-cwidth_opt = 'X'.
  p_lvc_s_layo-sel_mode   = 'A'.

ENDFORM.                    " ALV_PREPARE_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESCAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_refrescar .

  DATA: ls_stable TYPE lvc_s_stbl,
        ls_layout	TYPE lvc_s_layo.

*Refresh layout
  CLEAR ls_layout.
  CALL METHOD g_grid->get_frontend_layout
    IMPORTING
      es_layout = ls_layout.

  PERFORM alv_prepare_layout CHANGING ls_layout.

  CALL METHOD g_grid->set_frontend_layout
    EXPORTING
      is_layout = ls_layout.

*Refresh data
  CLEAR ls_stable.
  ls_stable-row = 'X'.
  ls_stable-col = 'X'.
  CALL METHOD g_grid->refresh_table_display
    EXPORTING
      is_stable = ls_stable
    EXCEPTIONS
      finished  = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
  ENDIF.

ENDFORM.                    " ALV_REFRESCAR
