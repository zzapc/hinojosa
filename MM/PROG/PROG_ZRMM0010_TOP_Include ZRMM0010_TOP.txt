*&---------------------------------------------------------------------*
*&  Include           ZRMM0010_TOP
*&---------------------------------------------------------------------*

* Declaración de tablas
*-----------------------------------------------------------------------
TABLES: mseg, mara, marc,s081.

* Constantes
*-----------------------------------------------------------------------

CONSTANTS: gc_container TYPE scrfname  VALUE 'CUSTOM_CONTAINER',
           c_progname   TYPE progname VALUE 'ZRMM0010'.

* Tablas Internas
*-----------------------------------------------------------------------
DATA: gt_fieldcat     TYPE          lvc_t_fcat,
      gt_fieldcat_ant TYPE TABLE OF slis_fieldcat_alv.

* Tabla informe FSC:
DATA: BEGIN OF gt_datos OCCURS 0.
        INCLUDE STRUCTURE zstmm_fsc_alv.
DATA: END OF gt_datos.

*----------------------------------------------*
* Tipos de datos
*----------------------------------------------*
  TYPES: BEGIN OF tipo_materiales,
           matnr TYPE matnr,
           mtart TYPE mtart.
  TYPES: END OF tipo_materiales.
  TYPES: tty_materiales TYPE TABLE OF tipo_materiales.

*TYPES: BEGIN OF ty_datos_per,
*         matnr TYPE matnr,
*         mtart TYPE mtart,
*         werks TYPE werks_d,
*         menge TYPE menge_d,
*         meins TYPE meins,
*         bwart TYPE bwart,
*         shkzg TYPE shkzg,
*       END OF ty_datos_per.
*
*TYPES: ty_t_datos_per TYPE STANDARD TABLE OF ty_datos_per.

*TYPES: BEGIN OF ty_datos_per_ant_aux,
*         matnr TYPE matnr,
*         mtart TYPE mtart,
*         werks TYPE werks,
*         labst TYPE labst,
*         umlme TYPE umlmd,
*         insme TYPE insme,
*         einme TYPE einme,
*         speme TYPE speme,
*         retme TYPE retme,
*         meins TYPE meins,
*       END OF ty_datos_per_ant_aux.

*TYPES: ty_t_datos_per_ant_aux TYPE STANDARD
*             TABLE OF ty_datos_per_ant_aux.

*TYPES: BEGIN OF ty_datos_per_ant,
*         matnr TYPE matnr,
*         mtart TYPE mtart,
*         werks TYPE werks,
*         menge TYPE menge_d,
*         meins TYPE meins,
*       END OF ty_datos_per_ant.
*
*TYPES: ty_t_datos_per_ant TYPE STANDARD TABLE OF ty_datos_per_ant.

* Tabla datos periodo seleccionado:

*DATA: gt_datos_per TYPE ty_t_datos_per.
*DATA: gt_datos_per_ant_aux TYPE ty_t_datos_per_ant_aux.
*DATA: gt_datos_per_ant TYPE ty_t_datos_per_ant.

* Declaración de estructuras
*-----------------------------------------------------------------------
DATA: gs_variant TYPE disvariant.

* Objetos
*-----------------------------------------------------------------------
DATA: g_custom_container TYPE REF TO cl_gui_custom_container,
      g_container_1      TYPE REF TO cl_gui_container,
      g_container_2      TYPE REF TO cl_gui_container,
      g_splitter         TYPE REF TO cl_gui_splitter_container,
      g_html             TYPE REF TO cl_gui_html_viewer,
      g_dd_doc           TYPE REF TO cl_dd_document,
      g_grid             TYPE REF TO cl_gui_alv_grid.

* Declaración de variables
*-----------------------------------------------------------------------
DATA: gv_okcode TYPE syucomm.

*DATA: gv_per_ant     TYPE spmon,
DATA:gv_ini_per TYPE datum,
     gv_fin_per TYPE datum.
*      gv_ini_per_ant TYPE datum,
*      gv_fin_per_ant TYPE datum.


* GST - 13/01/2016 - ALV Extracto ->
* ALV Extracto:
DATA: gs_extract1 LIKE disextract.
DATA: gs_extract2 LIKE disextract.
* GST - 13/01/2016 - ALV Extracto <-
