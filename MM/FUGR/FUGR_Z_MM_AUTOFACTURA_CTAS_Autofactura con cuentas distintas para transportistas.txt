FUNCTION z_mm_autofactura_ctas.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  EXPORTING
*"     REFERENCE(E_BVTYP) TYPE  BVTYP
*"     REFERENCE(E_LIFNR) TYPE  LIFNR
*"     REFERENCE(E_LIFN2) TYPE  LIFNR
*"  TABLES
*"      T_PEDIDO STRUCTURE  ZSMM0001
*"  EXCEPTIONS
*"      PEDIDOS_DIF_COOPERATIVAS
*"      CTA_COOPERATIVISTA_SIN_INF
*"      CTAS_SIN_CORRESPONDENCIA
*"----------------------------------------------------------------------

  DATA: lt_pedido TYPE STANDARD TABLE OF zsmm0001,
        ls_pedido TYPE                   zsmm0001.
  DATA: lt_lfbk_prov TYPE STANDARD TABLE OF lfbk,
        lt_lfbk_coop TYPE STANDARD TABLE OF lfbk,
        ls_lfbk_prov TYPE                   lfbk,
        ls_lfbk_coop TYPE                   lfbk.

  DATA: ls_rseg_new TYPE mrmrseg.
  DATA: lv_lifnr TYPE ekko-lifnr,
        lv_lifn2 TYPE ekpa-lifn2,
        lv_error.

  CLEAR : e_bvtyp, e_lifnr, e_lifn2.

  lt_pedido[] = t_pedido[].

  LOOP AT lt_pedido INTO ls_pedido.
    SELECT SINGLE lifnr INTO ls_pedido-lifnr
      FROM ekko
      WHERE ebeln = ls_pedido-ebeln.
    SELECT SINGLE lifn2 INTO ls_pedido-lifn2
      FROM ekpa
      WHERE ebeln = ls_pedido-ebeln
      AND   ebelp = '00000'
      AND   parvw = 'ZA'.
    MODIFY lt_pedido FROM ls_pedido.
  ENDLOOP.

  CLEAR: lv_lifnr, lv_lifn2.
  LOOP AT lt_pedido INTO ls_pedido WHERE lifn2 IS NOT INITIAL.
    lv_lifnr = ls_pedido-lifnr.                                    "cooperativa
    lv_lifn2 = ls_pedido-lifn2.                                    "cooperativista
    EXIT.
  ENDLOOP.

  e_lifnr = lv_lifnr.
  e_lifn2 = lv_lifn2.
  CHECK lv_lifn2 IS NOT INITIAL.

* verificamos que todos los pedidos tengan el mismo cooperativista
  LOOP AT lt_pedido INTO ls_pedido WHERE lifn2 NE lv_lifn2.
    lv_error = 'X'.
    EXIT.
  ENDLOOP.
  IF lv_error IS NOT INITIAL.
    RAISE pedidos_dif_cooperativas.
*    MESSAGE e007(zmm) RAISING error_with_message.
  ENDIF.

  CLEAR: lt_lfbk_prov, lt_lfbk_coop.
  SELECT * INTO TABLE lt_lfbk_prov
    FROM lfbk
    WHERE lifnr = lv_lifnr.
  SELECT * INTO TABLE lt_lfbk_coop
    FROM lfbk
    WHERE lifnr = lv_lifn2.

* verificamos que el cooperativista y la cooperativa tengan
* la misma cuenta bancaria y el mismo tipo de banco interlocutor
  lv_error  = 'X'.
  LOOP AT lt_lfbk_coop INTO ls_lfbk_coop WHERE bvtyp IS NOT INITIAL.
    READ TABLE lt_lfbk_prov INTO ls_lfbk_prov
                            WITH KEY banks = ls_lfbk_coop-banks
                                     bankl = ls_lfbk_coop-bankl
                                     bankn = ls_lfbk_coop-bankn
                                     bkont = ls_lfbk_coop-bkont
                                     bvtyp = ls_lfbk_coop-bvtyp.
    IF sy-subrc = 0.
      CLEAR lv_error.
      EXIT.
    ENDIF.
  ENDLOOP.
  IF sy-subrc NE 0.
    RAISE cta_cooperativista_sin_inf.
*    MESSAGE e011(zmm) WITH lv_lifnr lv_lifn2 RAISING error_with_message.
  ENDIF.
  IF lv_error = 'X'.
    RAISE ctas_sin_correspondencia.
*    MESSAGE e008(zmm) WITH lv_lifnr lv_lifn2 RAISING error_with_message.
  ENDIF.

  e_bvtyp = ls_lfbk_prov-bvtyp.

ENDFUNCTION.
