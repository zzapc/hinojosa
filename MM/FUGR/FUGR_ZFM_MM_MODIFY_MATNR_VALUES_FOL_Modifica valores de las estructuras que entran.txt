FUNCTION ZFM_MM_MODIFY_MATNR_VALUES_FOL.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  CHANGING
*"     REFERENCE(MARA) TYPE  MARU
*"----------------------------------------------------------------------

  DATA: lo_exceptions       TYPE REF TO zcx_mm_exception,
        lt_r_mtart          TYPE md_range_t_mtart,
        lv_mtext            TYPE char18,
        lv_msequ            TYPE char18.


  TRY.

*1- Comprobamos si es ZPT

    CLEAR: lt_r_mtart.

    "Obtenemos materiales compatibles con ZPT
    lt_r_mtart = zcl_mm_material_zpt=>zintf_mm_material_master~s_get_mtart_compatibles( i_setname = zcl_mm_material_zpt=>_c_setname_value ).

    "Comprobamos si nuestro tipo de material es compatible
    IF ( mara-mtart IN lt_r_mtart ). "Es compatible

      zcl_mm_material_zpt=>s_decode_matnr(
        EXPORTING
          i_matnr = mara-matnr    " Número de material
        IMPORTING
          e_mtext = lv_mtext    " Parte genérica
          e_msequ = lv_msequ    " Parte secuencial
      ).

      IF ( lv_mtext IS NOT INITIAL ).

        mara-matkl = mara-prdha = lv_mtext.

      ENDIF.

    ELSE. "No es compatible con ZPT

      "Obtenemos materiales compatibles con ZPT
      lt_r_mtart = zcl_mm_material_cups=>zintf_mm_material_master~s_get_mtart_compatibles( i_setname = zcl_mm_material_cups=>_c_setname_value ).

      "Comprobamos si nuestro tipo de material es compatible
      IF ( mara-mtart IN lt_r_mtart ). "Es compatible

        zcl_mm_material_cups=>s_decode_matnr(
          EXPORTING
            i_matnr = mara-matnr   " Número de material
          IMPORTING
            e_mtext = lv_mtext    " Parte genérica
            e_msequ = lv_msequ    " Parte secuencial
        ).

        IF ( lv_mtext IS NOT INITIAL ).

          CASE lv_mtext+1(1).
            WHEN zcl_mm_material_cups=>_c_typecup_tapa OR zcl_mm_material_cups=>_c_typecup_vaso.

              CONCATENATE 'CU' lv_mtext+1(1) 'A' INTO mara-matkl.

            WHEN zcl_mm_material_cups=>_c_typecup_bowl_w.

              CASE lv_mtext+2(1).
                WHEN zcl_mm_material_cups=>_c_typecup_bowl_circular(1).

                  CONCATENATE 'CU' zcl_mm_material_cups=>_c_typecup_bowl 'O' zcl_mm_material_cups=>_c_typecup_bowl_circular  INTO mara-matkl.

                WHEN zcl_mm_material_cups=>_c_typecup_bowl_rectang(1).

                  CONCATENATE 'CU' zcl_mm_material_cups=>_c_typecup_bowl 'O' zcl_mm_material_cups=>_c_typecup_bowl_rectang  INTO mara-matkl.

              ENDCASE.

          ENDCASE.


          mara-prdha = mara-matkl.

        ENDIF.

      ENDIF.

    ENDIF. "FIn chequeo ZPT

  CATCH zcx_mm_exception INTO lo_exceptions.

    MESSAGE lo_exceptions->if_t100_message~t100key-attr1 TYPE 'E'.

  ENDTRY.

ENDFUNCTION.
