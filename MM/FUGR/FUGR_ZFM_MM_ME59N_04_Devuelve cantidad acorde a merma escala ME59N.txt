FUNCTION zfm_mm_me59n_04.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_WERKS) TYPE  WERKS_D
*"     REFERENCE(I_MENGE) TYPE  MENGE_D
*"     REFERENCE(I_ROUND) TYPE  BOOL DEFAULT 'X'
*"  EXPORTING
*"     REFERENCE(E_KSTBM) TYPE  KSTBM
*"----------------------------------------------------------------------

**********************************************************************
* Parámetros locales
**********************************************************************

  DATA: ls_ztmm0036 TYPE ztmm0036.

  DATA: lv_menge_new     TYPE menge_d,
        lv_menge_str(18) TYPE c.

**********************************************************************
* Validaciones
**********************************************************************

  CHECK i_werks IS NOT INITIAL.

**********************************************************************
* Lógica
**********************************************************************

*** GET ESCALA

  CALL FUNCTION 'ZFM_MM_ME59N_03'
    EXPORTING
      i_werks          = i_werks
      i_menge          = i_menge
    IMPORTING
      e_ztmm0036       = ls_ztmm0036.

*** CALC NEW VALUE

  IF ( ls_ztmm0036-uebto IS INITIAL OR ls_ztmm0036-uebto LE 0 ) OR ( ls_ztmm0036-kpein IS INITIAL OR ls_ztmm0036-kpein LE 0 ).

    lv_menge_new = i_menge + ( i_menge * ls_ztmm0036-uebto / ls_ztmm0036-kpein ).

  ELSE.

    MOVE i_menge TO lv_menge_new.

  ENDIF.

  "Comprobamos si hay que redondear sin decimales
  IF ( i_round EQ abap_true ).

    MOVE lv_menge_new TO lv_menge_str.
    e_kstbm = round( val = lv_menge_str dec = 0 ).

  ELSE.

    MOVE lv_menge_new TO e_kstbm.

  ENDIF.

ENDFUNCTION.
