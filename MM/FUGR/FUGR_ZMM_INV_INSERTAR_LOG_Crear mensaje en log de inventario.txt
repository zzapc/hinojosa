FUNCTION zmm_inv_insertar_log.
*"----------------------------------------------------------------------
*"*"Módulo funciones actualiz.
*"
*"*"Interfase local
*"  IMPORTING
*"     VALUE(DOCUM) TYPE  ZDOCINV
*"     VALUE(MATNR) TYPE  MATNR OPTIONAL
*"     VALUE(CHARG) TYPE  CHARG_D OPTIONAL
*"     VALUE(MSGTY) TYPE  SYMSGTY
*"     VALUE(MSGID) TYPE  SYMSGID
*"     VALUE(MSGNO) TYPE  CHAR3
*"     VALUE(MSGV1) TYPE  SYMSGV OPTIONAL
*"     VALUE(MSGV2) TYPE  SYMSGV OPTIONAL
*"     VALUE(MSGV3) TYPE  SYMSGV OPTIONAL
*"     VALUE(MSGV4) TYPE  SYMSGV OPTIONAL
*"----------------------------------------------------------------------
  DATA: ls_msg        TYPE bal_s_msg,
        it_log_handle TYPE bal_t_logh,
        lv_posnr      TYPE posnr,
        lv_docum_ext  TYPE char10,
        lv_txt(3).

  IF g_log_handle IS INITIAL.
    g_log-object = 'ZMM'.
    g_log-subobject = 'ZINV2'.
    g_log-extnumber = docum.
    g_log-aluser = sy-uname.
    g_log-alprog = sy-repid.
    g_log-aldate = sy-datum.
    g_log-altime = sy-uzeit.
    g_log-altcode = sy-tcode.

    CALL FUNCTION 'BAL_LOG_CREATE'
      EXPORTING
        i_s_log                 = g_log
      IMPORTING
        e_log_handle            = g_log_handle
      EXCEPTIONS
        log_header_inconsistent = 1
        OTHERS                  = 2.
  ENDIF.

  ls_msg-msgty = msgty.               "message type
  ls_msg-msgid = msgid.            "message id
  ls_msg-msgno = msgno.          "message number
  ls_msg-msgv1 = msgv1.      "text that you want to pass as message
  ls_msg-msgv2 = msgv2.
  ls_msg-msgv3 = msgv3.
  ls_msg-msgv4 = msgv4.
  ls_msg-probclass = 2.

  IF matnr IS NOT INITIAL. " log para posición
    SELECT SINGLE posicion FROM ztinv2_pi
      INTO lv_posnr
      WHERE docum EQ docum
        AND matnr EQ matnr
        AND charg EQ charg.

    WRITE: lv_posnr TO ls_msg-context-value NO-ZERO,
           lv_posnr+3(3) TO lv_txt.
    CONDENSE lv_txt.
    ls_msg-alsort = lv_txt.

    WRITE docum TO lv_docum_ext NO-ZERO.

    CONCATENATE 'Inventario' lv_docum_ext '- Posición' ls_msg-context-value
      INTO ls_msg-context-value SEPARATED BY space.

    ls_msg-context-tabname = 'ZTINV2_PI'.
  ELSE.
    WRITE docum TO lv_docum_ext NO-ZERO.

    CONCATENATE 'Inventario' lv_docum_ext
      INTO ls_msg-context-value SEPARATED BY space.
    ls_msg-context-tabname = 'ZTINV2_CI'.
  ENDIF.

  CALL FUNCTION 'BAL_LOG_MSG_ADD'
    EXPORTING
      i_log_handle     = g_log_handle
      i_s_msg          = ls_msg
    EXCEPTIONS
      log_not_found    = 1
      msg_inconsistent = 2
      log_is_full      = 3
      OTHERS           = 4.

  APPEND g_log_handle TO it_log_handle.

  CALL FUNCTION 'BAL_DB_SAVE'
    EXPORTING
      i_in_update_task = 'X'
      i_t_log_handle   = it_log_handle[]
    EXCEPTIONS
      log_not_found    = 1
      save_not_allowed = 2
      numbering_error  = 3
      OTHERS           = 4.

  IF sy-subrc EQ 0.
    REFRESH: it_log_handle.

    SELECT SINGLE @abap_true FROM ztinv2_ci
      WHERE docum EQ @docum
        AND log EQ @space
      INTO @DATA(result).

    IF sy-subrc EQ 0.
      UPDATE ztinv2_ci SET log = 'X'
                     WHERE docum EQ docum.
    ENDIF.
  ENDIF.

  IF sy-oncom IS INITIAL.
    COMMIT WORK AND WAIT.
  ENDIF.

ENDFUNCTION.
