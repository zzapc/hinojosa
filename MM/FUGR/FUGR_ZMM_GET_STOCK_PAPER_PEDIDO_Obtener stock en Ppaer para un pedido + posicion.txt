FUNCTION zmm_get_stock_paper_pedido.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(EBELN) TYPE  EBELN
*"     REFERENCE(EBELP) TYPE  EBELP
*"     REFERENCE(WERKS) TYPE  WERKS_D
*"  EXPORTING
*"     REFERENCE(STOCK) TYPE  LABST
*"----------------------------------------------------------------------

  DATA: BEGIN OF lw_mchb.
          INCLUDE TYPE mchb.
  DATA: objek  TYPE cuobn,
        objnum TYPE objnum,
        cuobj  TYPE cuobj,
        klart  TYPE klassenart,
        END OF lw_mchb.
  DATA: lt_mchb LIKE TABLE OF lw_mchb.
  DATA: lv_clabs TYPE mchb-clabs.

  DATA: it_inob          TYPE TABLE OF inob,
        inob             TYPE inob,
        it_ausp_pedido   TYPE TABLE OF ausp,
        it_ausp_posicion LIKE it_ausp_pedido,
        it_ausp_decision LIKE it_ausp_pedido,
        ausp             TYPE ausp,
        lv_atinn         TYPE atinn,
        lv_atwrt         TYPE ausp-atwrt.

  DATA: s_atnam  TYPE RANGE OF cabn-atnam,
        sl_atnam LIKE LINE OF s_atnam,
        s_atinn  TYPE RANGE OF cabn-atinn,
        sl_atinn LIKE LINE OF s_atinn,
        matnr    TYPE matnr.

  SELECT SINGLE matnr FROM ekpo
    INTO matnr
    WHERE ebeln EQ ebeln
      AND ebelp EQ ebelp.

  CHECK sy-subrc EQ 0.

  SELECT * FROM mchb
  INTO CORRESPONDING FIELDS OF TABLE lt_mchb
  WHERE clabs GT 0
  AND matnr EQ matnr
  AND werks EQ werks.

  CHECK sy-subrc EQ 0.

  LOOP AT lt_mchb ASSIGNING FIELD-SYMBOL(<data>).
    CONCATENATE <data>-matnr <data>-charg INTO inob-objek.
    <data>-objek = inob-objek.
    inob-obtab = 'MCH1'.
    inob-klart = '023'.
    <data>-klart = inob-klart.
    APPEND inob TO it_inob.
  ENDLOOP.

  SELECT *
  FROM inob INTO TABLE it_inob
  FOR ALL ENTRIES IN it_inob
  WHERE klart EQ it_inob-klart
  AND obtab EQ it_inob-obtab
  AND objek EQ it_inob-objek.

  CHECK sy-subrc EQ 0.

  LOOP AT it_inob INTO inob.
    LOOP AT lt_mchb ASSIGNING <data> WHERE objek = inob-objek.
      <data>-cuobj = inob-cuobj.
      <data>-objnum = inob-cuobj.
    ENDLOOP.
  ENDLOOP.

  " primero cogemos los lotes de este pedido
  SELECT SINGLE atinn FROM cabn
  INTO lv_atinn
  WHERE atnam EQ 'Z_PEDIDO'.

  WRITE ebeln TO lv_atwrt. SHIFT lv_atwrt LEFT DELETING LEADING '0'.

  SELECT *
  FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp_pedido
  FOR ALL ENTRIES IN lt_mchb
  WHERE objek EQ lt_mchb-objnum
  AND klart EQ lt_mchb-klart
  AND atinn EQ lv_atinn
  AND atwrt EQ lv_atwrt.

  CHECK sy-subrc EQ 0.

  " luego cogemos sólo los de la posición correspondiente
  SELECT SINGLE atinn FROM cabn
  INTO lv_atinn
  WHERE atnam EQ 'Z_POSICION'.

  WRITE ebelp TO lv_atwrt. SHIFT lv_atwrt LEFT DELETING LEADING '0'.

  SELECT *
  FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp_posicion
  FOR ALL ENTRIES IN it_ausp_pedido
  WHERE objek EQ it_ausp_pedido-objek
  AND klart EQ it_ausp_pedido-klart
  AND atinn EQ lv_atinn
  AND atwrt EQ lv_atwrt.

  CHECK sy-subrc EQ 0.

  " finalmente los que tengan decisión de empleo A
  SELECT SINGLE atinn FROM cabn
  INTO lv_atinn
  WHERE atnam EQ 'LOBM_UDCODE'.

  lv_atwrt = 'DE       A'.

  SELECT *
  FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp_decision
  FOR ALL ENTRIES IN it_ausp_posicion
  WHERE objek EQ it_ausp_posicion-objek
  AND klart EQ it_ausp_posicion-klart
  AND atinn EQ lv_atinn
  AND atwrt EQ lv_atwrt.

  CHECK sy-subrc EQ 0.

  LOOP AT it_ausp_decision INTO ausp.
    READ TABLE lt_mchb WITH KEY objnum = ausp-objek INTO DATA(mchb).

    IF sy-subrc EQ 0.
      ADD mchb-clabs TO lv_clabs.
    ENDIF.
  ENDLOOP.

  stock = lv_clabs.

ENDFUNCTION.
