FUNCTION zmm_propuesta_campos_mat.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(TCODE) TYPE  SYTCODE OPTIONAL
*"     VALUE(ACTION) TYPE  CHAR1 OPTIONAL
*"  TABLES
*"      SALES_TAX_TABLE STRUCTURE  MG03STEUER OPTIONAL
*"  CHANGING
*"     VALUE(MARA) TYPE  MARU
*"     VALUE(MARC) TYPE  MARCU OPTIONAL
*"     VALUE(MARD) TYPE  MARDU OPTIONAL
*"     VALUE(MBEW) TYPE  MBEW OPTIONAL
*"     VALUE(MPOP) TYPE  MPOP OPTIONAL
*"     VALUE(MLGN) TYPE  MLGN OPTIONAL
*"     VALUE(MLGT) TYPE  MLGT OPTIONAL
*"     VALUE(MVKE) TYPE  MVKE OPTIONAL
*"     REFERENCE(SALES_TAX) TYPE  MAT_STEUER OPTIONAL
*"----------------------------------------------------------------------
  DATA: field(40),
        index     TYPE i.
  FIELD-SYMBOLS: <field>.

  IF sales_tax_table IS NOT INITIAL AND sales_tax IS INITIAL.
    sales_tax[] = sales_tax_table[].
  ENDIF.

  IF action IS INITIAL.
    CASE tcode.
      WHEN 'MM01'.
        action = 'C'. "crear
      WHEN 'MM02' OR 'MM17' OR 'MASS'.
        action = 'M'. "modificar
    ENDCASE.

    IF action IS INITIAL.
      IMPORT p1 = action FROM MEMORY ID 'ZMM_PROPUESTA_CAMPOS_MAT'.
    ENDIF.
  ENDIF.

  DO 4 TIMES. " tres veces, una genérica, una para tipo mat, otra para grupo art y otra tipo mat+grupo art.
    ADD 1 TO index.

    CASE index.
      WHEN 1. " primero genérica
        CASE action.
          WHEN 'C'.
            SELECT * FROM ztmm0027
              WHERE mtart EQ '*'
                AND matkl EQ @space
                AND creacion NE @space
              INTO TABLE @DATA(t_ztmm0027).
          WHEN 'M'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ '*'
                AND matkl EQ space
                AND modificacion NE space.
        ENDCASE.
      WHEN 2. " primero tipo material
        CASE action.
          WHEN 'C'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ mara-mtart
                AND matkl EQ space
                AND creacion NE space.
          WHEN 'M'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ mara-mtart
                AND matkl EQ space
                AND modificacion NE space.
        ENDCASE.
      WHEN 3. " después grupo art
        CASE action.
          WHEN 'C'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ space
                AND matkl EQ mara-matkl
                AND creacion NE space.
          WHEN 'M'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ space
                AND matkl EQ mara-matkl
                AND modificacion NE space.
        ENDCASE.
      WHEN 4. " por último grupo art + tipo mat, así manda éste
        CASE action.
          WHEN 'C'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ mara-mtart
                AND matkl EQ mara-matkl
                AND creacion NE space.
          WHEN 'M'.
            SELECT * FROM ztmm0027
              INTO TABLE t_ztmm0027
              WHERE mtart EQ mara-mtart
                AND matkl EQ mara-matkl
                AND modificacion NE space.
        ENDCASE.
    ENDCASE.

**NLC.15.09.2023.Ordenamos tabla temporal 't_ztmm0027' por centro y org.ventas para evitar errores cuando hay varios resultados válidos.
    SORT  t_ztmm0027 BY werks vkorg.
**FIN.NLC.15.09.2023.Ordenamos tabla temporal 't_ztmm0027' por centro y org.ventas para evitar errores cuando hay varios resultados válidos.

    LOOP AT t_ztmm0027 INTO DATA(prop).
      CLEAR field.
      CASE prop-dbtabname.
        WHEN 'MARA'.
          CONCATENATE 'MARA-' prop-fieldname INTO field.
        WHEN 'MARC'.
          IF marc-werks EQ prop-werks OR prop-werks EQ '*'.
            IF prop-fieldname EQ 'STAWN'.
              IF prop-cond1 IS INITIAL AND prop-cond2 IS INITIAL. " no hay otro nº para la clave
                CONCATENATE 'MARC-' prop-fieldname INTO field.
              ELSEIF prop-cond1 IS INITIAL AND prop-cond2 IS NOT INITIAL. " hay un gramaje máximo
                IF mara-zzgramaje LT prop-cond2.
                  CONCATENATE 'MARC-' prop-fieldname INTO field.
                ENDIF.
              ELSEIF prop-cond1 IS NOT INITIAL AND prop-cond2 IS NOT INITIAL. " hay un intervalo
                IF mara-zzgramaje LT prop-cond2 AND mara-zzgramaje GE prop-cond1.
                  CONCATENATE 'MARC-' prop-fieldname INTO field.
                ENDIF.
              ELSEIF prop-cond1 IS NOT INITIAL AND prop-cond2 IS INITIAL. " hay un gramaje mínimo
                IF mara-zzgramaje GE prop-cond1.
                  CONCATENATE 'MARC-' prop-fieldname INTO field.
                ENDIF.
              ENDIF.
            ELSE.
              CONCATENATE 'MARC-' prop-fieldname INTO field.
            ENDIF.
            IF  prop-fieldname = 'SOBSL'.
              IF mvke-mtpos = prop-cond1 AND prop-cond1 IS NOT INITIAL.
                CONCATENATE 'MARC-' prop-fieldname INTO field.
              ENDIF.
            ENDIF.
          ENDIF.
        WHEN 'MARD'.
          IF ( mard-werks EQ prop-werks AND
             mard-lgort EQ prop-lgort ) OR
            ( prop-werks EQ '*' AND
             prop-lgort EQ '*' ).
            CONCATENATE 'MARD-' prop-fieldname INTO field.
          ENDIF.
        WHEN 'MBEW'.
          IF ( mbew-bwkey EQ prop-bwkey AND
             mbew-bwtar EQ prop-bwtar ) OR
            ( prop-bwkey EQ '*' AND
             prop-bwtar EQ '*' ).
            CONCATENATE 'MBEW-' prop-fieldname INTO field.
          ENDIF.
        WHEN 'MPOP'.
          IF mpop-werks EQ prop-werks OR prop-werks EQ '*'.
            CONCATENATE 'MPOP-' prop-fieldname INTO field.
          ENDIF.
        WHEN 'MLGN'.
          IF mlgn-lgnum EQ prop-lgnum OR prop-lgnum EQ '*'.
            CONCATENATE 'MLGN-' prop-fieldname INTO field.
          ENDIF.
        WHEN 'MLGT'.
          IF ( mlgt-lgnum EQ prop-lgnum AND
             mlgt-lgtyp EQ prop-lgtyp ) OR
            ( prop-lgnum EQ '*' AND
             prop-lgtyp EQ '*' ).
            CONCATENATE 'MLGT-' prop-fieldname INTO field.
          ENDIF.
        WHEN 'MVKE'.
          IF ( mvke-vkorg EQ prop-vkorg AND
             mvke-vtweg EQ prop-vtweg ) OR
            ( prop-vkorg EQ '*' AND
             prop-vtweg EQ '*' ).
            CONCATENATE 'MVKE-' prop-fieldname INTO field.
          ENDIF.
        WHEN 'MLAN'.
          IF prop-cond1 IS NOT INITIAL AND prop-fieldname EQ 'TAXKM'.
            READ TABLE sales_tax ASSIGNING FIELD-SYMBOL(<tax>) WITH KEY tatyp = prop-cond1.

            IF sy-subrc EQ 0.
              <tax>-taxkm = prop-value.
            ENDIF.
          ENDIF.
      ENDCASE.

      IF field IS NOT INITIAL.
        ASSIGN (field) TO <field>.

        IF <field> IS ASSIGNED.
          MOVE prop-value TO <field>.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDDO.

*--> INI FCARDONA ZCUPS y ZPT*



  CALL FUNCTION 'ZFM_MM_MODIFY_MATNR_VALUES_FOL'
    CHANGING
      mara = mara.

*<-- FIN FCARDONA ZCUPS y ZPT*

ENDFUNCTION.
