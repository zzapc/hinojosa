FUNCTION zsdcom_selec_grabar_fact_prliq.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(IS_PRLIQCAB) TYPE  ZTSDCOM_PRLIQCAB
*"     VALUE(IR_LIFNR) TYPE  ZTTSDCOM_LIFNR_RANGE
*"     VALUE(IR_BASLI) TYPE  ZTTSDCOM_BASLI_RANGE
*"     VALUE(IR_KUNNR) TYPE  ZTTSDCOM_KUNNR_RANGE
*"     VALUE(IR_GSBER) TYPE  ZTTSDCOM_GSBER_RANGE
*"     VALUE(I_DATUM) TYPE  DATUM
*"     VALUE(IR_FREC) TYPE  ZTTSDCOM_FREC_RANGE
*"  EXPORTING
*"     VALUE(ET_RETURN) TYPE  BAPIRET2_T
*"     VALUE(E_ERROR) TYPE  FLAG
*"----------------------------------------------------------------------

  DATA: lti_facts TYPE zttsdcomliq002_grid.
  DATA: lti_pos TYPE zttsdcom_pos.

* Llamamos a la función que selecciona las facturas para la propuesta
  CALL FUNCTION 'ZSDCOM_SELECCIONAR_FACT_PRLIQ'
    EXPORTING
      is_prliqcab = is_prliqcab
      ir_lifnr    = ir_lifnr
      ir_basli    = ir_basli
      ir_kunnr    = ir_kunnr
      ir_gsber    = ir_gsber
      i_datum     = i_datum
      ir_frec     = ir_frec
    IMPORTING
      et_facts    = lti_facts
      et_pos      = lti_pos.
  IF lti_facts[] IS INITIAL.
    MESSAGE 'No existen facturas para estos datos de Selección' TYPE 'I'.
    e_error =  'X'.
    EXIT.
  ENDIF.
* Llamamos a la función que graba la propuesta
  CALL FUNCTION 'ZSDCOM_GRABAR_FACTURAS_PRLIQ' IN BACKGROUND TASK
    EXPORTING
      is_prliqcab = is_prliqcab
      it_facts    = lti_facts
      it_pos      = lti_pos
    IMPORTING
      et_return   = et_return.

ENDFUNCTION.
