FUNCTION zsd_if_omp_trans_get_confg.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(VP_LGNUM) TYPE  LGNUM
*"  EXPORTING
*"     REFERENCE(WP_CONFIG) TYPE  ZSSD_IF_OMP_CFG
*"     REFERENCE(TP_RANGE_MTART) TYPE  EFG_TAB_RANGES
*"     REFERENCE(TP_RANGE_AUART) TYPE  EFG_TAB_RANGES
*"     REFERENCE(TP_RANGE_BSART) TYPE  EFG_TAB_RANGES
*"     REFERENCE(TP_RANGE_VSTEL) TYPE  EFG_TAB_RANGES
*"  EXCEPTIONS
*"      NO_CONFIG
*"----------------------------------------------------------------------
  DATA: lt_mtart TYPE RANGE OF mara-mtart,
        lt_auart TYPE RANGE OF vbak-auart,
        lt_bsart TYPE RANGE OF ekko-bsart,
        lt_vstel TYPE RANGE OF likp-vstel.

  SELECT SINGLE *
    INTO wp_config
    FROM zssd_if_omp_cfg
    WHERE lgnum = vp_lgnum.

  IF sy-subrc <> 0.
    RAISE no_config.
  ENDIF.

  "
  " Tipos de materiales.
  "
  CLEAR lt_mtart.
  SELECT *
    FROM zssd_if_omp_mtar
    INTO TABLE @DATA(tl_zssd_if_omp_mtar)
    WHERE lgnum = @vp_lgnum.

  IF tl_zssd_if_omp_mtar IS INITIAL.
    APPEND INITIAL LINE TO lt_mtart ASSIGNING FIELD-SYMBOL(<fs_mtart>).
    <fs_mtart>-sign = 'E'.
    <fs_mtart>-option = 'EQ'.
    <fs_mtart>-low = '*'.
  ELSE.
    LOOP AT tl_zssd_if_omp_mtar ASSIGNING FIELD-SYMBOL(<fs_omp_tra_mta>).
      APPEND INITIAL LINE TO lt_mtart ASSIGNING <fs_mtart>.
      <fs_mtart>-sign = 'I'.
      <fs_mtart>-option = 'EQ'.
      <fs_mtart>-low = <fs_omp_tra_mta>-mtart.
    ENDLOOP.

  ENDIF.
  tp_range_mtart = lt_mtart.

  "
  " Clases de documentos de ventas.
  "
  CLEAR lt_auart.
  SELECT *
    FROM zssd_if_omp_auar
    INTO TABLE @DATA(tl_zssd_if_omp_auar)
    WHERE lgnum = @vp_lgnum.

  IF tl_zssd_if_omp_auar IS INITIAL.
    APPEND INITIAL LINE TO lt_auart ASSIGNING FIELD-SYMBOL(<fs_auart>).
    <fs_auart>-sign = 'E'.
    <fs_auart>-option = 'EQ'.
    <fs_auart>-low = '*'.
  ELSE.
    LOOP AT tl_zssd_if_omp_auar ASSIGNING FIELD-SYMBOL(<fs_omp_tra_auar>).
      APPEND INITIAL LINE TO lt_auart ASSIGNING <fs_auart>.
      <fs_auart>-sign = 'I'.
      <fs_auart>-option = 'EQ'.
      <fs_auart>-low = <fs_omp_tra_auar>-auart.
    ENDLOOP.
  ENDIF.
  tp_range_auart = lt_auart.
  "
  " Clases de documentos de pedidos traslado.
  "
  CLEAR lt_bsart.
  SELECT *
    FROM zssd_if_omp_bsar
    INTO TABLE @DATA(tl_zssd_if_omp_bsar)
    WHERE lgnum = @vp_lgnum.

  IF tl_zssd_if_omp_bsar IS INITIAL.
    APPEND INITIAL LINE TO lt_bsart ASSIGNING FIELD-SYMBOL(<fs_bsart>).
    <fs_bsart>-sign = 'E'.
    <fs_bsart>-option = 'EQ'.
    <fs_bsart>-low = '*'.
  ELSE.
    LOOP AT tl_zssd_if_omp_bsar ASSIGNING FIELD-SYMBOL(<fs_omp_tra_bsar>).
      APPEND INITIAL LINE TO lt_bsart ASSIGNING <fs_bsart>.
      <fs_bsart>-sign = 'I'.
      <fs_bsart>-option = 'EQ'.
      <fs_bsart>-low = <fs_omp_tra_bsar>-bsart.
    ENDLOOP.
  ENDIF.
  tp_range_bsart = lt_bsart.
  "
  " Puestos de expedicón.
  "
  CLEAR lt_vstel.
  SELECT *
    FROM zssd_if_omp_vste
    INTO TABLE @DATA(tl_zssd_if_omp_vstel)
    WHERE lgnum = @vp_lgnum.

  IF tl_zssd_if_omp_vstel IS INITIAL.
    APPEND INITIAL LINE TO lt_vstel ASSIGNING FIELD-SYMBOL(<fs_vstel>).
    <fs_bsart>-sign = 'E'.
    <fs_bsart>-option = 'EQ'.
    <fs_bsart>-low = '*'.
  ELSE.
    LOOP AT tl_zssd_if_omp_vstel ASSIGNING FIELD-SYMBOL(<fs_omp_tra_vstel>).
      APPEND INITIAL LINE TO lt_vstel ASSIGNING <fs_vstel>.
      <fs_vstel>-sign = 'I'.
      <fs_vstel>-option = 'EQ'.
      <fs_vstel>-low = <fs_omp_tra_vstel>-vstel.
    ENDLOOP.
  ENDIF.
  tp_range_vstel = lt_vstel.
ENDFUNCTION.
