FUNCTION zfm_sd_get_pap_cdata.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_T_VBADR_WE) TYPE  SHP_VL10_VBADR_T
*"  CHANGING
*"     REFERENCE(C_SHP_VL10_ITEM) TYPE  SHP_VL10_ITEM
*"----------------------------------------------------------------------

**********************************************************************
* Parámetros locales
**********************************************************************

****** CONSTANTS

  CONSTANTS: lcv_p3000 TYPE vstel VALUE '3000',
             lcv_p3020 TYPE vstel VALUE '3020'.

****** VARIABLES

  DATA: lv_object TYPE objnum,
        lv_labst  TYPE labst,
        lv_vbelv  TYPE vbelv,
        lv_posnv  TYPE posnv.

****** STRUCTURES

  DATA: ls_r_vstel           TYPE zst_r_vstel,
        ls_alloc_values_char TYPE bapi1003_alloc_values_char.

****** TABLES

  DATA: lt_r_vstel           TYPE ztt_r_vstel,
        lt_mchb              TYPE TABLE OF mchb,
        lt_alloc_values_num  TYPE tt_bapi1003_alloc_values_num,
        lt_alloc_values_char TYPE tt_bapi1003_alloc_values_char,
        lt_alloc_values_curr TYPE tt_bapi1003_alloc_values_curr,
        ls_alloc_values_num  TYPE bapi1003_alloc_values_num,
        lt_return            TYPE bapiret2_tab.

**********************************************************************
* Validaciones
**********************************************************************

****** PREPARE CHECKS

  APPEND VALUE #( sign = 'I' option = 'EQ' low_vstel = lcv_p3000 ) TO lt_r_vstel.
  APPEND VALUE #( sign = 'I' option = 'EQ' low_vstel = lcv_p3020 ) TO lt_r_vstel.

****** CHECKS IN PAP

  CHECK c_shp_vl10_item-vstel IN lt_r_vstel.

**********************************************************************
* Lógica
**********************************************************************

****** PREPARE DATA

  CLEAR: c_shp_vl10_item-zzstock_papelera, c_shp_vl10_item-zzmeins.

****** GET DATA

***** SELECT STOCK 4 CHARG

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE lt_mchb
    FROM mchb
   WHERE matnr EQ c_shp_vl10_item-matnr
     AND werks EQ c_shp_vl10_item-vstel
     AND clabs GT 0.

***** SET DATA

  LOOP AT lt_mchb INTO DATA(ls_mchb).

    CLEAR: lv_object.
    CONCATENATE ls_mchb-matnr ls_mchb-charg INTO lv_object RESPECTING BLANKS.

    CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
      EXPORTING
        objectkey       = lv_object
        objecttable     = 'MCH1'
        classnum        = 'Z_BOBINA'
        classtype       = '023'
*       KEYDATE         = SY-DATUM
*       UNVALUATED_CHARS       = ' '
*       LANGUAGE        = SY-LANGU
*     IMPORTING
*       STATUS          =
*       STANDARDCLASS   =
      TABLES
        allocvaluesnum  = lt_alloc_values_num
        allocvalueschar = lt_alloc_values_char
        allocvaluescurr = lt_alloc_values_curr
        return          = lt_return
      EXCEPTIONS
        error_message   = 1
        OTHERS          = 2.
    CHECK sy-subrc = 0.

**** DECISION EMPLEO

    " Chequeo Decisión de empleo:
    CLEAR ls_alloc_values_char.
    READ TABLE lt_alloc_values_char INTO ls_alloc_values_char WITH KEY charact = 'LOBM_UDCODE'.
    IF ls_alloc_values_char-value_neutral <> 'DE       A'.
      CONTINUE.
    ENDIF.

**** CLIENTE

    CLEAR ls_alloc_values_char.
    READ TABLE lt_alloc_values_char INTO ls_alloc_values_char WITH KEY charact = 'Z_CLIENTE'.
    IF ( ls_alloc_values_char-value_neutral <> c_shp_vl10_item-kunnr AND ls_alloc_values_char-value_neutral <> c_shp_vl10_item-kunwe ).
      CONTINUE.
    ENDIF.

**** STOCK PAPELERA PARA LOTE

    c_shp_vl10_item-zzstock_papelera = c_shp_vl10_item-zzstock_papelera + ls_mchb-clabs.
    IF c_shp_vl10_item-zzmeins IS INITIAL.
      SELECT SINGLE meins
        INTO c_shp_vl10_item-zzmeins
        FROM mara
       WHERE matnr EQ c_shp_vl10_item-matnr.
    ENDIF.

**** COLLECT STOCK BY PURCHASE ORDER

*** PURCHASE NM

    CLEAR: ls_alloc_values_char, lv_vbelv.
    READ TABLE lt_alloc_values_char INTO ls_alloc_values_char WITH KEY charact = 'Z_PEDIDO'.
    IF ( sy-subrc EQ 0 ).

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = ls_alloc_values_char-value_neutral
        IMPORTING
          output = lv_vbelv.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = c_shp_vl10_item-vbelv
        IMPORTING
          output = c_shp_vl10_item-vbelv.

      IF ( lv_vbelv EQ c_shp_vl10_item-vbelv ).

        CLEAR: ls_alloc_values_char, lv_posnv.
        READ TABLE lt_alloc_values_char INTO ls_alloc_values_char WITH KEY charact = 'Z_POSICION'.
        IF ( sy-subrc EQ 0 ).

          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = ls_alloc_values_char-value_neutral
            IMPORTING
              output = lv_posnv.

          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = c_shp_vl10_item-posnv
            IMPORTING
              output = c_shp_vl10_item-posnv.

          IF ( lv_posnv EQ c_shp_vl10_item-posnv ).

            lv_labst = lv_labst + ls_mchb-clabs.

          ELSE.

            CONTINUE.

          ENDIF.

        ENDIF.

      ELSE.

        CONTINUE.

      ENDIF.

    ENDIF.

  ENDLOOP.

**** STOCK 4 VBELV

  c_shp_vl10_item-zzlabst = lv_labst.

**** STOCK FABRICADO

  SELECT SUM( b~wemng )
    FROM aufk AS a LEFT JOIN afpo AS b
      ON a~aufnr EQ b~aufnr
    INTO @c_shp_vl10_item-zzgweng
   WHERE auart IN ( 'ZI02', 'ZI04' )
     AND a~zzebeln1 EQ @c_shp_vl10_item-vbelv
     AND a~zzebelp1 EQ @c_shp_vl10_item-posnv.

**** VBADR DATA

  READ TABLE i_t_vbadr_we INTO DATA(ls_vbadr_we) INDEX 1.

  MOVE ls_vbadr_we-stras TO c_shp_vl10_item-zzstras.
  MOVE ls_vbadr_we-land1 TO c_shp_vl10_item-zzland1.
  MOVE ls_vbadr_we-pstlz TO c_shp_vl10_item-zzpstlz.
  MOVE ls_vbadr_we-ort01 TO c_shp_vl10_item-zzort01.

**** SEGUNDA DATA

*** ZZSEGCAL

  IF c_shp_vl10_item-auart eq 'ZINT'.
    SELECT SINGLE zzsegcal FROM ekko INTO c_shp_vl10_item-zzsegcal WHERE ebeln = c_shp_vl10_item-vbelv .
  ELSE.
    SELECT SINGLE zzsegcal FROM vbak INTO c_shp_vl10_item-zzsegcal WHERE vbeln = c_shp_vl10_item-vbelv .
  ENDIF.

  CLEAR c_shp_vl10_item-zzsegcal_desc.

  IF c_shp_vl10_item-zzsegcal IS NOT INITIAL.
     SELECT SINGLE texto FROM ztsd0004 INTO c_shp_vl10_item-zzsegcal_desc WHERE zzsegal = c_shp_vl10_item-zzsegcal AND spras = sy-langu.
  ENDIF.

ENDFUNCTION.
