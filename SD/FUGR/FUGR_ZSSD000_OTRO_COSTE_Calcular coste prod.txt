FUNCTION zssd000_otro_coste.
*"--------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_XKOMV) TYPE  WCB_KOMV_INDEX_TAB
*"  EXPORTING
*"     VALUE(E_XKWERT) TYPE  KWERT
*"--------------------------------------------------------------------

  DATA: l_otro_coste TYPE kbetr.


  READ TABLE i_xkomv INTO DATA(l_150) WITH KEY stunr = '150'.
  IF sy-subrc = 0.
    l_otro_coste = abs( l_150-kwert ).
  ELSE.
    READ TABLE i_xkomv INTO DATA(l_45) WITH KEY stunr = '45'.
    IF NOT line_exists( i_xkomv[ kschl = 'ZD01' ] ) AND NOT line_exists( i_xkomv[ kschl = 'ZD02' ] ).
      CLEAR: l_45.
    ENDIF.
    READ TABLE i_xkomv INTO DATA(l_65) WITH KEY stunr = '65'.
    IF NOT line_exists( i_xkomv[ kschl = 'ZD03' ] ) AND NOT line_exists( i_xkomv[ kschl = 'ZD04' ] ).
      CLEAR: l_65.
    ENDIF.
    l_otro_coste = abs( l_45-kwert ) + abs( l_65-kwert ).

  ENDIF.

*APC20250226 En lugar de leer las condiciones una a una cogemos el subtotal
*  READ TABLE i_xkomv INTO DATA(l_za00) WITH KEY kschl = 'ZA00'.
*  IF sy-subrc = 0.
*    CLEAR: l_za00.
*  ENDIF.
*    READ TABLE i_xkomv INTO DATA(l_za01) WITH KEY kschl = 'ZA01'.
*  IF sy-subrc = 0.
*    CLEAR: l_za01.
*  ENDIF.
*    READ TABLE i_xkomv INTO DATA(l_za02) WITH KEY kschl = 'ZA02'.
*  IF sy-subrc = 0.
*    CLEAR: l_za02.
*  ENDIF.
*    READ TABLE i_xkomv INTO DATA(l_za03) WITH KEY kschl = 'ZA03'.
*  IF sy-subrc = 0.
*    CLEAR: l_za03.
*  ENDIF.
*    READ TABLE i_xkomv INTO DATA(l_za04) WITH KEY kschl = 'ZA04'.
*  IF sy-subrc = 0.
*    CLEAR: l_za04.
*  ENDIF.
*
*  l_otro_coste = l_otro_coste + abs( l_za00-kwert ) + abs( l_za01-kwert ) + abs( l_za02-kwert ) + abs( l_za03-kwert ) + abs( l_za04-kwert ).
  READ TABLE i_xkomv INTO DATA(l_coste_rappel) WITH KEY stunr = '280'.
  IF sy-subrc = 0.
    l_otro_coste = abs( l_otro_coste ) + abs( l_coste_rappel-kwert ).
  ENDIF.

  READ TABLE i_xkomv INTO DATA(l_750) WITH KEY stunr = '750'.
  IF NOT line_exists( i_xkomv[ kschl = 'ZCP0' ] ) AND NOT line_exists( i_xkomv[ kschl = 'ZCP1' ] ) AND NOT line_exists( i_xkomv[ kschl = 'ZCP2' ] ) AND NOT line_exists( i_xkomv[ kschl = 'ZCP3' ] ).
    CLEAR: l_750.
  ENDIF.

  l_otro_coste = l_otro_coste + abs( l_750-kwert ).


  e_xkwert = l_otro_coste.



ENDFUNCTION.
