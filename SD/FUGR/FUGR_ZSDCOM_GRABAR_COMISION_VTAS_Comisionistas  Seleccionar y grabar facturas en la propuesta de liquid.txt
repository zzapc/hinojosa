FUNCTION zsdcom_grabar_comision_vtas.
*"----------------------------------------------------------------------
*"*"Módulo funciones actualiz.
*"
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_VBELN) TYPE  VBELN
*"----------------------------------------------------------------------

  DATA lv_vbeln TYPE vbrk-vbeln.
  DATA lv_retcode.
  DATA lv_extnumber TYPE balnrext.

* Sacamos el número de factura de ventas
  lv_vbeln = i_vbeln.

* Genero log
  lv_extnumber = i_vbeln.

  CLEAR gv_loghandle.
  CALL FUNCTION 'ZSFI309_LOGS_CREAR_LOG'
    EXPORTING
      iv_extnumber = lv_extnumber
      iv_object    = 'ZSSD_COM'
      iv_subobject = 'ZSSD_COM'
    IMPORTING
      ev_loghandle = gv_loghandle.

* Sacamos los datos de la factura
  lv_retcode = 0.
  PERFORM sacar_datos_factura USING    lv_vbeln
                              CHANGING lv_retcode.

* Si no hay error -> Seguimos
  IF lv_retcode = 0.
*   Si no hay clases de condición -> NO hacemos nada más
    IF gti_prcd_elements[] IS INITIAL.
      lv_retcode = 4.
      syst-msgid = 'ZSDCOM'.
      syst-msgno = '002'.
      syst-msgty = 'S'.
      PERFORM protocol_update_z.
    ENDIF.

*   Si no hay interlocutores -> NO hacemos nada más
    IF gti_vbpa[] IS INITIAL.
      lv_retcode = 4.
      syst-msgid = 'ZSDCOM'.
      syst-msgno = '003'.
      syst-msgty = 'S'.
      PERFORM protocol_update_z.
    ENDIF.

*   Registramos las posiciones de las comisiones en las tablas Z
    IF lv_retcode = 0.
      PERFORM registrar_comisiones CHANGING lv_retcode.

*   Si no hay error -> Añadimos un mensaje de éxito
      IF lv_retcode = 0.
        syst-msgid = 'ZSDCOM'.
        syst-msgno = '004'.
        syst-msgty = 'S'.
        PERFORM protocol_update_z.
      ENDIF.
    ENDIF.
  ENDIF.

  CALL FUNCTION 'ZSFI309_LOGS_GRABAR_LOG'
    EXPORTING
      iv_loghandle = gv_loghandle.


ENDFUNCTION.
