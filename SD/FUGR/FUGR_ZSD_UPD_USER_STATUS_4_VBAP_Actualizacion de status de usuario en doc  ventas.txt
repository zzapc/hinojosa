FUNCTION zsd_upd_user_status_4_vbap.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     REFERENCE(I_OBJNR) TYPE  J_OBJNR
*"     REFERENCE(I_NEW_STATUS) TYPE  ZSSD_STAT_POS
*"     REFERENCE(I_COMMIT) TYPE  BOOLEAN OPTIONAL
*"     REFERENCE(I_STAT_MEMORY) TYPE  ZSSD_STAT_POS DEFAULT ''
*"  EXPORTING
*"     REFERENCE(E_RETURN) TYPE  BAPIRET2
*"  EXCEPTIONS
*"      NO_CHANGED
*"----------------------------------------------------------------------

**********************************************************************
*^Parámetros locales
**********************************************************************

  DATA: lv_estat TYPE j_estat.

**********************************************************************
* Lógica
**********************************************************************
  "JCB 07.09.22. Validación status siguiente
  CALL FUNCTION 'Z_SD_VAL_USER_STATUS_4_VBAP'
    EXPORTING
      i_objnr          = i_objnr
      i_new_status     = i_new_status
      i_stat_memory    = i_stat_memory
    EXCEPTIONS
      status_no_valido = 1
      OTHERS           = 2.
  IF sy-subrc <> 0.
    e_return-id           = sy-msgid.
    e_return-type         = sy-msgty.
    e_return-number       = sy-msgno.
    e_return-message_v1   = sy-msgv1.
    e_return-message_v2   = sy-msgv2.
    e_return-message_v3   = sy-msgv3.
    e_return-message_v4   = sy-msgv4.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
      INTO e_return-message.
    RAISE no_changed.
  ENDIF.
  "FIN JCB 07.09.22. Validación status siguiente



  "Obtenemos código de status de usuario a modificar
  SELECT SINGLE estat
    FROM tj30t
    INTO lv_estat
   WHERE txt04 = i_new_status
     AND stsma = 'ZS000001'
     AND spras = 'S'.

  "Comprobamos si se ha obtenido
  IF ( sy-subrc EQ 0 AND lv_estat IS NOT INITIAL ). "OK

    "Modificamos status de usuario
    CALL FUNCTION 'STATUS_CHANGE_EXTERN'
      EXPORTING
        objnr               = i_objnr
        user_status         = lv_estat
      EXCEPTIONS
        object_not_found    = 1
        status_inconsistent = 2
        status_not_allowed  = 3
        OTHERS              = 4.

    "Comprobamos si se ha modificado
    IF ( sy-subrc = 0 ). "Si

      "Comprobamos si debemos guardar los cambios
      IF ( i_commit = abap_true ).

        COMMIT WORK AND WAIT.

      ENDIF.

      "Mensaje de salida
      e_return-id       = 'ZSD'.
      e_return-type     = 'S'.
      e_return-number   = '005'.
      e_return-message  = 'Status de usuario modifcado.'.

    ELSE. "No

      CASE sy-subrc.

        WHEN 1.

          e_return-id       = 'ZSD'.
          e_return-type     = 'E'.
          e_return-number   = '002'.
          e_return-message  = 'Error en número de objeto.'.

        WHEN 2.

          e_return-id       = 'ZSD'.
          e_return-type     = 'E'.
          e_return-number   = '003'.
          e_return-message  = 'Status inconsistente.'.

        WHEN 3.

          e_return-id       = 'ZSD'.
          e_return-type     = 'E'.
          e_return-number   = '003'.
          e_return-message  = 'Status no permitido.'.

        WHEN OTHERS.

          e_return-id       = 'ZSD'.
          e_return-type     = 'E'.
          e_return-number   = '004'.
          e_return-message  = 'Imposible modificar status de usuario.'.

      ENDCASE.

      RAISE no_changed.

    ENDIF.

  ELSE. "No ok

    e_return-id       = 'ZSD'.
    e_return-type     = 'E'.
    e_return-number   = '001'.
    e_return-message  = 'No existe el status de usuario.'.

    RAISE no_changed.

  ENDIF.

ENDFUNCTION.
