FUNCTION zsdcom_buscar_fac_sin_registra.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  EXPORTING
*"     REFERENCE(OT_FACTURAS) TYPE  ZSDCOM_TT_FAC_SIN_REGISTRAR
*"----------------------------------------------------------------------

  DATA: rg_kschl TYPE RANGE OF kschl,
        rs_kschl LIKE LINE OF rg_kschl,
        rg_parvw TYPE RANGE OF parvw,
        rs_parvw LIKE LINE OF rg_parvw.
  "rango de condiciones
  rs_kschl-sign   = 'I'.
  rs_kschl-option = 'EQ'.
  rs_kschl-low    = 'ZCI1'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCI2'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCI3'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCI4'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCO1'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCO2'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCA1'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCA2'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCA3'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCA5'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCP1'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCP2'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCP3'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCR1'. APPEND rs_kschl TO rg_kschl.
  rs_kschl-low    = 'ZCR2'. APPEND rs_kschl TO rg_kschl.
  "CVP range de interlocutores
  rs_parvw-sign   = 'I'.
  rs_parvw-option = 'EQ'.
  rs_parvw-low    = 'P1'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'P2'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'P3'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'T1'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'T2'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'A1'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'A2'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'D1'.APPEND rs_parvw TO rg_parvw.
  rs_parvw-low    = 'D2'.APPEND rs_parvw TO rg_parvw.

  SELECT vbrk~vbeln,
         vbrk~bukrs,
         vbrk~fkdat,
         prcd~knumv,
         prcd~kposn,
         prcd~kschl
  FROM vbrk AS vbrk
  LEFT JOIN konv AS prcd ON vbrk~knumv = prcd~knumv
  INTO TABLE @ot_facturas
  WHERE vbrk~rfbsk = 'C'
    AND kschl IN @rg_kschl
    AND kinak = @space
    AND prcd~kwert <> 0
    AND NOT EXISTS ( SELECT vbeln
                     FROM ztsdcom_pos
                     WHERE bukrs = vbrk~bukrs
                     AND vbeln = vbrk~vbeln
                     AND posnr = prcd~kposn
                     AND kschl = prcd~kschl )
   AND EXISTS ( SELECT vbeln FROM vbpa
                WHERE vbeln = vbrk~vbeln
*                AND posnr = '000000'
                AND parvw IN @rg_parvw )
  ORDER BY vbeln.


********************************************
  "display alv in gui_mode
  DATA go_table  TYPE REF TO cl_salv_table.
  GET PARAMETER ID 'GUI_IS_ON' FIELD DATA(l_has_gui).
  IF l_has_gui = 'X'.
    TRY.
        CALL METHOD cl_salv_table=>factory
          IMPORTING
            r_salv_table = go_table
          CHANGING
            t_table      = ot_facturas.
        DATA functions TYPE REF TO cl_salv_functions_list.
        functions = go_table->get_functions( ).
        functions->set_all( ).
        DATA columns TYPE REF TO cl_salv_columns_table.
        columns = go_table->get_columns( ).
        columns->set_optimize( ).
        go_table->display( ).
      CATCH cx_salv_msg .
    ENDTRY.
  ENDIF.
********************************************



ENDFUNCTION.
