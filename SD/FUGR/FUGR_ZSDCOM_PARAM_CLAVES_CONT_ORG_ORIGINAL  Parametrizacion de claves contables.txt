FUNCTION zsdcom_param_claves_cont_org.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(I_KOART) TYPE  KOART
*"  TABLES
*"      ER_BSCHL_FAC STRUCTURE  BBP_RNG_BSCHL OPTIONAL
*"      ER_BSCHL_OTR STRUCTURE  BBP_RNG_BSCHL OPTIONAL
*"      ER_BSCHL_EFC STRUCTURE  BBP_RNG_BSCHL OPTIONAL
*"      ER_BSCHL_IMP STRUCTURE  BBP_RNG_BSCHL OPTIONAL
*"      ER_BSCHL_ANT STRUCTURE  BBP_RNG_BSCHL OPTIONAL
*"      ER_BSCHL_ABO STRUCTURE  BBP_RNG_BSCHL OPTIONAL
*"      ER_UMSKZ_FAC STRUCTURE  ACC_S_RA_BVIND OPTIONAL
*"      ER_UMSKZ_OTR STRUCTURE  ACC_S_RA_BVIND OPTIONAL
*"      ER_UMSKZ_EFC STRUCTURE  ACC_S_RA_BVIND OPTIONAL
*"      ER_UMSKZ_IMP STRUCTURE  ACC_S_RA_BVIND OPTIONAL
*"      ER_UMSKZ_ANT STRUCTURE  ACC_S_RA_BVIND OPTIONAL
*"      ER_UMSKZ_ABO STRUCTURE  ACC_S_RA_BVIND OPTIONAL
*"  CHANGING
*"     VALUE(CT_TRAZA) TYPE  ZTTSDCOM_TRAZA_OR OPTIONAL
*"----------------------------------------------------------------------

  DATA: lti_claves  TYPE TABLE OF ztsdcom004,
        lti_tipos   TYPE TABLE OF dd07t.

  DATA: ls_clave    TYPE ztsdcom004,
        ls_tipo     TYPE dd07t,
        ls_traza    TYPE zssdcom_traza_or.

  DATA: lv_ind    TYPE sy-tabix.

* Busqueda de parametrización de claves de contabilización...
  SELECT * INTO TABLE lti_claves
      FROM  ztsdcom004
      WHERE ( koart = i_koart OR koart = '' ).

* Sacamos la descripción de los tipos de documento
  SELECT * INTO TABLE lti_tipos
      FROM  dd07t
      WHERE domname = 'ZSDCOM_TIPODOC'.

* Claves
  LOOP AT lti_claves INTO ls_clave.
    CASE ls_clave-tipodoc.
      WHEN '1'. "facturas
        er_bschl_fac-low    = ls_clave-bschl.
        er_bschl_fac-sign   = 'I'.
        er_bschl_fac-option = 'EQ'.
        APPEND er_bschl_fac.
        er_umskz_fac-low    = ls_clave-umskz.
        er_umskz_fac-sign   = 'I'.
        er_umskz_fac-option = 'EQ'.
        APPEND er_umskz_fac.

      WHEN '2'. "otros
        er_bschl_otr-low    = ls_clave-bschl.
        er_bschl_otr-sign   = 'I'.
        er_bschl_otr-option = 'EQ'.
        APPEND er_bschl_otr.
        er_umskz_otr-low    = ls_clave-umskz.
        er_umskz_otr-sign   = 'I'.
        er_umskz_otr-option = 'EQ'.
        APPEND er_umskz_otr.

      WHEN '3'. "efectos
        er_bschl_efc-low    = ls_clave-bschl.
        er_bschl_efc-sign   = 'I'.
        er_bschl_efc-option = 'EQ'.
        APPEND er_bschl_efc.
        er_umskz_efc-low    = ls_clave-umskz.
        er_umskz_efc-sign   = 'I'.
        er_umskz_efc-option = 'EQ'.
        APPEND er_umskz_efc.

      WHEN '4'. "impagados
        er_bschl_imp-low    = ls_clave-bschl.
        er_bschl_imp-sign   = 'I'.
        er_bschl_imp-option = 'EQ'.
        APPEND er_bschl_imp.
        er_umskz_imp-low    = ls_clave-umskz.
        er_umskz_imp-sign   = 'I'.
        er_umskz_imp-option = 'EQ'.
        APPEND er_umskz_imp.

      WHEN '5'. "anticipos
        er_bschl_ant-low    = ls_clave-bschl.
        er_bschl_ant-sign   = 'I'.
        er_bschl_ant-option = 'EQ'.
        APPEND er_bschl_ant.
        er_umskz_ant-low    = ls_clave-umskz.
        er_umskz_ant-sign   = 'I'.
        er_umskz_ant-option = 'EQ'.
        APPEND er_umskz_ant.

      WHEN '6'. "abonos
        er_bschl_abo-low    = ls_clave-bschl.
        er_bschl_abo-sign   = 'I'.
        er_bschl_abo-option = 'EQ'.
        APPEND er_bschl_abo.
        er_umskz_abo-low    = ls_clave-umskz.
        er_umskz_abo-sign   = 'I'.
        er_umskz_abo-option = 'EQ'.
        APPEND er_umskz_abo.

    ENDCASE.
  ENDLOOP.

* Rellenamos el tipo de documento en la traza
  LOOP AT ct_traza INTO ls_traza.
    lv_ind = sy-tabix.

    IF ls_traza-bschl IN er_bschl_fac AND
       ls_traza-umskz IN er_umskz_fac.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '1'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_otr AND
           ls_traza-umskz IN er_umskz_otr.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '2'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_efc AND
           ls_traza-umskz IN er_umskz_efc.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '3'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_imp AND
           ls_traza-umskz IN er_umskz_imp.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '4'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_ant AND
           ls_traza-umskz IN er_umskz_ant.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '5'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_abo AND
           ls_traza-umskz IN er_umskz_abo.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '6'.
      ls_traza-doc_t = ls_tipo-ddtext(30).
    ENDIF.

*   Modificamos la línea
    MODIFY ct_traza FROM ls_traza INDEX lv_ind.
  ENDLOOP.


* Rellenamos el tipo de documento en la traza (por si se ha quedado alguno vacío)
  LOOP AT ct_traza INTO ls_traza WHERE doc_t IS INITIAL.
    lv_ind = sy-tabix.

    IF ls_traza-bschl IN er_bschl_fac.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '1'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_otr.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '2'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_efc.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '3'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_imp.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '4'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_ant.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '5'.
      ls_traza-doc_t = ls_tipo-ddtext(30).

    ELSEIF ls_traza-bschl IN er_bschl_abo.
      READ TABLE lti_tipos INTO ls_tipo WITH KEY domvalue_l = '6'.
      ls_traza-doc_t = ls_tipo-ddtext(30).
    ENDIF.

*   Modificamos la línea
    MODIFY ct_traza FROM ls_traza INDEX lv_ind.
  ENDLOOP.

ENDFUNCTION.
