*&---------------------------------------------------------------------*
*&  Include           ZSSD034_ALV
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form LOAD_DATA_INTO_GRID
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_GT_OUTPUT  text
*      -->P_CONTAINER  text
*      -->P_       text
*      -->P_VARIANT  text
*      -->P_       text
*      <--P_ALV  text
*      <--P_LAYOUT  text
*      <--P_FIELDCAT  text
*      <--P_EXCLUDIN  text
*&---------------------------------------------------------------------*
FORM load_data_into_grid TABLES tabla       TYPE STANDARD TABLE
                         USING contenedor  TYPE REF TO cl_gui_custom_container
                               nombre_cont TYPE        scrfname
                               variant     LIKE        disvariant
                               estruc      LIKE        dd02l-tabname
                     CHANGING  alv         TYPE REF TO cl_gui_alv_grid
                               layout      TYPE        lvc_s_layo
                               it_fieldcat TYPE        lvc_t_fcat
                               excludin    TYPE        ui_functions.

  IF alv IS INITIAL.
    IF cl_gui_alv_grid=>offline( ) IS INITIAL.

      "CREATE OBJECT eventos.

      CREATE OBJECT contenedor
        EXPORTING
          container_name = nombre_cont
        EXCEPTIONS
          OTHERS         = 1.

      CREATE OBJECT alv
        EXPORTING
          i_parent = contenedor
        EXCEPTIONS
          OTHERS   = 1.

      CALL METHOD alv->register_edit_event
        EXPORTING
          i_event_id = cl_gui_alv_grid=>mc_evt_modified
        EXCEPTIONS
          error      = 1
          OTHERS     = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

    ELSE.

*      CREATE OBJECT alv
*        EXPORTING
*          i_parent = or_doc.

    ENDIF.

    PERFORM preparefieldcatalog USING    estruc
                                CHANGING it_fieldcat.

    PERFORM preparelayout       CHANGING layout.
    PERFORM rellenar_toolbar    CHANGING excludin.

    IF zcl_alv_local IS INITIAL.
      CREATE OBJECT zcl_alv_local.
    ENDIF.
    SET HANDLER zcl_alv_local->hotspot_click  FOR alv.

    CALL METHOD alv->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

    CALL METHOD alv->set_table_for_first_display
      EXPORTING
        is_variant           = variant
        i_save               = 'A'
        is_layout            = layout
        it_toolbar_excluding = excludin
      CHANGING
        it_outtab            = tabla[]
        it_fieldcatalog      = it_fieldcat
      EXCEPTIONS
        OTHERS               = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ELSE.

    CALL METHOD alv->refresh_table_display
      EXPORTING
        is_stable = gs_stable.
  ENDIF.

ENDFORM.


*&---------------------------------------------------------------------*
*& Form PREPAREFIELDCATALOG
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_ESTRUC  text
*      <--P_IT_FIELDCAT  text
*&---------------------------------------------------------------------*
FORM preparefieldcatalog USING    estruc       LIKE dd02l-tabname
                         CHANGING it_fieldcat1 TYPE lvc_t_fcat.

  DATA: l_fieldcat TYPE LINE OF lvc_t_fcat.

  REFRESH it_fieldcat1.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active        = 'X'
      i_structure_name       = estruc
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = it_fieldcat1[]
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.

  LOOP AT it_fieldcat1 INTO l_fieldcat.
    CASE l_fieldcat-fieldname.

      WHEN 'ARBPL'.
        l_fieldcat-coltext = 'Paso de máquina'.

      WHEN 'STAT_TXT'.
        l_fieldcat-coltext = 'Fase de la orden'.

      WHEN 'LIFNR'.
        l_fieldcat-coltext = 'Comercial'.

      WHEN 'NAME1_LIFNR'.
        l_fieldcat-coltext = 'Nombre comercial'.

      WHEN 'VBELN'.
        l_fieldcat-hotspot = 'X'.

      WHEN 'NAME1_KUNNR'.
        l_fieldcat-coltext = 'Nombre cliente'.

      WHEN 'NAME1_KUNWE'.
        l_fieldcat-coltext = 'Nombre destino'.

      WHEN 'PARVW_P1'.
        l_fieldcat-coltext = 'Comisionista 01'.
      WHEN 'NAME1_P1'.
        l_fieldcat-coltext = 'Nombre comisionista 01'.
      WHEN 'PARVW_P2'.
        l_fieldcat-coltext = 'Comisionista 02'.
      WHEN 'NAME1_P2'.
        l_fieldcat-coltext = 'Nombre comisionista 02'.
      WHEN 'PARVW_P3'.
        l_fieldcat-coltext = 'Comisionista 03'.
      WHEN 'NAME1_P3'.
        l_fieldcat-coltext = 'Nombre comisionista 03'.
      WHEN 'PARVW_VE'.
        l_fieldcat-coltext = 'Encargado comercial'.
      WHEN 'NAME1_VE'.
        l_fieldcat-coltext = 'Nombre encargado comercial'.
      WHEN 'PARVW_A1'.
        l_fieldcat-coltext = 'Gestor backoffice'.
      WHEN 'NAME1_A1'.
        l_fieldcat-coltext = 'Nombre gestor backoffice'.

      WHEN 'ORT01'.
        l_fieldcat-coltext = 'Población destino'.

      WHEN 'TBQTY'.
        l_fieldcat-coltext = 'Cantidad Palets'.

      WHEN 'SITUACION' OR 'SITUACION_TXT'.
        l_fieldcat-coltext = 'Situación'.

      WHEN 'STATUS_PEDIDO' OR 'STATUS_M' OR 'STATUS_V' OR 'STATUS_R' OR 'STATUS_N' OR
           'STATUS_A' OR 'URL_VA03' OR 'URL_CO03' OR 'URL_TKNUM' OR 'TKNUM' OR 'BMENG'.
        l_fieldcat-tech =  'X'.

      WHEN 'FECHA_INI'.
        l_fieldcat-coltext = 'Fecha inicio orden'.

      WHEN 'FECHA_FIN'.
        l_fieldcat-coltext = 'Fecha fin orden'.

      WHEN 'ZZ_FECHA_SERVICIO_FINAL'.
        l_fieldcat-coltext = 'Fecha servicio final'.

      WHEN 'LTXA1_ALL'.
        l_fieldcat-coltext = 'Pasos Orden'.

      WHEN 'LHMNG1'.
        l_fieldcat-coltext = 'Unidades por palet completo'.

      WHEN 'CUOBJ' OR 'VRKME'.
        l_fieldcat-tech = 'X'.

      WHEN 'PRQTY'.
        l_fieldcat-coltext = 'Cajas Paquete'.

      WHEN 'LATE_SCHED_FIN_DATE_EXEC'.
        l_fieldcat-coltext = 'Fecha fin Paso de máquina'.

      WHEN 'LATE_SCHED_FIN_TIME_EXEC'.
        l_fieldcat-coltext = 'Hora fin Paso de máquina'.

      WHEN 'LFIMG'.
        l_fieldcat-coltext = 'Cant.ent.pend'.

      WHEN 'LFIMG_SERVIDO'.
        l_fieldcat-coltext = 'Cant.ent.enviada'.
      WHEN 'SEMI'.
        l_fieldcat-coltext = 'Mat. Semi'.
      WHEN OTHERS.

    ENDCASE.
    MODIFY it_fieldcat1 FROM l_fieldcat.
  ENDLOOP.

ENDFORM.


*&---------------------------------------------------------------------*
*& Form PREPARELAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      <--P_LAYOUT  text
*&---------------------------------------------------------------------*
FORM preparelayout CHANGING cwa_layout TYPE lvc_s_layo.

  cwa_layout-zebra      = 'X'.
  cwa_layout-cwidth_opt = 'X'.
  cwa_layout-sel_mode   = 'A'.
  cwa_layout-ctab_fname = 'CELLCOLOR'.
*  cwa_layout-sel_mode = space.
*  cwa_layout-no_rowmark = abap_false.
ENDFORM.


*&---------------------------------------------------------------------*
*& Form RELLENAR_TOOLBAR
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      <--P_EXCLUDIN  text
*&---------------------------------------------------------------------*
FORM rellenar_toolbar CHANGING excluirtool TYPE ui_functions.

  REFRESH: excluirtool.

ENDFORM.

FORM filas_seleccionadas USING alv TYPE REF TO cl_gui_alv_grid
                      CHANGING pt_output_sel.

  TYPES: tt_lines LIKE gt_output. "WITH EMPTY KEY.

  CALL METHOD alv->get_selected_rows
    IMPORTING
      et_index_rows = DATA(it_rows).

  IF it_rows IS NOT INITIAL.
    DATA(pt_output_aux) = VALUE tt_lines( FOR wa_indx IN it_rows ( gt_output[ wa_indx-index ] ) ).
  ENDIF.

  pt_output_sel = pt_output_aux.

ENDFORM.                    " filas_seleccionadas
