*----------------------------------------------------------------------*
***INCLUDE ZRSD0015_O01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'D0100'.


  IF pvbeln_p IS NOT INITIAL.
    SET TITLEBAR 'D0100_1'.
  ELSEIF pvbeln_e IS NOT INITIAL.
    SET TITLEBAR 'D0100_2'.
  ENDIF.

  IF gr_container IS NOT BOUND.

    IF cl_salv_table=>is_offline( ) EQ if_salv_c_bool_sap=>false.
      CREATE OBJECT gr_container
        EXPORTING
          container_name = 'CONTAINER'.
    ENDIF.

*... §2 create an ALV table
    TRY.
        cl_salv_table=>factory(
          EXPORTING
            r_container    = gr_container
            container_name = 'CONTAINER'
          IMPORTING
            r_salv_table   = gr_table
          CHANGING
            t_table        = gt_pedidos ).
      CATCH cx_salv_msg.                                "#EC NO_HANDLER
    ENDTRY.

*... §3 Functions
    data: lr_functions type ref to cl_salv_functions_list,
          l_text       type string.
*
*... §3.1 activate ALV generic Functions
    lr_functions = gr_table->get_functions( ).
    lr_functions->set_all( gc_true ).
*
*... §3.2 include own functions by setting own status
    try.
      l_text = text-b01.
      lr_functions->add_function(
        name     = 'VER_PAL'
        icon     = space
        text     = l_text
        tooltip  = l_text
        position = if_salv_c_function_position=>right_of_salv_functions ).
      catch cx_salv_wrong_call cx_salv_existing.
    endtry.

*... set the columns technical
    data: lr_columns type ref to cl_salv_columns,
          lr_column  type ref to cl_salv_column_table.
*
    lr_columns = gr_table->get_columns( ).
    lr_columns->set_optimize( gc_true ).
*
    perform set_columns_technical using lr_columns.
*
**... §4 set hotspot column
*    try.
*        lr_column ?= lr_columns->get_column( 'HOTSPOT' ).
*        lr_column->set_cell_type( if_salv_c_cell_type=>hotspot ).
*        lr_column->set_icon( if_salv_c_bool_sap=>true ).
*        lr_column->set_long_text( 'HOTSPOT' ).
*      catch cx_salv_not_found.                          "#EC NO_HANDLER
*    endtry.
*
*... §6 register to the events of cl_salv_table
    data: lr_events type ref to cl_salv_events_table.

    lr_events = gr_table->get_event( ).

    create object gr_events.
*
*... §6.1 register to the event USER_COMMAND
    set handler gr_events->on_user_command for lr_events.
*... §6.2 register to the event DOUBLE_CLICK
    set handler gr_events->on_double_click for lr_events.
**... §6.3 register to the event LINK_CLICK
*    set handler gr_events->on_link_click for lr_events.
*
*... §7 selections
    data: lr_selections type ref to cl_salv_selections,
          lt_rows       type salv_t_row,
          lt_column     type salv_t_column,
          ls_cell       type salv_s_cell.
*
    lr_selections = gr_table->get_selections( ).
*
*... §7.1 set selection mode
    lr_selections->set_selection_mode( if_salv_c_selection_mode=>single ).
*
**... §7.2 set selected columns.
*    append 'CARRID' to lt_column.
*    append 'CONNID' to lt_column.
*    append 'FLDATE' to lt_column.
*    lr_selections->set_selected_columns( lt_column ).
*
**... §7.3 set selected rows.
*    append 1 to lt_rows.
*    append 2 to lt_rows.
*    append 3 to lt_rows.
*    lr_selections->set_selected_rows( lt_rows ).
*
**... §7.4 set current cell
*    ls_cell-row        = 4.
*    ls_cell-columnname = 'PRICE'.
*    lr_selections->set_current_cell( ls_cell ).

*... §8 display the table
    gr_table->display( ).
  ENDIF.


ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_0400  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS 'D0200'.
  SET TITLEBAR 'D0200'.

  IF gv_vista_cliente = abap_true.
    PERFORM visibilidad_campos USING 0. "Mostrar campos de cliente
  else.
    PERFORM visibilidad_campos USING 1. "Ocultar campos de cliente
  ENDIF.

ENDMODULE.                 " STATUS_0400  OUTPUT
