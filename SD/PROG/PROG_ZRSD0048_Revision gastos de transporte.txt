***********************************************************************
* TIPO : LISTADO
* TITULO : Revisión gastos de transporte
* DESCRIPCION : Revisión gastos de transporte
*
* AUTOR: Andrés Picazo                                FECHA: 19/12/2024
* ANALISTA: Alfredo García
*
***********************************************************************
REPORT zrsd0048.

*------TABLAS/ESTRUCTURAS----------------------------------------------*
TABLES: vfkk, vfkp, vttk.

INCLUDE rsdbc1xx.
*------TABLAS INTERNAS-------------------------------------------------*
*----------------------------------------------------------------------*
* CLASS lcl_alv DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv DEFINITION INHERITING FROM zcl_ap_alv_check FINAL.
  PUBLIC SECTION.
    METHODS handle_user_command REDEFINITION.
    METHODS visualizar_objeto   REDEFINITION.
ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS zcl_report DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_report DEFINITION INHERITING FROM zcl_dev FINAL.
  PUBLIC SECTION.
    TYPES: BEGIN OF t_listado,
             check   TYPE xfeld,
             lights  TYPE zico_estado_mensaje,
             fknum   TYPE vfkk-fknum,
             fkart   TYPE vfkk-fkart,
             stber   TYPE vfkk-stber,
             stfre   TYPE vfkk-stfre,
             stabr   TYPE vfkk-stabr,
             ernam   TYPE vfkk-ernam,
             erdat   TYPE vfkk-erdat,
             erzet   TYPE vfkk-erzet,
             fkpos   TYPE vfkp-fkpos,
             bukrs   TYPE vfkp-bukrs,
             budat   TYPE vfkp-budat,
             netwr   TYPE vfkp-netwr,
             mwsbp   TYPE vfkp-mwsbp,
             waers   TYPE vfkp-waers,
             refty   TYPE vfkp-refty,
             rebel   TYPE vfkp-rebel,
             tknum   TYPE tknum,
             tplst   TYPE vfkp-tplst,
             vsart   TYPE vfkp-vsart,
             tdlnr   TYPE vfkp-tdlnr,
             add04   TYPE vttk-add04,
             exti1   TYPE vfkp-exti1,
             exti2   TYPE vfkp-exti2,
             postx   TYPE vfkp-postx,
             sterm   TYPE vfkk-sterm,
             prsdt   TYPE vfkk-prsdt,
             message TYPE bapi_msg,
             color   TYPE lvc_t_scol,
           END OF t_listado,
           tt_listado TYPE STANDARD TABLE OF t_listado.

    DATA: i_listado TYPE tt_listado,
          o_alv     TYPE REF TO lcl_alv ##NEEDED.

    METHODS  main.

    METHODS: listado,
      seleccionar_datos.

ENDCLASS.

*------VARIABLES-------------------------------------------------------*
DATA o_prog TYPE REF TO zcl_report.


*------PARAMETER/SELECT-OPTIONS EN PANTALLA----------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-sel.
SELECT-OPTIONS: s_fknum FOR vfkk-fknum,
                s_fkart FOR vfkk-fkart,
                s_budat FOR vfkk-budat,
                s_netwr FOR vfkp-netwr DEFAULT 0,
                s_bukrs FOR vfkp-bukrs,
                s_tplst for VFKP-TPLST,
                s_tknum FOR vttk-tknum,
                s_tdlnr FOR vttk-tdlnr,
                s_erdat FOR vttk-erdat,
                s_ernam FOR vttk-ernam,
                s_stabr FOR vfkk-stabr.
SELECTION-SCREEN SKIP 1.
PARAMETERS p_vari LIKE disvariant-variant.
SELECTION-SCREEN END OF BLOCK b01.
__botones_plantilla.


************************************************************************
*
* LOGICA DEL PROGRAMA
*
************************************************************************

*----------------------------------------------------------------------*
* CLASS lcl_alv IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv IMPLEMENTATION.
  METHOD visualizar_objeto.
    " TODO: variable is assigned but only used in commented-out code (ABAP cleaner)
    DATA l_list TYPE o_prog->t_listado.

    l_list = list.
    CASE column.
*      WHEN 'BUKRS'.
*        MESSAGE l_list-bukrs TYPE 'I'.
      WHEN OTHERS. message = 'No implementado'.
    ENDCASE.
  ENDMETHOD. " handle_double_click

  METHOD handle_user_command.
    DATA: o_bi TYPE REF TO zcl_ap_batch_input.

    check_ucomm_sel = 'BORRAR,ANUL_TR,CREAR'.

    super->handle_user_command( e_salv_function ).

    CASE ucomm.
      WHEN 'BORRAR'.
        LOOP AT o_prog->i_listado ASSIGNING FIELD-SYMBOL(<listado>) WHERE check = 'X' AND stabr NE 'A'.
          MESSAGE |El gasto { <listado>-fknum } no se puede borrar, porque tiene otras posiciones| TYPE 'I'.
          RETURN.
        ENDLOOP.
        CREATE OBJECT o_bi.
        LOOP AT o_prog->i_listado ASSIGNING <listado> WHERE check = 'X'.
          o_bi->inicio( ).

* Freight Costs: Initial Screen VI02/VI03
          o_bi->dynpro( program = 'SAPMV54A' dynpro = '0020' okcode = '=UEBP').
          o_bi->campos( campo = 'VFKK-FKNUM' valor = <listado>-fknum ). " Nº gastos transporte

* Freight Costs: Freight Cost Items Overview
          o_bi->dynpro( program = 'SAPMV54A' dynpro = '0030' okcode = '/ELOES').

          <listado>-message = o_bi->llamar_transaccion( tcode = 'VI02' modo = o_prog->modo_ct ).
          COMMIT WORK AND WAIT.
          SELECT SINGLE fknum FROM vfkk
            INTO <listado>-fknum
           WHERE fknum = <listado>-fknum.
          IF sy-subrc NE 0.
            CLEAR <listado>-fknum.
            o_prog->set_status_list( EXPORTING icono = icon_delete campos_color = '' color = 'R' CHANGING list = <listado> ).
            o_prog->message( p1 = <listado>-message type = 'S' postponer = 'X' ).
          ELSE.
            <listado>-lights = zcl_ap_alv=>set_icono( icono = icon_message_critical mensaje = <listado>-message ).
            o_prog->message( p1 = <listado>-message type = 'E' postponer = 'X' ).
          ENDIF.
        ENDLOOP.
        IF sy-subrc = 0.
          refresh( ).
        ENDIF.

      WHEN 'ANUL_TR'.


        CREATE OBJECT o_bi.
        LOOP AT o_prog->i_listado ASSIGNING <listado> WHERE check = 'X' AND stabr NE 'A'.
          CREATE OBJECT o_bi.

          o_bi->inicio( ).

* Freight Costs: Initial Screen VI02/VI03
          o_bi->dynpro( program = 'SAPMV54A' dynpro = '0020' okcode = '=UEBP').
          o_bi->campos( campo = 'VFKK-FKNUM' valor = <listado>-fknum ). " Nº gastos transporte

* Freight Costs: Freight Cost Items Overview
          o_bi->dynpro( program = 'SAPMV54A' dynpro = '0030' okcode = '=PDET').

          o_bi->campos( campo = 'BDC_CURSOR' valor = |VFKP-POSTX({ <listado>-fkpos+4(2) })| ).

* Freight Costs: Freight Cost Item Detail Screen
          o_bi->dynpro( program = 'SAPMV54A' dynpro = '0040' okcode = '=PABR').

* Freight Costs: Freight Cost Item Detail Screen
          o_bi->dynpro( program = 'SAPMV54A' dynpro = '0040' okcode = '=SICH').
          o_bi->campos( campo = 'VFKPD-SLSTOR' valor = 'X'). " Marca para anulación transferencia

          <listado>-message = o_bi->llamar_transaccion( tcode = 'VI02' modo = o_prog->modo_ct ).
          COMMIT WORK AND WAIT.
          SELECT SINGLE stabr FROM vfkk
            INTO <listado>-stabr
           WHERE fknum = <listado>-fknum.
          IF <listado>-stabr = 'A'.
            <listado>-message = 'Se ha anulado la transferencia'.
            o_prog->set_status_list( EXPORTING campos_color = 'STABR' color = 'V' CHANGING list = <listado> ).
            o_prog->message( p1 = <listado>-message type = 'S' postponer = 'X' ).
          ELSE.
            <listado>-message = 'Error anulando transferencia'.
            o_prog->set_status_list( EXPORTING campos_color = 'STABR' color = 'V' CHANGING list = <listado> ).
            o_prog->message( p1 = <listado>-message type = 'E' postponer = 'X' ).
          ENDIF.
        ENDLOOP.
        IF sy-subrc = 0.
          refresh( ).
        ENDIF.
      WHEN 'CREAR'.
        LOOP AT o_prog->i_listado ASSIGNING <listado> WHERE check = 'X' AND NOT fknum IS INITIAL.
          MESSAGE |Borre primero los gastos de transporte existentes| TYPE 'I'.
          RETURN.
        ENDLOOP.

        CREATE OBJECT o_bi.
        LOOP AT o_prog->i_listado ASSIGNING <listado> WHERE check = 'X'.
          o_bi->inicio( ).

          o_bi->dynpro( program = 'RV56TRSL' dynpro = '1000' okcode = '=ONLI').
          o_bi->campos( campo = 'K_TKNUM-LOW' valor = <listado>-tknum ).
*
          o_bi->dynpro( program = 'SAPMSSY0' dynpro = '0120' okcode = '=&ALL').

*
          o_bi->dynpro( program = 'SAPMSSY0' dynpro = '0120' okcode = '=TAKE').

*
          o_bi->dynpro( program = 'SAPMSSY0' dynpro = '0120' okcode = '=BACK').

          GET TIME.
          DATA(l_fecha) = sy-datum.
          DATA(l_hora) = sy-uzeit.

          <listado>-message = o_bi->llamar_transaccion( tcode = 'VI04' modo = o_prog->modo_ct ).

          COMMIT WORK AND WAIT.
          SELECT vfkk~fknum, vfkk~fkart, vfkk~sterm, vfkk~prsdt,
                 vfkk~stber, vfkk~stfre, vfkk~stabr,
                 vfkk~ernam, vfkk~erdat, vfkk~erzet,
                 vfkp~fkpos, vfkp~bukrs, vfkp~netwr, vfkp~mwsbp, vfkp~waers,
                 vfkp~tplst, vfkp~vsart, vfkp~tdlnr, vfkp~refty, vfkp~rebel,
                 vfkp~budat, vfkp~exti1, vfkp~exti2, vfkp~postx
             FROM vfkk JOIN vfkp ON vfkk~fknum = vfkp~fknum
            UP TO 1 ROWS
            INTO CORRESPONDING FIELDS OF @<listado>
            WHERE rebel = @<listado>-tknum
              AND vfkk~erdat = @l_fecha
              AND vfkk~erzet >= @l_hora
            ORDER BY vfkk~fknum DESCENDING.
          ENDSELECT.
          IF sy-subrc = 0.
            IF <listado>-netwr = 0.
              <listado>-message = 'Se ha creado gasto, pero a 0'.
              o_prog->set_status_list( EXPORTING icono = icon_warning campos_color = '' color = 'N' CHANGING list = <listado> ).
            ELSE.
              <listado>-message = |Se ha creado gasto de transporte con precio|.
              o_prog->set_status_list( EXPORTING icono = icon_green_light campos_color = '' color = 'V' CHANGING list = <listado> ).
            ENDIF.

            o_prog->message( p1 = <listado>-message type = 'S' postponer = 'X' ).
          ELSE.
            <listado>-lights = zcl_ap_alv=>set_icono( icono = icon_message_critical mensaje = 'No se ha podido crear el transporte' ).
            o_prog->message( p1 = <listado>-message type = 'E' postponer = 'X' ).
          ENDIF.
        ENDLOOP.
        IF sy-subrc = 0.
          refresh( ).
        ENDIF.
      WHEN OTHERS.
    ENDCASE.
  ENDMETHOD.
ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS zcl_report IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_report IMPLEMENTATION.
  METHOD main.
    seleccionar_datos( ).
    listado( ).
  ENDMETHOD.                    " REPORT

  METHOD seleccionar_datos.
    DATA: l_icono        TYPE icon_d,
          l_campos_error TYPE string.

    sgpi_texto( 'Seleccionando datos'(sda) ).
    SELECT vfkk~fknum, vfkk~fkart, vfkk~sterm, vfkk~prsdt,
           vfkk~stber, vfkk~stfre, vfkk~stabr,
           vfkk~ernam, vfkk~erdat, vfkk~erzet,
           vfkp~fkpos, vfkp~bukrs, vfkp~netwr, vfkp~mwsbp, vfkp~waers,
           vfkp~tplst, vfkp~vsart, vfkp~tdlnr, vfkp~refty, vfkp~rebel,
           vfkp~budat, vfkp~exti1, vfkp~exti2, vfkp~postx
       FROM vfkk JOIN vfkp ON vfkk~fknum = vfkp~fknum
      INTO CORRESPONDING FIELDS OF TABLE @i_listado
     WHERE vfkk~fknum IN @s_fknum
       AND vfkk~vbtyp = 'a'
       AND vfkk~fkart IN @s_fkart
       AND vfkp~budat IN @s_budat
       AND vfkp~bukrs IN @s_bukrs
       AND vfkp~netwr IN @s_netwr
       AND vfkp~rebel IN @s_tknum
       AND vfkp~tdlnr IN @s_tdlnr
       AND vfkk~ernam IN @s_ernam
       AND vfkk~erdat IN @s_erdat
       AND vfkk~stabr IN @s_stabr
       and vfkp~tplst in @s_tplst.

    o_prog->o_sgpi->get_filas_tabla( i_listado[] ).
    LOOP AT i_listado ASSIGNING FIELD-SYMBOL(<listado>).
      CLEAR: l_icono, l_campos_error.
      sgpi_texto( texto1 = 'Procesando datos'(pda) cant_porc = 100 ).

      CASE <listado>-refty.
        WHEN '8'.
          <listado>-tknum = <listado>-rebel.
          SELECT SINGLE add04 FROM vttk
            INTO <listado>-add04
           WHERE tknum = <listado>-tknum.
          IF <listado>-add04 IS INITIAL.
            __add_lista l_campos_error 'ADD04'.
          ENDIF.
      ENDCASE.
      IF <listado>-netwr = 0.
        l_icono = icon_red_light.
        <listado>-message = 'Gastos 0'.
      ENDIF.

      set_status_list( EXPORTING message = <listado>-message icono = l_icono campos_color = l_campos_error color = 'R' CHANGING list = <listado> ).
    ENDLOOP.

    SORT i_listado.
  ENDMETHOD.

  METHOD listado.
    sgpi_texto( 'Generando informe'(gin) ).

    o_alv->add_button( button = 'F01' text = 'Borrar gasto'  icon = icon_delete ucomm = 'BORRAR' ).
    o_alv->add_button( button = 'F02' text = 'Anular transferencia'  icon = icon_reject ucomm = 'ANUL_TR' ).
    o_alv->add_button( button = 'F03' text = 'Crear gasto'  icon = icon_create ucomm = 'CREAR' ).


    o_alv->set_layout( p_vari ).

    o_alv->set_top_of_page( ).

    o_alv->set_field_hotspot( campo = 'FKNUM,TKNUM' auto = 'X' ).

    o_alv->set_field( campo = 'LIGHTS' op = 'KEY' ).
    o_alv->set_field_quitar( 'CHECK' ).
    o_alv->set_field_noout( 'REFTY,REBEL,STERM,PRSDT' ).

    o_alv->set_orden( 'FKNUM' ).
    o_alv->get_datos_layout( EXPORTING reordenar_tabla = 'X' tabla_ref = 'X' CHANGING t_tabla = i_listado ).
    o_alv->set_seleccion( CHANGING t_tabla = i_listado ).

    o_alv->show( ).
  ENDMETHOD.
ENDCLASS.

*----------------------------------------------------------------------*
* INITIALIZATION
*----------------------------------------------------------------------*
INITIALIZATION.
  o_prog = NEW #( status       = 'INICIO_DYN'
                  status_prog  = 'ZAP_STATUS'
                  no_param     = 'X'
                  guardar_logz = 'X' ).

  IF zcl_usuario=>es_usuario_sistemas( ).
    PERFORM add_button IN PROGRAM zap_status
            USING 'M01' 'Parámetros' '' ''.
  ENDIF.

  PERFORM add_button IN PROGRAM zap_status USING 'M02' 'Log'(log) '' ''.

  o_prog->o_alv = NEW #( status             = 'STANDARD_ALV_DYN'
                         status_prog        = 'ZAP_STATUS'
                         color              = 'COLOR'
                         top_of_page_auto   = 'X'
                         top_of_page_titulo = 'X'
                         o_dev              = o_prog ).

  o_prog->initialization_i( CHANGING sscrfields = sscrfields ).
  IF o_prog->variante_forzada IS INITIAL.
    p_vari = o_prog->o_alv->get_default_layout( ).
*    o_prog->parametros_por_defecto( CHANGING r_werks = s_werks[] ).
  ENDIF.


AT SELECTION-SCREEN OUTPUT.
  o_prog->selection_screen_output( CHANGING current_scr = current_scr ).


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_vari.
  p_vari = o_prog->o_alv->get_f4_layout( ).

************************************************************************
* AT SELECTION-SCREEN.
************************************************************************
AT SELECTION-SCREEN.
  CASE sy-ucomm.
    WHEN 'ONLI'.
      o_prog->validar_seleccion_obligatoria( campos_or = '*' msgty = 'W' ).
*      o_prog->validar_centro( r_werks = s_werks[] obligatorio = 'X' ).
    WHEN OTHERS.
      o_prog->at_selection( ).
  ENDCASE.


AT SELECTION-SCREEN ON EXIT-COMMAND.
  o_prog->at_selection( ).

*----------------------------------------------------------------------
* START-OF-SELECTION.
*----------------------------------------------------------------------*
START-OF-SELECTION.
  o_prog->main( ).
