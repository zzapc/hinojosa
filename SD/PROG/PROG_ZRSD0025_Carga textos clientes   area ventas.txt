*&---------------------------------------------------------------------*
*& Report  ZRSD0025
*&
*&---------------------------------------------------------------------*
*& Carga textos horario e instrucciones envio
*& Javier Calás. 27.10.22
*&---------------------------------------------------------------------*
REPORT zrsd0025.


TABLES stxh.

""""""""""""""""""""""
" Tipos de datos
""""""""""""""""""""""
TYPES: BEGIN OF st_datos_excel,
         vkorg TYPE knvv-vkorg,
         vtweg TYPE knvv-vtweg,
         spart TYPE knvv-spart,
         kunnr TYPE knvv-kunnr,
         texto TYPE string,
       END OF st_datos_excel.
TYPES: tt_datos_excel TYPE TABLE OF st_datos_excel.


""""""""""""""""""""""
" Pantalla de selección
""""""""""""""""""""""

SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-b01.
PARAMETERS: p_object TYPE stxh-tdobject DEFAULT 'KNVV' OBLIGATORY,
            p_id     TYPE stxh-tdid MATCHCODE OBJECT zttxit_knvv,
            p_spras  TYPE stxh-tdspras DEFAULT sy-langu OBLIGATORY.
SELECTION-SCREEN SKIP.
PARAMETERS: rb_uplo RADIOBUTTON GROUP gr1 DEFAULT 'X' USER-COMMAND rb,
            rb_down RADIOBUTTON GROUP gr1.


SELECTION-SCREEN END OF BLOCK b01.
PARAMETERS: p_path   TYPE localfile.
__botones_plantilla.

""""""""""""""""""""""
" Eventos
""""""""""""""""""""""

INITIALIZATION.
  zcl_ap_dev=>initialization( CHANGING sscrfields = sscrfields ).

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  PERFORM f_f4_fichero USING p_path.


AT SELECTION-SCREEN.

  CASE sy-ucomm.
    WHEN 'ONLI'.
      IF p_id IS INITIAL.
        MESSAGE 'Informe ID de texto' TYPE 'E'.
      ENDIF.
      IF p_object IS INITIAL OR p_spras IS INITIAL.
        MESSAGE 'Informe todos los identificadores de texto' TYPE 'E'.
      ENDIF.
    WHEN OTHERS.
      zcl_ap_dev=>at_selection_screen( ).
  ENDCASE.

START-OF-SELECTION .
  PERFORM f_start_of_selection.



*&---------------------------------------------------------------------*
*&      Form  F_F4_FICHERO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_PATH  text
*----------------------------------------------------------------------*
FORM f_f4_fichero  USING  p_path.
  DATA: tl_file_table TYPE TABLE OF file_table,
        vl_rc         TYPE i,
        vl_filename   TYPE string,
        vl_path       TYPE string,
        vl_fullpath   TYPE string.

  CASE 'X'.
    WHEN rb_uplo.
      cl_gui_frontend_services=>file_open_dialog( EXPORTING file_filter = 'Excel 2007-2021 (*.xlsx)|*.xlsx'
                                                  CHANGING  file_table  = tl_file_table
                                                            rc          = vl_rc ).
      READ TABLE tl_file_table ASSIGNING FIELD-SYMBOL(<fs_file_table>) INDEX 1.
      IF sy-subrc = 0.
        p_path = <fs_file_table>-filename.
      ENDIF.

    WHEN rb_down.
      cl_gui_frontend_services=>file_save_dialog( EXPORTING file_filter = 'Excel 2007-2021 (*.xlsx)|*.xlsx'
                                                  CHANGING  filename    = vl_filename
                                                            path        = vl_path
                                                            fullpath    = vl_fullpath ).
      p_path = vl_fullpath.
  ENDCASE.
ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  F_START_OF_SELECTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_start_of_selection .

  CASE 'X'.
    WHEN rb_uplo.
      PERFORM f_cargar_excel.
    WHEN rb_down.
      PERFORM f_descargar_excel.
  ENDCASE.



ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  F_CARGAR_EXCEL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_cargar_excel .
  DATA tl_excel TYPE tt_datos_excel.

  TRY.
      DATA(rl_excel_reader) = NEW zcl_excel_reader_2007( ).
      DATA(rl_excel)        = rl_excel_reader->zif_excel_reader~load_file( p_path ).
      DATA(rl_worksheet)    = rl_excel->get_active_worksheet( ).

      DATA: vl_row    TYPE int4 VALUE 2,
            vl_column TYPE int4 VALUE 1,
            vl_value  TYPE zexcel_cell_value.

      WHILE vl_row <= rl_worksheet->get_highest_row( ).
        APPEND INITIAL LINE TO tl_excel ASSIGNING FIELD-SYMBOL(<fs_excel>).
        WHILE vl_column <= rl_worksheet->get_highest_column( ).

          rl_worksheet->get_cell( EXPORTING ip_column = vl_column
                                            ip_row    = vl_row
                                 IMPORTING ep_value = vl_value ).
          CASE vl_column.
            WHEN 1.
              <fs_excel>-vkorg = vl_value.
            WHEN 2.
              <fs_excel>-vtweg = vl_value.
            WHEN 3.
              <fs_excel>-spart = vl_value.
            WHEN 4.
              <fs_excel>-kunnr = |{ vl_value ALPHA = IN }|.
            WHEN 5.
              <fs_excel>-texto = vl_value.
          ENDCASE.


          ADD 1 TO vl_column.
        ENDWHILE.
        vl_column = 1.
        ADD 1 TO vl_row.
      ENDWHILE.
    CATCH zcx_excel INTO DATA(rl_zcx_excel).
      MESSAGE rl_zcx_excel->get_text( ) TYPE 'E'.
  ENDTRY.

  DATA(wl_header) = VALUE thead( tdobject = p_object
                                 tdid     = p_id
                                 tdspras  = sy-langu ).
  DATA tl_lines TYPE TABLE OF tline.
  DATA tl_texto TYPE TABLE OF text132.
  DATA vl_error TYPE xfeld.

  LOOP AT tl_excel ASSIGNING <fs_excel>.
    wl_header-tdname = <fs_excel>-kunnr && <fs_excel>-vkorg && <fs_excel>-vtweg && <fs_excel>-spart.

    CLEAR: tl_lines, tl_texto.
    CALL FUNCTION 'CONVERT_STRING_TO_TABLE'
      EXPORTING
        i_string         = <fs_excel>-texto
        i_tabline_length = 132
      TABLES
        et_table         = tl_texto.
    LOOP AT tl_texto ASSIGNING FIELD-SYMBOL(<fs_texto>).
      APPEND INITIAL LINE TO tl_lines ASSIGNING FIELD-SYMBOL(<fs_lines>).
      <fs_lines>-tdformat = '*'.
      <fs_lines>-tdline   = <fs_texto>.
    ENDLOOP.


    CALL FUNCTION 'SAVE_TEXT'
      EXPORTING
        header          = wl_header
        savemode_direct = 'X'
      TABLES
        lines           = tl_lines
      EXCEPTIONS
        id              = 1
        language        = 2
        name            = 3
        object          = 4
        OTHERS          = 5.
    IF sy-subrc <> 0.
      DATA vl_msg_error TYPE bapiret2-message.
      vl_error = 'X'.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
        INTO vl_msg_error.
      WRITE |Cliente { <fs_excel>-kunnr }. { vl_msg_error }|.
    ENDIF.

  ENDLOOP.

  IF vl_error = space.
    MESSAGE 'Textos grabados correctamente' TYPE 'S'.
  ELSE.
    MESSAGE 'Se han producido errores. Revise log' TYPE 'W' DISPLAY LIKE 'E'.
  ENDIF.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  F_DESCARGAR_EXCEL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_descargar_excel.
  DATA tl_lines TYPE TABLE OF tline.

  SELECT tdobject, tdid, tdspras, tdname
    INTO TABLE @DATA(tl_stxh)
    FROM stxh
    WHERE tdobject = @p_object
      AND tdid     = @p_id
      AND tdspras  = @p_spras.

  IF tl_stxh IS INITIAL.
    MESSAGE 'No se han encontrado datos' TYPE 'E'.
  ENDIF.

  DATA tl_datos_excel TYPE tt_datos_excel.
  LOOP AT tl_stxh ASSIGNING FIELD-SYMBOL(<fs_stxh>).
    APPEND INITIAL LINE TO tl_datos_excel ASSIGNING FIELD-SYMBOL(<fs_datos_excel>).
    <fs_datos_excel>-kunnr = <fs_stxh>-tdname(10).
    <fs_datos_excel>-vkorg = <fs_stxh>-tdname+10(4).
    <fs_datos_excel>-vtweg = <fs_stxh>-tdname+14(2).
    <fs_datos_excel>-spart = <fs_stxh>-tdname+16(2).

    CLEAR tl_lines.
    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        id                      = <fs_stxh>-tdid
        language                = <fs_stxh>-tdspras
        name                    = <fs_stxh>-tdname
        object                  = <fs_stxh>-tdobject
      TABLES
        lines                   = tl_lines
      EXCEPTIONS
        id                      = 1
        language                = 2
        name                    = 3
        not_found               = 4
        object                  = 5
        reference_check         = 6
        wrong_access_to_archive = 7
        OTHERS                  = 8.

    <fs_datos_excel>-texto = REDUCE #( INIT lv_str TYPE string FOR ls_tline IN tl_lines NEXT lv_str = lv_str && ls_tline-tdline && cl_abap_char_utilities=>cr_lf ).
  ENDLOOP.


  TRY.
      DATA(rl_excel) = NEW zcl_excel( ).
      DATA(rl_worksheet) = rl_excel->get_active_worksheet( ).
      DATA(tl_field_catalog) = zcl_excel_common=>get_fieldcatalog( tl_datos_excel ).
      tl_field_catalog[ fieldname = 'KUNNR' ]-scrtext_s = 'N.Texto'.
      tl_field_catalog[ fieldname = 'KUNNR' ]-scrtext_m = 'Nombre de texto'.
      tl_field_catalog[ fieldname = 'KUNNR' ]-scrtext_l = 'Nombre de texto'.
      tl_field_catalog[ fieldname = 'TEXTO' ]-scrtext_s = 'Texto'.
      tl_field_catalog[ fieldname = 'TEXTO' ]-scrtext_m = 'Texto'.
      tl_field_catalog[ fieldname = 'TEXTO' ]-scrtext_l = 'Texto'.
      rl_worksheet->bind_table( ip_table          = tl_datos_excel
                                it_field_catalog  = tl_field_catalog ).

      DATA(rl_writer) = NEW zcl_excel_writer_2007( ).
      DATA(vl_xstring) = rl_writer->zif_excel_writer~write_file( rl_excel ).
    CATCH zcx_excel.
      MESSAGE 'Error grabando Excel' TYPE 'E'.
  ENDTRY.

  DATA(tl_data_tab) = cl_bcs_convert=>xstring_to_solix( vl_xstring ).
  DATA(vl_filesize) = xstrlen( vl_xstring ).

  cl_gui_frontend_services=>gui_download( EXPORTING bin_filesize = vl_filesize
                                                    filename     = CONV #( p_path )
                                                    filetype     = 'BIN'
                                           CHANGING data_tab     = tl_data_tab
                                         EXCEPTIONS OTHERS       = 1 ).
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
  MESSAGE 'Fichero generado correctamente' TYPE 'S'.






ENDFORM.
