*&---------------------------------------------------------------------*
*& Report  ZRSD0036
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zrsd0036.


"""""""""""""""""""
" Tipos de datos
"""""""""""""""""""
TABLES: vbap, vbak, caufv, likp, kna1, vbep, zrsd0036_s_alv.


"""""""""""""""""""
" Constantes
"""""""""""""""""""
CONSTANTS: cg_num_dias_tolerancia TYPE int4 VALUE 0.

"""""""""""""""""""
" Variables globales
"""""""""""""""""""
DATA: v_zzcausa TYPE zcausa_retraso.

DATA: lv_diferencia_likp_vbap TYPE int4,
      lv_diferencia_likp_vbep TYPE int4.

*Tabla del tipo de la estructura zrsd0036_s_alv.
DATA: tl_zrsd0036_s_alv TYPE TABLE OF zrsd0036_s_alv.

DATA: okcode               TYPE sy-ucomm.
DATA: rg_container TYPE REF TO cl_gui_custom_container.
DATA: rg_alv       TYPE REF TO cl_gui_alv_grid.
DATA tg_dd07t_zcausa_retraso  TYPE TABLE OF dd07t.
DATA tg_dd07t_status_retraso  TYPE TABLE OF dd07t.



"""""""""""""""""""
" Pantalla de selección
"""""""""""""""""""
PARAMETERS: p_vkorg TYPE vbak-vkorg OBLIGATORY.

SELECT-OPTIONS: s_auart   FOR vbak-auart,
                s_kunnr   FOR vbak-kunnr,
                s_vbeln   FOR vbak-vbeln,
                s_vstel   FOR vbap-vstel,
                s_erdat   FOR vbak-erdat,
                s_edatu   FOR vbep-edatu,
                s_fconfs  FOR vbap-zzfconfs,
                s_wadat   FOR likp-wadat_ist,
                s_causa   FOR v_zzcausa,
                s_st_ret  FOR zrsd0036_s_alv-estado_retraso.



"""""""""""""""""""
" Clases locales
"""""""""""""""""""
CLASS lcl_event_receiver DEFINITION.
  PUBLIC SECTION.
    METHODS:
      handle_data_changed FOR EVENT data_changed  OF cl_gui_alv_grid  IMPORTING er_data_changed,
      handle_toolbar      FOR EVENT toolbar       OF cl_gui_alv_grid  IMPORTING e_object e_interactive,
      handle_user_command FOR EVENT user_command  OF cl_gui_alv_grid  IMPORTING e_ucomm.


ENDCLASS.

CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD handle_data_changed.

    LOOP AT er_data_changed->mt_good_cells ASSIGNING FIELD-SYMBOL(<fs_good_cells>).
      IF <fs_good_cells>-fieldname = 'CAUSA_RETRASO'.
        READ TABLE tg_dd07t_zcausa_retraso ASSIGNING FIELD-SYMBOL(<fs_dd07t>) WITH KEY domvalue_l = <fs_good_cells>-value.
        IF sy-subrc = 0.
          er_data_changed->modify_cell( i_row_id    = <fs_good_cells>-row_id
                                        i_fieldname = 'DESC_CAUSA_RETRASO'
                                        i_value     = <fs_dd07t>-ddtext ).
        ENDIF.

      ENDIF.
    ENDLOOP.
  ENDMETHOD. "HANDLE_DATA_CHANGED




  "Manejador del evento toolbar
  METHOD handle_toolbar.
    APPEND INITIAL LINE TO e_object->mt_toolbar ASSIGNING FIELD-SYMBOL(<fs_toolbar>).
    <fs_toolbar>-butn_type = 3.

    APPEND INITIAL LINE TO e_object->mt_toolbar ASSIGNING <fs_toolbar>.
    <fs_toolbar>-function   = 'CAUSA_RETRASO'.
    <fs_toolbar>-quickinfo  = 'Actualización masiva de la causa de retraso'.
    <fs_toolbar>-text       = 'Causa retraso'.
    <fs_toolbar>-icon       =  icon_change.
  ENDMETHOD.                    "handle_toolbar


  "Manejador del evento user_command.
  METHOD handle_user_command.
    DATA: tl_index_rows TYPE lvc_t_row.
    IF e_ucomm = 'CAUSA_RETRASO'.

      rg_alv->get_selected_rows( IMPORTING et_index_rows = tl_index_rows ).
      IF lines( tl_index_rows ) < 1.
        MESSAGE 'Debe seleccionar al menos una fila' TYPE 'I'.
        EXIT.
      ENDIF.

      CLEAR zrsd0036_s_alv.
      CALL SCREEN 9001 STARTING AT 20 10 ENDING AT 70 14.
    ENDIF.
  ENDMETHOD.                    "handle_user_command
ENDCLASS.


DATA event_receiver TYPE REF TO lcl_event_receiver .


"""""""""""""""""""
"EVENTOS
"""""""""""""""""""

INITIALIZATION.
  SELECT *
    INTO TABLE @tg_dd07t_zcausa_retraso
    FROM dd07t
    WHERE domname     = 'ZCAUSA_RETRASO' AND
          ddlanguage  = @sy-langu.

  SELECT *
    INTO TABLE @tg_dd07t_status_retraso
    FROM dd07t
    WHERE domname     = 'ZSD_STATUS_RETRASO' AND
          ddlanguage  = @sy-langu.




START-OF-SELECTION.
  PERFORM f_start_of_selection.
  CALL SCREEN 0100.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'STA_0100'.
  SET TITLEBAR 'T01'.


  PERFORM f_mostrar_alv.
ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  DATA vl_answer TYPE c.

  CASE okcode.
    WHEN 'VOLVER'.
      LEAVE TO SCREEN 0.
    WHEN 'GRABAR'.
      rg_alv->check_changed_data( ).

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          text_question  = 'Se van a guardar los datos indicados. ¿Desea continuar'
        IMPORTING
          answer         = vl_answer
        EXCEPTIONS
          text_not_found = 1
          OTHERS         = 2.
      IF vl_answer = '1'.

*      PERFORM actualizar_campos.

*      IF vl_answer = '1'.
        PERFORM actualizar_vbap.
      ENDIF.

  ENDCASE.
ENDMODULE.




*&---------------------------------------------------------------------*
*&      Form  F_MOSTRAR_ALV
*&---------------------------------------------------------------------*
*       text  ALV_GRID
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_mostrar_alv .
  IF rg_alv IS BOUND.
    rg_alv->refresh_table_display( ).
    RETURN.
  ENDIF.

  CREATE OBJECT rg_container
    EXPORTING
      container_name              = 'CC_ALV'
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    RETURN.
  ENDIF.
  CREATE OBJECT rg_alv
    EXPORTING
      i_parent          = rg_container
    EXCEPTIONS
      error_cntl_create = 1
      error_cntl_init   = 2
      error_cntl_link   = 3
      error_dp_create   = 4
      OTHERS            = 5.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    RETURN.
  ENDIF.
  DATA: tl_fieldcatalog   TYPE lvc_t_fcat.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZRSD0036_S_ALV'
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = tl_fieldcatalog
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    RETURN.
  ENDIF.

  DATA: wl_fieldcatalog LIKE LINE OF tl_fieldcatalog.
  DATA vl_tabix TYPE sy-tabix.
  LOOP AT tl_fieldcatalog ASSIGNING FIELD-SYMBOL(<fs_fieldcatalog>).
    CASE <fs_fieldcatalog>-fieldname.
      WHEN 'FCONFS'.
        <fs_fieldcatalog>-edit = 'X'.
      WHEN 'CAUSA_RETRASO'.
        <fs_fieldcatalog>-edit = 'X'.
        <fs_fieldcatalog>-outputlen = 10.
      WHEN 'ESTADO_RETRASO'.
        <fs_fieldcatalog>-icon = 'X'.
      WHEN 'DESC_ESTADO_RETRASO'.
        <fs_fieldcatalog>-outputlen = 20.
    ENDCASE.
  ENDLOOP.

  rg_alv->set_table_for_first_display(
  CHANGING
    it_outtab                     = tl_zrsd0036_s_alv
    it_fieldcatalog               = tl_fieldcatalog
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4 ).
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    RETURN.
  ENDIF.



  CREATE OBJECT event_receiver.
  SET HANDLER event_receiver->handle_data_changed FOR rg_alv.
  SET HANDLER event_receiver->handle_toolbar      FOR rg_alv.
  SET HANDLER event_receiver->handle_user_command FOR rg_alv.


  rg_alv->register_edit_event( cl_gui_alv_grid=>mc_evt_modified ).
  rg_alv->register_edit_event( cl_gui_alv_grid=>mc_evt_enter ).



  rg_alv->set_ready_for_input( i_ready_for_input = 1 ).
ENDFORM.






*&---------------------------------------------------------------------*
*&      Form  ACTUALIZAR_VBAP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM actualizar_vbap .
  LOOP AT tl_zrsd0036_s_alv INTO DATA(ls_zrsd0036_s_alv).
    UPDATE vbap SET zzcausa_retraso = ls_zrsd0036_s_alv-causa_retraso
                    zzfconfs = ls_zrsd0036_s_alv-fconfs
    WHERE vbeln = ls_zrsd0036_s_alv-vbeln AND
          posnr = ls_zrsd0036_s_alv-posnr.
    IF sy-subrc <> 0.
      ROLLBACK WORK.
      MESSAGE 'Error al guardar los datos' TYPE 'E'.
    ENDIF.
  ENDLOOP.

  COMMIT WORK.



  PERFORM f_start_of_selection.
  rg_alv->refresh_table_display( ).


  MESSAGE 'Actualización realizada correctamente' TYPE 'S'.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_START_OF_SELECTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_start_of_selection .
  CLEAR tl_zrsd0036_s_alv.

  SELECT DISTINCT vbak~vkorg, vbak~auart, vbak~kunnr, vbak~erdat, kna1~name1, vbak~vbeln, caufv~aufnr, caufv~gltrp,
                  likp~wadat_ist, vbap~zzcausa_retraso AS causa_retraso, vbap~zzfconfs AS fconfs, vbap~posnr, vbap~vstel,
                  likp~vbeln AS vbeln_vl
   INTO CORRESPONDING FIELDS OF TABLE @tl_zrsd0036_s_alv
     FROM vbak INNER JOIN vbap LEFT OUTER JOIN caufv ON caufv~kdauf = vbap~vbeln AND
                                                        caufv~kdpos = vbap~posnr
                               LEFT OUTER JOIN vbfa LEFT OUTER JOIN likp ON likp~vbeln = vbfa~vbeln
                               ON vbfa~vbelv = vbap~vbeln AND
                                  vbfa~posnv = vbap~posnr AND
                                  vbtyp_n = 'J'
                ON vbak~vbeln = vbap~vbeln
    INNER JOIN kna1 ON kna1~kunnr = vbak~kunnr
   WHERE vbak~vbtyp     = 'C'         AND
         vbak~vkorg     = @p_vkorg    AND
         vbak~kunnr     IN @s_kunnr   AND
         vbak~auart     IN @s_auart   AND
         vbak~erdat     IN @s_erdat   AND
         vbak~vbeln     IN @s_vbeln   AND
         vbap~zzfconfs  IN @s_fconfs  AND
         vbap~zzcausa_retraso IN @s_causa AND
         vbap~vstel           IN @s_vstel  AND
         likp~wadat_ist       IN @s_wadat
  ORDER BY posnr ASCENDING.




*    Añadir destinatario de mercancías del pedido de ventas
*
*En VBPA entrar con VBPA  VBELN = Nº pedido & VBPA  POSNR = Posición & VBPA  PARVW = DM y obtener el valor de KUNNR.
*Si no obtenemos valor entonces entramos sin VBPA  POSNR.
*El valor de KUNNR es el numero de destinatario, habría que obtener el valor del nombre, KNA1  NAME1.
*También debe de aparecer el campo de región (KNA1  REGIO)
*y el nombre de la región y KNA1- ORT01.



********************
  "Lógica:
********************
  IF tl_zrsd0036_s_alv IS NOT INITIAL.
    SELECT vbpa~vbeln, vbpa~posnr, vbpa~parvw, vbpa~kunnr,
           kna1~name1, kna1~regio, kna1~ort01, t005u~bezei
        INTO TABLE @DATA(tl_vbpa)
        FROM vbpa INNER JOIN kna1 LEFT OUTER JOIN t005u ON t005u~land1 = kna1~land1 AND
                                                           t005u~bland = kna1~regio AND
                                                           t005u~spras = @sy-langu
                  ON kna1~kunnr = vbpa~kunnr
        FOR ALL ENTRIES IN @tl_zrsd0036_s_alv
        WHERE vbpa~vbeln = @tl_zrsd0036_s_alv-vbeln AND
              vbpa~parvw = 'WE'.




    SELECT vbeln, posnr, edatu
        INTO TABLE @DATA(tl_vbep)
        FROM vbep
        FOR ALL ENTRIES IN @tl_zrsd0036_s_alv
        WHERE vbeln = @tl_zrsd0036_s_alv-vbeln AND
              posnr = @tl_zrsd0036_s_alv-posnr AND
              wmeng <> 0.
    SORT tl_vbep BY vbeln ASCENDING posnr ASCENDING edatu ASCENDING.



    LOOP AT tl_zrsd0036_s_alv ASSIGNING FIELD-SYMBOL(<fs_zrsd0036_s_alv>).
      DATA(vl_tabix) = sy-tabix.
      READ TABLE tl_vbep ASSIGNING FIELD-SYMBOL(<fs_vbep>) WITH KEY vbeln = <fs_zrsd0036_s_alv>-vbeln
                                                                    posnr = <fs_zrsd0036_s_alv>-posnr.
      IF sy-subrc = 0.
        <fs_zrsd0036_s_alv>-edatu = <fs_vbep>-edatu.

        IF <fs_zrsd0036_s_alv>-edatu NOT IN s_edatu.
          DELETE tl_zrsd0036_s_alv INDEX vl_tabix.
          CONTINUE.
        ENDIF.


        <fs_zrsd0036_s_alv>-estado_retraso = icon_led_inactive.

        IF <fs_zrsd0036_s_alv>-fconfs >= <fs_zrsd0036_s_alv>-edatu.
          lv_diferencia_likp_vbap = <fs_zrsd0036_s_alv>-wadat_ist - <fs_zrsd0036_s_alv>-fconfs.
          IF lv_diferencia_likp_vbap > cg_num_dias_tolerancia.
            <fs_zrsd0036_s_alv>-estado_retraso = icon_led_red.
          ELSE.
            <fs_zrsd0036_s_alv>-estado_retraso = icon_led_green.
          ENDIF.

        ELSE.
          lv_diferencia_likp_vbep = <fs_zrsd0036_s_alv>-wadat_ist - <fs_zrsd0036_s_alv>-edatu.
          IF lv_diferencia_likp_vbep > cg_num_dias_tolerancia.
            <fs_zrsd0036_s_alv>-estado_retraso = icon_led_red.
          ELSE.
            <fs_zrsd0036_s_alv>-estado_retraso = icon_led_green.
          ENDIF.
        ENDIF.
      ENDIF.

      IF <fs_zrsd0036_s_alv>-estado_retraso NOT IN s_st_ret.
        DELETE tl_zrsd0036_s_alv INDEX vl_tabix.
        CONTINUE.
      ENDIF.


      READ TABLE tl_vbpa ASSIGNING FIELD-SYMBOL(<fs_vbpa>) WITH KEY vbeln = <fs_zrsd0036_s_alv>-vbeln
                                                                    posnr = <fs_zrsd0036_s_alv>-posnr.
      IF sy-subrc <> 0.
        READ TABLE tl_vbpa ASSIGNING <fs_vbpa> WITH KEY vbeln = <fs_zrsd0036_s_alv>-vbeln
                                                        posnr = '000000'.
      ENDIF.
      IF sy-subrc = 0.
        <fs_zrsd0036_s_alv>-kunwe       = <fs_vbpa>-kunnr.
        <fs_zrsd0036_s_alv>-name1_kunwe = <fs_vbpa>-name1.
        <fs_zrsd0036_s_alv>-regio       = <fs_vbpa>-regio.
        <fs_zrsd0036_s_alv>-bezei       = <fs_vbpa>-bezei.
        <fs_zrsd0036_s_alv>-ort01       = <fs_vbpa>-ort01.
      ENDIF.

    ENDLOOP.
  ENDIF.


  LOOP AT tl_zrsd0036_s_alv ASSIGNING <fs_zrsd0036_s_alv>.
    READ TABLE tg_dd07t_status_retraso ASSIGNING FIELD-SYMBOL(<fs_dd07t_status_retraso>) WITH KEY domvalue_l = <fs_zrsd0036_s_alv>-estado_retraso.
    IF sy-subrc = 0.
      <fs_zrsd0036_s_alv>-desc_estado_retraso = <fs_dd07t_status_retraso>-ddtext.
    ENDIF.


    READ TABLE tg_dd07t_zcausa_retraso ASSIGNING FIELD-SYMBOL(<fs_dd07t_zcausa_retraso>) WITH KEY domvalue_l = <fs_zrsd0036_s_alv>-causa_retraso.
    IF sy-subrc = 0.
      <fs_zrsd0036_s_alv>-desc_causa_retraso = <fs_dd07t_zcausa_retraso>-ddtext.
    ENDIF.
  ENDLOOP.



ENDFORM.

*&---------------------------------------------------------------------*
*&      Module  STATUS_9001  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9001 OUTPUT.
  SET PF-STATUS 'STA_9001'.
  SET TITLEBAR 'T02'.
ENDMODULE.



*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_9001 INPUT.
  CASE okcode.
    WHEN 'OK'.
      DATA: tl_index_rows TYPE lvc_t_row.
      rg_alv->get_selected_rows( IMPORTING et_index_rows = tl_index_rows ).

      IF zrsd0036_s_alv-causa_retraso IS INITIAL.
        MESSAGE 'Debe indicar la causa de retraso' TYPE 'I' DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.

      READ TABLE tg_dd07t_zcausa_retraso ASSIGNING FIELD-SYMBOL(<fs_dd07t_zcausa_retraso>) WITH KEY domvalue_l = zrsd0036_s_alv-causa_retraso.
      IF sy-subrc = 0.
        zrsd0036_s_alv-desc_causa_retraso = <fs_dd07t_zcausa_retraso>-ddtext.
      ENDIF.


      LOOP AT tl_index_rows ASSIGNING FIELD-SYMBOL(<fs_index_rows>).
        tl_zrsd0036_s_alv[ <fs_index_rows>-index ]-causa_retraso      = zrsd0036_s_alv-causa_retraso.
        tl_zrsd0036_s_alv[ <fs_index_rows>-index ]-desc_causa_retraso = zrsd0036_s_alv-desc_causa_retraso.
      ENDLOOP.
      rg_alv->refresh_table_display( ).

  ENDCASE.

  LEAVE TO SCREEN 0.
ENDMODULE.
