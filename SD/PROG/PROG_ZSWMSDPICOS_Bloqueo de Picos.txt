*&---------------------------------------------------------------------*
*& Report  ZSWMSDPICOS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT zswmsdpicos.
TABLES: lqua, knmt, mara.
DATA t_alv LIKE zswmsdpicos_str OCCURS 0 WITH HEADER LINE.
PARAMETERS: p_lgnum LIKE ltak-lgnum OBLIGATORY.
PARAMETERS: p_vkorg LIKE vbak-vkorg OBLIGATORY DEFAULT '2001'.
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS: s_lgtyp FOR lqua-lgtyp,
                s_lgpla FOR lqua-lgpla,
                s_lenum FOR lqua-lenum,
                s_matnr FOR lqua-matnr,
                s_mtart FOR mara-mtart,
                s_charg FOR lqua-charg,
                s_werks FOR lqua-werks,
                s_lgort FOR lqua-lgort DEFAULT '1400',
                s_bestq FOR lqua-bestq,
                s_sobkz FOR lqua-sobkz,
                s_sonum FOR lqua-sonum.
SELECTION-SCREEN SKIP 1.
PARAMETERS: p_test TYPE flag DEFAULT 'X'.
PARAMETERS: p_sopi type flag.
PARAMETERS: p_sscl type flag.

INITIALIZATION.
  s_bestq+0(3) = 'IEQ'. s_bestq-low = space. APPEND s_bestq.
  DATA rr_mtart TYPE fip_t_mtart_range.
  CALL FUNCTION 'ZSWM_SET_GET_VALUES'
    EXPORTING
      shortname = 'ZSWM_PLANCHA_MTART'
*     TT_SHORTNAME             =
*     NO_AUTHORITY_CHECK       = 'X'
*     LANGU     = SYST-LANGU
*     TT_FIELDNAME             =
    IMPORTING
      rr_mtart  = rr_mtart.
  LOOP AT rr_mtart INTO DATA(rt_mtart).
    CHECK rt_mtart-low NE 'ZPSE'.
    s_mtart = rt_mtart.
    APPEND s_mtart.
  ENDLOOP.
  DATA rang_lgtype TYPE bapi1172_lgtyp_range_tab.
  CALL FUNCTION 'ZSWM_SET_GET_VALUES'
    EXPORTING
*      shortname = 'ZSWM_PLANCHA_LGTYP'       " del jtm 21.02.2024
      shortname = 'ZSWM_PLANCHA_LGTYP_DOS'    " add jtm 21.02.2024
      lgnum     =  p_lgnum                    " Add jtm 21.02.2024
    IMPORTING
      rr_lgtyp  = rang_lgtype.
  LOOP AT rang_lgtype INTO DATA(rt_lgtyp).
    s_lgtyp = rt_lgtyp.
    APPEND s_lgtyp.
  ENDLOOP.

AT SELECTION-SCREEN ON s_matnr.

AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    IF screen-name CS 'S_BESTQ'.
      screen-input = 0.
    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.

START-OF-SELECTION.
  SELECT lqua~lgnum, lqua~matnr, lqua~werks, lqua~lgort, lqua~charg, lqua~bestq, lqua~sobkz, lqua~sonum, lqua~lgtyp, lqua~lgpla, lqua~letyp, lqua~verme, lqua~meins,
    makt~maktx, mara~meins AS mara_meins, mara~mtart, lqua~lenum
     INTO TABLE @DATA(tt_lqua)
    FROM lqua AS lqua INNER JOIN mara AS mara ON mara~matnr EQ lqua~matnr
                      INNER JOIN makt AS makt ON mara~matnr EQ makt~matnr
*                       INNER JOIN mlgn as mlgn on mara~matnr eq mlgn~matnr
*                                              and lqua~lgnum eq mlgn~lgnum
    WHERE lqua~lgnum EQ @p_lgnum
      AND lgtyp IN @s_lgtyp
      AND lgpla IN @s_lgpla
      AND lqua~matnr IN @s_matnr
      AND charg IN @s_charg
      AND lenum IN @s_lenum
      AND werks IN @s_werks
      AND lgort IN @s_lgort
      AND bestq IN @s_bestq
      AND sobkz IN @s_sobkz
*      and sonum in @s_sonum
  AND sonum IN @s_sonum
  AND mtart IN @s_mtart
  AND spras EQ @sy-langu.

  data n_reg(3) type n.
  n_Reg = 0.
  LOOP AT tt_lqua INTO DATA(rt_lqua)." where LHMG1 > 0.
    CLEAR t_alv.
    MOVE-CORRESPONDING rt_lqua TO t_alv.

    SELECT SINGLE lhmg1 INTO t_alv-lhmg1 FROM mlgn WHERE lgnum EQ rt_lqua-lgnum
    AND matnr EQ rt_lqua-matnr..
*        data(Sw_tabix) = sy-tabix.
*
    IF rt_lqua-verme < t_alv-lhmg1.
      t_alv-pico = abap_true.
    ENDIF.
    SELECT kunnr zzpalet_completo INTO (t_alv-kunnr, t_alv-zzpalet_completo) FROM knmt WHERE vkorg EQ p_vkorg
                                                                                         AND matnr EQ t_alv-matnr.
      SELECT SINGLE name1 INTO t_alv-name1 FROM kna1 WHERE kunnr EQ t_alv-kunnr.
    ENDSELECT.
    IF sy-subrc NE 0.
      CLEAR: t_alv-kunnr, t_alv-zzpalet_completo, t_alv-name1.
    ENDIF.

    APPEND t_alv.
    check t_alv-ZZPALET_COMPLETO eq abap_true
      and t_alv-pico             eq abap_true.
    add 1 to n_reg.
*        modify tT_lqua from Rt_lqua index Sw_tabix.
  ENDLOOP.
  if p_sopi eq abap_true.
    delete t_alv where pico ne abap_true.
  endif.
  if p_sscl eq abap_true.
     delete t_alv where zzpalet_completo ne abap_true.
  endif.
  IF p_test NE abap_true.
    DATA t_log LIKE bapiret2 OCCURS 0 WITH HEADER LINE.
    DATA tt_log TYPE bapiret2_tt.
    CLEAR t_log[].
    data n_paso(3) type n.
    LOOP AT t_alv WHERE zzpalet_completo EQ abap_true
                    AND pico             EQ abap_true.
      data(sw_tabix) = sy-tabix.
      data frase(70).
      add 1 to n_paso.
      CONCATENATE n_paso '/' n_reg into frase.
      CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
        EXPORTING
*         PERCENTAGE       = 0
          TEXT             = frase
                .

      CALL FUNCTION 'ZSWM_UI5_ACCIONES'
        EXPORTING
          tcode         = 'ZWM_RF_UI5_PIN_003'
*         UNAME         = SY-UNAME
*         OPERARIO      =
          lenum         = t_alv-lenum
*         REPROCESO     =
*         RECORTE       =
          cambio_status = 'X'
*         MENGE_NEW     =
         BESTQ_NEW     = 'S'
          lgnum_forzado = p_lgnum
        IMPORTING
*         OK            =
*         ERROR         =
          tt_log        = tt_log
*         REGISTRO      =
        .
      wait up to 1 SECONDS.
      CHECK tt_log[] IS NOT INITIAL.

      read TABLE tT_log into data(rT_log) with key type = 'E'.
      if sy-subrc eq 0.
        move-CORRESPONDING rT_log to t_alv.
        move icon_cancel to t_alv-icon.
      else.
        move icon_okay to t_alv-icon.
      endif.
      modify t_alv INDEX sw_tabix.
      APPEND LINES OF tt_log TO t_log.
    ENDLOOP.
  ENDIF.
  PERFORM alv TABLES t_alv USING 'ZSWMSDPICOS_STR '.
FORM alv  TABLES   t_alv
      USING    VALUE(p_tabname) LIKE dd03n-tabname.
  IF t_alv IS INITIAL.
    APPEND t_alv.
  ENDIF.
  CALL FUNCTION 'DISPLAY_BASIC_LIST'
    EXPORTING
*     BASIC_LIST_TITLE    =
      file_name           = 'PP'
*     HEAD_LINE1          = ' '
*     HEAD_LINE2          = ' '
*     HEAD_LINE3          = ' '
*     HEAD_LINE4          = ' '
*     FOOT_NOTE1          = ' '
*     FOOT_NOTE2          = ' '
*     FOOT_NOTE3          = ' '
*     LAY_OUT             = 0
*     DYN_PUSHBUTTON_TEXT1       =
*     DYN_PUSHBUTTON_TEXT2       =
*     DYN_PUSHBUTTON_TEXT3       =
*     DYN_PUSHBUTTON_TEXT4       =
*     DYN_PUSHBUTTON_TEXT5       =
*     DYN_PUSHBUTTON_TEXT6       =
      data_structure      = p_tabname
*     CURRENT_REPORT      =
*     LIST_LEVEL          = ' '
*     ADDITIONAL_OPTIONS  = ' '
*     WORD_DOCUMENT       =
*     APPLICATION         =
*     OLDVALUES           = ' '
*     NO_ALV_GRID         =
*     ALV_MARKER          =
*     IMPORTING
*     RETURN_CODE         =
    TABLES
      data_tab            = t_alv
*     FIELDNAME_TAB       =
*     SELECT_TAB          =
*     ERROR_TAB           =
*     RECEIVERS           =
    EXCEPTIONS
      download_problem    = 1
      no_data_tab_entries = 2
      table_mismatch      = 3
      print_problems      = 4
      OTHERS              = 5.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
