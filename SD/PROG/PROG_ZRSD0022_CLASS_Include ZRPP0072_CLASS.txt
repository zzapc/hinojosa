*&---------------------------------------------------------------------*
*&  Include           ZRPP0072_CLASS
*&---------------------------------------------------------------------*

CLASS lcl_handle_events_sup DEFINITION.
  PUBLIC SECTION.
    METHODS:
      on_user_command FOR EVENT added_function OF cl_salv_events
        IMPORTING e_salv_function.
    METHODS: on_link_click   FOR EVENT link_click OF
                cl_salv_events_table
      IMPORTING row column.

ENDCLASS.                    "lcl_handle_events DEFINITION

CLASS lcl_handle_events_sup IMPLEMENTATION.
  METHOD on_user_command.
    PERFORM handle_user_command_sup USING e_salv_function.
  ENDMETHOD.                    "on_user_command


  METHOD on_link_click.

    DATA: l_ebelp TYPE ebelp.

    TRY.
        DATA(ls_rv) = gt_datos_rv[ row ].

        CASE column.
          WHEN 'ID_REG_VEHICULO'.

            CHECK ls_rv-id_reg_vehiculo IS NOT INITIAL.

            CALL FUNCTION 'ZMFPP_CONSULTA_REG_VEHICULO'
              EXPORTING
                i_werks           = p_werks
                i_id_reg_vehiculo = ls_rv-id_reg_vehiculo.
          WHEN 'TKNUM'.
            CHECK ls_rv-tknum IS NOT INITIAL.

            SET PARAMETER ID 'TNR' FIELD ls_rv-tknum.
            CALL TRANSACTION 'VT03N' AND SKIP FIRST SCREEN.
            PERFORM refrescar_alvs.

        ENDCASE.

      CATCH cx_root .
    ENDTRY.

  ENDMETHOD.

ENDCLASS.                    "lcl_handle_events IMPLEMENTATION

CLASS lcl_handle_events_inf DEFINITION.
  PUBLIC SECTION.
    METHODS:
      on_user_command FOR EVENT added_function OF cl_salv_events
        IMPORTING e_salv_function.
    METHODS: on_link_click   FOR EVENT link_click OF
                cl_salv_events_table
      IMPORTING row column.


ENDCLASS.                    "lcl_handle_events DEFINITION

CLASS lcl_handle_events_inf IMPLEMENTATION.
  METHOD on_user_command.
    PERFORM handle_user_command_inf USING e_salv_function.

    CASE e_salv_function.

      WHEN 'E80ENVIO'.
        PERFORM envio_entrega_e80.

    ENDCASE.

  ENDMETHOD.                    "on_user_command

*  METHOD handle_finished.
*    gr_semana->refrescar_datos_ped_sin_asig( ).
*    PERFORM refrescar_alvs USING 'I'.
*
*    ADD g_af_timer TO g_counter.
*    CALL METHOD g_timer->run.
*  ENDMETHOD.                    "handle_finished
  METHOD on_link_click.

    DATA: l_ebelp TYPE ebelp.

    TRY.
        DATA(ls_entr) = gt_datos_entregas[ row ].

        CASE column.
          WHEN 'VBELN'.

            CHECK ls_entr-vbeln IS NOT INITIAL.
            SET PARAMETER ID 'VL' FIELD ls_entr-vbeln.
            CALL TRANSACTION 'VL03N' AND SKIP FIRST SCREEN.
            PERFORM refrescar_alvs.

        ENDCASE.

      CATCH cx_root .
    ENDTRY.

  ENDMETHOD.

ENDCLASS.                    "lcl_handle_events IMPLEMENTATION

CLASS lcl_receiver DEFINITION.
  PUBLIC SECTION.
    METHODS:
      handle_finished FOR EVENT finished OF cl_gui_timer.
ENDCLASS.                    "lcl_receiver DEFINITION

DATA: g_receiver TYPE REF TO lcl_receiver.

CLASS lcl_receiver IMPLEMENTATION.
  METHOD handle_finished.

*    gr_semana->refrescar_datos_ped_sin_asig( ).

    PERFORM refrescar_alvs.

    CALL METHOD g_timer->run.

  ENDMETHOD.                    "handle_finished
ENDCLASS.                    "lcl_receiver IMPLEMENTATION
