FORM FRM_KOND_BASIS_911.
*{   INSERT         HEDK929009                                        1

 FIELD-SYMBOLS: <gasto> TYPE V54A0_SCD_ITEM,
                <gasto2> TYPE v54a0_scdd,
                <gasto_tab> TYPE v54a0_refobj_tab,
                <gasto4> TYPE V54A0_REFOBJ,
                <gasto3> TYPE V54A0_REFOBJ.


  DATA: l_precio  TYPE kwert,
        l_cant    TYPE menge_d,
        l_kbetr   TYPE kbetr,
        lv_tknum  TYPE tknum.

  DATA: t_vtts type TABLE OF vtts,
        t_vttp type TABLE OF vttp,
        t_vtsp type TABLE OF vtsp,
        l_vttk type vttk.

  DATA: wa_gasto TYPE char100 VALUE '(SAPMV54A)G_SCD_ITEM_WA'.
  DATA: wa_gasto2 TYPE char100 VALUE '(SAPLV54C)C_SCD'.
  DATA: wa_gasto3 TYPE char100 VALUE '(SAPLV54C)I_REFOBJ'.

  DATA: WA_SAVE_D TYPE char100 VALUE '(SAPLV54U)I_REFOBJ_TAB'.

  ASSIGN (wa_gasto) TO <gasto>.

  ASSIGN (wa_gasto2) TO <gasto2>.
  ASSIGN (wa_gasto3) TO <gasto3>.

  ASSIGN (WA_SAVE_D) TO <gasto_tab>.

  If <gasto_tab> is ASSIGNED.
    READ TABLE <gasto_tab> ASSIGNING <gasto4> INDEX 1.
  ENDIF.

  If <gasto2> IS ASSIGNED.
    lv_tknum = <gasto3>-vttkf-tknum.
  ELSE.
    IF <gasto> is ASSIGNED.
      lv_tknum = <gasto>-vfkp-rebel.
    ENDIF.
  ENDIF.
  if lv_tknum is INITIAL.
    iF <gasto4> IS ASSIGNED.
      lv_tknum = <gasto4>-vttkf-tknum.
    endif.
  ENDIF.

  SELECT * INTO TABLE t_vtts FROM vtts WHERE tknum = lv_tknum.

  SELECT SINGLE * INTO l_vttk FROM vttk WHERE tknum = lv_tknum.

  SELECT * INTO TABLE t_vttp FROM vttp WHERE tknum = lv_tknum.

  SELECT * INTO TABLE t_vtsp FROM vtsp WHERE tknum = lv_tknum.

  DATA(l_cont) = LINES(  t_vtts ).


"ASC >>> 04.03.24 Cambiamos la forma de determinar la última etapa, ahora se obtiene la de la tarifa más alta
TYPES: BEGIN OF ty_zf15,
         vbeln TYPE vbeln,
         tdlnr TYPE tdlnr,
         vstel TYPE vstel,
         vsbed TYPE vsbed,
         regio TYPE regio,
         pstlz TYPE pstlz,
         route TYPE route,
         kunnr TYPE kunnr.
TYPES: END OF ty_zf15.

TYPES: BEGIN OF ty_tarifa_entrega,
         vbeln TYPE vbeln_vl,
         kbetr TYPE kbetr_kond.
TYPES: END OF ty_tarifa_entrega.

DATA: tt_zf15           TYPE TABLE OF ty_zf15,
      lt_tarifa_entrega TYPE TABLE OF ty_tarifa_entrega,
      ls_tarifa_entrega TYPE ty_tarifa_entrega,
      l_kbetr_tarifa    TYPE kbetr,
      ls_vttp           TYPE vttp,
      ls_vtsp           TYPE vtsp.

*SELECT d~vbeln a~tdlnr d~vstel d~vsbed e~region AS regio e~post_code1 AS pstlz d~route d~kunnr
*INTO TABLE tt_zf15 FROM vttk AS a
*INNER JOIN vtts AS b ON a~tknum = b~tknum
*INNER JOIN vttp AS c ON b~tknum = c~tknum AND b~tsrfo = c~tprfo
*INNER JOIN likp AS d ON c~vbeln = d~vbeln
*INNER JOIN adrc AS e ON b~adrnz = e~addrnumber
*WHERE a~tknum = lv_tknum.

  SELECT DISTINCT d~vbeln a~tdlnr d~vstel d~vsbed adrc~region AS regio adrc~post_code1 AS pstlz d~route d~kunnr
     INTO TABLE tt_zf15 FROM vttk AS a
     INNER JOIN vtts AS b ON a~tknum = b~tknum
     INNER JOIN vtsp AS vtsp ON b~tknum = vtsp~tknum
                            AND b~tsnum = vtsp~tsnum
     INNER JOIN vttp AS c ON c~tknum = vtsp~tknum
                         AND c~tpnum = vtsp~tpnum
     INNER JOIN likp AS d ON c~vbeln = d~vbeln
     INNER JOIN kna1 AS kna1 ON d~kunnr = kna1~kunnr
     INNER JOIN adrc AS adrc ON kna1~adrnr = adrc~addrnumber
     WHERE a~tknum = lv_tknum.

SORT tt_zf15 BY tdlnr vstel vsbed regio pstlz.

DELETE ADJACENT DUPLICATES FROM tt_zf15 COMPARING ALL FIELDS.

LOOP AT tt_zf15 INTO DATA(l_zf15_aux).

  CLEAR: l_kbetr_tarifa.

*   Precio por tarifa
  SELECT SINGLE b~kbetr
    INTO l_kbetr_tarifa
    FROM a959 AS a
    INNER JOIN konp AS b ON a~knumh = b~knumh
                        AND a~kschl = b~kschl
   WHERE a~kschl = 'ZF00'
     AND a~tdlnr = l_zf15_aux-tdlnr
     AND a~vstel = l_zf15_aux-vstel
     AND a~vsbed = l_zf15_aux-vsbed
     AND a~route = l_zf15_aux-route
     AND b~loevm_ko = space
     AND a~datab <= sy-datum
     AND a~datbi >= sy-datum
     AND a~kbstat = space.
  IF sy-subrc <> 0.
    SELECT SINGLE b~kbetr
       INTO l_kbetr_tarifa
       FROM a958 AS a
       INNER JOIN konp AS b ON a~knumh = b~knumh
                           AND a~kschl = b~kschl
     WHERE a~kschl  = 'ZF00'
       AND a~tdlnr  = l_zf15_aux-tdlnr
       AND a~vstel  = l_zf15_aux-vstel
       AND a~add04  = l_vttk-add04
       AND a~pstlzz = l_zf15_aux-pstlz
       AND b~loevm_ko = space
       AND a~datab <= sy-datum
       AND a~datbi >= sy-datum
       AND a~kbstat = space.
  ENDIF.

  CLEAR ls_tarifa_entrega.
  ls_tarifa_entrega-vbeln = l_zf15_aux-vbeln.
  ls_tarifa_entrega-kbetr = l_kbetr_tarifa.
  APPEND ls_tarifa_entrega TO lt_tarifa_entrega.

ENDLOOP.

"Obtenemos la de mayor tarifa
SORT lt_tarifa_entrega BY kbetr DESCENDING.
READ TABLE lt_tarifa_entrega INTO ls_tarifa_entrega INDEX 1.

*  LOOP AT tt_zf15 INTO DATA(ls_parada) WHERE vbeln NE ls_tarifa_entrega-vbeln.
*    EXIT.
*  ENDLOOP.
*SELECT SINGLE * FROM vttp INTO ls_vttp WHERE vbeln = ls_tarifa_entrega-vbeln.
**SELECT SINGLE * FROM vtsp INTO ls_vtsp WHERE tpnum = ls_vttp-tpnum.
*
*DATA: lt_vtsp type table of vtsp.
*clear lt_vtsp.
*SELECT * FROM vtsp INTO TABLE lt_vtsp WHERE tpnum = ls_vttp-tpnum.
*sort lt_vtsp by tsnum DESCENDING.
*read TABLE lt_vtsp into ls_vtsp INDEX 1.
*
*READ TABLE t_vtts INTO DATA(l_vtts_f) WITH KEY tsnum = ls_vtsp-tsnum.


*  READ TABLE t_vtts INTO DATA(l_vtts_f) INDEX l_cont.
"ASC <<< 04.03.24

  if KOMP-USERF1_NUM = ls_tarifa_entrega-vbeln.
    ykbetr = xkomv-kbetr = xkwert = 0.
  else.
    ykbetr = xkomv-kbetr  = ( l_cont - 1 ) * 100.
  endif.

*  CHECK komk-kunwe IS NOT INITIAL.
*  If komk-kunwe = ls_parada-kunnr.
*    ykbetr = xkomv-kbetr = xkwert = 0.
*  ELSE.
*    ykbetr = xkomv-kbetr  = ( l_cont - 1 ) * 100.
*  ENDIF.

*}   INSERT
ENDFORM.
