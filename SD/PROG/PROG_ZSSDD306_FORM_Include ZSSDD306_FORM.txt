*&---------------------------------------------------------------------*
*&  Include           ZSSDD306_FORM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form CheckAccounts
*&---------------------------------------------------------------------*
FORM checkaccounts.
  CLEAR: it[], it.
  SELECT kunnr bukrs FROM knb1 INTO TABLE it
      WHERE kunnr = so_kunnr
        AND bukrs IN so_bukrs.
  IF sy-subrc NE 0.
    MESSAGE s368(00) WITH 'Ningun registro para el cliente'.
  ENDIF.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form Check_credit_area
*&---------------------------------------------------------------------*
FORM check_credit_area.
  CLEAR ikkber.
  CLEAR kkbtx.
  DATA ti_t001 TYPE TABLE OF t001 WITH HEADER LINE.
  DATA i TYPE i.
  CLEAR ti_t001[].

  SELECT * INTO TABLE ti_t001 FROM t001
    WHERE bukrs IN so_bukrs.
  SORT ti_t001 BY kkber.
  DELETE ADJACENT DUPLICATES FROM ti_t001 COMPARING kkber.
  DESCRIBE TABLE ti_t001 LINES i.
  IF i <> 1.
    MESSAGE s398(00) WITH 'No se pueden seleccionar Sociedades'
                          'con diferente area ctrl. Créditos'.
  ELSE.
    READ TABLE ti_t001 INDEX 1.
    ikkber = ti_t001-kkber.
    IF ikkber IS INITIAL.
      MESSAGE s368(00) WITH 'Ningun Registro KKBER'.
    ENDIF.
    SELECT SINGLE kkbtx INTO kkbtx FROM t014t
      WHERE spras = sy-langu
        AND kkber = ikkber.
  ENDIF.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GetAccountData
*&---------------------------------------------------------------------*
FORM getaccountdata.

  DATA i TYPE i.
  DATA ti_t001 TYPE TABLE OF t001 WITH HEADER LINE.
  CLEAR: ti_t001[], l_knb1, descvia, v_zlsch, desccond.
  SELECT SINGLE name1 kunnr FROM kna1 INTO (kna1-name1, knc1-kunnr)
      WHERE kunnr = so_kunnr.

  SELECT * INTO TABLE ti_t001 FROM t001
    WHERE bukrs IN so_bukrs.
  DESCRIBE TABLE ti_t001 LINES i.
  IF i = 1.
    READ TABLE ti_t001 INDEX 1.
    knc1-bukrs = ti_t001-bukrs.

    "Obtengo vía de pago y condicion de pago
    SELECT SINGLE * INTO l_knb1 FROM knb1
      WHERE bukrs = ti_t001-bukrs
        AND kunnr = so_kunnr.
    v_zlsch = l_knb1-zwels(1).
    SELECT SINGLE text2 INTO descvia FROM t042zt
      WHERE spras = sy-langu
        AND zlsch = v_zlsch
        AND land1 = ti_t001-land1.
    SELECT SINGLE text1 INTO desccond FROM t052u
      WHERE spras = sy-langu
        AND zterm = l_knb1-zterm.
  ELSE.
    READ TABLE ti_t001 WITH KEY bukrs = '1000'.
    IF sy-subrc <> 0.
      READ TABLE ti_t001 WITH KEY bukrs = '2000'.
      IF sy-subrc = 0.
        SELECT SINGLE * INTO l_knb1 FROM knb1
      WHERE bukrs = ti_t001-bukrs
        AND kunnr = so_kunnr.
        v_zlsch = l_knb1-zwels(1).
        SELECT SINGLE text2 INTO descvia FROM t042zt
          WHERE spras = sy-langu
            AND zlsch = v_zlsch
            AND land1 = ti_t001-land1.
        SELECT SINGLE text1 INTO desccond FROM t052u
          WHERE spras = sy-langu
            AND zterm = l_knb1-zterm.
      ENDIF.
    ELSE.
      SELECT SINGLE * INTO l_knb1 FROM knb1
      WHERE bukrs = ti_t001-bukrs
        AND kunnr = so_kunnr.
      v_zlsch = l_knb1-zwels(1).
      SELECT SINGLE text2 INTO descvia FROM t042zt
        WHERE spras = sy-langu
          AND zlsch = v_zlsch
          AND land1 = ti_t001-land1.
      SELECT SINGLE text1 INTO desccond FROM t052u
        WHERE spras = sy-langu
          AND zterm = l_knb1-zterm.
    ENDIF.
    knc1-bukrs = '*'.
    CLEAR ti_t001.
  ENDIF.

  knc1-gjahr = gp_gjahr.

ENDFORM.                    " GetAccountData

*&---------------------------------------------------------------------*
*&      Form  RecPdte
*&---------------------------------------------------------------------*
FORM recpdte .
*---Recibos pendientes de vencer (tramo 0 - 15)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt >= v1 AND zfbdt < v2.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recp1 = data4-wrbtr + recp1.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      recp1 = recp1 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos pendientes de vencer (tramo 15 - 30)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt >= v2 AND zfbdt < v3.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recp2 = data4-wrbtr + recp2.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      recp2 = recp2 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos pendientes de vencer (tramo 30 - 45)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt >= v3 AND zfbdt < v4.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recp3 = data4-wrbtr + recp3.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      recp3 = recp3 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos pendientes de vencer (tramo 45 - 60)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt >= v4 AND zfbdt < v5.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recp4 = data4-wrbtr + recp4.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      recp4 = recp4 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos pendientes de vencer (tramo 60 - 90)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt >= v5 AND zfbdt < v6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recp5 = data4-wrbtr + recp5.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      recp5 = recp5 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos pendientes de vencer (tramo 90 -   )
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt > v6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recp6 = data4-wrbtr + recp6.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      recp6 = recp6 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " RecPdte

*&---------------------------------------------------------------------*
*&      Form  GSRPdte
*&---------------------------------------------------------------------*
FORM gsrpdte.
*---pendientes de vencer (tramo 0 - 15)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v1 AND zfbdt < v2.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsrp1 = data4-wrbtr + gsrp1.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsrp1 = gsrp1 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 15 - 30)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v2 AND zfbdt < v3.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsrp2 = data4-wrbtr + gsrp2.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsrp2 = gsrp2 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---pendientes de vencer (tramo 30 - 45)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v3 AND zfbdt < v4.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsrp3 = data4-wrbtr + gsrp3.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsrp3 = gsrp3 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 45 - 60)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v4 AND zfbdt < v5.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsrp4 = data4-wrbtr + gsrp4.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsrp4 = gsrp4 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 60 - 90)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v5 AND zfbdt < v6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsrp5 = data4-wrbtr + gsrp5.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsrp5 = gsrp5 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 90 -   )
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt > v6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsrp6 = data4-wrbtr + gsrp6.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsrp6 = gsrp6 - data4-wrbtr.
    ENDIF.
  ENDLOOP.
ENDFORM.                    " GSRPdte

*&---------------------------------------------------------------------*
*&      Form  GRDPdte
*&---------------------------------------------------------------------*
FORM grdpdte.
*--- pendientes de vencer (tramo 0 - 15)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v1 AND zfbdt < v2.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grdp1 = data4-wrbtr + grdp1.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grdp1 = grdp1 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 15 - 30)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v2 AND zfbdt < v3.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grdp2 = data4-wrbtr + grdp2.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grdp2 = grdp2 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 30 - 45)
  LOOP AT data4
      WHERE umskz = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v3 AND zfbdt < v4.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grdp3 = data4-wrbtr + grdp3.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grdp3 = grdp3 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 45 - 60)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v4 AND zfbdt < v5.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grdp4 = data4-wrbtr + grdp4.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grdp4 = grdp4 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 60 - 90)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt >= v5 AND zfbdt < v6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grdp5 = data4-wrbtr + grdp5.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grdp5 = grdp5 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- pendientes de vencer (tramo 90 -   )
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt > v6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grdp6 = data4-wrbtr + grdp6.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grdp6 = grdp6 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " GRDPdte

*&---------------------------------------------------------------------*
*&      Form  RecVcdo
*&---------------------------------------------------------------------*
FORM recvcdo.
*---Recibos vencido de vencer (tramo 0 - 15)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt <= a1 AND zfbdt > a2.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      reca1 = data4-wrbtr + reca1.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      reca1 = reca1 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos vencido de vencer (tramo 15 - 30)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt <= a2 AND zfbdt > a3.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      reca2 = data4-wrbtr + reca2.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      reca2 = reca2 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos vencido de vencer (tramo 30 - 45)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt <= a3 AND zfbdt > a4.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      reca3 = data4-wrbtr + reca3.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      reca3 = reca3 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos vencido de vencer (tramo 45 - 60)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt <= a4 AND zfbdt > a5.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      reca4 = data4-wrbtr + reca4.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      reca4 = reca4 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos vencido de vencer (tramo 60 - 90)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt <= a5 AND zfbdt > a6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      reca5 = data4-wrbtr + reca5.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      reca5 = reca5 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*---Recibos vencido de vencer (tramo 90 -   )
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND zlsch = 'I'
        AND zfbdt < a6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      reca6 = data4-wrbtr + reca6.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      reca6 = reca6 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " RecVcdo

*&---------------------------------------------------------------------*
*&      Form  GSRVcdo
*&---------------------------------------------------------------------*
FORM gsrvcdo .
*--- vencido de vencer (tramo 0 - 15)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a1 AND zfbdt > a2.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsra1 = data4-wrbtr + gsra1.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsra1 = gsra1 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 15 - 30)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a2 AND zfbdt > a3.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsra2 = data4-wrbtr + gsra2.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsra2 = gsra2 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 30 - 45)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a3 AND zfbdt > a4.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsra3 = data4-wrbtr + gsra3.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsra3 = gsra3 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 45 - 60)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a4 AND zfbdt > a5.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsra4 = data4-wrbtr + gsra4.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsra4 = gsra4 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 60 - 90)
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a5 AND zfbdt > a6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsra5 = data4-wrbtr + gsra5.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsra5 = gsra5 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 90 -   )
  LOOP AT data4
      WHERE umskz IS INITIAL
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt < a6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      gsra6 = data4-wrbtr + gsra6.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      gsra6 = gsra6 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " GSRVcdo

*&---------------------------------------------------------------------*
*&      Form  GRDVcdo
*&---------------------------------------------------------------------*
FORM grdvcdo .
*--- vencido de vencer (tramo 0 - 15)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a1 AND zfbdt > a2.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grda1 = data4-wrbtr + grda1.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grda1 = grda1 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 15 - 30)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a2 AND zfbdt > a3.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grda2 = data4-wrbtr + grda2.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grda2 = grda2 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 30 - 45)
  LOOP AT data4
      WHERE umskz = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a3 AND zfbdt > a4.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grda3 = data4-wrbtr + grda3.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grda3 = grda3 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 45 - 60)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a4 AND zfbdt > a5.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grda4 = data4-wrbtr + grda4.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grda4 = grda4 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 60 - 90)
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt <= a5 AND zfbdt > a6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grda5 = data4-wrbtr + grda5.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grda5 = grda5 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

*--- vencido de vencer (tramo 90 -   )
  LOOP AT data4
      WHERE umskz  = 'W'
        AND augbl IS INITIAL
        AND gjahr <= gp_gjahr
        AND ( zlsch = 'G' OR zlsch = 'L' )
        AND zfbdt < a6.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      grda6 = data4-wrbtr + grda6.
    ELSEIF data4-shkzg = 'H'.            "Indicador Debe (H)
      grda6 = grda6 - data4-wrbtr.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " GRDVcdo

*&---------------------------------------------------------------------*
*&      Form  CompJ0
*&---------------------------------------------------------------------*
FORM compj0.
*---Recibos año anterior
  LOOP AT data4
     WHERE umskz IS INITIAL
       AND zlsch = 'I'
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr0.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recc0 = data4-wrbtr + recc0.
    ENDIF.
  ENDLOOP.

*---Cheques año anterior
  LOOP AT data4
     WHERE umskz = 'C'
       AND zlsch = 'F'
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr0.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      chec0 = data4-wrbtr + chec0.
    ENDIF.
  ENDLOOP.

*---Pagaré año anterior
  LOOP AT data4
     WHERE umskz = 'D'
       AND zlsch = 'H'
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr0.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      pagc0 = data4-wrbtr + pagc0.
    ENDIF.
  ENDLOOP.

*---Giro año anterior
  LOOP AT data4
     WHERE umskz = 'W'
       AND ( zlsch = 'G' AND zlsch = 'L' )
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr0.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      girc0 = data4-wrbtr + girc0.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " CompJ0

*&---------------------------------------------------------------------*
*&      Form  CompJ1
*&---------------------------------------------------------------------*
FORM compj1 .
*---Recibos año actual
  LOOP AT data4
     WHERE umskz IS INITIAL
       AND zlsch = 'I'
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      recc1 = data4-wrbtr + recc1.
    ENDIF.
  ENDLOOP.

*---Cheques año actual
  LOOP AT data4
     WHERE umskz = 'C'
       AND zlsch = 'F'
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      chec1 = data4-wrbtr + chec1.
    ENDIF.
  ENDLOOP.

*---Pagaré año actual
  LOOP AT data4
     WHERE umskz = 'D'
       AND zlsch = 'H'
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      pagc1 = data4-wrbtr + pagc1.
    ENDIF.
  ENDLOOP.

*---Giro año actual
  LOOP AT data4
     WHERE umskz = 'W'
       AND ( zlsch = 'G' AND zlsch = 'L' )
       AND augbl IS NOT INITIAL
       AND gjahr = gp_gjahr.
    IF data4-shkzg = 'S'.                "Indicador Debe (S)
      girc1 = data4-wrbtr + girc1.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " CompJ1

*&---------------------------------------------------------------------*
*&      Form  ClearData
*&---------------------------------------------------------------------*
FORM cleardata .
  CLEAR: data1,              " Datos de crédito (KNKK)
         data2,              " Pedidos pendientes (S066)
         data3,              " Entregas / Facturas (S067)
         data4.              " Contabilidad (BSEG)
*       Data5.              " Pedidos bloqueados (VBAK/VBUK)

  CLEAR: fact1, abon1, net1, fact0, abon0, net0, fact1s, fact0s, abon1s, abon0s,
         net0s, net1s,
         dsvf, dsva, dsvn, excdo, grado, fact2, fact3, abon2, abon3,
         net2, net3, fact2s, fact3s, abon2s, abon3s, net2s, net3s,
         cartera, impago, deuda, vencido, no_vencido,
         ratio, limite, dispto, dispble, ctrl_impag,
         pedido, ped_bloq, entrega, factura, comercial, interno.

  CLEAR: recp, recp1, recp2, recp3, recp4, recp5, recp6,
         gsrp, gsrp1, gsrp2, gsrp3, gsrp4, gsrp5, gsrp6,
         grdp, grdp1, grdp2, grdp3, grdp4, grdp5, grdp6,
         totp, totp1, totp2, totp3, totp4, totp5, totp6,

         reca, reca1, reca2, reca3, reca4, reca5, reca6,
         gsra, gsra1, gsra2, gsra3, gsra4, gsra5, gsra6,
         grda, grda1, grda2, grda3, grda4, grda5, grda6,
         tota, tota1, tota2, tota3, tota4, tota5, tota6,

         total, vencido, no_vencido, gd_sfael,
    gd_snfae,

         recc, recc0, recc1,
         girc, girc0, girc1,
         chec, chec0, chec1,
         pagc, pagc0, pagc1.

ENDFORM.                    " ClearData

*---------------------------------------------------------------------*
*        Partida abierta más antigua...                               *
*---------------------------------------------------------------------*
FORM okcode_oldd.

  CALL FUNCTION 'CUSTOMER_OLDEST_OPEN_ITEM'
    EXPORTING
      i_kkber  = ikkber
      i_kunnr  = so_kunnr
      i_regul  = ' '
    IMPORTING
      e_kunnr  = oldd-kunnr
      e_belnr  = oldd-belnr
      e_bukrs  = oldd-bukrs
      e_faedt  = oldd-faedt
      e_gjahr  = oldd-gjahr
      e_infae  = oldd-infae
      e_verzn  = oldd-verzn
      e_waers  = oldd-waers
      e_wrbtr  = oldd-wrbtr
    EXCEPTIONS
      no_bukrs = 1
      no_items = 2.

** ------ Posten mit ältester Nettofälligkeit anzeigen ------------------
  rfpos-faedt = oldd-faedt.
  rfpos-verzn = oldd-verzn.
  MOVE-CORRESPONDING oldd TO bsid.
  PERFORM call_screen USING 'OLDD'.

ENDFORM.                    "OKCODE_OLDD

FORM call_screen USING c01_winfk TYPE c.

  SELECT SINGLE * FROM  t019w
                  WHERE mpool = sy-repid
                  AND   buvar = space
                  AND   winfk = c01_winfk.
  IF sy-subrc = 0.
    CALL SCREEN t019w-winnr
         STARTING AT t019w-spvon t019w-zlvon
         ENDING   AT t019w-spbis t019w-zlbis.
  ENDIF.
ENDFORM.                    "CALL_SCREEN

*&---------------------------------------------------------------------*
*&      Form  CreateFieldcat
*&---------------------------------------------------------------------*
FORM createfieldcat .
  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'BUKRS'.
  gt_fieldcat-ref_table = 'idata5'.
  gt_fieldcat-coltext = text-003.
  gt_fieldcat-tooltip = text-003.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 8.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'VTWEG'.
  gt_fieldcat-ref_table = 'idata5'.
  gt_fieldcat-coltext = text-011.
  gt_fieldcat-tooltip = text-11a.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 5.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'SPART'.
  gt_fieldcat-ref_table = 'idata5'.
  gt_fieldcat-coltext = text-012.
  gt_fieldcat-tooltip = text-12a.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 5.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'GBSTK'.
  gt_fieldcat-coltext = text-004.
  gt_fieldcat-tooltip = text-004.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 18.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'VBELN'.
  gt_fieldcat-coltext = text-005.
  gt_fieldcat-tooltip = text-005.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 10.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'NETWR'.
  gt_fieldcat-ref_table = 'idata5'.
  gt_fieldcat-coltext = text-006.
  gt_fieldcat-tooltip = text-006.
  gt_fieldcat-datatype = 'CURR'.
  gt_fieldcat-outputlen = 15.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'WAERK'.
  gt_fieldcat-ref_table = 'idata5'.
  gt_fieldcat-coltext = text-010.
  gt_fieldcat-tooltip = text-010.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 4.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'CMPSA'.
  gt_fieldcat-coltext = text-007.
  gt_fieldcat-tooltip = text-07a.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 7.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'CMPSG'.
  gt_fieldcat-coltext = text-008.
  gt_fieldcat-tooltip = text-08a.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 7.
  APPEND gt_fieldcat.

  CLEAR gt_fieldcat.
  gt_fieldcat-fieldname = 'CMPS0'.
  gt_fieldcat-coltext = text-009.
  gt_fieldcat-tooltip = text-09a.
  gt_fieldcat-datatype = 'CHAR'.
  gt_fieldcat-outputlen = 7.
  APPEND gt_fieldcat.

ENDFORM.                    " CreateFieldcat

*&---------------------------------------------------------------------*
*&      Form  ANTICIPOS_EFECTOS_ABONOS
*&---------------------------------------------------------------------*
FORM anticipos_efectos_abonos.

  DATA: ti_t001 TYPE TABLE OF t001 WITH HEADER LINE.
  DATA t_rfpos TYPE TABLE OF rfpos WITH HEADER LINE.

  CLEAR ti_zssds306a[].

  t_rfpos[] = t_fbl5n[].
* Anticipos
  LOOP AT t_rfpos WHERE umskz = 'A'.
    MOVE-CORRESPONDING t_rfpos TO ti_zssds306a.
    ti_zssds306a-texto = 'ANTICIPOS'.
    APPEND ti_zssds306a.
  ENDLOOP.
  LOOP AT t_rfpos WHERE bschl = '14' OR bschl = '15'.
    MOVE-CORRESPONDING t_rfpos TO ti_zssds306a.
    ti_zssds306a-texto = 'ANTICIPOS'.
    APPEND ti_zssds306a.
  ENDLOOP.
* Efectos
  LOOP AT t_rfpos WHERE umskz = 'D' OR umskz = 'L' OR umskz = 'S' OR umskz = 'U'.
    MOVE-CORRESPONDING t_rfpos TO ti_zssds306a.
    ti_zssds306a-texto = 'EFECTOS'.
    APPEND ti_zssds306a.
  ENDLOOP.
* Abonos
  LOOP AT t_rfpos WHERE bschl = '11'.
    MOVE-CORRESPONDING t_rfpos TO ti_zssds306a.
    ti_zssds306a-texto = 'ABONOS'.
    APPEND ti_zssds306a.
  ENDLOOP.

ENDFORM.

*&--------------------------------------------------------------------
*&      Form  load_data_into_grid
*&--------------------------------------------------------------------
FORM load_data_into_grid TABLES tabla       TYPE STANDARD TABLE
                         USING contenedor  TYPE REF TO cl_gui_custom_container
                               nombre_cont TYPE        scrfname
                               variant     LIKE        disvariant
                               estruc      LIKE        dd02l-tabname
                     CHANGING  alv         TYPE REF TO cl_gui_alv_grid
                               layout      TYPE        lvc_s_layo
                               it_fieldcat TYPE        lvc_t_fcat
                               excludin    TYPE        ui_functions.

  IF alv IS INITIAL.
    IF cl_gui_alv_grid=>offline( ) IS INITIAL.

      IF estruc = 'ZSSDT306A_DIARIO' OR estruc = 'ZSSDT306C_ASEGCL'.
        IF eventos IS INITIAL.
          CREATE OBJECT eventos.
        ENDIF.
      ENDIF.

      CREATE OBJECT contenedor
        EXPORTING
          container_name = nombre_cont
        EXCEPTIONS
          OTHERS         = 1.

      CREATE OBJECT alv
        EXPORTING
          i_parent = contenedor
        EXCEPTIONS
          OTHERS   = 1.

      CALL METHOD alv->register_edit_event
        EXPORTING
          i_event_id = cl_gui_alv_grid=>mc_evt_modified
        EXCEPTIONS
          error      = 1
          OTHERS     = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

    ENDIF.

    PERFORM preparefieldcatalog USING    estruc
                                CHANGING it_fieldcat.
    PERFORM preparelayout       CHANGING layout.
    PERFORM rellenar_toolbar    CHANGING excludin.

    IF estruc = 'ZSSDT306A_DIARIO'.
      SET HANDLER eventos->data_changed_finished FOR alv.
    ENDIF.
    IF estruc = 'ZSSDT306C_ASEGCL'.
      SET HANDLER eventos->data_changed_finished_aseg FOR alv.
    ENDIF.
    IF estruc = 'ZSSDT306A_DIARIO'.
      SET HANDLER eventos->data_changed_finished_diario FOR alv.
    ENDIF.


    CALL METHOD alv->set_table_for_first_display
      EXPORTING
        is_variant           = variant
        i_save               = 'A'
        is_layout            = layout
        it_toolbar_excluding = excludin
      CHANGING
        it_outtab            = tabla[]
        it_fieldcatalog      = it_fieldcat
      EXCEPTIONS
        OTHERS               = 1.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ELSE.
    DATA: BEGIN OF ls_stable,
            row TYPE c,
            col TYPE c,
          END OF ls_stable.

    ls_stable-row = 'X'.
    ls_stable-col = 'X'.

    CALL METHOD alv->refresh_table_display
      EXPORTING
        is_stable = ls_stable.
  ENDIF.

ENDFORM.                    "load_data_into_grid

*&--------------------------------------------------------------------
*&      Form  preparefieldcatalog
*&--------------------------------------------------------------------
FORM preparefieldcatalog USING    estruc       LIKE dd02l-tabname
                         CHANGING it_fieldcat1 TYPE lvc_t_fcat.

  DATA: l_fieldcat TYPE LINE OF lvc_t_fcat.

  REFRESH it_fieldcat1.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active        = 'X'
      i_structure_name       = estruc
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = it_fieldcat1[]
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.

  IF estruc = 'ZSSDT306A_DIARIO'.
    LOOP AT it_fieldcat1 INTO l_fieldcat.
      CASE l_fieldcat-fieldname.
        WHEN 'BUKRS'.
          l_fieldcat-edit = 'X'.
        WHEN 'MOTIV'.
          l_fieldcat-edit = 'X'.
          l_fieldcat-coltext = 'Motivo'.
        WHEN 'CONTE'.
          l_fieldcat-edit = 'X'.
          l_fieldcat-coltext = 'Contestación'.
        WHEN 'FPROX'.
          l_fieldcat-coltext = 'F.Próxima'.
          l_fieldcat-edit = 'X'.
      ENDCASE.
      MODIFY it_fieldcat1 FROM l_fieldcat.
    ENDLOOP.
  ENDIF.
  IF estruc = 'ZSSDT306C_ASEGCL'.
    LOOP AT it_fieldcat1 INTO l_fieldcat.
      CASE l_fieldcat-fieldname.
        WHEN 'ZCOBER'.
          l_fieldcat-edit = 'X'.
        WHEN 'DBRTG'.
          l_fieldcat-coltext = 'Aseguradora'.
        WHEN 'BEGDA'.
          l_fieldcat-edit = 'X'.
          "l_fieldcat-coltext = 'Ult.Verif.Ext'.
        WHEN 'ENDDA'.
          l_fieldcat-edit = 'X'.
          "l_fieldcat-coltext = 'Monitoring'.
        WHEN 'CRSOL'.
          l_fieldcat-coltext = 'Cr.Sol.'.
          l_fieldcat-edit = 'X'.
        WHEN 'CRCON'.
          l_fieldcat-coltext = 'Cr.Conc.'.
          l_fieldcat-edit = 'X'.
        WHEN 'RIESA'.
          l_fieldcat-coltext = 'Riesgo Asegurable'.
          l_fieldcat-edit = 'X'.
        WHEN 'RIESN'.
          l_fieldcat-coltext = 'Riesgo No Concedido'.
          l_fieldcat-edit = 'X'.
        WHEN 'PORCE'.
          l_fieldcat-coltext = 'Riesgo'.
        WHEN 'KUNNR'.
          l_fieldcat-edit = 'X'.
        WHEN 'KKBER'.
          l_fieldcat-edit = 'X'.
        WHEN 'KDGRP'.
          l_fieldcat-edit = 'X'.
        WHEN 'OBSER'.
          l_fieldcat-edit = 'X'.
        WHEN 'RATE'.
          l_fieldcat-edit = 'X'.
        WHEN OTHERS.
      ENDCASE.
      MODIFY it_fieldcat1 FROM l_fieldcat.
    ENDLOOP.
  ENDIF.

ENDFORM.                    "preparefieldcatalog

*&--------------------------------------------------------------------
*&      Form  preparelayout
*---------------------------------------------------------------------
FORM preparelayout CHANGING cwa_layout TYPE lvc_s_layo.

  cwa_layout-zebra    = 'X'.
  cwa_layout-sel_mode = 'D'.

ENDFORM.                    "preparelayout

*&--------------------------------------------------------------------
*&      Form  rellenar_toolbar
*&--------------------------------------------------------------------
FORM rellenar_toolbar CHANGING excluirtool TYPE ui_functions.

  REFRESH: excluirtool.

ENDFORM.                    "rellenar_toolbar

*&---------------------------------------------------------------------*
*&      Form  GUARDAR_DIARIO
*&---------------------------------------------------------------------*
FORM guardar_diario.

  DATA: ti_diario_aux TYPE TABLE OF zssdt306a_diario WITH HEADER LINE.
  DATA: posnr TYPE posnr.
  DATA: tabix LIKE sy-tabix.

  CLEAR posnr.

  SELECT MAX( posnr ) INTO posnr FROM zssdt306a_diario
    WHERE kunnr = so_kunnr.

  SELECT * INTO TABLE ti_diario_aux FROM zssdt306a_diario
    WHERE kunnr = so_kunnr
      AND bukrs IN so_bukrs.

  LOOP AT ti_zssdt306a_diario WHERE posnr IS NOT INITIAL.
    READ TABLE ti_diario_aux WITH KEY kunnr = ti_zssdt306a_diario-kunnr
                                      bukrs = ti_zssdt306a_diario-bukrs
                                      posnr = ti_zssdt306a_diario-posnr.
    IF sy-subrc = 0.
      tabix = sy-tabix.
      DELETE ti_diario_aux INDEX tabix.

      MOVE-CORRESPONDING ti_zssdt306a_diario TO ti_diario_aux.
      MODIFY zssdt306a_diario FROM ti_diario_aux.

    ENDIF.
  ENDLOOP.
  LOOP AT ti_zssdt306a_diario WHERE posnr IS INITIAL.
    posnr = posnr + 1.
    ti_zssdt306a_diario-mandt = sy-mandt.
    ti_zssdt306a_diario-kunnr = so_kunnr.
    ti_zssdt306a_diario-posnr = posnr.
    ti_zssdt306a_diario-fecha = sy-datum.
    ti_zssdt306a_diario-hora = sy-uzeit.
    ti_zssdt306a_diario-uname = sy-uname.
    INSERT zssdt306a_diario FROM ti_zssdt306a_diario.
    MODIFY ti_zssdt306a_diario.
  ENDLOOP.
  LOOP AT ti_diario_aux.
    UPDATE zssdt306a_diario SET loekz = 'X'
    WHERE kunnr = ti_diario_aux-kunnr
      AND bukrs = ti_diario_aux-bukrs
      AND posnr = ti_diario_aux-posnr.
  ENDLOOP.
  COMMIT WORK AND WAIT.
  MESSAGE s368(00) WITH 'Diario Guardado OK'.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  BUSCAR_FBL5N_BSID
*&---------------------------------------------------------------------*
FORM buscar_fbl5n_bsid.

  DATA t_rfpos_aux TYPE TABLE OF rfpos.
  DATA ti_t001 TYPE TABLE OF t001 WITH HEADER LINE.
  CLEAR: t_fbl5n[], ti_t001[], t_fbl5n_impag[].

  SELECT * INTO TABLE ti_t001 FROM t001
    WHERE bukrs IN so_bukrs.

  IF gp_gjahr = sy-datum(4).
    fecha_venc = sy-datum.
  ELSE.
    fecha_venc = gp_gjahr && '1231'.
  ENDIF.

  LOOP AT ti_t001.
    CLEAR t_rfpos_aux[].
    CALL FUNCTION 'CUSTOMER_OPEN_ITEMS'
      EXPORTING
        bukrs    = ti_t001-bukrs
        kunnr    = so_kunnr
        stida    = fecha_venc
      TABLES
        t_postab = t_rfpos_aux.
    APPEND LINES OF t_rfpos_aux TO t_fbl5n.
  ENDLOOP.

  PERFORM rellenar_vacios TABLES t_fbl5n.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GUARDAR_ASEG
*&---------------------------------------------------------------------*
FORM guardar_aseg.

  DATA: ti_aseg_aux TYPE TABLE OF zssdt306c_asegcl WITH HEADER LINE.
  DATA: posnr TYPE posnr.
  DATA: tabix LIKE sy-tabix.

  CLEAR posnr.

  SELECT MAX( posnr ) INTO posnr FROM zssdt306c_asegcl
    WHERE kunnr = so_kunnr
      AND kkber = ikkber.

  SELECT * INTO TABLE ti_aseg_aux FROM zssdt306c_asegcl
    WHERE kunnr = so_kunnr
      AND kkber = ikkber.

  LOOP AT ti_zssdt306c_asegcl WHERE posnr IS NOT INITIAL.
    READ TABLE ti_aseg_aux WITH KEY kunnr = ti_zssdt306c_asegcl-kunnr
                                      kkber = ti_zssdt306c_asegcl-kkber
                                      posnr = ti_zssdt306c_asegcl-posnr.
    IF sy-subrc = 0.
      tabix = sy-tabix.
      DELETE ti_aseg_aux INDEX tabix.

      MOVE-CORRESPONDING ti_zssdt306c_asegcl TO ti_aseg_aux.
      MODIFY zssdt306c_asegcl FROM ti_aseg_aux.

    ENDIF.
  ENDLOOP.
  LOOP AT ti_zssdt306c_asegcl WHERE posnr IS INITIAL.
    posnr = posnr + 1.
    ti_zssdt306c_asegcl-mandt = sy-mandt.
    ti_zssdt306c_asegcl-kunnr = so_kunnr.
    ti_zssdt306c_asegcl-posnr = posnr.
    ti_zssdt306c_asegcl-kkber = ikkber.
    INSERT zssdt306c_asegcl FROM ti_zssdt306c_asegcl.
    MODIFY ti_zssdt306c_asegcl.
  ENDLOOP.
  LOOP AT ti_aseg_aux.
    UPDATE zssdt306c_asegcl SET loekz = 'X'
    WHERE kunnr = ti_aseg_aux-kunnr
      AND kkber = ti_aseg_aux-kkber
      AND posnr = ti_aseg_aux-posnr.
  ENDLOOP.
  COMMIT WORK AND WAIT.
  MESSAGE s368(00) WITH 'Aseguradora Guardada OK'.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CALCULAR_IMPORTES_VIAS_PAGO
*&---------------------------------------------------------------------*
FORM calcular_importes_vias_pago.

  DATA v_netwr LIKE vbap-netwr.
  DATA v_mwsbp LIKE vbap-mwsbp.
  DATA v_kwmeng LIKE vbap-kwmeng.

  DATA: BEGIN OF ti_lips OCCURS 0,
          vgbel LIKE lips-vgbel,
          vgpos LIKE lips-vgpos,
          lfimg LIKE lips-lfimg,
        END OF ti_lips.

  CLEAR: ppdr, cpdr, tpdr, antic, abon, chpdr, prpv, gpdr, chrpv, grpv,
         ergc, erad, efim, efre, duco, gimp, doer, doep, ppds, ppdf, pret, pqsr,
         pabo, pact, antic_venc, antic_nvenc, abon_nvenc, abon_venc, efim_nvenc, efim_venc,
         duco_venc, duco_nvenc, doer_venc, doer_nvenc, ergc_venc, ergc_nvenc, erad_venc, erad_nvenc,
         doep_venc, doep_nvenc, chrpv_venc, chrpv_nvenc, prpv_venc, prpv_nvenc, grpv_venc, grpv_nvenc,
         tpdr_venc, tpdr_nvenc, cpdr_venc, cpdr_nvenc, chpdr_venc, chpdr_nvenc, ppdr_venc, ppdr_nvenc,
         gpdr_venc, gpdr_nvenc.

*pedidos Pendientes de Servir
  DATA: BEGIN OF ti_ppds OCCURS 0,
          vbeln LIKE vbak-vbeln,
        END OF ti_ppds.

  CLEAR ti_ppds[].

  SELECT vbpa~vbeln INTO TABLE ti_ppds FROM vbpa
    INNER JOIN vbak ON vbak~vbeln = vbpa~vbeln
    WHERE parvw = 'RG'
      AND vbpa~kunnr = so_kunnr
      AND posnr = '000000'
      AND bukrs_vf IN so_bukrs.
  IF ti_ppds[] IS NOT INITIAL.

    DATA: BEGIN OF ti_ppds_imp OCCURS 0,
            netwr LIKE vbap-netwr,
            mwsbp LIKE vbap-mwsbp,
          END OF ti_ppds_imp.
    CLEAR ti_ppds_imp[].

    SELECT netwr mwsbp INTO TABLE ti_ppds_imp FROM vbap
      INNER JOIN vbup ON vbup~vbeln = vbap~vbeln AND vbup~posnr = vbap~posnr
      FOR ALL ENTRIES IN ti_ppds
      WHERE vbap~vbeln = ti_ppds-vbeln
          AND  vbap~abgru = ''
        AND vbup~lfsta = 'A'
        AND vbup~absta = 'A'
        AND vbup~fksaa <> 'C'.

    LOOP AT ti_ppds_imp.
      ppds = ppds + ti_ppds_imp-netwr + ti_ppds_imp-mwsbp.
    ENDLOOP.

    CLEAR ti_lips[].

    SELECT vgbel vgpos lfimg INTO TABLE ti_lips FROM lips
    INNER JOIN vbup ON vbup~vbeln = lips~vbeln AND vbup~posnr = lips~posnr
    FOR ALL ENTRIES IN ti_ppds
    WHERE lips~vbeln = ti_ppds-vbeln
      AND vbup~wbsta <> 'C'.

    LOOP AT ti_lips.
      CLEAR: v_netwr, v_mwsbp, v_kwmeng.
      SELECT SINGLE netwr mwsbp kwmeng INTO (v_netwr, v_mwsbp, v_kwmeng)
        FROM vbap
        WHERE vbeln = ti_lips-vgbel
          AND posnr = ti_lips-vgpos.
      ppds = ppds + ( ( v_netwr + v_mwsbp ) * ti_lips-lfimg / v_kwmeng ).
    ENDLOOP.

  ENDIF.


  "Pedidos Pendientes de Facturar
  IF ti_ppds[] IS NOT INITIAL.

    CLEAR ti_lips[].

    SELECT vgbel vgpos lfimg INTO TABLE ti_lips FROM lips
    INNER JOIN vbup ON vbup~vbeln = lips~vbeln AND vbup~posnr = lips~posnr
    FOR ALL ENTRIES IN ti_ppds
    WHERE lips~vgbel = ti_ppds-vbeln"lips~vbeln = ti_ppds-vbeln

      AND vbup~wbsta = 'C'
      AND vbup~fksta = 'A'.

    LOOP AT ti_lips.
      CLEAR: v_netwr, v_mwsbp, v_kwmeng.
      SELECT SINGLE netwr mwsbp kwmeng INTO (v_netwr, v_mwsbp, v_kwmeng)
        FROM vbap
        WHERE vbeln = ti_lips-vgbel
          AND posnr = ti_lips-vgpos
         AND abgru = ''.
      ppdf = ppdf + ( ( v_netwr + v_mwsbp ) * ti_lips-lfimg / v_kwmeng ).
    ENDLOOP.

  ENDIF.

  "Pedidos Retenidos
  DATA: BEGIN OF ti_pret OCCURS 0,
          vbeln LIKE vbak-vbeln,
        END OF ti_pret.
  CLEAR ti_pret[].
  SELECT vbpa~vbeln INTO TABLE ti_pret FROM vbpa
    INNER JOIN vbak ON vbak~vbeln = vbpa~vbeln
    INNER JOIN vbuk ON vbuk~vbeln = vbpa~vbeln
    WHERE parvw = 'RG'
      AND vbpa~kunnr = so_kunnr
      AND posnr = '000000'
      AND bukrs_vf IN so_bukrs
      AND cmgst = 'B'.
  IF ti_pret[] IS NOT INITIAL.

    DATA: BEGIN OF ti_pret_imp OCCURS 0,
            netwr LIKE vbap-netwr,
            mwsbp LIKE vbap-mwsbp,
          END OF ti_pret_imp.
    CLEAR ti_pret_imp[].

    SELECT netwr mwsbp INTO TABLE ti_pret_imp FROM vbap
      FOR ALL ENTRIES IN ti_pret
      WHERE vbap~vbeln = ti_pret-vbeln.

    LOOP AT ti_pret_imp.
      pret = pret + ti_pret_imp-netwr + ti_pret_imp-mwsbp.
    ENDLOOP.

  ENDIF.

  "Pedidos que suman riesgo
  DATA: BEGIN OF ti_pqsr OCCURS 0,
          vbeln LIKE vbak-vbeln,
        END OF ti_pqsr.
  CLEAR ti_ppds[].
  SELECT vbpa~vbeln INTO TABLE ti_pqsr FROM vbpa
    INNER JOIN vbak ON vbak~vbeln = vbpa~vbeln
    INNER JOIN vbuk ON vbuk~vbeln = vbpa~vbeln
    WHERE parvw = 'RG'
      AND vbpa~kunnr = so_kunnr
      AND posnr = '000000'
      AND bukrs_vf IN so_bukrs
      AND auart = 'ZTER'
      AND fksak <> 'C'.
  IF ti_pqsr[] IS NOT INITIAL.

    DATA: BEGIN OF ti_pqsr_imp OCCURS 0,
            netwr LIKE vbap-netwr,
            mwsbp LIKE vbap-mwsbp,
          END OF ti_pqsr_imp.
    CLEAR ti_ppds_imp[].

    SELECT netwr mwsbp INTO TABLE ti_pqsr_imp FROM vbap
      FOR ALL ENTRIES IN ti_pqsr
      WHERE vbap~vbeln = ti_pqsr-vbeln.

    LOOP AT ti_pqsr_imp.
      pqsr = pqsr + ti_pqsr_imp-netwr + ti_pqsr_imp-mwsbp.
    ENDLOOP.

  ENDIF.

  "Todo Aquello cuyo UMSKZ sea SPACE hay que calcular el VCTO
  "En funcion del VTCO de la FBL5N + Dias parametrizados.
  "Si el VCTO calculado es mayor que la fecha Actual, pasara a Impagado.
  LOOP AT t_fbl5n WHERE umskz = space AND bschl <> '11'
    AND bschl <> '14' AND bschl <> '12' AND bschl <> '15'.
    " --> Fecha de Vcto
    CLEAR ti_zssdt306a.
    READ TABLE ti_zssdt306b WITH KEY zlsch = t_fbl5n-zlsch.
    IF sy-subrc = 0.
      READ TABLE ti_zssdt306a WITH KEY codigo = ti_zssdt306b-codigo.
      IF ti_zssdt306a-dias IS INITIAL.
        READ TABLE ti_zssdt306a WITH KEY codigo = 'IMPG'.
      ENDIF.
    ELSE.
      READ TABLE ti_zssdt306a WITH KEY codigo = 'IMPG'.
    ENDIF.
    IF ti_zssdt306a-dias IS NOT INITIAL.
      DATA ip_szbmeth LIKE jbd14-szbmeth.
      DATA ep_ndays TYPE i.
      CLEAR ep_ndays.
      CALL FUNCTION 'ISB_DAYS_BETWEEN_TWO_DATES'
        EXPORTING
          ip_date_from = t_fbl5n-faedt
          ip_date_to   = sy-datum
          ip_szbmeth   = ip_szbmeth
        IMPORTING
          ep_ndays     = ep_ndays.
      IF ep_ndays > 0 AND ep_ndays > ti_zssdt306a-dias.
        efim = efim + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          efim_nvenc = efim_nvenc + t_fbl5n-dmshb.
        ELSE.
          efim_venc = efim_venc + t_fbl5n-dmshb.
        ENDIF.
        APPEND t_fbl5n TO t_fbl5n_impag.
        DELETE t_fbl5n.
      ENDIF.
    ENDIF.
  ENDLOOP.

  IF ti_zssds306a[] IS INITIAL.
    PERFORM anticipos_efectos_abonos.
  ENDIF.

  "Pagarés pendientes de Recibir
  LOOP AT t_fbl5n WHERE umskz = space AND ( zlsch = 'U' OR zlsch = '3' )
                    AND blart <> 'DB' AND bschl <> '11' AND bschl <> '14' AND bschl <> '15'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        ppdr = ppdr + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          ppdr_nvenc = ppdr_nvenc + t_fbl5n-dmshb.
        ELSE.
          ppdr_venc = ppdr_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        ppdr = ppdr - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          ppdr_nvenc = ppdr_nvenc - t_fbl5n-dmshb.
        ELSE.
          ppdr_venc = ppdr_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Confirming pendientes de Recibir
  LOOP AT t_fbl5n WHERE umskz = space AND zlsch = 'O'
                  AND blart <> 'DB' AND bschl <> '11' AND bschl <> '14' AND bschl <> '15'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        cpdr = cpdr + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          cpdr_nvenc = cpdr_nvenc + t_fbl5n-dmshb.
        ELSE.
          cpdr_venc = cpdr_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        cpdr = cpdr - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          cpdr_nvenc = cpdr_nvenc - t_fbl5n-dmshb.
        ELSE.
          cpdr_venc = cpdr_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Transferencia pendiente de Recibir
  LOOP AT t_fbl5n WHERE umskz = space AND ( zlsch = 'B' OR zlsch = '1' )
                  AND blart <> 'DB' AND bschl <> '11'  AND bschl <> '14' AND bschl <> '15'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        tpdr = tpdr + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          tpdr_nvenc = tpdr_nvenc + t_fbl5n-dmshb.
        ELSE.
          tpdr_venc = tpdr_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        tpdr = tpdr - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          tpdr_nvenc = tpdr_nvenc - t_fbl5n-dmshb.
        ELSE.
          tpdr_venc = tpdr_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Giro domiciliado pendiente de Recibir
  LOOP AT t_fbl5n WHERE umskz = space AND zlsch = 'D'
                    AND blart <> 'DB' AND bschl <> '11'  AND bschl <> '14' AND bschl <> '15'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        gpdr = gpdr + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          gpdr_nvenc = gpdr_nvenc + t_fbl5n-dmshb.
        ELSE.
          gpdr_venc = gpdr_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        gpdr = gpdr - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          gpdr_nvenc = gpdr_nvenc - t_fbl5n-dmshb.
        ELSE.
          gpdr_venc = gpdr_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Anticipos
  LOOP AT t_fbl5n WHERE umskz = 'A'.
    antic = antic + t_fbl5n-dmshb.
    IF fecha_venc < t_fbl5n-faedt.
      antic_nvenc = antic_nvenc + t_fbl5n-dmshb.
    ELSE.
      antic_venc = antic_venc + t_fbl5n-dmshb.
    ENDIF.
    DELETE t_fbl5n.
  ENDLOOP.
  LOOP AT t_fbl5n WHERE bschl = '14' OR bschl = '15'.
    antic = antic + t_fbl5n-dmshb.
    IF fecha_venc < t_fbl5n-faedt.
      antic_nvenc = antic_nvenc + t_fbl5n-dmshb.
    ELSE.
      antic_venc = antic_venc + t_fbl5n-dmshb.
    ENDIF.
    DELETE t_fbl5n.
  ENDLOOP.

  "Abonos
  LOOP AT t_fbl5n WHERE umskz = space AND bschl = '11'.
    abon = abon + t_fbl5n-dmshb.
    IF fecha_venc < t_fbl5n-faedt.
      abon_nvenc = abon_nvenc + t_fbl5n-dmshb.
    ELSE.
      abon_venc = abon_venc + t_fbl5n-dmshb.
    ENDIF.
    DELETE t_fbl5n.
  ENDLOOP.

  "Cheque pendientes de Recibir
  LOOP AT t_fbl5n WHERE umskz = space AND ( zlsch = 'S' OR zlsch = '2' )
                  AND blart <> 'DB' AND bschl <> '11'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        chpdr = chpdr + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          chpdr_nvenc = chpdr_nvenc + t_fbl5n-dmshb.
        ELSE.
          chpdr_venc = chpdr_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        chpdr = chpdr - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          chpdr_nvenc = chpdr_nvenc - t_fbl5n-dmshb.
        ELSE.
          chpdr_venc = chpdr_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Pagarés recibidos pendientes de Vencer
  LOOP AT t_fbl5n WHERE umskz = 'U' AND wverw = space."AND ( zlsch = 'U' OR zlsch = '3' )
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        prpv = prpv + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          prpv_nvenc = prpv_nvenc + t_fbl5n-dmshb.
        ELSE.
          prpv_venc = prpv_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        prpv = prpv - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          prpv_nvenc = prpv_nvenc - t_fbl5n-dmshb.
        ELSE.
          prpv_venc = prpv_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Cheque recibidos pendientes de Vencer
  LOOP AT t_fbl5n WHERE umskz = 'S' AND wverw = space."AND zlsch = 'S'
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        chrpv = chrpv + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          chrpv_nvenc = chrpv_nvenc + t_fbl5n-dmshb.
        ELSE.
          chrpv_venc = chrpv_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        chrpv = chrpv - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          chrpv_nvenc = chrpv_nvenc - t_fbl5n-dmshb.
        ELSE.
          chrpv_venc = chrpv_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Giro domiciliado recibidos pendientes de Vencer
  LOOP AT t_fbl5n WHERE umskz = 'D' AND wverw = space."AND zlsch = 'D'
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        grpv = grpv + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          grpv_nvenc = grpv_nvenc + t_fbl5n-dmshb.
        ELSE.
          grpv_venc = grpv_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        grpv = grpv - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          grpv_nvenc = grpv_nvenc - t_fbl5n-dmshb.
        ELSE.
          grpv_venc = grpv_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Efectos remesados en Gestión de Cobro
  LOOP AT t_fbl5n WHERE umskz <> space AND wverw = 'I'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        ergc = ergc + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          ergc_nvenc = ergc_nvenc + t_fbl5n-dmshb.
        ELSE.
          ergc_venc = ergc_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        ergc = ergc - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          ergc_nvenc = ergc_nvenc - t_fbl5n-dmshb.
        ELSE.
          ergc_venc = ergc_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Efectos remesados al Descuento
  LOOP AT t_fbl5n WHERE umskz <> space AND wverw = 'D'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        erad = erad + t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          erad_nvenc = erad_nvenc + t_fbl5n-dmshb.
        ELSE.
          erad_venc = erad_venc + t_fbl5n-dmshb.
        ENDIF.
      WHEN 'H'."-
        erad = erad - t_fbl5n-dmshb.
        IF fecha_venc < t_fbl5n-faedt.
          erad_nvenc = erad_nvenc - t_fbl5n-dmshb.
        ELSE.
          erad_venc = erad_venc - t_fbl5n-dmshb.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  "Efectos Impagados
  LOOP AT t_fbl5n WHERE umskz = 'Y'.
*    CASE t_fbl5n-shkzg.
*      WHEN 'S'."+
    efim = efim + t_fbl5n-dmshb.
*      WHEN 'H'."-
*        efim = efim - t_fbl5n-dmshb.
*    ENDCASE.
    IF fecha_venc < t_fbl5n-faedt.
      efim_nvenc = efim_nvenc + t_fbl5n-dmshb.
    ELSE.
      efim_venc = efim_venc + t_fbl5n-dmshb.
    ENDIF.

    APPEND t_fbl5n TO t_fbl5n_impag.
    DELETE t_fbl5n.
  ENDLOOP.

  "Efectos Reclamados
  LOOP AT t_fbl5n WHERE umskz = 'R'.
    CASE t_fbl5n-shkzg.
      WHEN 'S'."+
        efre = efre + t_fbl5n-dmshb.
      WHEN 'H'."-
        efre = efre - t_fbl5n-dmshb.
    ENDCASE.
  ENDLOOP.
  "Dudoso Cobro
  LOOP AT t_fbl5n WHERE umskz = 'E'.
    duco = duco + t_fbl5n-dmshb.
    IF fecha_venc < t_fbl5n-faedt.
      duco_nvenc = duco_nvenc + t_fbl5n-dmshb.
    ELSE.
      duco_venc = duco_venc + t_fbl5n-dmshb.
    ENDIF.
    DELETE t_fbl5n.
  ENDLOOP.

  "Documentacion Exportacion PDTES y Remesados
  DATA l_zexp_remesas TYPE zexp_remesas.
  LOOP AT t_fbl5n WHERE zlsch = '4' OR zlsch = '5' OR zlsch = '6'.
    SELECT SINGLE * INTO l_zexp_remesas FROM zexp_remesas
      WHERE bukrs = t_fbl5n-bukrs
        AND belnr = t_fbl5n-belnr
        AND gjahr = t_fbl5n-gjahr
        AND buzei = t_fbl5n-buzei.
    IF sy-subrc = 0.
      IF l_zexp_remesas-estado = '0'.
        CASE t_fbl5n-shkzg.
          WHEN 'S'."+
            doep = doep + t_fbl5n-dmshb.
            IF fecha_venc < t_fbl5n-faedt.
              doep_nvenc = doep_nvenc + t_fbl5n-dmshb.
            ELSE.
              doep_venc = doep_venc + t_fbl5n-dmshb.
            ENDIF.
          WHEN 'H'."-
            doep = doep - t_fbl5n-dmshb.
            IF fecha_venc < t_fbl5n-faedt.
              doep_nvenc = doep_nvenc - t_fbl5n-dmshb.
            ELSE.
              doep_venc = doep_venc - t_fbl5n-dmshb.
            ENDIF.
        ENDCASE.
      ELSEIF l_zexp_remesas-estado = '1'.
        CASE t_fbl5n-shkzg.
          WHEN 'S'."+
            doer = doer + t_fbl5n-dmshb.
            IF fecha_venc < t_fbl5n-faedt.
              doer_nvenc = doer_nvenc + t_fbl5n-dmshb.
            ELSE.
              doer_venc = doer_venc + t_fbl5n-dmshb.
            ENDIF.
          WHEN 'H'."-
            doer = doer - t_fbl5n-dmshb.
            IF fecha_venc < t_fbl5n-faedt.
              doer_nvenc = doer_nvenc - t_fbl5n-dmshb.
            ELSE.
              doer_venc = doer_venc - t_fbl5n-dmshb.
            ENDIF.
        ENDCASE.
      ENDIF.
    ENDIF.
  ENDLOOP.

  "Gastos Impagados
  "gimp
*  DATA: ti_acdoca TYPE TABLE OF acdoca WITH HEADER LINE.
*  CLEAR ti_acdoca.
  DATA: ti_bsid_aux TYPE TABLE OF bsid WITH HEADER LINE.
  CLEAR ti_bsid_aux[].
  DATA: ti_bseg_aux TYPE TABLE OF bseg WITH HEADER LINE.
  CLEAR ti_bseg_aux[].

  SELECT * INTO TABLE ti_bsid_aux FROM bsid
    WHERE bukrs IN so_bukrs
      AND blart = 'DI'
      AND kunnr = so_kunnr
      AND bschl = '09'
      AND umskz = 'Y'.
  IF ti_bsid_aux[] IS NOT INITIAL.
    SELECT * INTO TABLE ti_bseg_aux FROM bseg FOR ALL ENTRIES IN ti_bsid_aux
      WHERE gjahr = ti_bsid_aux-gjahr
        AND belnr = ti_bsid_aux-belnr
        "AND buzei = ti_bsid_aux-buzei
        AND bukrs = ti_bsid_aux-bukrs
        AND hkont = '6260000001'.
  ENDIF.
*  SELECT * INTO TABLE ti_acdoca FROM acdoca
*    WHERE rbukrs IN so_bukrs
*      AND blart = 'DI'
*      AND kunnr = so_kunnr
*      AND racct = '6260000001'
*      AND bschl = '09'
*      AND umskz = 'Y'.

  LOOP AT ti_bseg_aux."ti_acdoca.
*    CASE ti_bseg_aux-shkzg."ti_acdoca-co_belkz.
*      WHEN 'S'."+
    gimp = gimp + ti_bseg_aux-dmbtr."ti_acdoca-tsl.
*      WHEN 'H'."-
*        gimp = gimp - ti_bseg_aux-dmbtr."acdoca-tsl.
*    ENDCASE.
  ENDLOOP.

  "Cartera
*  LOOP AT t_fbl5n WHERE umskz = 'D' OR umskz = 'L' OR umskz = 'S' OR umskz = 'U'.
*  ENDLOOP.

*--- Cartera de Cheques / Pagares / Letras aceptadas / Descuento
  LOOP AT t_fbl5n
    WHERE ( umskz = 'L'
      OR umskz = 'D'
      OR umskz = 'S'
      OR umskz = 'U' )
      AND ( augbl IS INITIAL OR augdt >= fecha_venc )
      AND gjahr <= gp_gjahr.
    DELETE t_fbl5n.
  ENDLOOP.

  CLEAR pdte.
  DATA lv_belnr TYPE belnr_d.

  LOOP AT t_fbl5n.
*    CASE t_fbl5n-shkzg.
*      WHEN 'S'."+
    "JVM - ini - Si son apuntes estadísticos del desarrollo ZSFID006 no deben mostrarse
    "como pendiente, sino como dudosos
*************    CLEAR lv_belnr.
*************    SELECT SINGLE belnr
*************      INTO lv_belnr
*************      FROM zsfit006_estad
*************      WHERE belnr eq t_fbl5n-belnr
*************      AND bukrs eq t_fbl5n-bukrs
*************      AND gjahr eq t_fbl5n-gjahr
*************      AND xloek eq space.
***    IF sy-subrc <> 0.
    pdte = pdte + t_fbl5n-dmshb.
*************    ELSE.
*************      duco = duco + t_fbl5n-dmshb.
*************    ENDIF.

*      WHEN 'H'."-
*        pdte = pdte - t_fbl5n-dmshb.
*    ENDCASE.
  ENDLOOP.

  pabo = abon.

  PERFORM calcular_tabla_totales.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  RECOGER_PARAMETRIZACION
*&---------------------------------------------------------------------*
FORM recoger_parametrizacion.

  CLEAR: ti_zssdt306a[], ti_zssdt306b[].

  SELECT * INTO TABLE ti_zssdt306a FROM zssdt306a.
  SELECT * INTO TABLE ti_zssdt306b FROM zssdt306b.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  RELLENAR_VACIOS
*&---------------------------------------------------------------------*
FORM rellenar_vacios TABLES pt_fbl5n STRUCTURE rfpos.

  LOOP AT pt_fbl5n.
    IF pt_fbl5n-zzname1 IS INITIAL.
      SELECT SINGLE name1 INTO pt_fbl5n-zzname1 FROM kna1
        WHERE kunnr EQ so_kunnr.
    ENDIF.

*    IF pt_fbl5n-zzclase_doc IS INITIAL.
*      SELECT SINGLE ltext INTO pt_fbl5n-zzclase_doc FROM t003t
*        WHERE blart = pt_fbl5n-blart
*          AND spras = sy-langu.
*    ENDIF.
*
*    IF pt_fbl5n-zzvia_pago IS INITIAL.
*      SELECT SINGLE text1 INTO pt_fbl5n-zzvia_pago FROM t042z
*        WHERE zlsch = pt_fbl5n-zlsch
*          AND land1 = 'ES'.
*    ENDIF.
*
*    IF pt_fbl5n-zzcme IS INITIAL.
*      SELECT SINGLE ltext INTO pt_fbl5n-zzcme FROM t074t
*        WHERE koart = pt_fbl5n-koart
*          AND shbkz = pt_fbl5n-umskz
*          AND spras = sy-langu.
*    ENDIF.

    MODIFY pt_fbl5n.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALCULAR_TABLA_TOTALES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM calcular_tabla_totales.

* Creamos la tabla de TOTALES
  CLEAR: ti_zssdt306_tot[].

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'PDTE.RECIBIR'.
  ti_zssdt306_tot-novencido = tpdr_nvenc + cpdr_nvenc + chpdr_nvenc + ppdr_nvenc + gpdr_nvenc.
  ti_zssdt306_tot-vencido = tpdr_venc + cpdr_venc + chpdr_venc + ppdr_venc + gpdr_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'RECIBIDO'.
  ti_zssdt306_tot-novencido = chrpv_nvenc + prpv_nvenc + grpv_nvenc.
  ti_zssdt306_tot-vencido = chrpv_venc + prpv_venc + grpv_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'DOC.EXPORT.PDTE.'.
  ti_zssdt306_tot-novencido = doep_nvenc.
  ti_zssdt306_tot-vencido = doep_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'REMESADO'.
  ti_zssdt306_tot-novencido = doer_nvenc + ergc_nvenc + erad_nvenc.
  ti_zssdt306_tot-vencido = doer_venc + ergc_venc + erad_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'DUDOSO COBRO'.
  ti_zssdt306_tot-novencido = duco_nvenc.
  ti_zssdt306_tot-vencido = duco_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'IMPAGADO'.
  ti_zssdt306_tot-novencido = efim_nvenc.
  ti_zssdt306_tot-vencido = efim_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'ANTICIPO'.
  ti_zssdt306_tot-novencido = antic_nvenc.
  ti_zssdt306_tot-vencido = antic_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'FI'.
  ti_zssdt306_tot-concepto = 'ABONO'.
  ti_zssdt306_tot-novencido = abon_nvenc.
  ti_zssdt306_tot-vencido = abon_venc.
  ti_zssdt306_tot-total = ti_zssdt306_tot-novencido + ti_zssdt306_tot-vencido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'GE'.
  ti_zssdt306_tot-concepto = 'ENTREGAS PDTE.'.
  ti_zssdt306_tot-novencido = entrega.
  ti_zssdt306_tot-vencido = 0.
  ti_zssdt306_tot-total = entrega.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'GE'.
  ti_zssdt306_tot-concepto = 'PEDIDOS PDTES. FACTURAR'.
  ti_zssdt306_tot-novencido = factura.
  ti_zssdt306_tot-vencido = 0.
  ti_zssdt306_tot-total = factura.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

  ti_zssdt306_tot-tipo = 'PE'.
  ti_zssdt306_tot-concepto = 'PEDIDOS'.
  ti_zssdt306_tot-novencido = pedido.
  ti_zssdt306_tot-vencido = 0.
  ti_zssdt306_tot-total = pedido.
  APPEND ti_zssdt306_tot. CLEAR ti_zssdt306_tot.

ENDFORM.
