*&---------------------------------------------------------------------*
*& Report  ZSSD_IF_OMP_HU_SEND
*&
*&---------------------------------------------------------------------*
*&
*& Inteface OMP - Transporte.
*& HU Events
*&
*& Envio mensajes.
*&
*& R.Malea. 24.05.2023
*&
*&---------------------------------------------------------------------*
REPORT zssd_if_omp_hu_send.

CONSTANTS: c_edi_extern TYPE edi_rcvpor VALUE 'OMP',
           c_rcvprn     TYPE edi_rcvprn VALUE 'OMP',
           c_ls_d       TYPE edi_rcvprt VALUE 'LS',
           c_ls_r       TYPE edi_sndprt VALUE 'LS',
           c_zmsg       TYPE edi_mestyp VALUE 'ZIF_OMP_HU',
           c_idoctp     TYPE edi_idoctp VALUE 'ZIF_OMP_HU'.
TABLES: zssd_if_omp_hu.

SELECT-OPTIONS: s_nenv FOR zssd_if_omp_hu-num_envio.

*-----------------------------------------------------------------------
* INITIALIZATION.
*-----------------------------------------------------------------------
INITIALIZATION.

*-----------------------------------------------------------------------
* START-OF-SELECTION.
*-----------------------------------------------------------------------
START-OF-SELECTION.

  DATA: vl_idoc_header       TYPE edidc,
        tl_idoc_comm_control TYPE TABLE OF edidc,
        ls_idoc_comm_control TYPE edidc,
        tl_edidd             TYPE edidd_tt,
        wl_edidd             TYPE edidd,
        vl_segnum            TYPE edidd-segnum,
        vl_psgnum            TYPE edidd-psgnum.

  DATA: wl_zcc_hu_event     TYPE  zcchandlingunitevent,
        wl_zcc_hu_eventdata TYPE  zcchandlinguniteventdata.

  DATA: vl_eventdateseqnr TYPE int4.

  CLEAR vl_eventdateseqnr.
  "
  " Selección de los mensajes.
  "
  SELECT *
    FROM zssd_if_omp_hu
    INTO TABLE @DATA(tl_zssd_if_omp_hu)
    WHERE num_envio IN @s_nenv AND
          enviado = ''.


  vl_segnum = 1.
  LOOP AT tl_zssd_if_omp_hu ASSIGNING FIELD-SYMBOL(<fs_zssd_if_omp_hu>).

    CLEAR wl_zcc_hu_event.
    wl_zcc_hu_event-operation = 'Replace'.

    CLEAR: wl_edidd.
    wl_edidd-sdata = wl_zcc_hu_event.
    wl_edidd-segnam = cl_abap_typedescr=>describe_by_data( p_data = wl_zcc_hu_event )->get_relative_name( ).
    wl_edidd-segnum = vl_segnum.
    vl_psgnum = vl_segnum.
    ADD 1 TO vl_segnum.
    APPEND wl_edidd TO tl_edidd.
    CLEAR wl_zcc_hu_event.

    CLEAR wl_zcc_hu_eventdata.
    MOVE-CORRESPONDING <fs_zssd_if_omp_hu> TO wl_zcc_hu_eventdata.

    CLEAR: wl_edidd.
    " Quitar espacios campos float.
    CONDENSE wl_zcc_hu_eventdata-footprintlength.
    CONDENSE wl_zcc_hu_eventdata-footprintwidth.
    CONDENSE wl_zcc_hu_eventdata-grossheight.
    CONDENSE wl_zcc_hu_eventdata-grossweight.
    CONDENSE wl_zcc_hu_eventdata-handlingunitquantity.
    " Añadir número secuencia.
    ADD 1 TO vl_eventdateseqnr.
    wl_zcc_hu_eventdata-eventdateseqnr = vl_eventdateseqnr.
    CONDENSE wl_zcc_hu_eventdata-eventdateseqnr.


    wl_edidd-sdata = wl_zcc_hu_eventdata.
    wl_edidd-segnam = cl_abap_typedescr=>describe_by_data( p_data = wl_zcc_hu_eventdata )->get_relative_name( ).
    wl_edidd-segnum = vl_segnum.
    wl_edidd-psgnum = vl_psgnum.
    ADD 1 TO vl_segnum.
    APPEND wl_edidd TO tl_edidd.
    CLEAR wl_zcc_hu_eventdata.

    <fs_zssd_if_omp_hu>-enviado = 'X'.

  ENDLOOP.

  "
  " Generamos IDOC
  "
  CLEAR vl_idoc_header.
  vl_idoc_header-mandt  = sy-mandt.
  vl_idoc_header-direct = '1'.
  vl_idoc_header-rcvpor = c_edi_extern.
  vl_idoc_header-rcvprt = c_ls_d.
  vl_idoc_header-rcvprn = c_rcvprn.
  vl_idoc_header-sndprt = c_ls_r.
  vl_idoc_header-sndprn = sy-uname.
  vl_idoc_header-mestyp = c_zmsg.
  vl_idoc_header-idoctp = c_idoctp.

  SORT tl_edidd BY segnum ASCENDING.

  CHECK tl_edidd IS NOT INITIAL.

  CALL FUNCTION 'MASTER_IDOC_DISTRIBUTE' "IN UPDATE TASK
    EXPORTING
      master_idoc_control            = vl_idoc_header
    TABLES
      communication_idoc_control     = tl_idoc_comm_control
      master_idoc_data               = tl_edidd
    EXCEPTIONS
      error_in_idoc_control          = 1
      error_writing_idoc_status      = 2
      error_in_idoc_data             = 3
      sending_logical_system_unknown = 4
      OTHERS                         = 5.
  IF sy-subrc <> 0.
*      "KO
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
*      "OK
    READ TABLE tl_idoc_comm_control INTO DATA(wl_control_record_out) INDEX 1.
    IF sy-subrc = 0.
      LOOP AT tl_zssd_if_omp_hu ASSIGNING <fs_zssd_if_omp_hu>.
        <fs_zssd_if_omp_hu>-enviado = 'X'.
        <fs_zssd_if_omp_hu>-docnum = wl_control_record_out-docnum.
        <fs_zssd_if_omp_hu>-credat = wl_control_record_out-credat.
        <fs_zssd_if_omp_hu>-cretim = wl_control_record_out-cretim.
      ENDLOOP.

      MODIFY zssd_if_omp_hu FROM TABLE tl_zssd_if_omp_hu.

    ENDIF.
* Hacemos un COMMIT para el Idoc
*  CALL FUNCTION 'DEQUEUE_ALL'.

    CALL FUNCTION 'DB_COMMIT'.
    CALL FUNCTION 'DEQUEUE_ALL'.
    COMMIT WORK AND WAIT.

    MESSAGE 'Proceso terminado correctamente' TYPE 'I'.
  ENDIF.
