*&---------------------------------------------------------------------*
*& Report  ZRFISD0001 PROGRAMA DE ENVIO DE AVISOS DE FACTURAS DE SD QUE NO LLEGAN A FI
*& 30.07.24 LER - 84536.
*&---------------------------------------------------------------------*
REPORT ZRFISD0001.

* Declaración de tipos y datos
TYPES: ty_vmcfa_tab TYPE TABLE OF m_vmcfa WITH EMPTY KEY.

TYPES: BEGIN OF ty_vmcfa_group,
         vkorg TYPE m_vmcfa-vkorg,
         entries TYPE ty_vmcfa_tab,
       END OF ty_vmcfa_group.

DATA: lt_vmcfa            TYPE ty_vmcfa_tab,
      lt_filtered_vmcfa   TYPE ty_vmcfa_tab,
      lt_vmcfa_groups     TYPE TABLE OF ty_vmcfa_group,
      ls_vmcfa_group      TYPE ty_vmcfa_group,
      lv_erdat            TYPE m_vmcfa-erdat,
      lv_vkorg            TYPE m_vmcfa-vkorg,
      lv_rfbsk            TYPE m_vmcfa-rfbsk,
      lv_subject          TYPE string,
      lv_body             TYPE string,
      lv_date             TYPE sy-datum,
      lv_recipients       TYPE string,
      lv_index            TYPE sy-tabix.

DATA: tl_texto            TYPE TABLE OF soli, " para el cuerpo del correo
      ls_texto            TYPE soli. " estructura para una línea del texto

* Obtenemos la fecha del día.
lv_date = sy-datum.

* Buscar en la tabla m_vmcfa y filtrar por fecha y STATUS
SELECT * FROM m_vmcfa
  INTO TABLE lt_vmcfa
  WHERE erdat >= lv_date AND ( rfbsk IS NULL OR rfbsk = 'A'
  OR rfbsk = 'B' OR rfbsk = 'F' OR rfbsk = 'G' OR rfbsk = 'I' OR rfbsk = 'K'  ) .

* Agrupar los datos seleccionados por VKORG
LOOP AT lt_vmcfa INTO DATA(ls_vmcfa).
  READ TABLE lt_vmcfa_groups WITH KEY vkorg = ls_vmcfa-vkorg TRANSPORTING NO FIELDS.
  IF sy-subrc = 0.
    lv_index = sy-tabix.
    READ TABLE lt_vmcfa_groups INTO ls_vmcfa_group INDEX lv_index.
    APPEND ls_vmcfa TO ls_vmcfa_group-entries.
    MODIFY lt_vmcfa_groups FROM ls_vmcfa_group INDEX lv_index.
  ELSE.
    CLEAR ls_vmcfa_group.
    ls_vmcfa_group-vkorg = ls_vmcfa-vkorg.
    APPEND ls_vmcfa TO ls_vmcfa_group-entries.
    APPEND ls_vmcfa_group TO lt_vmcfa_groups.
  ENDIF.
ENDLOOP.

* Enviar avisos por correo electrónico para cada grupo de VKORG
LOOP AT lt_vmcfa_groups INTO ls_vmcfa_group.
  CLEAR: lv_subject, lv_body, lv_recipients, tl_texto, ls_texto.

* Asignar destinatarios según el valor de VKORG
  CASE ls_vmcfa_group-vkorg.
    WHEN '2000'.
      lv_recipients = 'RCLOQUELL; INIEVA; LESCRIVA; ASANCHEZB; DALCANIZ'.
    WHEN '2001'.
      lv_recipients = 'CLOPEZ; INIEVA; LESCRIVA; ASANCHEZB; DALCANIZ'.
    WHEN '2004'.
      lv_recipients = 'OPEPROHPF; INIEVA; LESCRIVA; ASANCHEZB; DALCANIZ'.
    WHEN '3000'.
      lv_recipients = 'AHUERTAS; INIEVA; LESCRIVA; ASANCHEZB; DALCANIZ'.
    WHEN '3020'.
      lv_recipients = 'JPUIGDEVALL; INIEVA; LESCRIVA; ASANCHEZB; DALCANIZ'.
    WHEN OTHERS.
      CONTINUE. " Ignorar VKORG no especificado
  ENDCASE.

* Crear el asunto del correo electrónico
  lv_subject = |Aviso de facturas no integradas a FI: { ls_vmcfa_group-vkorg }|.

* Crear el cuerpo del correo electrónico
  LOOP AT ls_vmcfa_group-entries INTO ls_vmcfa.
    lv_body = |Factura: { ls_vmcfa-vbeln }, Fecha de creación: { ls_vmcfa-erdat }|.
    CLEAR ls_texto.
    ls_texto-line = lv_body.
    APPEND ls_texto TO tl_texto.
  ENDLOOP.

* Llamar a la función Z_ENVIO_MAIL para enviar el correo electrónico
  CALL FUNCTION 'Z_ENVIO_MAIL'
    EXPORTING
      subject             = lv_subject
      direccion           = lv_recipients
      sender              = 'LESCRIVA'
      forzar_mail_externo = 'X'
    TABLES
      texto               = tl_texto.

  IF sy-subrc = 0.
    WRITE: / 'Correo enviado para VKORG:', ls_vmcfa_group-vkorg.
  ELSE.
    WRITE: / 'Error al enviar el correo para VKORG:', ls_vmcfa_group-vkorg.
  ENDIF.
ENDLOOP.
