FORM FRM_KONDI_WERT_935.
*{   INSERT         HEDK928116                                        1

  TYPES: BEGIN OF ty_zf15,
           vbeln TYPE vbeln,
           tdlnr TYPE tdlnr,
           vstel TYPE vstel,
           vsbed TYPE vsbed,
           regio TYPE regio,
           pstlz TYPE pstlz,
           route TYPE route,
           kunnr TYPE kunnr.
  TYPES: END OF ty_zf15.

  TYPES: BEGIN OF ty_tarifa,
           kbetr TYPE kbetr_kond.
  TYPES: END OF ty_tarifa.

  TYPES: BEGIN OF ty_tarifa_entrega,
           vbeln TYPE vbeln_vl,
           kbetr  TYPE kbetr_kond.
  TYPES: END OF ty_tarifa_entrega.

  DATA: tt_zf15           TYPE TABLE OF ty_zf15,
        tt_tarifa         TYPE TABLE OF ty_tarifa,
        l_tarifa          TYPE ty_tarifa,
        lt_tarifa_entrega TYPE TABLE OF ty_tarifa_entrega,
        ls_tarifa_entrega TYPE ty_tarifa_entrega.

  FIELD-SYMBOLS: <gasto>     TYPE v54a0_scd_item,
                 <gasto2>    TYPE v54a0_scdd,
                 <vfsi>      TYPE  v54a0_vfsi_tab,
                 <gasto3>    TYPE v54a0_refobj,
                 <gasto4>    TYPE v54a0_refobj,
                 <gasto_tab> TYPE v54a0_refobj_tab,
                 <cond>      TYPE komv_t.

  DATA: l_precio        TYPE kwert,
        l_cant          TYPE menge_d,
        l_kbetr         TYPE kbetr,
        lv_tknum        TYPE tknum,
        t_vtts          TYPE TABLE OF vtts,
        t_vtts_p        TYPE TABLE OF vtts,
        t_vttp          TYPE TABLE OF vttp,
        l_vttp          TYPE vttp,
        t_vtsp          TYPE TABLE OF vtsp,
        l_vttk          TYPE vttk,
        t_tvro          TYPE TABLE OF tvro,
        l_precio_aux    TYPE kwert,
        l_precio_tarifa TYPE kwert,
        l_100           TYPE kbetr VALUE '100.00',
        l_kbetr_tarifa  TYPE kbetr,
        l_tarifa_act    TYPE kbetr,
        l_tot_tarifa    TYPE kbetr,
        l_total         TYPE kwert,
        l_volum_t       TYPE volum,
        l_entr_e        TYPE i,
        l_por_tarifa    TYPE menge_d,
        l_por_vol       TYPE volum,
        l_50_vol        TYPE kwert,
        l_50_tarifa     TYPE kwert,
        t_likp          TYPE TABLE OF likp,
        l_fijo          TYPE flag,
        l_etapa1k       TYPE kna1,
        lv_tpnum        TYPE tpnum,
        l_vbeln_act     TYPE vbeln.

  DATA: wa_gasto  TYPE char100 VALUE '(SAPMV54A)G_SCD_ITEM_WA',
        wa_gasto2 TYPE char100 VALUE '(SAPLV54C)C_SCD',
        wa_vsfi   TYPE char100 VALUE '(SAPLV54B)G_VFSI[]',
        wa_gasto3 TYPE char100 VALUE '(SAPLV54C)I_REFOBJ',
        cond      TYPE char100 VALUE '(SAPLV61A)TKOMV[]',
        wa_save_d TYPE char100 VALUE '(SAPLV54U)I_REFOBJ_TAB'.

  ASSIGN (wa_gasto)  TO <gasto>.
  ASSIGN (wa_gasto2) TO <gasto2>.
  ASSIGN (wa_gasto3) TO <gasto3>.
  ASSIGN (wa_vsfi)   TO <vfsi>.
  ASSIGN (wa_save_d) TO <gasto_tab>.

  IF <gasto_tab> IS ASSIGNED.
    READ TABLE <gasto_tab> ASSIGNING <gasto4> INDEX 1.
  ENDIF.

  ASSIGN (cond) TO <cond>.

  IF <gasto3> IS ASSIGNED OR <gasto> IS ASSIGNED.
    IF <gasto3> IS ASSIGNED.
      lv_tknum = <gasto3>-vttkf-tknum.
    ELSE.
      lv_tknum = <gasto>-vfkp-rebel.
    ENDIF.
  ELSE.
    IF <gasto4> IS ASSIGNED.
      lv_tknum = <gasto4>-vttkf-tknum.
    ENDIF.
  ENDIF.

  CHECK lv_tknum IS NOT INITIAL.

  SELECT * INTO TABLE t_vtts FROM vtts WHERE tknum = lv_tknum.

  SELECT tvro~route
    INTO CORRESPONDING FIELDS OF TABLE t_tvro
    FROM vttp AS vttp
    INNER JOIN likp AS likp ON vttp~vbeln = likp~vbeln
    INNER JOIN tvro AS tvro ON likp~route = tvro~route
    WHERE vttp~tknum = lv_tknum
    ORDER BY tvro~distz DESCENDING.

  READ TABLE t_tvro INTO DATA(l_tvro) INDEX 1.

  SELECT * INTO TABLE t_vtts_p FROM vtts WHERE tknum = lv_tknum ORDER BY distz DESCENDING.

  SELECT SINGLE * INTO l_vttk FROM vttk WHERE tknum = lv_tknum.

*  SELECT * INTO TABLE t_vttp FROM vttp WHERE tknum = lv_tknum.

  SELECT DISTINCT d~vbeln a~tdlnr d~vstel d~vsbed adrc~region AS regio adrc~post_code1 AS pstlz d~route d~kunnr
     INTO TABLE tt_zf15 FROM vttk AS a
     INNER JOIN vtts AS b ON a~tknum = b~tknum
     INNER JOIN vtsp AS vtsp ON b~tknum = vtsp~tknum
                            AND b~tsnum = vtsp~tsnum
     INNER JOIN vttp AS c ON c~tknum = vtsp~tknum
                         AND c~tpnum = vtsp~tpnum
     INNER JOIN likp AS d ON c~vbeln = d~vbeln
     INNER JOIN kna1 AS kna1 ON d~kunnr = kna1~kunnr
     INNER JOIN adrc AS adrc ON kna1~adrnr = adrc~addrnumber
     WHERE a~tknum = lv_tknum.

  SORT tt_zf15 BY tdlnr vstel vsbed regio pstlz.

  DELETE ADJACENT DUPLICATES FROM tt_zf15 COMPARING ALL FIELDS.

  SELECT *
    INTO TABLE t_vtsp
    FROM vtsp
    WHERE tknum = lv_tknum
    ORDER BY tsnum tpnum ASCENDING.

  CLEAR: l_fijo, l_etapa1k.

  "ASC >>> 04.03.24. Se ha cambiado la forma de calcular los gastos, para no rehacer toda la exit, pongo esté código aquí para determinar el caso de última entrega como la de mayor tarifa y no la de mayor distancia
  CLEAR: ls_tarifa_entrega, lt_tarifa_entrega[].
  LOOP AT tt_zf15 INTO DATA(l_zf15_aux).

    CLEAR: l_kbetr_tarifa.

*   Precio por tarifa
    SELECT SINGLE b~kbetr
      INTO l_kbetr_tarifa
      FROM a959 AS a
      INNER JOIN konp AS b ON a~knumh = b~knumh
                          AND a~kschl = b~kschl
     WHERE a~kschl = 'ZF00'
       AND a~tdlnr = l_zf15_aux-tdlnr
       AND a~vstel = l_zf15_aux-vstel
       AND a~vsbed = l_zf15_aux-vsbed
       AND a~route = l_zf15_aux-route
       AND b~loevm_ko = space
       AND a~datab <= sy-datum
       AND a~datbi >= sy-datum
       AND a~kbstat = space.
    IF sy-subrc <> 0.
      SELECT SINGLE b~kbetr
         INTO l_kbetr_tarifa
         FROM a958 AS a
         INNER JOIN konp AS b ON a~knumh = b~knumh
                             AND a~kschl = b~kschl
       WHERE a~kschl  = 'ZF00'
         AND a~tdlnr  = l_zf15_aux-tdlnr
         AND a~vstel  = l_zf15_aux-vstel
         AND a~add04  = l_vttk-add04
         AND a~pstlzz = l_zf15_aux-pstlz
         AND b~loevm_ko = space
         AND a~datab <= sy-datum
         AND a~datbi >= sy-datum
         AND a~kbstat = space.
    ENDIF.

    IF sy-subrc <> 0.
      SELECT SINGLE b~kbetr
         INTO l_kbetr_tarifa
         FROM a961 AS a
         INNER JOIN konp AS b ON a~knumh = b~knumh
                             AND a~kschl = b~kschl
       WHERE a~kschl  = 'ZF00'
*         AND a~tdlnr  = l_zf15_aux-tdlnr
         AND a~vstel  = l_zf15_aux-vstel
         AND a~add04  = l_vttk-add04
         AND a~pstlzz = l_zf15_aux-pstlz
         AND b~loevm_ko = space
         AND a~datab <= sy-datum
         AND a~datbi >= sy-datum
         AND a~kbstat = space.
    ENDIF.

    CLEAR ls_tarifa_entrega.
    ls_tarifa_entrega-vbeln = l_zf15_aux-vbeln.
    ls_tarifa_entrega-kbetr = l_kbetr_tarifa.
    APPEND ls_tarifa_entrega TO lt_tarifa_entrega.

  ENDLOOP.


  "Obtenemos la de mayor tarifa
  SORT lt_tarifa_entrega BY kbetr DESCENDING.
  READ TABLE lt_tarifa_entrega INTO ls_tarifa_entrega INDEX 1.

  LOOP AT tt_zf15 INTO DATA(ls_parada) WHERE vbeln NE ls_tarifa_entrega-vbeln.
    EXIT.
  ENDLOOP.

  "ASC <<< 04.03.24.
*--------------------------------------------------------------------*

  READ TABLE tt_zf15 INTO DATA(ls_actual) WITH KEY vbeln = komp-userf1_num.

  DATA(l_cont) = lines( t_vtts ).

  SELECT SINGLE b~kbetr
        INTO l_kbetr
        FROM a947 AS a
        INNER JOIN konp AS b ON a~knumh = b~knumh
                            AND a~kschl = b~kschl
       WHERE a~kschl = 'ZF20'
         AND a~tdlnr = ls_parada-tdlnr
         AND a~vstel = ls_parada-vstel
         AND a~vsbed = ls_parada-vsbed
         AND a~pstlzz = ls_parada-pstlz
         AND b~loevm_ko = space
         AND a~datab <= sy-datum
         AND a~datbi >= sy-datum
         AND a~kbstat = space.
  IF sy-subrc <> 0.
    SELECT SINGLE b~kbetr
      INTO l_kbetr
      FROM a944 AS a
      INNER JOIN konp AS b ON a~knumh = b~knumh
                          AND a~kschl = b~kschl
     WHERE a~kschl = 'ZF20'
       AND a~tdlnr = ls_parada-tdlnr
       AND a~vstel = ls_parada-vstel
       AND a~vsbed = ls_parada-vsbed
       AND a~regioz = ls_parada-regio
       AND b~loevm_ko = space
       AND a~datab <= sy-datum
       AND a~datbi >= sy-datum
       AND a~kbstat = space.
    IF sy-subrc <> 0.
      SELECT SINGLE b~kbetr
            INTO l_kbetr
            FROM a958 AS a
            INNER JOIN konp AS b ON a~knumh = b~knumh
                                AND a~kschl = b~kschl
           WHERE a~kschl = 'ZF20'
             AND a~tdlnr = ls_parada-tdlnr
             AND a~vstel = ls_parada-vstel
             AND a~add04  = l_vttk-add04
             AND a~pstlzz = ls_parada-pstlz
             AND b~loevm_ko = space
             AND a~datab <= sy-datum
             AND a~datbi >= sy-datum
             AND a~kbstat = space.
      IF sy-subrc <> 0.
        SELECT SINGLE b~kbetr
              INTO l_kbetr
              FROM a961 AS a
              INNER JOIN konp AS b ON a~knumh = b~knumh
                                  AND a~kschl = b~kschl
             WHERE a~kschl = 'ZF20'
*                     AND a~tdlnr = l_vttk-tdlnr
               AND a~vstel = ls_parada-vstel
               AND a~add04  = l_vttk-add04
               AND a~pstlzz = ls_parada-pstlz
               AND b~loevm_ko = space
               AND a~datab <= sy-datum
               AND a~datbi >= sy-datum
               AND a~kbstat = space.
      ENDIF.
    ENDIF.
  ENDIF.

*  Precio total por paradas
  l_precio = ( l_cont - 1 ) * l_kbetr.

  SELECT SINGLE b~kbetr
    INTO l_kbetr_tarifa
    FROM a959 AS a
    INNER JOIN konp AS b ON a~knumh = b~knumh
                        AND a~kschl = b~kschl
   WHERE a~kschl = 'ZF00'
     AND a~tdlnr = ls_actual-tdlnr
     AND a~vstel = ls_actual-vstel
     AND a~vsbed = ls_actual-vsbed
     AND a~route = ls_actual-route
     AND b~loevm_ko = space
     AND a~datab <= sy-datum
     AND a~datbi >= sy-datum
     AND a~kbstat = space.
  IF sy-subrc <> 0.

    SELECT SINGLE b~kbetr
     INTO l_kbetr_tarifa
     FROM a958 AS a
     INNER JOIN konp AS b ON a~knumh = b~knumh
                     AND a~kschl = b~kschl
   WHERE a~kschl = 'ZF00'
     AND a~tdlnr = ls_actual-tdlnr
     AND a~vstel = ls_actual-vstel
     AND a~add04 = l_vttk-add04
     AND a~pstlzz = ls_actual-pstlz
     AND b~loevm_ko = space
     AND a~datab <= sy-datum
     AND a~datbi >= sy-datum
     AND a~kbstat = space.
    IF sy-subrc <> 0.
      SELECT SINGLE b~kbetr
         INTO l_kbetr_tarifa
         FROM a961 AS a
         INNER JOIN konp AS b ON a~knumh = b~knumh
                         AND a~kschl = b~kschl
       WHERE a~kschl = 'ZF00'
*             AND a~tdlnr = ls_actual-tdlnr
         AND a~vstel = ls_actual-vstel
         AND a~add04 = l_vttk-add04
         AND a~pstlzz = ls_actual-pstlz
         AND b~loevm_ko = space
         AND a~datab <= sy-datum
         AND a~datbi >= sy-datum
         AND a~kbstat = space.
    ENDIF.
  ENDIF.

  READ TABLE t_vtts INTO DATA(l_vtts_f) INDEX l_cont. " última etapa

*   Volumen de las entregas
  SELECT * INTO CORRESPONDING FIELDS OF TABLE t_likp
    FROM vttp AS a
    INNER JOIN likp AS b ON a~vbeln = b~vbeln
    WHERE a~tknum = lv_tknum.

  SELECT SUM( b~volum )
    INTO l_volum_t
    FROM vttp AS a
    INNER JOIN likp AS b ON a~vbeln = b~vbeln
    WHERE a~tknum = lv_tknum.

  CLEAR: lv_tpnum.

  l_vbeln_act = komp-userf1_num.

  MOVE komp-kposn TO lv_tpnum.

  READ TABLE t_vtsp INTO DATA(l_vtsp) INDEX lv_tpnum.

  SELECT SINGLE * INTO l_vttp FROM vttp WHERE tknum = lv_tknum AND vbeln = l_vbeln_act.

  READ TABLE t_likp INTO DATA(l_likp) WITH KEY vbeln = l_vbeln_act.
  CHECK sy-subrc = 0.

  l_total = l_precio + ls_tarifa_entrega-kbetr. "l_kbetr_tarifa. Cogemos siempre la tarifa más alta

  IF l_volum_t IS NOT INITIAL.
    l_por_vol = ( l_likp-volum * l_100 / l_volum_t ) * 10.
  ENDIF.

  READ TABLE t_vtts INTO DATA(l_vtts_e) WITH KEY kunnz = l_likp-kunnr.

  SELECT SINGLE COUNT(*)
    INTO l_entr_e
    FROM vttp AS a
    INNER JOIN likp AS b ON a~vbeln = b~vbeln
    WHERE a~tknum = lv_tknum
      AND b~kunnr = l_likp-kunnr.

  CLEAR: l_tot_tarifa.

  "Calculamos totales
  LOOP AT tt_zf15 INTO DATA(l_zf15).

    CLEAR: l_kbetr_tarifa.

*   Precio por tarifa
    SELECT SINGLE b~kbetr
      INTO l_kbetr_tarifa
      FROM a959 AS a
      INNER JOIN konp AS b ON a~knumh = b~knumh
                          AND a~kschl = b~kschl
     WHERE a~kschl = 'ZF00'
       AND a~tdlnr = l_zf15-tdlnr
       AND a~vstel = l_zf15-vstel
       AND a~vsbed = l_zf15-vsbed
       AND a~route = l_zf15-route
       AND b~loevm_ko = space
       AND a~datab <= sy-datum
       AND a~datbi >= sy-datum
       AND a~kbstat = space.
    IF sy-subrc <> 0.
      SELECT SINGLE b~kbetr
         INTO l_kbetr_tarifa
         FROM a958 AS a
         INNER JOIN konp AS b ON a~knumh = b~knumh
                             AND a~kschl = b~kschl
       WHERE a~kschl  = 'ZF00'
         AND a~tdlnr  = l_zf15-tdlnr
         AND a~vstel  = l_zf15-vstel
         AND a~add04  = l_vttk-add04
         AND a~pstlzz = l_zf15-pstlz
         AND b~loevm_ko = space
         AND a~datab <= sy-datum
         AND a~datbi >= sy-datum
         AND a~kbstat = space.
    ENDIF.

    IF sy-subrc <> 0.
      SELECT SINGLE b~kbetr
         INTO l_kbetr_tarifa
         FROM a961 AS a
         INNER JOIN konp AS b ON a~knumh = b~knumh
                             AND a~kschl = b~kschl
       WHERE a~kschl  = 'ZF00'
*         AND a~tdlnr  = l_zf15-tdlnr
         AND a~vstel  = l_zf15-vstel
         AND a~add04  = l_vttk-add04
         AND a~pstlzz = l_zf15-pstlz
         AND b~loevm_ko = space
         AND a~datab <= sy-datum
         AND a~datbi >= sy-datum
         AND a~kbstat = space.
    ENDIF.

    IF l_zf15-vbeln = l_vbeln_act.
      l_tarifa_act = l_kbetr_tarifa.
    ENDIF.

    l_tot_tarifa = l_tot_tarifa + l_kbetr_tarifa.

  ENDLOOP.

  IF l_tot_tarifa IS NOT INITIAL.
    l_por_tarifa = ( l_tarifa_act * l_100 / l_tot_tarifa ) * 10.
  ENDIF.

  l_50_vol = ( ( l_por_vol * 50  ) / 100 ) / 10.
  l_50_tarifa  = ( ( l_por_tarifa  * 50  ) / 100 ) / 10.

  xkwert =  ( ( l_50_vol + l_50_tarifa ) * l_total ) / 10000.

  ykbetr = konv-kbetr = xkwert.

*  DATA(l_cont_likp) = lines( t_likp ).

*  CLEAR: l_precio_aux.

*  READ TABLE t_likp INTO DATA(l_likp_pos) INDEX l_cont_likp.

*  DATA(l_cont_vtsp) = lines( t_vtsp ).
*  READ TABLE t_vtsp INTO DATA(l_vtsp_aux) INDEX l_cont_vtsp.

*  DATA(l_cont_cond) = lines( <cond> ).

*  READ TABLE <cond> INTO DATA(l_cond) INDEX l_cont_cond.

*  DATA(l_cont_n) = l_cont_likp - 1.

*  ykbetr = konv-kbetr = xkwert = xkwert - l_precio_aux.
*  ykbetr = konv-kbetr = xkwert.


*}   INSERT
ENDFORM.
