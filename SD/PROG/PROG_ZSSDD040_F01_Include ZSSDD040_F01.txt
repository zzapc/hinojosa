*&---------------------------------------------------------------------*
*&  Include           ZSSDD040_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GT_OUTTAB  text
*----------------------------------------------------------------------*
FORM get_data  CHANGING pt_outtab TYPE ty_tab_outtab.

  CONSTANTS: lc_zprc       TYPE konv-kschl VALUE 'ZPRC',
             lc_zcmo       TYPE konv-kschl VALUE 'ZCMO',
             lc_zr01       TYPE konv-kschl VALUE 'ZR01',
             lc_lfimg_1000 TYPE lips-lfimg VALUE 1000.

  DATA: ls_outtab  TYPE ty_outtab,
        ls_auxlikp TYPE likp,
        ls_auxlips TYPE lips.
  DATA:
    lv_imp_unit     TYPE p LENGTH 13 DECIMALS 10,
    lv_imp_unit_net TYPE p LENGTH 13 DECIMALS 5,
    lv_imp_unit_ofe TYPE p LENGTH 13 DECIMALS 5,
    lv_tabname      TYPE c LENGTH 10,
    lv_subrc        TYPE sy-subrc,
    lv_datbi        TYPE kodatbi,
    lv_dummy_date   TYPE datum,
    lv_kbetr        TYPE konv-kbetr,
    lv_waers        TYPE konv-waers.

  FIELD-SYMBOLS <fs_tabline> TYPE any.
  DATA: lref_dataline TYPE REF TO data.

  IF p_ent EQ abap_true.
    "Entregas:
    SELECT a~vbeln, a~vstel, a~vkorg, a~lfart, a~inco1, a~kunnr, a~kunag, a~waerk, a~wadat_ist,
           b~posnr, b~pstyv, b~matnr, m~maktx, b~lfimg, b~meins, b~vgbel, b~vgpos, b~vtweg, b~uecha,
           c~knumv, c~spart, c~kunnr AS kunnr_k,
           d~knumh, d~kwert, d~kschl,
           e~kwmeng, e~kzwi1, e~zzmontaje,
           c~bstdk, "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
           knvp_y0~lifnr AS comercial,
           lfa1_y0~name1 AS comercial_t, b~zzbstkd
      INTO TABLE @DATA(lt_data1a)
      FROM likp AS a
      INNER JOIN vbuk AS f
        ON f~vbeln EQ a~vbeln
      INNER JOIN lips AS b
        ON b~vbeln EQ a~vbeln
      INNER JOIN vbak AS c
        ON c~vbeln EQ b~vgbel     "Pedido vtas.
      INNER JOIN konv AS d
        ON  d~knumv EQ c~knumv
        AND d~kposn EQ b~vgpos
      INNER JOIN vbap AS e
        ON  e~vbeln EQ b~vgbel    "Pedido vtas.
        AND e~posnr EQ b~vgpos
      LEFT OUTER JOIN knvp AS knvp_y0 ON knvp_y0~kunnr = c~kunnr
                                     AND knvp_y0~vkorg = c~vkorg
                                     AND knvp_y0~vtweg = c~vtweg
                                     AND knvp_y0~spart = c~spart
                                     AND knvp_y0~parvw = 'Y0'
                                     AND knvp_y0~lifnr NE ''
      LEFT OUTER JOIN lfa1 AS lfa1_y0 ON lfa1_y0~lifnr = knvp_y0~lifnr
      LEFT JOIN makt AS m ON m~matnr EQ b~matnr AND m~spras EQ @sy-langu
      WHERE a~vbeln IN @so_vbeln  "como Entrega.
        AND a~vstel IN @so_vstel
        AND a~vkorg IN @so_vkorg
        AND a~kunag IN @so_kunag
        AND a~wadat_ist IN @so_wdist
        AND f~wbstk EQ 'C'          "Entregas con SM contabilizada,
        AND f~fkstk IN ( 'A', 'B' ) "y pendientes de facturar.
*        AND d~kschl EQ @lc_zprc
        AND d~kinak EQ @space.

    DATA(lt_data1) = lt_data1a.
    REFRESH lt_data1.

    LOOP AT lt_data1a ASSIGNING FIELD-SYMBOL(<fs_data1a>) WHERE kschl EQ lc_zprc.

      APPEND INITIAL LINE TO lt_data1 ASSIGNING FIELD-SYMBOL(<ls_data1>).
      MOVE-CORRESPONDING   <fs_data1a> TO <ls_data1>.

    ENDLOOP.

    LOOP AT lt_data1a ASSIGNING FIELD-SYMBOL(<fs_data1a_add>) WHERE kschl NE lc_zprc.

      READ TABLE lt_data1 TRANSPORTING NO FIELDS WITH KEY vgbel = <fs_data1a_add>-vgbel vgpos = <fs_data1a_add>-vgpos.
      IF sy-subrc NE 0.
        APPEND INITIAL LINE TO lt_data1 ASSIGNING FIELD-SYMBOL(<ls_data1_add>).
        MOVE-CORRESPONDING   <fs_data1a_add> TO <ls_data1_add>.
      ENDIF.
    ENDLOOP.

  ENDIF.

  IF p_ped EQ abap_true.
    "Pedidos no facturados:
    SELECT a~vbeln AS vgbel, c~posnr AS vgpos, a~waerk, a~vkorg, a~vtweg, a~spart, a~knumv, a~kunnr AS kunag,
           c~matnr, c~pstyv, c~meins, c~netwr, c~kwmeng, c~zzmontaje,
           e~knumh, e~kwert, e~kschl,
           a~bstdk, "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
           knvp_y0~lifnr AS comercial,
           lfa1_y0~name1 AS comercial_t
      INTO TABLE @DATA(lt_data2a)
      FROM vbak AS a
      INNER JOIN vbuk AS b
        ON b~vbeln EQ a~vbeln
      INNER JOIN vbap AS c
        ON c~vbeln EQ b~vbeln
      INNER JOIN vbup AS d
        ON  d~vbeln EQ c~vbeln
        AND d~posnr EQ c~posnr
      INNER JOIN konv AS e
        ON  e~knumv EQ a~knumv
        AND e~kposn EQ c~posnr
      LEFT OUTER JOIN knvp AS knvp_y0 ON knvp_y0~kunnr = a~kunnr
                                     AND knvp_y0~vkorg = a~vkorg
                                     AND knvp_y0~vtweg = a~vtweg
                                     AND knvp_y0~spart = a~spart
                                     AND knvp_y0~parvw = 'Y0'
                                     AND knvp_y0~lifnr NE ''
      LEFT OUTER JOIN lfa1 AS lfa1_y0 ON lfa1_y0~lifnr = knvp_y0~lifnr
      WHERE a~vbeln IN @so_vbeln    "como Pedido.
        AND a~vkorg IN @so_vkorg
        AND a~kunnr IN @so_kunag
        AND d~fksaa IN ( 'A', 'B' ) "Sin facturar.
*      AND e~kschl EQ @lc_zprc
        AND e~kinak EQ @space.

    DATA(lt_data2) = lt_data2a.
    REFRESH lt_data2.

    LOOP AT lt_data2a ASSIGNING FIELD-SYMBOL(<fs_data2a>) WHERE kschl EQ lc_zprc.

      APPEND INITIAL LINE TO lt_data2 ASSIGNING FIELD-SYMBOL(<ls_data2>).
      MOVE-CORRESPONDING   <fs_data2a> TO <ls_data2>.

    ENDLOOP.

    LOOP AT lt_data2a ASSIGNING FIELD-SYMBOL(<fs_data2a_add>) WHERE kschl NE lc_zprc.

      READ TABLE lt_data2 TRANSPORTING NO FIELDS WITH KEY vgbel = <fs_data2a_add>-vgbel vgpos = <fs_data2a_add>-vgpos..
      IF sy-subrc NE 0.
        APPEND INITIAL LINE TO lt_data2 ASSIGNING FIELD-SYMBOL(<ls_data2_add>).
        MOVE-CORRESPONDING   <fs_data2a_add> TO <ls_data2_add>.
      ENDIF.
    ENDLOOP.

  ENDIF.

  IF lt_data1 IS NOT INITIAL OR lt_data2 IS NOT INITIAL.

    SELECT kvewe, kolnr, kotabnr
      INTO TABLE @DATA(lt_t682i)
      FROM t682i
      WHERE kappl EQ 'V'
        AND kozgf EQ @lc_zprc
      ORDER BY kolnr ASCENDING.

    SORT lt_data1 BY vbeln posnr.

    IF lt_data1 IS NOT INITIAL.
      SELECT knumv, kposn, stunr, zaehk, kschl, kbetr
        FROM konv
        INTO TABLE @DATA(t_konv_zprc)
        FOR ALL ENTRIES IN @lt_data1
        WHERE knumv EQ @lt_data1-knumv
          AND kposn EQ @lt_data1-vgpos
          AND kschl EQ 'ZPRC'.

    ENDIF.

    "Completar datos ENTREGAS:
    LOOP AT lt_data1 ASSIGNING FIELD-SYMBOL(<fs_data1>).

      "Ajuste posiciones particiones lote: no mostrar pos.partición y agrupar valores de campos necesarios en la pos original.
      "Campos: LFIMG
      LOOP AT lt_data1 INTO DATA(wa_data1_aux) WHERE vbeln EQ <fs_data1>-vbeln AND uecha EQ <fs_data1>-posnr.
        DATA(lv_index) = sy-tabix.
        <fs_data1>-lfimg = <fs_data1>-lfimg + wa_data1_aux-lfimg.

        DELETE lt_data1 INDEX lv_index.
      ENDLOOP.

      ls_outtab = CORRESPONDING #( <fs_data1> ).

      "Nombre Solicitante:
      PERFORM read_name1_kunnr USING <fs_data1>-kunag
                               CHANGING ls_outtab-name1_ag.
      "Nombre Destinatario:
      PERFORM read_name1_kunnr USING <fs_data1>-kunnr
                               CHANGING ls_outtab-name1_we.

      "Fecha Factura:
      ls_outtab-fkdat = <fs_data1>-wadat_ist.

      "Importe neto posición:
      "a-Importe unitario posición, para cálculo de netwr entrega:
      IF <fs_data1>-kwmeng NE 0.
******        lv_imp_unit     = <fs_data1>-kwert / <fs_data1>-kwmeng.
        lv_imp_unit_net = <fs_data1>-kzwi1 / <fs_data1>-kwmeng.

        READ TABLE t_konv_zprc INTO DATA(wa_konv_zprc) WITH KEY knumv = <fs_data1>-knumv kposn = <fs_data1>-vgpos.
        IF sy-subrc EQ 0.
          ls_outtab-kbetr_ent = wa_konv_zprc-kbetr.
          ls_outtab-kbetr_ent_zprc = wa_konv_zprc-kbetr.
        ELSE.
          lv_imp_unit     = <fs_data1>-kwert / <fs_data1>-kwmeng.
          ls_outtab-kbetr_ent = 0.
          ls_outtab-kbetr_ent_zprc = 0.
        ENDIF.

*        READ TABLE t_konv_zr01 INTO DATA(wa_konv_zr01) WITH KEY knumv = <fs_data1>-knumv kposn = <fs_data1>-vgpos.
*        IF sy-subrc EQ 0.
*          ls_outtab-kbetr_ent_zr01 = wa_konv_zr01-kbetr.
*        ENDIF.
*
*        ls_outtab-kbetr_ent = ls_outtab-kbetr_ent_zprc + ls_outtab-kbetr_ent_zr01

      ENDIF.

      "b-Importe neto posición pendiente facturar:
      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
*      ls_outtab-netwr = lv_imp_unit * <fs_data1>-lfimg.
*      ls_outtab-netwr = lv_imp_unit_net * ls_data1-lfimg.
      ls_outtab-netwr = lv_imp_unit_net * <fs_data1>-lfimg.
      "Tarifa 1000 UN asociado a entrega: (renombrado: Precio Pedido)
******      ls_outtab-kbetr_ent = lv_imp_unit * lc_lfimg_1000.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040


      "Tarifa 1000 UN actual (Precio Tarifa):
      "a-Primero, buscar en qué tabla existe el KNUMH original, es decir,
      "en qué tabla se ha determinado el precio.
      LOOP AT lt_t682i INTO DATA(ls_t682i).
        CONCATENATE ls_t682i-kvewe ls_t682i-kotabnr INTO lv_tabname.
        CONDENSE lv_tabname.

        "Consultar dinámicamente cada tabla hasta encontrar el registro.
        CREATE DATA lref_dataline TYPE (lv_tabname).
        ASSIGN lref_dataline->* TO <fs_tabline>.

        SELECT SINGLE *
          INTO <fs_tabline>
          FROM (lv_tabname).
*          WHERE knumh EQ <fs_data1>-knumh."INI ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040 (no tiene porque ser la misma tabla de condiciones.

        IF sy-subrc EQ 0.
          "b-Encontrada la tabla, buscar ahora en la misma tabla el KNUMH más reciente
          "con parámetros correspondientes del registro encontrado.
          ls_auxlikp = CORRESPONDING #( <fs_data1> ).
          ls_auxlips = CORRESPONDING #( <fs_data1> ).
          CLEAR lv_subrc.

          ASSIGN COMPONENT 'DATBI' OF STRUCTURE <fs_tabline> TO FIELD-SYMBOL(<fs_datbi>).
          IF <fs_datbi> IS ASSIGNED.
            lv_datbi = <fs_datbi>.
            UNASSIGN <fs_datbi>.
          ENDIF.

          IF p_fprec = 'X' OR <fs_data1>-wadat_ist IS INITIAL.. "APC20240903 Fecha precio pedido
            "INI ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
            SELECT SINGLE prsdt
              INTO @DATA(lv_prsdt)
              FROM vbkd
              WHERE vbeln EQ @<fs_data1>-vgbel.
*              AND posnr EQ @<fs_data1>-vgpos.
            "FIN ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
          ELSE.                                  "APC20240903 Fecha precio SM
            lv_prsdt = <fs_data1>-wadat_ist.     "APC20240903 Fecha precio SM
            ls_outtab-prsdt = <fs_data1>-wadat_ist.     "APC20240903 Fecha precio SM
          ENDIF.                                 "APC20240903 Fecha precio SM

          PERFORM search_new_knumh USING <fs_data1>-knumh lc_zprc lv_datbi
                                         ls_auxlikp ls_auxlips lv_tabname <fs_tabline> lv_prsdt
                                   CHANGING ls_outtab-kbetr_act   "(renombrado: Precio Tarifa)
                                            lv_subrc.

          UNASSIGN <fs_tabline>.
          FREE lref_dataline.

          IF lv_subrc IS INITIAL.
            "Precio encontrado -> Fin búsqueda.
            EXIT.
          ENDIF.
        ENDIF.

        UNASSIGN <fs_tabline>.
        FREE lref_dataline.
        CLEAR lv_datbi.
        CLEAR lv_prsdt. "ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
      ENDLOOP.  "t682i


      "INI ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
      IF <fs_data1>-lfimg = <fs_data1>-kwmeng. "En el caso de que NO haya entregas parciales, mejor no calculo importes, sino que los tomo directos y evito redondeos.
        ls_outtab-netwr = <fs_data1>-kzwi1.
*        ls_outtab-kbetr_ent = ls_outtab-kbetr_act. " PMP 03.10.2024
      ENDIF.
      "FIN ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040

      ">Nuevo: Si VBAP-ZZMONTAJE = 'X', a los campos Precio Pedido y Precio Tarifa se
      "debe sumar la condición ZCMO que correspondería a dicho pedido.
      IF <fs_data1>-zzmontaje EQ 'X'.
        CLEAR: lv_kbetr, lv_waers.
        PERFORM read_condition_konv USING lc_zr01 <fs_data1>-knumv <fs_data1>-vgbel <fs_data1>-vgpos
                                    CHANGING lv_kbetr lv_waers.
        IF lv_kbetr IS NOT INITIAL AND <fs_data1>-waerk EQ lv_waers.
          ls_outtab-kbetr_ent = ls_outtab-kbetr_ent + lv_kbetr. "Precio Pedido + recargo montaje.
          ls_outtab-kbetr_act = ls_outtab-kbetr_act + lv_kbetr. "Precio Tarifa + recargo montaje.
          ls_outtab-kbetr_ent_zr01 = lv_kbetr.
        ENDIF.
      ENDIF.
      "<sumar coste montaje.

      "Filtrar selección: solo con diferencias.
      IF ( p_dif EQ 'X' AND ls_outtab-kbetr_ent EQ ls_outtab-kbetr_act AND ls_outtab-kbetr_ent_zprc NE 0 ).
        IF ( <fs_data1>-zzmontaje EQ 'X' AND lv_kbetr NE 0 ) OR <fs_data1>-zzmontaje NE 'X'.
          CLEAR ls_outtab.
          CONTINUE.
        ENDIF.
      ENDIF.

      "Indicador diferencia de precios: Rojo -> hay diferencias.
      PERFORM set_icon USING ls_outtab-kbetr_ent ls_outtab-kbetr_act ls_outtab-kbetr_ent_zr01 ls_outtab-kbetr_ent_zprc <fs_data1>-zzmontaje CHANGING ls_outtab-icon.


      "Campos adicionales: Oferta, Pos.oferta y Tarifa 1000 UN oferta:
      SELECT a~vbeln, a~angdt, a~knumv,
             b~posnr, b~kwmeng, b~matnr,
             c~kwert
        INTO TABLE @DATA(lt_oferta)
        FROM vbak AS a
        INNER JOIN vbap AS b
          ON a~vbeln EQ b~vbeln
        INNER JOIN konv AS c
          ON  c~knumv EQ a~knumv
          AND c~kposn EQ b~posnr
        WHERE a~vbtyp EQ 'B'
          AND a~kunnr EQ @<fs_data1>-kunag   "Solicitante.
          AND b~matnr EQ @<fs_data1>-matnr
          AND c~kschl EQ @lc_zprc
          AND c~kinak EQ @space.

      IF sy-subrc EQ 0.

        " Inicio BG 25.01.2024 GAPSD050 clase de condición "Comisión Royalties"
        SELECT knumv, kposn, kschl, kbetr, waers, kwert
         FROM konv
         INTO TABLE @DATA(itab_konv)
          FOR ALL ENTRIES IN @lt_oferta
          WHERE knumv = @lt_oferta-knumv
            AND kposn = @lt_oferta-posnr
            AND kschl = 'ZCR1'.
        " Fin BG 25.01.2024 GAPSD050 clase de condición "Comisión Royalties"

        SORT lt_oferta BY angdt DESCENDING.
        DATA(ls_oferta) = VALUE #( lt_oferta[ 1 ] ).

        IF ls_oferta-kwmeng NE 0.
          lv_imp_unit_ofe = ls_oferta-kwert / ls_oferta-kwmeng.
        ENDIF.

        "Oferta:
        ls_outtab-vbeln_ofe = ls_oferta-vbeln.

        "Pos.oferta:
        ls_outtab-posnr_ofe = ls_oferta-posnr.

        "Tarifa 1000 UN oferta: (renombrado: Precio Oferta)
        ls_outtab-kbetr_ofe = lv_imp_unit_ofe * lc_lfimg_1000.

        " Inicio BG 25.01.2024 GAPSD050 clase de condición "Comisión Royalties"
        READ TABLE itab_konv INTO DATA(ls_konv) WITH KEY knumv = ls_oferta-knumv
                                                         kposn = ls_oferta-posnr.
        IF sy-subrc EQ 0.
          ls_outtab-zcr1  = ls_konv-kbetr.
          ls_outtab-zcr1v = ls_konv-kwert.
        ENDIF.
        CLEAR ls_konv.
        " Fin BG 25.01.2024 GAPSD050 clase de condición "Comisión Royalties"
      ENDIF.  "búsq.Ofertas.

      "Fecha de precio, Período de facturación:
      PERFORM read_order_dates USING <fs_data1>-vgbel <fs_data1>-vgpos
                               CHANGING ls_outtab-prsdt lv_dummy_date.
      "ls_outtab-perfk. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      IF p_fsm = 'X' AND NOT <fs_data1>-wadat_ist IS INITIAL.. "APC20240903 Fecha precio SM
        ls_outtab-prsdt = <fs_data1>-wadat_ist.     "APC20240903 Fecha precio SM
      ENDIF.                                 "APC20240903 Fecha precio SM

      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
      "Texto Período facturación (Calendario fábrica).
*      PERFORM read_perfk_text USING ls_outtab-perfk CHANGING ls_outtab-perfk_ltext.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      "Material cliente:
      PERFORM read_knmt USING <fs_data1>-vkorg <fs_data1>-vtweg <fs_data1>-kunnr <fs_data1>-matnr
                        CHANGING ls_outtab-kdmat.

      "Nro Pedido Cliente:
      PERFORM read_order USING <fs_data1>-vgbel <fs_data1>-vgpos   CHANGING ls_outtab-bstkd.

      "Mercado Cliente, Agrupación Factura:
      PERFORM read_knvv USING <fs_data1>-kunag <fs_data1>-vkorg <fs_data1>-vtweg <fs_data1>-spart
                        CHANGING ls_outtab-brsch ls_outtab-bezei
                         ls_outtab-kvgr4 "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
                         ls_outtab-zbezei. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

*                  " INI PMP 01.10.2024 Recuperamos BRSCH BEZEI desde KNA1
*                  SELECT SINGLE brsch
*                    FROM kna1
*                    INTO ls_outtab-brsch
*                    WHERE kunnr EQ <fs_data1>-kunag.
*                    " FIN 01.10.2024 Recuperamos BRSCH BEZEI desde KNA1



      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
      "Escalado
      SELECT knumh
        INTO TABLE @DATA(lt_escala)
        FROM konm
        WHERE knumh EQ @<fs_data1>-knumh.
      IF sy-subrc = 0.
        ls_outtab-zzescalado = 'X'.
      ENDIF.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      APPEND ls_outtab TO pt_outtab.
      CLEAR ls_outtab.

      CLEAR: lv_imp_unit, lv_imp_unit_net, lv_imp_unit_ofe.
      FREE: lt_oferta.
    ENDLOOP.  "lt_data1


    "Completar datos PEDIDOS:
    SORT lt_data2 BY vgbel vgpos.

    IF lt_data2 IS NOT INITIAL.
      SELECT vbeln, posnr, bstkd
        INTO TABLE @DATA(tl_vbkd)
        FROM vbkd
        FOR ALL ENTRIES IN @lt_data2
        WHERE vbeln = @lt_data2-vgbel.
    ENDIF.



    LOOP AT lt_data2 INTO DATA(ls_data2).
      ls_outtab = CORRESPONDING #( ls_data2 ).

      READ TABLE tl_vbkd ASSIGNING FIELD-SYMBOL(<fs_vbkd>) WITH KEY vbeln = ls_data2-vgbel
                                                                    posnr = ls_data2-vgpos.
      IF sy-subrc <> 0.
        READ TABLE tl_vbkd ASSIGNING <fs_vbkd> WITH KEY vbeln = ls_data2-vgbel
                                                        posnr = '000000'.
      ENDIF.
      IF sy-subrc = 0.
        ls_outtab-zzbstkd = <fs_vbkd>-bstkd.
      ENDIF.


      "Nombre Solicitante:
      PERFORM read_name1_kunnr USING ls_data2-kunag
                               CHANGING ls_outtab-name1_ag.
      "Cantidad:
      ls_outtab-lfimg = ls_data2-kwmeng.

      ">
      "Importe neto posición:
      "a-Importe unitario posición, para cálculo de netwr entrega:
      IF ls_data2-kwmeng NE 0.
        lv_imp_unit = ls_data2-kwert / ls_data2-kwmeng.
      ENDIF.

      "b-Importe neto posición pendiente facturar:
      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
*      ls_outtab-netwr = lv_imp_unit * ls_data2-kwmeng. "Cuando es Pedido, es lo mismo que el VBAP-NETWR, hacer cálculo igualmente.
      ls_outtab-netwr = lv_imp_unit_net * ls_data2-kwmeng.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      "(Precio Pedido):
      ls_outtab-kbetr_ent = lv_imp_unit * lc_lfimg_1000.

      "(Precio Tarifa):
      "a-Primero, buscar en qué tabla existe el KNUMH original, es decir,
      "en qué tabla se ha determinado el precio.
      LOOP AT lt_t682i INTO ls_t682i.
        CONCATENATE ls_t682i-kvewe ls_t682i-kotabnr INTO lv_tabname.
        CONDENSE lv_tabname.

        "Consultar dinámicamente cada tabla hasta encontrar el registro.
        CREATE DATA lref_dataline TYPE (lv_tabname).
        ASSIGN lref_dataline->* TO <fs_tabline>.

        SELECT SINGLE *
          INTO <fs_tabline>
          FROM (lv_tabname)
          WHERE knumh EQ ls_data2-knumh.  "*

        IF sy-subrc EQ 0.
          "b-Encontrada la tabla, buscar ahora en la misma tabla el KNUMH más reciente
          "con parámetros correspondientes del registro encontrado.
          ls_auxlikp = CORRESPONDING #( ls_data2 ).
          ls_auxlips = CORRESPONDING #( ls_data2 ).
          CLEAR lv_subrc.

          ASSIGN COMPONENT 'DATBI' OF STRUCTURE <fs_tabline> TO <fs_datbi>.
          IF <fs_datbi> IS ASSIGNED.
            lv_datbi = <fs_datbi>.
            UNASSIGN <fs_datbi>.
          ENDIF.



          "INI ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
          SELECT SINGLE prsdt
            INTO (lv_prsdt)
            FROM vbkd
            WHERE vbeln EQ ls_data2-vgbel.
*              AND posnr EQ <fs_data1>-vgpos.
          "FIN ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040

          PERFORM search_new_knumh USING ls_data2-knumh lc_zprc lv_datbi
                                         ls_auxlikp ls_auxlips lv_tabname <fs_tabline> lv_prsdt
                                   CHANGING ls_outtab-kbetr_act   "(renombrado: Precio Tarifa)
                                            lv_subrc.
          UNASSIGN <fs_tabline>.
          FREE lref_dataline.

          IF lv_subrc IS INITIAL.
            "Precio encontrado -> Fin búsqueda.
            EXIT.
          ENDIF.
        ENDIF.

        UNASSIGN <fs_tabline>.
        FREE lref_dataline.
        CLEAR lv_datbi.
      ENDLOOP.  "t682i

      ">Nuevo: Si VBAP-ZZMONTAJE = 'X', a los campos Precio Pedido y Precio Tarifa se
      "debe sumar la condición ZCMO que correspondería a dicho pedido.
      IF <ls_data2>-zzmontaje EQ 'X'.
        CLEAR: lv_kbetr, lv_waers.
        PERFORM read_condition_konv USING lc_zr01 <ls_data2>-knumv <ls_data2>-vgbel <ls_data2>-vgpos
                                    CHANGING lv_kbetr lv_waers.
        IF lv_kbetr IS NOT INITIAL AND <ls_data2>-waerk EQ lv_waers.
          ls_outtab-kbetr_ent = ls_outtab-kbetr_ent + lv_kbetr. "Precio Pedido + recargo montaje.
          ls_outtab-kbetr_act = ls_outtab-kbetr_act + lv_kbetr. "Precio Tarifa + recargo montaje.
          ls_outtab-kbetr_ent_zr01 = lv_kbetr.
        ENDIF.
      ENDIF.
      "<sumar coste montaje.

      "Filtrar selección: solo con diferencias.
      IF ( p_dif EQ 'X' AND ls_outtab-kbetr_ent EQ ls_outtab-kbetr_act AND ls_outtab-kbetr_ent_zprc NE 0 ).
        IF ( <fs_data1>-zzmontaje EQ 'X' AND lv_kbetr NE 0 ) OR <fs_data1>-zzmontaje NE 'X'.
          CLEAR ls_outtab.
          CONTINUE.
        ENDIF.
      ENDIF.

      "Indicador diferencia de precios: Rojo -> hay diferencias.
      PERFORM set_icon USING ls_outtab-kbetr_ent ls_outtab-kbetr_act ls_outtab-kbetr_ent_zr01 ls_outtab-kbetr_ent_zprc <ls_data2>-zzmontaje CHANGING ls_outtab-icon.

      "Campos adicionales: Oferta, Pos.oferta y Tarifa 1000 UN oferta:
      SELECT a~vbeln, a~angdt, a~knumv,
             b~posnr, b~kwmeng, b~matnr,
             c~kwert
        INTO TABLE @lt_oferta
        FROM vbak AS a
        INNER JOIN vbap AS b
          ON a~vbeln EQ b~vbeln
        INNER JOIN konv AS c
          ON  c~knumv EQ a~knumv
          AND c~kposn EQ b~posnr
        WHERE a~vbtyp EQ 'B'
          AND a~kunnr EQ @ls_data2-kunag   "Solicitante.
          AND b~matnr EQ @ls_data2-matnr
          AND c~kschl EQ @lc_zprc
          AND c~kinak EQ @space.

      IF sy-subrc EQ 0.

        ">GAPSD050 clase de condición "Comisión Royalties"
        SELECT knumv, kposn, kschl, kbetr, waers, kwert
         FROM konv
         INTO TABLE @itab_konv
          FOR ALL ENTRIES IN @lt_oferta
          WHERE knumv = @lt_oferta-knumv
            AND kposn = @lt_oferta-posnr
            AND kschl = 'ZCR1'.
        "<GAPSD050 clase de condición "Comisión Royalties"

        SORT lt_oferta BY angdt DESCENDING.
        ls_oferta = lt_oferta[ 1 ].

        IF ls_oferta-kwmeng NE 0.
          lv_imp_unit_ofe = ls_oferta-kwert / ls_oferta-kwmeng.
        ENDIF.

        "Oferta:
        ls_outtab-vbeln_ofe = ls_oferta-vbeln.

        "Pos.oferta:
        ls_outtab-posnr_ofe = ls_oferta-posnr.

        "Tarifa 1000 UN oferta: (renombrado: Precio Oferta)
        ls_outtab-kbetr_ofe = lv_imp_unit_ofe * lc_lfimg_1000.

        ">GAPSD050 clase de condición "Comisión Royalties"
        READ TABLE itab_konv INTO ls_konv WITH KEY knumv = ls_oferta-knumv
                                                   kposn = ls_oferta-posnr.
        IF sy-subrc EQ 0.
          ls_outtab-zcr1  = ls_konv-kbetr.
          ls_outtab-zcr1v = ls_konv-kwert.
        ENDIF.
        CLEAR ls_konv.
        "<GAPSD050 clase de condición "Comisión Royalties"
      ENDIF.  "búsq.Ofertas.
      "<

      "Fecha de precio, Fecha de Factura (propuesta para Pedido no facturado), Período de facturación:
      PERFORM read_order_dates USING ls_data2-vgbel ls_data2-vgpos
                               CHANGING ls_outtab-prsdt ls_outtab-fkdat.
      "ls_outtab-perfk. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
      "Texto Período facturación (Calendario fábrica).
*      PERFORM read_perfk_text USING ls_outtab-perfk CHANGING ls_outtab-perfk_ltext.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      "Material cliente:
      PERFORM read_knmt USING ls_data2-vkorg ls_data2-vtweg ls_data2-kunag ls_data2-matnr
                        CHANGING ls_outtab-kdmat.

      "Nro Pedido Cliente:
      PERFORM read_order USING ls_data2-vgbel ls_data2-vgpos CHANGING ls_outtab-bstkd.

      "Mercado Cliente, Agrupación Factura:
      PERFORM read_knvv USING ls_data2-kunag ls_data2-vkorg ls_data2-vtweg ls_data2-spart
                        CHANGING ls_outtab-brsch ls_outtab-bezei
                          ls_outtab-kvgr4 "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
                          ls_outtab-zbezei. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
      "Escalado
      SELECT knumh
        INTO TABLE lt_escala
        FROM konm
        WHERE knumh EQ ls_data2-knumh.
      IF sy-subrc = 0.
        ls_outtab-zzescalado = 'X'.
      ENDIF.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

      APPEND ls_outtab TO pt_outtab.
      CLEAR ls_outtab.

      CLEAR: lv_imp_unit, lv_imp_unit_ofe.
      FREE: lt_oferta.
    ENDLOOP. "lt_data2

  ENDIF.

  IF so_brsch IS NOT INITIAL.
    DELETE gt_outtab WHERE brsch NOT IN so_brsch.
  ENDIF.

  IF so_kvgr4 IS NOT INITIAL.
    DELETE gt_outtab WHERE kvgr4 NOT IN so_kvgr4.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_NAME1_KUNNR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_OUTTAB_KUNAG  text
*      <--P_LS_OUTTAB_NAME1_AG  text
*----------------------------------------------------------------------*
FORM read_name1_kunnr  USING    p_kunnr TYPE kna1-kunnr
                       CHANGING p_name1 TYPE kna1-name1.

  IF p_kunnr IS NOT INITIAL.
    SELECT SINGLE name1
      INTO p_name1
      FROM kna1
      WHERE kunnr EQ p_kunnr.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_NEW_KNUMH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_LIKP_AUX  text
*      -->P_LS_LIPS_AUX  text
*      -->P_LV_TABNAME  text
*      -->P_<FS_TABLINE>  text
*      <--P_LS_OUTTAB_KBETR_ACT  text
*----------------------------------------------------------------------*
FORM search_new_knumh  USING    p_knumh   TYPE knumh
                                p_kschl   TYPE kschl
                                p_datbi   TYPE kodatbi
                                ps_likp   TYPE likp
                                ps_lips   TYPE lips
                                p_tabname TYPE char10
                                pf_tabline TYPE any
                                p_prsdt   TYPE prsdt
                       CHANGING p_kbetr TYPE kbetr
                                p_subrc TYPE sy-subrc.
  TYPES: BEGIN OF ty_kotab,
           datbi TYPE kodatbi,
           datab TYPE kodatab, "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
           knumh TYPE knumh,
         END OF ty_kotab,
         ty_tab_kotab TYPE TABLE OF ty_kotab.

  FIELD-SYMBOLS: <fs_fieldvalue> TYPE any.

  DATA: lt_kotab          TYPE ty_tab_kotab.
  DATA: lv_knumh         TYPE knumh,
        lv_condition     TYPE string,  "Para búsqueda KNUMH diferente y más reciente.
        lv_condition2    TYPE string,  "Para búsqueda mismo KNUMH.
        lv_condition_aux TYPE string.
  DATA: lref_strucdescr TYPE REF TO cl_abap_structdescr.
  DATA: lr_fieldnames   TYPE RANGE OF abap_compdescr-name.

  p_subrc = 1.

  "Campos no considerados a chequear en estructura Axxx o no disponibles en likp/lips.
  lr_fieldnames = VALUE #( sign = 'I' option = 'EQ' ( low = 'MANDT' ) ( low = 'KAPPL' ) ( low = 'KSCHL' ) ( low = 'KFRST' )
                                                    ( low = 'DATBI' ) ( low = 'DATAB' ) ( low = 'KBSTAT' ) ( low = 'KNUMH' ) ).

  lref_strucdescr ?= cl_abap_typedescr=>describe_by_data( pf_tabline ).

  "Construir condición WHERE según la estructura de cada tabla Axxx:
  "Valores tomados de búsqueda inicial LIKP, LIPS, etc, aunque deberían coincidir exactamente con los mismos
  "valores del registro KNUMH previo ya encontrado (estaría todo en pf_tabline, no habría que buscar).

  "De todos modos, buscando con valores de LIKP, LIPS, etc:
  IF lref_strucdescr IS BOUND.
    CONCATENATE 'KAPPL EQ ''V''' 'AND KSCHL EQ ''' INTO lv_condition SEPARATED BY space.
    CONCATENATE lv_condition p_kschl '''' INTO lv_condition.

    LOOP AT lref_strucdescr->components INTO DATA(ls_components) WHERE name NOT IN lr_fieldnames.

      "Caso especial KUNWE es LIKP-KUNNR
      IF ls_components-name EQ 'KUNWE'.
        ASSIGN COMPONENT 'KUNNR' OF STRUCTURE ps_likp TO <fs_fieldvalue>.

        "Caso especial KUNNR es LIKP-KUNAG
      ELSEIF ls_components-name EQ 'KUNNR'.
        ASSIGN COMPONENT 'KUNAG' OF STRUCTURE ps_likp TO <fs_fieldvalue>.

      ELSE.
        "Asignación dinámica de campos genéricos y valores según estructura tabla encontrada AXXX:
        ASSIGN COMPONENT ls_components-name OF STRUCTURE ps_likp TO <fs_fieldvalue>.
        IF sy-subrc NE 0.
          ASSIGN COMPONENT ls_components-name OF STRUCTURE ps_lips TO <fs_fieldvalue>.
        ENDIF.
      ENDIF.

      IF sy-subrc EQ 0.
        CONCATENATE lv_condition 'AND' ls_components-name 'EQ ''' INTO lv_condition SEPARATED BY space.
        CONCATENATE lv_condition <fs_fieldvalue> '''' INTO lv_condition.
      ENDIF.

      UNASSIGN <fs_fieldvalue>.
    ENDLOOP.

*    CONCATENATE lv_condition ' AND KFRST EQ @space' INTO lv_condition.
    CONCATENATE lv_condition ' AND KFRST EQ @space' INTO lv_condition_aux.

    "Para KNUMH distinto al original con fecha DATBI más reciente:
    "INI ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
*    CONCATENATE lv_condition_aux ' AND DATBI GT ''' p_datbi '''' INTO lv_condition.
*    CONCATENATE lv_condition ' AND KNUMH NE ' ' ''' p_knumh '''' INTO lv_condition. "INI ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040 (no tiene porque ser la misma tabla de condiciones.
*    CONCATENATE lv_condition_aux ' AND KNUMH NE ' ' ''' p_knumh '''' INTO lv_condition.

    "Para KNUMH original, en caso ser necesario:
*    CONCATENATE lv_condition_aux ' AND DATBI EQ ''' p_datbi '''' INTO lv_condition2.
*    CONCATENATE lv_condition2 ' AND KNUMH EQ ' ' ''' p_knumh '''' INTO lv_condition2.
    "FIN ARA - Ajustes 25.06.24 Hinojosa. Modificaciones GAPSD040
  ENDIF.


  "Buscar KNUMH distinto al original con fecha DATBI más reciente:
  "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

  SELECT datbi, datab, knumh
    INTO TABLE @lt_kotab
    FROM (p_tabname)
    WHERE (lv_condition)
    AND datab <= @p_prsdt "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
    AND datbi > @p_prsdt  "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
    ORDER BY datbi DESCENDING.

*  SELECT datbi, datab, knumh
*    INTO TABLE @lt_kotab
*    FROM (p_tabname)
*    WHERE (lv_condition)
*    AND datab >= @p_prsdt "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
*    ORDER BY datbi DESCENDING.
*
*  IF sy-subrc NE 0.
*    "Buscar KNUMH original, en caso ser necesario:
*    SELECT datbi, datab, knumh
*      INTO TABLE @lt_kotab
*      FROM (p_tabname)
*      WHERE (lv_condition2)
*      AND datab >= @p_prsdt "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
*      ORDER BY datbi DESCENDING.
*  ENDIF.
  "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040


  IF lt_kotab IS NOT INITIAL.

    lv_knumh = lt_kotab[ 1 ]-knumh.

    "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
*    "Buscar primero si tiene escalas en KONM: hasta cantidad de escala KSTBM.
*     SELECT *
*      INTO TABLE @DATA(lt_konm)
*      FROM konm
*      WHERE knumh EQ @lv_knumh
*        AND kstbm LE @ps_lips-lfimg.  "Cant.entrega.

    "Buscar primero si tiene entrada en KONP
    SELECT SINGLE kbetr
      INTO @DATA(lv_kbetr)
      FROM konp
      WHERE knumh EQ @lv_knumh
      AND loevm_ko EQ ''.

    IF sy-subrc EQ 0.
      p_kbetr = lv_kbetr.
      p_subrc = 0.
    ENDIF.
    "Después comprobamos si tiene escalas en KONM (y si tiene, tomamos su cantidad en lugar de la de KONP):
    SELECT *
     INTO TABLE @DATA(lt_konm)
     FROM konm
     WHERE knumh EQ @lv_knumh
       AND kstbm LE @ps_lips-lfimg.  "Cant.entrega.

    "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

    IF sy-subrc EQ 0.

      SORT lt_konm BY kstbm DESCENDING.
      p_kbetr = lt_konm[ 1 ]-kbetr.
      p_subrc = 0.

      "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
      "Si no hay escalas, ir a KONP:
*    IF lt_konm IS INITIAL.
*      SELECT SINGLE kbetr
*        INTO @DATA(lv_kbetr)
*        FROM konp
*        WHERE knumh EQ @lv_knumh.
*
*      IF sy-subrc EQ 0.
*        p_kbetr = lv_kbetr.
*        p_subrc = 0.
*      ENDIF.
      "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ICON
*&---------------------------------------------------------------------*
*       Indicador tipo semáforo: Hay diferencia de precios?
*----------------------------------------------------------------------*
*      -->P_LS_OUTTAB_KBETR_ENT  text
*      -->P_LS_OUTTAB_KBETR_ACT  text
*      <--P_LS_OUTTAB_ICON  text
*----------------------------------------------------------------------*
FORM set_icon  USING  p_kbetr1 TYPE zssdst040_prefact_alv-kbetr_ent
                      p_kbetr2 TYPE zssdst040_prefact_alv-kbetr_act
                      p_kbetr  TYPE konv-kbetr
                      p_zprc TYPE zssdst040_prefact_alv-kbetr_ent
                      p_montaje TYPE vbap-zzmontaje
               CHANGING p_icon TYPE zssdst040_prefact_alv-icon.

*  p_icon = icon_led_inactive.
*  p_icon = icon_space.

  IF ( p_kbetr1 EQ p_kbetr2 AND p_zprc IS NOT INITIAL ).
    IF p_montaje EQ 'X' AND p_kbetr IS NOT INITIAL.
      p_icon = icon_led_green.
    ELSEIF p_montaje EQ ''.
      p_icon = icon_led_green.
    ELSE.
      p_icon = icon_led_yellow.
    ENDIF.
  ELSEIF p_zprc IS INITIAL.
    p_icon = icon_led_yellow.
  ELSEIF ( p_kbetr1 <> p_kbetr2 ).
    p_icon = icon_led_red.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_ORDER_DATES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_OUTTAB_VGBEL  text
*      -->P_LS_OUTTAB_VGPOS  text
*      <--P_LS_OUTTAB_PRSDT  text
*----------------------------------------------------------------------*
FORM read_order_dates  USING   p_vgbel TYPE lips-vgbel
                               p_vgpos TYPE lips-vgpos
                      CHANGING p_prsdt TYPE vbkd-prsdt  "Fecha de precio
                               p_fkdat TYPE vbkd-fkdat.  "Fecha de factura
  "p_perfk TYPE vbkd-perfk. "Período de facturación  "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040

  DATA: lv_posnr_init TYPE vbkd-posnr.

  IF p_vgbel IS NOT INITIAL.

    SELECT SINGLE perfk, prsdt, fkdat
      INTO @DATA(ls_vbkd)
      FROM vbkd
      WHERE vbeln EQ @p_vgbel
        AND posnr EQ @p_vgpos.

    IF sy-subrc EQ 0.
      p_prsdt = ls_vbkd-prsdt.
      p_fkdat = ls_vbkd-fkdat.
*      p_perfk = ls_vbkd-perfk. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
    ELSE.
      CLEAR lv_posnr_init.
      SELECT SINGLE perfk, prsdt, fkdat
        INTO @ls_vbkd
        FROM vbkd
        WHERE vbeln EQ @p_vgbel
          AND posnr EQ @lv_posnr_init.

      IF sy-subrc EQ 0.
        p_prsdt = ls_vbkd-prsdt.
        p_fkdat = ls_vbkd-fkdat.
*        p_perfk = ls_vbkd-perfk. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
      ENDIF.
    ENDIF.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_KNMT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_VKORG  text
*      -->P_VTWEG  text
*      -->P_KUNNR  text
*      -->P_MATNR  text
*      <--P_LS_OUTTAB_KDMAT  text
*----------------------------------------------------------------------*
FORM read_knmt  USING    p_vkorg TYPE vbak-vkorg
                         p_vtweg TYPE vbak-vtweg
                         p_kunnr TYPE vbak-kunnr
                         p_matnr TYPE vbap-matnr
                CHANGING p_kdmat TYPE zssdst040_prefact_alv-kdmat.

  SELECT SINGLE kdmat
    INTO p_kdmat
    FROM knmt
    WHERE vkorg EQ p_vkorg
      AND vtweg EQ p_vtweg
      AND kunnr EQ p_kunnr
      AND matnr EQ p_matnr.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_ORDER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA1_VGBEL  text
*      <--P_LS_OUTTAB_BSTKD  text
*----------------------------------------------------------------------*
FORM read_order  USING    p_vbeln TYPE vbak-vbeln
                          p_posnr TYPE vbap-posnr
                 CHANGING p_bstkd TYPE bstkd.
* APC20241104 Si tenemos informado a nivel de posición cogemos este dato, sino el de cabecera
*  SELECT SINGLE vbeln, posnr, bstkd
*    INTO @DATA(ls_vbkd)
*    FROM vbkd
*    WHERE vbeln EQ @p_vbeln.
*
*  IF sy-subrc EQ 0.
*    p_bstkd = ls_vbkd-bstkd.
*  ENDIF.

  SELECT SINGLE bstkd FROM vbkd
    INTO p_bstkd
   WHERE vbeln = p_vbeln
     AND posnr = p_posnr.
  IF sy-subrc NE 0.
    SELECT SINGLE bstkd FROM vbkd
      INTO p_bstkd
     WHERE vbeln = p_vbeln
       AND posnr = '000000'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_KNVV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA1_KUNNR  text
*      -->P_LS_DATA1_VKORG  text
*      -->P_LS_DATA1_VTWEG  text
*      -->P_LS_DATA1_SPART  text
*      <--P_LS_OUTTAB_BRSCH  text
*      <--P_LS_OUTTAB_BEZEI  text
*----------------------------------------------------------------------*
FORM read_knvv  USING    p_kunnr TYPE vbak-kunnr
                         p_vkorg TYPE vbak-vkorg
                         p_vtweg TYPE vbak-vtweg
                         p_spart TYPE vbak-spart
                CHANGING p_brsch TYPE zssdst040_prefact_alv-brsch
                         p_bezei TYPE zssdst040_prefact_alv-bezei
                         p_kvgr4 TYPE zssdst040_prefact_alv-kvgr4 "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
                         p_zbezei TYPE zssdst040_prefact_alv-zbezei. "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040


  SELECT SINGLE a~zzbrsch, a~kvgr3, b~bezei
    ,a~kvgr4 "ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
    INTO @DATA(ls_data)
    FROM knvv AS a
    LEFT OUTER JOIN tvv3t AS b
      ON a~kvgr3 EQ b~kvgr3
    WHERE a~kunnr EQ @p_kunnr
      AND a~vkorg EQ @p_vkorg
      AND a~vtweg EQ @p_vtweg
      AND a~spart EQ @p_spart.
*      AND b~spras EQ @sy-langu.

  IF sy-subrc EQ 0.
    p_brsch = ls_data-zzbrsch.
    p_bezei = ls_data-bezei.
    "INI ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
    p_kvgr4 = ls_data-kvgr4.
    SELECT SINGLE bezei INTO p_zbezei
      FROM tvv4t
      WHERE spras = sy-langu
      AND kvgr4 = ls_data-kvgr4.
    "FIN ARA - Ajustes 20.06.24 Hinojosa. Modificaciones GAPSD040
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_CONDITION_KONV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LC_ZCMO  text
*      -->P_<FS_DATA1>_KNUMV  text
*      -->P_<FS_DATA1>_VGBEL  text
*      -->P_<FS_DATA1>_VGPOS  text
*      <--P_LV_KBETR  text
*      <--P_LV_WAERS  text
*----------------------------------------------------------------------*
FORM read_condition_konv  USING    p_kschl  TYPE konv-kschl
                                   p_knumv  TYPE konv-knumv
                                   p_vbeln  TYPE vbeln_va
                                   p_posnr  TYPE posnr_va
                          CHANGING p_kbetr  TYPE konv-kbetr
                                   p_waers  TYPE konv-waers.
  CLEAR: p_kbetr, p_waers.

  SELECT knumv, kposn, stunr, zaehk, kschl, kdatu, kbetr, waers
    INTO TABLE @DATA(lt_konv)
    FROM konv
    WHERE knumv EQ @p_knumv
      AND kposn EQ @p_posnr
      AND kappl EQ 'V'
      AND kschl EQ @p_kschl
    ORDER BY stunr, zaehk DESCENDING.

  IF sy-subrc EQ 0.
    DATA(ls_konv) = VALUE #( lt_konv[ 1 ] ).
    p_kbetr = ls_konv-kbetr.
    p_waers = ls_konv-waers.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  READ_PERFK_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_OUTTAB_PERFK  text
*      <--P_LS_OUTTAB_PERFK_LTEXT  text
*----------------------------------------------------------------------*
FORM read_perfk_text  USING    p_perfk TYPE vbkd-perfk  "Período de facturación
                      CHANGING p_ltext TYPE tfact-ltext.

  IF p_perfk IS NOT INITIAL.
    SELECT SINGLE ltext
      INTO p_ltext
      FROM tfact
      WHERE ident EQ p_perfk
        AND spras EQ sy-langu.
  ENDIF.

ENDFORM.
