*&---------------------------------------------------------------------*
*&  Include           ZSSDD016_C02
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
*       CLASS lcl_event IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_event IMPLEMENTATION.

  METHOD handle_right_click.
    BREAK-POINT.
  ENDMETHOD.                    "handle_right_click

  METHOD handle_left_click_design.
    BREAK-POINT.
  ENDMETHOD.                    "handle_left_click_design

  METHOD handle_move_control.
    BREAK-POINT.
  ENDMETHOD.                    "handle_move_control

  METHOD handle_size_control.
    BREAK-POINT.
  ENDMETHOD.                    "handle_size_control

  METHOD handle_left_click_run.
    BREAK-POINT.
  ENDMETHOD.                    "handle_left_click_run

  METHOD handle_onf1.
    BREAK-POINT.
  ENDMETHOD.                    "handle_onf1

  METHOD handle_onf4.
    BREAK-POINT.
  ENDMETHOD.                    "handle_onf4

  METHOD handle_data_changed.

*          er_data_changed
*          e_onf4
*          e_onf4_before
*          e_onf4_after
*          e_ucomm

    er_data_changed->refresh_protocol( ).

    DATA tl_data_changed TYPE STANDARD TABLE OF zssdst016_calendar_alv.

    FIELD-SYMBOLS: <fs_tabla_data_changed> TYPE zssdtt016_calendar_alv,

                   <fs_data_changed>       TYPE zssdst016_calendar_alv.

    ASSIGN er_data_changed->mp_mod_rows->* TO <fs_tabla_data_changed>.
    CLEAR vg_save.
    LOOP AT <fs_tabla_data_changed> ASSIGNING <fs_data_changed>.

      DATA(vv_index) = line_index( tg_data[ index = <fs_data_changed>-index ] ).

      SELECT COUNT(*) FROM zssdt016calendar
        WHERE kunwe = <fs_data_changed>-kunwe
          AND vkorg = <fs_data_changed>-vkorg
          AND adatu = <fs_data_changed>-adatu.
      IF sy-subrc = 0.

        er_data_changed->add_protocol_entry(
          EXPORTING
            i_msgid     = 'ZSD'    " Message ID
            i_msgty     = 'E'    " Message Type
            i_msgno     = '300'    " Message No.
*              i_msgv1     =     " Message Variable1
*              i_msgv2     =     " Message Variable2
*              i_msgv3     =     " Message Variable3
*              i_msgv4     =     " Message Variable4
            i_fieldname = 'KUNWE'   " Field Name
            i_row_id    = vv_index    " RowID
            i_tabix     = vv_index     " Table Index
        ).

        vg_save = 'X'.

      ELSE.

        SELECT COUNT(*) FROM zssdt016calendar
          WHERE kunwe = <fs_data_changed>-kunwe
            AND vkorg = <fs_data_changed>-vkorg
            AND ( ( adatu <= <fs_data_changed>-adatu AND bdatu >= <fs_data_changed>-adatu )
                OR ( adatu <= <fs_data_changed>-bdatu AND bdatu >= <fs_data_changed>-bdatu ) ) .
*            AND monat = <fs_data_changed>-monat
*            AND ( vjahr <= <fs_data_changed>-vjahr AND bjahr >= <fs_data_changed>-vjahr ).
        IF sy-subrc = 0.

          er_data_changed->add_protocol_entry(
            EXPORTING
              i_msgid     = 'ZSD'    " Message ID
              i_msgty     = 'E'    " Message Type
              i_msgno     = '302'    " Message No.
*              i_msgv1     =     " Message Variable1
*              i_msgv2     =     " Message Variable2
*              i_msgv3     =     " Message Variable3
*              i_msgv4     =     " Message Variable4
              i_fieldname = 'KUNWE'   " Field Name
              i_row_id    = vv_index    " RowID
              i_tabix     = vv_index     " Table Index
          ).

          vg_save = 'X'.

        ENDIF.

      ENDIF.

    ENDLOOP.

    CALL METHOD cl_gui_cfw=>set_new_ok_code "raise PAI for
      EXPORTING
        new_code = 'DUMMY'. "system events

    CALL METHOD cl_gui_cfw=>flush.





  ENDMETHOD.                    "handle_data_changed

  METHOD handle_ondropgetflavor.
    BREAK-POINT.
  ENDMETHOD.                    "handle_ondropgetflavor

  METHOD handle_ondrag.
    BREAK-POINT.
  ENDMETHOD.                    "handle_ondrag

  METHOD handle_ondrop.
    BREAK-POINT.
  ENDMETHOD.                    "handle_ondrop

  METHOD handle_ondropcomplete.
    BREAK-POINT.
  ENDMETHOD.                    "handle_ondropcomplete

  METHOD handle_subtotal_text.
    BREAK-POINT.
  ENDMETHOD.                    "handle_subtotal_text

  METHOD handle_before_user_command.
    BREAK-POINT.
  ENDMETHOD.                    "handle_before_user_command

  METHOD handle_user_command.

    DATA lv_index TYPE int4.

    DATA(tv_data_ind) = tg_data.

    SORT tv_data_ind BY index ASCENDING.

    TRY .
        lv_index = tv_data_ind[ 1 ]-index + 1.
      CATCH cx_sy_itab_line_not_found INTO DATA(vv_error_).
        lv_index = 1.
    ENDTRY.

    DATA wl_data_insert TYPE zssdst016_calendar_alv.

    og_grid_9000->get_selected_rows(
      IMPORTING
        et_index_rows = DATA(tv_index_row)
        et_row_no     = DATA(tv_row_no)
    ).

    DELETE tv_index_row WHERE rowtype <> ''.

    CASE e_ucomm.
      WHEN 'COPY_ROW'.

        LOOP AT tv_index_row INTO DATA(wv_index_row).

          READ TABLE tg_data INTO DATA(wv_data_copy) INDEX wv_index_row-index.

          CLEAR wv_data_copy-adatu.
          CLEAR wv_data_copy-bdatu.
          CLEAR wv_data_copy-style.
          wv_data_copy-updkz = 'I'.
          wv_data_copy-index = lv_index.

          APPEND wv_data_copy TO tg_data.

          ADD 1 TO lv_index.

        ENDLOOP.

      WHEN 'DELETE_ROW'.

        SORT tv_index_row BY index DESCENDING.

        LOOP AT tv_index_row INTO wv_index_row.

          READ TABLE tg_data INTO DATA(wv_data_delete) INDEX wv_index_row-index.
          IF wv_data_delete-updkz = 'U'.
            MOVE-CORRESPONDING wv_data_delete TO wg_data_delete.

            APPEND wg_data_delete TO tg_data_delete.

            DELETE tg_data INDEX wv_index_row-index.
          ENDIF.


        ENDLOOP.

      WHEN 'INSERT_ROW'.

        wl_data_insert-updkz = 'I'.
        wl_data_insert-index = lv_index.

        APPEND wl_data_insert TO tg_data.

        ADD 1 TO lv_index.

      WHEN OTHERS.
    ENDCASE.

    CALL METHOD cl_gui_cfw=>set_new_ok_code "raise PAI for
      EXPORTING
        new_code = 'DUMMY'. "system events

    CALL METHOD cl_gui_cfw=>flush.

  ENDMETHOD.                    "handle_user_command

  METHOD handle_after_user_command.
    BREAK-POINT.
  ENDMETHOD.                    "handle_after_user_command

  METHOD handle_double_click.
    BREAK-POINT.
  ENDMETHOD.                    "handle_double_click

  METHOD handle_delayed_callback.
    BREAK-POINT.
  ENDMETHOD.                    "handle_delayed_callback

  METHOD handle_delayed_changed_sel_cal.
    BREAK-POINT.
  ENDMETHOD.                    "handle_delayed_changed_sel_cal

  METHOD handle_print_top_of_page.
    BREAK-POINT.
  ENDMETHOD.                    "handle_print_top_of_page

  METHOD handle_print_top_of_list.
    BREAK-POINT.
  ENDMETHOD.                    "handle_print_top_of_list

  METHOD handle_print_end_of_page.
    BREAK-POINT.
  ENDMETHOD.                    "handle_print_end_of_page

  METHOD handle_print_end_of_list.
    BREAK-POINT.
  ENDMETHOD.                    "handle_print_end_of_list

  METHOD handle_top_of_page.
    BREAK-POINT.
  ENDMETHOD.                    "handle_top_of_page

  METHOD handle_context_menu_request.
    BREAK-POINT.
  ENDMETHOD.                    "handle_context_menu_request

  METHOD handle_menu_button.
    BREAK-POINT.
  ENDMETHOD.                    "handle_menu_button

  METHOD handle_toolbar.
*    BREAK-POINT.
    DATA: ls_toolbar  TYPE stb_button.

    READ TABLE e_object->mt_toolbar ASSIGNING FIELD-SYMBOL(<fs_copy>) WITH KEY function = '&LOCAL&COPY_ROW'.
    IF sy-subrc = 0.

      <fs_copy>-function = 'COPY_ROW'.

    ENDIF.
    READ TABLE e_object->mt_toolbar ASSIGNING FIELD-SYMBOL(<fs_delete>) WITH KEY function = '&LOCAL&DELETE_ROW'.
    IF sy-subrc = 0.

      <fs_delete>-function = 'DELETE_ROW'.

    ENDIF.
    READ TABLE e_object->mt_toolbar ASSIGNING FIELD-SYMBOL(<fs_insert>) WITH KEY function = '&LOCAL&INSERT_ROW'.
    IF sy-subrc = 0.

      <fs_insert>-function = 'INSERT_ROW'.

    ENDIF.

  ENDMETHOD.                    "handle_toolbar

  METHOD handle_hotspot_click.
    BREAK-POINT.
  ENDMETHOD.                    "handle_hotspot_click

  METHOD handle_end_of_list.
    BREAK-POINT.
  ENDMETHOD.                    "handle_end_of_list

  METHOD handle_after_refresh.
    BREAK-POINT.
  ENDMETHOD.                    "handle_after_refresh

  METHOD handle_button_click.
    BREAK-POINT.
  ENDMETHOD.                    "handle_button_click

  METHOD handle_data_changed_finished.
    BREAK-POINT.
  ENDMETHOD.                    "handle_data_changed_finished

ENDCLASS.                    "lcl_event IMPLEMENTATION
