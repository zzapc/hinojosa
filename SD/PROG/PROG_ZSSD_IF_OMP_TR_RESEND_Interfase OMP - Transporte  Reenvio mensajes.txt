*&---------------------------------------------------------------------*
*& Report  ZSSD_IF_OMP_TR_SEND
*&
*&---------------------------------------------------------------------*
*&
*& Inteface OMP - Transporte.
*& Transport Requeriments
*&
*& Reenvio mensajes.
*&
*& R.Malea. 04.02.2024
*&
*&---------------------------------------------------------------------*
REPORT zssd_if_omp_tr_resend.

TABLES: zssd_if_omp_tr_p.

SELECT-OPTIONS: s_nenv FOR zssd_if_omp_tr_p-num_envio.
*PARAMETERS: p_minu TYPE int1.

*-----------------------------------------------------------------------
* INITIALIZATION.
*-----------------------------------------------------------------------
INITIALIZATION.

*-----------------------------------------------------------------------
* START-OF-SELECTION.
*-----------------------------------------------------------------------
START-OF-SELECTION.
  DATA: vl_hora_sel       TYPE erzet,
        vl_esperar        TYPE xflag,
        vl_enviado        TYPE xflag,
        vl_procesado      TYPE xflag,
        tl_zssd_if_omp_tr TYPE TABLE OF zssd_if_omp_tr_p.



  "
  " Selección de los mensajes.
  "
  CLEAR tl_zssd_if_omp_tr.
  SELECT *
    FROM zssd_if_omp_tr_p
    INTO CORRESPONDING FIELDS OF TABLE tl_zssd_if_omp_tr
    WHERE num_envio IN s_nenv AND
          procesado = 'X' AND
          enviado = space AND
          vbeln <> '' AND " De momento solo SO
          erdat >= '20250203'. " A partir de esta fecha para no reenviar TR que estén finalizados por ser antiguos.

  "
  " Primero SO
  "
  LOOP AT tl_zssd_if_omp_tr ASSIGNING FIELD-SYMBOL(<fs_zssd_if_omp_tr>).
    IF <fs_zssd_if_omp_tr>-vbeln IS NOT INITIAL.

      "
      " Compruebo si ya se ha enviado este requerimiento.
      "
      SELECT SINGLE *
        FROM zssd_if_omp_tr_p
        INTO @DATA(wl_enviado)
        WHERE num_envio > @<fs_zssd_if_omp_tr>-num_envio AND " Busco un envío futuro
              vbeln = @<fs_zssd_if_omp_tr>-vbeln AND
              posnr = @<fs_zssd_if_omp_tr>-posnr AND
              etenr = @<fs_zssd_if_omp_tr>-etenr AND
*              accion = @<fs_zssd_if_omp_tr>-accion and
              procesado = 'X' AND
              enviado = 'X'.
      IF sy-subrc = 0.
        <fs_zssd_if_omp_tr>-enviado = 'X'.
        MODIFY zssd_if_omp_tr_p FROM <fs_zssd_if_omp_tr>.
        CONTINUE.
      ENDIF.

      CALL FUNCTION 'ZSD_IF_OMP_TRANS_REQ_VBEP'
        EXPORTING
          vp_accion    = <fs_zssd_if_omp_tr>-accion
          vp_vbeln     = <fs_zssd_if_omp_tr>-vbeln
          vp_posnr     = <fs_zssd_if_omp_tr>-posnr
          vp_etenr     = <fs_zssd_if_omp_tr>-etenr
        IMPORTING
          vp_enviado   = vl_enviado
          vp_procesado = vl_procesado.

      IF vl_procesado IS NOT INITIAL.
        <fs_zssd_if_omp_tr>-procesado = 'X'.
      ENDIF.

      IF vl_enviado IS NOT INITIAL.
        <fs_zssd_if_omp_tr>-enviado = 'X'.
      ENDIF.

      MODIFY zssd_if_omp_tr_p FROM <fs_zssd_if_omp_tr>.
    ENDIF.
  ENDLOOP.

  CALL FUNCTION 'DB_COMMIT'.
  CALL FUNCTION 'DEQUEUE_ALL'.
  COMMIT WORK AND WAIT.

  MESSAGE 'Proceso terminado correctamente' TYPE 'I'.
