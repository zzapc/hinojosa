FORM KOBED_902.
*{   INSERT         HEDK900257                                        1
*  LOOP AT XNAST WHERE KSCHL EQ KOMT1-KSCHL AND
*                      OBJKY EQ MSG_OBJKY   AND
*                      AKTIV EQ SPACE       AND
*                      VSTAT EQ '0'.
*    EXIT.
*  ENDLOOP.
*  CHECK SY-SUBRC NE 0.
*  SY-SUBRC = 4.
*  CHECK ( KOMKBEA-DRUVO EQ NEU OR KOMKBEA-DRUVO EQ AEND ).
*  CLEAR SY-SUBRC.

  data: f_det type xflag.
* >>> 7000015518
* <<< 7000015518
  sy-subrc = 4.
  CLEAR f_det.

  PERFORM det_mens_zger CHANGING f_det.
  if f_det = 'X'.
    clear sy-subrc.
  else.
    sy-subrc = 4.
  endif.

*}   INSERT
ENDFORM.
FORM KOBEV_902.
*{   INSERT         HEDK900257                                        1
*  LOOP AT XNAST WHERE KSCHL EQ T683S-KSCHL AND
*                      OBJKY EQ MSG_OBJKY   AND
*                      AKTIV EQ SPACE       AND
*                      VSTAT EQ '0'.
*    EXIT.
*  ENDLOOP.
*  CHECK SY-SUBRC NE 0.
*  SY-SUBRC = 4.
*  CHECK ( KOMKBEA-DRUVO EQ NEU OR KOMKBEA-DRUVO EQ AEND ).
*  CLEAR SY-SUBRC.

  data: f_det type xflag.

  sy-subrc = 4.
  CLEAR f_det.

  PERFORM det_mens_zger CHANGING f_det.
  if f_det = 'X'.
    clear sy-subrc.
  else.
    sy-subrc = 4.
  endif.

*}   INSERT
ENDFORM.
*{   INSERT         HEDK900257                                        1
FORM det_mens_zger CHANGING p_flag.

DATA:    BEGIN OF pot OCCURS 50.
        INCLUDE STRUCTURE bekpo.       "incl. UPDKZ
DATA:    END OF pot.

DATA: ls_pot  TYPE bekpo,
* >>> 7000015518
      ls_aux   TYPE bekpo,
      ls_ekpo  TYPE ekpo,
      lv_elikz,
* <<< 7000015518
      ls_ekko TYPE ekko.

DATA: lv_importe  TYPE bwert,
      lv_werks    TYPE ewerk,
      ls_ztmm0009 TYPE ztmm0009,
      lv_netwr    TYPE netwr.

FIELD-SYMBOLS: <pot>  TYPE any,
               <ekko> TYPE any.

REFRESH: pot.
CLEAR: pot, ls_pot, lv_importe, lv_werks.

CLEAR p_flag.

ASSIGN ('(SAPLMEPO)EKKO') TO <ekko>.
IF sy-subrc EQ 0.
  ls_ekko = <ekko>.

  ASSIGN ('(SAPLMEPO)POT[]') TO <pot>.

  IF sy-subrc EQ 0.
    pot[] = <pot>.
    LOOP AT pot INTO ls_pot WHERE loekz <> 'L' AND loekz <> 'S'.
      IF lv_werks IS NOT INITIAL.
        EXIT.
      ELSE.
        lv_werks = ls_pot-werks.
      ENDIF.
    ENDLOOP.

    " Miramos el registro que correponde de la tabla:
    CLEAR ls_ztmm0009.
    SELECT SINGLE * INTO ls_ztmm0009
      FROM ztmm0009
      WHERE werks = lv_werks
        AND mtart = ls_pot-mtart. " 21.03.2019 - cvivo - CB incluir tipo de material

    IF sy-subrc NE 0. " 21.03.2019 - cvivo - CB incluir tipo de material
      SELECT SINGLE * INTO ls_ztmm0009
        FROM ztmm0009
        WHERE werks = lv_werks
          AND mtart = space.
    ENDIF.

    IF ls_ztmm0009 IS NOT INITIAL.
      LOOP AT pot INTO ls_pot WHERE loekz <> 'L' AND loekz <> 'S'.
        IF ls_ekko-waers = ls_ztmm0009-waers.
          lv_importe = lv_importe + ls_pot-netwr.
        ELSE.
          CLEAR lv_netwr.
          CALL FUNCTION 'CONVERT_TO_LOCAL_CURRENCY'
            EXPORTING
              "   CLIENT                  = SY-MANDT
              date             = sy-datum
              foreign_amount   = ls_pot-netwr
              foreign_currency = ls_ekko-waers
              local_currency   = ls_ztmm0009-waers
          "   RATE             = 0
          "   TYPE_OF_RATE     = 'M'
          "   READ_TCURR       = 'X'
            IMPORTING
              "   EXCHANGE_RATE           =
              "   FOREIGN_FACTOR          =
              local_amount     = lv_netwr
          "   LOCAL_FACTOR     =
          "   EXCHANGE_RATEX   =
          "   FIXED_RATE       =
          "   DERIVED_RATE_TYPE       =
              " EXCEPTIONS
          "   NO_RATE_FOUND    = 1
          "   OVERFLOW         = 2
          "   NO_FACTORS_FOUND = 3
          "   NO_SPREAD_FOUND  = 4
          "   DERIVED_2_TIMES  = 5
          "   OTHERS           = 6
            .
          IF sy-subrc <> 0.
            " Implement suitable error handling here
            lv_importe = lv_importe + ls_pot-netwr.
          ELSE.
            lv_importe = lv_importe + lv_netwr.
          ENDIF.
        ENDIF.
      ENDLOOP.


      IF ls_ztmm0009-netwr IS NOT INITIAL AND lv_importe > ls_ztmm0009-netwr.
        p_flag = 'X'.
*      ELSEIF ls_ztmm0009-NETWR is initial AND lv_importe > 100000.
*         p_flag = 'X'.
* >>> 7000015518
* Si se marca entrega final no mandamos mail
        lv_elikz = abap_false.
        LOOP AT pot INTO ls_pot.
* si lo desmarcamos si mandamos mail
          check ls_pot-elikz is not initial.
          CLEAR ls_ekpo.
* Miramos como estaba en la BBDD
          SELECT SINGLE * INTO ls_ekpo
            FROM ekpo WHERE ebeln = ls_pot-ebeln
                        AND ebelp = ls_pot-ebelp.
          IF ls_pot-elikz <> ls_ekpo-elikz.
             lv_elikz = abap_true.
             exit.
          ENDIF.
        ENDLOOP.
        IF lv_elikz = abap_true.
          CLEAR p_flag.
        ENDIF.
* <<< 7000015518
      ELSE.
        CLEAR p_flag.
      ENDIF.
    ENDIF.
  ELSE.
    CLEAR p_flag.
  ENDIF.
ENDIF.
ENDFORM.
*}   INSERT
