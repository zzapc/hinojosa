*&---------------------------------------------------------------------*
*&  Include           ZRSD0018_CLASS
*&---------------------------------------------------------------------*


CLASS lcl_event_handler DEFINITION.

  PUBLIC SECTION.

*   Evento para detectar el link
    METHODS handle_hotspot_click
                  FOR EVENT hotspot_click OF cl_gui_alv_grid
      IMPORTING e_row_id e_column_id es_row_no.


ENDCLASS.                    "lcl_application DEFINITION

*&---------------------------------------------------------------------*
*&       Class (Implementation)  lcl_application
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS lcl_event_handler IMPLEMENTATION.

  METHOD handle_hotspot_click.

*    leemos la tabla con datos y pasamos a la estructura la linea
*    seleccionada
    READ TABLE gt_datos INDEX e_row_id-index INTO wa_datos.
    CASE e_column_id.
      WHEN 'VBELN'.
        IF NOT wa_datos-VBELN IS INITIAL.
          SET PARAMETER ID 'AUN' FIELD WA_DATOS-VBELN.
          CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN.
        ENDIF.

        WHEN 'AUFNR_EXTRUSION'.
        IF NOT wa_datos-AUFNR_EXTRUSION IS INITIAL.
            FREE MEMORY ID 'BR1'.
            SET PARAMETER ID 'BR1' FIELD WA_datos-AUFNR_EXTRUSION.
            CALL TRANSACTION 'COR3' AND SKIP FIRST SCREEN.
        ENDIF.

        WHEN 'AUFNR_MANIPULADO'.
        IF NOT wa_datos-AUFNR_MANIPULADO IS INITIAL.
            FREE MEMORY ID 'BR1'.
            SET PARAMETER ID 'BR1' FIELD WA_datos-AUFNR_MANIPULADO.
            CALL TRANSACTION 'COR3' AND SKIP FIRST SCREEN.
        ENDIF.
      ENDCASE.

    ENDMETHOD.

ENDCLASS.
