FORM FRM_KONDI_WERT_901.
*{   INSERT         HEDK918627                                        1

  TYPES: BEGIN OF ty_keko,
    vbeln TYPE vbeln,
    posnr TYPE posnr,
    kalnr TYPE kalnr,
    losau TYPE ck_losau,
    kstel TYPE kstel.
  TYPES: END OF ty_keko.

DATA: lt_keko     TYPE TABLE OF ty_keko,
      ls_keko     TYPE ty_keko,
      ls_zscot002 TYPE zscot002_kschl,
      lv_kstel    TYPE kstel,
      lv_coste    TYPE kstel,
      lv_xkwert   TYPE kwert,
      ls_vbap     TYPE vbapvb,
      l_found type flag.

FIELD-SYMBOLS: <fs_vbak>  TYPE vbak,
               <fs_xvbap> TYPE vbapvb,
               <ft_xvbap> TYPE STANDARD TABLE,
               <fs_vbap>  TYPE vbap,
               <fp_PREISFINDUNGSART> type c.

*ASSIGN ('(SAPMV45A)VBAK') TO <fs_vbak>.
*CHECK <fs_vbak> IS ASSIGNED.
*ASSIGN ('(SAPMV45A)XVBAP') TO <fs_xvbap>.
*CHECK <fs_xvbap> IS ASSIGNED.
*
*IF <fs_xvbap> is INITIAL.
*  ASSIGN ('(SAPMV45A)VBAP') TO <fs_vbap>.
*  CHECK <fs_vbap> IS ASSIGNED.
*  MOVE-CORRESPONDING <fs_vbap> to <fs_xvbap>.
*ENDIF.

cLEAR: l_found.

ASSIGN ('(SAPMV45A)VBAK') TO <fs_vbak>.
CHECK <fs_vbak> IS ASSIGNED.
ASSIGN ('(SAPMV45A)XVBAP[]') TO <ft_xvbap>.
CHECK <ft_xvbap> IS ASSIGNED.


IF <ft_xvbap> is not INITIAL.
  READ TABLE <ft_xvbap> ASSIGNING <fs_xvbap> WITH KEY ('posnr') = xkomv-kposn.
  CHECK <fs_xvbap> is ASSIGNED.
  MOVE-CORRESPONDING <fs_xvbap> to ls_vbap.
ELSE.
  ASSIGN ('(SAPMV45A)VBAP') TO <fs_vbap>.
  CHECK <fs_vbap> IS ASSIGNED.
  MOVE-CORRESPONDING <fs_vbap> to ls_vbap.
ENDIF.

CALL FUNCTION 'ZSCO002_CALCULO_RV64A901'
  EXPORTING
    i_vbak   = <fs_vbak>
    i_vbap   = ls_vbap
    i_kschl  = xkomv-kschl
  IMPORTING
    e_xkwert = lv_xkwert
    e_found  = l_found.

If lv_xkwert = 0.
  CHECK l_found is not INITIAL.
ENDIF.

*ykbetr = xkwert = xkomv-kbetr = lv_xkwert.

xkwert = lv_xkwert.
XKOMV-KPEIN = 1000.

DATA: l_por type MENGE_D.

l_por = KOMP-MGAME / XKOMV-KPEIN .

IF l_por is not INITIAL.
  MULTIPLY lv_xkwert BY 1000.
  xkomv-kbetr = lv_xkwert / l_por.
ENDIF.



*}   INSERT
ENDFORM.
