*&---------------------------------------------------------------------*
*&  Include           ZSSDD038_CLASS
*&---------------------------------------------------------------------*
*& lcl_main DEFINITION
*&---------------------------------------------------------------------*
CLASS lcl_main DEFINITION.
  PUBLIC SECTION.
    TYPES: BEGIN OF ty_entregas,
             vbeln     TYPE likp-vbeln,
             vstel     TYPE likp-vstel,
             kunnr     TYPE likp-kunnr,
             lfart     TYPE likp-lfart,
             wadat_ist TYPE likp-wadat_ist,
             vkorg     TYPE likp-vkorg,
             pstyv     TYPE lips-pstyv,
             posnr     TYPE lips-posnr,
             matnr     TYPE lips-matnr,
             lfimg     TYPE lips-lfimg,
             vrkme     TYPE lips-vrkme,
             werks     TYPE lips-werks,
             lgort     TYPE lips-lgort,
             vgbel     TYPE lips-vgbel,
             vgpos     TYPE lips-vgpos,
           END OF ty_entregas,
           tt_entregas TYPE STANDARD TABLE OF ty_entregas,
           tt_t001l    TYPE STANDARD TABLE OF t001l,
           tt_kunwe    TYPE RANGE OF kna1-kunnr,
           tt_pstyv    TYPE RANGE OF lips-pstyv,
           tt_param    TYPE STANDARD TABLE OF zssdt038_p.

    CLASS-METHODS:
      start,
      start_360,
      fill_cat EXPORTING itab_fieldcat TYPE lvc_t_fcat,
      get_cm_cust EXPORTING itab_entregas TYPE tt_entregas
                            itab_t001l    TYPE tt_t001l
                            lr_kunwe      TYPE tt_kunwe
                            lr_pstyv      TYPE tt_pstyv
                            itab_name     TYPE tt_name
                            itab_param    TYPE tt_param.

  PROTECTED SECTION.
  PRIVATE SECTION.
    CLASS-METHODS:
      select_data EXPORTING itab_list_entrega TYPE tt_list_entrega
                            itab_list_stock   TYPE tt_list_stock,
      carga_ini   EXPORTING itab_list_entrega TYPE tt_list_entrega
                            itab_list_stock   TYPE tt_list_stock,
      show_alv IMPORTING itab_list_entrega TYPE tt_list_entrega
                         itab_list_stock   TYPE tt_list_stock.
ENDCLASS.

DATA omain TYPE REF TO lcl_main.

*&---------------------------------------------------------------------*
*& lcl_main IMPLEMENTATION
*&---------------------------------------------------------------------*
CLASS lcl_main IMPLEMENTATION.
  METHOD start.
    omain->select_data( IMPORTING itab_list_entrega = gt_list_entrega
                                  itab_list_stock   = gt_list_stock ).

    IF gt_list_entrega[] IS NOT INITIAL OR gt_list_stock[] IS NOT INITIAL.
      omain->show_alv( EXPORTING itab_list_entrega = gt_list_entrega
                           itab_list_stock   = gt_list_stock ).
    ENDIF.
  ENDMETHOD.
  METHOD start_360.
    omain->select_data( IMPORTING itab_list_entrega = gt_list_entrega
                                  itab_list_stock   = gt_list_stock ).


  ENDMETHOD.
*&---------------------------------------------------------------------*
  METHOD select_data.

    DATA: lt_entregas       TYPE tt_entregas,
          lt_t001l          TYPE tt_t001l,
          lt_name           TYPE tt_name,
          lt_param          TYPE tt_param,
          lr_kunwe          TYPE tt_kunwe, "RANGE OF kna1-kunnr,
          lr_kunwe2         TYPE RANGE OF knvp-kunn2,
          lr_matnr          TYPE RANGE OF lips-matnr,
          lr_pstyv          TYPE tt_pstyv, " RANGE OF lips-pstyv,
          lr_lfart          TYPE RANGE OF likp-lfart,
          ls_list_entrega   LIKE LINE OF itab_list_entrega,
          ls_list_stock     LIKE LINE OF itab_list_stock,
          lt_key            TYPE tt_key,
          ls_key            LIKE LINE OF lt_key,
          lv_cont_add       TYPE i,
          lv_index_2        TYPE i,
          lv_cant_ent       TYPE  zssd_cant_ent,
          lv_cant_rec       TYPE  zssd_cant_rec,
          lv_crear_neg_o    TYPE flag,
          lv_devolucion     TYPE flag,
          lv_resta_venta    TYPE flag,
          lv_crear_pos_o    TYPE flag,
          lv_ebelp          TYPE ekpo-ebelp,
          t_dd07v_tab       TYPE tt_dd07v,
          lt_cant           TYPE STANDARD TABLE OF zssdt038,
          lt_cant_agrega_ad TYPE tt_zssdt038,
          lv_vbeln_bp       TYPE likp-vbeln,
          lt_kunn2_cliente  TYPE tt_kunnr_cliente.

    " Inicio BG 03.06.2024 Agregar Destinatarios asociados al Cliente ( ** si indican destinatario, valida si existe para el cliente)
    SELECT DISTINCT kunnr, kunn2, vkorg INTO TABLE @DATA(lt_kunn2)
      FROM knvp
      WHERE kunnr IN @so_kunnr
        AND vkorg IN @so_vkorg
        AND vtweg EQ '10'
        AND spart EQ '10'
        AND parvw EQ 'WE'
        AND kunn2 IN @so_kunwe. " **
    IF sy-subrc EQ 0.

      " Inicio BG 21.10.2024 Validamos que el cliente sea ZCLI en grupo de cuentas
      SELECT DISTINCT a~kunnr, a~kunn2, a~vkorg INTO TABLE @lt_kunn2_cliente
       FROM knvp AS a INNER JOIN kna1 AS b ON a~kunnr = b~kunnr
        FOR ALL ENTRIES IN @lt_kunn2
       WHERE a~kunnr EQ @lt_kunn2-kunnr
         AND vkorg EQ @lt_kunn2-vkorg
         AND vtweg EQ '10'
         AND spart EQ '10'
         AND parvw EQ 'WE'
         AND kunn2 EQ @lt_kunn2-kunn2
         AND ktokd EQ 'ZCLI'.
      " Fin BG 21.10.2024 Validamos que el cliente sea ZCLI en grupo de cuentas

      SELECT kunnr, name1 INTO TABLE @DATA(lt_cli_name)
        FROM kna1
        FOR ALL ENTRIES IN @lt_kunn2
        WHERE kunnr EQ @lt_kunn2-kunnr.


      SELECT kunnr, name1 APPENDING TABLE @lt_name
        FROM kna1
        FOR ALL ENTRIES IN @lt_kunn2
        WHERE kunnr EQ @lt_kunn2-kunn2.

      lr_kunwe2  = VALUE #( FOR wa_1 IN lt_kunn2 ( sign   = 'I'
                                                   option = 'EQ'
                                                   low    = wa_1-kunn2 ) ).
    ELSE.
      IF so_kunwe[] IS INITIAL.
        MESSAGE s001(zssd038) DISPLAY LIKE 'E'.
      ELSE.
        MESSAGE s002(zssd038) DISPLAY LIKE 'E'.
      ENDIF.
      RETURN.
    ENDIF.
    " Fin BG 03.06.2024 Agregar Destinatarios asociados al Cliente

    " Parametrización por clase de entrega
    SELECT * INTO TABLE @lt_param
      FROM zssdt038_p
       WHERE vkorg IN @so_vkorg.

    lr_pstyv  = VALUE #( FOR wa_2 IN lt_param ( sign   = 'I'
                                           option = 'EQ'
                                           low    = wa_2-pstyv ) ).
    SORT lr_pstyv.
    DELETE ADJACENT DUPLICATES FROM lr_pstyv.

    lr_lfart  = VALUE #( FOR wa_3 IN lt_param ( sign   = 'I'
                                       option = 'EQ'
                                       low    = wa_3-lfart ) ).
    SORT lr_lfart.
    DELETE ADJACENT DUPLICATES FROM lr_lfart.

    " Búsqueda de entregas
    CLEAR lt_entregas[].
    SELECT a~vbeln, a~vstel, a~kunnr, a~lfart, a~wadat_ist, a~vkorg,
           b~pstyv, b~posnr, b~matnr, b~lfimg, b~vrkme, b~werks, b~lgort,
           b~vgbel, b~vgpos
     INTO TABLE @lt_entregas
      FROM likp AS a INNER JOIN lips AS b ON a~vbeln = b~vbeln
                     INNER JOIN vbuk AS c ON a~vbeln = c~vbeln
      WHERE vkorg IN @so_vkorg
        AND vstel IN @so_vstel
        AND lfart IN @lr_lfart
        AND kunnr IN @lr_kunwe2
        AND matnr IN @so_matnr
        AND a~vbeln IN @so_vbeln " BG 11.10.2024
        AND pstyv IN @lr_pstyv
        AND wbstk EQ @c_c.       " Entrega Contabilizada.

    " Información destinatario para determinar si es Centro de montaje
    lcl_main=>get_cm_cust( IMPORTING itab_entregas = lt_entregas
                                     itab_t001l    = lt_t001l
                                     lr_kunwe      = lr_kunwe2
                                     lr_pstyv      = lr_pstyv
                                     itab_name     = lt_name
                                     itab_param    = lt_param ).

    SORT lt_entregas.
    DELETE ADJACENT DUPLICATES FROM lt_entregas COMPARING ALL FIELDS. " vbeln

    IF lt_entregas[] IS NOT INITIAL. " BG comentado el 28.10.2024

      " Datos del destinatario
      lr_kunwe = VALUE #( FOR wa IN lt_entregas ( sign   = 'I'
                                                  option = 'EQ'
                                                  low    = wa-kunnr ) ).
      SORT lr_kunwe.
      DELETE ADJACENT DUPLICATES FROM lr_kunwe.

      SELECT kunnr, name1 APPENDING TABLE @lt_name
       FROM kna1
        WHERE kunnr IN @lr_kunwe.

      " Material
      lr_matnr = VALUE #( FOR wa IN lt_entregas ( sign   = 'I'
                                                 option = 'EQ'
                                                 low    = wa-matnr ) ).
      SORT lr_matnr.
      DELETE ADJACENT DUPLICATES FROM lr_matnr.

      SELECT a~matnr, a~laeng, a~breit, a~hoehe, a~meabm, b~maktx
       INTO TABLE @DATA(lt_mara)
        FROM mara AS a INNER JOIN makt AS b ON a~matnr EQ b~matnr
        WHERE a~matnr IN @lr_matnr
          AND spras EQ @sy-langu.

      " Busca si las entregas son de traslado
      SELECT DISTINCT vbelv, vbeln INTO TABLE @DATA(lt_vbfa)
        FROM vbfa
         FOR ALL ENTRIES IN @lt_entregas
          WHERE vbelv EQ @lt_entregas-vbeln
            AND vbtyp_n EQ '7'
            AND vbtyp_v EQ 'J'.

      " Busca si las posiciones de las entregas estan facturadas
      SELECT DISTINCT b~vgbel, b~vgpos, b~vbeln, b~posnr, b~matnr,
                      b~fkimg, a~knumv, c~kschl, c~kbetr
        INTO TABLE @DATA(lt_facturas)
        FROM vbrp AS b INNER JOIN vbrk AS a ON b~vbeln = a~vbeln
                       INNER JOIN konv AS c ON a~knumv = c~knumv
         FOR ALL ENTRIES IN @lt_entregas
          WHERE vgbel EQ @lt_entregas-vbeln
            AND vgpos EQ @lt_entregas-posnr
            AND kschl EQ 'ZPAL'.

      " Gestión de Palet
      SELECT DISTINCT a~matnr, a~vkorg, a~vtweg, a~mvgr1, b~bezei
        INTO TABLE @DATA(lt_mvke)
        FROM mvke AS a INNER JOIN tvm1t AS b ON a~mvgr1 EQ b~mvgr1
        FOR ALL ENTRIES IN @lt_entregas
         WHERE a~matnr = @lt_entregas-matnr
           AND a~vkorg = @lt_entregas-vkorg
           AND a~vtweg = '10'
           AND b~spras = @sy-langu.

    ENDIF. " BG 28.10.2024 se agrega este IF para condicionar aqui las entregas

    " Stocks Guardados
    SELECT * INTO TABLE @DATA(lt_zssdt038)
      FROM zssdt038
      WHERE vkorg IN @so_vkorg
        AND vstel IN @so_vstel
        AND kunwe IN @lr_kunwe2 " lr_kunwe
        AND matnr IN @so_matnr  " lr_matnr BG 21.10.2024 comentado para traer los adicionales que agrege en list2
        AND carga_ini EQ @space. " BG 26.09.2024  No tomar en cuenta la carga inicial cuando hay entregas

    SORT lt_zssdt038 BY kunwe matnr budat DESCENDING.

    "Transportistas
    IF lt_zssdt038[] IS NOT INITIAL.
      SELECT lifnr, name1 INTO TABLE @DATA(lt_tdlnr)
        FROM lfa1
        FOR ALL ENTRIES IN @lt_zssdt038
        WHERE lifnr = @lt_zssdt038-tdlnr.
    ENDIF.

    " Inicio BG 07.02.2024 - Para separar por transportista
*      DATA(lt_cant) = lt_zssdt038[].
    LOOP AT  lt_zssdt038 INTO DATA(ls_cant_collect).
      CLEAR: ls_cant_collect-utime,  ls_cant_collect-udate, ls_cant_collect-username.
      COLLECT ls_cant_collect INTO lt_cant.
    ENDLOOP.
    SORT lt_cant BY vkorg vstel kunwe matnr tdlnr ASCENDING.
    lt_cant_agrega_ad = lt_cant[].
    " Fin BG 07.02.2024

    " Ini BG 21.10.2024 - Agrega materiales adicionales
    SELECT a~matnr, a~laeng, a~breit, a~hoehe, a~meabm, b~maktx
     APPENDING TABLE @lt_mara
      FROM mara AS a INNER JOIN makt AS b ON a~matnr EQ b~matnr
      FOR ALL ENTRIES IN @lt_cant
      WHERE a~matnr EQ @lt_cant-matnr
        AND spras EQ @sy-langu.
    SORT lt_mara.
    DELETE ADJACENT DUPLICATES FROM lt_mara.

    SELECT DISTINCT a~matnr, a~vkorg, a~vtweg, a~mvgr1, b~bezei
      APPENDING TABLE @lt_mvke
      FROM mvke AS a INNER JOIN tvm1t AS b ON a~mvgr1 EQ b~mvgr1
      FOR ALL ENTRIES IN @lt_cant
       WHERE a~matnr = @lt_cant-matnr
         AND a~vkorg = @lt_cant-vkorg
         AND a~vtweg = '10'
         AND b~spras = @sy-langu.
    SORT lt_mvke.
    DELETE ADJACENT DUPLICATES FROM lt_mvke.
    " Fin BG 21.10.2024 - Agrega materiales adicionales

    SELECT DISTINCT ebeln, ebelp, werks
      INTO TABLE @DATA(lt_ekpo)
       FROM ekpo
        FOR ALL ENTRIES IN @lt_entregas
         WHERE ebeln = @lt_entregas-vgbel.

*&---------------------------------------------------------------------*
    " Si es Listado de movimiento pallets
*&---------------------------------------------------------------------*
    IF pa_list1 EQ abap_true.
      " Descripción tipo de registr
      CALL FUNCTION 'DD_DOMVALUES_GET'
        EXPORTING
          domname        = 'ZSSDTIPO_REG'
          text           = abap_true
          langu          = sy-langu
        TABLES
          dd07v_tab      = t_dd07v_tab
        EXCEPTIONS
          wrong_textflag = 1
          OTHERS         = 2.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.
    ENDIF.

    SORT lt_name.
    DELETE ADJACENT DUPLICATES FROM lt_name COMPARING kunnr.

*&---------------------------------------------------------------------*
    " Se Arma la base de información con las entregas
*&---------------------------------------------------------------------*
    LOOP AT lt_entregas INTO DATA(s_entregas).

      IF s_entregas-vbeln EQ lv_vbeln_bp.
        break partnersap.
      ENDIF.

      CLEAR: lv_crear_neg_o, lv_devolucion, lv_resta_venta, lv_crear_pos_o.

      " En relación a la Org.Venta/clase de entrega y tipo de pos. se determina si es de entrada o salida
      " BG 03.06.2024 - Los traslados se suman en las entregas de salidas
      READ TABLE lt_param INTO DATA(ls_param) WITH KEY vkorg = s_entregas-vkorg
                                                       lfart = s_entregas-lfart
                                                       pstyv = s_entregas-pstyv.
      IF sy-subrc EQ 0.
        ls_list_entrega-tipo_reg  = c_01. " Entrega Salida/traslados

        CASE ls_param-operacion.
          WHEN '+'.
            s_entregas-lfimg = s_entregas-lfimg.
          WHEN '-'.
            s_entregas-lfimg = s_entregas-lfimg.
            ls_list_entrega-tipo_reg  = c_05. "BG 03.06.2024 - Se agrega devoluciones
            lv_devolucion = abap_true.
        ENDCASE.
        IF ls_param-negativo = abap_true. "BG 03.06.2024 - Se agrega Resta Venta cliente (si operacion - y tiene marcardo el flag neg origen)
          lv_crear_neg_o = abap_true.
          lv_resta_venta = abap_true.
          ls_list_entrega-tipo_reg  = c_04.
        ELSEIF ls_param-pos_origen = abap_true. " Busca si es una devolución de venta a cliente "BG 06.06.2024
          ls_list_entrega-tipo_reg  = c_06.
          lv_crear_pos_o = abap_true.
          CLEAR lv_devolucion.
        ENDIF.
      ENDIF.

      " Listado detalle de entregas
      IF pa_list1 EQ abap_true.
        READ TABLE t_dd07v_tab INTO DATA(s_dd07v) WITH KEY domvalue_l = ls_list_entrega-tipo_reg.
        IF sy-subrc EQ 0.
          ls_list_entrega-ddtext    = s_dd07v-ddtext.
        ENDIF.

        ls_list_entrega-vkorg     = s_entregas-vkorg.
        ls_list_entrega-vstel     = s_entregas-vstel.
        ls_list_entrega-kunwe     = s_entregas-kunnr. " Destinatario
        READ TABLE lt_name INTO DATA(s_name) WITH KEY kunnr = s_entregas-kunnr.
        IF sy-subrc EQ 0.
          ls_list_entrega-name1 = s_name-name1.
        ENDIF.

        " Inicio BG 03.06.2024 - Agrega Cliente
*          READ TABLE lt_kunn2 INTO DATA(ls_cliente) WITH KEY vkorg = s_entregas-vkorg
*                                                             kunn2 = s_entregas-kunnr.

        READ TABLE lt_kunn2_cliente INTO DATA(ls_cliente) WITH KEY vkorg = s_entregas-vkorg  " BG 21.10.2024 se busca de lt_kunn2_cliente
                                                                   kunn2 = s_entregas-kunnr.
        IF sy-subrc EQ 0.
          ls_list_entrega-kun_c = ls_cliente-kunnr.
          READ TABLE lt_name INTO DATA(ls_cli_name) WITH KEY kunnr = ls_cliente-kunnr.
          IF sy-subrc EQ 0.
            ls_list_entrega-name_c = ls_cli_name-name1.
          ENDIF.
        ENDIF.
        " Fin BG 03.06.2024 - Agrega Cliente

        READ TABLE lt_facturas INTO DATA(ls_facturas) WITH KEY vgbel = s_entregas-vbeln
                                                               vgpos = s_entregas-posnr.
        IF sy-subrc EQ 0.
          IF ls_facturas-kbetr > 0.
            ls_list_entrega-stock_fact = ls_facturas-fkimg.
            IF ls_param-operacion = '-'. " 30.09.2024 Si la operación es negativa, se hace la operación contraria
              ls_list_entrega-stock_fact = ls_list_entrega-stock_fact.
            ELSE.
              ls_list_entrega-stock_fact = ls_list_entrega-stock_fact * -1.
            ENDIF.
          ENDIF.
        ENDIF.

        ls_list_entrega-lfart      = s_entregas-lfart.
        ls_list_entrega-vbeln      = s_entregas-vbeln.
        ls_list_entrega-wadat_ist  = s_entregas-wadat_ist.
        ls_list_entrega-pstyv      = s_entregas-pstyv.
        ls_list_entrega-posnr      = s_entregas-posnr.
        ls_list_entrega-matnr      = s_entregas-matnr.

        READ TABLE lt_mara INTO DATA(s_mara) WITH KEY matnr = s_entregas-matnr.
        IF sy-subrc EQ 0.
          ls_list_entrega-laeng = s_mara-laeng.
          ls_list_entrega-breit = s_mara-breit.
          ls_list_entrega-hoehe = s_mara-hoehe.
          ls_list_entrega-maktx = s_mara-maktx.
        ENDIF.

        READ TABLE lt_mvke INTO DATA(s_mvke) WITH KEY matnr = s_entregas-matnr
                                                      vkorg = s_entregas-vkorg.
        IF sy-subrc EQ 0.
          ls_list_entrega-mvgr1 = s_mvke-mvgr1.
          ls_list_entrega-bezei = s_mvke-bezei.
        ENDIF.

        ls_list_entrega-lfimg     = s_entregas-lfimg.
        ls_list_entrega-vrkme     = s_entregas-vrkme.

        " Se agrega Negativo/Positivo a Origen - registro de CM Venta cliente
        IF lv_crear_neg_o IS NOT INITIAL OR lv_crear_pos_o IS NOT INITIAL.

          " Inicio BG 11.10.2024 se Agrega registro original y luego si es + o - Origen
          DATA(ls_list_entrega_aux_cm) = ls_list_entrega.
          ls_list_entrega_aux_cm-tipo_reg  = c_01.
          READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l = ls_list_entrega_aux_cm-tipo_reg.
          IF sy-subrc EQ 0.
            ls_list_entrega_aux_cm-ddtext    = s_dd07v-ddtext.
          ENDIF.
          COLLECT ls_list_entrega_aux_cm INTO itab_list_entrega.
          CLEAR ls_key.
          MOVE-CORRESPONDING ls_list_entrega_aux_cm TO ls_key.
          ls_key-key = ls_key-vstel && ls_key-kunwe && ls_key-matnr.
          ls_key-cont = ls_key-cont + 1.
          COLLECT ls_key INTO lt_key.
          " Fin BG 11.10.2024 se Agrega registro original y luego si es + o - Origen

          " Válida si el destinatario es un centro de montaje, para agregar el registro de CM Venta cliente (flag negativo origen)
          READ TABLE lt_t001l INTO DATA(s_t001l) WITH KEY werks = s_entregas-werks
                                                          vkorg = s_entregas-vkorg
                                                          vstel = s_entregas-vstel.
          IF sy-subrc EQ 0.

            ls_list_entrega-lfimg = ls_list_entrega-lfimg.

            READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l = ls_list_entrega-tipo_reg.
            IF sy-subrc EQ 0.
              ls_list_entrega-ddtext    = s_dd07v-ddtext.
            ENDIF.

            CLEAR: s_name.
            READ TABLE lt_name INTO s_name WITH KEY kunnr = s_t001l-kunnr.
            IF sy-subrc EQ 0.
              ls_list_entrega-kunwe = s_name-kunnr.
              ls_list_entrega-name1 = s_name-name1.
            ENDIF.

            CLEAR: ls_cliente, ls_cli_name.
            " Agrega cliente
*              READ TABLE lt_kunn2 INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg
*                                                            kunn2 = s_t001l-kunnr.
            READ TABLE lt_kunn2_cliente INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg  " BG 21.10.2024 se busca de lt_kunn2_cliente
                                                                 kunn2 = s_t001l-kunnr.
            IF sy-subrc EQ 0.
              ls_list_entrega-kun_c = ls_cliente-kunnr.
              READ TABLE lt_name INTO ls_cli_name WITH KEY kunnr = ls_cliente-kunnr.
              IF sy-subrc EQ 0.
                ls_list_entrega-name_c = ls_cli_name-name1.
              ENDIF.
            ENDIF.

            IF lv_crear_neg_o IS NOT INITIAL.
              ls_list_entrega-lfimg = ls_list_entrega-lfimg * -1.
              COLLECT ls_list_entrega INTO itab_list_entrega.

              CLEAR ls_key.
              MOVE-CORRESPONDING ls_list_entrega TO ls_key.
              ls_key-key = ls_key-vstel && ls_key-kunwe && ls_key-matnr.
              ls_key-cont = ls_key-cont + 1.
              COLLECT ls_key INTO lt_key.
            ENDIF.

            IF lv_crear_pos_o IS NOT INITIAL.
              " Se agrega el registro contrario = 04
              DATA(ls_list_entrega_04)    = ls_list_entrega.
              ls_list_entrega_04-tipo_reg = c_04.
              READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l =  ls_list_entrega_04-tipo_reg.
              IF sy-subrc EQ 0.
                ls_list_entrega_04-ddtext    = s_dd07v-ddtext.
              ENDIF.
              COLLECT ls_list_entrega_04 INTO itab_list_entrega.

              CLEAR ls_key.
              MOVE-CORRESPONDING ls_list_entrega TO ls_key.
              ls_key-key = ls_key-vstel && ls_key-kunwe && ls_key-matnr.
              ls_key-cont = ls_key-cont + 1.
              COLLECT ls_key INTO lt_key.
            ENDIF.

*
*              COLLECT ls_list_entrega INTO itab_list_entrega.
*
*              CLEAR ls_key.
*              MOVE-CORRESPONDING ls_list_entrega TO ls_key.
*              ls_key-key = ls_key-vstel && ls_key-kunwe && ls_key-matnr.
*              ls_key-cont = ls_key-cont + 1.
*              COLLECT ls_key INTO lt_key.
          ENDIF.

        ELSE.

          IF lv_devolucion IS NOT INITIAL. " Si es devolución
            IF ls_param-operacion = '-'. " 30.09.2024 Si la operación es negativa, se resta
              ls_list_entrega-lfimg = ls_list_entrega-lfimg * -1.
            ENDIF.
          ENDIF.

          " Se agrega registro que no es negativo/postivo a origen
          COLLECT ls_list_entrega INTO itab_list_entrega.
          CLEAR ls_key.
          MOVE-CORRESPONDING ls_list_entrega TO ls_key.
          ls_key-key = ls_key-vstel && ls_key-kunwe && ls_key-matnr.
          ls_key-cont = ls_key-cont + 1.
          COLLECT ls_key INTO lt_key.
        ENDIF.
      ENDIF.

      " Listado Stock
      IF pa_list2 EQ abap_true.

        CLEAR ls_list_stock.

        ls_list_stock-vkorg = s_entregas-vkorg.
        ls_list_stock-vstel = s_entregas-vstel.
        ls_list_stock-matnr = s_entregas-matnr.
        ls_list_stock-vrkme = s_entregas-vrkme.  " BG 11.10.2024 Add

*          IF lv_resta_venta IS INITIAL AND lv_crear_pos_o IS INITIAL. " BG 11.10.2024 Se comenta esta linea - Para tener el registro principal
        ls_list_stock-kunwe = s_entregas-kunnr.
        CLEAR s_name.
        READ TABLE lt_name INTO s_name WITH KEY kunnr = s_entregas-kunnr.
        IF sy-subrc EQ 0.
          ls_list_stock-name1 = s_name-name1.
        ENDIF.
        " Inicio BG 03.06.2024 - Agrega Cliente
        CLEAR: ls_cliente, ls_cli_name.
*          READ TABLE lt_kunn2 INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg
*                                                       kunn2 = s_entregas-kunnr.
        READ TABLE lt_kunn2_cliente INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg  " BG 21.10.2024 se busca de lt_kunn2_cliente
                                                             kunn2 = s_entregas-kunnr.
        IF sy-subrc EQ 0.
          ls_list_stock-kun_c = ls_cliente-kunnr.
          READ TABLE lt_name INTO ls_cli_name WITH KEY kunnr = ls_cliente-kunnr.
          IF sy-subrc EQ 0.
            ls_list_stock-name_c = ls_cli_name-name1.
          ENDIF.
        ENDIF.
        " Fin BG 03.06.2024 - Agrega Cliente
*          ENDIF.

        READ TABLE lt_facturas INTO ls_facturas WITH KEY vgbel = s_entregas-vbeln
                                                         vgpos = s_entregas-posnr.
        IF sy-subrc EQ 0.
          IF ls_facturas-kbetr > 0.
            ls_list_stock-stock_fact = ls_facturas-fkimg.
            IF ls_param-operacion = '-'. " 30.09.2024 Si la operación es negativa, se resta
              ls_list_stock-stock_fact = ls_list_stock-stock_fact.
            ELSE.
              ls_list_stock-stock_fact = ls_list_stock-stock_fact * -1.
            ENDIF.
          ENDIF.
        ENDIF.

        " Inicio BG 03.06.2024: Se elimita el campo traslado y esos valores se pasa a entrega salida, se agrega campo devoluciones
        IF lv_devolucion IS NOT INITIAL.
          ls_list_stock-devoluc = s_entregas-lfimg.
          IF ls_param-operacion = '-'. " 30.09.2024 Si la operación es negativa, se resta
            ls_list_stock-devoluc = ls_list_stock-devoluc * -1.
          ENDIF.

          COLLECT ls_list_stock INTO itab_list_stock. " BG 11.10.2024 Add

        ELSEIF  lv_resta_venta IS NOT INITIAL.

          " Inicio BG 11.10.2024 se Agrega registro original y luego si es + o - Origen
          DATA(ls_list_stock_aux_cm) = ls_list_stock.
          ls_list_stock_aux_cm-cant_sal = s_entregas-lfimg.
          COLLECT ls_list_stock_aux_cm INTO itab_list_stock.
          " Fin BG 11.10.2024 se Agrega registro original y luego si es + o - Origen

          " Agrega el contrario = c04
          ls_list_stock-resta_v = s_entregas-lfimg * -1.  " BG 11.10.2024 Add
          " Válida si el destinatario es un centro de montaje, para agregar el registro de CM Venta cliente (glaf negativo origen)
          READ TABLE lt_t001l INTO s_t001l WITH KEY werks = s_entregas-werks
                                                            vkorg = s_entregas-vkorg
                                                            vstel = s_entregas-vstel.
          IF sy-subrc EQ 0.
            CLEAR s_name.
            READ TABLE lt_name INTO s_name WITH KEY kunnr = s_t001l-kunnr.
            IF sy-subrc EQ 0.
              ls_list_stock-kunwe = s_name-kunnr.
              ls_list_stock-name1 = s_name-name1.
            ENDIF.

            CLEAR: ls_cliente, ls_cli_name.
*              READ TABLE lt_kunn2 INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg
*                                                           kunn2 = s_t001l-kunnr.
            READ TABLE lt_kunn2_cliente INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg  " BG 21.10.2024 se busca de lt_kunn2_cliente
                                                                 kunn2 = s_t001l-kunnr.
            IF sy-subrc EQ 0.
              ls_list_stock-kun_c = ls_cliente-kunnr.
              READ TABLE lt_name INTO ls_cli_name WITH KEY kunnr = ls_cliente-kunnr.
              IF sy-subrc EQ 0.
                ls_list_stock-name_c = ls_cli_name-name1.
              ENDIF.
            ENDIF.

            COLLECT ls_list_stock INTO itab_list_stock.     " BG 11.10.2024 Add

          ELSE.
            CONTINUE.
          ENDIF.

        ELSEIF lv_crear_pos_o IS NOT INITIAL.

          " Inicio BG 11.10.2024 se Agrega registro original y luego si es + o - Origen
          ls_list_stock_aux_cm = ls_list_stock.
          ls_list_stock_aux_cm-cant_sal = s_entregas-lfimg.
          COLLECT ls_list_stock_aux_cm INTO itab_list_stock.
          " Fin BG 11.10.2024 se Agrega registro original y luego si es + o - Origen

          " Agrega el contrario = c05
          ls_list_stock-devoluc_vc = s_entregas-lfimg.
          " Válida si el destinatario es un centro de montaje, para agregar el registro de CM Venta cliente (glaf negativo origen)
          READ TABLE lt_t001l INTO s_t001l WITH KEY werks = s_entregas-werks
                                                    vkorg = s_entregas-vkorg
                                                    vstel = s_entregas-vstel.
          IF sy-subrc EQ 0.
            CLEAR s_name.
            READ TABLE lt_name INTO s_name WITH KEY kunnr = s_t001l-kunnr.
            IF sy-subrc EQ 0.
              ls_list_stock-kunwe = s_name-kunnr.
              ls_list_stock-name1 = s_name-name1.
            ENDIF.

            CLEAR: ls_cliente, ls_cli_name.
*              READ TABLE lt_kunn2 INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg
*                                                           kunn2 = s_t001l-kunnr.
            READ TABLE lt_kunn2_cliente INTO ls_cliente WITH KEY vkorg = s_entregas-vkorg  " BG 21.10.2024 se busca de lt_kunn2_cliente
                                                                 kunn2 = s_t001l-kunnr.
            IF sy-subrc EQ 0.
              ls_list_stock-kun_c = ls_cliente-kunnr.
              READ TABLE lt_name INTO ls_cli_name WITH KEY kunnr = ls_cliente-kunnr.
              IF sy-subrc EQ 0.
                ls_list_stock-name_c = ls_cli_name-name1.
              ENDIF.
            ENDIF.

            COLLECT ls_list_stock INTO itab_list_stock. " BG 11.10.2024 Add

          ELSE.
            CONTINUE.
          ENDIF.

        ELSE.
          ls_list_stock-cant_sal = s_entregas-lfimg.
          COLLECT ls_list_stock INTO itab_list_stock. " BG 11.10.2024 Add
        ENDIF.

*          READ TABLE lt_facturas INTO ls_facturas WITH KEY vgbel = s_entregas-vbeln
*                                                           vgpos = s_entregas-posnr.
*          IF sy-subrc EQ 0.
*            IF ls_facturas-kbetr > 0.
*              ls_list_stock-stock_fact = ls_facturas-fkimg.
**              IF ls_param-operacion = '-'. " 30.09.2024 Si la operación es negativa, se resta
*              ls_list_stock-stock_fact = ls_list_stock-stock_fact * -1.
**              ENDIF.
*            ENDIF.
*          ENDIF.
        " Fin BG 03.06.2024: Se elimita el campo traslado y esos valores se pasa a entrega salida, se agrega campo devoluciones


*          ls_list_stock-vrkme    = s_entregas-vrkme.  " BG 11.10.2024 Comentado
*          COLLECT ls_list_stock INTO itab_list_stock. " BG 11.10.2024 Comentado
      ENDIF.

      CLEAR: s_entregas, s_name, ls_list_stock, ls_list_entrega, s_mara,
             s_mvke, s_dd07v, ls_facturas, ls_param.
    ENDLOOP.


    IF so_vbeln[] IS NOT INITIAL. " BG Filtro entregas 11.10.2024 -  Si han filtrado alguna entrega, no se agrega los registros de la tabla Z
      EXIT.
    ENDIF.

*&---------------------------------------------------------------------*
    " Listado 1: se agregan los registros adicionales de la tabla Z, a partir de la
    " llave: puerto de exped. destinatario y material
*&---------------------------------------------------------------------*
    IF pa_list1 EQ abap_true.

      SORT lt_key BY key ASCENDING.
      SORT itab_list_entrega BY vstel kunwe matnr ASCENDING.
      LOOP AT lt_key ASSIGNING FIELD-SYMBOL(<fs_key>).

        AT END OF key.

          DATA(lt_entrega_x) = itab_list_entrega[].
          DELETE lt_entrega_x WHERE vstel NE <fs_key>-vstel OR kunwe NE <fs_key>-kunwe
                                 OR matnr NE <fs_key>-matnr.

          DESCRIBE TABLE lt_entrega_x LINES DATA(l_index).

          l_index = l_index + lv_index_2.
          lv_cont_add = l_index.
          READ TABLE itab_list_entrega INTO DATA(ls_list_add) INDEX l_index.
          IF sy-subrc EQ 0.

            LOOP AT lt_cant INTO DATA(ls_cant) WHERE vstel = ls_list_add-vstel
                                                 AND kunwe = ls_list_add-kunwe
                                                 AND matnr = ls_list_add-matnr.
*                                                   AND budat >= ls_list_add-wadat_ist.
              lv_cant_ent  = lv_cant_ent  + ls_cant-cant_ent.
              lv_cant_rec  = lv_cant_rec  + ls_cant-cant_rec.
*                lv_stock_ini = lv_stock_ini + ls_cant-stock_ini.

              ls_list_entrega-tdlnr     = ls_cant-tdlnr.  "VRS 05.02.2024
              READ TABLE lt_tdlnr INTO DATA(s_tdlnr) WITH KEY lifnr = ls_cant-tdlnr.
              IF sy-subrc = 0.
                ls_list_entrega-tdlnr_name1 = s_tdlnr-name1.
              ENDIF.

              ls_list_entrega-vkorg     = ls_list_add-vkorg.
              ls_list_entrega-vstel     = ls_list_add-vstel.
              ls_list_entrega-kunwe     = ls_list_add-kunwe.
              ls_list_entrega-name1     = ls_list_add-name1.
              ls_list_entrega-kun_c     = ls_list_add-kun_c.
              ls_list_entrega-name_c    = ls_list_add-name_c.
              ls_list_entrega-wadat_ist = ls_cant-budat.
              ls_list_entrega-matnr     = ls_list_add-matnr.
              ls_list_entrega-maktx     = ls_list_add-maktx.
              ls_list_entrega-laeng     = ls_list_add-laeng.
              ls_list_entrega-breit     = ls_list_add-breit.
              ls_list_entrega-hoehe     = ls_list_add-hoehe.
              ls_list_entrega-vrkme     = ls_list_add-vrkme.
              ls_list_entrega-mvgr1     = ls_list_add-mvgr1.
              ls_list_entrega-bezei     = ls_list_add-bezei.

*                " Entrega Salida
*                IF  lv_stock_ini IS NOT INITIAL.
*                  lv_cont_add = lv_cont_add + 1.
*                  ls_list_entrega-tipo_reg = c_01. " c_00.
*                  READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l = c_01. " c_00.
*                  IF sy-subrc EQ 0.
*                    ls_list_entrega-ddtext = s_dd07v-ddtext.
*                  ENDIF.
*                  ls_list_entrega-lfimg = lv_stock_ini.
*                  INSERT ls_list_entrega INTO itab_list_entrega INDEX lv_cont_add.
*                ENDIF.

              " Entregado Manual
              IF  lv_cant_ent IS NOT INITIAL.
                lv_cont_add = lv_cont_add + 1.
                ls_list_entrega-tipo_reg = c_02. "c_03.
                READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l = ls_list_entrega-tipo_reg.
                IF sy-subrc EQ 0.
                  ls_list_entrega-ddtext = s_dd07v-ddtext.
                ENDIF.
                ls_list_entrega-lfimg = lv_cant_ent.
                INSERT ls_list_entrega INTO itab_list_entrega INDEX lv_cont_add.
              ENDIF.

              " Ajuste Manual
              IF  lv_cant_rec IS NOT INITIAL.

                " Inicio BG 06.06.2024 - tipo reg.03 no se muestra si es de diferentes centros
                CLEAR lv_ebelp.
**                  lv_ebelp = s_entregas-vgpos.
**                  READ TABLE lt_ekpo INTO DATA(ls_ekpo) WITH KEY ebeln = s_entregas-vgbel
**                                                                 ebelp = lv_ebelp.
**                  IF ls_ekpo-werks = s_entregas-werks.
                " Fin BG 06.06.2024 - tipo reg.03 no se muestra si es de diferentes centros

                lv_cont_add = lv_cont_add + 1.
                ls_list_entrega-tipo_reg = c_03. " c_04.
                READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l = ls_list_entrega-tipo_reg.
                IF sy-subrc EQ 0.
                  ls_list_entrega-ddtext = s_dd07v-ddtext.
                ENDIF.
                ls_list_entrega-lfimg = lv_cant_rec.
                INSERT ls_list_entrega INTO itab_list_entrega INDEX lv_cont_add.
*                  ENDIF.
              ENDIF.

              lv_index_2 = lv_cont_add.

              DATA(lv_borrar_linea) = abap_true.

              CLEAR: lv_cant_ent, lv_cant_rec, ls_list_entrega.
            ENDLOOP.
            CLEAR lv_cont_add.
            IF sy-subrc NE 0.
              lv_index_2 = l_index.
            ENDIF.

            IF lv_borrar_linea = abap_true.
              DELETE lt_cant_agrega_ad WHERE vstel = ls_list_add-vstel
                                         AND kunwe = ls_list_add-kunwe
                                         AND matnr = ls_list_add-matnr.
            ENDIF.
          ENDIF.

          CLEAR: lv_cont_add, lv_cant_ent, lv_cant_rec, ls_list_entrega,
                 ls_key, lt_entrega_x[], l_index, s_dd07v, lv_borrar_linea.
        ENDAT.
      ENDLOOP.

      " BG 28.10.2024 - Se agrega registros de la tabla zssdt038 que no se han leido en el loop anterior
      PERFORM agrega_cantidad_tabla USING lt_cant_agrega_ad
                                          lt_tdlnr
                                          t_dd07v_tab
                                          lt_name
                                          lt_kunn2_cliente
                                    CHANGING gt_list_entrega.
    ENDIF.

*&---------------------------------------------------------------------*
    " Listado 2: se agregan los registros adicionales de la tabla Z
*&---------------------------------------------------------------------*
    IF pa_list2 EQ abap_true.
      LOOP AT itab_list_stock ASSIGNING FIELD-SYMBOL(<ls_list_stock>).

        <ls_list_stock>-resta_v = <ls_list_stock>-resta_v * -1.

        READ TABLE lt_mara INTO s_mara WITH KEY matnr = <ls_list_stock>-matnr.
        IF sy-subrc EQ 0.
          <ls_list_stock>-laeng = s_mara-laeng.
          <ls_list_stock>-breit = s_mara-breit.
          <ls_list_stock>-hoehe = s_mara-hoehe.
          <ls_list_stock>-maktx = s_mara-maktx.
        ENDIF.

        READ TABLE lt_mvke INTO s_mvke WITH KEY matnr = <ls_list_stock>-matnr
                                                vkorg = <ls_list_stock>-vkorg.
        IF sy-subrc EQ 0.
          <ls_list_stock>-mvgr1 = s_mvke-mvgr1.
          <ls_list_stock>-bezei = s_mvke-bezei.
        ENDIF.

        CLEAR: lv_cant_ent, lv_cant_rec.
        LOOP AT lt_cant INTO ls_cant WHERE vstel = <ls_list_stock>-vstel
                                       AND kunwe = <ls_list_stock>-kunwe
                                       AND matnr = <ls_list_stock>-matnr.

          lv_cant_ent  = lv_cant_ent  + ls_cant-cant_ent.
          lv_cant_rec  = lv_cant_rec  + ls_cant-cant_rec.
*            lv_stock_ini = lv_stock_ini + ls_cant-stock_ini.

          DELETE lt_cant_agrega_ad WHERE vstel = <ls_list_stock>-vstel
                                     AND kunwe = <ls_list_stock>-kunwe
                                     AND matnr = <ls_list_stock>-matnr.
        ENDLOOP.

        <ls_list_stock>-cant_ent  = lv_cant_ent.
        <ls_list_stock>-cant_rec  = lv_cant_rec.
*          <ls_list_stock>-stock_ini = lv_stock_ini.
        <ls_list_stock>-stock_pal = lv_cant_ent + lv_cant_rec + <ls_list_stock>-cant_sal +
                                      <ls_list_stock>-devoluc + <ls_list_stock>-resta_v +
                                      <ls_list_stock>-devoluc_vc + <ls_list_stock>-stock_fact.
        CLEAR ls_cant.
      ENDLOOP.

      " Se agrega registros de la tabla zssdt038 que no se han leido en el loop anterior
*        LOOP AT lt_cant INTO ls_cant.
      LOOP AT lt_cant_agrega_ad INTO ls_cant. " BG 21.10.2024
        READ TABLE itab_list_stock INTO DATA(s_list_stock_no) WITH KEY vstel = ls_cant-vstel
                                                                       kunwe = ls_cant-kunwe
                                                                       matnr = ls_cant-matnr.
        IF sy-subrc NE 0.
          MOVE-CORRESPONDING ls_cant TO s_list_stock_no.
          s_list_stock_no-vrkme = ls_cant-meins.
          READ TABLE lt_mara INTO s_mara WITH KEY matnr =  s_list_stock_no-matnr.
          IF sy-subrc EQ 0.
            s_list_stock_no-laeng = s_mara-laeng.
            s_list_stock_no-breit = s_mara-breit.
            s_list_stock_no-hoehe = s_mara-hoehe.
            s_list_stock_no-maktx = s_mara-maktx.
          ENDIF.
          READ TABLE lt_name INTO s_name WITH KEY kunnr = s_list_stock_no-kunwe.
          IF sy-subrc EQ 0.
            s_list_stock_no-name1 = s_name-name1.
          ENDIF.

          READ TABLE lt_mvke INTO s_mvke WITH KEY matnr = s_list_stock_no-matnr
                                                  vkorg = s_list_stock_no-vkorg.
          IF sy-subrc EQ 0.
            s_list_stock_no-mvgr1 = s_mvke-mvgr1.
            s_list_stock_no-bezei = s_mvke-bezei.
          ENDIF.

          CLEAR: ls_cliente, ls_cli_name.
          READ TABLE lt_kunn2_cliente INTO ls_cliente WITH KEY vkorg = s_list_stock_no-vkorg  " BG 21.10.2024 se busca de lt_kunn2_cliente
                                                               kunn2 = s_list_stock_no-kunwe.
          IF sy-subrc EQ 0.
            s_list_stock_no-kun_c = ls_cliente-kunnr.
            READ TABLE lt_name INTO ls_cli_name WITH KEY kunnr = ls_cliente-kunnr.
            IF sy-subrc EQ 0.
              s_list_stock_no-name_c = ls_cli_name-name1.
            ENDIF.
          ENDIF.

          s_list_stock_no-cant_ent  = ls_cant-cant_ent.
          s_list_stock_no-cant_rec  = ls_cant-cant_rec.
          s_list_stock_no-stock_pal = s_list_stock_no-cant_ent     + s_list_stock_no-cant_rec + s_list_stock_no-cant_sal
                                      + s_list_stock_no-devoluc    + s_list_stock_no-resta_v +
                                        s_list_stock_no-devoluc_vc + s_list_stock_no-stock_fact.

          APPEND s_list_stock_no TO itab_list_stock.
        ENDIF.
        CLEAR: s_name, s_mara, s_list_stock_no, s_mvke.
      ENDLOOP.
    ENDIF.
*    ENDIF. " BG 8.10.2024 se comenta este if para agregar los registros adicionales que NO estan relacionados con las entregas

    " Se agrega registros marcados como carga inicial en tabla Z
    lcl_main=>carga_ini( IMPORTING itab_list_entrega = gt_list_entrega
                                   itab_list_stock   = gt_list_stock ).

    " BG 21.10.2024 - Para filtrar los que se han agregado en carga inicial o cambia en CM
    IF so_kunwe[] IS NOT INITIAL.
      DELETE gt_list_entrega WHERE kunwe NOT IN so_kunwe.
      DELETE gt_list_stock WHERE kunwe NOT IN so_kunwe.
    ENDIF.
    IF so_kunnr[] IS NOT INITIAL.
      DELETE gt_list_entrega WHERE kun_c NOT IN so_kunnr.
      DELETE gt_list_stock WHERE kun_c NOT IN so_kunnr.
    ENDIF.

  ENDMETHOD.
*&---------------------------------------------------------------------*
  METHOD carga_ini.
    DATA: lt_cant_carga_ini TYPE STANDARD TABLE OF zssdt038,
          t_dd07v_tab       TYPE STANDARD TABLE OF dd07v,
          ls_list_entrega   LIKE LINE OF itab_list_entrega,
          ls_list_stock_no  LIKE LINE OF itab_list_stock.

    " Stocks Guardados
    SELECT * INTO TABLE @DATA(lt_zssdt038)
      FROM zssdt038
      WHERE vkorg IN @so_vkorg
        AND vstel IN @so_vstel
        AND kunwe IN @so_kunwe
        AND matnr IN @so_matnr
        AND carga_ini EQ @abap_true.

    SORT lt_zssdt038 BY kunwe matnr budat DESCENDING.

    "Transportistas
    IF lt_zssdt038[] IS NOT INITIAL.
      SELECT lifnr, name1 INTO TABLE @DATA(lt_tdlnr)
        FROM lfa1
        FOR ALL ENTRIES IN @lt_zssdt038
        WHERE lifnr = @lt_zssdt038-tdlnr.
    ENDIF.

    LOOP AT  lt_zssdt038 INTO DATA(ls_cant_collect).
      CLEAR: ls_cant_collect-utime,  ls_cant_collect-udate, ls_cant_collect-username.
      COLLECT ls_cant_collect INTO lt_cant_carga_ini.
    ENDLOOP.
    SORT lt_cant_carga_ini BY vkorg vstel kunwe matnr tdlnr ASCENDING.

    IF lt_cant_carga_ini[] IS NOT INITIAL.
      " CLiente asociado al destinatario
      SELECT DISTINCT kunnr, kunn2, vkorg INTO TABLE @DATA(lt_kunn2)
      FROM knvp FOR ALL ENTRIES IN @lt_zssdt038
      WHERE kunnr IN @so_kunnr
        AND vkorg IN @so_vkorg
        AND vtweg EQ '10'
        AND spart EQ '10'
        AND parvw EQ 'WE'
        AND kunn2 EQ @lt_zssdt038-kunwe.
      IF sy-subrc EQ 0.
        SELECT kunnr, name1 INTO TABLE @DATA(lt_cli_name)
          FROM kna1
          FOR ALL ENTRIES IN @lt_kunn2
          WHERE kunnr EQ @lt_kunn2-kunnr.
      ENDIF.

      " Nombre del destinatario
      SELECT kunnr, name1 INTO TABLE @DATA(lt_cli_ini)
        FROM kna1
        FOR ALL ENTRIES IN @lt_cant_carga_ini
        WHERE kunnr EQ @lt_cant_carga_ini-kunwe.

      SELECT a~matnr, a~laeng, a~breit, a~hoehe, a~meabm, b~maktx
      INTO TABLE @DATA(lt_mara_ini)
       FROM mara AS a INNER JOIN makt AS b ON a~matnr EQ b~matnr
        FOR ALL ENTRIES IN @lt_cant_carga_ini
       WHERE a~matnr EQ @lt_cant_carga_ini-matnr
         AND spras EQ @sy-langu.

      SELECT DISTINCT a~matnr, a~vkorg, a~vtweg, a~mvgr1, b~bezei
       INTO TABLE @DATA(lt_mvke)
        FROM mvke AS a INNER JOIN tvm1t AS b ON a~mvgr1 EQ b~mvgr1
         FOR ALL ENTRIES IN @lt_cant_carga_ini
          WHERE a~matnr = @lt_cant_carga_ini-matnr
           AND a~vkorg = @lt_cant_carga_ini-vkorg
           AND a~vtweg = '10'
           AND b~spras = @sy-langu.
    ENDIF.

    IF pa_list1 EQ abap_true.

      " Descripción tipo de registr
      CALL FUNCTION 'DD_DOMVALUES_GET'
        EXPORTING
          domname        = 'ZSSDTIPO_REG'
          text           = abap_true
          langu          = sy-langu
        TABLES
          dd07v_tab      = t_dd07v_tab
        EXCEPTIONS
          wrong_textflag = 1
          OTHERS         = 2.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

      LOOP AT lt_cant_carga_ini INTO DATA(ls_cant).
        MOVE-CORRESPONDING ls_cant TO ls_list_entrega.

        " Cliente
        READ TABLE lt_kunn2 INTO DATA(ls_kunn2) WITH KEY vkorg =  ls_list_entrega-vkorg
                                                         kunn2 =  ls_list_entrega-kunwe.
        IF sy-subrc EQ 0.
          ls_list_entrega-kun_c = ls_kunn2-kunnr.
          READ TABLE lt_cli_name INTO DATA(ls_cli_name) WITH KEY kunnr =  ls_list_entrega-kun_c.
          IF sy-subrc EQ 0.
            ls_list_entrega-name_c = ls_cli_name-name1.
          ENDIF.
        ENDIF.

        IF ls_cant-cant_ent IS NOT INITIAL.
          DATA(ls_list_entrega_ini) = ls_list_entrega.
          ls_list_entrega_ini-wadat_ist = ls_cant-budat.
          ls_list_entrega_ini-tipo_reg = c_02.
          READ TABLE t_dd07v_tab INTO DATA(s_dd07v) WITH KEY domvalue_l = ls_list_entrega_ini-tipo_reg.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-ddtext = s_dd07v-ddtext.
          ENDIF.
          ls_list_entrega_ini-lfimg = ls_cant-cant_ent.

          ls_list_entrega_ini-vrkme = ls_cant-meins.
          READ TABLE lt_mara_ini INTO DATA(s_mara) WITH KEY matnr =  ls_list_entrega_ini-matnr.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-laeng = s_mara-laeng.
            ls_list_entrega_ini-breit = s_mara-breit.
            ls_list_entrega_ini-hoehe = s_mara-hoehe.
            ls_list_entrega_ini-maktx = s_mara-maktx.
          ENDIF.
          READ TABLE lt_cli_ini INTO DATA(s_name) WITH KEY kunnr = ls_list_entrega_ini-kunwe.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-name1 = s_name-name1.
          ENDIF.

          READ TABLE lt_mvke INTO DATA(s_mvke) WITH KEY matnr = ls_list_entrega_ini-matnr
                                                  vkorg = ls_list_entrega_ini-vkorg.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-mvgr1 = s_mvke-mvgr1.
            ls_list_entrega_ini-bezei = s_mvke-bezei.
          ENDIF.

          APPEND ls_list_entrega_ini TO itab_list_entrega.
          CLEAR: ls_list_entrega_ini, s_name, s_mara.
        ENDIF.

        IF ls_cant-cant_rec IS NOT INITIAL.
          ls_list_entrega_ini = ls_list_entrega.
          ls_list_entrega_ini-wadat_ist = ls_cant-budat.
          ls_list_entrega_ini-tipo_reg = c_03.
          READ TABLE t_dd07v_tab INTO s_dd07v WITH KEY domvalue_l = ls_list_entrega_ini-tipo_reg.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-ddtext = s_dd07v-ddtext.
          ENDIF.
          ls_list_entrega_ini-lfimg = ls_cant-cant_rec.

          ls_list_entrega_ini-vrkme = ls_cant-meins.
          READ TABLE lt_mara_ini INTO s_mara WITH KEY matnr =  ls_list_entrega_ini-matnr.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-laeng = s_mara-laeng.
            ls_list_entrega_ini-breit = s_mara-breit.
            ls_list_entrega_ini-hoehe = s_mara-hoehe.
            ls_list_entrega_ini-maktx = s_mara-maktx.
          ENDIF.
          READ TABLE lt_cli_ini INTO s_name WITH KEY kunnr = ls_list_entrega_ini-kunwe.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-name1 = s_name-name1.
          ENDIF.

          READ TABLE lt_mvke INTO s_mvke WITH KEY matnr = ls_list_entrega_ini-matnr
                                                  vkorg = ls_list_entrega_ini-vkorg.
          IF sy-subrc EQ 0.
            ls_list_entrega_ini-mvgr1 = s_mvke-mvgr1.
            ls_list_entrega_ini-bezei = s_mvke-bezei.
          ENDIF.

          APPEND ls_list_entrega_ini TO itab_list_entrega.
          CLEAR: ls_list_entrega_ini, s_name, s_mara.
        ENDIF.
        CLEAR: ls_cant, ls_kunn2, ls_cli_name..
      ENDLOOP.
    ENDIF.

    IF pa_list2 IS NOT INITIAL.

      LOOP AT lt_cant_carga_ini INTO ls_cant.
        MOVE-CORRESPONDING ls_cant TO ls_list_stock_no.
        ls_list_stock_no-vrkme = ls_cant-meins.
        READ TABLE lt_mara_ini INTO s_mara WITH KEY matnr =  ls_list_stock_no-matnr.
        IF sy-subrc EQ 0.
          ls_list_stock_no-laeng = s_mara-laeng.
          ls_list_stock_no-breit = s_mara-breit.
          ls_list_stock_no-hoehe = s_mara-hoehe.
          ls_list_stock_no-maktx = s_mara-maktx.
        ENDIF.

        " Destinatario
        READ TABLE lt_cli_ini INTO s_name WITH KEY kunnr = ls_list_stock_no-kunwe.
        IF sy-subrc EQ 0.
          ls_list_stock_no-name1 = s_name-name1.
        ENDIF.

        " Cliente
        READ TABLE lt_kunn2 INTO ls_kunn2 WITH KEY vkorg = ls_list_stock_no-vkorg
                                                         kunn2 = ls_list_stock_no-kunwe.
        IF sy-subrc EQ 0.
          ls_list_stock_no-kun_c = ls_kunn2-kunnr.
          READ TABLE lt_cli_name INTO ls_cli_name WITH KEY kunnr = ls_list_stock_no-kun_c.
          IF sy-subrc EQ 0.
            ls_list_stock_no-name_c = ls_cli_name-name1.
          ENDIF.
        ENDIF.

        READ TABLE lt_mvke INTO s_mvke WITH KEY matnr = ls_list_stock_no-matnr
                                                vkorg = ls_list_stock_no-vkorg.
        IF sy-subrc EQ 0.
          ls_list_stock_no-mvgr1 = s_mvke-mvgr1.
          ls_list_stock_no-bezei = s_mvke-bezei.
        ENDIF.

        ls_list_stock_no-stock_pal = ls_list_stock_no-cant_ent + ls_list_stock_no-cant_rec +
                                     ls_list_stock_no-cant_sal + ls_list_stock_no-devoluc +
                                     ls_list_stock_no-resta_v +  ls_list_stock_no-devoluc_vc.

        APPEND ls_list_stock_no TO itab_list_stock.
        CLEAR: s_name, s_mara, ls_list_stock_no, s_mvke, ls_kunn2, ls_cli_name.
      ENDLOOP.
    ENDIF.

  ENDMETHOD.
*&---------------------------------------------------------------------*
  METHOD show_alv.
    CALL SCREEN 100.
  ENDMETHOD.
*&---------------------------------------------------------------------*
  METHOD fill_cat.
    DATA: l_fieldcat TYPE LINE OF lvc_t_fcat,
          l_estruc   TYPE dd02l-tabname.

    REFRESH itab_fieldcat.
    CLEAR l_estruc.

    IF pa_list1 IS NOT INITIAL.
      l_estruc = 'ZSSD038_ALV1'.
    ELSE.
      l_estruc = 'ZSSD038_ALV2'.
    ENDIF.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        i_buffer_active        = 'X'
        i_structure_name       = l_estruc
        i_bypassing_buffer     = 'X'
      CHANGING
        ct_fieldcat            = itab_fieldcat[]
      EXCEPTIONS
        inconsistent_interface = 1
        program_error          = 2
        OTHERS                 = 3.

    LOOP AT itab_fieldcat ASSIGNING FIELD-SYMBOL(<l_fieldcat>).
      CASE <l_fieldcat>-fieldname.
        WHEN 'VSTEL' OR 'WADAT_IST' OR 'MATNR' OR 'MAKTX'
          OR 'VBELN' OR 'BREIT' OR 'HOEHE' OR 'BEZEI' OR 'TDLNR'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'TIPO_REG'.
          <l_fieldcat>-ref_field = 'TIPO_REG'.
          <l_fieldcat>-ref_table = 'ZSSDT_TIPO_REG'.
          <l_fieldcat>-outputlen = 2.
        WHEN 'DDTEXT'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'KUNWE'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'NAME1'.
          <l_fieldcat>-key = abap_true.
          <l_fieldcat>-coltext   = 'Destinatario'.
          <l_fieldcat>-scrtext_l = 'Destinatario'.
          <l_fieldcat>-scrtext_m = 'Destinatario'.
          <l_fieldcat>-scrtext_s = 'Destinat.'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'KUN_C'.
          <l_fieldcat>-key = abap_true.
          <l_fieldcat>-coltext   = 'Cliente'.
          <l_fieldcat>-scrtext_l = 'Cliente'.
          <l_fieldcat>-scrtext_m = 'Cliente'.
          <l_fieldcat>-scrtext_s = 'Cliente'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'NAME_C'.
          <l_fieldcat>-key = abap_true.
          <l_fieldcat>-coltext   = 'Nombre Cliente'.
          <l_fieldcat>-scrtext_l = 'Nombre Cliente'.
          <l_fieldcat>-scrtext_m = 'Nombre Cliente'.
          <l_fieldcat>-scrtext_s = 'Cliente'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'LFART'.
          <l_fieldcat>-key = abap_true.
          <l_fieldcat>-f4availabl = abap_true.
        WHEN 'LAENG'.
          <l_fieldcat>-coltext   = 'Largo'.
          <l_fieldcat>-scrtext_l = 'Largo'.
          <l_fieldcat>-scrtext_m = 'Largo'.
          <l_fieldcat>-scrtext_s = 'Largo'.
          <l_fieldcat>-outputlen = 5.
        WHEN 'CANT_SAL'.
          <l_fieldcat>-coltext   = 'Entrega salida'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'LFIMG'.
          <l_fieldcat>-coltext   = 'Cantidad'.
          <l_fieldcat>-scrtext_l = 'Cantidad'.
          <l_fieldcat>-scrtext_m = 'Cantidad'.
          <l_fieldcat>-scrtext_s = 'Cantidad'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'STOCK_INI' OR 'TRASLADO' OR 'DEVOL'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'CANT_ENT'.
          <l_fieldcat>-coltext = 'Entregado (manual)'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'CANT_REC'.
          <l_fieldcat>-coltext = 'Ajuste (manual)'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'DEVOLUC'.
          <l_fieldcat>-coltext = 'Devoluciones'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'RESTA_V'.
          <l_fieldcat>-coltext = 'CM Vent Cli'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'DEVOLUC_VC'.
          <l_fieldcat>-coltext = 'CM Dev Cli'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'STOCK_FACT'.
          <l_fieldcat>-coltext = 'Stock Facturado'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'STOCK_PAL'.
          <l_fieldcat>-outputlen = '12'.
          <l_fieldcat>-do_sum = abap_true.
          <l_fieldcat>-outputlen = 7.
        WHEN 'TDLNR_NAME1'.
          <l_fieldcat>-coltext   = 'Transportista'.
          <l_fieldcat>-scrtext_l = 'Transportista'.
          <l_fieldcat>-scrtext_m = 'Transportista'.
          <l_fieldcat>-scrtext_s = 'Transportista'.
          <l_fieldcat>-outputlen = 5.
      ENDCASE.
    ENDLOOP.
  ENDMETHOD.

*&---------------------------------------------------------------------*
  METHOD get_cm_cust.

    DATA: lr_werks TYPE RANGE OF lips-werks,
          lr_lgort TYPE RANGE OF mdlg-lgort,
          lr_matnr TYPE RANGE OF lips-matnr,
          lr_lfart TYPE RANGE OF likp-lfart.

    IF itab_entregas[] IS NOT INITIAL.
      lr_werks = VALUE #( FOR wa IN itab_entregas ( sign   = 'I'
                                                    option = 'EQ'
                                                    low    = wa-werks ) ).
      SORT lr_werks.
      DELETE ADJACENT DUPLICATES FROM lr_werks.
      DELETE lr_werks WHERE low IS INITIAL.

      SELECT lgort INTO TABLE @DATA(lt_lgort_cm)
        FROM mdlg
        WHERE werks IN @lr_werks.
      IF sy-subrc EQ 0.

        lr_lgort = VALUE #( FOR wa1 IN lt_lgort_cm ( sign   = 'I'
                                                    option = 'EQ'
                                                    low    = wa1-lgort ) ).
        SORT lr_lgort.
        DELETE ADJACENT DUPLICATES FROM lr_lgort.
        DELETE lr_lgort WHERE low IS INITIAL.

        lr_matnr = VALUE #( FOR wa2 IN itab_entregas ( sign   = 'I'
                                            option = 'EQ'
                                            low    = wa2-matnr ) ).

      ENDIF.
    ENDIF.

    LOOP AT so_matnr INTO DATA(ls_matnr).
      APPEND ls_matnr TO lr_matnr.
    ENDLOOP.
    SORT lr_matnr.
    DELETE ADJACENT DUPLICATES FROM lr_matnr.


    SELECT * INTO TABLE @itab_t001l
      FROM t001l
*        FOR ALL ENTRIES IN @itab_entregas
      WHERE werks IN @lr_werks
        AND lgort IN @lr_lgort
        AND vkorg IN @so_vkorg " @itab_entregas-vkorg BG 28.10.2024
        AND kunnr IN @lr_kunwe. " BG 06.06.2024
*          AND vstel IN @so_vstel. " BG 12.06.2024


    DELETE itab_t001l WHERE kunnr IS INITIAL.
    IF so_vstel[] IS NOT INITIAL.
      DELETE itab_t001l WHERE vstel NOT IN so_vstel[].
    ENDIF.

    IF itab_t001l[] IS NOT INITIAL.
      SELECT kunnr, name1 APPENDING TABLE @itab_name
       FROM kna1 FOR ALL ENTRIES IN @itab_t001l
        WHERE kunnr EQ @itab_t001l-kunnr.

      " Busca las clase de entrega que tienen negativo a origen
      DATA(lt_lfart_neg_origen) = itab_param[].
      DELETE lt_lfart_neg_origen WHERE negativo IS INITIAL.
      lr_lfart  = VALUE #( FOR wa_3 IN lt_lfart_neg_origen ( sign  = 'I'
                                                            option = 'EQ'
                                                            low    = wa_3-lfart ) ).

      " Busca las clase de entrega que tienen Positivo a origen
      LOOP AT itab_param INTO DATA(s_param) WHERE pos_origen = abap_true.
        APPEND VALUE #( sign = 'I' option = 'EQ'  low = s_param-lfart ) TO lr_lfart.
      ENDLOOP.

      SORT lr_lfart.
      DELETE ADJACENT DUPLICATES FROM lr_lfart.

      " Agregamos entregas con las clases anteriores (para negativo origen)
      SELECT a~vbeln, a~vstel, a~kunnr, a~lfart, a~wadat_ist, a~vkorg,
             b~pstyv, b~posnr, b~matnr, b~lfimg, b~vrkme, b~werks, b~lgort,
             b~vgbel, b~vgpos
       APPENDING TABLE @itab_entregas
        FROM likp AS a INNER JOIN lips AS b ON a~vbeln = b~vbeln
                       INNER JOIN vbuk AS c ON a~vbeln = c~vbeln
        FOR ALL ENTRIES IN @itab_t001l
        WHERE vkorg EQ @itab_t001l-vkorg
          AND vstel EQ @itab_t001l-vstel
          AND lfart IN @lr_lfart
          AND kunnr IN @lr_kunwe " ARA 23.09.2024
          AND matnr IN @lr_matnr
          AND pstyv IN @lr_pstyv
          AND a~vbeln IN @so_vbeln " BG 11.10.2024
          AND wbstk EQ @c_c.
    ENDIF.
*    ENDIF.

  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_receiver DEFINITION.

  PUBLIC SECTION.

    METHODS:
      handle_toolbar
                  FOR EVENT toolbar OF cl_gui_alv_grid
        IMPORTING e_object e_interactive,

      handle_user_command
                  FOR EVENT user_command OF cl_gui_alv_grid
        IMPORTING e_ucomm.

  PRIVATE SECTION.
    METHODS:
      set_stock_ini       IMPORTING l_row TYPE lvc_s_row,
      set_cant_entregada  IMPORTING l_row TYPE lvc_s_row,
      set_cant_recuperada IMPORTING l_row TYPE lvc_s_row,
      borrar_registro     IMPORTING l_row TYPE lvc_s_row,
      set_transp          IMPORTING l_row TYPE lvc_s_row,
      set_registro        IMPORTING l_row TYPE lvc_s_row.

ENDCLASS.

DATA event_receiver   TYPE REF TO lcl_event_receiver.

CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD handle_toolbar.
    DATA: ls_toolbar  TYPE stb_button.

    IF pa_list2 EQ abap_true.
*      CLEAR ls_toolbar.
*      MOVE 'STOCK_INI' TO ls_toolbar-function.
*      MOVE icon_stock TO ls_toolbar-icon.
*      MOVE 'Añadir Stock Inicial' TO ls_toolbar-quickinfo.
*      MOVE 'Stock Inicial' TO ls_toolbar-text.
*      APPEND ls_toolbar TO e_object->mt_toolbar.

      CLEAR ls_toolbar.
      MOVE 'REGISTRO' TO ls_toolbar-function.
      MOVE icon_add_row TO ls_toolbar-icon.
      MOVE 'Agregar Registro' TO ls_toolbar-quickinfo.
      MOVE 'Agregar Registro Inicial' TO ls_toolbar-text.
      APPEND ls_toolbar TO e_object->mt_toolbar.

      CLEAR ls_toolbar.
      MOVE 'CANT_ENTR' TO ls_toolbar-function.
      MOVE icon_delivery TO ls_toolbar-icon.
      MOVE 'Añadir Cantidad Entregada' TO ls_toolbar-quickinfo.
      MOVE 'Cantidad Entregada' TO ls_toolbar-text.
      APPEND ls_toolbar TO e_object->mt_toolbar.

      CLEAR ls_toolbar.
      MOVE 'CANT_REC' TO ls_toolbar-function.
      MOVE icon_delivery_inbound TO ls_toolbar-icon.
      MOVE 'Añadir Ajuste (Manual)' TO ls_toolbar-quickinfo.
      MOVE 'Ajuste (Manual)' TO ls_toolbar-text.
      APPEND ls_toolbar TO e_object->mt_toolbar.
    ENDIF.

    IF pa_list1 EQ abap_true.
      CLEAR ls_toolbar.
      MOVE 'DELE' TO ls_toolbar-function.
      MOVE icon_delete_row TO ls_toolbar-icon.
      MOVE 'Borrar Registro' TO ls_toolbar-quickinfo.
      MOVE 'Borrar Registro' TO ls_toolbar-text.
      APPEND ls_toolbar TO e_object->mt_toolbar.

      CLEAR ls_toolbar.
      MOVE 'TRANSP' TO ls_toolbar-function.
      MOVE icon_ws_truck TO ls_toolbar-icon.
      MOVE 'Añadir Transportista' TO ls_toolbar-quickinfo.
      MOVE 'Añadir Transportista' TO ls_toolbar-text.
      APPEND ls_toolbar TO e_object->mt_toolbar.
    ENDIF.
  ENDMETHOD.
*-------------------------------------------------------------------
  METHOD handle_user_command.

    DATA: lt_rows TYPE lvc_t_row.

    CALL METHOD grid->get_selected_rows
      IMPORTING
        et_index_rows = lt_rows.

    IF e_ucomm NE 'REGISTRO'.
      IF lt_rows[] IS INITIAL.
        MESSAGE text-m03 TYPE 'I'.
        EXIT.
      ENDIF.

      DESCRIBE TABLE lt_rows LINES DATA(lv_lines).
      IF lv_lines > 1.
        MESSAGE text-m04 TYPE 'I'.
        EXIT.
      ENDIF.
    ENDIF.

    READ TABLE lt_rows INTO DATA(s_rows) INDEX 1.

    CASE e_ucomm.
      WHEN 'STOCK_INI'.
        event_receiver->set_stock_ini( s_rows ).
      WHEN 'CANT_ENTR'.
        event_receiver->set_cant_entregada( s_rows ).
      WHEN 'CANT_REC'.
        event_receiver->set_cant_recuperada( s_rows ).
      WHEN 'DELE'.
        event_receiver->borrar_registro( s_rows ).
      WHEN 'TRANSP'.
        event_receiver->set_transp( s_rows ).
      WHEN 'REGISTRO'.
        event_receiver->set_registro( s_rows ).
    ENDCASE.
  ENDMETHOD.                           "handle_user_command
*-----------------------------------------------------------------
  METHOD set_cant_entregada.

    DATA: ls_zssdt038   TYPE zssdt038,
          lt_fields     TYPE TABLE OF sval,
          ls_fields     TYPE          sval,
          lv_returncode TYPE c,
*          lv_stock_ini_ TYPE zssdt038-stock_ini,
          lv_cant_rec_  TYPE zssdt038-cant_rec,
          lv_cant_ent_  TYPE zssdt038-cant_ent.

    TYPES: BEGIN OF ty_zssdt038_aux,
             vkorg     TYPE vkorg,
             vstel     TYPE vstel,
             kunwe     TYPE kunwe,
             matnr     TYPE matnr,
             budat     TYPE budat,
             udate     TYPE cddatum,
             stock_ini TYPE zssd_stock_i,
             cant_ent  TYPE zssd_cant_ent,
             cant_rec  TYPE zssd_cant_rec,
           END OF  ty_zssdt038_aux,
           tty_zssdt038_aux TYPE STANDARD TABLE OF  ty_zssdt038_aux.
    DATA lt_zssdt038_aux TYPE tty_zssdt038_aux.

    READ TABLE gt_list_stock INTO DATA(s_list_stock_aux) INDEX l_row-index.


    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'VKORG'.
    ls_fields-fieldtext = 'Org.Ventas'.
    ls_fields-value     = s_list_stock_aux-vkorg.
    ls_fields-field_attr = '02'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'VSTEL'.
    ls_fields-fieldtext = 'Puesto Expedición'.
    ls_fields-value     = s_list_stock_aux-vstel.
    ls_fields-field_attr = '02'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'KUNWE'.
    ls_fields-fieldtext = 'Destinatario Mercancia'.
    ls_fields-value     = s_list_stock_aux-kunwe.
    ls_fields-field_attr = '02'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'MATNR'.
    ls_fields-fieldtext = 'Material Pallet'.
    ls_fields-field_obl = 'X'.
    ls_fields-value     = s_list_stock_aux-matnr.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'CANT_ENT'.
    ls_fields-fieldtext = 'Cantidad Entregada'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'BUDAT'.
    ls_fields-fieldtext = 'Fecha Contab.'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CALL FUNCTION 'POPUP_GET_VALUES'
      EXPORTING
        popup_title     = 'Añadir Stock Inicial'
        start_column    = '5'
        start_row       = '5'
      IMPORTING
        returncode      = lv_returncode
      TABLES
        fields          = lt_fields
      EXCEPTIONS
        error_in_fields = 1
        OTHERS          = 2.

    IF sy-subrc = 0 AND lv_returncode <> 'A'.
      ls_zssdt038-username = sy-uname.
      ls_zssdt038-udate    = sy-datum.
      ls_zssdt038-utime    = sy-uzeit.

      TRY.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 1 ].
          ls_zssdt038-vkorg = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 2 ].
          ls_zssdt038-vstel = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 3 ].
          ls_zssdt038-kunwe = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 4 ].
          ls_zssdt038-matnr = ls_fields-value.
          SELECT SINGLE meins INTO ls_zssdt038-meins
            FROM mara
            WHERE matnr = ls_zssdt038-matnr.

          CLEAR ls_fields.
          ls_fields = lt_fields[ 5 ].
          " Inicio Add BG 06.02.2024
*          ls_zssdt038-cant_ent = ls_fields-value.
          DATA(lv_cant_ent_leida) = ls_fields-value.
          " Fin Add BG 06.02.2024

          CLEAR ls_fields.
          ls_fields = lt_fields[ 6 ].
          ls_zssdt038-budat = ls_fields-value.

          " Se recupera registro con la misma clave, para mantener los valores de las otras cantidades
          " Inicio Add BG 06.02.2024
*          SELECT SINGLE * INTO @DATA(ls_zssdt038_aux)
*                    FROM zssdt038
*                    WHERE vkorg = @ls_zssdt038-vkorg
*                      AND vstel = @ls_zssdt038-vstel
*                      AND kunnr = @ls_zssdt038-kunnr
*                      AND matnr = @ls_zssdt038-matnr
*                      AND budat = @ls_zssdt038-budat.
*          IF sy-subrc EQ 0.
*            ls_zssdt038-stock_ini = ls_zssdt038_aux-stock_ini.
*            ls_zssdt038-cant_rec = ls_zssdt038_aux-cant_rec.
*            ls_zssdt038-cant_ent = ls_zssdt038-cant_ent + ls_zssdt038_aux-cant_ent. " Add BG 06.02.2024
*          ENDIF.
          SELECT vkorg, vstel, kunwe, matnr, budat, udate,
                       SUM( cant_ent ) AS cant_ent
                       INTO TABLE @lt_zssdt038_aux
                           FROM zssdt038
                            WHERE vkorg = @ls_zssdt038-vkorg
                              AND vstel = @ls_zssdt038-vstel
                              AND kunwe = @ls_zssdt038-kunwe
                              AND matnr = @ls_zssdt038-matnr
                              AND budat = @ls_zssdt038-budat
                              AND udate = @sy-datum   " Add BG 06.02.2024 se tiene que buscar por la fecha del día
                      GROUP BY vkorg, vstel, kunwe, matnr, budat, udate.

          LOOP AT lt_zssdt038_aux INTO DATA(ls_zssdt038_aux).
            lv_cant_rec_  = ls_zssdt038_aux-cant_rec  + lv_cant_rec_.
*            lv_stock_ini_ = ls_zssdt038_aux-stock_ini + lv_stock_ini_.
            lv_cant_ent_  = ls_zssdt038_aux-cant_ent  + lv_cant_ent_.
          ENDLOOP.

          ls_zssdt038-cant_ent  = lv_cant_ent_ + lv_cant_ent_leida.

          " Se actualiza/crea registro en tabla
          MODIFY zssdt038 FROM ls_zssdt038.
          IF sy-subrc EQ 0.
            MESSAGE text-m01 TYPE 'I'.

            LOOP AT gt_list_stock ASSIGNING FIELD-SYMBOL(<fs_list_stock_add>)
              WHERE vkorg = ls_zssdt038-vkorg
                AND vstel = ls_zssdt038-vstel
                AND kunwe = ls_zssdt038-kunwe
                AND matnr = ls_zssdt038-matnr.

              <fs_list_stock_add>-cant_ent = <fs_list_stock_add>-cant_ent + lv_cant_ent_leida. " Add BG 06.02.2024
              <fs_list_stock_add>-stock_pal =  <fs_list_stock_add>-cant_ent + <fs_list_stock_add>-cant_rec +
                                               <fs_list_stock_add>-cant_sal + <fs_list_stock_add>-devoluc  +
                                               <fs_list_stock_add>-resta_v  + <fs_list_stock_add>-devoluc_vc.
              "<fs_list_stock_add>-stock_fact.
            ENDLOOP.
            IF sy-subrc NE 0. " Sino existe se agrega
              s_list_stock_aux-cant_ent  = ls_zssdt038-cant_ent.
              s_list_stock_aux-matnr     = ls_zssdt038-matnr.
              APPEND s_list_stock_aux TO gt_list_stock.
            ENDIF.

            CALL METHOD grid->refresh_table_display
              EXCEPTIONS
                finished = 1
                OTHERS   = 2.
          ELSE.
            MESSAGE text-m02 TYPE 'I'.
          ENDIF.
        CATCH cx_root .
      ENDTRY.
    ENDIF.
    CLEAR: ls_zssdt038, s_list_stock_aux.
  ENDMETHOD.

*-----------------------------------------------------------------
  METHOD set_stock_ini.

*    DATA: ls_zssdt038   TYPE zssdt038,
*          lt_fields     TYPE TABLE OF sval,
*          ls_fields     TYPE          sval,
*          lv_returncode TYPE c,
*          lv_stock_ini_ TYPE zssdt038-stock_ini,
*          lv_cant_rec_  TYPE zssdt038-cant_rec,
*          lv_cant_ent_  TYPE zssdt038-cant_ent.
*
*    TYPES: BEGIN OF ty_zssdt038_aux,
*             vkorg     TYPE vkorg,
*             vstel     TYPE vstel,
*             kunwe     TYPE  kunwe,
*             matnr     TYPE matnr,
*             budat     TYPE budat,
*             udate     TYPE cddatum,
*             stock_ini TYPE zssd_stock_i,
*             cant_ent  TYPE zssd_cant_ent,
*             cant_rec  TYPE zssd_cant_rec,
*           END OF  ty_zssdt038_aux,
*           tty_zssdt038_aux TYPE STANDARD TABLE OF  ty_zssdt038_aux.
*    DATA lt_zssdt038_aux TYPE tty_zssdt038_aux.
*
*    READ TABLE gt_list_stock INTO DATA(s_list_stock_aux) INDEX l_row-index.
*
*    CLEAR ls_fields.
*    ls_fields-tabname   = 'ZSSDT038'.
*    ls_fields-fieldname = 'VKORG'.
*    ls_fields-fieldtext = 'Org.Ventas'.
*    ls_fields-value     = s_list_stock_aux-vkorg.
*    ls_fields-field_attr = '02'.
*    APPEND ls_fields TO lt_fields.
*
*    CLEAR ls_fields.
*    ls_fields-tabname   = 'ZSSDT038'.
*    ls_fields-fieldname = 'VSTEL'.
*    ls_fields-fieldtext = 'Puesto Expedición'.
*    ls_fields-value     = s_list_stock_aux-vstel.
*    ls_fields-field_attr = '02'.
*    APPEND ls_fields TO lt_fields.
*
*    CLEAR ls_fields.
*    ls_fields-tabname   = 'ZSSDT038'.
*    ls_fields-fieldname = 'KUNWE'.
*    ls_fields-fieldtext = 'Destinatario Mercancia'.
*    ls_fields-value     = s_list_stock_aux-kunwe.
*    ls_fields-field_attr = '02'.
*    APPEND ls_fields TO lt_fields.
*
*    CLEAR ls_fields.
*    ls_fields-tabname   = 'ZSSDT038'.
*    ls_fields-fieldname = 'MATNR'.
*    ls_fields-fieldtext = 'Material Pallet'.
*    ls_fields-field_obl = 'X'.
*    ls_fields-value     = s_list_stock_aux-matnr.
*    APPEND ls_fields TO lt_fields.
*
*    CLEAR ls_fields.
*    ls_fields-tabname   = 'ZSSDT038'.
*    ls_fields-fieldname = 'STOCK_INI'.
*    ls_fields-fieldtext = 'Stock Inicial'.
*    ls_fields-field_obl = 'X'.
*    APPEND ls_fields TO lt_fields.
*
*    CLEAR ls_fields.
*    ls_fields-tabname   = 'ZSSDT038'.
*    ls_fields-fieldname = 'BUDAT'.
*    ls_fields-fieldtext = 'Fecha Contab.'.
*    ls_fields-field_obl = 'X'.
*    APPEND ls_fields TO lt_fields.
*
*    CALL FUNCTION 'POPUP_GET_VALUES'
*      EXPORTING
*        popup_title     = 'Añadir Stock Inicial'
*        start_column    = '5'
*        start_row       = '5'
*      IMPORTING
*        returncode      = lv_returncode
*      TABLES
*        fields          = lt_fields
*      EXCEPTIONS
*        error_in_fields = 1
*        OTHERS          = 2.
*
*    IF sy-subrc = 0 AND lv_returncode <> 'A'.
*
*      ls_zssdt038-username = sy-uname.
*      ls_zssdt038-udate    = sy-datum.
*      ls_zssdt038-utime    = sy-uzeit.
*
*      TRY.
*          CLEAR ls_fields.
*          ls_fields = lt_fields[ 1 ].
*          ls_zssdt038-vkorg = ls_fields-value.
*          CLEAR ls_fields.
*          ls_fields = lt_fields[ 2 ].
*          ls_zssdt038-vstel = ls_fields-value.
*          CLEAR ls_fields.
*          ls_fields = lt_fields[ 3 ].
*          ls_zssdt038-kunwe = ls_fields-value.
*          CLEAR ls_fields.
*          ls_fields = lt_fields[ 4 ].
*          ls_zssdt038-matnr = ls_fields-value.
*          SELECT SINGLE meins INTO ls_zssdt038-meins
*            FROM mara
*            WHERE matnr = ls_zssdt038-matnr.
*
*          CLEAR ls_fields.
*          ls_fields = lt_fields[ 5 ].
*          " Inicio Add BG 06.02.2024
**          ls_zssdt038-stock_ini = ls_fields-value.
*          DATA(lv_stock_ini_leida) = ls_fields-value.
*          " Fin Add BG 06.02.2024
*
*          CLEAR ls_fields.
*          ls_fields = lt_fields[ 6 ].
*          ls_zssdt038-budat = ls_fields-value.
*
*          " Se recupera registro con la misma clave, para mantener los valores de las otras cantidades
*          " Inicio Add BG 06.02.2024
**          SELECT SINGLE * INTO @DATA(ls_zssdt038_aux)
**                    FROM zssdt038
**                    WHERE vkorg = @ls_zssdt038-vkorg
**                      AND vstel = @ls_zssdt038-vstel
**                      AND kunnr = @ls_zssdt038-kunnr
**                      AND matnr = @ls_zssdt038-matnr
**                      AND budat = @ls_zssdt038-budat.
*          " Se recupera registro con la misma clave, para mantener los valores de las otras cantidades
*          SELECT vkorg, vstel, kunwe, matnr, budat, udate,
*             SUM( stock_ini ) AS stock_ini
*             INTO TABLE @lt_zssdt038_aux
*                 FROM zssdt038
*                  WHERE vkorg = @ls_zssdt038-vkorg
*                    AND vstel = @ls_zssdt038-vstel
*                    AND kunwe = @ls_zssdt038-kunwe
*                    AND matnr = @ls_zssdt038-matnr
*                    AND budat = @ls_zssdt038-budat
*                    AND udate = @sy-datum   " Add BG 06.02.2024 se tiene que buscar por la fecha del día
*            GROUP BY vkorg, vstel, kunwe, matnr, budat, udate.
**          IF sy-subrc EQ 0.
**            ls_zssdt038-cant_ent  = ls_zssdt038_aux-cant_ent.
**            ls_zssdt038-cant_rec  = ls_zssdt038_aux-cant_rec.
**            ls_zssdt038-stock_ini = ls_zssdt038-stock_ini + ls_zssdt038_aux-stock_ini. " Add BG 06.02.2024
**          ENDIF.
*          LOOP AT lt_zssdt038_aux INTO DATA(ls_zssdt038_aux).
*            lv_cant_rec_  = ls_zssdt038_aux-cant_rec  + lv_cant_rec_.
*            lv_stock_ini_ = ls_zssdt038_aux-stock_ini + lv_stock_ini_.
*            lv_cant_ent_  = ls_zssdt038_aux-cant_ent  + lv_cant_ent_.
*          ENDLOOP.
*
*          ls_zssdt038-stock_ini  = lv_stock_ini_ + lv_stock_ini_leida.
*
**          ls_zssdt038-stock_pal =  ls_zssdt038-stock_ini + lv_cant_ent_ +
**                                   lv_cant_rec_ + s_list_stock_aux-cant_sal.
*
*          " Se actualiza/crea registro en tabla
*          MODIFY zssdt038 FROM ls_zssdt038.
*          IF sy-subrc EQ 0.
*            MESSAGE text-m01 TYPE 'I'.
*
*            LOOP AT gt_list_stock ASSIGNING FIELD-SYMBOL(<fs_list_stock_add>)
*              WHERE vkorg = ls_zssdt038-vkorg
*                AND vstel = ls_zssdt038-vstel
*                AND kunwe = ls_zssdt038-kunwe
*                AND matnr = ls_zssdt038-matnr.
**              <fs_list_stock_add>-stock_ini =  ls_zssdt038-stock_ini.
*              <fs_list_stock_add>-stock_ini = <fs_list_stock_add>-stock_ini + lv_stock_ini_leida. " Add BG 06.02.2024
*              <fs_list_stock_add>-stock_pal =  <fs_list_stock_add>-stock_ini + <fs_list_stock_add>-cant_ent +
*                                               <fs_list_stock_add>-cant_rec  + <fs_list_stock_add>-cant_sal.
*            ENDLOOP.
*            IF sy-subrc NE 0. " Sino existe se agrega
*              s_list_stock_aux-stock_ini = ls_zssdt038-stock_ini.
**              s_list_stock_aux-stock_pal = ls_zssdt038-stock_pal.
*              s_list_stock_aux-matnr     = ls_zssdt038-matnr.
*              APPEND s_list_stock_aux TO gt_list_stock.
*            ENDIF.
*            CALL METHOD grid->refresh_table_display
*              EXCEPTIONS
*                finished = 1
*                OTHERS   = 2.
*          ELSE.
*            MESSAGE text-m02 TYPE 'I'.
*          ENDIF.
*        CATCH cx_root .
*      ENDTRY.
*    ENDIF.
*    CLEAR: ls_zssdt038, s_list_stock_aux.
  ENDMETHOD.

*-----------------------------------------------------------------
  METHOD set_cant_recuperada.

    DATA: ls_zssdt038   TYPE zssdt038,
          lt_fields     TYPE TABLE OF sval,
          ls_fields     TYPE          sval,
          lv_returncode TYPE c,
          lv_cant_rec_  TYPE zssdt038-cant_rec,
          lv_cant_ent_  TYPE zssdt038-cant_ent.

    TYPES: BEGIN OF ty_zssdt038_aux,
             vkorg     TYPE vkorg,
             vstel     TYPE vstel,
             kunwe     TYPE  kunwe,
             matnr     TYPE matnr,
             budat     TYPE budat,
             udate     TYPE cddatum,
             stock_ini TYPE zssd_stock_i,
             cant_ent  TYPE zssd_cant_ent,
             cant_rec  TYPE zssd_cant_rec,
           END OF  ty_zssdt038_aux,
           tty_zssdt038_aux TYPE STANDARD TABLE OF  ty_zssdt038_aux.
    DATA lt_zssdt038_aux TYPE tty_zssdt038_aux.

    READ TABLE gt_list_stock INTO DATA(s_list_stock_aux) INDEX l_row-index.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'VKORG'.
    ls_fields-fieldtext = 'Org.Ventas'.
    ls_fields-value     = s_list_stock_aux-vkorg.
    ls_fields-field_attr = '02'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'VSTEL'.
    ls_fields-fieldtext = 'Puesto Expedición'.
    ls_fields-value     = s_list_stock_aux-vstel.
    ls_fields-field_attr = '02'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'KUNWE'.
    ls_fields-fieldtext = 'Destinatario Mercancia'.
    ls_fields-value     = s_list_stock_aux-kunwe.
    ls_fields-field_attr = '02'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'MATNR'.
    ls_fields-fieldtext = 'Material Pallet'.
    ls_fields-field_obl = 'X'.
    ls_fields-value     = s_list_stock_aux-matnr.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'CANT_REC'.
    ls_fields-fieldtext = 'Cantidad Recuperada'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'BUDAT'.
    ls_fields-fieldtext = 'Fecha Contab.'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'TDLNR'.
    ls_fields-fieldtext = 'Transportista'.
    APPEND ls_fields TO lt_fields.

    CALL FUNCTION 'POPUP_GET_VALUES'
      EXPORTING
        popup_title     = 'Añadir Stock Inicial'
        start_column    = '5'
        start_row       = '5'
      IMPORTING
        returncode      = lv_returncode
      TABLES
        fields          = lt_fields
      EXCEPTIONS
        error_in_fields = 1
        OTHERS          = 2.

    IF sy-subrc = 0 AND lv_returncode <> 'A'.

      CLEAR: lv_cant_ent_, lv_cant_rec_.

      ls_zssdt038-username = sy-uname.
      ls_zssdt038-udate    = sy-datum.
      ls_zssdt038-utime    = sy-uzeit.

      TRY.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 1 ].
          ls_zssdt038-vkorg = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 2 ].
          ls_zssdt038-vstel = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 3 ].
          ls_zssdt038-kunwe = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 4 ].
          ls_zssdt038-matnr = ls_fields-value.

          SELECT SINGLE meins INTO ls_zssdt038-meins
            FROM mara
            WHERE matnr = ls_zssdt038-matnr.

          CLEAR ls_fields.
          ls_fields = lt_fields[ 5 ].
          " Inicio Add BG 06.02.2024
*          ls_zssdt038-cant_rec = ls_fields-value.
*          ls_zssdt038-cant_rec = ls_zssdt038-cant_rec * -1.
          DATA(lv_cant_rec_leida) = ls_fields-value.
          lv_cant_rec_leida = lv_cant_rec_leida * -1.
          "Fin Add BG 06.02.2024

          CLEAR ls_fields.
          ls_fields = lt_fields[ 6 ].
          ls_zssdt038-budat = ls_fields-value.

          CLEAR ls_fields.
          ls_fields = lt_fields[ 7 ].
          ls_zssdt038-tdlnr = ls_fields-value.

          " Inicio Add BG 06.02.2024
          IF ls_zssdt038-tdlnr IS NOT INITIAL.
            DATA(lr_tdlnr) = VALUE rseloption( sign = 'I' option = 'EQ' ( low = ls_zssdt038-tdlnr )  ).
          ENDIF.
          " Fin Add BG 06.02.2024

          " Se recupera registro con la misma clave, para mantener los valores de las otras cantidades
          SELECT vkorg, vstel, kunwe, matnr, budat, udate,
             SUM( cant_rec ) AS cant_rec
             INTO TABLE @lt_zssdt038_aux
                 FROM zssdt038
                  WHERE vkorg = @ls_zssdt038-vkorg
                    AND vstel = @ls_zssdt038-vstel
                    AND kunwe = @ls_zssdt038-kunwe
                    AND matnr = @ls_zssdt038-matnr
                    AND budat = @ls_zssdt038-budat
                    AND udate = @sy-datum   " Add BG 06.02.2024 se tiene que buscar por la fecha del día
                    AND tdlnr IN @lr_tdlnr  " Add BG 06.02.2024 se tiene que buscar por el transportista añadido
            GROUP BY vkorg, vstel, kunwe, matnr, budat, udate.
          IF sy-subrc EQ 0.
            LOOP AT lt_zssdt038_aux INTO DATA(ls_zssdt038_aux).
              lv_cant_rec_  = ls_zssdt038_aux-cant_rec  + lv_cant_rec_.
*              lv_stock_ini_ = ls_zssdt038_aux-stock_ini + lv_stock_ini_.
              lv_cant_ent_  = ls_zssdt038_aux-cant_ent  + lv_cant_ent_.
            ENDLOOP.
          ENDIF.

          ls_zssdt038-cant_rec  = lv_cant_rec_ + lv_cant_rec_leida.

          " Se actualiza/crea registro en tabla
          MODIFY zssdt038 FROM ls_zssdt038.
          IF sy-subrc EQ 0.
            MESSAGE text-m01 TYPE 'I'.

            LOOP AT gt_list_stock ASSIGNING FIELD-SYMBOL(<fs_list_stock_add>)
              WHERE vkorg = ls_zssdt038-vkorg
                AND vstel = ls_zssdt038-vstel
                AND kunwe = ls_zssdt038-kunwe
                AND matnr = ls_zssdt038-matnr.
              <fs_list_stock_add>-cant_rec = <fs_list_stock_add>-cant_rec + lv_cant_rec_leida. " Add BG 06.02.2024
              <fs_list_stock_add>-stock_pal = <fs_list_stock_add>-cant_ent + <fs_list_stock_add>-cant_rec +
                                              <fs_list_stock_add>-cant_sal + <fs_list_stock_add>-devoluc  +
                                              <fs_list_stock_add>-resta_v  + <fs_list_stock_add>-devoluc_vc.
              "<fs_list_stock_add>-stock_fact.
            ENDLOOP.
            IF sy-subrc NE 0. " Sino existe se agrega
              s_list_stock_aux-cant_rec  = ls_zssdt038-cant_rec.
              s_list_stock_aux-matnr     = ls_zssdt038-matnr.
              APPEND s_list_stock_aux TO gt_list_stock.
            ENDIF.
            CALL METHOD grid->refresh_table_display
              EXCEPTIONS
                finished = 1
                OTHERS   = 2.
          ELSE.
            MESSAGE text-m02 TYPE 'I'.
          ENDIF.
        CATCH cx_root .
      ENDTRY.
    ENDIF.
    CLEAR: ls_zssdt038, s_list_stock_aux.
  ENDMETHOD.

*-----------------------------------------------------------------
  METHOD borrar_registro.
    READ TABLE gt_list_entrega INTO DATA(s_list_entrega) INDEX l_row-index.
    IF s_list_entrega-tipo_reg EQ '01' OR s_list_entrega-tipo_reg EQ '02'. " OR s_list_entrega-tipo_reg EQ '03'.
      MESSAGE text-m05 TYPE 'I'.
      RETURN.
    ENDIF.

    IF s_list_entrega IS NOT INITIAL.
      SELECT * INTO TABLE @DATA(lt_zssdt038)
        FROM zssdt038
        WHERE vstel = @s_list_entrega-vstel
          AND kunwe = @s_list_entrega-kunwe
          AND matnr = @s_list_entrega-matnr.

      IF lt_zssdt038[] IS NOT INITIAL.
        DELETE zssdt038 FROM TABLE lt_zssdt038[].

        DELETE gt_list_entrega  INDEX l_row-index.

        CALL METHOD grid->refresh_table_display
          EXCEPTIONS
            finished = 1
            OTHERS   = 2.

        MESSAGE text-m06 TYPE 'I'.
      ENDIF.
    ENDIF.

  ENDMETHOD.
*-----------------------------------------------------------------
  METHOD set_transp.

    DATA: lt_fields     TYPE TABLE OF sval,
          ls_fields     TYPE          sval,
          lv_returncode TYPE c,
          lv_tdlnr      TYPE tdlnr.

    READ TABLE gt_list_entrega ASSIGNING FIELD-SYMBOL(<fs_list_e>) INDEX l_row-index.
    IF <fs_list_e> IS ASSIGNED.
      IF <fs_list_e>-tipo_reg EQ '01' OR <fs_list_e>-tipo_reg EQ '04'
        OR <fs_list_e>-tipo_reg EQ '05' OR <fs_list_e>-tipo_reg EQ '06'.
        MESSAGE text-m07 TYPE 'I'.
        RETURN.
      ENDIF.

      IF <fs_list_e>-tdlnr IS NOT INITIAL.
        MESSAGE text-m08 TYPE 'I'.
        RETURN.
      ENDIF.

      SELECT * INTO TABLE @DATA(lt_zssdt038_transp)
        FROM zssdt038
        WHERE vkorg = @<fs_list_e>-vkorg
          AND vstel = @<fs_list_e>-vstel
          AND kunwe = @<fs_list_e>-kunwe
          AND matnr = @<fs_list_e>-matnr
          AND tdlnr = @space.

      IF lt_zssdt038_transp[] IS NOT INITIAL.

        CLEAR ls_fields.
        ls_fields-tabname   = 'ZSSDT038'.
        ls_fields-fieldname = 'TDLNR'.
        ls_fields-fieldtext = 'Transportista'.
        ls_fields-field_obl = 'X'.
        APPEND ls_fields TO lt_fields.

        CALL FUNCTION 'POPUP_GET_VALUES'
          EXPORTING
            popup_title     = 'Añadir Transportista'
            start_column    = '5'
            start_row       = '5'
          IMPORTING
            returncode      = lv_returncode
          TABLES
            fields          = lt_fields
          EXCEPTIONS
            error_in_fields = 1
            OTHERS          = 2.

        IF sy-subrc = 0 AND lv_returncode <> 'A'.

          TRY.
              CLEAR ls_fields.
              ls_fields = lt_fields[ 1 ].
              lv_tdlnr = ls_fields-value.
          ENDTRY.

          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = lv_tdlnr
            IMPORTING
              output = lv_tdlnr.

          LOOP AT lt_zssdt038_transp ASSIGNING FIELD-SYMBOL(<fs_transp>).
            <fs_transp>-tdlnr = lv_tdlnr.
          ENDLOOP.
          IF lt_zssdt038_transp[] IS NOT INITIAL.
            MODIFY zssdt038 FROM TABLE lt_zssdt038_transp[].
            CALL FUNCTION 'DB_COMMIT'.
          ENDIF.

*          s_list_entrega-tdlnr = lv_tdlnr.
*          LOOP AT gt_list_entrega ASSIGNING FIELD-SYMBOL(<fs_list_e>).
          SELECT SINGLE name1 INTO <fs_list_e>-tdlnr_name1
            FROM lfa1
            WHERE lifnr = lv_tdlnr.
          <fs_list_e>-tdlnr = lv_tdlnr.
*          ENDLOOP.

          CALL METHOD grid->refresh_table_display
            EXCEPTIONS
              finished = 1
              OTHERS   = 2.

          MESSAGE text-m09 TYPE 'I'.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.
*-----------------------------------------------------------------
  METHOD set_registro.
    DATA: ls_zssdt038       TYPE zssdt038,
          lt_fields         TYPE TABLE OF sval,
          ls_fields         TYPE          sval,
          lv_returncode     TYPE c,
          s_list_stock_aux  TYPE LINE OF tt_list_stock,
          ls_zssdt038_check TYPE zssdt038.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'VKORG'.
    ls_fields-fieldtext = 'Org.Ventas'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'VSTEL'.
    ls_fields-fieldtext = 'Puesto Expedición'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'KUNWE'.
    ls_fields-fieldtext = 'Destinatario Mercancia'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'MATNR'.
    ls_fields-fieldtext = 'Material Pallet'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CLEAR ls_fields.
    ls_fields-tabname   = 'ZSSDT038'.
    ls_fields-fieldname = 'BUDAT'.
    ls_fields-fieldtext = 'Fecha Contab.'.
    ls_fields-field_obl = 'X'.
    APPEND ls_fields TO lt_fields.

    CALL FUNCTION 'POPUP_GET_VALUES'
      EXPORTING
        popup_title     = 'Añadir Registro Manual'
        start_column    = '5'
        start_row       = '5'
      IMPORTING
        returncode      = lv_returncode
      TABLES
        fields          = lt_fields
      EXCEPTIONS
        error_in_fields = 1
        OTHERS          = 2.

    IF sy-subrc = 0 AND lv_returncode <> 'A'.

      TRY.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 1 ].
          ls_zssdt038-vkorg = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 2 ].
          ls_zssdt038-vstel = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 3 ].
          ls_zssdt038-kunwe = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 4 ].
          ls_zssdt038-matnr = ls_fields-value.
          CLEAR ls_fields.
          ls_fields = lt_fields[ 5 ].
          ls_zssdt038-budat = ls_fields-value.
        CATCH cx_root.
      ENDTRY.

      " Válida si ya existe ese registro en tabla
      SELECT SINGLE  MAX( budat ), vkorg, vstel, kunwe, matnr
        INTO ( @ls_zssdt038_check-budat, @ls_zssdt038_check-vkorg,
               @ls_zssdt038_check-vstel, @ls_zssdt038_check-kunwe,
               @ls_zssdt038_check-matnr )
       FROM zssdt038
       WHERE vkorg = @ls_zssdt038-vkorg
         AND vstel = @ls_zssdt038-vstel
         AND kunwe = @ls_zssdt038-kunwe
         AND matnr = @ls_zssdt038-matnr GROUP BY  budat, vkorg, vstel, kunwe, matnr.
      IF sy-subrc EQ 0.
        MESSAGE i005(zssd038) WITH ls_zssdt038_check-vkorg ls_zssdt038_check-vstel
                                   ls_zssdt038_check-kunwe ls_zssdt038_check-matnr DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.

      " Válida si ya existe ese registro en ALV
      READ TABLE gt_list_stock INTO DATA(ls_list_stock_check) WITH KEY vkorg = ls_zssdt038-vkorg
                                                                       vstel = ls_zssdt038-vstel
                                                                       kunwe = ls_zssdt038-kunwe
                                                                       matnr = ls_zssdt038-matnr.
      IF sy-subrc EQ 0.
        MESSAGE i006(zssd038) WITH ls_list_stock_check-vkorg ls_list_stock_check-vstel
                                   ls_list_stock_check-kunwe ls_list_stock_check-matnr DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.


      SELECT SINGLE name1 INTO s_list_stock_aux-name1
        FROM kna1
        WHERE kunnr = ls_zssdt038-kunwe.
      IF sy-subrc NE 0.
        MESSAGE i004(zssd038) WITH  ls_zssdt038-kunwe DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.

      SELECT SINGLE a~matnr, a~meins, a~laeng, a~breit, a~hoehe, a~meabm, b~maktx
       INTO  @DATA(ls_mara)
        FROM mara AS a INNER JOIN makt AS b ON a~matnr EQ b~matnr
        WHERE a~matnr EQ @ls_zssdt038-matnr
          AND spras   EQ @sy-langu.
      IF sy-subrc NE 0.
        MESSAGE i003(zssd038) WITH  ls_zssdt038-matnr DISPLAY LIKE 'E'.
        RETURN.
      ENDIF.

      ls_zssdt038-username = sy-uname.
      ls_zssdt038-udate    = sy-datum.
      ls_zssdt038-utime    = sy-uzeit.
      ls_zssdt038-meins    = ls_mara-meins.

      " Se actualiza/crea registro en tabla
      MODIFY zssdt038 FROM ls_zssdt038.
      IF sy-subrc EQ 0.
        MESSAGE text-m01 TYPE 'I'.
        MOVE-CORRESPONDING ls_zssdt038 TO s_list_stock_aux.

        SELECT SINGLE maktx INTO s_list_stock_aux-maktx
                    FROM makt
                    WHERE matnr = ls_zssdt038-matnr
                      AND spras = sy-langu.

        SELECT SINGLE  a~matnr, a~vkorg, a~vtweg, a~mvgr1, b~bezei
         INTO @DATA(ls_mvke)
          FROM mvke AS a INNER JOIN tvm1t AS b ON a~mvgr1 EQ b~mvgr1
            WHERE a~matnr = @ls_zssdt038-matnr
             AND a~vkorg = @ls_zssdt038-vkorg
             AND a~vtweg = '10'
             AND b~spras = @sy-langu.

        s_list_stock_aux-kun_c  = s_list_stock_aux-kunwe.
        s_list_stock_aux-name_c = s_list_stock_aux-name_c.
        s_list_stock_aux-maktx  = ls_mara-maktx.
        s_list_stock_aux-laeng  = ls_mara-laeng.
        s_list_stock_aux-breit  = ls_mara-breit.
        s_list_stock_aux-hoehe  = ls_mara-hoehe.
        s_list_stock_aux-mvgr1  = ls_mvke-mvgr1.
        s_list_stock_aux-bezei  = ls_mvke-bezei.
        s_list_stock_aux-vrkme  = ls_zssdt038-meins.
        APPEND s_list_stock_aux TO gt_list_stock.

        CALL METHOD grid->refresh_table_display
          EXCEPTIONS
            finished = 1
            OTHERS   = 2.
      ELSE.
        MESSAGE text-m02 TYPE 'I'.
      ENDIF.

    ENDIF.
    CLEAR: ls_zssdt038.
  ENDMETHOD.
ENDCLASS.
