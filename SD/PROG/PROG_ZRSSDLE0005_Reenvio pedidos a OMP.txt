*&---------------------------------------------------------------------*
*& Report  ZRSSDLE0005
*&
*&---------------------------------------------------------------------*
*&
*& Reenvio pedidos a OMP
*&---------------------------------------------------------------------*
REPORT zrssdle0005.

"""""""""""""""""""""""""""""""""
" Pantalla de selección
"""""""""""""""""""""""""""""""""

SELECTION-SCREEN BEGIN OF BLOCK b00 WITH FRAME TITLE text-b00.
PARAMETERS: cbx_vbe RADIOBUTTON GROUP g1 DEFAULT 'X' USER-COMMAND cbx,
            cbx_ebe RADIOBUTTON GROUP g1.
SELECTION-SCREEN END OF BLOCK b00.


SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-b01.
PARAMETERS: p_vbeln  TYPE vbep-vbeln  MODIF ID b01,
            p_posnr  TYPE vbep-posnr  MODIF ID b01,
            p_etenr1 TYPE vbep-posnr  MODIF ID b01.
SELECTION-SCREEN END OF BLOCK b01.



SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE text-b02.
PARAMETERS: p_ebeln  TYPE eket-ebeln MODIF ID b02,
            p_ebelp  TYPE eket-ebelp MODIF ID b02,
            p_etenr2 TYPE eket-etenr MODIF ID b02.
SELECTION-SCREEN END OF BLOCK b02.


"""""""""""""""""""""""""""""""""
" Eventos
"""""""""""""""""""""""""""""""""

AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    CASE screen-group1.
      WHEN 'B01'.
        screen-input = SWITCH #( cbx_vbe WHEN 'X' THEN 1 ELSE 0 ).
      WHEN 'B02'.
        screen-input = SWITCH #( cbx_ebe WHEN 'X' THEN 1 ELSE 0 ).
      WHEN OTHERS.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.


AT SELECTION-SCREEN.
  CHECK sy-ucomm = 'ONLI'.
  IF cbx_vbe = 'X'.
    IF p_vbeln IS INITIAL OR p_posnr IS INITIAL OR p_etenr1 IS INITIAL.
      MESSAGE 'Debe completar los datos del documento de ventas' TYPE 'E'.
    ENDIF.
  ENDIF.

  IF cbx_ebe = 'X'.
    IF p_ebeln IS INITIAL OR p_ebelp IS INITIAL OR p_etenr2 IS INITIAL.
      MESSAGE 'Debe completar los datos del documento de compras' TYPE 'E'.
    ENDIF.
  ENDIF.


START-OF-SELECTION.
  PERFORM f_start_of_selection.


  """""""""""""""""""""""""""""""""
  " Rutinas
  """""""""""""""""""""""""""""""""
*&---------------------------------------------------------------------*
*&      Form  F_START_OF_SELECTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_start_of_selection.
  "Documento ventas
  DATA ls_if_omp_tr_p TYPE zssd_if_omp_tr_p.


  IF cbx_vbe = 'X'.
    SELECT SINGLE vbeln, posnr, etenr
      INTO @DATA(wl_vbep)
      FROM vbep
      WHERE vbeln = @p_vbeln AND
            posnr = @p_posnr AND
            etenr = @p_etenr1.
    IF sy-subrc <> 0.
      MESSAGE 'Pedido de ventas incorrecto' TYPE 'E'.
      RETURN.
    ENDIF.

    ls_if_omp_tr_p-vbeln = p_vbeln.
    ls_if_omp_tr_p-posnr = p_posnr.
    ls_if_omp_tr_p-etenr = p_etenr1.
  ENDIF.

  IF cbx_ebe = 'X'.
    SELECT SINGLE ebeln, ebelp, etenr
      INTO @DATA(wl_eket)
      FROM eket
      WHERE ebeln = @p_ebeln AND
            ebelp = @p_ebelp AND
            etenr = @p_etenr2.
    IF sy-subrc <> 0.
      MESSAGE 'Pedido de compras incorrecto' TYPE 'E'.
      RETURN.
    ENDIF.

    ls_if_omp_tr_p-ebeln = p_ebeln.
    ls_if_omp_tr_p-ebelp = p_ebelp.
    ls_if_omp_tr_p-etenr = p_etenr2.
  ENDIF.


  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      object                  = 'ZIF_OMP_TR'
      nr_range_nr             = '01'
    IMPORTING
      number                  = ls_if_omp_tr_p-num_envio
    EXCEPTIONS
      interval_not_found      = 01
      number_range_not_intern = 02
      object_not_found        = 03.



  ls_if_omp_tr_p-accion = 'M'.
  ls_if_omp_tr_p-usucre = sy-uname.
  ls_if_omp_tr_p-erdat  = sy-datum.
  ls_if_omp_tr_p-erzet  = sy-uzeit.

  INSERT zssd_if_omp_tr_p FROM ls_if_omp_tr_p.


  CALL FUNCTION 'ZSD_IF_OMP_TRANS_REQ_SEND'.

  MESSAGE 'Proceso terminado correctamente' TYPE 'S'.

ENDFORM.
