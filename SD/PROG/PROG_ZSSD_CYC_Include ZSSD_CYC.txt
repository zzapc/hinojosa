*&---------------------------------------------------------------------*
*&  Include           ZSSD_CYC
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  CONECTAR_CYC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM conectar_cyc .

  DATA lt_return TYPE TABLE OF bapiret2.
  DATA l_return TYPE  bapiret2.
  DATA l_ctrlsys TYPE flag.
  DATA l_lognumber TYPE balognr.
  DATA l_desc TYPE char40.
  DATA l_amount TYPE amounthr.
  DATA l_registro TYPE zssd_cyc_hist.

  CALL FUNCTION 'ZSSD_CYC_SISTEMA'
    IMPORTING
      e_ctrl = l_ctrlsys.

  IF  l_ctrlsys = 'X'.

    IF sy-ucomm = 'CYC'.
      xhorda = 'X'.

      IF knkk-dbpay = 'YSO'.

        CALL FUNCTION 'ZSSD_CYC_PUT'
          EXPORTING
            i_kkber  = rf02l-kkber
            i_kunnr  = rf02l-kunde
            i_kraus  = knkk-kraus
            i_waers  = rf02l-waerb  "knkk-dbwae
            i_amount = knkk-dbekr
          IMPORTING
            e_amount = l_amount
            e_desc   = l_desc
          TABLES
            return   = lt_return.


        IF l_desc = 'PENDIENTE'.
          knkk-dbpay = 'ZPE'.
*          knkk-dbekr = 'Solicitado'.
        ELSEIF l_desc = 'REHUSADA'.
          knkk-dbpay = 'ZRE'.
        ELSEIF l_desc = 'VIGOR'.
          knkk-dbpay = 'ZCO'.
*          knkk-dbekr = 'Concedido'.
          knkk-dbekr = l_amount.
          knkk-klimk = l_amount + knkk-zzriesgo_2 ."( *knkk-klimk - *knkk-dbekr ).
          knkk-dbmon = sy-datum.
        ENDIF.

        knkk-revdb = sy-datum.
        knkk-dbrtg = 'CYC'.

        DATA l_logs TYPE REF TO zcl_seidor_guardar_log.

        CREATE OBJECT l_logs.

        LOOP AT lt_return INTO l_return.

          CALL METHOD l_logs->guardar_mensaje
            EXPORTING
              i_type       = l_return-type
              i_id         = l_return-id
              i_number     = l_return-number
              i_message_v1 = l_return-message_v1
              i_message_v2 = l_return-message_v2
              i_message_v3 = l_return-message_v3
              i_message_v4 = l_return-message_v4.

        ENDLOOP.

*        Log
        CLEAR: l_registro, lt_return[].

        l_registro-kunnr = rf02l-kunde.
        l_registro-kkber = rf02l-kkber.
        l_registro-tipo = 'S'.
        l_registro-kraus = knkk-kraus.
        l_registro-dbekr = knkk-dbekr.
        l_registro-dbpay = knkk-dbpay.
        l_registro-dbrtg = knkk-dbrtg.
        l_registro-revdb = knkk-revdb.
        l_registro-dbmon = knkk-dbmon.

        CALL FUNCTION 'ZSSD_CYC_HISTORICO'
          EXPORTING
            i_registro = l_registro
          TABLES
            return     = lt_return.

        LOOP AT lt_return INTO l_return.

          CALL METHOD l_logs->guardar_mensaje
            EXPORTING
              i_type       = l_return-type
              i_id         = l_return-id
              i_number     = l_return-number
              i_message_v1 = l_return-message_v1
              i_message_v2 = l_return-message_v2
              i_message_v3 = l_return-message_v3
              i_message_v4 = l_return-message_v4.

        ENDLOOP.



        CALL METHOD l_logs->guardar_log
          EXPORTING
            objeto    = 'ZSSD_CYC'
            subobjeto = 'ZSSD_CYC'
*           extnumber =
          IMPORTING
            lognumber = l_lognumber.


        IF sy-batch = abap_false.
          CALL METHOD l_logs->mostrar_popup_log
            EXPORTING
              lognumber = l_lognumber.
        ENDIF.



      ENDIF.

    ENDIF.

  ENDIF.
ENDFORM.
