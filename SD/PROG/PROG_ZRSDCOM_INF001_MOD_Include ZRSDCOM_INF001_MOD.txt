*&---------------------------------------------------------------------*
*&  Include           ZRSDCOM_INF001_MOD
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.

* Status y título
  SET PF-STATUS 'DYN100'.
  SET TITLEBAR 'DYN100'.

  IF g_custom_container IS INITIAL.

*   Cargamos todos los objetos del informe
    PERFORM cargar_objetos.

*   Imprimimos la cabecera HTML
    PERFORM mostrar_html_header.

*   Mostramos el ALV o el TREE
    IF p_alv = 'X'.
*     Cargamos la información en la tabla del ALV
      PERFORM cargar_alv.
*     Mostramos el ALV
      PERFORM mostrar_alv.
    ELSE.
*     Mostramos el TREE
      PERFORM mostrar_tree.
*     Construimos el TREE
      PERFORM construir_tree.
*     Mostramos el TREE en pantalla
      CALL METHOD g_tree->frontend_update.
      CALL METHOD g_tree->column_optimize.
    ENDIF.

* Refrescamos el informe
  ELSE.
    PERFORM refrescar_alv.
  ENDIF.

ENDMODULE.                 " STATUS_0100  OUTPUT


*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE gv_okcode.

*   Salir
    WHEN 'EXIT'.
      SET SCREEN 0.
      LEAVE SCREEN.

*   Optimizar ancho de columnas
    WHEN 'OPTIM'.
      IF p_alv = 'X'.
        PERFORM refrescar_alv.
      ELSE.
        CALL METHOD g_tree->frontend_update.
        CALL METHOD g_tree->column_optimize.
      ENDIF.

  ENDCASE.
  CLEAR gv_okcode.

ENDMODULE.                 " USER_COMMAND_0100  INPUT
