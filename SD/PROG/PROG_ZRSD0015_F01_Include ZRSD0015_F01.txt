*----------------------------------------------------------------------*
***INCLUDE ZRSD0015_F01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  VALIDAR_ENTRADA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM validar_entrada .
  IF pvbeln_p IS NOT INITIAL AND pvbeln_e IS NOT INITIAL.
    MESSAGE e201(zsd).
  ENDIF.
ENDFORM.                    " VALIDAR_ENTRADA

FORM validar_pedido.
  DATA: lv_vbeln_p TYPE vbak-vbeln.
  IF pvbeln_p IS NOT INITIAL.
    SELECT SINGLE vbeln INTO @lv_vbeln_p
      FROM vbak
      WHERE vbeln = @pvbeln_p.
    IF sy-subrc <> 0.
      MESSAGE e202(zsd).
    ENDIF.
  ENDIF.
ENDFORM.

FORM validar_entrega.
  DATA: lv_vbeln_e TYPE likp-vbeln.
  IF pvbeln_e IS NOT INITIAL.
    SELECT SINGLE vbeln INTO @lv_vbeln_e
      FROM likp
      WHERE vbeln = @pvbeln_e.
    IF sy-subrc <> 0.
      MESSAGE e203(zsd).
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  OBTENER_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM obtener_datos .
  CLEAR: gt_pedidos, gv_kunag, gv_cli_0100, gv_vbeln.

  IF pvbeln_p IS INITIAL AND pvbeln_e IS INITIAL.
    MESSAGE s204(zsd) DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.

  IF pvbeln_p IS NOT INITIAL.
    gv_vbeln = pvbeln_p.
    SELECT vbap~vbeln, vbap~posnr, vbap~matnr, vbap~werks, vbak~kunnr, vbap~arktx, vbap~kwmeng, vbap~vrkme, vbap~uepos, vbap~pstyv
      INTO CORRESPONDING FIELDS OF TABLE @gt_pedidos
      FROM vbap
      INNER JOIN vbak ON vbak~vbeln = vbap~vbeln
      WHERE vbap~vbeln = @pvbeln_p.
  ELSEIF pvbeln_e IS NOT INITIAL.
    gv_vbeln = pvbeln_e.
    SELECT lips~vbeln, lips~posnr, lips~matnr, lips~werks, likp~kunag AS kunnr, lips~arktx, lips~lfimg AS kwmeng, lips~meins AS vrkme, lips~uepos, lips~pstyv
      INTO CORRESPONDING FIELDS OF TABLE @gt_pedidos
      FROM lips
      INNER JOIN likp ON likp~vbeln = lips~vbeln
      WHERE lips~vbeln = @pvbeln_e.
  ENDIF.

  IF gt_pedidos IS NOT INITIAL.
    LOOP AT gt_pedidos ASSIGNING FIELD-SYMBOL(<fs_pedido>).
      IF <fs_pedido>-pstyv = 'ZTA2'.
        <fs_pedido>-indickit = 'P'.
      ELSEIF <fs_pedido>-pstyv = 'ZTA3'.
        <fs_pedido>-indickit = 'H'.
      ENDIF.

      IF <fs_pedido>-indickit = 'P'.

        SELECT SINGLE zzkitcomp
          INTO <fs_pedido>-zzkitcomp
          FROM zmarcpalet
          WHERE matnr = <fs_pedido>-matnr AND
                werks = <fs_pedido>-werks AND
                kunnr = <fs_pedido>-kunnr.

        IF sy-subrc <> 0.
          SELECT SINGLE zzkitcomp
          INTO <fs_pedido>-zzkitcomp
          FROM zmarcpalet
          WHERE matnr = <fs_pedido>-matnr AND
                werks = <fs_pedido>-werks AND
                kunnr = ''.
        ENDIF.

      ENDIF.

      IF gv_kunag IS INITIAL.
        gv_kunag = <fs_pedido>-kunnr.
        SELECT SINGLE name1
          INTO gv_cli_0100
          FROM kna1
          WHERE kunnr = <fs_pedido>-kunnr.
      ENDIF.

    ENDLOOP.
  ENDIF.

ENDFORM.                    " OBTENER_DATOS
*&---------------------------------------------------------------------*
*&      Form  SET_COLUMNS_TECHNICAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LR_COLUMNS  text
*----------------------------------------------------------------------*
FORM set_columns_technical  USING ir_columns TYPE REF TO cl_salv_columns.

  DATA: lr_column TYPE REF TO cl_salv_column.

  TRY.
      lr_column = ir_columns->get_column( 'WERKS' ).
      lr_column->set_technical( if_salv_c_bool_sap=>true ).
    CATCH cx_salv_not_found.                            "#EC NO_HANDLER
  ENDTRY.

  TRY.
      lr_column = ir_columns->get_column( 'KUNNR' ).
      lr_column->set_technical( if_salv_c_bool_sap=>true ).
    CATCH cx_salv_not_found.                            "#EC NO_HANDLER
  ENDTRY.

  TRY.
      lr_column = ir_columns->get_column( 'PSTYV' ).
      lr_column->set_technical( if_salv_c_bool_sap=>true ).
    CATCH cx_salv_not_found.                            "#EC NO_HANDLER
  ENDTRY.

ENDFORM.                    " SET_COLUMNS_TECHNICAL
*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_datos .
  CALL SCREEN 100.
ENDFORM.                    " MOSTRAR_DATOS
*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_DETALLES_PALETIZADO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ROW  text
*----------------------------------------------------------------------*
FORM mostrar_detalles_paletizado  USING    p_row TYPE i.

  DATA: ls_pedido TYPE zssd0015ped.

  CLEAR:  gwa_detalle_cliente, gv_name, gv_maktx, gv_cli,
          gv_zzcapicu, gv_zzcanton, gv_zzretrac, gv_zztablero,
          gv_zzcajcont, gv_zzkitcomp, gv_zzmatpal, gv_vista_cliente.

  READ TABLE gt_pedidos INTO ls_pedido INDEX p_row.
  IF sy-subrc = 0.
*    Seleccionar información de paletizado por cliente o por material/centro y mostrar dynpro 200
    SELECT SINGLE *
      INTO CORRESPONDING FIELDS OF gwa_detalle_cliente
      FROM zmarcpalet
      WHERE matnr = ls_pedido-matnr AND
              werks = ls_pedido-werks AND
              kunnr = ls_pedido-kunnr.

    IF sy-subrc = 0.
*      PERFORM visibilidad_campos USING 0. "Mostrar campos de cliente
      gv_vista_cliente = abap_true.
      SELECT SINGLE name1 FROM kna1
      INTO gv_cli
      WHERE kunnr = ls_pedido-kunnr.

    ELSE.
*      PERFORM visibilidad_campos USING 1. "Ocultar campos de cliente

      SELECT SINGLE *
      INTO CORRESPONDING FIELDS OF gwa_detalle_cliente
      FROM zmarcpalet
      WHERE matnr = ls_pedido-matnr AND
            werks = ls_pedido-werks AND
            kunnr = ''.
    ENDIF.

    IF gwa_detalle_cliente IS NOT INITIAL.
      PERFORM traer_descriptivos.
      CALL SCREEN 200.
    ELSE.
      MESSAGE i205(zsd) WITH ls_pedido-matnr.
    ENDIF.

  ENDIF.

ENDFORM.                    " MOSTRAR_DETALLES_PALETIZADO
*&---------------------------------------------------------------------*
*&      Form  VISIBILIDAD_CAMPOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0      text
*----------------------------------------------------------------------*
FORM visibilidad_campos  USING p_visible TYPE i.
  LOOP AT SCREEN.
    IF screen-name = 'CLIENTE' OR
       screen-name = 'GWA_DETALLE_CLIENTE-KUNNR' OR
       screen-name = 'GV_CLI'.
      screen-invisible = p_visible.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.
ENDFORM.                    " VISIBILIDAD_CAMPOS

*&---------------------------------------------------------------------*
*&      Form  GET_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZMARCPALET_ZRETRAC  text
*      <--P_GV_ZZRETRAC  text
*----------------------------------------------------------------------*
FORM get_value  USING    dom
                         campo
                CHANGING value.

  DATA:  lv_dom       TYPE          dd07l-domname,
         t_values_tab TYPE TABLE OF dd07v,
         wa_values    TYPE          dd07v.

  lv_dom = dom.

  CALL FUNCTION 'GET_DOMAIN_VALUES'
    EXPORTING
      domname         = lv_dom
      text            = 'X'
*     FILL_DD07L_TAB  = ' '
    TABLES
      values_tab      = t_values_tab
*     VALUES_DD07L    =
    EXCEPTIONS
      no_values_found = 1
      OTHERS          = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ELSE.
    READ TABLE t_values_tab INTO wa_values WITH KEY domvalue_l = campo.
    value = wa_values-ddtext.
  ENDIF.


ENDFORM.                    " GET_VALUE
*&---------------------------------------------------------------------*
*&      Form  TRAER_DESCRIPTIVOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM traer_descriptivos .

  PERFORM get_value USING 'ZZRETRAC'
                          gwa_detalle_cliente-zzretrac
                    CHANGING gv_zzretrac.

  PERFORM get_value USING 'ZZCAPICU'
                        gwa_detalle_cliente-zzcapicu
                  CHANGING gv_zzcapicu.

  PERFORM get_value USING 'ZZCAJCONT'
                          gwa_detalle_cliente-zzcajcont
                    CHANGING gv_zzcajcont.

  PERFORM get_value USING 'ZZCANTON'
                          gwa_detalle_cliente-zzcanton
                    CHANGING gv_zzcanton.

  PERFORM get_value USING 'ZZTABLERO'
                          gwa_detalle_cliente-zztablero
                    CHANGING gv_zztablero.

  PERFORM get_value USING 'ZZKITCOMP'
                           gwa_detalle_cliente-zzkitcomp
                    CHANGING gv_zzkitcomp.

  PERFORM get_mat_descripcion USING gwa_detalle_cliente-zzmatpal
                                 CHANGING gv_zzmatpal.

  PERFORM get_mat_descripcion USING gwa_detalle_cliente-matnr
                                 CHANGING gv_maktx.

  PERFORM get_werks_name USING gwa_detalle_cliente-werks
                                 CHANGING gv_name.

ENDFORM.                    " TRAER_DESCRIPTIVOS

*&---------------------------------------------------------------------*
*&      Form  GET_ZZMATPAL_DESCRIPCION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GWA_PALETIZADO_CENTRO_ZZMATPAL  text
*      <--P_GV_ZZMATPAL_200  text
*----------------------------------------------------------------------*
FORM get_mat_descripcion  USING    p_matnr
                               CHANGING p_maktx.
  SELECT SINGLE maktx FROM makt
    INTO p_maktx
    WHERE matnr = p_matnr AND
          spras = sy-langu.
ENDFORM.                    " GET_ZZMATPAL_DESCRIPCION

FORM get_werks_name  USING    p_werks
                               CHANGING p_name1.
  SELECT SINGLE name1 FROM t001w
    INTO p_name1
    WHERE werks = p_werks.

ENDFORM.                    " GET_ZZMATPAL_DESCRIPCION

FORM handle_user_command USING i_ucomm TYPE salv_de_function.

  DATA: lr_selections TYPE REF TO cl_salv_selections,
        lt_rows       TYPE        salv_t_row,
        lv_row        TYPE        i.

  lr_selections = gr_table->get_selections( ).

  CASE i_ucomm.
    WHEN 'VER_PAL'.
      lt_rows = lr_selections->get_selected_rows( ).

      IF lt_rows IS INITIAL.
        MESSAGE e206(zsd).
      ENDIF.
      READ TABLE lt_rows INTO lv_row INDEX 1.
      PERFORM mostrar_detalles_paletizado USING lv_row.
  ENDCASE.

ENDFORM.                    " handle_user_command
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM user_command_0100 .
  DATA: lv_field TYPE char30.
  CASE g_okcode.
    WHEN 'BACK' OR 'EXIT' OR 'CANC'.
      LEAVE TO SCREEN 0.
    WHEN 'VER_ENT'.
      GET CURSOR FIELD lv_field.
      IF lv_field = 'GV_VBELN'.
        IF pvbeln_p IS NOT INITIAL.
          SET PARAMETER ID 'AUN' FIELD pvbeln_p. "i guess parameter id is VRT
          CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN.
        ELSE.
          SET PARAMETER ID 'VL' FIELD pvbeln_e. "i guess parameter id is VRT
          CALL TRANSACTION 'VL03N' AND SKIP FIRST SCREEN.
        ENDIF.
      ENDIF.
  ENDCASE.
ENDFORM.                    " USER_COMMAND_0100
