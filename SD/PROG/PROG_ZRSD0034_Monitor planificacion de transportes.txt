*&---------------------------------------------------------------------*
*& Report  ZRSD0034
*&
*&---------------------------------------------------------------------*
*& GAPSD104. Report Expediciones
*& Javier Calás. 29.02.24
*&---------------------------------------------------------------------*
REPORT zrsd0034.

TABLES: vttk, vttp, likp, lips.
DATA: zrsd0034_s_alv_transportes TYPE zrsd0034_s_alv_transportes.


**********************
* Tipos de datos
**********************
TYPES: BEGIN OF st_lin_alv.
         INCLUDE TYPE zrsd0034_s_alv_transportes.
         INCLUDE TYPE zrsd0034_s_alv_entregas.
       TYPES END OF st_lin_alv.


"""""""""""""""""
" Includes
"""""""""""""""""
INCLUDE zseis_patron_alv.


**********************
* Variables globales
**********************
CONSTANTS: cg_dynnr_transportes TYPE sy-dynnr VALUE '0100',
           cg_dynnr_entregas    TYPE sy-dynnr VALUE '0110'.


DATA: it_alv_transportes TYPE tt_lin_alv_patron,
      wg_linea_sel       TYPE LINE OF tt_lin_alv_patron,
      tg_popup_entregas  TYPE TABLE OF zrsd0034_s_popup_entregas.
DATA: rg_transporte      TYPE REF TO zcl_zhui5_sd_transport_dpc_imp.

DATA: rg_alv_popup_9001        TYPE REF TO cl_salv_table,
      rg_contenedor_popup_9001 TYPE REF TO cl_gui_custom_container.


**********************
* Pantalla de selección
**********************
SELECTION-SCREEN  BEGIN OF BLOCK b01 WITH FRAME TITLE text-b01.
SELECT-OPTIONS: s_tplst FOR vttk-tplst,
                s_sttrg FOR vttk-sttrg,
                s_tdlnr FOR vttk-tdlnr,
                s_exti2 FOR vttk-exti2,
                s_tknum FOR vttk-tknum,
                s_shtyp FOR vttk-shtyp,
                s_dpreg FOR zrsd0034_s_alv_transportes-dpreg,  "Fecha entrega a cliente
                s_dtabf FOR zrsd0034_s_alv_transportes-dtabf,  "Fecha expedición
                s_erdat FOR vttk-erdat,
                s_vbeln FOR vttp-vbeln.
SELECTION-SCREEN END OF BLOCK b01.

SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE text-b02.
PARAMETERS: rb_tran RADIOBUTTON GROUP g1 DEFAULT 'X' USER-COMMAND rb,
            rb_entr RADIOBUTTON GROUP g1.
SELECTION-SCREEN END OF BLOCK b02.

SELECTION-SCREEN BEGIN OF BLOCK b03 WITH FRAME TITLE text-b03 .
SELECT-OPTIONS s_kunnr FOR likp-kunnr MODIF ID ent.
SELECT-OPTIONS s_matnr FOR lips-matnr MODIF ID ent.
SELECTION-SCREEN END OF BLOCK b03.



**********************
* Eventos
**********************
AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    IF screen-group1 = 'ENT'.
      screen-active   = COND #( WHEN rb_tran = 'X' THEN 0 ELSE 1 ).
      screen-input    = COND #( WHEN rb_tran = 'X' THEN 0 ELSE 1 ).
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.


*&---------------------------------------------------------------------*
*&      Form  f_initialization.
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_initialization.

  CALL FUNCTION 'RS_SUPPORT_SELECTIONS'
    EXPORTING
      report               = sy-repid
      variant              = 'TRANS. PDTS'
    EXCEPTIONS
      variant_not_existent = 1
      variant_obsolete     = 2
      OTHERS               = 3.



  vg_no_justif_cols = 'X'.
  PERFORM f_config_dynpro USING cg_dynnr_transportes  'CC_ALV' 'T01' 'STA_100' space space.
  PERFORM f_config_dynpro USING cg_dynnr_entregas     'CC_ALV' 'T02' 'STA_110' space space.

  rg_transporte = NEW zcl_zhui5_sd_transport_dpc_imp( ).

ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  f_pre_llenar_datos
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_pre_llenar_datos.
  CASE 'X'.
    WHEN rb_tran.
      vg_ventana_inicial = cg_dynnr_transportes.
    WHEN rb_entr.
      vg_ventana_inicial = cg_dynnr_entregas.
  ENDCASE.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  F_CREAR_CATALOGO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_crear_catalogo TABLES it_catalogo TYPE lvc_t_fcat USING vp_dynnr.

  wa_variant-report  = |{ sy-repid }_{ vp_dynnr }|.
  wa_layout-sel_mode = 'A'.

  DATA: tl_catalogo_entregas TYPE lvc_t_fcat.
  CLEAR it_catalogo[].

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZRSD0034_S_ALV_TRANSPORTES'
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = it_catalogo[]
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZRSD0034_S_ALV_ENTREGAS'
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = tl_catalogo_entregas
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF vp_dynnr = cg_dynnr_entregas.
    APPEND LINES OF tl_catalogo_entregas TO it_catalogo.
    DELETE it_catalogo WHERE fieldname = 'CLA_FESTIVO_TRANS'.

  ELSEIF vp_dynnr = cg_dynnr_transportes.
    LOOP AT tl_catalogo_entregas ASSIGNING FIELD-SYMBOL(<fs_catalogo>).
      CASE <fs_catalogo>-fieldname.
        WHEN 'AUFNR' OR 'GLTRP' OR 'GSUZP' OR 'GSTRP' OR 'GLTRS' OR 'GLUZS'.
          ADD 1000 TO <fs_catalogo>-col_pos.
          APPEND <fs_catalogo> TO it_catalogo.
      ENDCASE.
    ENDLOOP.
  ENDIF.


  LOOP AT it_catalogo ASSIGNING <fs_catalogo>.
    CASE <fs_catalogo>-fieldname.
      WHEN 'TEXTO_TRANSPORTE'.
        <fs_catalogo>-outputlen = 60.
      WHEN 'TEXTO_TRANSPORTISTA'.
        <fs_catalogo>-outputlen = 60.
      WHEN 'LISTA_CITY1'.
        <fs_catalogo>-outputlen = 40.
      WHEN 'LISTA_KUNNR'.
        <fs_catalogo>-outputlen = 40.
      WHEN 'REGIONES'.
        <fs_catalogo>-outputlen = 60.
      WHEN 'TEXTO_ENTREGA'.
        <fs_catalogo>-outputlen = 60.
      WHEN 'SITUACION_TXT'.
        <fs_catalogo>-outputlen = 20.
      WHEN 'HORARIO_DESTINATARIO'.
        <fs_catalogo>-outputlen = 60.
      WHEN 'TKNUM'.
        <fs_catalogo>-hotspot = 'X'.
      WHEN 'VBELN'.
        <fs_catalogo>-hotspot = 'X'.
      WHEN 'CLA_FESTIVO_TRANS' OR 'CLA_FESTIVO_ENTR'.
        <fs_catalogo>-checkbox = 'X'.


    ENDCASE.
  ENDLOOP.



ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  f_llenar_datos
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_llenar_datos TABLES tp_alv USING vp_dynpro.
  PERFORM f_llenar_datos_ext TABLES tp_alv USING vp_dynpro ' '.

ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  f_llenar_datos
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_llenar_datos_ext TABLES tp_alv USING vp_dynpro vp_refresh.
  CLEAR tp_alv[].
  IF vp_refresh = space.
    IF r_alv IS BOUND.
      r_alv->free( ).
      CLEAR r_alv.
    ENDIF.

    IF r_contenedor IS BOUND.
      r_contenedor->free( ).
      CLEAR r_contenedor.
    ENDIF.
  ENDIF.

  IF vp_refresh = 'X' AND vp_dynpro = cg_dynnr_transportes.
    CLEAR it_alv_transportes.
  ENDIF.



  DATA(tl_tknum_rg) =  s_tknum[].
  IF wg_linea_sel IS NOT INITIAL.
    tl_tknum_rg = VALUE #( ( sign = 'I' option = 'EQ' low = wg_linea_sel-tknum ) ).
  ENDIF.



  IF vp_dynpro = cg_dynnr_transportes AND it_alv_transportes IS NOT INITIAL.
    it_alv = it_alv_transportes.
    CLEAR it_alv_transportes.
    RETURN.
  ENDIF.


  TRY.
      DATA(tl_transportes) = rg_transporte->transportes_getlist( tp_tdlnr_rg = s_tdlnr[]
                                                                 tp_tplst_rg = s_tplst[]
                                                                 tp_exti2_rg = s_exti2[]
                                                                 tp_sttrg_rg = s_sttrg[]
                                                                 tp_tknum_rg = tl_tknum_rg
                                                                 tp_shtyp_rg = s_shtyp[]
                                                                 tp_dpreg_rg = s_dpreg[]
                                                                 tp_dtabf_rg = s_dtabf[]
                                                                 tp_erdat_rg = s_erdat[]
                                                                 tp_vbeln_rg = s_vbeln[] ).
      IF vp_dynpro = cg_dynnr_entregas.
        CLEAR tl_tknum_rg.
        LOOP AT tl_transportes ASSIGNING FIELD-SYMBOL(<fs_transportes>).
          APPEND INITIAL LINE TO tl_tknum_rg ASSIGNING FIELD-SYMBOL(<fs_tknum_rg>).
          <fs_tknum_rg>-sign = 'I'. <fs_tknum_rg>-option = 'EQ'. <fs_tknum_rg>-low = <fs_transportes>-tknum.
        ENDLOOP.

        IF tl_tknum_rg IS NOT INITIAL.
          DATA(tl_entregas)     = rg_transporte->entregas_getlist( tp_tknum_rg = tl_tknum_rg ).
          DATA(tl_entregas_pos) = rg_transporte->entregas_pos_getlist( tp_tknum_rg = tl_tknum_rg ).
        ENDIF.
      ENDIF.
    CATCH /iwbep/cx_mgw_busi_exception INTO DATA(rl_exc).
      MESSAGE rl_exc->get_text( ) TYPE 'E'.
  ENDTRY.

  DATA wl_alv LIKE LINE OF it_alv.
  LOOP AT tl_transportes ASSIGNING <fs_transportes>.
    CLEAR wl_alv.
    MOVE-CORRESPONDING <fs_transportes> TO wl_alv.
    wl_alv-cla_festivo_trans = <fs_transportes>-cla_festivo.

    IF vp_dynpro = cg_dynnr_entregas.
      LOOP AT tl_entregas_pos ASSIGNING FIELD-SYMBOL(<fs_entregas_pos>) WHERE tknum = <fs_transportes>-tknum AND
                                                                              matnr IN s_matnr.
        READ TABLE tl_entregas ASSIGNING FIELD-SYMBOL(<fs_entregas>) WITH KEY vbeln = <fs_entregas_pos>-vbeln.
        CHECK sy-subrc = 0 AND <fs_entregas>-kunnr IN s_kunnr.

        MOVE-CORRESPONDING <fs_entregas> TO wl_alv.
        MOVE-CORRESPONDING <fs_entregas_pos> TO wl_alv.
        wl_alv-texto_entrega = <fs_entregas_pos>-texto.
        wl_alv-kunnr_name1            = <fs_entregas>-name1.
        wl_alv-horario_destinatario   = <fs_entregas>-horario_descarga.
        wl_alv-cla_festivo_entr       = <fs_entregas>-cla_festivo.

        APPEND wl_alv TO tp_alv.
      ENDLOOP.
    ELSE.
      APPEND wl_alv TO tp_alv.
    ENDIF.
  ENDLOOP.


  IF vp_refresh = 'X' AND r_alv IS BOUND.
    r_alv->refresh_table_display( ).
  ENDIF.

ENDFORM.



**&---------------------------------------------------------------------*
**&      Form  f_handle_toolbar
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
**      -->P_OBJECT       text
**      -->P_INTERACTIVE  text
**----------------------------------------------------------------------*
FORM f_handle_toolbar USING vp_dynpro rp_object TYPE REF TO cl_alv_event_toolbar_set  p_interactive.
  DATA: wl_toolbar  TYPE stb_button,
        vl_function LIKE wl_toolbar-function.

  APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING FIELD-SYMBOL(<fs_toolbar>).
  <fs_toolbar>-butn_type = 3.


  APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
  <fs_toolbar>-function   = 'PREVISUALIZAR'.
  <fs_toolbar>-quickinfo  = 'Previsualizar'.
  <fs_toolbar>-text       = 'Previsualizar'.
  <fs_toolbar>-icon       =  icon_view_form.
  <fs_toolbar>-butn_type  = 2.

  APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
  <fs_toolbar>-function   = 'IMPRIMIR'.
  <fs_toolbar>-quickinfo  = 'Imprimir'.
  <fs_toolbar>-text       = 'Imprimir'.
  <fs_toolbar>-icon       =  icon_print.
  <fs_toolbar>-butn_type  = 2.


  CASE vp_dynpro.
    WHEN cg_dynnr_transportes.
      APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
      <fs_toolbar>-butn_type = 3.

      APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
      <fs_toolbar>-function   = 'ENTREGAS'.
      <fs_toolbar>-quickinfo  = 'Entregas'.
      <fs_toolbar>-text       = 'Entregas'.
      <fs_toolbar>-icon       =  icon_transport.

    WHEN cg_dynnr_entregas.
      APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
      <fs_toolbar>-function   = 'UBICA'.
      <fs_toolbar>-quickinfo  = 'Ubicaciones'.
      <fs_toolbar>-text       = 'Ubicaciones'.
      <fs_toolbar>-icon       =  icon_store_location.
  ENDCASE.


  APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
  <fs_toolbar>-butn_type = 3.
  APPEND INITIAL LINE TO rp_object->mt_toolbar ASSIGNING <fs_toolbar>.
  <fs_toolbar>-function   = 'REFRESH'.
*  <fs_toolbar>-quickinfo  = 'Refrescar'.
*  <fs_toolbar>-text       = 'Refrescar'.
  <fs_toolbar>-icon       =  icon_refresh.


ENDFORM.                    "f_handle_toolbar


*&---------------------------------------------------------------------*
*&      Form  f_handle_menu_button
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_OBJECT   text
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_handle_menu_button
      USING e_object TYPE REF TO  cl_ctmenu
            e_ucomm TYPE  sy-ucomm.

  DATA: fcode TYPE ui_func,
        text  TYPE gui_text.


  CASE e_ucomm.
    WHEN 'PREVISUALIZAR'.
      e_object->add_function( fcode = 'HOJA_PICKING_PREV'
                              text  = 'Hoja picking' ).
      e_object->add_function( fcode = 'CARTA_PORTE_PREV'
                              text  = 'Carta de porte' ).
      IF sy-dynnr = cg_dynnr_entregas.
        e_object->add_function( fcode = 'ALBARAN_PREV'
                                text  = 'Albarán' ).
      ENDIF.

    WHEN 'IMPRIMIR'.
      e_object->add_function( fcode = 'HOJA_PICKING_IMPR'
                              text  = 'Hoja picking' ).
      e_object->add_function( fcode = 'CARTA_PORTE_IMPR'
                              text  = 'Carta de porte' ).
      IF sy-dynnr = cg_dynnr_entregas.
        e_object->add_function( fcode = 'ALBARAN_IMPR'
                                text  = 'Albarán' ).
      ENDIF.

  ENDCASE.




ENDFORM.                    "f_handle_menu_button


*&---------------------------------------------------------------------*
*&      Form  f_user_command
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_user_command  USING vp_dynnr vp_okcode.
  CASE vp_okcode.
    WHEN 'VOLVER2' OR 'ATRAS2' OR 'CANCELAR2'.
      IF vg_ventana_inicial = cg_dynnr_entregas.
        LEAVE TO SCREEN 0.
      ELSE.
        CLEAR wg_linea_sel.
        PERFORM f_llenar_datos TABLES it_alv USING cg_dynnr_transportes.
        LEAVE TO SCREEN cg_dynnr_transportes.
      ENDIF.
  ENDCASE.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  f_handle_user_command
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_handle_user_command USING e_ucomm.
  DATA: tl_index_rows TYPE lvc_t_row.

  IF e_ucomm <> 'REFRESH' AND e_ucomm <> 'PREVISUALIZAR' AND e_ucomm <> 'IMPRIMIR'.
    r_alv->get_selected_rows( IMPORTING et_index_rows = tl_index_rows ).
    IF lines( tl_index_rows ) < 1.
      MESSAGE 'Debe seleccionar una fila' TYPE 'I' DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.
    LOOP AT tl_index_rows ASSIGNING FIELD-SYMBOL(<fs_index_rows>).
      DATA(wl_alv) = it_alv[ <fs_index_rows>-index ].
    ENDLOOP.
  ENDIF.

  CASE e_ucomm.
    WHEN 'CARTA_PORTE_PREV'.
      PERFORM f_imprimir_carta_porte USING wl_alv 'X'.
    WHEN 'ALBARAN_PREV'.
      PERFORM f_imprimir_albaran USING wl_alv 'X'.
    WHEN 'HOJA_PICKING_PREV'.
      PERFORM f_imprimir_hoja_picking USING wl_alv 'X'.
    WHEN 'CARTA_PORTE_IMPR'.
      PERFORM f_imprimir_carta_porte USING wl_alv space.
    WHEN 'ALBARAN_IMPR'.
      PERFORM f_imprimir_albaran USING wl_alv space.
    WHEN 'HOJA_PICKING_IMPR'.
      PERFORM f_imprimir_hoja_picking USING wl_alv space.
    WHEN 'ENTREGAS'.
      PERFORM f_mostrar_entregas USING wl_alv.
    WHEN 'REFRESH'.
      PERFORM f_refresh_alv.

    WHEN 'UBICA'.
      PERFORM f_popup_ubica USING wl_alv..
  ENDCASE.



ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  F_MOSTRAR_ENTREGAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_mostrar_entregas USING wp_alv TYPE st_lin_alv_patron.
  it_alv_transportes = it_alv.
  CLEAR it_alv.
  wg_linea_sel = wp_alv.
  PERFORM f_llenar_datos TABLES it_alv USING cg_dynnr_entregas.
  LEAVE TO SCREEN cg_dynnr_entregas.
ENDFORM.






*&---------------------------------------------------------------------*
*&      Form  f_imprimir_carta_porte
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_imprimir_carta_porte USING wp_alv        TYPE st_lin_alv_patron
                                  vp_previsualizar  .


  IF wp_alv-tknum IS NOT INITIAL.
    TRY.
        rg_transporte->cartas_porte_imprimir( vp_tknum          = wp_alv-tknum
                                              vp_previsualizar  = vp_previsualizar ).
      CATCH /iwbep/cx_mgw_busi_exception INTO DATA(rl_exc).
        MESSAGE rl_exc->get_text( ) TYPE 'I' DISPLAY LIKE 'E'.
        RETURN.
    ENDTRY.
  ENDIF.

  MESSAGE 'Orden de spool generada' TYPE 'S'.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  f_imprimir_hoja_picking
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_imprimir_hoja_picking USING wp_alv TYPE st_lin_alv_patron
                                   vp_previsualizar.

  "Hoja Picking # Clase de mensaje de transportes (V7) ZPCK se debe de imprimir
  IF wp_alv-tknum IS NOT INITIAL.
    TRY.
        rg_transporte->hoja_picking_imprimir( vp_tknum          = wp_alv-tknum
                                              vp_previsualizar  = vp_previsualizar ).
      CATCH /iwbep/cx_mgw_busi_exception INTO DATA(rl_exc).
        MESSAGE rl_exc->get_text( ) TYPE 'I' DISPLAY LIKE 'E'.
        RETURN.
    ENDTRY.
  ENDIF.


  MESSAGE 'Orden de spool generada' TYPE 'S'.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  f_imprimir_albaran
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_imprimir_albaran USING wp_alv TYPE st_lin_alv_patron
                              vp_previsualizar.

  IF wp_alv-vbeln IS NOT INITIAL.
    TRY.
        rg_transporte->albaranes_imprimir( vp_vbeln         = wp_alv-vbeln
                                           vp_previsualizar = vp_previsualizar ).
      CATCH /iwbep/cx_mgw_busi_exception INTO DATA(rl_exc).
        MESSAGE rl_exc->get_text( ) TYPE 'I' DISPLAY LIKE 'E'.
        RETURN.
    ENDTRY.
  ENDIF.

  MESSAGE 'Orden de spool generada' TYPE 'S'.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  F_REFRESH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_refresh_alv.
  PERFORM  f_llenar_datos_ext TABLES it_alv USING sy-dynnr 'X'.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  f_handle_hotspot_click
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM f_handle_hotspot_click  USING dynpro e_row_id e_column_id wp_alv TYPE st_lin_alv_patron.
  CASE e_column_id.
    WHEN 'TKNUM'.
      SET PARAMETER ID 'TNR' FIELD wp_alv-tknum.
      CALL TRANSACTION 'VT03N' AND SKIP FIRST SCREEN.
      PERFORM f_refresh_alv.

    WHEN 'VBELN'.
      SET PARAMETER ID 'VL' FIELD wp_alv-vbeln.
      CALL TRANSACTION 'VL03N' AND SKIP FIRST SCREEN.
      PERFORM f_refresh_alv.
  ENDCASE.

ENDFORM.




*&---------------------------------------------------------------------*
*&      Form  F_POPUP_UBICA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->E_UCOMM    text
*----------------------------------------------------------------------*
FORM f_popup_ubica USING wp_alv TYPE st_lin_alv_patron.

  SELECT SINGLE lgnum
    INTO @DATA(vl_lgnum)
    FROM t320
    WHERE werks = @wp_alv-werks.

  SELECT lqua~lgnum, lqua~lgtyp, lqua~matnr, makt~maktx, lqua~charg, lqua~verme, lqua~meins, lqua~lgpla
    INTO TABLE @tg_popup_entregas
    FROM lqua LEFT OUTER JOIN makt ON makt~matnr = lqua~matnr AND
                                      makt~spras = @sy-langu
    WHERE lqua~lgnum = @vl_lgnum      AND
          lqua~matnr = @wp_alv-matnr  AND
          lqua~lgtyp IN ('120', '200', '201' ).


  CALL SCREEN 9001 STARTING AT 5 5 ENDING AT 120 25.


ENDFORM.


*&---------------------------------------------------------------------*
*&      Module  STATUS_9001  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9001 OUTPUT.
  SET PF-STATUS 'STA_9001'.
  SET TITLEBAR 'TIT-9001'.


  PERFORM f_pbo_9001.

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_9001 INPUT.

  CASE okcode.
    WHEN 'OK'.
      LEAVE TO SCREEN 0.
  ENDCASE.


ENDMODULE.



*&---------------------------------------------------------------------*
*&      Form  F_PBO_9001
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_pbo_9001 .


  IF rg_alv_popup_9001 IS NOT BOUND.

    CREATE OBJECT rg_contenedor_popup_9001
      EXPORTING
        container_name              = 'CC_ALV_9001'
      EXCEPTIONS
        cntl_error                  = 1
        cntl_system_error           = 2
        create_error                = 3
        lifetime_error              = 4
        lifetime_dynpro_dynpro_link = 5
        OTHERS                      = 6.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.



    TRY.
        cl_salv_table=>factory( EXPORTING r_container = rg_contenedor_popup_9001
                                IMPORTING r_salv_table = rg_alv_popup_9001
                                CHANGING  t_table      = tg_popup_entregas ).
      CATCH cx_salv_msg.
        RETURN.
    ENDTRY.


    DATA(wl_key) = VALUE salv_s_layout_key( report = sy-repid handle = sy-dynnr ).

    rg_alv_popup_9001->get_layout( )->set_key( wl_key ).
    rg_alv_popup_9001->get_layout( )->set_save_restriction( if_salv_c_layout=>restrict_none ).
    rg_alv_popup_9001->get_layout( )->set_default( abap_true ).
    rg_alv_popup_9001->get_functions( )->set_all( 'X' ).
    DATA(rl_columns) = rg_alv_popup_9001->get_columns( ).
    DATA: rl_column  TYPE REF TO cl_salv_column_table.
*    rl_columns->set_optimize( ).

    TRY.
*        rl_column ?= rl_columns->get_column( 'TEXTO' ).
*        rl_column->set_output_length( 60 ).
*        rl_column->set_medium_text( 'Texto' ).
*
*        rl_columns->get_column( 'TDLNR' )->set_visible( space ).
*        rl_columns->get_column( 'STTRG' )->set_visible( space ).
*        rl_columns->get_column( 'TDID' )->set_technical( 'X' ).
*        rl_columns->get_column( 'TDOBJECT' )->set_technical( 'X' ).
*        rl_columns->get_column( 'TDNAME' )->set_technical( 'X' ).
*        rl_columns->get_column( 'TDSPRAS' )->set_technical( 'X' ).
*
*
*        rg_alv->get_sorts( )->add_sort( 'TKNUM' ).
*        rg_alv->get_sorts( )->add_sort( 'VBELN' ).
*        rg_alv->get_sorts( )->add_sort( 'POSNR' ).

      CATCH cx_salv_not_found cx_salv_data_error cx_salv_existing.
    ENDTRY.

  ELSE.
    rg_alv_popup_9001->refresh( refresh_mode = if_salv_c_refresh=>full ).
    cl_gui_cfw=>flush( ).
  ENDIF.


  rg_alv_popup_9001->display( ).


ENDFORM.
