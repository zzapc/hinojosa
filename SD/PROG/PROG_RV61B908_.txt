FORM KOBED_908.
*{   INSERT         HEDK917021                                        1

  CONSTANTS: lc_ccm_908_werks TYPE tvarvc-name VALUE 'VOFM_CCM_908_WERKS',
             lc_ccm_908_bwart TYPE tvarvc-name VALUE 'VOFM_CCM_908_BWART_',
             lc_ccm_908_mtart TYPE tvarvc-name VALUE 'VOFM_CCM_908_MTART_'.

  DATA: lr_tvarvc       TYPE wtysc_parnr_range_tab,
        lt_tvarvc       TYPE TABLE OF tvarvc,
        ls_goitem       TYPE goitem,
        ls_mseg         TYPE mseg,
        lv_mtart        TYPE mtart,
        lv_tvarvc_name  TYPE tvarvc-name .

  FIELD-SYMBOLS: <fs_item>  TYPE any.

  "De inicio hacemos que no se determine si no es la posición 1.
  sy-subrc = 4.

  "Determinamos el mensaje solo para la primera posición del pedido
  IF ( kompbme-zeile = '0001' ).

*-> 1. Compruebo si centro está en clausula condicional

    "Obtengo centros para clausula condicional
    CLEAR: lt_tvarvc, lt_tvarvc[], lr_tvarvc, lr_tvarvc[], lv_tvarvc_name.

    SELECT *
      FROM tvarvc
      INTO CORRESPONDING FIELDS OF TABLE lt_tvarvc
     WHERE name EQ lc_ccm_908_werks.

    "Compruebo si se han obtenido datos
    CHECK sy-subrc = 0.

    "Convierto resultado en rango
    lr_tvarvc = CORRESPONDING #( lt_tvarvc MAPPING sign = sign option = opti low = low high = high ).

    "Compruebo si centro está en rango de valores
    IF ( kompbme-werks NOT IN lr_tvarvc ).
      sy-subrc = 4.
      EXIT.
    ENDIF.

*<- 1. Compruebo si centro está en clausula condicional

    "Comprobamos si posición EM es inicial o no.
    IF ( ls_goitem IS INITIAL ). "Es inicial.

      ASSIGN ('(SAPLMIGO)GOITEM') TO <fs_item>.

      "Comprobamos si se asigna.
      IF ( sy-subrc = 0 AND <fs_item> IS ASSIGNED ). " Se asigna

        CLEAR: lv_mtart.

        ls_goitem = <fs_item>.

*-> 2. Compruebo que sea de subcontratación.

        IF ( ls_goitem-xlbtype IS INITIAL AND ls_goitem-umsok IS INITIAL ).
          sy-subrc = 4.
          EXIT.
        ENDIF.

*<- 2. Compruebo que sea de subcontratación.

*-> 3. Compruebo si tipo material está en clausula condicional

        "Obtenemos el tipo de material.
        SELECT SINGLE mtart
          FROM mara
          INTO lv_mtart
         WHERE matnr = ls_goitem-matnr.

        CHECK sy-subrc = 0.

        "Obtengo tipos de material para clausula condicional
        CLEAR: lt_tvarvc, lt_tvarvc[], lr_tvarvc, lr_tvarvc[], lv_tvarvc_name.

        CONCATENATE lc_ccm_908_mtart ls_goitem-werks INTO lv_tvarvc_name.

        SELECT *
          FROM tvarvc
          INTO CORRESPONDING FIELDS OF TABLE lt_tvarvc
         WHERE name EQ lv_tvarvc_name.

        "Compruebo si se han obtenido datos
        CHECK sy-subrc = 0.

        "Convierto resultado en rango
        lr_tvarvc = CORRESPONDING #( lt_tvarvc MAPPING sign = sign option = opti low = low high = high ).

        "Compruebo si tipo de material está en rango de valores
        IF ( lv_mtart NOT IN lr_tvarvc ).
          sy-subrc = 4.
          EXIT.
        ENDIF.

*<- 3. Compruebo si tipo material está en clausula condicional

*-> 4. Compruebo si movimiento de material está en clausula condicional

        "Obtengo clases de movimiento para clausula condicional
        CLEAR: lt_tvarvc, lt_tvarvc[], lr_tvarvc, lr_tvarvc[], lv_tvarvc_name.

        CONCATENATE lc_ccm_908_bwart ls_goitem-werks INTO lv_tvarvc_name.

        SELECT *
          FROM tvarvc
          INTO CORRESPONDING FIELDS OF TABLE lt_tvarvc
         WHERE name EQ lv_tvarvc_name.

        "Compruebo si se han obtenido datos
        CHECK sy-subrc = 0.

        "Convierto resultado en rango
        lr_tvarvc = CORRESPONDING #( lt_tvarvc MAPPING sign = sign option = opti low = low high = high ).

        "Compruebo si tipo de material está en rango de valores
        IF ( ls_goitem-bwart NOT IN lr_tvarvc ).
          sy-subrc = 4.
          EXIT.
        ENDIF.

*<- 4. Compruebo si movimiento de material está en clausula condicional

      ELSE. "No se asigna

        CLEAR: lv_mtart.

        "Comprobamos de que transacción viene
        CASE sy-tcode.
          WHEN 'MBST'.
            ASSIGN ('(SAPMM07M)MSEG') TO <fs_item>.
          WHEN OTHERS.
            ASSIGN ('(SAPLMBWL)MSEG') TO <fs_item>.
        ENDCASE.

        "Comprobamos si se asigna .
        IF ( <fs_item> IS NOT ASSIGNED ).
          sy-subrc = 4.
          EXIT.
        ENDIF.

        "Si se ha asignado volcamos valores en ls_mseg
        ls_mseg = <fs_item>.

*-> 2. Compruebo que sea de subcontratación.

        SELECT COUNT(*) UP TO 1 ROWS
          FROM mdsb
         WHERE matnr EQ ls_mseg-matnr
           AND werks EQ ls_mseg-werks
           AND lgort EQ ls_mseg-lgort
           AND ebeln EQ ls_mseg-ebeln
           AND ebelp EQ ls_mseg-ebelp
           AND baugr NE space.

        CHECK sy-subrc = 0.

*<- 2. Compruebo que sea de subcontratación.

*-> 3. Compruebo si tipo material está en clausula condicional

        "Obtenemos el tipo de material
        SELECT SINGLE mtart
          FROM mara
          INTO lv_mtart
         WHERE matnr = ls_mseg-matnr.

        CHECK sy-subrc = 0.

        "Obtengo tipos de material para clausula condicional
        CLEAR: lt_tvarvc, lt_tvarvc[], lr_tvarvc, lr_tvarvc[], lv_tvarvc_name.

        CONCATENATE lc_ccm_908_mtart ls_mseg-werks INTO lv_tvarvc_name.

        SELECT *
          FROM tvarvc
          INTO CORRESPONDING FIELDS OF TABLE lt_tvarvc
         WHERE name EQ lv_tvarvc_name.

        "Compruebo si se han obtenido datos
        CHECK sy-subrc = 0.

        "Convierto resultado en rango
        lr_tvarvc = CORRESPONDING #( lt_tvarvc MAPPING sign = sign option = opti low = low high = high ).

        "Compruebo si tipo de material está en rango de valores
        IF ( lv_mtart NOT IN lr_tvarvc ).
          sy-subrc = 4.
          EXIT.
        ENDIF.

*<- 3. Compruebo si tipo material está en clausula condicional

*-> 4. Compruebo si movimiento de material está en clausula condicional

        "Obtengo clases de movimiento para clausula condicional
        CLEAR: lt_tvarvc, lt_tvarvc[], lr_tvarvc, lr_tvarvc[], lv_tvarvc_name.

        CONCATENATE lc_ccm_908_bwart ls_mseg-werks INTO lv_tvarvc_name.

        SELECT *
          FROM tvarvc
          INTO CORRESPONDING FIELDS OF TABLE lt_tvarvc
         WHERE name EQ lv_tvarvc_name.

        "Compruebo si se han obtenido datos
        CHECK sy-subrc = 0.

        "Convierto resultado en rango
        lr_tvarvc = CORRESPONDING #( lt_tvarvc MAPPING sign = sign option = opti low = low high = high ).

        "Compruebo si tipo de material está en rango de valores
        IF ( ls_mseg-bwart NOT IN lr_tvarvc ).
          sy-subrc = 4.
          EXIT.
        ENDIF.

*<- 4. Compruebo si movimiento de material está en clausula condicional

      ENDIF. "Fin IF asignación.

    ENDIF. "Fin IF posicion EM inicial.

  ENDIF. "Fin IF posición EM 0001.

*}   INSERT
ENDFORM.
FORM KOBEV_908.
*{   INSERT         HEDK917021                                        1

  sy-subrc = 0.

*}   INSERT
ENDFORM.
