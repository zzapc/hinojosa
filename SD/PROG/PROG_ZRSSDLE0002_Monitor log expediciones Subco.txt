*&---------------------------------------------------------------------*
*& Report  ZRSSDLE0002                                                    *
* Programa para consultar los logs de las expediciones subco
*----------------------------------------------------------------------*
* Autor : Rodolfo Malea.SEIS                                           *
* Date : 02.05.2024                                                    *
*----------------------------------------------------------------------*
REPORT zrssdle0002.

"""""""""""""""""
" Constantes
"""""""""""""""""

CONSTANTS: gc_dynpro_main TYPE sy-dynnr VALUE '0100',
           gc_dynpro_zlog TYPE sy-dynnr VALUE '0110'.


"""""""""""""""""
" Tipos de datos
"""""""""""""""""
TYPES: BEGIN OF st_lin_alv.
         INCLUDE TYPE zst_sdle_zrsdle0002_alv.
       TYPES END OF st_lin_alv.



"""""""""""""""""""""""
" Control pestañas
""""""""""""""""""""""
CONSTANTS: BEGIN OF c_c_ficha,
             tab1 LIKE sy-ucomm VALUE 'Zlog',
           END OF c_c_ficha.

CONTROLS:  c_ficha TYPE TABSTRIP.
DATA: BEGIN OF g_c_ficha,
        subscreen   LIKE sy-dynnr,
        prog        LIKE sy-repid VALUE sy-repid,
        pressed_tab LIKE sy-ucomm VALUE c_c_ficha-tab1,
      END OF g_c_ficha.

"""""""""""""""""
" Includes
"""""""""""""""""
INCLUDE zseis_patron_alv.

"""""""""""""""""
" Variables globalres
"""""""""""""""""

DATA: gv_ntra     TYPE ztsdle0003-numtransporte,
      gv_mblnr    TYPE ztsdle0003-mblnr,
      gv_mjahr    TYPE ztsdle0003-mjahr,
      gv_vbeln    TYPE ztsdle0003-vbeln,
      gv_posnr    TYPE ztsdle0003-posnr,
      gv_vbeln_vl TYPE ztsdle0003-vbeln_vl,
      gv_tknum    TYPE ztsdle0003-tknum,
      gv_erdat    TYPE ztsdle0003-erdat,
      gv_responsable type ztsdle0001-responsable.




"""""""""""""""""
" Pantalla de selección
"""""""""""""""""
SELECT-OPTIONS: s_ntra FOR gv_ntra,
                s_mblnr FOR gv_mblnr,
                s_mjahr FOR gv_mjahr,
                s_vbeln FOR gv_vbeln,
                s_posnr FOR gv_posnr,
                s_vbeln2 FOR gv_vbeln_vl,
                s_tknum FOR gv_tknum,
                s_erdat FOR gv_erdat DEFAULT sy-datum,
                s_resp for gv_responsable MODIF ID res.

""""""""""""""""""""""
"Rutinas
""""""""""""""""""""""

AT SELECTION-SCREEN OUTPUT.
**  LOOP AT SCREEN.
**    IF screen-group1 = 'RES'.
**      screen-invisible = '1'.  " Oculta el campo
**      screen-active = '0'.     " Desactiva el campo
**      MODIFY SCREEN.
**    ENDIF.
**  ENDLOOP.

*&---------------------------------------------------------------------*
*&      Form  f_initialization.
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_initialization.

  vg_ventana_inicial            = gc_dynpro_main.
  vg_no_justif_cols             = 'X'.
  vg_alv_protegido_por_defecto  = 'X'.

  PERFORM f_config_dynpro USING  gc_dynpro_main ''  'T01' 'STA_0100' ' ' 'X'.
  PERFORM f_config_subscreen USING  gc_dynpro_main gc_dynpro_zlog 'CC_ALV_ZLOG' 'T11' ' '.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CREAR_CATALOGO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_crear_catalogo TABLES it_catalogo TYPE lvc_t_fcat USING vp_dynnr.

**  wa_layout-info_fname = 'COLOR'.
**  wa_layout-sel_mode = 'A'.


  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZST_SDLE_ZRSDLE0002_ALV'
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = it_catalogo[]
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.

  DELETE it_catalogo WHERE fieldname = 'ESTADO'.

  LOOP AT it_catalogo ASSIGNING FIELD-SYMBOL(<fs_catalogo>).
    CASE <fs_catalogo>-fieldname.
      WHEN 'NUMTRANSPORTE'.
        <fs_catalogo>-emphasize   = 'C410'.
        <fs_catalogo>-col_pos = 1.
      WHEN 'ESTADO_ICON'.
        <fs_catalogo>-icon = 'X'.
        <fs_catalogo>-col_pos = 1.
      WHEN 'PASO'.
        <fs_catalogo>-col_pos = 2.
      WHEN 'PASO_TXT'.
        <fs_catalogo>-col_pos = 3.
        <fs_catalogo>-outputlen = 30.
      WHEN 'POSICION'.
        <fs_catalogo>-col_pos = 4.
      WHEN 'USUCRE'.
        <fs_catalogo>-col_pos = 5.
      WHEN 'ERDAT'.
        <fs_catalogo>-col_pos = 6.
      WHEN 'ERZET'.
        <fs_catalogo>-col_pos = 7.
      WHEN 'MENSAJE'.
        <fs_catalogo>-col_pos = 8.
        <fs_catalogo>-outputlen = 30.
      WHEN 'MBLNR'.
        <fs_catalogo>-col_pos = 9.
        <fs_catalogo>-hotspot = 'X'.
      WHEN 'MJAHR'.
        <fs_catalogo>-col_pos = 10.
      WHEN 'VBELN'.
        <fs_catalogo>-col_pos = 11.
        <fs_catalogo>-hotspot = 'X'.
      WHEN 'POSNR'.
        <fs_catalogo>-col_pos = 12.
      WHEN 'EBELN'.
        <fs_catalogo>-col_pos = 13.
        <fs_catalogo>-hotspot = 'X'.
      WHEN 'VBELN_VL'.
        <fs_catalogo>-col_pos = 14.
        <fs_catalogo>-hotspot = 'X'.
      WHEN 'TKNUM'.
        <fs_catalogo>-col_pos = 15.
        <fs_catalogo>-hotspot = 'X'.
      WHEN OTHERS.
        <fs_catalogo>-col_pos = 99.
    ENDCASE.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_PRE_LLENAR_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_pre_llenar_datos.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  F_LLENAR_DATOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_llenar_datos TABLES tp_alv TYPE tt_lin_alv_patron USING vp_dynpro.
  DATA: ls_alv         TYPE zst_sdle_zrsdle0002_alv,
        tl_transportes TYPE ztt_sdle_transp_cab.
  DATA(fl_monitorexp_dpc_imp) = NEW zsscl_sdle_monitorexp_dpc_imp( ).
  CASE vp_dynpro.
    WHEN gc_dynpro_main.


    WHEN gc_dynpro_zlog.
      DATA: lr_ntra   TYPE efg_tab_ranges,
            lr_mblnr  TYPE efg_tab_ranges,
            lr_mjahr  TYPE efg_tab_ranges,
            lr_vbeln  TYPE efg_tab_ranges,
            lr_posnr  TYPE efg_tab_ranges,
            lr_vbeln2 TYPE efg_tab_ranges,
            lr_tknum  TYPE efg_tab_ranges,
            lr_erdat  TYPE efg_tab_ranges,
            lr_responsable type efg_tab_ranges.

      lr_ntra = s_ntra[].
      lr_mblnr = s_mblnr[].
      lr_mjahr =  s_mjahr[].
      lr_vbeln = s_vbeln[].
      lr_posnr = s_posnr[].
      lr_vbeln2 = s_vbeln2[].
      lr_tknum = s_tknum[].
      lr_erdat = s_erdat[].
      lr_responsable = s_resp[].


      TRY.
          DATA(lt_datos_monitor) =  fl_monitorexp_dpc_imp->monitorlog_getlist(
                lp_r_tknum = lr_tknum
                lp_r_ntra = lr_ntra
                lp_r_mblnr = lr_mblnr
                lp_r_mjahr = lr_mjahr
                lp_r_vbeln = lr_vbeln
                lp_r_posnr = lr_posnr
                lp_r_vbeln2 = lr_vbeln2
                lp_r_erdat = lr_erdat
                lp_r_resp = lr_responsable
           ).
        CATCH /iwbep/cx_mgw_busi_exception.
          CLEAR lt_datos_monitor.
      ENDTRY.
      SORT lt_datos_monitor BY numtransporte posicion paso.
      LOOP AT lt_datos_monitor ASSIGNING FIELD-SYMBOL(<fs_datos>).
        MOVE-CORRESPONDING <fs_datos> TO ls_alv.

        IF ls_alv-estado = 1.
          ls_alv-estado_icon = '@5B@'.
        ELSE.
          ls_alv-estado_icon = '@5C@'.
        ENDIF.

        PERFORM f_append_dato  TABLES   tp_alv  USING ls_alv.
      ENDLOOP.
  ENDCASE.

ENDFORM.


MODULE c_ficha_active_tab_set OUTPUT.
  c_ficha-activetab = g_c_ficha-pressed_tab.
  CASE g_c_ficha-pressed_tab.
    WHEN c_c_ficha-tab1.
      g_c_ficha-subscreen = gc_dynpro_zlog.
    WHEN OTHERS.
  ENDCASE.
ENDMODULE.

MODULE c_ficha_active_tab_get INPUT.
  okcode = sy-ucomm.
  CASE okcode.
    WHEN c_c_ficha-tab1.
      g_c_ficha-pressed_tab = c_c_ficha-tab1.
    WHEN OTHERS.
  ENDCASE.


ENDMODULE.
*&---------------------------------------------------------------------*
*&      Form  f_handle_double_click
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_handle_double_click
        USING lp_dynpro e_row e_column ls_fila.
  "Desde pantalla de detalle
  DATA: wa_alv  LIKE LINE OF it_alv.

  READ TABLE tg_config_subscreen ASSIGNING FIELD-SYMBOL(<fs_config_subscreen>) WITH KEY subscreen = lp_dynpro.
  CHECK sy-subrc = 0.

  READ TABLE <fs_config_subscreen>-tabla INTO wa_alv INDEX e_row.
  IF sy-subrc = 0.
    SUBMIT zrssdle0003 WITH p_ntra = wa_alv-numtransporte AND RETURN.
***    CLEAR it_alv.
***    PERFORM f_llenar_datos TABLES it_alv USING '0100'.
***    r_alv->refresh_table_display( is_stable = wg_is_stable ).
  ENDIF.

ENDFORM.
FORM f_handle_hotspot_click
      USING vp_dynpro e_row e_column wp_alv TYPE st_lin_alv_patron.

  CASE e_column.
    WHEN 'MBLNR'.
*      SET PARAMETER ID 'MBN' FIELD wp_alv-mblnr.
*      SET PARAMETER ID 'MJA' FIELD wp_alv-mjahr.
*      CALL TRANSACTION 'MB03' AND SKIP FIRST SCREEN.
      IF wp_alv-mblnr IS NOT INITIAL.
        CALL FUNCTION 'MIGO_DIALOG'
          EXPORTING
*           I_ACTION            = 'A04'
*           I_REFDOC            = 'R02'
*           I_NOTREE            = 'X'
*           I_NO_AUTH_CHECK     =
*           I_SKIP_FIRST_SCREEN = 'X'
*           I_DEADEND           = 'X'
*           I_OKCODE            = 'OK_GO'
*           I_LEAVE_AFTER_POST  =
*           I_NEW_ROLLAREA      = 'X'
*           I_SYTCODE           =
*           I_EBELN             =
*           I_EBELP             =
            i_mblnr             = wp_alv-mblnr
            i_mjahr             = wp_alv-mjahr
*           I_ZEILE             =
*           I_TRANSPORT         =
*           I_ORDER_NUMBER      =
*           I_ORDER_ITEM        =
*           I_TRANSPORT_MEANS   =
*           I_TRANSPORTIDENT    =
*           I_INBOUND_DELIV     =
*           I_OUTBOUND_DELIV    =
*           I_RESERVATION_NUMB  =
*           I_RESERVATION_ITEM  =
*           EXT                 =
*           I_MOVE_TYPE         =
*           I_SPEC_STOCK        =
*           I_PSTNG_DATE        =
*           I_DOC_DATE          =
*           I_REF_DOC_NO        =
*           I_HEADER_TXT        =
          EXCEPTIONS
            illegal_combination = 1
            OTHERS              = 2.
        IF sy-subrc <> 0.

        ENDIF.
      ENDIF.


    WHEN 'VBELN'.
      IF wp_alv-vbeln IS NOT INITIAL.
        SET PARAMETER ID 'AUN' FIELD wp_alv-vbeln.
        CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN .
      ENDIF.
    WHEN 'VBELN_VL'.
      IF wp_alv-vbeln_vl IS NOT INITIAL.
        SET PARAMETER ID 'VL' FIELD wp_alv-vbeln_vl.
        CALL TRANSACTION 'VL03N' AND SKIP FIRST SCREEN .
      ENDIF.
    WHEN 'TKNUM'.
      IF wp_alv-tknum IS NOT INITIAL.
        SET PARAMETER ID 'TNR' FIELD wp_alv-tknum.
        CALL TRANSACTION 'VT03N' AND SKIP FIRST SCREEN .
      ENDIF.
    WHEN 'EBELN'.
      IF wp_alv-ebeln IS NOT INITIAL.
        SET PARAMETER ID 'BES' FIELD wp_alv-ebeln.
        CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN .
      ENDIF.
  ENDCASE.
ENDFORM.
