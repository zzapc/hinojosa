*&---------------------------------------------------------------------*
*&  Include           SAPMZSDCOM_LIQ_O01
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.

* Status y título
  SET PF-STATUS 'DYN100'.
  SET TITLEBAR 'DYN100'.

ENDMODULE.                 " STATUS_0100  OUTPUT


*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.

* Preparamos la botonera
  PERFORM prepare_status_200.

* Status y título
  SET PF-STATUS 'DYN200' EXCLUDING gti_excbot.
  SET TITLEBAR 'DYN100'.

ENDMODULE.                 " STATUS_0200  OUTPUT


*&---------------------------------------------------------------------*
*&      Module  STATUS_1000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_1000 OUTPUT.

* Ponemos campos modificables/visualizables dependiendo del modo
  LOOP AT SCREEN.
    IF screen-group1 = 'MOD'.
      IF gv_modo = 'V'.
        screen-input = '0'.
      ELSE.
        screen-input = '1'.
      ENDIF.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.

ENDMODULE.                 " STATUS_1000  OUTPUT


*&---------------------------------------------------------------------*
*&      Module  STATUS_3000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_3000 OUTPUT.

* Creamos los objetos la primera vez
  IF g_cont_com IS INITIAL.
*   Creamos el container principal
    CREATE OBJECT g_cont_com
      EXPORTING
        container_name = gc_cont_com.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid_com
      EXPORTING
        i_parent = g_cont_com.

*   Eventos
    CREATE OBJECT g_application.
    SET HANDLER g_application->handle_hotspot_click FOR g_grid_com.

*   Mostramos el ALV
    PERFORM mostrar_alv_com.
* Refrescamos el ALV
  ELSE.
    PERFORM refrescar_alv_com.
  ENDIF.

ENDMODULE.                 " STATUS_3000  OUTPUT


*&---------------------------------------------------------------------*
*&      Module  STATUS_4000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_4000 OUTPUT.

* Creamos los objetos la primera vez
  IF g_cont_fac IS INITIAL.
*   Creamos el container principal
    CREATE OBJECT g_cont_fac
      EXPORTING
        container_name = gc_cont_fac.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid_fac
      EXPORTING
        i_parent = g_cont_fac.

*   Eventos
    IF g_application IS INITIAL.
      CREATE OBJECT g_application.
    ENDIF.
    SET HANDLER g_application->handle_hotspot_click         FOR g_grid_fac.
    SET HANDLER g_application->handle_data_changed          FOR g_grid_fac.
    SET HANDLER g_application->handle_data_changed_finished FOR g_grid_fac.
*   Cuando es editable -> para que escuche los eventos: ENTER...
    CALL METHOD g_grid_fac->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.
*   Eventos para la barra de herramientas
    SET HANDLER g_application->handle_user_command          FOR g_grid_fac.
    SET HANDLER g_application->handle_toolbar               FOR g_grid_fac.
*   Para que tenga en cuenta la nueva barra de herramientas
*    CALL METHOD g_grid_fac->set_toolbar_interactive.

*   Mostramos el ALV
    PERFORM mostrar_alv_fac.

* Refrescamos el ALV y el modo de edición
  ELSE.
*   EDITABLE o NO
    IF gv_modo = 'V'.
      CALL METHOD g_grid_fac->set_ready_for_input
        EXPORTING
          i_ready_for_input = 0.
    ELSE.
      CALL METHOD g_grid_fac->set_ready_for_input
        EXPORTING
          i_ready_for_input = 1.
    ENDIF.
*   Refrescar
    PERFORM refrescar_alv_fac.
  ENDIF.

  IF gs_com_aux IS NOT INITIAL.
    IF gs_com_aux-zstat_pos_liq = 'X'.
      CALL METHOD g_grid_fac->set_ready_for_input
        EXPORTING
          i_ready_for_input = 0.
    ENDIF.
  ENDIF.

ENDMODULE.                 " STATUS_4000  OUTPUT
