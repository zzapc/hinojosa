FORM DATEN_KOPIEREN_901.
*{   INSERT         HEDK918430                                        1
*
data: kvgr3 like vbak-kvgr3.


* Additional split criteria
  DATA: BEGIN OF ZUK,
          kvgr3 TYPE kvgr3,
          VTWEG LIKE VBAK-VTWEG,
          SPART LIKE VBAK-SPART,
          var(40) type c,
        END OF ZUK.

  zuk-kvgr3 = vbak-kvgr3.
  ZUK-SPART = VBAK-SPART.
  ZUK-VTWEG = VBAK-VTWEG.


* seidor para la 2001 se importa la vía de pago del maestro

data: zwels like knb1-zwels.
data: zterm like knvv-zterm.

*** INI MOD STIRADO 19.12.2023
*if vbrk-vkorg eq '2001' or vbrk-vkorg eq '2000'.
SELECT SINGLE * FROM zssdt034_socorg INTO @DATA(ls_aux) WHERE vkorg EQ @vbrk-vkorg.
IF sy-subrc EQ 0.
  SELECT SINGLE * FROM zssdt034_socorg INTO @DATA(ls_socorg) WHERE vkorg EQ @vbrk-vkorg.
*** FIN MOD STIRADO 19.12.2023

* DF 28112022 se solicita NO particionar por region

  VBRK-REGIO = ''.

** DF

  select single ZWELS into ZWELS
    from knb1
    where kunnr eq vbrk-kunrg
    and bukrs eq ls_socorg-bukrs. "'2000'. " MOD STIRADO 19.12.2023
  if zwels ne ''.
    vbrk-ZLSCH = zwels.
  endif.

  select single zterm into zterm
    from knvv
    where vkorg eq vbrk-vkorg and
    kunnr eq vbrk-kunrg.

  if zterm ne ''.
    vbrk-Zterm = zterm.
  endif.

endif.
*** INI MOD STIRADO 19.12.2023
*if vbrk-vkorg eq '2001' or vbrk-vkorg eq '2000'.
SELECT SINGLE * FROM zssdt034_socorg INTO @ls_aux WHERE vkorg EQ @vbrk-vkorg.
IF sy-subrc EQ 0.
*** FIN MOD STIRADO 19.12.2023
select single kvgr3 into kvgr3
  from knvv
  where kunnr eq vbrk-kunag
  and vkorg eq vbrk-vkorg.
  zuk-kvgr3 = kvgr3.
endif.

CLEAR vbrk-regio.

  CASE zuk-kvgr3.
    WHEN 'C01'.
      zuk-var = vbak-kunnr.
*ASB 82227 - PARTICION DE FACTURAS AUTOFACTURA CONSIGNA
      vbrk-regio = ''.
    WHEN 'C02'.

      If likp is not INITIAL.
        "busqueda del interlocutor del pedido

        SELECT SINGLE b~kunnr INTO zuk-var
          from vbak as a
          INNER JOIN vbpa as b on a~vbeln = b~vbeln
          WHERE a~vbeln = lips-vgbel
            AND b~parvw = 'WE'.

      else.
        " Cogemos el del pedido
       SELECT SINGLE b~kunnr INTO zuk-var
          from vbak as a
          INNER JOIN vbpa as b on a~vbeln = b~vbeln
          WHERE a~vbeln = vbak-vbeln
            AND b~parvw = 'WE'.
*        zuk-var = vbak-kunnr.

      endif.

      " En posiciones de Pallet, Si NO tenemos documento origen, obtenemos el destinatario de la entrega
      IF zuk-var is INITIAL.
        zuk-var = LIKP-KUNNR.
      endif.

    WHEN 'C03'.
      zuk-var = vbak-vbeln.
    WHEN 'C04'.
      zuk-var = likp-vbeln.
    WHEN 'C05'.

      zuk-var = vbak-bstnk.
      vbrk-BSTNK_VF = vbak-bstnk.

      "ADD JVM - 08/08/2023 - GAPSD026 Partición de Facturas por Nº.Pedido cliente y Destinatario
      WHEN 'C06'.
        "Será necesario implementar una ampliación de la rutina de copia RV60C901.
        "Para el caso C06,
        "Obtener Nº pedido de cliente como en el caso C05.
        "Determinar si se corresponde de una posición de servicio o una posición de cajas.
        "Posición de servicio à Posición facturable es de pedido.
        "VBRP-VGTYP = C
        "Posición de cajas à Posición facturable es de entrega.
        "VBRP-VGTYP = J
        "ZUK-VAR = Concatenado (PED y Nº pedido cliente) para posiciones de servicio.
        "ZUK-VAR = Concatenado (ENT y Nº pedido cliente) para posiciones de cajas.
          "INI JVM . 19/10/2023 - Será la concatenación del caso 5 y el 2
*        DATA lv_vbeln TYPE vbeln.
*        lv_vbeln = vbak-vbeln.
*        call FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*          EXPORTING
*            input  = lv_vbeln
*          IMPORTING
*            output = lv_vbeln
*          .
*        IF vbrp-vgtyp eq 'J'.
*          zuk-var = 'ENT' && lv_vbeln.
*        ELSEif vbrp-vgtyp eq 'C'.
*          zuk-var = 'PED' && lv_vbeln.
*        ENDIF.
        DATA lv_var_aux like zuk-var.
        CLEAr lv_var_Aux.
        If likp is not INITIAL.
        "busqueda del interlocutor del pedido
          SELECT SINGLE b~kunnr INTO lv_var_Aux
            from vbak as a
            INNER JOIN vbpa as b on a~vbeln = b~vbeln
            WHERE a~vbeln = lips-vgbel
              AND b~parvw = 'WE'.

        "DFS 20102023 Ajusto para caso posiciones pallet
          IF SY-SUBRC <> 0.

            lv_var_Aux = LIKP-KUNNR.

          ENDIF.

        else.
        " Cogemos el del pedido
          SELECT SINGLE b~kunnr INTO lv_var_Aux
            from vbak as a
            INNER JOIN vbpa as b on a~vbeln = b~vbeln
            WHERE a~vbeln = vbak-vbeln
              AND b~parvw = 'WE'.
*        zuk-var = vbak-kunnr.
      endif.

      zuk-var = vbak-bstnk && lv_var_Aux.
      vbrk-BSTNK_VF = vbak-bstnk.

        "FIN JVM . 19/10/2023 - Será la concatenación del caso 5 y el 2
      "FIN ADD JVM - 08/08/2023 - GAPSD026 Partición de Facturas por Nº.Pedido cliente y Destinatario

*** INI INS STIRADO 19.12.2023
    WHEN 'C07'.
      zuk-var = vbak-bstnk && vbrp-vgtyp.
*** FIN INS STIRADO 19.12.2023
    WHEN ''.
**      zuk-var = ''.

  "INI JVM . 19/10/2023 - Sacamos este punto del case
*      vbrk-XBLNR = vbak-xblnr.
*      vbrk-ZUONR = vbak-zuonr.
"FIN JVM . 19/10/2023 - Sacamos este punto del case
    WHEN OTHERS.

  ENDCASE.

  "INI JVM . 19/10/2023 - Sacamos este punto del case
      vbrk-XBLNR = vbak-xblnr.
      vbrk-ZUONR = vbak-zuonr.
"FIN JVM . 19/10/2023 - Sacamos este punto del case

  VBRK-ZUKRI = ZUK.




*}   INSERT
ENDFORM.
