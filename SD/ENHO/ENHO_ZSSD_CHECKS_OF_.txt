<?xml version="1.0" encoding="utf-8"?> <ENHO enhancement_id="ZSSD_CHECKS_OF" shorttext="Chequeos para ordenes de fabricación" tooltype_id="HOOK_IMPL" orig_object="R3TR-SAPMV45A-PROG-SAPMV45A">  <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0
">   <asx:values>    <IMPLS>     <ENH_HOOK_IMPL>      <SPOTNAME/>      <PROGRAMNAME>SAPMV45A</PROGRAMNAME>      <EXTID>1</EXTID>      <ID>1</ID>      <OVERWRITE/>      <METHOD/>      <ENHMODE>D</ENHMODE>      <FULL_NAME>\PR:SAPMV45A\FO:USEREXIT_SAVE_DOCUM
ENT\SE:BEGIN\EI</FULL_NAME>      <SOURCE>       <item/>       <item>CONSTANTS c_fecha_corte TYPE datum VALUE &apos;20221127&apos;.</item>       <item/>       <item>DATA(lt_xvbap) = xvbap[].</item>       <item>DATA(lt_yvbap) = yvbap[].</item>       <item>D
ATA(lt_xvbep) = xvbep[].</item>       <item>DATA(lt_yvbep) = yvbep[].</item>       <item/>       <item>loop at lt_xvbap ASSIGNING FIELD-SYMBOL(&lt;del&gt;) WHERE erdat &gt;= c_fecha_corte.</item>       <item>delete lt_yvbap WHERE posnr = &lt;del&gt;-posnr
.</item>       <item>delete lt_xvbep WHERE posnr = &lt;del&gt;-posnr.</item>       <item>delete lt_yvbep WHERE posnr = &lt;del&gt;-posnr.</item>       <item>ENDLOOP.</item>       <item>delete lt_xvbap WHERE erdat &gt;= c_fecha_corte.</item>       <item/>
      <item>DATA(lo_of) = NEW zssd_utils( ).</item>       <item/>       <item>lo_of-&gt;checks_order_prodution(</item>       <item>EXPORTING</item>       <item>i_xvbap = lt_xvbap[]</item>       <item>i_yvbap = lt_yvbap[]</item>       <item>i_xvbep = lt_xv
bep[]</item>       <item>i_yvbep = lt_yvbep[]</item>       <item>).</item>       <item/>       <item>LOOP AT xvbap INTO DATA(wa_bap) WHERE ( ( abgru eq space AND ( updkz eq &apos;I&apos; ) ) or ( abgru eq space AND updkz eq &apos;U&apos; ) ) AND ( bedae e
q &apos;ZZZ&apos;</item>       <item>or bedae eq &apos;ZPR&apos; OR BEDAE EQ &apos;ZRS&apos; ).</item>       <item>READ TABLE yvbap ASSIGNING FIELD-SYMBOL(&lt;yvbap&gt;) with KEY posnr = wa_bap-posnr.</item>       <item>IF sy-subrc &lt;&gt; 0.</item>
  <item>DATA(crear_of) = NEW zssd_utils( ).</item>       <item>crear_of-&gt;creation_prod_ord(</item>       <item>EXPORTING</item>       <item>i_vbeln = vbak-vbeln</item>       <item>i_posnr = wa_bap-posnr</item>       <item>).</item>       <item>ELSE.</i
tem>       <item>IF ( wa_bap-kwmeng &lt;&gt; yvbap-kwmeng AND wa_bap-updkz eq &apos;U&apos; ) or</item>       <item>( wa_bap-bedae &lt;&gt; yvbap-bedae AND yvbap-bedae &lt;&gt; &apos;ZZZ&apos; AND yvbap-bedae &lt;&gt; &apos;ZPR&apos; AND yvbap-BEDAE &lt;&
gt; &apos;ZRS&apos; AND wa_bap-updkz eq &apos;U&apos; ).</item>       <item>DATA(lv_envio) = &apos;X&apos;.</item>       <item>ENDIF.</item>       <item>LOOP AT xvbep ASSIGNING FIELD-SYMBOL(&lt;xvbep&gt;) WHERE posnr = wa_bap-posnr</item>       <item>AND
( bmeng &gt; 0 OR ( bmeng = 0 AND etenr = 1 ) ).</item>       <item>READ TABLE yvbep WITH KEY posnr = &lt;xvbep&gt;-posnr ASSIGNING FIELD-SYMBOL(&lt;yvbep&gt;).</item>       <item>IF sy-subrc = 0.</item>       <item>CHECK &lt;xvbep&gt;-updkz = &apos;U&apo
s; AND &lt;yvbep&gt;-updkz = space AND &lt;xvbep&gt;-mbdat &lt;&gt; &lt;yvbep&gt;-mbdat.</item>       <item>lv_envio = &apos;X&apos;.</item>       <item>exit.</item>       <item>endif.</item>       <item>endloop.</item>       <item/>       <item>* JMS SEI
DOR SE AÑADE LA GENERAC DEL SEMI EN LAS TX DE DESBLOQ DE RIESGO</item>       <item>if sy-tcode(3) EQ &apos;VKM&apos;.</item>       <item>LOOP AT xvbep ASSIGNING FIELD-SYMBOL(&lt;avbep&gt;) WHERE posnr = wa_bap-posnr</item>       <item>AND ( bmeng &gt; 0 O
R ( bmeng = 0 AND etenr = 1 ) ).</item>       <item>READ TABLE xvbep WITH KEY posnr = &lt;avbep&gt;-posnr ASSIGNING FIELD-SYMBOL(&lt;bvbep&gt;).</item>       <item>IF sy-subrc = 0.</item>       <item>*           CHECK &lt;avbep&gt;-updkz = &apos;I&apos; A
ND &lt;bvbep&gt;-updkz = space .</item>       <item>CHECK &lt;avbep&gt;-updkz = &apos;I&apos; or &lt;avbep&gt;-updkz eq &apos;U&apos;.</item>       <item>lv_envio = &apos;X&apos;.</item>       <item>exit.</item>       <item>endif.</item>       <item>endlo
op.</item>       <item/>       <item/>       <item>ENDIF.</item>       <item>* FIN RIESGO</item>       <item>ENDIF.</item>       <item>IF lv_envio = &apos;X&apos;.</item>       <item>crear_of = NEW zssd_utils( ).</item>       <item>crear_of-&gt;creation_p
rod_ord(</item>       <item>EXPORTING</item>       <item>i_vbeln = vbak-vbeln</item>       <item>i_posnr = wa_bap-posnr</item>       <item>).</item>       <item>ENDIF.</item>       <item>CLEAR lv_envio.</item>       <item>ENDLOOP.</item>       <item/>
   <item>LOOP AT xvbap INTO wa_bap WHERE abgru &lt;&gt; space AND updkz eq &apos;U&apos;.</item>       <item>IF crear_of IS INITIAL.</item>       <item>crear_of = new zssd_utils( ).</item>       <item>ENDIF.</item>       <item>crear_of-&gt;_at_line_reject
ion(</item>       <item>EXPORTING</item>       <item>i_vbeln =  wa_bap-vbeln</item>       <item>i_posnr =  wa_bap-posnr</item>       <item>).</item>       <item>ENDLOOP.</item>       <item/>       <item>&quot;JVM - INS 29/04/2024 modificar fecha de inicio
 y fin of</item>       <item>LOOP AT yvbep ASSIGNING FIELD-SYMBOL(&lt;bep&gt;).</item>       <item>READ TABLE xvbep with KEY VBELN = &lt;bep&gt;-vbeln POSNR = &lt;bep&gt;-posnr ETENR = &lt;bep&gt;-etenr UPDKZ = &apos;U&apos; ASSIGNING FIELD-SYMBOL(&lt;new
date&gt;).</item>       <item>IF sy-subrc = 0.</item>       <item>IF &lt;bep&gt;-mbdat &lt;&gt; &lt;newdate&gt;-mbdat.</item>       <item/>       <item>ENDIF.</item>       <item>ENDIF.</item>       <item>ENDLOOP.</item>       <item>&quot;FJVM</item>
 <item/>      </SOURCE>      <PARENT_FULL_NAME/>     </ENH_HOOK_IMPL>    </IMPLS>   </asx:values>  </asx:abap> </ENHO>
