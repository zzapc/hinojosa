
class ZHCL_EXITS_OFERTAS definition
  public
  inheriting from ZCL_AP_EXITS
  final
  create public .

public section.

  types:
    BEGIN OF t_vbap_conf,
             posnr         TYPE vbap-posnr,
             imp_cliche    TYPE yhp_svcs_tlcpt,
             amort_cliche  TYPE yhp_svcs_amort,
             imp_troquel   TYPE yhp_svcs_tlcpt,
             amort_troquel TYPE yhp_svcs_amort,
           END OF t_vbap_conf .
  types:
    tt_vbap_conf TYPE STANDARD TABLE OF t_vbap_conf WITH KEY posnr .

  data I_VBAP_CONF type TT_VBAP_CONF .

  methods GET_DATOS_CONFIGURADOR
    importing
      !XVBAP type VA_VBAPVB_T
    changing
      !VBAP type VBAP .
protected section.
private section.
endclass. "ZHCL_EXITS_OFERTAS definition
class ZHCL_EXITS_OFERTAS implementation.
  METHOD get_datos_configurador.


    CHECK activa( ).

    TRY.
        CHECK vbap-cuobj IS NOT INITIAL.

***     Get GUID of Configuration Instance
        TRY.
            DATA(lf_gvcin_pos) = /vcxi/cl_vkcr_gateway=>get_gvcin_by_cuobj( if_cuobj = vbap-cuobj ).
          CATCH cx_root INTO DATA(o_root).
            RETURN.
        ENDTRY.

***--------------------------------------------------------------------------------------
***     Get Instance (to allow custom-specific redefinitions)
        TRY.
            DATA(ls_cmprk) = /vcxi/cl_vkcr_gateway=>get_cmprk( if_gvcin = lf_gvcin_pos ).
          CATCH cx_root INTO o_root.
            RETURN.
        ENDTRY.

***     Get relevant Configuration for Extraction

*** Get Root Configuration based on Model
        TRY.
            DATA(lt_vcmdl) = /vcxi/cl_vkcr_gateway=>get_model( if_gvcin = lf_gvcin_pos ).
          CATCH cx_root INTO o_root.
            RETURN.
        ENDTRY.
        DATA(lf_gvcin_cnf) = VALUE #( lt_vcmdl[ parent = space ]-gvcin OPTIONAL ).

        CHECK lf_gvcin_cnf IS NOT INITIAL.

        DATA cliche  TYPE yhp_smd_mbq_s_tool_print_ve.

        NEW zhcl_ai_core( )->get_datos_ve( EXPORTING cuobj = vbap-cuobj
                                                     instancia = lf_gvcin_cnf
                                                     id = 'CSTEP_PRINT'
                                                     value_extractor = 'ZHP_TOOLINFO_PRINT'
                                           IMPORTING datos = cliche
                                                     message = DATA(l_msg) ).
        IF l_msg IS INITIAL and
          ( cliche-tlcpt ne 0 or cliche-amort ne 0 ). "Solo si hay algún valor
          vbap-zzimporte_cliche = cliche-tlcpt.
          __add_lista vbap-fmfgus_key 'CLICHE'. "Reutilizamos este campo no usado de la VBAP para indicar que tiene valor
          vbap-zzsupanm2 = cliche-amort.
          READ TABLE i_vbap_conf ASSIGNING FIELD-SYMBOL(<conf>) WITH KEY posnr = vbap-posnr.
          IF sy-subrc = 0.
            <conf>-imp_cliche = cliche-itcst.
            <conf>-amort_cliche = cliche-amort.
          ELSE.
            APPEND VALUE #( posnr = vbap-posnr
                            imp_cliche = cliche-tlcpt
                            amort_cliche = cliche-amort ) TO i_vbap_conf.
          ENDIF.
        ELSE.
          zcl_ap_lista=>remove( EXPORTING valor = 'CLICHE' CHANGING lista = vbap-fmfgus_key ).
        ENDIF.

        DATA troquel  TYPE yhp_smd_mbq_s_tool_dcut_ve.

        NEW zhcl_ai_core( )->get_datos_ve( EXPORTING cuobj = vbap-cuobj
                                                     instancia = lf_gvcin_cnf
                                                     id = 'CSTEP_DCUT'
                                                     value_extractor = 'ZHP_TOOLINFO_DCUT'
                                           IMPORTING datos = troquel
                                                     message = l_msg ).
        IF l_msg IS INITIAL and
          ( troquel-tlcpt ne 0 or troquel-amort ne 0 ). "Solo si hay algún valor
          vbap-zzimporte_troquel = troquel-tlcpt.
          __add_lista vbap-fmfgus_key 'TROQUEL'.
* Si tiene amortización en troquelado y en impresión, cogemos el de impresión siempre
          IF troquel-amort ne 0 and cliche-amort is initial.
            vbap-zzsupanm2 = troquel-amort.
          ENDIF.
          READ TABLE i_vbap_conf ASSIGNING <conf> WITH KEY posnr = vbap-posnr.
          IF sy-subrc = 0.
            <conf>-imp_troquel = troquel-itcst.
            <conf>-amort_troquel = troquel-amort.
          ELSE.
            APPEND VALUE #( posnr = vbap-posnr
                            imp_cliche = cliche-itcst
                            amort_cliche = cliche-amort ) TO i_vbap_conf.
          ENDIF.
        ELSE.
          zcl_ap_lista=>remove( EXPORTING valor = 'TROQUEL' CHANGING lista = vbap-fmfgus_key ).
        ENDIF.
    ENDTRY.

  ENDMETHOD.
