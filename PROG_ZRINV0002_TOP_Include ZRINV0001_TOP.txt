*&---------------------------------------------------------------------*
*& Include ZRINV0002_TOP                                     Modulpool        ZRINV0002
*&
*&---------------------------------------------------------------------*

TYPE-POOLS: slis, icon.

TABLES: ztinv2_ci, ztinv2_pi, ztinv2_sp, zsinv0002_grid,
        mchb, t001l, mara, sscrfields, mard.
DATA: modo_bi        VALUE 'N'.
*      zsinv0002_grid TYPE zsinv0002_grid.

*------------------------------------------------------------------------
* Globales
*------------------------------------------------------------------------
DATA: t_mtart     TYPE TABLE OF mtart WITH HEADER LINE,
      t_matnr     TYPE TABLE OF matnr WITH HEADER LINE,
      return      TYPE bapiret2,
      g_extnumber TYPE balnrext.

TYPES: tys_matnr    TYPE RANGE OF mara-matnr,
       tys_mtart    TYPE RANGE OF mara-mtart,
       ty_matnr     TYPE TABLE OF mara-matnr,
       ty_mtart     TYPE TABLE OF mara-mtart,
       ty_ztinv2_pi TYPE TABLE OF ztinv2_pi.

TYPES BEGIN OF ty_mostrar.
        INCLUDE STRUCTURE zsinv0002_grid.
TYPES color_cell TYPE lvc_t_scol.
TYPES END OF ty_mostrar.

TYPES BEGIN OF ty_tabix.
TYPES index TYPE sytabix.
TYPES END OF ty_tabix.

DATA: t_index TYPE TABLE OF ty_tabix WITH HEADER LINE.

*------------------------------------------------------------------------
* DYNPRO 0002
*------------------------------------------------------------------------
CONSTANTS: c_werks_3000 TYPE werks_d VALUE '3000'.
CONSTANTS: c_zpap TYPE mtart VALUE 'ZPAP',
           c_zrec TYPE mtart VALUE 'ZREC',
           c_si   VALUE 'S',
           c_no   VALUE 'N'.

*------------------------------------------------------------------------
* DYNPRO 0100
*------------------------------------------------------------------------
CONSTANTS: gc_container TYPE scrfname  VALUE 'CUSTOM_CONTAINER'.

DATA: g_custom_container TYPE REF TO cl_gui_custom_container,
      g_grid             TYPE REF TO cl_gui_alv_grid,
      gv_okcode          TYPE        sy-ucomm.

DATA: gti_mostrar TYPE STANDARD TABLE OF ty_mostrar,
      g_mostrar   TYPE ty_mostrar.


* pintar alv grid.
DATA: t_layout       TYPE lvc_s_layo,
      gti_toolbar_ex TYPE ui_functions,
      gs_toolbar     TYPE stb_button,
      gti_fieldcat   TYPE lvc_t_fcat.


* Clase para los eventos
CLASS lcl_application DEFINITION DEFERRED.
DATA: g_application     TYPE REF TO lcl_application,
      g_application_200 TYPE REF TO lcl_application.


*------------------------------------------------------------------------
* DYNPRO 0200
*------------------------------------------------------------------------
CONSTANTS: gc_container_200 TYPE scrfname  VALUE 'CUSTOM_CONTAINER_200'.

DATA: g_custom_container_200 TYPE REF TO cl_gui_custom_container,
      g_grid_200             TYPE REF TO cl_gui_alv_grid,
      gv_okcode2             TYPE        sy-ucomm.

* pintar alv grid.
DATA: t_layout_200       TYPE lvc_s_layo,
      gti_toolbar_ex_200 TYPE ui_functions,
      gs_toolbar_200     TYPE stb_button,
      gti_fieldcat_200   TYPE lvc_t_fcat.

** Clase para los eventos
*class lcl_application_200 definition deferred.
*data  g_application_200 type ref to lcl_application_200.

DATA: wa_ci    TYPE ztinv2_ci,
      t_pi_new TYPE STANDARD TABLE OF ztinv2_pi.

TYPES: BEGIN OF tipo_pos.
        INCLUDE TYPE ztinv2_pi.
TYPES: maktx TYPE maktx.
TYPES: casuistica_txt TYPE val_text.
TYPES: read           TYPE flag.
TYPES: line_color(4).
TYPES: color_cell TYPE lvc_t_scol.
TYPES: END OF tipo_pos.

TYPES: tyt_tipo_pos TYPE TABLE OF tipo_pos.

TYPES: BEGIN OF ty_material,
         matnr TYPE matnr,
         meins TYPE meins,
       END OF ty_material.

TYPES: tty_material TYPE STANDARD TABLE OF ty_material.

TYPES: BEGIN OF ty_status,
         domvalue_l TYPE domvalue_l,
         ddtext     TYPE val_text,
         index      LIKE sy-tabix,
         popup      TYPE xfeld,
       END OF ty_status.

TYPES: tty_status TYPE STANDARD TABLE OF ty_status.


DATA: gti_pi TYPE TABLE OF tipo_pos,
      wa_pi  TYPE tipo_pos.

DATA: t_dominio_status     TYPE STANDARD TABLE OF dd07v,
      t_dominio_casuistica TYPE STANDARD TABLE OF dd07v,
      wa_dominio           TYPE dd07v.

* Variables globales para listado HOTSPOT:
DATA: gv_imp_calc TYPE verpr,
      gv_pant_ini TYPE xflag.

*------------------------------------------------------------------------
* DYNPRO 0300: CREAR INVENTARIO
*------------------------------------------------------------------------
DATA: gv_werks   TYPE werks_d,
      gv_lgort   TYPE lgort_d,
      gv_papel   TYPE xflag,
      gv_recorte TYPE xflag,
*      gr_mtart   TYPE RANGE OF mtart,
      gv_okcode4 TYPE sy-ucomm.


*------------------------------------------------------------------------
* DYNPRO 0400: IMPORT INVENTARIO.
*------------------------------------------------------------------------
DATA: gv_file  TYPE eseftfront, " type rstxt-tdname,
      gv_error TYPE flag.

* EXPORTAR INVENTARIO
CONSTANTS: gv_ruta_exp TYPE rstxt-tdname VALUE 'C:\TEMP'.

DATA: index_rows       TYPE         lvc_t_row,
      lt_sel_rows      TYPE         lvc_t_roid,
      ls_selected_line LIKE LINE OF lt_sel_rows.

DATA: lv_error   TYPE xflag.
*      gv_okcode5 TYPE sy-ucomm.

*------------------------------------------------------------------------
* DYNPRO 0500: Selección múltiple para inventario
*------------------------------------------------------------------------
CONSTANTS: gc_container5 TYPE scrfname  VALUE 'CUSTOM_CONTAINER5'.

DATA: g_custom_container5 TYPE REF TO cl_gui_custom_container,
      g_grid5             TYPE REF TO cl_gui_alv_grid,
      gv_okcode5          TYPE        sy-ucomm.

DATA: g_application5 TYPE REF TO lcl_application.

DATA: gti_mostrar5 TYPE STANDARD TABLE OF zsinv0002_grid5,
      g_mostrar5   TYPE zsinv0002_grid5.
FIELD-SYMBOLS: <mostrar5> LIKE LINE OF gti_mostrar5.

* pintar alv grid.
DATA: t_layout5       TYPE lvc_s_layo,
      gti_toolbar_ex5 TYPE ui_functions,
      gs_toolbar5     TYPE stb_button,
      gti_fieldcat5   TYPE lvc_t_fcat.

*------------------------------------------------------------------------
* DYNPRO 1000: Entrar recuento inventario
*------------------------------------------------------------------------
DATA: name          TYPE vrm_id,
      list          TYPE vrm_values,
      value         LIKE LINE OF list,
      gv_docum      TYPE zdocinv,
      gv_docum_int  TYPE zdocinv,
      gv_okcode1000 TYPE sy-ucomm.

*------------------------------------------------------------------------
* DYNPRO 1001: Entrar recuento inventario
*------------------------------------------------------------------------
DATA: gv_okcode1001    TYPE sy-ucomm,
      gv_etiqueta      TYPE char40,
      gv_maktx         TYPE maktx,
      gv_lgobe         TYPE lgobe,
      gv_lgobe_new     TYPE lgobe,
      gv_name1         TYPE name1,
      gv_corregir      TYPE flag,
      gv_ubicacion     TYPE char18,
      gv_txt_ubicacion TYPE char30,
      gv_cantidad      TYPE zmenge_new.

DATA:   m_msgv1 TYPE  symsgv,
        m_msgv2 TYPE  symsgv,
        m_msgv3 TYPE  symsgv,
        m_msgv4 TYPE  symsgv.



DEFINE mensaje.

  m_msgv1 = &4.
  m_msgv2 = &5.
  m_msgv3 = &6.
  m_msgv4 = &7.

  CALL FUNCTION 'ZMM_INV_INSERTAR_LOG'
    EXPORTING
      docum = &8
      matnr = &9
      charg = &5
      msgty = &1
      msgid = &2
      msgno = &3
      msgv1 = m_msgv1
      msgv2 = m_msgv2
      msgv3 = m_msgv3
      msgv4 = m_msgv4.

END-OF-DEFINITION.
