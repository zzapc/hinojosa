
class YCL_IM_HP_CTS_REQUEST_CHEC definition
  public
  final
  create public .

public section.

  interfaces IF_EX_CTS_REQUEST_CHECK .
protected section.
private section.
endclass. "YCL_IM_HP_CTS_REQUEST_CHEC definition
class YCL_IM_HP_CTS_REQUEST_CHEC implementation.
  method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_ADD_OBJECTS.
  endmethod.
  method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_CHANGING_OWNER.
  endmethod.
  method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_CREATION.

    check SY-UNAME eq 'PARTNERSAP2' or
          SY-UNAME eq 'PARTNERSAP3' or
          SY-UNAME eq 'PARTNERSAP6' or
          SY-UNAME eq 'PARTNERSAP7' .

    get parameter id 'YHP_CHECK_TR_DESC' field data(LF_CHECK).
    check LF_CHECK is not initial.

    case SY-UNAME.
      when 'PARTNERSAP2'.
        if TEXT(3) ne 'NBL'.
          data(LV_CANCEL) = ABAP_TRUE.
        endif.
      when 'PARTNERSAP3'.
        if TEXT(3) ne 'AKR' and
           TEXT(3) ne 'ASD'.
          LV_CANCEL = ABAP_TRUE.
        endif.
      when 'PARTNERSAP6'.
        if TEXT(3) ne 'ASD' and
           TEXT(3) ne 'JBL' and
           TEXT(3) ne 'IST' and
           TEXT(3) ne 'IVL'.
          LV_CANCEL = ABAP_TRUE.
        endif.
      when 'PARTNERSAP7'.
        if TEXT(3) ne 'VGR' and
           TEXT(3) ne 'EAA' and
           TEXT(3) ne 'JCM' and
           TEXT(3) ne 'NCM'.
          LV_CANCEL = ABAP_TRUE.
        endif.
    endcase.

    if TEXT+3(11) ne ' - 77233 - '.
      LV_CANCEL = ABAP_TRUE.
    endif.

    case TYPE.
      when 'W'. data(LV_TYPE) = 'CU'.
      when 'K'.      LV_TYPE = 'WB'.
      when 'T' .     LV_TYPE = 'TC'.
      when others.   LV_TYPE = 'XX'.
    endcase.

    if TEXT+14(2) ne LV_TYPE.
      LV_CANCEL = ABAP_TRUE.
    endif.

    if TEXT+16(3) ne ' - '.
      LV_CANCEL = ABAP_TRUE.
    endif.

    if TEXT+19(1) eq '#'.
      if TEXT+20(3) cn '0123456789'.
        if TEXT+20(3) ne 'xxx'.
          LV_CANCEL = ABAP_TRUE.
        endif.
      endif.
      if TEXT+23(3) ne ' - '.
        LV_CANCEL = ABAP_TRUE.
      endif.
    else.
      if TEXT+19(6) ne 'Aicomp'.
        LV_CANCEL = ABAP_TRUE.
      endif.
    endif.

    if LV_CANCEL eq ABAP_TRUE.
      message id 42 type SY-ABCDE+8(1) number 796
         with 'Description is incorrect, PLEASE ADJUST!' ABAP_FALSE ABAP_FALSE ABAP_FALSE.
      raise CANCEL.
    endif.

  endmethod.
  method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_RELEASE.

    check SY-UNAME eq 'PARTNERSAP2' or
          SY-UNAME eq 'PARTNERSAP3' or
          SY-UNAME eq 'PARTNERSAP6' or
          SY-UNAME eq 'PARTNERSAP7'.

    get parameter id 'YHP_CHECK_TR_RELE' field data(LF_CHECK).
    check LF_CHECK is not initial.

    data LR_REQUEST type range of TRKORR.
    LR_REQUEST = value #( base LR_REQUEST ( SIGN   = 'I'
                                            OPTION = 'EQ'
                                            LOW    = conv #( REQUEST )
                                            HIGH   = SPACE ) ).

    submit RSTMSCOL and return.

    submit /SDF/CMO_TR_CHECK with P_TARGET = 'HEQCLNT100'
                             with R_PRJ_CO = ABAP_TRUE
                             with P_ORI_TR in LR_REQUEST
                             with P_CRSREF = ABAP_TRUE
                             with P_DGP    = ABAP_TRUE
                             with P_SWCOMP = ABAP_TRUE
                             with P_IMPTIM = ABAP_TRUE
                             with P_OICHCK = ABAP_TRUE and return.

    data LV_ANSWER type CHAR1.
    call function 'POPUP_TO_CONFIRM'
      exporting
        TITLEBAR              = TEXT-A01
        TEXT_QUESTION         = TEXT-A02
        DISPLAY_CANCEL_BUTTON = ABAP_TRUE
      importing
        ANSWER                = LV_ANSWER
      exceptions
        TEXT_NOT_FOUND        = 1
        others                = 2.
    if SY-SUBRC is not initial or
       LV_ANSWER ne '1'.
      raise CANCEL.
    endif.

  endmethod.
  method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_RELEASE_SLIN.
  endmethod.
endclass. "YCL_IM_HP_CTS_REQUEST_CHEC definition
endclass. "YCL_IM_HP_CTS_REQUEST_CHEC implementation
