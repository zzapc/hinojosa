*&---------------------------------------------------------------------*
*&  Include           ZRINV0001_O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS '0100'.
  SET TITLEBAR '0100'.

  IF gv_pant_ini <> 'X'.
    PERFORM carga_popup_inicial.
  ENDIF.

  IF g_custom_container IS INITIAL.

*   Creamos el container principal
    CREATE OBJECT g_custom_container
      EXPORTING
        container_name = gc_container.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid
      EXPORTING
        i_parent      = g_custom_container
        i_appl_events = 'X'.

*   Para los eventos
    CREATE OBJECT g_application.

    SET HANDLER g_application->handle_toolbar
                g_application->handle_hotspot
                g_application->handle_user_command FOR g_grid. "FOR ALL INSTANCES.


*   Mostramos el ALV
    PERFORM mostrar_alv.

  ELSE.
*   Refrescamos el ALV
    PERFORM refrescar_alv.
  ENDIF.


ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  FIELD-SYMBOLS: <wa_pi> TYPE tipo_pos.
  datA: t_ucoom like sy-ucomm OCCURS 0 WITH HEADER LINE.
  refresh t_ucoom.
  data: lv_verpr type verpr,
        lv_stprs type stprs,
        lv_VPRSV type VPRSV,
        lv_peinh type peinh.
  if zsinv0001_grid-status ne 'G'.
     t_ucoom = 'FINAL'. append t_ucoom.
     t_ucoom = 'IMPACTO'. APPEND t_ucoom.
  else.
     t_ucoom = 'IMPORT'. APPEND t_ucoom.
  endif.
  if zsinv0001_grid-log    ne 'X'.
     t_ucoom = 'SHOWLOG'. append t_ucoom.
  endif.
* FINAL, IMPACTO
  SET PF-STATUS '0200' EXCLUDING t_ucoom.
  SET TITLEBAR '0200'.

  IF g_custom_container_200 IS INITIAL.

*   Creamos el container principal
    CREATE OBJECT g_custom_container_200
      EXPORTING
        container_name = gc_container_200.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid_200
      EXPORTING
        i_parent      = g_custom_container_200
        i_appl_events = 'X'.


*   Indicamos la descripción de la casuística para mostrarla en el alv
    CLEAR: t_dominio_casuistica. REFRESH: t_dominio_casuistica.
    CALL FUNCTION 'DD_DD07V_GET'
      EXPORTING
        domain_name = 'ZCASUISTICA'
        langu       = sy-langu
        withtext    = 'X'
      TABLES
        dd07v_tab   = t_dominio_casuistica
*     EXCEPTIONS
*       ACCESS_FAILURE       = 1
*       OTHERS      = 2
      .

*   Mostramos el ALV
    PERFORM mostrar_alv_200.

  ELSE.
*   Refrescamos el ALV
    PERFORM refrescar_alv_200.
  ENDIF.

ENDMODULE.                 " STATUS_0200  OUTPUT



*&---------------------------------------------------------------------*
*&      Module  STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0300 OUTPUT.
*  SET PF-STATUS '0300'.
  SET TITLEBAR '0300'.

ENDMODULE.                 " STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  CHEQUEO_CENTRO  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE chequeo_centro INPUT.

  DATA: lv_werks TYPE werks_d.

  CLEAR lv_werks.
  SELECT SINGLE werks INTO lv_werks
    FROM t001w
    WHERE werks = gv_werks.

  IF lv_werks IS INITIAL.
    CLEAR: gv_okcode4.
    MESSAGE e101.
  ELSE.

    AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
                ID 'ACTVT' FIELD '03'
                ID 'WERKS' FIELD gv_werks.

    IF sy-subrc <> 0.
      CLEAR: gv_okcode4.
      MESSAGE e103(zmm) WITH gv_werks.
    ENDIF.

  ENDIF.

ENDMODULE.                 " CHEQUEO_CENTRO  INPUT
*&---------------------------------------------------------------------*
*&      Module  CHEQUEO_ALMACEN  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE chequeo_almacen INPUT.

  DATA: lv_lgort TYPE lgort_d.

  IF gv_werks IS INITIAL.
    MESSAGE e100(zmm).

  ELSE.

    CLEAR lv_lgort.
    SELECT SINGLE lgort INTO lv_lgort
      FROM t001l
      WHERE werks = gv_werks
      AND lgort = gv_lgort.

    IF lv_lgort IS INITIAL.
      MESSAGE e102(zmm).
    ENDIF.

  ENDIF.

ENDMODULE.                 " CHEQUEO_ALMACEN  INPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_0400  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0400 OUTPUT.
  SET PF-STATUS '0400'.
  SET TITLEBAR '0400'.

ENDMODULE.                 " STATUS_0400  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_ALV_200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_alv_200 .
  DATA: ls_variant_200 TYPE disvariant.

* Preparamos el catálogo de campos
  PERFORM prepare_fielcat_200.

* Para que muestre el ancho de las columnas optimizado
  t_layout_200-cwidth_opt = 'X'.
  t_layout_200-sel_mode   = 'A'.
  ls_variant_200-report   = sy-repid.
  ls_variant_200-HANDLE   = '200'.

* Mostrar alv
  CALL METHOD g_grid_200->set_table_for_first_display
    EXPORTING
      is_layout            = t_layout_200
      i_structure_name     = 'ZSINV0001_PI_GRID'
      it_toolbar_excluding = gti_toolbar_ex_200
      is_variant           = ls_variant_200
      i_save               = 'A'
*     i_default            = 'X'
    CHANGING
      it_outtab            = gti_pi[]
      it_fieldcatalog      = gti_fieldcat_200.
ENDFORM.                    " MOSTRAR_ALV_200
