*&---------------------------------------------------------------------*
*&  Include           ZRINV0002_O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS '0100'.
  SET TITLEBAR '0100'.

  IF gv_pant_ini <> 'X'.
    PERFORM carga_popup_inicial.
  ENDIF.

  IF p_werks IS INITIAL.
    SET SCREEN 0.
    LEAVE SCREEN.
  ENDIF.

  IF g_custom_container IS INITIAL.
    CREATE OBJECT g_custom_container
      EXPORTING
        container_name = gc_container.

    CREATE OBJECT g_grid
      EXPORTING
        i_parent      = g_custom_container
        i_appl_events = 'X'.

    CREATE OBJECT g_application.

    SET HANDLER g_application->handle_toolbar
                g_application->handle_hotspot
                g_application->handle_user_command FOR g_grid. "FOR ALL INSTANCES.

    PERFORM mostrar_alv.
  ELSE.
    PERFORM refrescar_alv.
  ENDIF.
ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  FIELD-SYMBOLS: <wa_pi> TYPE tipo_pos.
  DATA: t_ucoom LIKE sy-ucomm OCCURS 0 WITH HEADER LINE.
  REFRESH t_ucoom.
  DATA: lv_verpr TYPE verpr,
        lv_stprs TYPE stprs,
        lv_vprsv TYPE vprsv,
        lv_peinh TYPE peinh.

  IF zsinv0002_grid-status NE 'F'.
    t_ucoom = 'FINAL'. APPEND t_ucoom.
    t_ucoom = 'IMPACTO'. APPEND t_ucoom.
  ENDIF.
  IF zsinv0002_grid-status NE 'I'.
    t_ucoom = 'UPDATE'. APPEND t_ucoom.
  ENDIF.
  IF zsinv0002_grid-status CA 'CBI'.
    t_ucoom = 'SAVE_ALV'. APPEND t_ucoom.
  ENDIF.
  IF zsinv0002_grid-status EQ 'C'.
    t_ucoom = 'CHANGE'. APPEND t_ucoom.
  ENDIF.

  IF zsinv0002_grid-log    NE 'X'.
    t_ucoom = 'SHOWLOG'. APPEND t_ucoom.
    LOOP AT SCREEN.
      IF screen-group1 EQ 'LOG'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-group1 EQ 'LOG'.
        screen-active = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
* FINAL, IMPACTO
  SET PF-STATUS '0200' EXCLUDING t_ucoom.
  SET TITLEBAR '0200'.

  IF zsinv0002_grid-multi IS INITIAL.
    LOOP AT SCREEN.
      IF screen-group1 EQ 'MLT'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-group1 EQ 'MLT'.
        screen-active = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  IF g_custom_container_200 IS INITIAL.
*   Creamos el container principal
    CREATE OBJECT g_custom_container_200
      EXPORTING
        container_name = gc_container_200.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid_200
      EXPORTING
        i_parent      = g_custom_container_200
        i_appl_events = 'X'.

*   Indicamos la descripción de la casuística para mostrarla en el alv
    CLEAR: t_dominio_casuistica. REFRESH: t_dominio_casuistica.
    CALL FUNCTION 'DD_DD07V_GET'
      EXPORTING
        domain_name = 'ZCASUISTICA2'
        langu       = sy-langu
        withtext    = 'X'
      TABLES
        dd07v_tab   = t_dominio_casuistica.

    CREATE OBJECT g_application_200.

    SET HANDLER g_application_200->handle_toolbar
                g_application_200->handle_hotspot
                g_application_200->handle_user_command
                g_application_200->handle_data_changed FOR g_grid_200. "FOR ALL INSTANCES.

*   Mostramos el ALV
    PERFORM mostrar_alv_200.
  ELSE.
*   Refrescamos el ALV
    PERFORM refrescar_alv_200.
  ENDIF.

ENDMODULE.                 " STATUS_0200  OUTPUT



*&---------------------------------------------------------------------*
*&      Module  STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0300 OUTPUT.
  SET PF-STATUS '0300'.
  SET TITLEBAR '0300'.

  PERFORM initialization_sel CHANGING p3_werks.

ENDMODULE.                 " STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  CHEQUEO_CENTRO  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE chequeo_centro INPUT.

  DATA: lv_werks TYPE werks_d.

  CLEAR lv_werks.
  SELECT SINGLE werks INTO lv_werks
    FROM t001w
    WHERE werks = gv_werks.

  IF lv_werks IS INITIAL.
    CLEAR: gv_okcode4.
    MESSAGE e101.
  ELSE.

    AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
                ID 'ACTVT' FIELD '03'
                ID 'WERKS' FIELD gv_werks.

    IF sy-subrc <> 0.
      CLEAR: gv_okcode4.
      MESSAGE e103(zmm) WITH gv_werks.
    ENDIF.

  ENDIF.

ENDMODULE.                 " CHEQUEO_CENTRO  INPUT
*&---------------------------------------------------------------------*
*&      Module  CHEQUEO_ALMACEN  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE chequeo_almacen INPUT.

  DATA: lv_lgort TYPE lgort_d.

  IF gv_werks IS INITIAL.
    MESSAGE e100(zmm).

  ELSE.

    CLEAR lv_lgort.
    SELECT SINGLE lgort INTO lv_lgort
      FROM t001l
      WHERE werks = gv_werks
      AND lgort = gv_lgort.

    IF lv_lgort IS INITIAL.
      MESSAGE e102(zmm).
    ENDIF.

  ENDIF.

ENDMODULE.                 " CHEQUEO_ALMACEN  INPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_0400  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0400 OUTPUT.
  SET PF-STATUS '0400'.
  SET TITLEBAR '0400'.

ENDMODULE.                 " STATUS_0400  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  MOSTRAR_ALV_200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM mostrar_alv_200 .
  DATA: ls_variant_200 TYPE disvariant.

* Preparamos el catálogo de campos
  PERFORM prepare_fielcat_200.

* Para que muestre el ancho de las columnas optimizado
  t_layout_200-cwidth_opt = 'X'.
  t_layout_200-sel_mode   = 'A'.
  t_layout_200-info_fname = 'LINE_COLOR'.
  t_layout_200-ctab_fname = 'COLOR_CELL'.
  ls_variant_200-report   = sy-repid.
  ls_variant_200-handle   = '200'.

* Mostrar alv
  CALL METHOD g_grid_200->set_table_for_first_display
    EXPORTING
      is_layout            = t_layout_200
      i_structure_name     = 'ZSINV0002_PI_GRID'
      it_toolbar_excluding = gti_toolbar_ex_200
      is_variant           = ls_variant_200
      i_save               = 'A'
*     i_default            = 'X'
    CHANGING
      it_outtab            = gti_pi[]
      it_fieldcatalog      = gti_fieldcat_200.

  CALL METHOD g_grid_200->register_edit_event
    EXPORTING
      i_event_id = cl_gui_alv_grid=>mc_evt_modified.

ENDFORM.                    " MOSTRAR_ALV_200
*&---------------------------------------------------------------------*
*&      Module  STATUS_0500  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0500 OUTPUT.
  SET PF-STATUS '0500'.
  SET TITLEBAR '0500'.

  IF g_custom_container5 IS INITIAL.
*   Creamos el container principal
    CREATE OBJECT g_custom_container5
      EXPORTING
        container_name = gc_container5.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid5
      EXPORTING
        i_parent      = g_custom_container5
        i_appl_events = 'X'.

    CREATE OBJECT g_application5.

    SET HANDLER g_application5->handle_hotspot FOR g_grid5. "FOR ALL INSTANCES.

*   Indicamos la descripción de la casuística para mostrarla en el alv
    CLEAR: t_dominio_casuistica. REFRESH: t_dominio_casuistica.
    CALL FUNCTION 'DD_DD07V_GET'
      EXPORTING
        domain_name = 'ZCASUISTICA2'
        langu       = sy-langu
        withtext    = 'X'
      TABLES
        dd07v_tab   = t_dominio_casuistica.

*   Mostramos el ALV
    PERFORM mostrar_alv_500.
  ELSE.
*   Refrescamos el ALV
    PERFORM refrescar_alv_500.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_1000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_1000 OUTPUT.
  DATA lt_ucomm TYPE TABLE OF sy-ucomm.

  IF ztinv2_ci IS INITIAL.
    SELECT SINGLE * FROM ztinv2_ci
      WHERE docum EQ gv_docum_int.
  ENDIF.

  IF ztinv2_ci-status EQ 'P'. " en proceso
    DELETE lt_ucomm WHERE table_line = 'FIN'.

    LOOP AT SCREEN.
      IF screen-name EQ 'FINALIZAR'.
        screen-input = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    APPEND 'FIN' TO lt_ucomm.
    LOOP AT SCREEN.
      IF screen-name EQ 'FINALIZAR'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  SET PF-STATUS '1000' EXCLUDING lt_ucomm.
  SET TITLEBAR '1000'.

  REFRESH: list.
  name = 'GV_DOCUM'.

  SELECT * FROM ztinv2_ci
    INTO wa_ci
    WHERE ( status EQ 'I'
    OR status EQ 'P' ).

    WRITE wa_ci-docum TO value-key NO-ZERO.
    value-text = |{ '->' } { 'Centro' } { wa_ci-werks } { 'Almacén' } { wa_ci-lgort }|.

    APPEND value TO list.
    CLEAR value.
  ENDSELECT.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      id     = name
      values = list.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_1001  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_1001 OUTPUT.
  SET PF-STATUS '1001'.
  SET TITLEBAR '1000'.

  SELECT SINGLE name1 FROM t001w
    INTO gv_name1
    WHERE werks EQ ztinv2_ci-werks.

  SELECT SINGLE lgobe FROM t001l
    INTO gv_lgobe
    WHERE lgort EQ ztinv2_ci-lgort
      AND werks EQ ztinv2_ci-werks.

  IF gv_corregir IS NOT INITIAL.
    LOOP AT SCREEN.
      IF screen-name EQ 'ZTINV2_PI-MENGE_NEW'.
        screen-input = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name EQ 'ZTINV2_PI-MENGE_NEW'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDMODULE.
