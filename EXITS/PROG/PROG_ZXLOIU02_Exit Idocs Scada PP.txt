*&---------------------------------------------------------------------*
*&  Include           ZXLOIU02
*&---------------------------------------------------------------------*
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(MESSAGE_TYPE) LIKE  EDMSG-MSGTYP
*"     VALUE(SEGMENT_NAME) LIKE  EDIDD-SEGNAM
*"     VALUE(F_AFKO) LIKE  E3AFKOL STRUCTURE  E3AFKOL OPTIONAL
*"     VALUE(F_JSTK) LIKE  E3JSTKL STRUCTURE  E3JSTKL OPTIONAL
*"     VALUE(F_AFFL) LIKE  E3AFFLL STRUCTURE  E3AFFLL OPTIONAL
*"     VALUE(F_AFVO) LIKE  E3AFVOL STRUCTURE  E3AFVOL OPTIONAL
*"     VALUE(F_JSTV) LIKE  E3JSTVL STRUCTURE  E3JSTVL OPTIONAL
*"     VALUE(F_KBED) LIKE  E3KBEDL STRUCTURE  E3KBEDL OPTIONAL
*"     VALUE(F_AFUV) LIKE  E3AFUVL STRUCTURE  E3AFUVL OPTIONAL
*"     VALUE(F_JSTU) LIKE  E3JSTUL STRUCTURE  E3JSTUL OPTIONAL
*"     VALUE(F_KBEU) LIKE  E3KBEUL STRUCTURE  E3KBEUL OPTIONAL
*"     VALUE(F_RESB) LIKE  E3RESBL STRUCTURE  E3RESBL OPTIONAL
*"     VALUE(F_AFAB) LIKE  E3AFABL STRUCTURE  E3AFABL OPTIONAL
*"     VALUE(F_AFPO) LIKE  E3AFPOL STRUCTURE  E3AFPOL OPTIONAL
*"     VALUE(F_AFVO_KEY) TYPE  CLOI_AFVO_STRUCT OPTIONAL
*"     VALUE(F_RESB_KEY) TYPE  CLOI_RESB_STRUCT OPTIONAL
*"     VALUE(F_AFUV_KEY) TYPE  CLOI_AFUV_STRUCT OPTIONAL
*"     VALUE(ISI_ENHANCEMENT) TYPE  ISI_EXIT_SAPLLOI1_002 OPTIONAL
*"  EXPORTING
*"     VALUE(IDOC_CIMTYPE) LIKE  EDIDC-CIMTYP
*"  TABLES
*"      IDOC_DATA STRUCTURE  EDIDD
*"----------------------------------------------------------------------


** IDOC Ordenes PP SAP -> SCADA
DATA: ls_idoc_act TYPE edidd,
      lv_ind      LIKE sy-tabix.

DATA: ls_e1afkol TYPE e1afkol.
DATA: ls_zppsc01 TYPE zppsc01.
DATA: ls_zppsc02 TYPE zppsc02.
DATA: ls_zppsc03 TYPE zppsc03.
DATA: ls_idoc_new TYPE edidd.

DATA: lv_fec1 TYPE zfec_entreg,
      lv_fec2 TYPE zfec_entreg,
      lv_fec3 TYPE zfec_entreg.

DATA: lv_rollos1 TYPE zrollos,
      lv_tor1    TYPE ztornada,
      lv_rollos2 TYPE zrollos,
      lv_tor2    TYPE ztornada,
      lv_rollos3 TYPE zrollos,
      lv_tor3    TYPE ztornada.

DATA: lt_class      TYPE /isdfps/lm_accident_sclass_t,
      lt_objectdata TYPE rihclobjdat_tab.

DATA: lv_object     TYPE objnum,
      ls_objectdata TYPE clobjdat.

*
DATA: ls_e1resbl TYPE e1resbl.

* CREAR SEGMENTO ZPPSC01 POR CADA POSICION DE RESERVA DE LA ORDEN
IF segment_name = 'E1RESBL'.
* Recuperamos el índice
  lv_ind        = sy-tabix.
  CLEAR ls_idoc_act.
  ls_idoc_act  = idoc_data.
  ls_e1resbl = ls_idoc_act-sdata.

  SELECT SINGLE sortf rgekz dumps INTO (ls_zppsc01-sortf, ls_zppsc01-rgekz, ls_zppsc01-dumps)
  FROM resb
  WHERE rsnum = ls_e1resbl-rsnum
  AND rspos = ls_e1resbl-rspos
  AND rsart = ls_e1resbl-rsart.
  IF sy-subrc = 0.
    ls_idoc_new-segnam = 'ZPPSC01'.
    ls_idoc_new-sdata = ls_zppsc01.
    APPEND ls_idoc_new TO idoc_data.
  ENDIF.
ENDIF.



* CREAR SEGMENTO ZPPSC03
IF segment_name = 'E1AFKOL'.
* Recuperamos el índice
  lv_ind        = sy-tabix.
  CLEAR ls_idoc_act.
  ls_idoc_act  = idoc_data.
  ls_e1afkol = ls_idoc_act-sdata.

* RECUPERAMOS LAS DESCRIPCION DEL MATERIAL PARA QUE SCADA LA PUEDA MOSTRAR EN LA PANTALLA DE PLANTA
  CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
    EXPORTING
      input        = ls_e1afkol-matnr
    IMPORTING
      output       = ls_e1afkol-matnr
    EXCEPTIONS
      length_error = 1
      OTHERS       = 2.


  SELECT SINGLE maktx INTO ls_zppsc03-maktx
  FROM makt
  WHERE matnr = ls_e1afkol-matnr
  AND spras = sy-langu.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = ls_e1afkol-aufnr
    IMPORTING
      output = ls_e1afkol-aufnr.

* RECUPERAMOS EL SEGMENTO ZPPSC03
  CLEAR: lv_fec1, lv_fec2, lv_fec3.
  CLEAR: lv_rollos1, lv_tor1, lv_rollos2, lv_tor2, lv_rollos3, lv_tor3.
  SELECT SINGLE zzkunnr1 zzkunnr2 zzkunnr3 zzebeln1 zzebelp1 zzfec_entreg1 zzebeln2
                zzebelp2 zzfec_entreg2 zzebeln3 zzebelp3 zzfec_entreg3
                zzrollos1 zztor1 zzrollos2 zztor2 zzrollos3 zztor3

*  INTO CORRESPONDING FIELDS OF ls_zppsc03
  INTO (ls_zppsc03-zkunnr1, ls_zppsc03-zkunnr2, ls_zppsc03-zkunnr3, ls_zppsc03-zebeln1, ls_zppsc03-zebelp1, lv_fec1,
         ls_zppsc03-zebeln2, ls_zppsc03-zebelp2, lv_fec2, ls_zppsc03-zebeln3, ls_zppsc03-zebelp3, lv_fec3,
         lv_rollos1, lv_tor1, lv_rollos2, lv_tor2, lv_rollos3, lv_tor3)
    FROM aufk
    WHERE aufnr = ls_e1afkol-aufnr.
  IF sy-subrc = 0.
    ls_zppsc03-zfec_entreg1 = lv_fec1.
    ls_zppsc03-zfec_entreg2 = lv_fec2.
    ls_zppsc03-zfec_entreg3 = lv_fec3.
    ls_zppsc03-zrollos1 = lv_rollos1.
    ls_zppsc03-ztor1 = lv_tor1.
    ls_zppsc03-zrollos2 = lv_rollos2.
    ls_zppsc03-ztor2 = lv_tor2.
    ls_zppsc03-zrollos3 = lv_rollos3.
    ls_zppsc03-ztor3 = lv_tor3.

*    select single maktx into ls_zppsc03-maktx
*    from makt
*    where matnr =
*    and spras = 'ES'.

    ls_idoc_new-segnam = 'ZPPSC03'.
    ls_idoc_new-sdata = ls_zppsc03.
    APPEND ls_idoc_new TO idoc_data.
  ENDIF.

* CREAR SEGMENTO ZPPSC02 - CARACTERISTICAS DE MATERIAL
  CLEAR ls_idoc_new.

  CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
    EXPORTING
      input        = ls_e1afkol-matnr
    IMPORTING
      output       = ls_e1afkol-matnr
    EXCEPTIONS
      length_error = 1
      OTHERS       = 2.

  CLEAR lv_object.
  lv_object = ls_e1afkol-matnr.

  CALL FUNCTION 'CLAF_CLASSIFICATION_OF_OBJECTS'
    EXPORTING
      class              = 'Z_ESCADA'
*     CLASSTEXT          = 'X'
      classtype          = '001'
*     CLINT              = 0
*     FEATURES           = 'X'
      language           = sy-langu
      object             = lv_object
      objecttable        = 'MARA'
*     KEY_DATE           = SY-DATUM
*     INITIAL_CHARACT    = 'X'
*     NO_VALUE_DESCRIPT  =
*     CHANGE_SERVICE_CLF = 'X'
*     INHERITED_CHAR     = ' '
*     CHANGE_NUMBER      = ' '
    TABLES
      t_class            = lt_class
      t_objectdata       = lt_objectdata
*     I_SEL_CHARACTERISTIC       =
*     T_NO_AUTH_CHARACT  =
    EXCEPTIONS
      no_classification  = 1
      no_classtypes      = 2
      invalid_class_type = 3
      OTHERS             = 4.

  IF lt_objectdata[] IS NOT INITIAL.
    LOOP AT lt_objectdata INTO ls_objectdata.
      CLEAR ls_zppsc02.
      ls_zppsc02-klart = '001'.
      ls_zppsc02-class = 'Z_ESCADA'.
      ls_zppsc02-posnr = ls_objectdata-posnr.
      ls_zppsc02-atnam = ls_objectdata-atnam.
      ls_zppsc02-ausp1 = ls_objectdata-ausp1.
      ls_zppsc02-smbez = ls_objectdata-smbez.

      ls_idoc_new-segnam = 'ZPPSC02'.
      ls_idoc_new-sdata = ls_zppsc02.
      APPEND ls_idoc_new TO idoc_data.
    ENDLOOP.
  ENDIF.

ENDIF.
