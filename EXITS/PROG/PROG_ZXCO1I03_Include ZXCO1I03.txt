*----------------------------------------------------------------------*
***INCLUDE ZXCO1I03.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  GET_DESCRIPCION_ALMACEN  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE validar_almacen INPUT.
  IF aufk-zzlgort IS NOT INITIAL.
    SELECT SINGLE lgort FROM t001l
        INTO @DATA(lv_lgort_val)
        WHERE werks = '4000' AND
              lgort = @aufk-zzlgort.
    IF sy-subrc <> 0.
      MESSAGE e261(zpp).
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  VALIDAR_MATERIAL  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE validar_material INPUT.
  IF aufk-zzmatventa IS NOT INITIAL.
    SELECT SINGLE matnr FROM mara
        INTO @DATA(lv_matnr_val)
        WHERE matnr = @aufk-zzmatventa.
    IF sy-subrc <> 0.
      MESSAGE e263(zpp).
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  VALIDAR_AUFNR  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE validar_aufnr INPUT.
  IF aufk-zzaufnr_ext is not INITIAL.
    select single aufnr from aufk
      into @DATA(lv_aufnr_val)
      where aufnr = @aufk-zzaufnr_ext.

    IF sy-subrc <> 0.
      MESSAGE e264(zpp).
    ENDIF.
  ENDIF.
ENDMODULE.
