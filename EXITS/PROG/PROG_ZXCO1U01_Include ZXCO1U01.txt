*&---------------------------------------------------------------------*
*&  Include           ZXCO1U01
*&---------------------------------------------------------------------*

*Tablas Función  ORDER_WRITE_DOCUMENT
  DATA xafab        TYPE STANDARD TABLE OF aafab WITH HEADER LINE.
  DATA yafab        TYPE STANDARD TABLE OF aafab WITH HEADER LINE.
  DATA xaffh        TYPE STANDARD TABLE OF aaffh WITH HEADER LINE.
  DATA yaffh        TYPE STANDARD TABLE OF aaffh WITH HEADER LINE.
  DATA xaffl        TYPE STANDARD TABLE OF aaffl WITH HEADER LINE.
  DATA yaffl        TYPE STANDARD TABLE OF aaffl WITH HEADER LINE.
  DATA xafih        TYPE STANDARD TABLE OF aafih WITH HEADER LINE.
  DATA yafih        TYPE STANDARD TABLE OF aafih WITH HEADER LINE.

  DATA xafko        TYPE STANDARD TABLE OF aafko WITH HEADER LINE.
  DATA yafko        TYPE STANDARD TABLE OF aafko WITH HEADER LINE.
  DATA xafpo        TYPE STANDARD TABLE OF aafpo WITH HEADER LINE.
  DATA yafpo        TYPE STANDARD TABLE OF aafpo WITH HEADER LINE.


  DATA xafvc TYPE STANDARD TABLE OF  aafvc WITH HEADER LINE.
  DATA yafvc TYPE STANDARD TABLE OF  aafvc WITH HEADER LINE.
  DATA xafvu TYPE STANDARD TABLE OF  aafvu WITH HEADER LINE.
  DATA yafvu TYPE STANDARD TABLE OF  aafvu WITH HEADER LINE.
  DATA xafvv TYPE STANDARD TABLE OF  aafvv WITH HEADER LINE.
  DATA yafvv TYPE STANDARD TABLE OF  aafvv WITH HEADER LINE.
  DATA xaufk TYPE STANDARD TABLE OF  aaufk WITH HEADER LINE.
  DATA yaufk TYPE STANDARD TABLE OF  aaufk WITH HEADER LINE.
*  DATA xeaml_d_lfe_cdoc TYPE STANDARD TABLE OF  aeaml_d_lfe_cdoc WITH HEADER LINE.
*  DATA yeaml_d_lfe_cdoc TYPE STANDARD TABLE OF  aeaml_d_lfe_cdoc WITH HEADER LINE.
  DATA xihpa TYPE STANDARD TABLE OF  aihpa WITH HEADER LINE.
  DATA yihpa TYPE STANDARD TABLE OF  aihpa WITH HEADER LINE.
  DATA xiloa TYPE STANDARD TABLE OF  ailoa WITH HEADER LINE.
  DATA yiloa TYPE STANDARD TABLE OF  ailoa WITH HEADER LINE.
  DATA xmlst TYPE STANDARD TABLE OF  amlst WITH HEADER LINE.
  DATA ymlst TYPE STANDARD TABLE OF  amlst WITH HEADER LINE.
  DATA xmltx TYPE STANDARD TABLE OF  amltx WITH HEADER LINE.
  DATA ymltx TYPE STANDARD TABLE OF  amltx WITH HEADER LINE.
  DATA xnptx TYPE STANDARD TABLE OF  anptx WITH HEADER LINE.
  DATA ynptx TYPE STANDARD TABLE OF  anptx WITH HEADER LINE.
  DATA xpmsdo TYPE STANDARD TABLE OF  apmsdo WITH HEADER LINE.
  DATA ypmsdo TYPE STANDARD TABLE OF  apmsdo WITH HEADER LINE.
  DATA xresb TYPE STANDARD TABLE OF  aresb WITH HEADER LINE.
  DATA yresb TYPE STANDARD TABLE OF  aresb WITH HEADER LINE.
  DATA xrsadd TYPE STANDARD TABLE OF  arsadd WITH HEADER LINE.
  DATA yrsadd TYPE STANDARD TABLE OF  arsadd WITH HEADER LINE.

  DATA icdtxt_zorder TYPE STANDARD TABLE OF cdtxt  WITH HEADER LINE.

  DATA objectid LIKE cdhdr-objectid.
  DATA s_component_table TYPE  resbb.
  DATA s_component_table_old TYPE  aresb.
  DATA lv_dispo TYPE dispo.

*  SELECT SINGLE dispo INTO lv_dispo FROM marc WHERE matnr EQ header_table-plnbez AND werks EQ header_table-werks.
*  SELECT SINGLE dispo INTO lv_dispo FROM zpepp_pla_mod WHERE dispo EQ lv_dispo.
*  IF sy-subrc = 0.
*    IF sy-tcode = 'CO02'.
  DATA lv_objnr TYPE objnr.
  DATA: lv_chgnr TYPE j_chgnr.
  CONCATENATE 'OR' header_table-aufnr INTO lv_objnr.

*  CLEAR lv_chgnr.
*  SELECT SINGLE chgnr INTO lv_chgnr FROM jest
*  WHERE objnr = lv_objnr
*  AND stat = 'I0002'
*  AND inact = ''.
*
*  IF lv_chgnr IS NOT INITIAL.

  CLEAR objectid.

  CLEAR: xafko, yafko, xafpo, yafpo.

* Objeto
  objectid = header_table-aufnr.
* Tablas
  MOVE-CORRESPONDING header_table TO xafko.
  APPEND xafko.
  MOVE-CORRESPONDING header_table_old TO yafko.
  APPEND yafko.
  MOVE-CORRESPONDING  position_table TO xafpo.
  APPEND xafpo.
  MOVE-CORRESPONDING position_table_old TO yafpo.
  APPEND yafpo.

** ERD-28.10.2020- Control Mod.cantidad en OFs tratadas en Wonder
*    IF ( yafpo-psmng <> xafpo-psmng ) AND ( yafpo-wempf = 'WONDER' OR xafpo-wempf = 'WONDER' ).
*      MESSAGE s398(00) WITH 'Error, OF está siendo tratada en Wonder'.
*    ENDIF.

  LOOP AT component_table INTO s_component_table.
    MOVE-CORRESPONDING s_component_table TO xresb.
    APPEND xresb.
  ENDLOOP.

  LOOP AT component_table_old INTO s_component_table_old.
    MOVE-CORRESPONDING s_component_table_old TO yresb.
    APPEND yresb.
  ENDLOOP.
  CALL FUNCTION 'ZORDER_WRITE_DOCUMENT'
    EXPORTING
      objectid      = objectid
      tcode         = sy-tcode
      utime         = sy-uzeit
      udate         = sy-datum
      username      = sy-uname
*     PLANNED_CHANGE_NUMBER         = ' '
*     OBJECT_CHANGE_INDICATOR       = 'U'
*     PLANNED_OR_REAL_CHANGES       = ' '
*     NO_CHANGE_POINTERS            = ' '
*     UPD_ICDTXT_ZORDER             = ' '
      upd_afko      = 'U'
      upd_afpo      = 'U'
*     upd_resb      = 'U'
    TABLES
      icdtxt_zorder = icdtxt_zorder
      xafko         = xafko
      yafko         = yafko
      xafpo         = xafpo
      yafpo         = yafpo.
*     XRESB         = xresb
*     YRESB         = yresb.
*********        FIELD-SYMBOLS <fs> TYPE yresb.
*********        LOOP AT xresb.
*********          READ TABLE yresb WITH KEY rsnum = xresb-rsnum rspos = xresb-rspos ASSIGNING <fs>.
*********          IF sy-subrc <> 0.
*********            DELETE xresb.
*********          ELSE.
*********            xresb-kz = 'U'.
*********            <fs>-kz = 'U'.
*********            MODIFY xresb.
*********          ENDIF.
*********        ENDLOOP.
*        DELETE xresb WHERE rsnum <> '0099578641'  AND rspos <> '0975'.
*        DELETE yresb WHERE rsnum <> '0099578641'  AND rspos <> '0975'.
  IF component_table_old IS NOT INITIAL.
    CALL FUNCTION 'ZORDER_WRITE_DOCUMENT'
      EXPORTING
        objectid      = objectid
        tcode         = sy-tcode
        utime         = sy-uzeit
        udate         = sy-datum
        username      = sy-uname
*       PLANNED_CHANGE_NUMBER         = ' '
*       OBJECT_CHANGE_INDICATOR       = 'U'
*       PLANNED_OR_REAL_CHANGES       = ' '
*       NO_CHANGE_POINTERS            = ' '
*       UPD_ICDTXT_ZORDER             = ' '
*       upd_afko      = 'U'
*       upd_afpo      = 'U'
        upd_resb      = 'U'
      TABLES
        icdtxt_zorder = icdtxt_zorder
*       XAFKO         = xafko
*       YAFKO         = yafko
*       XAFPO         = xafpo
*       YAFPO         = yafpo
        xresb         = xresb
        yresb         = yresb.
  ENDIF.
*  ENDIF.
