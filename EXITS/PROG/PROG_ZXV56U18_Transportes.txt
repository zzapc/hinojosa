*&---------------------------------------------------------------------*
*&  Include           ZXV56U18
*&---------------------------------------------------------------------*
*"*"Lokale Schnittstelle:
*"  IMPORTING
*"     VALUE(I_FCODE) LIKE  T185F-FCODE
*"     VALUE(I_XVTTK_WA) LIKE  VTTKVB STRUCTURE  VTTKVB
*"     VALUE(I_XVTTS_WA) LIKE  VTTSVB STRUCTURE  VTTSVB OPTIONAL
*"     VALUE(I_XVTTP_WA) LIKE  VTTPVB STRUCTURE  VTTPVB OPTIONAL
*"  TABLES
*"      I_XVTTK_TAB STRUCTURE  VTTKVB
*"      I_XVTTP_TAB STRUCTURE  VTTPVB OPTIONAL
*"      I_XTRLK_TAB STRUCTURE  VTRLK OPTIONAL
*"      I_XTRLP_TAB STRUCTURE  VTRLP OPTIONAL
*"      I_XVTTS_TAB STRUCTURE  VTTSVB OPTIONAL
*"      I_XVTSP_TAB STRUCTURE  VTSPVB OPTIONAL
*"      I_XVBPA_TAB STRUCTURE  VBPAVB OPTIONAL
*"  EXCEPTIONS
*"      FCODE_NOT_PERMITTED
*"----------------------------------------------------------------------

  "ASC >>> 24.05.24 GAPSD035 - En lugar de hardcode lo pasamos a una tabla.
  SELECT 'I'  AS sign,
         'EQ' AS option,
         zssdt026_cam_pac~shtyp AS low,
         zssdt026_cam_pac~shtyp AS high
    INTO TABLE @DATA(lrg_shtyp)
    FROM zssdt026_cam_pac.

*  IF i_xvttk_wa IS NOT INITIAL AND ( i_xvttk_wa-shtyp = 'Z005'
*                                  OR i_xvttk_wa-shtyp = 'Z006'
*                                  OR i_xvttk_wa-shtyp = 'Z007' ).

  IF i_xvttk_wa IS NOT INITIAL AND  i_xvttk_wa-shtyp IN lrg_shtyp .
    "ASC <<< 24.05.24 GAPSD035 - En lugar de hardcode lo pasamos a una tabla.

*    IF i_xvttk_wa-tdlnr IS NOT INITIAL." AND ( i_xvttk_wa-zzconductor IS INITIAL AND i_xvttk_wa-zzdni IS INITIAL ) .
*      SELECT SINGLE lfa1~name1 AS zzconductor, stcd1 AS zzdni, sort1 AS signi, telf1 AS text1, zzadd_info AS add04, sort2 AS tpbez, zzsigni, zzremolque "Ampliamos campo ZZSINGI y zzremolque en el acreedor
*        FROM lfa1
*        INNER JOIN adrc ON lfa1~adrnr = adrc~addrnumber
*        INTO @DATA(ls_default)
*        WHERE lifnr = @i_xvttk_wa-tdlnr.
**    IF sy-subrc = 0 AND ls_default-signi IS NOT INITIAL.
*      IF sy-subrc = 0 AND ls_default-zzsigni IS NOT INITIAL.
*        IF  i_xvttk_wa-zzconductor IS INITIAL AND i_xvttk_wa-zzdni IS INITIAL.
*          i_xvttk_wa-zzconductor = ls_default-zzconductor.
*          i_xvttk_wa-zzdni       = ls_default-zzdni.
*        ENDIF.
*        i_xvttk_wa-signi       = ls_default-zzsigni.
*        i_xvttk_wa-text1       = ls_default-text1.
*        i_xvttk_wa-add04       = ls_default-add04.
**      i_xvttk_wa-tpbez       = ls_default-tpbez.
*        i_xvttk_wa-tpbez       = ls_default-zzremolque.
*      ELSEIF sy-subrc = 0 AND ls_default-zzsigni IS INITIAL.
*       CLEAR: i_xvttk_wa-text1, i_xvttk_wa-add04, i_xvttk_wa-tpbez, i_xvttk_wa-signi.
*      ENDIF.
*    ELSE.
*      IF i_xvttk_wa-tdlnr IS NOT INITIAL.
**      CLEAR: i_xvttk_wa-zzconductor, i_xvttk_wa-zzdni, i_xvttk_wa-text1, i_xvttk_wa-add04, i_xvttk_wa-tpbez, i_xvttk_wa-signi.
*      ENDIF.
*    ENDIF.
    DATA: ls_vttk TYPE vttk.
    MOVE-CORRESPONDING i_xvttk_wa TO ls_vttk.
    CALL FUNCTION 'ZSSD035_DATOS_TRANSPOR_VTTK'
      CHANGING
        c_vttk = ls_vttk.
    MOVE-CORRESPONDING ls_vttk TO i_xvttk_wa.

    MODIFY i_xvttk_tab FROM i_xvttk_wa INDEX 1.
  ENDIF.
