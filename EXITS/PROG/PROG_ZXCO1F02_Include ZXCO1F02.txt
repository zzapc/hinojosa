*----------------------------------------------------------------------*
***INCLUDE ZXCO1F02.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  OBTENER_ADITIVOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_AUFK  text
*----------------------------------------------------------------------*
FORM obtener_aditivos   using p_matnr TYPE matnr
                        CHANGING p_aufk TYPE aufk.

  DATA: lv_zztratos TYPE mara-zztratos,
        lt_text_tab TYPE STANDARD TABLE OF char2,
        lv_text     TYPE string,
        lv_char2    TYPE char2,
        lv_zzaditiv TYPE mara-zzaditiv.

*  IF  aufk-werks = '4000' AND
*  ( aufk-auart = 'ZC01' OR aufk-auart = 'ZC02' ).
*
*    IF aufk-aufnr IS INITIAL OR aufk-aufnr = '%00000000001'.
  IF p_matnr IS NOT INITIAL.
    SELECT SINGLE zztratos zzaditiv
      INTO (lv_zztratos, lv_zzaditiv)
      FROM mara
      WHERE matnr = p_matnr.
    IF sy-subrc = 0.
      CLEAR: lt_text_tab.
      lv_text = lv_zztratos.
      CALL FUNCTION 'SOTR_SERV_STRING_TO_TABLE'
        EXPORTING
          text        = lv_text
          line_length = 2
        TABLES
          text_tab    = lt_text_tab.

*          IF lt_text_tab is not INITIAL.
      LOOP AT lt_text_tab INTO lv_char2.
        CASE lv_char2.
          WHEN 'CO'.
            aufk-zzttocorona = 'X'.
          WHEN 'CX'.
            aufk-zzcoex = 'X'.
          WHEN 'IM'.
            aufk-zzimpresion = 'X'.
          WHEN 'TE'.
            aufk-zzteji = 'X'.
        ENDCASE.
      ENDLOOP.
      CLEAR: lt_text_tab.
      lv_text = lv_zzaditiv.
      CALL FUNCTION 'SOTR_SERV_STRING_TO_TABLE'
        EXPORTING
          text        = lv_text
          line_length = 1
        TABLES
          text_tab    = lt_text_tab.

*          IF lt_text_tab is not INITIAL.
      LOOP AT lt_text_tab INTO lv_char2.
        CASE lv_char2.
          WHEN 'C'.
            aufk-zzconductividad = 'X'.
          WHEN 'E'.
            aufk-zzadespum = 'X'.
          WHEN 'H'.
            aufk-zzadanthum = 'X'.
          WHEN 'I'.
            aufk-zzadignifugo = 'X'.
          WHEN 'S'.
            aufk-zzadantest = 'X'.
          WHEN 'U'.
            aufk-zzaduv = 'X'.
        ENDCASE.
      ENDLOOP.

*          ENDIF.

    ENDIF.
*        is_caufvdb-
  ENDIF.
*      is_caufvdb-matnr
*    ENDIF.
*
*
*  ENDIF.
ENDFORM.
