*----------------------------------------------------------------------*
***INCLUDE ZXCO1O01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_5100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_5100 OUTPUT.
**  SET PF-STATUS 'xxxxxxxx'.
**  SET TITLEBAR 'xxx'.
*
*  DATA: lv_order   LIKE aufk-aufnr,
*        lv_string2 TYPE string.
*
*  FIELD-SYMBOLS: <fs2> TYPE any.
*
*
*  IF gv_sfcpf = 'ZI02'.
*    LOOP AT SCREEN.
*      IF screen-group1 = 'GR2'.
*        screen-active = '0'.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*  ENDIF.
*
** GST - 05/06/2015 ->
*  IF gv_sfcpf = 'ZI05'.
*    LOOP AT SCREEN.
*      IF screen-name EQ 'AUFK-ZZKUNNR1' OR screen-name EQ 'AUFK-ZZEBELN1' OR screen-name EQ 'AUFK-ZZEBELP1'.
*        screen-required = '0'.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*  ENDIF.
** GST - 05/06/2015 <-
*
*  IF sy-tcode = 'COR3' OR gv_status = 'I0045'. "or gv_status = 'I0002'.
*    LOOP AT SCREEN.
*      screen-input = '0'.
*      MODIFY SCREEN.
*    ENDLOOP.
*  ELSE.
*    lv_string2 = '(SAPLCOKO)CAUFVD-AUFNR'.
*    ASSIGN (lv_string2) TO <fs2>.
*    CHECK sy-subrc EQ 0.
*    IMPORT gv_order_number TO lv_order FROM MEMORY ID 'ORDER'.
*    IF <fs2> NE lv_order. "si NO es la orden que estamos modificando por batch input a través del report de planif, sombreamos campos.
*      LOOP AT SCREEN.
** GST - 09/03/2015 ->
** Habilitar temp. campo secuencia:
**        if screen-name eq 'AUFK-ZSECUENCIA' or screen-name eq 'AUFK-ZFEC_ENTREG1'
**          or screen-name eq 'AUFK-ZFEC_ENTREG2' or screen-name eq 'AUFK-ZFEC_ENTREG3'. "'AUFK-ZSECUENCIA'.
*        IF screen-name EQ 'AUFK-ZZFEC_ENTREG1'
*          OR screen-name EQ 'AUFK-ZZFEC_ENTREG2' OR screen-name EQ 'AUFK-ZZFEC_ENTREG3'. "'AUFK-ZSECUENCIA'.
** GST - 09/03/2015 <-
*          screen-input = 0.
*          MODIFY SCREEN.
*        ENDIF.
*
** GST - 05/06/2015 ->
*        IF screen-name EQ 'AUFK-ZZKUNNR1' OR screen-name EQ 'AUFK-ZZEBELN1' OR screen-name EQ 'AUFK-ZZEBELP1'.
*          screen-required = '0'.
*          MODIFY SCREEN.
*        ENDIF.
** GST - 05/06/2015 <-
*
*      ENDLOOP.
*    ENDIF.
*    UNASSIGN <fs2>.
*  ENDIF.
*
** INI CGIJON - 04.05.17 - SI LA ORDEN NO ES DE LA CLASE ZI02 NI ZI05, OCULTAMOS EL CAMPO ZAUFNR_ROLLO
*  IF gv_sfcpf <> 'ZI02' AND gv_sfcpf <> 'ZI05'.
*    LOOP AT SCREEN.
*      IF screen-name EQ 'AUFK-ZZAUFNR_ROLLO'.
*        screen-active = 0.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*  ENDIF.
** FIN CGIJON - 04.05.17
*
*


ENDMODULE.                 " STATUS_5100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  DECIDE_DYNPRO  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE decide_dynpro OUTPUT.

* en función de la clase de orden, activamos las pestañas, haciendo el
* resto ocultas.
* los nombres de las pestañas son:
*    ZZT1 - datos hinojosa
*    ZZT2 -	Datos generales
*    ZZT3 -	Aditivos y tratamientos
*    ZZT4 -	Dimensiones
*    ZZT5 -	Utillaje

* DBM 01.09.2017 >>> Activando y desactivando pestaña en función de especificaciones
*  IF gv_sfcpf = 'ZC01' OR gv_sfcpf = 'ZC02' OR gv_sfcpf = 'ZC03' OR
*     gv_sfcpf = 'ZC04' OR gv_sfcpf = 'ZC05'.
*
*    IF tabstrip-activetab IS INITIAL.
*      tabstrip-activetab = 'ZZT2'.
*    ENDIF.
*
*    LOOP AT SCREEN.
*      IF screen-name = 'ZZT1'.
*        screen-invisible = '1'.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*
*  ELSE.
*    IF tabstrip-activetab IS INITIAL.
*      tabstrip-activetab = 'ZZT1'.
*    ENDIF.
*
*    LOOP AT SCREEN.
*      IF screen-name = 'ZZT2' OR screen-name = 'ZZT3' OR
*         screen-name = 'ZZT4' OR screen-name = 'ZZT5'.
*        screen-invisible = '1'.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*  ENDIF.

  IF gv_sfcpf = 'ZC01' OR gv_sfcpf = 'ZC02' OR gv_sfcpf = 'ZC03' OR
     gv_sfcpf = 'ZC04' OR gv_sfcpf = 'ZC05'.

    IF tabstrip-activetab IS INITIAL.
      tabstrip-activetab = 'ZZT2'.
    ENDIF.

    LOOP AT SCREEN.
      IF screen-name = 'ZZT1'.
        screen-invisible = '1'.
        MODIFY SCREEN.
      ELSEIF gv_sfcpf = 'ZC01' AND screen-name = 'ZZT5'.
        screen-invisible = '1'.
        MODIFY SCREEN.
      ELSEIF gv_sfcpf = 'ZC02' AND screen-name = 'ZZT4'.
        screen-invisible = '1'.
        MODIFY SCREEN.
      ELSEIF gv_sfcpf = 'ZC03' AND ( screen-name = 'ZZT3' OR screen-name = 'ZZT5' ).
        screen-invisible = '1'.
        MODIFY SCREEN.
      ELSEIF gv_sfcpf = 'ZC04' AND ( screen-name = 'ZZT3' OR screen-name = 'ZZT4' OR screen-name = 'ZZT5' ).
        screen-invisible = '1'.
        MODIFY SCREEN.
      ELSEIF ( gv_sfcpf = 'ZC05' ) AND ( screen-name = 'ZZT2' OR screen-name = 'ZZT3' OR screen-name = 'ZZT4' OR screen-name = 'ZZT5' ).
        screen-invisible = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.

  ELSE.
    IF tabstrip-activetab IS INITIAL.
      tabstrip-activetab = 'ZZT1'.
    ENDIF.

    LOOP AT SCREEN.
      IF screen-name = 'ZZT2' OR screen-name = 'ZZT3' OR
         screen-name = 'ZZT4' OR screen-name = 'ZZT5'.
        screen-invisible = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

* DBM 01.09.2017 <<< Activando y desactivando pestaña en función de especificaciones


  CASE tabstrip-activetab.
    WHEN 'ZZT1'.
      gv_screen = '9998'. "datos hinojosa
    WHEN 'ZZT2'.
      gv_screen = '9999'. "datos generales cipasi
    WHEN 'ZZT3'.
      gv_screen = '9996'. "aditivos y tratamientos cipasi
    WHEN 'ZZT4'.
      gv_screen = '9997'. "dimensiones cipasi
    WHEN 'ZZT5'.
      gv_screen = '9995'. "utillaje cipasi

  ENDCASE.

ENDMODULE.                 " DECIDE_DYNPRO  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_9998  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9998 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.


  DATA: lv_order   LIKE aufk-aufnr,
        lv_string2 TYPE string.

  FIELD-SYMBOLS: <fs2> TYPE any.

  IF gv_sfcpf = 'ZI02'.
    LOOP AT SCREEN.
      IF screen-group1 = 'GR2'.
        screen-active = '0'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

* GST - 05/06/2015 ->
  IF gv_sfcpf = 'ZI05'.
    LOOP AT SCREEN.
      IF screen-name EQ 'AUFK-ZZKUNNR1' OR screen-name EQ 'AUFK-ZZEBELN1' OR screen-name EQ 'AUFK-ZZEBELP1'.
        screen-required = '0'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
* GST - 05/06/2015 <-

  IF sy-tcode = 'COR3' OR gv_status = 'I0045'. "or gv_status = 'I0002'.
    LOOP AT SCREEN.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDLOOP.
  ELSE.
    lv_string2 = '(SAPLCOKO)CAUFVD-AUFNR'.
    ASSIGN (lv_string2) TO <fs2>.
    CHECK sy-subrc EQ 0.
    IMPORT gv_order_number TO lv_order FROM MEMORY ID 'ORDER'.
    IF <fs2> NE lv_order. "si NO es la orden que estamos modificando por batch input a través del report de planif, sombreamos campos.
      LOOP AT SCREEN.
* GST - 09/03/2015 ->
* Habilitar temp. campo secuencia:
*        if screen-name eq 'AUFK-ZSECUENCIA' or screen-name eq 'AUFK-ZFEC_ENTREG1'
*          or screen-name eq 'AUFK-ZFEC_ENTREG2' or screen-name eq 'AUFK-ZFEC_ENTREG3'. "'AUFK-ZSECUENCIA'.
        IF screen-name EQ 'AUFK-ZZFEC_ENTREG1'
          OR screen-name EQ 'AUFK-ZZFEC_ENTREG2' OR screen-name EQ 'AUFK-ZZFEC_ENTREG3'. "'AUFK-ZSECUENCIA'.
* GST - 09/03/2015 <-
          screen-input = 0.
          MODIFY SCREEN.
        ENDIF.

* GST - 05/06/2015 ->
        IF screen-name EQ 'AUFK-ZZKUNNR1' OR screen-name EQ 'AUFK-ZZEBELN1' OR screen-name EQ 'AUFK-ZZEBELP1'.
          screen-required = '0'.
          MODIFY SCREEN.
        ENDIF.
* GST - 05/06/2015 <-

      ENDLOOP.
    ENDIF.
    UNASSIGN <fs2>.
  ENDIF.

* INI CGIJON - 04.05.17 - SI LA ORDEN NO ES DE LA CLASE ZI02 NI ZI05, OCULTAMOS EL CAMPO ZAUFNR_ROLLO
  IF gv_sfcpf <> 'ZI02' AND gv_sfcpf <> 'ZI05'.
    LOOP AT SCREEN.
      IF screen-name EQ 'AUFK-ZZAUFNR_ROLLO'.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
* FIN CGIJON - 04.05.17

ENDMODULE.                 " STATUS_9998  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_9999  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9999 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.

* OBTENEMOS CAMPOS DE OTRAS TABLAS PARA MOSTRARLOS EN LA DYNPRO
  IF aufk-zzkunnr4 IS NOT INITIAL.
    PERFORM get_descripcion_cli.
  ENDIF.

  IF aufk-zzlgort IS NOT INITIAL.
    PERFORM get_descripcion_almacen.
  ENDIF.

  IF gv_plnbez IS NOT INITIAL.
    PERFORM get_datos_material.
  ENDIF.

  IF aufk-zzdestcmcr IS NOT INITIAL.
    PERFORM get_descripcion_dest.
  ENDIF.


* OCULTAMOS CAMPOS EN FUNCIÓN DE LA CLASE DE ORDEN
*  IF sy-tcode = 'COR3'.
*    LOOP AT SCREEN.
*      screen-input = '0'.
*      MODIFY SCREEN.
*    ENDLOOP.
*
*  ELSE.

  CASE gv_sfcpf .
    WHEN 'ZC01'.
*        LOOP AT SCREEN.
*          IF screen-group1 = 'G1' OR screen-group1 = 'G2' OR
*            screen-group1 = 'G3' OR screen-group1 = 'G4' OR
*             screen-group1 = 'G5'.
*            screen-active = '0'.
*            MODIFY SCREEN.
*          ENDIF.
*        ENDLOOP.

    WHEN 'ZC02'.
      LOOP AT SCREEN.
*          IF screen-group1 = 'G1' OR screen-group1 = 'G2' OR
*            screen-group1 = 'G3' OR screen-group1 = 'G4'.
*            screen-active = '0'.
*            MODIFY SCREEN.
*          ELSE.
*            screen-invisible = '1'.
*            MODIFY SCREEN.
*          ENDIF.
        IF screen-group1 = 'G5'.
          screen-input = '0'.
          screen-invisible = '1'.
          MODIFY SCREEN.
        ENDIF.

      ENDLOOP.

    WHEN 'ZC03'.
      LOOP AT SCREEN.
*          IF screen-group1 = 'G2' OR screen-group1 = 'G3'.
*            screen-active = '0'.
*            MODIFY SCREEN.
*          ELSE.
*            screen-invisible = '1'.
*            MODIFY SCREEN.
*          ENDIF.
        IF screen-group1 <> 'G2' AND screen-group1 <> 'G3'.
          screen-input = '0'.
          screen-invisible = '1'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.

    WHEN 'ZC04'.
      LOOP AT SCREEN.
*          IF screen-group1 = 'G3' OR screen-group1 = 'G4'.
*            screen-active = '0'.
*            MODIFY SCREEN.
*          ELSE.
*            screen-invisible = '1'.
*            MODIFY SCREEN.
*          ENDIF.
        IF screen-group1 <> 'G3' AND screen-group1 <> 'G4'.
          screen-input = '0'.
          screen-invisible = '1'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.

    WHEN 'ZC05'.
      LOOP AT SCREEN.
        screen-input = '0'.
        screen-invisible = '1'.
        MODIFY SCREEN.
      ENDLOOP.

  ENDCASE.

*   DBM 19.10.2017 - Comprobar rol de usuario para ver si puede modificar datos generales
  IF sy-tcode = 'COR3'.
    LOOP AT SCREEN.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDLOOP.
  ELSE.
    AUTHORITY-CHECK OBJECT 'ZPP01'
    ID 'ACTVT' FIELD '01'.
    IF sy-subrc = 0.
      LOOP AT SCREEN.
        IF screen-group2 = 'MOD' AND screen-invisible <> '1'. "DBM al poner un campo como entrada se hace visible
          screen-input = '1'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ELSE.
      LOOP AT SCREEN.
        screen-input = '0'.
        screen-required ='0'.
        MODIFY SCREEN.
      ENDLOOP.
    ENDIF.
  ENDIF.


ENDMODULE.                 " STATUS_9999  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_9996  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9996 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.


* OCULTAMOS CAMPOS EN FUNCIÓN DE LA CLASE DE ORDEN
  IF sy-tcode = 'COR3'.
    LOOP AT SCREEN.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDLOOP.

  ELSE.
    CASE gv_sfcpf .
      WHEN 'ZC01' OR 'ZC02'.
        LOOP AT SCREEN.
          screen-active = '1'.
          MODIFY SCREEN.
        ENDLOOP.

      WHEN OTHERS.
        LOOP AT SCREEN.
          screen-invisible = '1'.
          MODIFY SCREEN.
        ENDLOOP.
    ENDCASE.
  ENDIF.

ENDMODULE.                 " STATUS_9996  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_9997  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9997 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.


  IF gv_plnbez IS NOT INITIAL.
    PERFORM get_dimensiones_material.
    IF gv_sfcpf <> 'ZC03' AND ( sy-tcode = 'COR1' OR sy-tcode = 'COR2' ).
      PERFORM calcular_dimensiones.
    ENDIF.
  ENDIF.


* OCULTAMOS CAMPOS EN FUNCIÓN DE LA CLASE DE ORDEN
  IF sy-tcode = 'COR3'.
    IF gv_sfcpf = 'ZC03'.
      LOOP AT SCREEN.
        IF screen-group1 <> 'G1'.
          screen-invisible = '1'.
        ENDIF.
        screen-input = '0'.
        MODIFY SCREEN.
      ENDLOOP.
    ELSE.
      LOOP AT SCREEN.
        screen-input = '0'.
        MODIFY SCREEN.
      ENDLOOP.
    ENDIF.

  ELSE.
    CASE gv_sfcpf .
      WHEN 'ZC01'.
        LOOP AT SCREEN.
          screen-active = '1'.
          MODIFY SCREEN.
        ENDLOOP.
      WHEN 'ZC03'.
        LOOP AT SCREEN.
          IF screen-group1 = 'G1'.
            screen-active = '1'.
          ELSE.
            screen-invisible = '1'.
          ENDIF.
          MODIFY SCREEN.
        ENDLOOP.
      WHEN OTHERS.
        LOOP AT SCREEN.
          screen-invisible = '1'.
          MODIFY SCREEN.
        ENDLOOP.
    ENDCASE.
  ENDIF.

ENDMODULE.                 " STATUS_9997  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_9995  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9995 OUTPUT.
*  SET PF-STATUS 'xxxxxxxx'.
*  SET TITLEBAR 'xxx'.

* OCULTAMOS CAMPOS EN FUNCIÓN DE LA CLASE DE ORDEN
  IF sy-tcode = 'COR3'.
    LOOP AT SCREEN.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDLOOP.

  ELSE.
    CASE gv_sfcpf .
      WHEN 'ZC02'.
        LOOP AT SCREEN.
          screen-active = '1'.
          MODIFY SCREEN.
        ENDLOOP.

      WHEN OTHERS.
        LOOP AT SCREEN.
          screen-invisible = '1'.
          MODIFY SCREEN.
        ENDLOOP.
    ENDCASE.
  ENDIF.

* EDIEGO CIPASI 32PP016 13/09/2017 -->
* recuperamos los utillajes almacenados en tabla
*  SELECT * FROM ZTPP0013
*    INTO table gt_utillajes
*    WHERE aufnr = GV_AUFNR.

  IF g_custom_container IS INITIAL.
*   Creamos el container principal
    CREATE OBJECT g_custom_container
      EXPORTING
        container_name = gc_container.

*   Creamos el objeto para el ALV
    CREATE OBJECT g_grid
      EXPORTING
        i_parent = g_custom_container.

*   Para los eventos
    CREATE OBJECT g_application.
    SET HANDLER g_application->handle_data_changed          FOR g_grid.
    SET HANDLER g_application->handle_data_changed_finished FOR g_grid.

*   Controlamos si estamos visualizando
    IF sy-tcode NE 'COR3'.
      SET HANDLER g_application->handle_toolbar               FOR g_grid.
      SET HANDLER g_application->handle_user_command          FOR g_grid.
    ENDIF.

*   Cuando es editable -> para que escuche los eventos: ENTER...
    CALL METHOD g_grid->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

*   Obtenemos tabla de memoria compartida y utillajes de WORKORDER_UPDATE para guardarlo en BBDD
    CALL FUNCTION 'ZPP_GET_UTILLAJES'
      IMPORTING
        ev_copiatro  = aufk-zzcopiatro
        ev_juegocli  = aufk-zzjuegocli
        et_zttpm0007 = gt_utillajes.

*   Mostramos el ALV
    PERFORM mostrar_alv.

* Refrescamos el ALV
  ELSE.
    PERFORM refrescar_alv.
  ENDIF.

ENDMODULE.                 " STATUS_9995  OUTPUT

* EDIEGO CIPASI 32PP016 13/09/2017 <--
