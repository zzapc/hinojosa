*&---------------------------------------------------------------------*
*&  Include           ZXCO1U17
*&---------------------------------------------------------------------*

DATA: ls_aufk     TYPE aufk,
      ls_ztpp0002 TYPE ztpp0002,
      ls_afko     TYPE afko,
      lv_ancho    TYPE zancho,
      ls_vbep     TYPE vbep,
      ls_eket     TYPE eket,
      lv_spebe    TYPE spebe,
      ls_vbak     TYPE vbak,
      ls_ekpo     TYPE ekpo,
      ls_vbap     TYPE vbap,
      lv_lprio    TYPE lprio.

IF sy-tcode <> 'COR3'.
  IF gv_status <> 'I0045'.
    " 1. Chequeos campos cliente, pedido, posición estén rellenos: Mensaje informativo
    IF  aufk-zzkunnr1 IS NOT INITIAL OR aufk-zzebeln1 IS NOT INITIAL OR aufk-zzebelp1 IS NOT INITIAL.
      IF aufk-zzkunnr1 IS INITIAL OR aufk-zzebeln1 IS INITIAL OR aufk-zzebelp1 IS INITIAL.
        MESSAGE i001(zpp).
      ENDIF.
    ENDIF.

    IF  aufk-zzkunnr2 IS NOT INITIAL OR aufk-zzebeln2 IS NOT INITIAL OR aufk-zzebelp2 IS NOT INITIAL.
      IF aufk-zzkunnr2 IS INITIAL OR aufk-zzebeln2 IS INITIAL OR aufk-zzebelp2 IS INITIAL.
        MESSAGE i001(zpp).
      ENDIF.
    ENDIF.

    IF  aufk-zzkunnr3 IS NOT INITIAL OR aufk-zzebeln3 IS NOT INITIAL OR aufk-zzebelp3 IS NOT INITIAL.
      IF aufk-zzkunnr3 IS INITIAL OR aufk-zzebeln3 IS INITIAL OR aufk-zzebelp3 IS INITIAL.
        MESSAGE i001(zpp).
      ENDIF.
    ENDIF.

    " 2. Rellenar la fecha de entrega si tenemos pedido/posición:
    IF aufk-zzebeln1 IS NOT INITIAL AND aufk-zzebelp1 IS NOT INITIAL.

      CLEAR: ls_vbep.
*    select single mbdat lifsp into (aufk-zzfec_entreg1, lv_lifsp)
      SELECT SINGLE * INTO ls_vbep
        FROM vbep
        WHERE vbeln = aufk-zzebeln1
        AND posnr = aufk-zzebelp1
        AND etenr = '1'.

* GST - 04/03/2015 ->
      IF ls_vbep IS NOT INITIAL. " Ventas
        aufk-zzfec_entreg1 = ls_vbep-mbdat.

** GST - 25/05/2015 ->
*      CLEAR lv_lprio.
*      SELECT SINGLE lprio INTO lv_lprio
*        FROM vbap
*        WHERE vbeln = aufk-zzebeln1
*        AND posnr = aufk-zzebelp1.
*      IF lv_lprio = '01'.
*        aufk-zzurgt1 = 'X'.
*      ENDIF.
** GST - 25/05/2015 <-
        CLEAR lv_spebe.
        IF ls_vbep-lifsp IS NOT INITIAL.
          SELECT SINGLE spebe INTO lv_spebe
           FROM tvls
           WHERE lifsp = ls_vbep-lifsp.

          IF lv_spebe = 'X'. " Mensaje de error
            MESSAGE i013(zpp).
          ELSE.
            " Comprobar bloqueo posición de reparto (VBAK):
            CLEAR: ls_vbak, lv_spebe.
            SELECT SINGLE * INTO ls_vbak
              FROM vbak
              WHERE vbeln = ls_vbep-vbeln.
            IF ls_vbak-lifsk IS NOT INITIAL.
              SELECT SINGLE spebe INTO lv_spebe
                FROM tvls
                WHERE lifsp = ls_vbak-lifsk.
              IF lv_spebe = 'X'. " Mensaje de error
                MESSAGE i013(zpp).
              ENDIF.
            ENDIF.
          ENDIF.
        ELSE.
          " Comprobar bloqueo posición de reparto (VBAK):
          CLEAR: ls_vbak, lv_spebe.
          SELECT SINGLE * INTO ls_vbak
            FROM vbak
            WHERE vbeln = ls_vbep-vbeln.
          IF ls_vbak-lifsk IS NOT INITIAL.
            SELECT SINGLE spebe INTO lv_spebe
              FROM tvls
              WHERE lifsp = ls_vbak-lifsk.
            IF lv_spebe = 'X'. " Mensaje de error
              MESSAGE i013(zpp).
            ENDIF.
          ENDIF.
        ENDIF.

      ELSE. " Compras
* GST - 04/03/2015 <-

* GST - 04/03/2015 ->
        CLEAR ls_eket.
        SELECT SINGLE * INTO ls_eket
          FROM eket
          WHERE ebeln = aufk-zzebeln1
          AND ebelp = aufk-zzebelp1+1(5)
          AND etenr = '1'.

        IF ls_eket IS NOT INITIAL.
          aufk-zzfec_entreg1 = ls_eket-eindt.
** GST - 25/05/2015 ->
*        CLEAR lv_lprio.
*        SELECT SINGLE lprio INTO lv_lprio
*          FROM ekpv
*          WHERE ebeln = aufk-zzebeln1
*          AND ebelp = aufk-zzebelp1+1(5).
*        IF lv_lprio = '01'.
*          aufk-zzurgt1 = 'X'.
*        ENDIF.
** GST - 25/05/2015 <-
          CLEAR: ls_ekpo.
          SELECT SINGLE * INTO ls_ekpo
            FROM ekpo
            WHERE ebeln = ls_eket-ebeln
            AND ebelp = ls_eket-ebelp.
          IF ls_ekpo IS NOT INITIAL.
            IF ls_ekpo-zzbloq_plan = 'X'. " Mensaje de error
              MESSAGE i013(zpp).
            ELSE.
              IF ls_ekpo-loekz <> 'L' AND ls_ekpo-eglkz <> 'X' AND ls_ekpo-zzabgru IS INITIAL
                AND ls_ekpo-retpo <> 'X'. " Todo ok
              ELSE.
                MESSAGE i013(zpp).
              ENDIF.
            ENDIF.
          ELSE. " Mensaje de error - Pedido/posición no existe
            MESSAGE i014(zpp).
          ENDIF.

        ENDIF.

* GST - 04/03/2015 <-

*      IF aufk-zzfec_entreg1 IS INITIAL.
*        SELECT SINGLE eindt INTO aufk-zzfec_entreg1
*          FROM eket
*          WHERE ebeln = aufk-zzebeln1
*          AND ebelp = aufk-zzebelp1+1(5)
*          AND etenr = '1'.
*      ENDIF.

* GST - 04/03/2015 ->
      ENDIF.
* GST - 04/03/2015 <-

    ELSE.
      CLEAR aufk-zzfec_entreg1.
*    CLEAR aufk-zzurgt1.
    ENDIF.

    IF aufk-zzebeln2 IS NOT INITIAL AND aufk-zzebelp2 IS NOT INITIAL.
      CLEAR: ls_vbep.
*    SELECT SINGLE mbdat INTO aufk-zzfec_entreg2
      SELECT SINGLE * INTO ls_vbep
        FROM vbep
        WHERE vbeln = aufk-zzebeln2
        AND posnr = aufk-zzebelp2
        AND etenr = '1'.

* GST - 04/03/2015 ->
      IF ls_vbep IS NOT INITIAL. " Ventas
        aufk-zzfec_entreg2 = ls_vbep-mbdat.
** GST - 25/05/2015 ->
*      CLEAR lv_lprio.
*      SELECT SINGLE lprio INTO lv_lprio
*        FROM vbap
*        WHERE vbeln = aufk-zzebeln2
*        AND posnr = aufk-zzebelp2.
*      IF lv_lprio = '01'.
*        aufk-zzurgt2 = 'X'.
*      ENDIF.
** GST - 25/05/2015 <-
        CLEAR lv_spebe.
        IF ls_vbep-lifsp IS NOT INITIAL.
          SELECT SINGLE spebe INTO lv_spebe
           FROM tvls
           WHERE lifsp = ls_vbep-lifsp.

          IF lv_spebe = 'X'. " Mensaje de error
            MESSAGE i013(zpp).
          ELSE.
            " Comprobar bloqueo posición de reparto (VBAK):
            CLEAR: ls_vbak, lv_spebe.
            SELECT SINGLE * INTO ls_vbak
              FROM vbak
              WHERE vbeln = ls_vbep-vbeln.
            IF ls_vbak-lifsk IS NOT INITIAL.
              SELECT SINGLE spebe INTO lv_spebe
                FROM tvls
                WHERE lifsp = ls_vbak-lifsk.
              IF lv_spebe = 'X'. " Mensaje de error
                MESSAGE i013(zpp).
              ENDIF.
            ENDIF.
          ENDIF.
        ELSE.
          " Comprobar bloqueo posición de reparto (VBAK):
          CLEAR: ls_vbak, lv_spebe.
          SELECT SINGLE * INTO ls_vbak
            FROM vbak
            WHERE vbeln = ls_vbep-vbeln.
          IF ls_vbak-lifsk IS NOT INITIAL.
            SELECT SINGLE spebe INTO lv_spebe
              FROM tvls
              WHERE lifsp = ls_vbak-lifsk.
            IF lv_spebe = 'X'. " Mensaje de error
              MESSAGE i013(zpp).
            ENDIF.
          ENDIF.
        ENDIF.

      ELSE. " Compras
* GST - 04/03/2015 <-

* GST - 04/03/2015 ->
        CLEAR ls_eket.
        SELECT SINGLE * INTO ls_eket
          FROM eket
          WHERE ebeln = aufk-zzebeln2
          AND ebelp = aufk-zzebelp2+1(5)
          AND etenr = '1'.

        IF ls_eket IS NOT INITIAL.
          aufk-zzfec_entreg2 = ls_eket-eindt.
** GST - 25/05/2015 ->
*        CLEAR lv_lprio.
*        SELECT SINGLE lprio INTO lv_lprio
*          FROM ekpv
*          WHERE ebeln = aufk-zzebeln2
*          AND ebelp = aufk-zzebelp2+1(5).
*        IF lv_lprio = '01'.
*          aufk-zzurgt2 = 'X'.
*        ENDIF.
** GST - 25/05/2015 <-
          CLEAR: ls_ekpo.
          SELECT SINGLE * INTO ls_ekpo
            FROM ekpo
            WHERE ebeln = ls_eket-ebeln
            AND ebelp = ls_eket-ebelp.
          IF ls_ekpo IS NOT INITIAL.
            IF ls_ekpo-zzbloq_plan = 'X'. " Mensaje de error
              MESSAGE i013(zpp).
            ELSE.
              IF ls_ekpo-loekz <> 'L' AND ls_ekpo-eglkz <> 'X' AND ls_ekpo-zzabgru IS INITIAL
                AND ls_ekpo-retpo <> 'X'. " Todo ok
              ELSE.
                MESSAGE i013(zpp).
              ENDIF.
            ENDIF.
          ELSE. " Mensaje de error - Pedido/posición no existe
            MESSAGE i014(zpp).
          ENDIF.

        ENDIF.

* GST - 04/03/2015 <-

*    IF aufk-zzfec_entreg2 IS INITIAL.
*      SELECT SINGLE eindt INTO aufk-zzfec_entreg2
*        FROM eket
*        WHERE ebeln = aufk-zzebeln2
*        AND ebelp = aufk-zzebelp2+1(5)
*        AND etenr = '1'.
*    ENDIF.

* GST - 04/03/2015 ->
      ENDIF.
* GST - 04/03/2015 <-

    ELSE.
      CLEAR aufk-zzfec_entreg2.
*    CLEAR aufk-zzurgt2.
    ENDIF.

    IF aufk-zzebeln3 IS NOT INITIAL AND aufk-zzebelp3 IS NOT INITIAL.

      CLEAR: ls_vbep.
*    SELECT SINGLE mbdat INTO aufk-zzfec_entreg2
      SELECT SINGLE * INTO ls_vbep
        FROM vbep
        WHERE vbeln = aufk-zzebeln3
        AND posnr = aufk-zzebelp3
        AND etenr = '1'.

* GST - 04/03/2015 ->
      IF ls_vbep IS NOT INITIAL. " Ventas
        aufk-zzfec_entreg3 = ls_vbep-mbdat.
** GST - 25/05/2015 ->
*      CLEAR lv_lprio.
*      SELECT SINGLE lprio INTO lv_lprio
*        FROM vbap
*        WHERE vbeln = aufk-zzebeln3
*        AND posnr = aufk-zzebelp3.
*      IF lv_lprio = '01'.
*        aufk-zzurgt3 = 'X'.
*      ENDIF.
** GST - 25/05/2015 <-
        CLEAR lv_spebe.
        IF ls_vbep-lifsp IS NOT INITIAL.
          SELECT SINGLE spebe INTO lv_spebe
           FROM tvls
           WHERE lifsp = ls_vbep-lifsp.

          IF lv_spebe = 'X'. " Mensaje de error
            MESSAGE i013(zpp).
          ELSE.
            " Comprobar bloqueo posición de reparto (VBAK):
            CLEAR: ls_vbak, lv_spebe.
            SELECT SINGLE * INTO ls_vbak
              FROM vbak
              WHERE vbeln = ls_vbep-vbeln.
            IF ls_vbak-lifsk IS NOT INITIAL.
              SELECT SINGLE spebe INTO lv_spebe
                FROM tvls
                WHERE lifsp = ls_vbak-lifsk.
              IF lv_spebe = 'X'. " Mensaje de error
                MESSAGE i013(zpp).
              ENDIF.
            ENDIF.
          ENDIF.

        ELSE.
          " Comprobar bloqueo posición de reparto (VBAK):
          CLEAR: ls_vbak, lv_spebe.
          SELECT SINGLE * INTO ls_vbak
            FROM vbak
            WHERE vbeln = ls_vbep-vbeln.
          IF ls_vbak-lifsk IS NOT INITIAL.
            SELECT SINGLE spebe INTO lv_spebe
              FROM tvls
              WHERE lifsp = ls_vbak-lifsk.
            IF lv_spebe = 'X'. " Mensaje de error
              MESSAGE i013(zpp).
            ENDIF.
          ENDIF.

        ENDIF.

      ELSE. " Compras
* GST - 04/03/2015 <-

* GST - 04/03/2015 ->
        CLEAR ls_eket.
        SELECT SINGLE * INTO ls_eket
          FROM eket
          WHERE ebeln = aufk-zzebeln3
          AND ebelp = aufk-zzebelp3+1(5)
          AND etenr = '1'.

        IF ls_eket IS NOT INITIAL.
          aufk-zzfec_entreg3 = ls_eket-eindt.
** GST - 25/05/2015 ->
*        CLEAR lv_lprio.
*        SELECT SINGLE lprio INTO lv_lprio
*          FROM ekpv
*          WHERE ebeln = aufk-zzebeln3
*          AND ebelp = aufk-zzebelp3+1(5).
*        IF lv_lprio = '01'.
*          aufk-zzurgt3 = 'X'.
*        ENDIF.
** GST - 25/05/2015 <-
          CLEAR: ls_ekpo.
          SELECT SINGLE * INTO ls_ekpo
            FROM ekpo
            WHERE ebeln = ls_eket-ebeln
            AND ebelp = ls_eket-ebelp.
          IF ls_ekpo IS NOT INITIAL.
            IF ls_ekpo-zzbloq_plan = 'X'. " Mensaje de error
              MESSAGE i013(zpp).
            ELSE.
              IF ls_ekpo-loekz <> 'L' AND ls_ekpo-eglkz <> 'X' AND ls_ekpo-zzabgru IS INITIAL
                AND ls_ekpo-retpo <> 'X'. " Todo ok
              ELSE.
                MESSAGE i013(zpp).
              ENDIF.
            ENDIF.
          ELSE. " Mensaje de error - Pedido/posición no existe
            MESSAGE i014(zpp).
          ENDIF.

        ENDIF.

* GST - 04/03/2015 <-


*    IF aufk-zzfec_entreg3 IS INITIAL.
*      SELECT SINGLE eindt INTO aufk-zzfec_entreg3
*        FROM eket
*        WHERE ebeln = aufk-zzebeln3
*        AND ebelp = aufk-zzebelp2+1(5)
*        AND etenr = '1'.
*    ENDIF.

* GST - 04/03/2015 ->
      ENDIF.
* GST - 04/03/2015 <-

    ELSE.
      CLEAR aufk-zzfec_entreg3.
*    CLEAR aufk-zzurgt3.
    ENDIF.

    " 3. Rellenar rollos / tornadas:
    CLEAR: ls_aufk, ls_afko, ls_ztpp0002.
    IF gv_sfcpf = 'ZI01' AND aufk-zzebeln1 IS NOT INITIAL AND aufk-zzebelp1 IS NOT INITIAL.
      SELECT SINGLE * INTO ls_aufk
        FROM aufk
        WHERE zzebeln1 = aufk-zzebeln1
        AND zzebelp1 = aufk-zzebelp1
        AND auart = 'ZI02'.

      IF ls_aufk IS NOT INITIAL. " Sacamos los datos de la orden de bobina
        SELECT SINGLE * INTO ls_afko
          FROM afko
          WHERE aufnr = ls_aufk-aufnr.

        CLEAR lv_ancho.
        SELECT SINGLE zzancho INTO lv_ancho
          FROM mara
          WHERE matnr = ls_afko-plnbez.

        IF lv_ancho IS NOT INITIAL AND ls_afko-gamng IS NOT INITIAL.
          SELECT SINGLE rollos1 tor1 rollos2 tor2 INTO (aufk-zzrollos1, aufk-zztor1, aufk-zzrollos2, aufk-zztor2)
            FROM ztpp0002
            WHERE ancho = lv_ancho
            AND cantidad_de <= ls_afko-gamng
            AND cantidad_hasta >= ls_afko-gamng.
        ENDIF.

      ELSE. "Sacamos los datos de la orden de rollo
        CLEAR lv_ancho.
        SELECT SINGLE zzancho INTO lv_ancho
          FROM mara
          WHERE matnr = gv_plnbez.

        IF lv_ancho IS NOT INITIAL AND gv_gamng IS NOT INITIAL.
          SELECT SINGLE rollos1 tor1 rollos2 tor2 INTO (aufk-zzrollos1, aufk-zztor1, aufk-zzrollos2, aufk-zztor2)
            FROM ztpp0002
            WHERE ancho = lv_ancho
            AND cantidad_de <= gv_gamng
            AND cantidad_hasta >= gv_gamng.

        ENDIF.
      ENDIF.
* GST - 06/03/2015 ->
*  ELSE.
*    CLEAR: aufk-zzrollos1, aufk-zztor1, aufk-zzrollos2, aufk-zztor2.
* GST - 06/03/2015 <-
    ENDIF.


    " 4. Paso de modificaciones a la orden de producción:
    e_coci_aufk-zzkunnr1 = aufk-zzkunnr1.
    e_coci_aufk-zzkunnr2 = aufk-zzkunnr2.
    e_coci_aufk-zzkunnr3 = aufk-zzkunnr3.
    e_coci_aufk-zzebeln1 = aufk-zzebeln1.
    e_coci_aufk-zzebelp1 = aufk-zzebelp1.
    e_coci_aufk-zzebeln2 = aufk-zzebeln2.
    e_coci_aufk-zzebelp2 = aufk-zzebelp2.
    e_coci_aufk-zzebeln3 = aufk-zzebeln3.
    e_coci_aufk-zzebelp3 = aufk-zzebelp3.
    e_coci_aufk-zzrollos1 = aufk-zzrollos1.
    e_coci_aufk-zztor1 = aufk-zztor1.
    e_coci_aufk-zzrollos2 = aufk-zzrollos2.
    e_coci_aufk-zztor2 = aufk-zztor2.
    e_coci_aufk-zzrollos3 = aufk-zzrollos3.
    e_coci_aufk-zztor3 = aufk-zztor3.
    e_coci_aufk-zzmotivo = aufk-zzmotivo.
    e_coci_aufk-zzsecuencia = aufk-zzsecuencia.
    e_coci_aufk-zzfec_entreg1 = aufk-zzfec_entreg1.
    e_coci_aufk-zzfec_entreg2 = aufk-zzfec_entreg2.
    e_coci_aufk-zzfec_entreg3 = aufk-zzfec_entreg3.
* GST - 25/05/2015 ->
    e_coci_aufk-zzurgt1 = aufk-zzurgt1.
    e_coci_aufk-zzurgt2 = aufk-zzurgt2.
    e_coci_aufk-zzurgt3 = aufk-zzurgt3.
* GST - 25/05/2015 <-

* ini cgijon - 04.05.17 - insertamos la orden de rollo
    e_coci_aufk-zzaufnr_rollo = aufk-zzaufnr_rollo.
* fin cgijon - 04.05.17 - insertamos la orden de rollo
  else.
    MOVE-CORRESPONDING aufk to e_coci_aufk.
  ENDIF.


*&---------------------------------------------------------------------*
** CAMPOS CIPASI
*&---------------------------------------------------------------------*
  IF gv_sfcpf = 'ZC01' OR gv_sfcpf = 'ZC02' OR gv_sfcpf = 'ZC03' OR
     gv_sfcpf = 'ZC04' OR gv_sfcpf = 'ZC05'.

    e_coci_aufk-zzaufnr_ext  = aufk-zzaufnr_ext.
    e_coci_aufk-zzlgort  = aufk-zzlgort.
    e_coci_aufk-zzkunnr4  = aufk-zzkunnr4.
    e_coci_aufk-zzebeln4  = aufk-zzebeln4.
    e_coci_aufk-zzebelp4  = aufk-zzebelp4.
    e_coci_aufk-zzkwmeng  = aufk-zzkwmeng.
    e_coci_aufk-zzmatventa  = aufk-zzmatventa.
    e_coci_aufk-zzfec_entreg4  = aufk-zzfec_entreg4.
    e_coci_aufk-zzfirst  = aufk-zzfirst.
    e_coci_aufk-zzlienzo  = aufk-zzlienzo.
    e_coci_aufk-zzcoex  = aufk-zzcoex.
    e_coci_aufk-zzttocorona  = aufk-zzttocorona.
    e_coci_aufk-zzteji  = aufk-zzteji.
    e_coci_aufk-zzadignifugo  = aufk-zzadignifugo.
    e_coci_aufk-zzaduv  = aufk-zzaduv.
    e_coci_aufk-zzadantest  = aufk-zzadantest.
    e_coci_aufk-zzadanthum  = aufk-zzadanthum.
    e_coci_aufk-zzadespum  = aufk-zzadespum.
    e_coci_aufk-zzimpresion  = aufk-zzimpresion.
    e_coci_aufk-zzconductividad  = aufk-zzconductividad.
    e_coci_aufk-zzlargfab  = aufk-zzlargfab.
    e_coci_aufk-zzacnhofab  = aufk-zzacnhofab.
    e_coci_aufk-zzlargminfab  = aufk-zzlargminfab.
    e_coci_aufk-zzlargmaxfab  = aufk-zzlargmaxfab.
    e_coci_aufk-zzanchminfab  = aufk-zzanchminfab.
    e_coci_aufk-zzanchmaxfab  = aufk-zzanchmaxfab.
    e_coci_aufk-zzpesoteopl  = aufk-zzpesoteopl.
    e_coci_aufk-zzpesoteomaxpl  = aufk-zzpesoteomaxpl.
    e_coci_aufk-zzpesoteominpl  = aufk-zzpesoteominpl.
    e_coci_aufk-zzespmaxpl  = aufk-zzespmaxpl.
    e_coci_aufk-zzespminpl  = aufk-zzespminpl.
    e_coci_aufk-zzespminpl  = aufk-zzespminpl.
    e_coci_aufk-zzdestcmcr = aufk-zzdestcmcr.
    e_coci_aufk-zzgramajeinput = aufk-zzgramajeinput.
*   EDIEGO 32PP016 22/09/2017 -->
*   Informamos datos de la tabla
    zcl_im_zworkorder_update=>gt_zttpm0007 = gt_utillajes.
    e_coci_aufk-zzcopiatro = aufk-zzcopiatro.
    e_coci_aufk-zzjuegocli = aufk-zzjuegocli.
*   EDIEGO 32PP016 22/09/2017 <--

  ENDIF.
ENDIF.
