*&---------------------------------------------------------------------*
*&  Include           ZXMG0U02
*&---------------------------------------------------------------------*

*"*"Lokale Schnittstelle:
*"  IMPORTING
*"     VALUE(WMARA) LIKE  MARA STRUCTURE  MARA
*"     VALUE(WMARC) LIKE  MARC STRUCTURE  MARC
*"     VALUE(WMARD) LIKE  MARD STRUCTURE  MARD
*"     VALUE(WMBEW) LIKE  MBEW STRUCTURE  MBEW
*"     VALUE(WMLGN) LIKE  MLGN STRUCTURE  MLGN
*"     VALUE(WMLGT) LIKE  MLGT STRUCTURE  MLGT
*"     VALUE(WMVKE) LIKE  MVKE STRUCTURE  MVKE
*"     VALUE(WSTAT) LIKE  MGSTAT STRUCTURE  MGSTAT
*"     VALUE(WMFHM) LIKE  MFHM STRUCTURE  MFHM
*"     VALUE(WMPOP) LIKE  MPOP STRUCTURE  MPOP
*"  TABLES
*"      STEXT STRUCTURE  SHORT_DESC
*"      SSTEUERTAB STRUCTURE  MG03STEUER
*"      SSTEUMMTAB STRUCTURE  MG03STEUMM
*"      WMEINH STRUCTURE  SMEINH
*"      SMEAN_ME_TAB STRUCTURE  MEAN
*"  CHANGING
*"     VALUE(CMARA) LIKE  MARU STRUCTURE  MARU
*"  EXCEPTIONS
*"      APPLICATION_ERROR


data LS_MEINH type SMEINH.
data LS_MEINH_ORG type SMEINH.
data: ESPESOR type UMBSZ,
      METROS  type UMBSZ.
data: WMARU  type MARU,
      WMARCU type MARCU,
      WMARDU type MARDU.

* codificacion inteligente de bobinas
* grupo de articulos debe ser las 5 primeras posiciones del codigo
if WMARA-MTART = 'ZPAP' or WMARA-MTART = 'ZCAB'. " cvivo - 11.09.19 - Añadimos cartoncillos

  "cvivo - 20.09.21 - Proyecto ventas: introducimos datos para el VC
  CMARA-BREIT = WMARA-ZZANCHO.
*  cmara-brgew = wmara-zzgramaje. "FCARDONA 17.08.2022 --> Error unidad de peso
  CMARA-MEABM = 'MM'.
*  cmara-gewei = 'G'. "FCARDONA 17.08.2022 --> Error unidad de peso

  if WMARA-MATKL(5) ne WMARA-MATNR+5(5).
    message E012(ZMM) raising APPLICATION_ERROR.
  endif.
elseif WMARA-MTART = 'ZCAH'.

  "cvivo - 20.09.21 - Proyecto ventas: introducimos datos para el VC
  CMARA-LAENG = WMARA-ZZLARGO.
  CMARA-BREIT = WMARA-ZZANCHO.
*  cmara-brgew = wmara-zzgramaje. "FCARDONA 17.08.2022 --> Error unidad de peso
  CMARA-MEABM = 'MM'.
*  cmara-gewei = 'G'. "FCARDONA 17.08.2022 --> Error unidad de peso

  if WMARA-MATKL(5) ne WMARA-MATNR+1(5).
    message E012(ZMM) raising APPLICATION_ERROR.
  endif.
endif.
* Inicio Udefine 02/07/2018 calculo de metros por KG en el maestro de materiales
field-symbols <DATA> type MAT_MEINH.
assign ('(SAPLMGMU)MEINH[]') to <DATA> .
* falta la conversion a metros.
read table <DATA> into LS_MEINH with key MEINH = 'KG'.
if SY-SUBRC is initial.
  if not WMARA-ZZGRAMAJE is initial and
     not WMARA-ZZANCHO is initial and
      WMARA-ZZLARGO is initial. " si hay largo convertimos en UDS - cvivo - Proyecto WM CB

    "cvivo - 20.09.21 - Proyecto ventas: introducimos datos para el VC
    LS_MEINH-BREIT = WMARA-ZZANCHO.
    LS_MEINH-BRGEW = WMARA-ZZGRAMAJE.
    modify <DATA> from LS_MEINH transporting BREIT BRGEW where MEINH = 'KG'.
    clear LS_MEINH.
*XM = 1000g/gramaje/ancho en M
    try.
        LS_MEINH-UMREN = 1000000 / WMARA-ZZGRAMAJE / ( WMARA-ZZANCHO / 1000 ).
        LS_MEINH-UMREZ = 1000.
        LS_MEINH-MEINH = 'M'.
        read table <DATA> into LS_MEINH_ORG with key MEINH = 'M'.
        if not SY-SUBRC is initial.
          append LS_MEINH to <DATA>.
        else.
          LS_MEINH_ORG-UMREN = LS_MEINH-UMREN.
          LS_MEINH_ORG-UMREZ = LS_MEINH-UMREZ.
          LS_MEINH_ORG-MEINH = LS_MEINH-MEINH.
          modify <DATA> from LS_MEINH_ORG transporting UMREN UMREZ MEINH where MEINH = 'M'.
        endif.
      catch CX_SY_ARITHMETIC_OVERFLOW.
    endtry.
    try. " cvivo - añadimos UMA m2 para el VC
*        ls_meinh-umren = 1000 * ( 1 / wmara-zzgramaje ).             "FCARDONA - 63535: Cálculo en base 1000
*        ls_meinh-umrez = 1. " por 1 kg                               "FCARDONA - 63535: Cálculo en base 1000
        LS_MEINH-UMREN = 1000 * ( 1 / ( WMARA-ZZGRAMAJE / 1000 ) ).   "FCARDONA - 63535: Cálculo en base 1000
        LS_MEINH-UMREZ = 1000. " por 1000 kg                          "FCARDONA - 63535: Cálculo en base 1000
        LS_MEINH-MEINH = 'M2'.
        read table <DATA> into LS_MEINH_ORG with key MEINH = 'M2'.
        if not SY-SUBRC is initial.
          append LS_MEINH to <DATA>.
        else.
          LS_MEINH_ORG-UMREN = LS_MEINH-UMREN.
          LS_MEINH_ORG-UMREZ = LS_MEINH-UMREZ.
          LS_MEINH_ORG-MEINH = LS_MEINH-MEINH.
          modify <DATA> from LS_MEINH_ORG transporting UMREN UMREZ MEINH where MEINH = 'M2'.
        endif.
      catch CX_SY_ARITHMETIC_OVERFLOW.
    endtry.
** ini 11.09.19 - cvivo - WM Pacs conversión M a Radio bobina -> 02.10.2019 Finalmente se desactiva, pues no se puede aplicar reglas de 3
*    CLEAR: ls_meinh, espesor, metros.
*    TRY.
*        espesor = ( ( 14 / 10 ) * wmara-zzgramaje ).   " calculamos primero el espesor
*        metros = ( ( 314159 / 100000 ) * ( ( 6 / 100 ) + ( espesor / 1000000 ) +  ( ( 200 / 2 ) / 100 ) ) * ( ( ( 200 / 2 ) / 100 ) - ( 6 / 100 ) ) ) / ( espesor / 1000000 ). " calculamos primero en M
*         " Fórmula -> =([@Pi]*([@Mandril]+([@Espesor]/1000000)+(([@[Radio (cm)]])/100))*((([@[Radio (cm)]])/100)-[@Mandril]))/([@Espesor]/1000000)
*        ls_meinh-umrez = ( ( wmara-zzgramaje / 1000 ) * ( wmara-zzancho / 1000 ) * metros ). " convertimos a KG
*        ls_meinh-umren = 200. " 200cm Diámetro
*        ls_meinh-meinh = 'DIA'.
*        READ TABLE <data> INTO ls_meinh_org WITH KEY meinh = 'DIA'.
*        IF NOT sy-subrc IS INITIAL.
*          APPEND ls_meinh TO <data>.
*        ELSE.
*          ls_meinh_org-umren = ls_meinh-umren.
*          ls_meinh_org-umrez = ls_meinh-umrez.
*          ls_meinh_org-meinh = ls_meinh-meinh.
*          MODIFY <data> FROM ls_meinh_org TRANSPORTING umren umrez meinh WHERE meinh = 'DIA'.
*        ENDIF.
*      CATCH cx_sy_arithmetic_overflow.
*    ENDTRY.
** fin 11.09.19 - cvivo - WM Pacs conversión M a Radio bobina

  elseif not WMARA-ZZGRAMAJE is initial and " cvivo - Proyecto WM CB
     not WMARA-ZZANCHO is initial and
     not WMARA-ZZLARGO is initial.

    "cvivo - 20.09.21 - Proyecto ventas: introducimos datos para el VC
    LS_MEINH-LAENG = WMARA-ZZLARGO.
    LS_MEINH-BREIT = WMARA-ZZANCHO.
    LS_MEINH-BRGEW = WMARA-ZZGRAMAJE.
    modify <DATA> from LS_MEINH transporting LAENG BREIT BRGEW where MEINH eq 'KG'.
    clear LS_MEINH.
* KG = 1000 UDS * ancho m * gramaje kg/m2 * largo m
    try.
        LS_MEINH-UMREN = 1000 / ( ( WMARA-ZZANCHO / 1000 ) * ( WMARA-ZZGRAMAJE / 1000 ) * ( WMARA-ZZLARGO / 1000 ) ).
        LS_MEINH-UMREZ = 1000.
        LS_MEINH-MEINH = 'ST'. " ST es nombre interno de UN
        read table <DATA> into LS_MEINH_ORG with key MEINH = 'ST'.
        if not SY-SUBRC is initial.
          append LS_MEINH to <DATA>.
        else.
          LS_MEINH_ORG-UMREN = LS_MEINH-UMREN.
          LS_MEINH_ORG-UMREZ = LS_MEINH-UMREZ.
          LS_MEINH_ORG-MEINH = LS_MEINH-MEINH.
          modify <DATA> from LS_MEINH_ORG transporting UMREN UMREZ MEINH where MEINH = 'ST'.
        endif.
      catch CX_SY_ARITHMETIC_OVERFLOW.
    endtry.
    try. " cvivo - añadimos UMA m2 para el VC
        LS_MEINH-UMREN = 1000 * ( 1 / WMARA-ZZGRAMAJE ).
        LS_MEINH-UMREZ = 1. " por 1 kg
        LS_MEINH-MEINH = 'M2'.
        read table <DATA> into LS_MEINH_ORG with key MEINH = 'M2'.
        if not SY-SUBRC is initial.
          append LS_MEINH to <DATA>.
        else.
          LS_MEINH_ORG-UMREN = LS_MEINH-UMREN.
          LS_MEINH_ORG-UMREZ = LS_MEINH-UMREZ.
          LS_MEINH_ORG-MEINH = LS_MEINH-MEINH.
          modify <DATA> from LS_MEINH_ORG transporting UMREN UMREZ MEINH where MEINH = 'M2'.
        endif.
      catch CX_SY_ARITHMETIC_OVERFLOW.
    endtry.
  endif.
endif.

" SMT - INI - 19.04.2023 15:34:24 -  Añadimos puntero de modificación para campos VC

" TODO // Revisar cambios en VC

data: T_CP_DATA type table of BDI_CHPTR,
      L_CP_DATA type BDI_CHPTR.

clear: L_CP_DATA.
refresh: T_CP_DATA.

L_CP_DATA-CDOBJID = WMARA-MATNR.
L_CP_DATA-CDCHGID = 'U'.
L_CP_DATA-FLDNAME = 'EISBE'.
L_CP_DATA-TABNAME = 'MARC'.
L_CP_DATA-TABKEY = SY-MANDT && WMARA-MATNR.
L_CP_DATA-CDOBJCL = 'MATERIAL'.

append L_CP_DATA to T_CP_DATA.

call function 'CHANGE_POINTERS_CREATE_DIRECT'
  exporting
    MESSAGE_TYPE          = 'ZMATMAS_P02'
    IP_IGNORE_CUST        = ABAP_TRUE
  tables
    T_CP_DATA             = T_CP_DATA
  exceptions
    NUMBER_RANGE_PROBLEMS = 1
    others                = 2.
if SY-SUBRC <> 0.
* MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
endif.


" SMT - FIN - 19.04.2023 15:35:01 - Añadimos puntero de modificación para campos VC

if WMARA-MTART = 'ZPMP'. " 59936 - cvivo - 12.03.2020 Forzar MARM y Datos base 1 es igual en ZPMP/ZPLP
  clear LS_MEINH.
  try.
      LS_MEINH-UMREN = WMARA-NTGEW * 1000.
      LS_MEINH-UMREZ = 1000.
      LS_MEINH-BRGEW = 1.
      LS_MEINH-MEINH = LS_MEINH-GEWEI = 'KG'.
      read table <DATA> into LS_MEINH_ORG with key MEINH = 'KG'.
      if not SY-SUBRC is initial.
        append LS_MEINH to <DATA>.
      else.
        LS_MEINH_ORG-UMREN = LS_MEINH-UMREN.
        LS_MEINH_ORG-UMREZ = LS_MEINH-UMREZ.
        LS_MEINH_ORG-BRGEW = LS_MEINH-BRGEW.
        LS_MEINH_ORG-MEINH = LS_MEINH_ORG-GEWEI = LS_MEINH-MEINH.
        modify <DATA> from LS_MEINH_ORG transporting UMREN UMREZ MEINH GEWEI BRGEW where MEINH = 'KG'.
      endif.
    catch CX_SY_ARITHMETIC_OVERFLOW.
  endtry.
elseif WMARA-MTART = 'ZPLP'.
  clear LS_MEINH.
  try.
      LS_MEINH-UMREN = WMARA-NTGEW * 1000.
      LS_MEINH-UMREZ = 1000.
      LS_MEINH-BRGEW = 1.
      LS_MEINH-MEINH = LS_MEINH-GEWEI = 'KG'.
      read table <DATA> into LS_MEINH_ORG with key MEINH = 'KG'.
      if not SY-SUBRC is initial.
        append LS_MEINH to <DATA>.
      else.
        LS_MEINH_ORG-UMREN = LS_MEINH-UMREN.
        LS_MEINH_ORG-UMREZ = LS_MEINH-UMREZ.
        LS_MEINH_ORG-BRGEW = LS_MEINH-BRGEW.
        LS_MEINH_ORG-MEINH = LS_MEINH_ORG-GEWEI = LS_MEINH-MEINH.
        modify <DATA> from LS_MEINH_ORG transporting UMREN UMREZ MEINH GEWEI BRGEW where MEINH = 'KG'.
      endif.
    catch CX_SY_ARITHMETIC_OVERFLOW.
  endtry.
endif.



* FIn Udefine 02/07/2018 calculo de metros por KG en el maestro de materiales
* EBA 060215 Verificar si el Grupo de Artículos Externo es o no necesario
* dependiendo del tipo de material (MARA), el Grupo de Artículos (MARA)
* y el Centro (MARC) (si viene informado).
if     WMARA-MTART = 'ZAUX'
   and WMARA-EXTWG is initial
*  AND ( SY-TCODE = 'MM01' OR SY-TCODE = 'MM02' )
  .
*  CHECK WMARC-WERKS = '2000'     "ARTERISCO AL NO VENIR INFORMADO EL CENTRO.
*     OR WMARC-WERKS = '2001'     "ARTERISCO AL NO VENIR INFORMADO EL CENTRO.
*     OR WMARC-WERKS = '2010'.    "ARTERISCO AL NO VENIR INFORMADO EL CENTRO.

* CASO 1: ADITIVOS, TINTAS BASE, TINTAS DIRECTAS Y DIGITALES
  if WMARA-MATKL(2) = '35' or WMARA-MATKL(2) = '36' or WMARA-MATKL(2) = '37' .
*     mensaje e081 (zmm) Por favor, es necesario rellenar el Grupo de Artículos Externo.
    message E081(ZMM) raising APPLICATION_ERROR.
  endif.
* CASO 2: COLAS.
  if WMARA-MATKL = '40101'.
*     mensaje e081 (zmm) Por favor, es necesario rellenar el Grupo de Artículos Externo.
    message E081(ZMM) raising APPLICATION_ERROR.
  endif.
* CASO 3: CANTONERAS.
  if WMARA-MATKL = '42199'.
*     mensaje w082 (zmm): Por favor, si es una CANTONERA, indique el Gr. Art. Externo.
    message W082(ZMM) raising APPLICATION_ERROR.
  endif.

endif.

"JVM - Seidor, envío de información a OMP cuando hay modificaciones
if WMARA-MTART eq 'ZTRO' or WMARA-MTART eq 'ZCLI'.

  data IT_MAT type ZSPP_TT_MATNR.
  append initial line to IT_MAT assigning field-symbol(<MAT>).
  <MAT> = WMARA-MATNR.
  call function 'ZSPP_IDOC_RESOURCES'
    exporting
      IT_MATNR = IT_MAT.
*
**APC20250210 Movemos este código para que procese en el WF tras modificaciones de materiales
*  "Si los status son bloqueado o desbloqueado, lanzaremos el IDOC de STOP CODES si procede
**  Status TP  Descr.  Comentario  Status SAP (CHAR 2)
**  YAMD   Modificación    Se establece durante el proceso de modificación / modificación menor  3 Bloqueo fabricación
**  YAPP   Aprobado  NO en uso, solo si la aprobación de ventas está activa
**  YARC   Archivado   Se establece durante el proceso de archivado  ZZ  Bloqueo compras y fabric.
**  YDAM   Dañado  Se establece durante el proceso de dañado   3 Bloqueo fabricación
**  YDES   Destruido   Se establece durante el proceso de desguace   Z2  Bloqueo excepto compras
**  YEXR   Útil externo devuelto   Se establece durante devoluciones a proveedor externo   3 Bloqueo fabricación
**  YEXT   Útil externo  Status inicial, si se ha marcado como útil externo  Z1  Bloqueo compras
**  YNEW   Nuevo   Status inicial, si NO se ha marcado como herramienta externa  3 Bloqueo fabricación
**  YNIH   NO propio   Se establece durante el proceso de daño  uso externo   3 Bloqueo fabricación
**  YORD   Pedido  Se establece durante el proceso de pedido   3 Bloqueo fabricación
**  YORR   Pedido devuelto   Se establece durante el proceso de Desarrollo de producto O aprovisionamiento   3 Bloqueo fabricación
**  YPDD   Desarrollo de Producto OK   Se establece durante el proceso externo de recepción de externos, Desarrollo de producto O aprovisionamiento.   3 Bloqueo fabricación
**  YPRO   Aprovisionamiento OK  Se establece durante el proceso externo de recepción de externos y aprovisionamiento    3 Bloqueo fabricación
**  YREE   Reparación externa  Se establece durante el proceso de reparación   3 Bloqueo fabricación
**  YREI   Reparación interna  Se establece durante el proceso de reparación y modificaciones  ZZ  Bloqueo compras y fabric.
**  YREL   Liberado  Se establece durante el proceso de liberación de archivado, liberación de reparación interna, liberación de producción  Z1  Bloqueo compras
**  YRPL   Remplazo  Se establece durante el proceso de remplazo   3 Bloqueo fabricación
**  Para el caso:
**  Serían todos bloqueo de útil excepto los estados de material Z1, es decir liberado y útil externo.
*
*  select single MMSTA into @data(LV_STATUS_ANT) from MARC where MATNR eq @WMARA-MATNR and WERKS eq @WMARC-WERKS.
*  if SY-SUBRC <> 0 or WMARC-WERKS is initial.
*    select single MSTAE from MARA  into @LV_STATUS_ANT where MATNR eq @WMARA-MATNR.
*    WMARC-MMSTA = WMARA-MSTAE.
*  endif.
*  if SY-SUBRC = 0 and LV_STATUS_ANT <> WMARC-MMSTA.
*    "Si se ha producido un cambio de status hacia uno de desbloqueo
*    if WMARC-MMSTA is initial or WMARC-MMSTA eq '00' or WMARC-MMSTA eq 'Z1'.
*      call function 'ZSPP_IDOC_ORDERS_STOPCODES'
*        exporting
*          I_MATNR  = WMARA-MATNR
*          I_STATUS = 'UNBLOQ'.
*    else.
*      call function 'ZSPP_IDOC_ORDERS_STOPCODES'
*        exporting
*          I_MATNR  = WMARA-MATNR
*          I_STATUS = 'BLOQ'.
*    endif.
*  endif.

*ELSEIF wmara-mtart EQ 'ZPAP'.
*  CALL FUNCTION 'ZSPP_IDOC_GRADES'.
endif.
"FJVM


"JCB 27.09.22. Bobinas de papel. Establecer altura en unidades medida
if WMARA-MTART = 'ZPAP'.
  select single *
    into @data(WL_ZTMM0027_ALTURA)
    from ZTMM0027
    where MTART       = @WMARA-MTART and
          MATKL       = @WMARA-MATKL and
          DBTABNAME   = 'MARM'       and
          FIELDNAME   = 'HOEHE'      and
          COND1       = @WMARA-ZZGRAMAJE.
  if SY-SUBRC = 0.
    loop at WMEINH assigning field-symbol(<FS_WMEINH>) where HOEHE is initial.
      <FS_WMEINH>-HOEHE = WL_ZTMM0027_ALTURA-VALUE.
    endloop.
  endif.

endif.


"JCB 13.02.23. Impuesto al plástico. Mensaje por tipo de material.
"Parámetro ZMM_MTART_IMP_PLASTICO de la transacción STVARV
if SY-TCODE = 'MM01' and WMARC-WERKS <> '4000'. "Que no salga el mensaje en CIPASI
  if SY-BATCH <> 'X' and SY-BINPT <> 'X'.
    data: TL_MTART_IMP_PLASTICO_RG type range of MARA-MTART.
    select SIGN, OPTI as OPTION, LOW, HIGH
      into corresponding fields of table @TL_MTART_IMP_PLASTICO_RG
      from TVARVC
      where NAME = 'ZMM_MTART_IMP_PLASTICO'.
    if SY-SUBRC = 0 and WMARA-MTART in TL_MTART_IMP_PLASTICO_RG.
      call function 'POPUP_TO_DISPLAY_TEXT'
        exporting
          TEXTLINE1 = 'Dé de alta el material en la transacción ZFI0029 en caso de estar'
          TEXTLINE2 = 'sujeto al impuesto al plástico no reciclado'.
    endif.
  endif.
endif.



*** Update of the assignment of documents when a change is made in the SmartVC of Material (MM02)
if SY-BATCH eq ABAP_TRUE.

  data LF_JOBNAME type BTCJOB.

  call function 'GET_JOB_RUNTIME_INFO'
    importing
      JOBNAME         = LF_JOBNAME
    exceptions
      NO_RUNTIME_INFO = 1
      others          = 2.
  if SY-SUBRC is not initial or
     LF_JOBNAME is initial.

    data LT_CALLSTACK	   type	ABAP_CALLSTACK.
    data LT_ET_CALLSTACK type	SYS_CALLST.

    call function 'SYSTEM_CALLSTACK'
      importing
        CALLSTACK    = LT_CALLSTACK
        ET_CALLSTACK = LT_ET_CALLSTACK
      exceptions
        others       = 1.

    loop at LT_CALLSTACK into data(LS_CALLSTACK).
      check LS_CALLSTACK-MAINPROGRAM cs 'MBQ'.
      data(LF_JOB_DMS) = ABAP_TRUE.
      exit.
    endloop.

  elseif LF_JOBNAME cs 'MBQ'.
    LF_JOB_DMS = ABAP_TRUE.
  endif.

endif.

if ( SY-TCODE = 'MM02' or SY-TCODE = '/VCXI/SMDO' ) or    "Online processing
   ( SY-BATCH eq ABAP_TRUE and LF_JOB_DMS eq ABAP_TRUE ). "Background/JOB processing (ZVCXI_XCM_MBQ_P001)

  data LF_NUMBER type TBTCJOB-JOBCOUNT.
  data LF_NAME   type TBTCJOB-JOBNAME value 'DMS_LINK'.

  select single STDPD from MARC
    into @data(LF_SDPD)
    where MATNR eq @WMARA-MATNR.
  if SY-SUBRC is initial and
     LF_SDPD eq 'VCXI_PX_SINGLE_CNF' and
     WMARA-MATNR(2) ne 'UC' and
     WMARA-MATNR(2) ne 'UT'.

    call function 'JOB_OPEN'
      exporting
        JOBNAME          = LF_NAME
      importing
        JOBCOUNT         = LF_NUMBER
      exceptions
        CANT_CREATE_JOB  = 1
        INVALID_JOB_DATA = 2
        JOBNAME_MISSING  = 3
        others           = 4.
    if SY-SUBRC is initial.
      submit YHP_DMS_LINK and return
                          with    P_MATNR = WMARA-MATNR
                          user    SY-UNAME
                          via job LF_NAME
                          number  LF_NUMBER.

      if SY-SUBRC is initial.
        call function 'JOB_CLOSE'
          exporting
            JOBCOUNT             = LF_NUMBER
            JOBNAME              = LF_NAME
            STRTIMMED            = ABAP_TRUE
          exceptions
            CANT_START_IMMEDIATE = 1
            INVALID_STARTDATE    = 2
            JOBNAME_MISSING      = 3
            JOB_CLOSE_FAILED     = 4
            JOB_NOSTEPS          = 5
            JOB_NOTEX            = 6
            LOCK_FAILED          = 7
            others               = 8.
      endif.

    endif.

  endif.

endif.
