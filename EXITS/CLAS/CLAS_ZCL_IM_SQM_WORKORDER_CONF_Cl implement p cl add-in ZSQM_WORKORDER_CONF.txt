
class ZCL_IM_SQM_WORKORDER_CONF definition
  public
  final
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces IF_EX_WORKORDER_CONFIRM .
protected section.
private section.
endclass. "ZCL_IM_SQM_WORKORDER_CONF definition
class ZCL_IM_SQM_WORKORDER_CONF implementation.
  method IF_EX_WORKORDER_CONFIRM~AT_CANCEL_CHECK.
  endmethod.
  METHOD if_ex_workorder_confirm~at_save.

"INI ARA GAPQM007-HPX Modificación proceso No Conform. 19.12.23 - Mermas
**Asteriscamos este método por que su funcionalidad se traslada a WORKORDER_UPDATE.
*    DATA: lw_notifheader        TYPE bapi2078_nothdri,
*          lw_notifheader_export TYPE bapi2078_nothdre,
*          lt_return             TYPE bapiret2_t,
*          lt_afvc               TYPE TABLE OF afvc,
*          lv_maxvornr           TYPE vornr,
*          lv_minvornr           TYPE vornr.
*
*    SELECT SINGLE *
*          INTO @DATA(lw_afpo)
*          FROM afpo
*          WHERE aufnr = @is_confirmation-aufnr.
**    HMO INI- 05.04.2023 Ajuste GAP
*
*    SELECT SINGLE * INTO @DATA(lt_afko) FROM AFKO
*      WHERE aufnr = @is_confirmation-aufnr.
*
*    SELECT * INTO TABLE lt_afvc FROM AFVC
*      WHERE aufpl = lt_afko-aufpl.
*
*    SORT lt_afvc by vornr DESCENDING.
*
*
*    READ TABLE lt_afvc INTO DATA(wa_vornr) INDEX 1.
*      IF sy-subrc EQ 0.
*        lv_maxvornr = wa_vornr-vornr.
*        ENDIF.
*  IF lv_maxvornr = is_confirmation-vornr.
*    SELECT SINGLE * INTO @DATA(wa_viqmel) FROM VIQMEL
*      WHERE qmtxt = 'Merma'
*      AND fertaufnr = @is_confirmation-aufnr.
*    IF wa_viqmel IS INITIAL.
*
**    HMO FIN- 05.04.2023 Ajuste GAP
*    SELECT SINGLE porc,cant_rech INTO @DATA(l_punto_merma) FROM zsqmt000_merma.
*
*    SELECT SINGLE b~* INTO @DATA(l_yhp_idx_td100)
*      FROM marc AS a
*      INNER JOIN yhp_idx_td100 AS b ON a~cuobj = b~cuobj
*       WHERE a~matnr = @lw_afpo-matnr
*         AND a~werks = @is_confirmation-werks.
*
***HMO INI- 05.04.2023 Ajuste GAP
*    SORT lt_afvc by vornr ASCENDING.
*    READ TABLE lt_afvc INTO DATA(wa_minvornr) INDEX 1.
*      IF sy-subrc EQ 0.
*        lv_minvornr = wa_minvornr-vornr.
*        ENDIF.
***HMO FIN- 05.04.2023 Ajuste GAP
*    SELECT SUM( lmnga ) AS cant_buena, SUM( xmnga ) AS cant_merma
*      INTO @DATA(lw_afru)
*      FROM afru
*      WHERE aufnr = @is_confirmation-aufnr
*        AND stokz = ''
*        AND stzhl = ''.
****HMO INI- 05.04.2023 Ajuste GAP
*    SELECT SUM( lmnga )"Seleccionamos la cantidad buena que no pertenece a la primera operación. Esta cantidad está duplicada en la primera consulta.
*      INTO @DATA(lw_afru2)
*      FROM afru
*      WHERE aufnr = @is_confirmation-aufnr
*        AND stokz = ''
*        AND stzhl = ''
*        AND vornr NE @lv_minvornr.
****HMO FIN- 05.04.2023 Ajuste GAP
*
**    ADD is_confirmation-lmnga TO lw_afru-cant_buena. " HMO Comentamos en ajuste GAP 05.04.2023
*    SUBTRACT lw_afru2 FROM lw_afru-cant_buena. " HMO Quitamos las cantidades buena duplicadas ya que con la de la primera operación bastará (ajuste GAP 05.04.2023).
*    ADD is_confirmation-xmnga TO lw_afru-cant_merma.
*
*    IF lw_afru-cant_buena IS NOT INITIAL AND lw_afru-cant_merma IS NOT INITIAL.
*      DATA(l_cant_total) = lw_afru-cant_buena + lw_afru-cant_merma.
*      "ASC >>> 18.02.2022 Cambiamos la forma de calcular
**      DATA(l_porc) = lw_afru-cant_merma * 100 / l_cant_total.
*      DATA l_porc TYPE ru_lmnga.
*      l_porc = lw_afru-cant_merma * 100 / lw_afru-cant_buena.
*      "ASC <<< 18.02.2022 Cambiamos la forma de calcular
*
*      IF l_porc > l_punto_merma-porc OR ( l_yhp_idx_td100-nblar * lw_afru-cant_merma ) > l_punto_merma-cant_rech.
*        CLEAR: lw_notifheader_export, lt_return[].
*
**Los campos a completar en el aviso son:
**-Material: con AFRU-AUFNR obtener AFPO-MATNR y copiar a QMEL-MATNR
**-Lote: con AFRU-AUFNR obtener AFPO-CHARG y copiar a QMEL-CHARG
**-Orden de fabricación: AFRU-AUFNR copiar a QMEL-FERTAUFNR
**-Cantidad afectada: AFRU-XMNGA copiar a QMEL-RKMNG
**-Descripción: “Merma” copiar texto en QMEL-QMTXT
**-Campo costes: campo Z a crear en el aviso (pestaña estado-cantidades).
*        "Se obtiene de la cantidad NOOK multiplicada por el coste unitario (venta)?.
*
*
*
*
*        lw_notifheader-material = lw_afpo-matnr.
*        lw_notifheader-batch = lw_afpo-charg.
*        lw_notifheader-prod_order = is_confirmation-aufnr.
*        lw_notifheader-quant_complaint = lw_afru-cant_merma.
*        lw_notifheader-short_text = 'Merma'.
*
*        "Aquí dentro hay un commit
*        "Pendiende de pruebas para ver como se deja la llamada
*        DATA: l_qmart  TYPE qmart,
*              l_costes TYPE zsqm_costes.
*        l_qmart = 'Z2'.
*
*        DATA: lv_xmnga TYPE xmnga.
*        CLEAR lv_xmnga.
*        lv_xmnga = lw_afru-cant_merma.
*
*        CALL FUNCTION 'ZSQM_CREAR_AVISO' STARTING NEW TASK 'ZAVISO'
*          EXPORTING
*            notif_type  = l_qmart
*            notifheader = lw_notifheader
*            zzcostes    = l_costes
*            kdauf       = lw_afpo-kdauf
*            kdpos       = lw_afpo-kdpos
*            matnr       = lw_afpo-matnr
*            xmnga       = lv_xmnga.
**          importing
**           return      = lt_return.
*      ENDIF.
*
*    ENDIF.
*    ENDIF.
*  ENDIF.
"INI ARA GAPQM007-HPX Modificación proceso No Conform. 19.12.23 - Mermas


  ENDMETHOD.
  method IF_EX_WORKORDER_CONFIRM~BEFORE_UPDATE.
  endmethod.
  method IF_EX_WORKORDER_CONFIRM~IN_UPDATE.
  endmethod.
  method IF_EX_WORKORDER_CONFIRM~INDIVIDUAL_CAPACITY.
  endmethod.
endclass. "ZCL_IM_SQM_WORKORDER_CONF definition
endclass. "ZCL_IM_SQM_WORKORDER_CONF implementation
