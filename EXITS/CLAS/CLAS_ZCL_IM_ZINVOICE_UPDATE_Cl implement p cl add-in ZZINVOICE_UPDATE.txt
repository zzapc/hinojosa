
class ZCL_IM_ZINVOICE_UPDATE definition
  public
  final
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces IF_EX_INVOICE_UPDATE .
protected section.
private section.
endclass. "ZCL_IM_ZINVOICE_UPDATE definition
class ZCL_IM_ZINVOICE_UPDATE implementation.
  METHOD if_ex_invoice_update~change_at_save.

    CONSTANTS: lc_nacional(8)     TYPE c VALUE 'NACIONAL',
               lc_comunitario(11) TYPE c VALUE 'COMUNITARIO',
               lc_extranjero(10)  TYPE c VALUE 'EXTRANJERO',
               lc_isp(3)          TYPE c VALUE 'ISP',
               lc_error(5)        TYPE c VALUE 'ERROR'.

    TYPES: BEGIN OF ty_pedido,
             ebeln TYPE ekko-ebeln,
             lifnr TYPE ekko-lifnr,
             lifn2 TYPE ekpa-lifn2,
           END OF ty_pedido.
    DATA: lt_pedido TYPE STANDARD TABLE OF ty_pedido,
          ls_pedido TYPE                   ty_pedido.
    DATA: lt_lfbk_prov TYPE STANDARD TABLE OF lfbk,
          lt_lfbk_coop TYPE STANDARD TABLE OF lfbk,
          ls_lfbk_prov TYPE                   lfbk,
          ls_lfbk_coop TYPE                   lfbk.

    DATA: ls_rseg_new TYPE mrmrseg.
    DATA: lv_lifnr TYPE ekko-lifnr,
          lv_lifn2 TYPE ekpa-lifn2,
          lv_bvtyp TYPE bvtyp,
          lv_answ  TYPE flag,
          lv_error.

    CHECK s_rbkp_new-stblg IS INITIAL.

    CLEAR lv_error.
    CLEAR lt_pedido.

*--->mhernandez. 02.02.2022
*7000044561 Ticket ## 69969 ## from rtamarit@hinojo
*Comprobamos si el proveedor está sujeto a tracto
*sucesivo y si, por lo tanto, la clase de documento
*es KV
    IF sy-tcode = 'MIRO'.

      SELECT SINGLE lifnr FROM ztfi_proveedores
      INTO @DATA(lv_lifnr_aux)
            WHERE lifnr EQ @s_rbkp_new-lifnr.

      IF sy-subrc EQ 0 AND s_rbkp_new-blart NE 'KV'.

        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            text_question         = text-003
            text_button_1         = 'Corregir'
            text_button_2         = 'Continuar'
            display_cancel_button = ''
          IMPORTING
            answer                = lv_answ
          EXCEPTIONS
            text_not_found        = 1
            OTHERS                = 2.

        IF lv_answ EQ '1'.
          MESSAGE e041(zfi).
          EXIT.
        ENDIF.

      ENDIF.

    ENDIF.
*<---fin mhernandez

    LOOP AT ti_rseg_new INTO ls_rseg_new.
      CLEAR ls_pedido.
      ls_pedido-ebeln = ls_rseg_new-ebeln.
      COLLECT ls_pedido INTO lt_pedido.
    ENDLOOP.

    LOOP AT lt_pedido INTO ls_pedido.
      SELECT SINGLE lifnr INTO ls_pedido-lifnr
        FROM ekko
        WHERE ebeln = ls_pedido-ebeln.
      SELECT SINGLE lifn2 INTO ls_pedido-lifn2
        FROM ekpa
        WHERE ebeln = ls_pedido-ebeln
        AND   ebelp = '00000'
        AND   parvw = 'ZA'.
      MODIFY lt_pedido FROM ls_pedido.
    ENDLOOP.

    CALL FUNCTION 'Z_MM_AUTOFACTURA_CTAS'
      IMPORTING
        e_bvtyp                    = lv_bvtyp
        e_lifnr                    = lv_lifnr
        e_lifn2                    = lv_lifn2
      TABLES
        t_pedido                   = lt_pedido
      EXCEPTIONS
        pedidos_dif_cooperativas   = 1
        cta_cooperativista_sin_inf = 2
        ctas_sin_correspondencia   = 3
        OTHERS                     = 4.
    CASE sy-subrc.
      WHEN 1.
        MESSAGE e007(zmm) RAISING error_with_message.
      WHEN 2.
        MESSAGE e011(zmm) WITH lv_lifnr lv_lifn2 RAISING error_with_message.
      WHEN 3.
        MESSAGE e008(zmm) WITH lv_lifnr lv_lifn2 RAISING error_with_message.
      WHEN OTHERS.
    ENDCASE.

** verificamos que la factura tenga el mismo tipo de banco interlocutor
    IF lv_bvtyp NE s_rbkp_new-bvtyp AND lv_lifn2 NE space. " cvivo - 22.10.20 - 63514 Incidencia si no hay cooperativista
      MESSAGE e009(zmm) WITH ls_lfbk_prov-bvtyp RAISING error_with_message.
    ENDIF.

*   INI CGIJON - 23.04.21 - SAT 7000037652, Ticket 65125
*   Imposibilidad de contabilizar una factura con diferentes tipos de IVA
    TYPES: BEGIN OF tipo_mwskz,
             set   TYPE c LENGTH 15,
             ok    TYPE xfeld,
             buzei TYPE buzei.
    TYPES: END OF tipo_mwskz.
    TYPES: tty_mwskz TYPE TABLE OF tipo_mwskz.
    DATA: t_mwskz  TYPE tty_mwskz,
          wa_mwskz TYPE LINE OF tty_mwskz.


    TYPES: BEGIN OF tipo_set,
             set TYPE c LENGTH 15.
    TYPES: END OF tipo_set.
    TYPES: tty_set TYPE TABLE OF tipo_set.
    DATA: t_set  TYPE tty_set,
          wa_set TYPE LINE OF tty_set.

    DATA: num_reg TYPE sy-tabix.


    DATA: t_nacional    TYPE TABLE OF rgsbv,
          t_comunitario TYPE TABLE OF rgsbv,
          t_extranjero  TYPE TABLE OF rgsbv,
          t_isp         TYPE TABLE OF rgsbv.

    DATA: wa_iva TYPE rgsbv.

    DATA: lv_pos     TYPE c LENGTH 255.

    DATA: lv_pais_prov     TYPE lfa1-land1,
          lv_pais_sociedad TYPE t001-land1.

    DATA: lv_xegld TYPE t005-xegld.


    "obtenemos los indicadores del rango ZFI_IVASOPNACIONAL
    CALL FUNCTION 'G_SET_FETCH'
      EXPORTING
*       CLASS              = ' '
*       LANGU              =
        no_authority_check = 'X'
        setnr              = '0000ZFI_IVASOPNACIONAL'
*       SOURCE_CLIENT      =
*       TABLE              = ' '
*       NO_TITLES          = ' '
*       NO_SETID_CONVERSION       = 'X'
*       IMPORTING
*       SET_HEADER         =
      TABLES
*       FORMULA_LINES      =
        set_lines_basic    = t_nacional
*       SET_LINES_DATA     =
*       SET_LINES_MULTI    =
*       set_lines_single   =
      EXCEPTIONS
        no_authority       = 1
        set_is_broken      = 2
        set_not_found      = 3
        OTHERS             = 4.

    "obtenemos los indicadores del rango ZFI_IVASOPEXTRANJERO
    CALL FUNCTION 'G_SET_FETCH'
      EXPORTING
*       CLASS              = ' '
*       LANGU              =
        no_authority_check = 'X'
        setnr              = '0000ZFI_IVASOPEXTRANJERO'
*       SOURCE_CLIENT      =
*       TABLE              = ' '
*       NO_TITLES          = ' '
*       NO_SETID_CONVERSION       = 'X'
*       IMPORTING
*       SET_HEADER         =
      TABLES
*       FORMULA_LINES      =
        set_lines_basic    = t_extranjero
*       SET_LINES_DATA     =
*       SET_LINES_MULTI    =
*       set_lines_single   =
      EXCEPTIONS
        no_authority       = 1
        set_is_broken      = 2
        set_not_found      = 3
        OTHERS             = 4.

    "obtenemos los indicadores del rango ZFI_IVASOPCOMUNITARIO
    CALL FUNCTION 'G_SET_FETCH'
      EXPORTING
*       CLASS              = ' '
*       LANGU              =
        no_authority_check = 'X'
        setnr              = '0000ZFI_IVASOPCOMUNITARIO'
*       SOURCE_CLIENT      =
*       TABLE              = ' '
*       NO_TITLES          = ' '
*       NO_SETID_CONVERSION       = 'X'
*       IMPORTING
*       SET_HEADER         =
      TABLES
*       FORMULA_LINES      =
        set_lines_basic    = t_comunitario
*       SET_LINES_DATA     =
*       SET_LINES_MULTI    =
*       set_lines_single   =
      EXCEPTIONS
        no_authority       = 1
        set_is_broken      = 2
        set_not_found      = 3
        OTHERS             = 4.

    "obtenemos los indicadores del rango ZFI_IVASOPISP
    CALL FUNCTION 'G_SET_FETCH'
      EXPORTING
*       CLASS              = ' '
*       LANGU              =
        no_authority_check = 'X'
        setnr              = '0000ZFI_IVASOPISP'
*       SOURCE_CLIENT      =
*       TABLE              = ' '
*       NO_TITLES          = ' '
*       NO_SETID_CONVERSION       = 'X'
*       IMPORTING
*       SET_HEADER         =
      TABLES
*       FORMULA_LINES      =
        set_lines_basic    = t_isp
*       SET_LINES_DATA     =
*       SET_LINES_MULTI    =
*       set_lines_single   =
      EXCEPTIONS
        no_authority       = 1
        set_is_broken      = 2
        set_not_found      = 3
        OTHERS             = 4.

    SELECT SINGLE land1 FROM lfa1
      INTO lv_pais_prov
      WHERE lifnr = s_rbkp_new-lifnr.

    SELECT SINGLE land1 FROM t001
      INTO lv_pais_sociedad
      WHERE bukrs = s_rbkp_new-bukrs.

**--> INI FCARDONA 14.10.2021 69054 - Validación tipos IVA incompatibles MIRO.

*- "Comento por reescritura de lógica.

*    IF lv_pais_prov = lv_pais_sociedad.
*      "verificamos que los indicadores de la factura estén dentro del rango de ZFI_IVASOPNACIONAL ó de ZFI_IvaSopISP
*      LOOP AT ti_rseg_new INTO DATA(wa_rseg).
*        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*          EXPORTING
*            input  = wa_rseg-buzei
*          IMPORTING
*            output = wa_mwskz-buzei.
*
*        READ TABLE t_nacional INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*        IF sy-subrc = 0.
*          wa_mwskz-set = 'NACIONAL'.
*
*          IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*            wa_mwskz-ok = 'X'.
*          ELSE.
*            wa_mwskz-ok = ''.
*          ENDIF.
*        ELSE.
*          READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'ISP'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            wa_mwskz-set = 'ERROR'.
*          ENDIF.
*        ENDIF.
*
*        APPEND wa_mwskz TO t_mwskz.
*      ENDLOOP.
*
*    ELSE.
*      "verificamos si el país del proveedor es de la UE
*      SELECT SINGLE xegld FROM t005
*        INTO lv_xegld
*        WHERE land1 = lv_pais_prov.
*
*      IF lv_xegld = 'X'. "es UE
*        "verificamos que los indicadores de la factura estén dentro del rango de ZFI_IvaSopComunitario ó de ZFI_IvaSopISP
*        LOOP AT ti_rseg_new INTO wa_rseg.
*          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*            EXPORTING
*              input  = wa_rseg-buzei
*            IMPORTING
*              output = wa_mwskz-buzei.
*
*          READ TABLE t_comunitario  INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'COMUNITARIO'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*            IF sy-subrc = 0.
*              wa_mwskz-set = 'ISP'.
*
*              IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*                wa_mwskz-ok = 'X'.
*              ELSE.
*                wa_mwskz-ok = ''.
*              ENDIF.
*            ELSE.
*              wa_mwskz-set = 'ERROR'.
*            ENDIF.
*          ENDIF.
*
*          APPEND wa_mwskz TO t_mwskz.
*
*        ENDLOOP.
*      ELSE.
*        "verificamos que los indicadores de la factura estén dentro del rango de FI_IvaSopExtranjero
*        LOOP AT ti_rseg_new INTO wa_rseg.
*          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*            EXPORTING
*              input  = wa_rseg-buzei
*            IMPORTING
*              output = wa_mwskz-buzei.
*
*          READ TABLE t_extranjero  INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'EXTRANJERO'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            wa_mwskz-set = 'ERROR'.
*          ENDIF.
*
*          APPEND wa_mwskz TO t_mwskz.
*        ENDLOOP.
*      ENDIF.
*    ENDIF.

*--> INI FCARDONA 18.10.2021 67171 - Informe INTRASTAT SAP.


* "Comento para optimizar lógica.
*
*    IF lv_pais_prov = lv_pais_sociedad.
*      "verificamos que los indicadores de la factura estén dentro del rango de ZFI_IVASOPNACIONAL ó de ZFI_IvaSopISP
*      LOOP AT ti_rseg_new INTO DATA(wa_rseg).
*        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*          EXPORTING
*            input  = wa_rseg-buzei
*          IMPORTING
*            output = wa_mwskz-buzei.
*
*        READ TABLE t_nacional INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*        IF sy-subrc = 0.
*          wa_mwskz-set = 'NACIONAL'.
*
*          IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*            wa_mwskz-ok = 'X'.
*          ELSE.
*            wa_mwskz-ok = ''.
*          ENDIF.
*        ELSE.
*          READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'ISP'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            wa_mwskz-set = 'ERROR'.
*          ENDIF.
*        ENDIF.
*
*        APPEND wa_mwskz TO t_mwskz.
*      ENDLOOP.
*
*      LOOP AT ti_rbco_new INTO DATA(wa_rbco) WHERE buzei IS INITIAL.
*        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*          EXPORTING
*            input  = wa_rbco-buzei
*          IMPORTING
*            output = wa_mwskz-buzei.
*
*        READ TABLE t_nacional INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
*        IF sy-subrc = 0.
*          wa_mwskz-set = 'NACIONAL'.
*
*          IF wa_rbco-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*            wa_mwskz-ok = 'X'.
*          ELSE.
*            wa_mwskz-ok = ''.
*          ENDIF.
*        ELSE.
*          READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'ISP'.
*
*            IF wa_rbco-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            wa_mwskz-set = 'ERROR'.
*          ENDIF.
*        ENDIF.
*
*        APPEND wa_mwskz TO t_mwskz.
*      ENDLOOP.
*
*    ELSE.
*      "verificamos si el país del proveedor es de la UE
*      SELECT SINGLE xegld FROM t005
*        INTO lv_xegld
*        WHERE land1 = lv_pais_prov.
*
*      IF lv_xegld = 'X'. "es UE
*        "verificamos que los indicadores de la factura estén dentro del rango de ZFI_IvaSopComunitario ó de ZFI_IvaSopISP
*        LOOP AT ti_rseg_new INTO wa_rseg.
*          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*            EXPORTING
*              input  = wa_rseg-buzei
*            IMPORTING
*              output = wa_mwskz-buzei.
*
*          READ TABLE t_comunitario  INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'COMUNITARIO'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*            IF sy-subrc = 0.
*              wa_mwskz-set = 'ISP'.
*
*              IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*                wa_mwskz-ok = 'X'.
*              ELSE.
*                wa_mwskz-ok = ''.
*              ENDIF.
*            ELSE.
*              wa_mwskz-set = 'ERROR'.
*            ENDIF.
*          ENDIF.
*
*          APPEND wa_mwskz TO t_mwskz.
*
*        ENDLOOP.
*
*        LOOP AT ti_rbco_new INTO wa_rbco WHERE buzei IS INITIAL.
*          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*            EXPORTING
*              input  = wa_rbco-buzei
*            IMPORTING
*              output = wa_mwskz-buzei.
*
*          READ TABLE t_comunitario  INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'COMUNITARIO'.
*
*            IF wa_rbco-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
*            IF sy-subrc = 0.
*              wa_mwskz-set = 'ISP'.
*
*              IF wa_rbco-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*                wa_mwskz-ok = 'X'.
*              ELSE.
*                wa_mwskz-ok = ''.
*              ENDIF.
*            ELSE.
*              wa_mwskz-set = 'ERROR'.
*            ENDIF.
*          ENDIF.
*
*          APPEND wa_mwskz TO t_mwskz.
*
*        ENDLOOP.
*
*      ELSE.
*        "verificamos que los indicadores de la factura estén dentro del rango de FI_IvaSopExtranjero
*        LOOP AT ti_rseg_new INTO wa_rseg.
*          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*            EXPORTING
*              input  = wa_rseg-buzei
*            IMPORTING
*              output = wa_mwskz-buzei.
*
*          READ TABLE t_extranjero  INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'EXTRANJERO'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            wa_mwskz-set = 'ERROR'.
*          ENDIF.
*
*          APPEND wa_mwskz TO t_mwskz.
*        ENDLOOP.
*
*        LOOP AT ti_rbco_new INTO wa_rbco WHERE buzei IS INITIAL.
*          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*            EXPORTING
*              input  = wa_rbco-buzei
*            IMPORTING
*              output = wa_mwskz-buzei.
*
*          READ TABLE t_extranjero  INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
*          IF sy-subrc = 0.
*            wa_mwskz-set = 'EXTRANJERO'.
*
*            IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
*              wa_mwskz-ok = 'X'.
*            ELSE.
*              wa_mwskz-ok = ''.
*            ENDIF.
*          ELSE.
*            wa_mwskz-set = 'ERROR'.
*          ENDIF.
*
*          APPEND wa_mwskz TO t_mwskz.
*        ENDLOOP.
*
*      ENDIF.
*    ENDIF.
*

    "Recorremos tabla RSEG
    LOOP AT ti_rseg_new INTO DATA(wa_rseg).

      "Posición de factura
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          input  = wa_rseg-buzei
        IMPORTING
          output = wa_mwskz-buzei.

      "Comprobamos si pais de proveedor es el mismo que el pais de la sociedad.
      IF ( lv_pais_prov = lv_pais_sociedad ). "NACIONAL

        READ TABLE t_nacional INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
        IF sy-subrc = 0.
          wa_mwskz-set = lc_nacional.
        ELSE.
          READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
          IF sy-subrc = 0.
            wa_mwskz-set = lc_isp.
          ELSE.
            wa_mwskz-set = lc_error.
          ENDIF.
        ENDIF.

      ELSE. "EXTRANJERO

        "verificamos si el país del proveedor es de la UE
        SELECT SINGLE xegld FROM t005
          INTO lv_xegld
          WHERE land1 = lv_pais_prov.

        IF lv_xegld = abap_true. "es UE

          ""CHEQUEO TIPOS IVA
          READ TABLE t_comunitario  INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
          IF sy-subrc = 0.
            wa_mwskz-set = lc_comunitario.
          ELSE.
            READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
            IF sy-subrc = 0.
              wa_mwskz-set = lc_isp.
            ELSE.
              wa_mwskz-set = lc_error.
            ENDIF.
          ENDIF.

          ""CHEQUEO INTRASTAT
          IF ( wa_rseg-ebeln IS NOT INITIAL ).

            "Obtenemos indicador de impuestos de pedido
            SELECT SINGLE mwskz
              FROM ekpo
              INTO @DATA(lv_mwskz_check)
             WHERE ebeln = @wa_rseg-ebeln
               AND ebelp = @wa_rseg-ebelp.

            "Si tenemos posición de pedido
            IF ( sy-subrc = 0 ).

              DATA: lr_mwskz TYPE RANGE OF mwskz,
                    ls_mwskz LIKE LINE OF lr_mwskz.

              SELECT *
                FROM tvarvc
                INTO @DATA(ls_mwskz_values)
               WHERE name = 'ZMM_INTRASTAT_TIVA'.

                CLEAR: ls_mwskz.
                ls_mwskz-sign   = ls_mwskz_values-sign.
                ls_mwskz-option = ls_mwskz_values-opti.
                ls_mwskz-low    = ls_mwskz_values-low.
                ls_mwskz-high   = ls_mwskz_values-high.
                APPEND ls_mwskz TO lr_mwskz.

              ENDSELECT.

              IF ( sy-subrc = 0 ).

                "Comprobaciones:
                " 1. El indicador de IVA en pedido es de servicio.
                IF ( lv_mwskz_check IN lr_mwskz ). "es de servicio

                  "En pedido se fijó indicador de IVA de servicio (TVARVC --> ZMM_INTRASTAT_TIVA)
                  "2.1. Comprobamos si coinciden
                  IF ( lv_mwskz_check <> wa_rseg-mwskz ). "No coinciden

                    "2.2.1 Comprobamos si ind. IVA en factura es de servicio
                    IF ( wa_rseg-mwskz IN lr_mwskz ). "Es de servicio
                      MESSAGE e186(zmm) WITH wa_mwskz-buzei. " Ind. de IVA de servicio
                    ELSE. "No es de servicio.
                      MESSAGE e185(zmm) WITH wa_mwskz-buzei. " Ind. de IVA no coincide
                    ENDIF.

                  ENDIF.

                ELSE. "No es de servicio

                  "2.2 Comprobamos que en factura tampoco sea de servicio
                  IF ( wa_rseg-mwskz IN lr_mwskz ). "Es de servicio
                    MESSAGE e187(zmm) WITH wa_mwskz-buzei. " Ind. de IVA no de servicio
                  ENDIF.

                ENDIF. "Fin es de servicio

              ENDIF.

            ENDIF.

          ENDIF.

        ELSE. "No es UE

          READ TABLE t_extranjero  INTO wa_iva WITH KEY from(1) = wa_rseg-mwskz(1).
          IF sy-subrc = 0.
            wa_mwskz-set = lc_extranjero.
          ELSE.
            wa_mwskz-set = lc_error.
          ENDIF.

        ENDIF. "Fin chequeo UE

      ENDIF.

      IF ( wa_mwskz-set = lc_nacional OR wa_mwskz-set = lc_comunitario OR wa_mwskz-set = lc_extranjero OR wa_mwskz-set = lc_isp ).

        IF wa_rseg-mwskz BETWEEN wa_iva-from AND wa_iva-to.
          wa_mwskz-ok = abap_true.
        ELSE.
          wa_mwskz-ok = space.
        ENDIF.

      ENDIF.

      APPEND wa_mwskz TO t_mwskz.

    ENDLOOP.

    "Recorremos la tabla RBCO (añadidos)
    LOOP AT ti_rbco_new INTO DATA(wa_rbco) WHERE buzei IS INITIAL.
**** 21.12.2021 MODIFICACION CHEQUEO IVA - LER - 67171 - Informe INTRASTAT SAP.
      CHECK wa_rbco-mwskz NE space.
      CLEAR wa_mwskz.

***** fin modificacion

      "Comprobamos si pais de proveedor es el mismo que el pais de la sociedad.
      IF ( lv_pais_prov = lv_pais_sociedad ). "NACIONAL

        READ TABLE t_nacional INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
        IF sy-subrc = 0.
          wa_mwskz-set = lc_nacional.
        ELSE.
          READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
          IF sy-subrc = 0.
            wa_mwskz-set = lc_isp.
          ELSE.
            wa_mwskz-set = lc_error.
          ENDIF.
        ENDIF.

      ELSE. "EXTRANJERO

        "verificamos si el país del proveedor es de la UE
        SELECT SINGLE xegld FROM t005
          INTO lv_xegld
          WHERE land1 = lv_pais_prov.

        IF lv_xegld = abap_true. "es UE

          ""CHEQUEO TIPOS IVA
          READ TABLE t_comunitario  INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
          IF sy-subrc = 0.
            wa_mwskz-set = lc_comunitario.
          ELSE.
            READ TABLE t_isp INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
            IF sy-subrc = 0.
              wa_mwskz-set = lc_isp.
            ELSE.
              wa_mwskz-set = lc_error.
            ENDIF.
          ENDIF.

        ELSE. "No es UE

          READ TABLE t_extranjero  INTO wa_iva WITH KEY from(1) = wa_rbco-mwskz(1).
          IF sy-subrc = 0.
            wa_mwskz-set = lc_extranjero.
          ELSE.
            wa_mwskz-set = lc_error.
          ENDIF.

        ENDIF. "Fin chequeo UE

      ENDIF.

      IF ( wa_mwskz-set = lc_nacional OR wa_mwskz-set = lc_comunitario OR wa_mwskz-set = lc_extranjero OR wa_mwskz-set = lc_isp ).

        IF wa_rbco-mwskz BETWEEN wa_iva-from AND wa_iva-to.
          wa_mwskz-ok = abap_true.
        ELSE.
          wa_mwskz-ok = space.
        ENDIF.

      ENDIF.

      APPEND wa_mwskz TO t_mwskz.

    ENDLOOP.

*<-- FIN FCARDONA 18.10.2021 67171 - Informe INTRASTAT SAP.


    LOOP AT t_mwskz INTO wa_mwskz.
      MOVE-CORRESPONDING wa_mwskz TO wa_set.
      APPEND wa_set TO t_set.
    ENDLOOP.

    SORT t_set.
    DELETE ADJACENT DUPLICATES FROM t_set.
    DESCRIBE TABLE t_set LINES num_reg.

    IF num_reg = 1.
      READ TABLE t_set INTO wa_set INDEX 1.
      IF wa_set-set = 'ERROR'.
        LOOP AT t_mwskz INTO wa_mwskz WHERE set = wa_set-set.
          CONCATENATE lv_pos wa_mwskz-buzei INTO lv_pos SEPARATED BY space.
        ENDLOOP.

        IF lv_pos IS NOT INITIAL.
          CONDENSE lv_pos.
          MESSAGE e181(zmm) WITH lv_pos. " Tipo de iva erróneo en posición &
        ENDIF.
      ENDIF.
    ELSE.

      LOOP AT t_mwskz INTO wa_mwskz WHERE set = 'ERROR' OR set = ' '.
        CONCATENATE lv_pos wa_mwskz-buzei INTO lv_pos SEPARATED BY space.
      ENDLOOP.

      IF lv_pos IS NOT INITIAL.
        CONDENSE lv_pos.
        MESSAGE e181(zmm) WITH lv_pos. " Tipo de iva erróneo en posición &
      ELSE.
        MESSAGE e182(zmm). " Error: Contabilización con varios tipos de IVA.
      ENDIF.
    ENDIF.
*   FIN CGIJON - 23.04.21 - SAT 7000037652, Ticket 65125


*--> INI FCARDONA 14.10.2021 69054 - Validación tipos IVA incompatibles MIRO.


*- "Comento por nueva lógica.

**--> INI FCARDONA 05.07.2021 67652 - Validar si B2 y B4 en factura es correcto.
*
*    DATA: lv_answer TYPE c.
*
**    READ TABLE ti_rseg_new WITH KEY mwskz = 'B2' TRANSPORTING NO FIELDS.
**    IF ( sy-subrc = 0 ).
**      READ TABLE ti_rseg_new WITH KEY mwskz = 'B4' TRANSPORTING NO FIELDS.
**      IF ( sy-subrc = 0 ).
**        CALL FUNCTION 'POPUP_TO_CONFIRM'
**          EXPORTING
**            titlebar              = 'Tipos de IVA diferentes'
**            text_question         = 'Se va a contabilizar la factura con los indicadores de IVA B2 y B4 en diferentes posiciones, ¿está seguro que desea continuar?'
**            text_button_1         = 'SI'
**            icon_button_1         = 'ICON_CHECKED'
**            text_button_2         = 'NO'
**            icon_button_2         = 'ICON_CANCEL'
**            display_cancel_button = ' '
**            popup_type            = 'ICON_MESSAGE_WARNING'
**          IMPORTING
**            answer                = lv_answer.
**        IF lv_answer = 2.
**          MESSAGE e182(zmm).
**        ENDIF.
**      ENDIF.
**    ENDIF.
*
**<-- FIN FCARDONA 05.07.2021 67652 - Validar si B2 y B4 en factura es correcto.

    DATA: lv_answer TYPE c.

    CLEAR: lv_error.

    READ TABLE ti_rseg_new WITH KEY mwskz = 'B2' TRANSPORTING NO FIELDS.
    IF ( sy-subrc = 0 ).
      READ TABLE ti_rseg_new WITH KEY mwskz = 'B4' TRANSPORTING NO FIELDS.
      IF ( sy-subrc = 0 ).
        lv_error = abap_true.
      ELSE.
        READ TABLE ti_rbco_new WITH KEY mwskz = 'B4' TRANSPORTING NO FIELDS.
        IF ( sy-subrc = 0 ).
          lv_error = abap_true.
        ENDIF.
      ENDIF.
    ELSE.
      READ TABLE ti_rbco_new WITH KEY mwskz = 'B2' TRANSPORTING NO FIELDS.
      IF ( sy-subrc = 0 ).
        READ TABLE ti_rbco_new WITH KEY mwskz = 'B4' TRANSPORTING NO FIELDS.
        IF ( sy-subrc = 0 ).
          lv_error = abap_true.
        ELSE.
          READ TABLE ti_rseg_new WITH KEY mwskz = 'B4' TRANSPORTING NO FIELDS.
          IF ( sy-subrc = 0 ).
            lv_error = abap_true.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

    IF ( lv_error IS NOT INITIAL ).
      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          titlebar              = 'Tipos de IVA diferentes'
          text_question         = 'Se va a contabilizar la factura con los indicadores de IVA B2 y B4 en diferentes posiciones, ¿está seguro que desea continuar?'
          text_button_1         = 'SI'
          icon_button_1         = 'ICON_CHECKED'
          text_button_2         = 'NO'
          icon_button_2         = 'ICON_CANCEL'
          display_cancel_button = ' '
          popup_type            = 'ICON_MESSAGE_WARNING'
        IMPORTING
          answer                = lv_answer.
      IF lv_answer = 2.
        MESSAGE e182(zmm).
      ENDIF.
    ENDIF.

*<-- FIN FCARDONA 14.10.2021 69054 - Validación tipos IVA incompatibles MIRO.

***** INICIO MODIFICACION 69361 - AVISO BANCO INTERLOCUTOR 2040 - LER 01.12.21***
    IF sy-tcode = 'MIRO' AND s_rbkp_new-bukrs = '2040' AND s_rbkp_new-bvtyp IS INITIAL.
      SELECT SINGLE bvtyp FROM lfbk
        INTO lv_bvtyp
        WHERE lifnr = s_rbkp_new-lifnr
        AND bvtyp = '2040'.
      IF sy-subrc = 0
        AND lv_bvtyp IS NOT INITIAL.
        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            titlebar              = 'Existe banco 2040'
            text_question         = 'El proveedor tiene un banco interolocutor 2040. ¿Desea actualizar los datos?'
            text_button_1         = 'SI'
            icon_button_1         = 'ICON_CHECKED'
            text_button_2         = 'NO'
            icon_button_2         = 'ICON_CANCEL'
            display_cancel_button = ' '
            popup_type            = 'ICON_MESSAGE_WARNING'
          IMPORTING
            answer                = lv_answer.
        IF lv_answer = 1.
          MESSAGE 'Acción cancelada por el usuario' TYPE 'E'.
        ENDIF.
      ENDIF.
    ENDIF.
***** FIN MODIFICACION 69361 - AVISO BANCO INTERLOCUTOR 2040 - LER 01.12.21***

***** INICIO LESCRIVA 71849 VALIDACION FECHA DE DOCUMENTO FUTURA EN FACTURAS

 IF sy-tcode = 'MIRO' and s_rbkp_new-bukrs is not initial.

 DATA: ls_bkpf TYPE bkpf,
*  lt_tvarvc TYPE table of TVARVC,
*  l_ejercicio TYPE tvarv_val,
*  l_periodo TYPE tvarv_val,
*  l_yeardoc type gjahr,
*  l_perdoc type monat,
  l_fechadoc type budat.

**Calculamos el año actual a partir de la variable de la tvarvc.
*Select single low
*  from tvarvc
*  into l_ejercicio
*  where name = 'RV_ACTUAL_YEAR'.
*
**Calculamos el periodo actual a partir de la variable de la tvarvc.
*
*Select single low
*from tvarvc
*into l_periodo
*where name = 'RV_ACTUAL_MONTH'.
*
**obtenemos el periodo y el año de la fecha del documento
*IF s_rbkp_new-blart IS NOT INITIAL.
* l_perdoc = s_rbkp_new-bldat+4(2).
* l_yeardoc = s_rbkp_new-BLDAT(4).
*ENDIF.
*
**Comparamos periodo y año del documetno con el periodo y año actual.
*IF ( l_perdoc > l_periodo AND l_yeardoc >= l_ejercicio )
*OR ( l_yeardoc > l_ejercicio ).

*Comparamos Fecha del documento con la fecha del sistema.
 IF s_rbkp_new-bldat IS NOT INITIAL.
   l_fechadoc = s_rbkp_new-bldat.
   IF l_fechadoc > SY-DATUM.
       MESSAGE e043(zfi) with s_rbkp_new-blart.
      ENDIF.
      ENDIF.
ENDIF.

***** FIN LESCRIVA 71849 VALIDACION FECHA DE DOCUMENTO FUTURA EN FACTURAS
  ENDMETHOD.
  method IF_EX_INVOICE_UPDATE~CHANGE_BEFORE_UPDATE.
  endmethod.
  method IF_EX_INVOICE_UPDATE~CHANGE_IN_UPDATE.
  endmethod.
endclass. "ZCL_IM_ZINVOICE_UPDATE definition
endclass. "ZCL_IM_ZINVOICE_UPDATE implementation
