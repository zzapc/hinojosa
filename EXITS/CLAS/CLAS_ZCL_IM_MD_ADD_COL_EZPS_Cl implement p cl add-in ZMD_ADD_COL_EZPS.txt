
class ZCL_IM_MD_ADD_COL_EZPS definition
  public
  final
  create public .

public section.

  interfaces IF_EX_MD_ADD_COL_EZPS .
protected section.
private section.
endclass. "ZCL_IM_MD_ADD_COL_EZPS definition
class ZCL_IM_MD_ADD_COL_EZPS implementation.
  METHOD if_ex_md_add_col_ezps~activate_add_columns.
    " cvivo - 61615 - 20.10.20 - Proyecto MRP: mostrar stock en Paper en MD04

    button1_ez = 'Stock en paper'.
    ez1_mode = '3'.
  ENDMETHOD.
  METHOD if_ex_md_add_col_ezps~fill_add_columns.
    " cvivo - 61615 - 20.10.20 - Proyecto MRP: mostrar stock en Paper en MD04
    DATA: BEGIN OF lw_mchb.
            INCLUDE TYPE mchb.
    DATA: objek  TYPE cuobn,
          objnum TYPE objnum,
          cuobj  TYPE cuobj,
          klart  TYPE klassenart,
          END OF lw_mchb.
    DATA: lt_mchb LIKE TABLE OF lw_mchb.
    DATA: lv_clabs TYPE mchb-clabs.

    DATA: it_inob          TYPE TABLE OF inob,
          inob             TYPE inob,
          it_ausp_pedido   TYPE TABLE OF ausp,
          it_ausp_posicion LIKE it_ausp_pedido,
          it_ausp_decision LIKE it_ausp_pedido,
          ausp             TYPE ausp,
          lv_atinn         TYPE atinn,
          lv_atwrt         TYPE ausp-atwrt.

    DATA: s_atnam  TYPE RANGE OF cabn-atnam,
          sl_atnam LIKE LINE OF s_atnam,
          s_atinn  TYPE RANGE OF cabn-atinn,
          sl_atinn LIKE LINE OF s_atinn.

    IF ie3mdpslx-delkz EQ 'BE' AND ie3mdpslx-wrk02 NE space. "pedido de compras interco
      SELECT * FROM mchb
        INTO CORRESPONDING FIELDS OF TABLE lt_mchb
        WHERE clabs GT 0
          AND matnr EQ imt61d-matnr
          AND werks EQ ie3mdpslx-wrk02.

      LOOP AT lt_mchb ASSIGNING FIELD-SYMBOL(<data>).
        CONCATENATE <data>-matnr <data>-charg INTO inob-objek.
        <data>-objek = inob-objek.
        inob-obtab = 'MCH1'.
        inob-klart = '023'.
        <data>-klart = inob-klart.
        APPEND inob TO it_inob.
      ENDLOOP.

      SELECT *
      FROM inob INTO TABLE it_inob
      FOR ALL ENTRIES IN it_inob
      WHERE klart EQ it_inob-klart
      AND obtab EQ it_inob-obtab
      AND objek EQ it_inob-objek.

      LOOP AT it_inob INTO inob.
        LOOP AT lt_mchb ASSIGNING <data> WHERE objek = inob-objek.
          <data>-cuobj = inob-cuobj.
          <data>-objnum = inob-cuobj.
        ENDLOOP.
      ENDLOOP.

      " primero cogemos los lotes de este pedido
      SELECT SINGLE atinn FROM cabn
        INTO lv_atinn
        WHERE atnam EQ 'Z_PEDIDO'.

      WRITE ie3mdpslx-delnr TO lv_atwrt. SHIFT lv_atwrt LEFT DELETING LEADING '0'.

      SELECT *
      FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp_pedido
      FOR ALL ENTRIES IN lt_mchb
      WHERE objek EQ lt_mchb-objnum
      AND klart EQ lt_mchb-klart
      AND atinn EQ lv_atinn
      AND atwrt EQ lv_atwrt.

      CHECK sy-subrc EQ 0.

      " luego cogemos sólo los de la posición correspondiente
      SELECT SINGLE atinn FROM cabn
      INTO lv_atinn
      WHERE atnam EQ 'Z_POSICION'.

      WRITE ie3mdpslx-delps TO lv_atwrt. SHIFT lv_atwrt LEFT DELETING LEADING '0'.

      SELECT *
      FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp_posicion
      FOR ALL ENTRIES IN it_ausp_pedido
      WHERE objek EQ it_ausp_pedido-objek
      AND klart EQ it_ausp_pedido-klart
      AND atinn EQ lv_atinn
      AND atwrt EQ lv_atwrt.

      CHECK sy-subrc EQ 0.

      " finalmente los que tengan decisión de empleo A
      SELECT SINGLE atinn FROM cabn
      INTO lv_atinn
      WHERE atnam EQ 'LOBM_UDCODE'.

      lv_atwrt = 'DE       A'.

      SELECT *
      FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp_decision
      FOR ALL ENTRIES IN it_ausp_posicion
      WHERE objek EQ it_ausp_posicion-objek
      AND klart EQ it_ausp_posicion-klart
      AND atinn EQ lv_atinn
      AND atwrt EQ lv_atwrt.

      CHECK sy-subrc EQ 0.

      LOOP AT it_ausp_decision INTO ausp.
        READ TABLE lt_mchb WITH KEY objnum = ausp-objek INTO DATA(mchb).

        IF sy-subrc EQ 0.
          ADD mchb-clabs TO lv_clabs.
        ENDIF.
      ENDLOOP.

      SET COUNTRY 'ES'.
      WRITE CONV i( lv_clabs ) TO emdezx_usex1.

*
*      sl_atnam-sign = 'I'.
*      sl_atnam-option = 'EQ'.
*      sl_atnam-low = 'LOBM_UDCODE'.
*      APPEND sl_atnam TO s_atnam.
*      sl_atnam-low = 'Z_PEDIDO'.
*      APPEND sl_atnam TO s_atnam.
*      sl_atnam-low = 'Z_POSICION'.
*      APPEND sl_atnam TO s_atnam.
*
*      SELECT * FROM cabn
*        WHERE atnam IN @s_atnam
*        INTO TABLE @DATA(it_cabn).
*
*      LOOP AT it_cabn INTO DATA(cabn).
*        sl_atinn-sign = 'I'.
*        sl_atinn-option = 'EQ'.
*        sl_atinn-low = cabn-atinn.
*        APPEND sl_atinn TO s_atinn.
*      ENDLOOP.
*
*      SELECT objek atwrt
*      FROM ausp INTO CORRESPONDING FIELDS OF TABLE it_ausp
*      FOR ALL ENTRIES IN lt_mchb
*      WHERE objek EQ lt_mchb-objnum
*      AND klart EQ lt_mchb-klart
*      AND atinn IN s_atinn.
*
*
*
*      LOOP AT it_ausp INTO ausp.
*        LOOP AT lt_mchb ASSIGNING <data> WHERE objnum = ausp-objek.
**          MOVE ausp-atwrt TO <data>-decision.
*        ENDLOOP.
*      ENDLOOP.
    ENDIF.
  ENDMETHOD.
endclass. "ZCL_IM_MD_ADD_COL_EZPS definition
endclass. "ZCL_IM_MD_ADD_COL_EZPS implementation
