
class ZCL_IM_BATCH_MASTER definition
  public
  final
  create public .

public section.

  interfaces IF_EX_BATCH_MASTER .
protected section.
private section.
endclass. "ZCL_IM_BATCH_MASTER definition
class ZCL_IM_BATCH_MASTER implementation.
  METHOD if_ex_batch_master~check_classif_before_save.

    DATA:lt_values_database          TYPE tt_ausp,
         ls_values_database          LIKE LINE OF lt_values_database,
         lt_values_buffer            TYPE tt_ausp,
         ls_values_buffer            LIKE LINE OF lt_values_buffer,
         lv_werks                    TYPE werks_d,
         lv_objek                    TYPE cuobn,
         lv_centro                   TYPE c LENGTH 2,
         lv_charg                    TYPE string,
         ls_mat                      TYPE mchb,
         ls_values_database_diametro LIKE LINE OF lt_values_database,
         ls_values_database_peso     LIKE LINE OF lt_values_database,
         ls_values_database_cliente  LIKE LINE OF lt_values_database,
         ls_values_database_decode   LIKE LINE OF lt_values_database,
         ls_values_buffer_diametro   LIKE LINE OF lt_values_buffer,
         ls_values_buffer_peso       LIKE LINE OF lt_values_buffer,
         ls_values_buffer_cliente    LIKE LINE OF lt_values_buffer,
         ls_values_buffer_decode     LIKE LINE OF lt_values_buffer,
         l_num_diam                  TYPE p DECIMALS 0,
         l_num_peso                  TYPE p DECIMALS 0,
         lo_smile                    TYPE REF TO zco_si_smile80_su_data_out_sap,
         ls_output                   TYPE zmt_smile80_su_data_out_sap_to,
         ls_zdt_smile80_su_sap_t3    TYPE zdt_smile80_su_data_out_sap_t3,
         ls_document                 TYPE zdt_smile80_su_data_out_sap_t2,
         ls_body                     TYPE zdt_smile80_su_data_out_sap_t4,
         ls_stock_unit               TYPE zdt_smile80_su_data_out_sap_to,
         ls_header                   TYPE zdt_smile80_su_data_out_sap_t1,
         lv_rango                    TYPE nrnr,
         lv_mensaje_id               TYPE string,
         tsl                         TYPE timestampl,
         lv_decode                   TYPE string,
         lv_matnr                    TYPE string,
         ls_zte80_messages           TYPE zte80_messages.

    CREATE OBJECT lo_smile.

    CHECK sy-tcode EQ 'MSC2N'.

    lv_objek = i_objek.

    lv_centro = lv_objek+21(2).
    lv_charg = lv_objek+18(10). "Obtenemos el lote
    lv_objek = i_objek.

    SELECT SINGLE *
    FROM mchb
    INTO ls_mat
    WHERE charg = lv_charg AND clabs NE 0.

    IF lv_centro = 'PB' AND sy-subrc = 0. "Solo para bobinas de la Alqueria con stock

      lv_werks = '3000'.

      READ TABLE it_values_buffer   WITH KEY atinn = '0000000810' INTO ls_values_buffer_diametro.
      READ TABLE it_values_database WITH KEY atinn = '0000000810' INTO ls_values_database_diametro.

      READ TABLE it_values_buffer   WITH KEY atinn = '0000000811' INTO ls_values_buffer_peso.
      READ TABLE it_values_database WITH KEY atinn = '0000000811' INTO ls_values_database_peso.

      READ TABLE it_values_buffer   WITH KEY atinn = '0000000814' INTO ls_values_buffer_cliente.
      READ TABLE it_values_database WITH KEY atinn = '0000000814' INTO ls_values_database_cliente.

      READ TABLE it_values_buffer   WITH KEY atinn = '9999999414' INTO ls_values_buffer_decode.
      READ TABLE it_values_database WITH KEY atinn = '9999999414' INTO ls_values_database_decode.

      IF ls_values_buffer_diametro-atflv NE ls_values_database_diametro-atflv OR ls_values_buffer_peso-atflv   NE ls_values_database_peso-atflv OR
         ls_values_buffer_cliente-atwrt  NE ls_values_database_cliente-atwrt  OR ls_values_buffer_decode-atwrt NE ls_values_database_decode-atwrt. "Si cambia una de las características enviamos a E80

        l_num_diam = ls_values_buffer_diametro-atflv. "Enviamos sin notación científica

        l_num_peso = ls_values_buffer_peso-atflv. "Enviamos sin notación científica

        ls_values_buffer_cliente-atwrt = |{ ls_values_buffer_cliente-atwrt ALPHA = OUT }|. "quitamos ceros

        lv_decode = ls_values_buffer_decode-atwrt+9(1).

        CASE lv_werks.
          WHEN '3000'. lv_rango = '01'.
        ENDCASE.

        CALL FUNCTION 'NUMBER_GET_NEXT'
          EXPORTING
            nr_range_nr   = lv_rango
            object        = 'ZPP_E80MSG'
            quantity      = '1'
            ignore_buffer = 'X'
          IMPORTING
            number        = lv_mensaje_id.

        IF sy-subrc <> 0.
* Implement suitable error handling here
        ENDIF.

        GET TIME STAMP FIELD tsl.

        lv_matnr = ls_mat-matnr.
        lv_matnr = |{ lv_matnr ALPHA = OUT }|.

        ls_header-message_id = lv_mensaje_id.
        ls_header-message_type = 'SU_DATA'.
        ls_header-receiver = 'E80'.
        ls_header-send_date = tsl.
        ls_header-sender = 'HOST'.

        ls_stock_unit-lpn                  = lv_charg.
        ls_stock_unit-sku                  = lv_matnr.
        ls_stock_unit-stock_unit_category  = ls_mat-lgort.
        ls_stock_unit-requested_footprints = '6'.
        ls_stock_unit-diameter             = l_num_diam.
        ls_stock_unit-weight               = l_num_peso.
        ls_stock_unit-customer             = ls_values_buffer_cliente-atwrt.
        ls_stock_unit-decode               = lv_decode.

        ls_body-stock_unit = ls_stock_unit.
        ls_document-body = ls_body.
        ls_document-header = ls_header.
        ls_zdt_smile80_su_sap_t3-document = ls_document.
        ls_output-mt_smile80_su_data_out_sap_to = ls_zdt_smile80_su_sap_t3.

        lo_smile->si_smile80_su_data_out_sap_to(
         EXPORTING output = ls_output ).

        ls_zte80_messages-id_mensaje = lv_mensaje_id.
        ls_zte80_messages-estado = '0'.
        ls_zte80_messages-centro = lv_werks.
        ls_zte80_messages-fecha_env = sy-datum.
        ls_zte80_messages-hora_env = sy-uzeit.
        ls_zte80_messages-tipo_mensaje = 'SU_DATA'.
        ls_zte80_messages-numero_de_dcmnt = lv_charg.
        MODIFY zte80_messages FROM ls_zte80_messages.

      ENDIF.
    ENDIF.

  ENDMETHOD.
  method IF_EX_BATCH_MASTER~CHECK_DATA_BEFORE_SAVE.


  endmethod.
  method IF_EX_BATCH_MASTER~LOCK_BATCH_MASTER_IN_MIGO.
  endmethod.
  method IF_EX_BATCH_MASTER~SINGLE_FIELD_CONTROL.
  endmethod.
endclass. "ZCL_IM_BATCH_MASTER definition
endclass. "ZCL_IM_BATCH_MASTER implementation
