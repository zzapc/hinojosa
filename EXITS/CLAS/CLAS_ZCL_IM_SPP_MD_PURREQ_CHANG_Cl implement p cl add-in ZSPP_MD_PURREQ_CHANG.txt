
class ZCL_IM_SPP_MD_PURREQ_CHANG definition
  public
  final
  create public .

public section.

  interfaces IF_EX_MD_PURREQ_CHANGE .
protected section.
private section.
endclass. "ZCL_IM_SPP_MD_PURREQ_CHANG definition
class ZCL_IM_SPP_MD_PURREQ_CHANG implementation.
  METHOD if_ex_md_purreq_change~change_before_save_conv.
  ENDMETHOD.
  METHOD if_ex_md_purreq_change~change_before_save_mrp.

    IF NOT ( ch_eban-pstyp = '3' OR ch_eban-pstyp = '7' ).
      IF ch_eban-werks EQ '2003' OR ch_eban-werks EQ '2001'.
        IF ch_eban-knttp IS NOT INITIAL.
          ch_eban-bsart = 'ZSP2'.
          ch_changed = 'X'.
        ELSE.
          ch_eban-bsart = 'ZSP1'.
          ch_changed = 'X'.
        ENDIF.
      ENDIF.
    ENDIF.

*****    DATA: lv_matnr TYPE marc-matnr,
*****          lv_werks TYPE marc-werks,
*****          it_mdezx TYPE TABLE OF mdez.
*****
*****    lv_matnr = ch_eban-matnr.
*****    lv_werks = ch_eban-werks.
*****
*****    FREE it_mdezx.
*****
*****    CALL FUNCTION 'MD_STOCK_REQUIREMENTS_LIST_API'
*****      EXPORTING
******       PLSCN                    =
*****        matnr                    = lv_matnr
*****        werks                    = lv_werks
******       BERID                    =
******       ERGBZ                    =
******       AFIBZ                    =
******       INPER                    =
******       DISPLAY_LIST_MDPSX       =
******       DISPLAY_LIST_MDEZX       =
******       DISPLAY_LIST_MDSUX       =
******       NOBUF                    =
******       PLAUF                    =
******       I_VRFWE                  =
******       IS_SFILT                 =
******       IS_AFILT                 =
******       IV_FILL_MDSTA            = 'X'
******   IMPORTING
******       E_MT61D                  =
******       E_MDKP                   =
******       E_CM61M                  =
******       E_MDSTA                  =
******       E_ERGBZ                  =
*****      TABLES
******       MDPSX                    =
*****        mdezx                    = it_mdezx
******       MDSUX                    =
*****      EXCEPTIONS
*****        material_plant_not_found = 1
*****        plant_not_found          = 2
*****        OTHERS                   = 3.
*****    IF sy-subrc <> 0.
****** Implement suitable error handling here
*****      RETURN.
*****    ELSE.
*****      DATA lv_menge TYPE menge_d.
*****      LOOP AT it_mdezx ASSIGNING FIELD-SYMBOL(<md>) WHERE delkz = 'AR' AND dat00 <= ch_eban-lfdat.
*****        lv_menge = abs( <md>-mng02 ).
*****        IF lv_menge = ch_eban-menge.
*****          "Hemos encontrado la necesidad
*****          DATA(lv_found) = abap_true.
*****          EXIT.
*****        ENDIF.
*****      ENDLOOP.
*****      IF sy-subrc = 0 AND lv_found = abap_true.
*****        "Buscamos la OF y el pedido en el centro origen de la necesidad
*****        DATA: lv_matnr_sem TYPE marc-matnr,
*****              lv_werks_sem TYPE marc-werks,
*****              it_mdezx_sem TYPE TABLE OF mdez.
*****
*****        lv_matnr_sem = <md>-extra.
*****        lv_werks_sem = ch_eban-werks.
*****
*****        FREE it_mdezx_sem.
*****
*****        CALL FUNCTION 'MD_STOCK_REQUIREMENTS_LIST_API'
*****          EXPORTING
******           PLSCN                    =
*****            matnr                    = lv_matnr_sem
*****            werks                    = lv_werks_sem
******           BERID                    =
******           ERGBZ                    =
******           AFIBZ                    =
******           INPER                    =
******           DISPLAY_LIST_MDPSX       =
******           DISPLAY_LIST_MDEZX       =
******           DISPLAY_LIST_MDSUX       =
******           NOBUF                    =
******           PLAUF                    =
******           I_VRFWE                  =
******           IS_SFILT                 =
******           IS_AFILT                 =
******           IV_FILL_MDSTA            = 'X'
******   IMPORTING
******           E_MT61D                  =
******           E_MDKP                   =
******           E_CM61M                  =
******           E_MDSTA                  =
******           E_ERGBZ                  =
*****          TABLES
******           MDPSX                    =
*****            mdezx                    = it_mdezx_sem
******           MDSUX                    =
*****          EXCEPTIONS
*****            material_plant_not_found = 1
*****            plant_not_found          = 2
*****            OTHERS                   = 3.
*****        IF sy-subrc <> 0.
****** Implement suitable error handling here
*****          RETURN.
*****        ELSE.
*****
*****          DATA(it_mdezx_aux) = it_mdezx_sem[].
*****          DATA lv_vbeln TYPE vbeln.
*****
*****          LOOP AT it_mdezx_sem ASSIGNING FIELD-SYMBOL(<mdz2>) WHERE delkz EQ 'VC'.
*****            DATA(lv_id) = sy-tabix.
*****            lv_vbeln = <mdz2>-extra.
*****            READ TABLE it_mdezx WITH KEY extra(10) = lv_vbeln delkz = 'KB' TRANSPORTING NO FIELDS.
*****            IF sy-subrc = 0.
*****              DELETE it_mdezx INDEX lv_id.
*****              CONTINUE.
*****            ENDIF.
*****          ENDLOOP.
*****
*****          DELETE it_mdezx_sem WHERE dat00 <> im_mdps-dat00.
*****          LOOP AT it_mdezx_sem ASSIGNING FIELD-SYMBOL(<mdz>) WHERE delkz EQ 'VC'.
*****            ch_eban-zzvbeln = <mdz>-extra(10).
*****            ch_eban-zzposnr = <mdz>-extra+11(6).
*****            ch_changed = abap_true.
*****          ENDLOOP.
*****          IF sy-subrc <> 0.
*****            it_mdezx_sem[] = it_mdezx_aux[].
*****            DELETE it_mdezx_sem WHERE aussl <> 'U2'.
*****            DATA lv_menge_sem TYPE menge_d.
*****            CLEAR lv_menge_sem.
*****            DATA lv_aufnr TYPE aufnr.
*****            CLEAR lv_found.
*****            LOOP AT it_mdezx_sem ASSIGNING FIELD-SYMBOL(<sum>) WHERE delkz EQ 'FE' AND dat00 EQ im_mdps-umdat.
*****              lv_aufnr =  <sum>-extra.
*****              SELECT SINGLE bdmng INTO @DATA(lv_menge_suma) FROM resb WHERE matnr EQ @lv_matnr AND aufnr EQ @lv_aufnr AND xloek = @space.
*****              lv_menge_sem = lv_menge_sem + lv_menge_suma.
*****              CLEAR lv_menge_suma.
*****              IF lv_menge_sem = ch_eban-menge.
*****                lv_found = abap_true.
*****                EXIT.
*****              ENDIF.
*****            ENDLOOP.
*****            IF sy-subrc = 0 AND lv_found = abap_true.
*****              "Trazamos el origen de esta orden
*****              LOOP AT it_mdezx_aux ASSIGNING FIELD-SYMBOL(<mdz3>) WHERE delkz EQ 'VC'.
*****                DATA(lv_id2) = sy-tabix.
*****                lv_vbeln = <mdz3>-extra.
*****                READ TABLE it_mdezx_aux WITH KEY extra(10) = lv_vbeln delkz = 'KB' TRANSPORTING NO FIELDS.
*****                IF sy-subrc = 0.
*****                  DELETE it_mdezx_aux INDEX lv_id2.
*****                  CONTINUE.
*****                ENDIF.
*****              ENDLOOP.
*****              LOOP AT it_mdezx_aux ASSIGNING FIELD-SYMBOL(<mdz4>) WHERE delkz EQ 'VC'.
*****                ch_eban-zzvbeln = <mdz4>-extra(10).
*****                ch_eban-zzposnr = <mdz4>-extra+11(6).
*****                ch_changed = abap_true.
*****                EXIT.
*****              ENDLOOP.
*****            ENDIF.
*****          ENDIF.
*****        ENDIF.
*****      ENDIF.
*****    ENDIF.

  ENDMETHOD.
endclass. "ZCL_IM_SPP_MD_PURREQ_CHANG definition
endclass. "ZCL_IM_SPP_MD_PURREQ_CHANG implementation
